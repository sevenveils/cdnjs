!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define("darkmode-js",[],t):"object"==typeof exports?exports["darkmode-js"]=t():e["darkmode-js"]=t()}("undefined"!=typeof self?self:this,function(){return function(e){var t={};function n(o){if(t[o])return t[o].exports;var a=t[o]={i:o,l:!1,exports:{}};return e[o].call(a.exports,a,a.exports,n),a.l=!0,a.exports}return n.m=e,n.c=t,n.d=function(e,t,o){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:o})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(n.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var a in e)n.d(o,a,function(t){return e[t]}.bind(null,a));return o},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var o,a=(o=n(1))&&o.__esModule?o:{default:o};var r=a.default;t.default=r,function(e){e.Darkmode=a.default}(window),e.exports=t.default},function(e,t,n){"use strict";function o(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var a=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e);var n=t&&t.bottom?t.bottom:"32px",o=t&&t.right?t.right:"32px",a=t&&t.left?t.left:"unset",r=t&&t.time?t.time:"0.3s",d=t&&t.mixColor?t.mixColor:"#fff",i=t&&t.buttonColorDark?t.buttonColorDark:"#100f2c",s=t&&t.buttonColorLight?t.buttonColorLight:"#fff",l=!t||!1!==t.saveInCookies,c="\n      .darkmode-layer {\n        position: fixed;\n        pointer-events: none;\n        background: ".concat(d,";\n        transition: all ").concat(r," ease;\n        mix-blend-mode: difference;\n      }\n\n      .darkmode-layer--button {\n        width: 2.9rem;\n        height: 2.9rem;\n        border-radius: 50%;\n        right: ").concat(o,";\n        bottom: ").concat(n,";\n        left: ").concat(a,";\n      }\n\n      .darkmode-layer--simple {\n        width: 100vw;\n        height: 100vh;\n        top: 0;\n        left: 0;\n        transform: scale(1) !important;\n      }\n      \n      .darkmode-layer--expanded {\n        transform: scale(100);\n        border-radius: 0;\n      }\n\n      .darkmode-layer--no-transition {\n        transition: none;\n      }\n      \n      .darkmode-toggle {\n        background: ").concat(i,";\n        width: 3rem;\n        height: 3rem;\n        position: fixed;\n        border-radius: 50%;\n        right: ").concat(o,";\n        bottom: ").concat(n,";\n        left: ").concat(a,";\n        cursor: pointer;\n        transition: all 0.5s ease;\n      }\n      \n      .darkmode-toggle--white {\n        background: ").concat(s,";\n      }\n\n      .darkmode-background {\n        background: ").concat(d,";\n        position: fixed;\n        pointer-events: none;\n        z-index: -10;\n        width: 100vw;\n        height: 100vh;\n        top: 0;\n        left: 0;\n      }\n      \n      img, .darkmode-ignore {\n        isolation: isolate;\n        display: inline-block;\n      }\n    "),u=document.createElement("div"),m=document.createElement("div"),f=document.createElement("div");u.classList.add("darkmode-layer"),f.classList.add("darkmode-background"),!0===("true"===window.localStorage.getItem("darkmode"))&&l&&(u.classList.add("darkmode-layer--simple"),m.classList.add("darkmode-toggle--white"),document.body.classList.add("darkmode--activated")),document.body.insertBefore(m,document.body.firstChild),document.body.insertBefore(u,document.body.firstChild),document.body.insertBefore(f,document.body.firstChild),this.addStyle(c),this.button=m,this.layer=u,this.saveInCookies=l,this.time=r}var t,n,a;return t=e,(n=[{key:"addStyle",value:function(e){var t=document.createElement("link");t.setAttribute("rel","stylesheet"),t.setAttribute("type","text/css"),t.setAttribute("href","data:text/css;charset=UTF-8,"+encodeURIComponent(e)),document.head.appendChild(t)}},{key:"showWidget",value:function(){var e=this.button,t=this.layer,n=1e3*parseFloat(this.time);t.classList.contains("darkmode-layer--simple")&&this.saveInCookies&&(t.classList.remove("darkmode-layer--simple"),t.classList.add("darkmode-layer--expanded")),e.classList.add("darkmode-toggle"),t.classList.add("darkmode-layer--button"),e.addEventListener("click",function(){var o=document.body.classList.contains("darkmode--activated");o?(t.classList.remove("darkmode-layer--simple"),setTimeout(function(){t.classList.remove("darkmode-layer--no-transition"),t.classList.remove("darkmode-layer--expanded")},1)):(t.classList.add("darkmode-layer--expanded"),setTimeout(function(){t.classList.add("darkmode-layer--no-transition"),t.classList.add("darkmode-layer--simple")},n)),e.classList.toggle("darkmode-toggle--white"),document.body.classList.toggle("darkmode--activated"),window.localStorage.setItem("darkmode",!o)})}},{key:"toggle",value:function(){var e=this.layer,t=document.body.classList.contains("darkmode--activated");e.classList.toggle("darkmode-layer--simple"),document.body.classList.toggle("darkmode--activated"),window.localStorage.setItem("darkmode",!t)}}])&&o(t.prototype,n),a&&o(t,a),e}();t.default=a,e.exports=t.default}])});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,