{"version":3,"sources":["webpack://VideojsRecord.[name]/webpack/universalModuleDefinition","webpack://VideojsRecord.[name]/webpack/bootstrap","webpack://VideojsRecord.[name]/./src/js/plugins/vmsg-plugin.js","webpack://VideojsRecord.[name]/./node_modules/vmsg/vmsg.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","_vmsg","RecordEngine","videojs","getComponent","VmsgEngine","stream","mediaType","debug","_this","this","inputStream","config","wasmURL","audioWorkerURL","engine","Recorder","onRecordingAvailable","AudioContext","webkitAudioContext","audioContext","audioSourceNode","createMediaStreamSource","processor","createScriptProcessor","connect","initWorker","catch","err","player","trigger","blob","blobURL","URL","revokeObjectURL","worker","postMessage","type","data","sampleRate","onaudioprocess","onAudioProcess","destination","disconnect","undefined","event","samples","inputBuffer","getChannelData","onStopRecording","pad2","Math","min","inlineWorker","fetchAndInstantiateFallback","url","imports","Promise","resolve","reject","req","XMLHttpRequest","open","responseType","onload","WebAssembly","instantiate","response","onerror","send","memory","dynamicTop","sbrk","increment","oldDynamicTop","exit","status","FFI","ref","pcm_l","onmessage","e","msg","shimURL","then","self","bin","Uint8Array","mod","Module","Instance","test","testSafariWebAssemblyBug","importScripts","Memory","initial","TOTAL_MEMORY","maximum","pow","powf","exp","sqrtf","sqrt","cos","log","sin","Runtime","instantiateStreaming","fetch","credentials","message","indexOf","fetchAndInstantiate","env","wasm","instance","toString","rate","vmsg_init","pcm_l_ref","Uint32Array","buffer","Float32Array","set","vmsg_encode","length","vmsg_flush","mp3_ref","size","mp3","Blob","vmsg_free","__webpack_exports__","Form","record","[object Object]","opts","onStop","location","href","pitch","audioCtx","gainNode","pitchFX","encNode","workerURL","seal","close","terminate","navigator","mediaDevices","getUserMedia","constraints","oldGetUserMedia","webkitGetUserMedia","mozGetUserMedia","Error","audio","sourceNode","createGain","createGainNode","gain","Jungle","setPitchOffset","createJavaScriptNode","output","input","createObjectURL","Worker","console","error","initAudio","getTracks","forEach","track","stop","recorder","backdrop","popup","recordBtn","stopBtn","timer","saveBtn","tid","start","drawInit","drawAll","drawError","document","createElement","className","addEventListener","stopPropagation","progress","progressDot","appendChild","body","msecs","secs","round","textContent","clearAll","recordRow","startRecording","style","display","stopRecording","Audio","autoplay","paused","src","pause","drawTime","disabled","gainWrapper","gainSlider","setAttribute","max","step","onchange","pitchWrapper","pitchSlider","innerHTML","clearTimeout","remove","Date","now","updateTime","setTimeout","shown","result","delayTime","fadeTime","bufferTime","createDelayTimeBuffer","context","activeTime","shiftUp","length1","createBuffer","mod1","createBufferSource","mod2","mod3","mod4","shiftDownBuffer","shiftUpBuffer","loop","mod1Gain","mod2Gain","mod3Gain","mod4Gain","modGain1","modGain2","delay1","createDelay","createDelayNode","delay2","fade1","fade2","fadeBuffer","fadeLength","fadeIndex1","fadeIndex2","createFadeBuffer","mix1","mix2","currentTime","t2","setDelay","setTargetAtTime","mult","abs"],"mappings":"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","file":"videojs.record.vmsg.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"vmsg\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"vmsg\"] = factory();\n\telse\n\t\troot[\"VideojsRecord\"] = root[\"VideojsRecord\"] || {}, root[\"VideojsRecord\"][\"vmsg\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 23);\n","/**\n * @file vmsg-plugin.js\n * @since 3.3.0\n */\n\nimport {Recorder} from 'vmsg';\n\nconst RecordEngine = videojs.getComponent('RecordEngine');\n\n/**\n * Audio-only engine for the vmsg library.\n *\n * @class\n * @augments videojs.RecordEngine\n */\nclass VmsgEngine extends RecordEngine {\n    /**\n     * Setup recording engine.\n     *\n     * @param {LocalMediaStream} stream - Media stream to record.\n     * @param {Object} mediaType - Object describing the media type of this\n     *     engine.\n     * @param {Boolean} debug - Indicating whether or not debug messages should\n     *     be printed in the console.\n     */\n    setup(stream, mediaType, debug) {\n        this.inputStream = stream;\n        this.mediaType = mediaType;\n        this.debug = debug;\n\n        this.config = {\n            wasmURL: this.audioWorkerURL\n            // XXX: support shimURL?\n        };\n\n        this.engine = new Recorder(this.config,\n            this.onRecordingAvailable.bind(this));\n        this.engine.stream = this.inputStream;\n\n        let AudioContext = window.AudioContext || window.webkitAudioContext;\n        this.audioContext = new AudioContext();\n\n        this.audioSourceNode = this.audioContext.createMediaStreamSource(\n            this.inputStream);\n        // a bufferSize of 0 instructs the browser to choose the best bufferSize\n        this.processor = this.audioContext.createScriptProcessor(\n            0, 1, 1);\n        this.audioSourceNode.connect(this.processor);\n\n        this.engine.initWorker().catch((err) => {\n            // invalid message received\n            this.player().trigger('error', err);\n        });\n    }\n\n    /**\n     * Start recording.\n     */\n    start() {\n        this.engine.blob = null;\n        if (this.engine.blobURL) {\n            URL.revokeObjectURL(this.engine.blobURL);\n        }\n        this.engine.blobURL = null;\n\n        this.engine.worker.postMessage({\n            type: 'start',\n            data: this.audioContext.sampleRate\n        });\n        this.processor.onaudioprocess = this.onAudioProcess.bind(this);\n        this.processor.connect(this.audioContext.destination);\n    }\n\n    /**\n     * Stop recording.\n     */\n    stop() {\n        if (this.processor) {\n            this.processor.disconnect();\n            this.processor.onaudioprocess = null;\n        }\n        if (this.engine && this.engine.worker !== undefined) {\n            this.engine.worker.postMessage({type: 'stop', data: null});\n        }\n    }\n\n    /**\n     * Continuous encoding of audio data.\n     * @private\n     * @param {object} event - Audio buffer.\n     */\n    onAudioProcess(event) {\n        const samples = event.inputBuffer.getChannelData(0);\n        this.engine.worker.postMessage({type: 'data', data: samples});\n    }\n\n    /**\n     * @private\n     */\n    onRecordingAvailable() {\n        this.onStopRecording(this.engine.blob);\n    }\n}\n\n// expose plugin\nvideojs.VmsgEngine = VmsgEngine;\n\nexport default VmsgEngine;\n","/* eslint-disable */\n\nfunction pad2(n) {\n  n |= 0;\n  return n < 10 ? `0${n}` : `${Math.min(n, 99)}`;\n}\n\nfunction inlineWorker() {\n  // TODO(Kagami): Cache compiled module in IndexedDB? It works in FF\n  // and Edge, see: https://github.com/mdn/webassembly-examples/issues/4\n  // Though gzipped WASM module currently weights ~70kb so it should be\n  // perfectly cached by the browser itself.\n  function fetchAndInstantiate(url, imports) {\n    if (!WebAssembly.instantiateStreaming) return fetchAndInstantiateFallback(url, imports);\n    const req = fetch(url, {credentials: \"same-origin\"});\n    return WebAssembly.instantiateStreaming(req, imports).catch(err => {\n      // https://github.com/Kagami/vmsg/issues/11\n      if (err.message && err.message.indexOf(\"Argument 0 must be provided and must be a Response\") > 0) {\n        return fetchAndInstantiateFallback(url, imports);\n      } else {\n        throw err;\n      }\n    });\n  }\n\n  function fetchAndInstantiateFallback(url, imports) {\n    return new Promise((resolve, reject) => {\n      const req = new XMLHttpRequest();\n      req.open(\"GET\", url);\n      req.responseType = \"arraybuffer\";\n      req.onload = () => {\n        resolve(WebAssembly.instantiate(req.response, imports));\n      };\n      req.onerror = reject;\n      req.send();\n    });\n  }\n\n  // Must be in sync with emcc settings!\n  const TOTAL_STACK = 5 * 1024 * 1024;\n  const TOTAL_MEMORY = 16 * 1024 * 1024;\n  const WASM_PAGE_SIZE = 64 * 1024;\n  let memory = null;\n  let dynamicTop = TOTAL_STACK;\n  // TODO(Kagami): Grow memory?\n  function sbrk(increment) {\n    const oldDynamicTop = dynamicTop;\n    dynamicTop += increment;\n    return oldDynamicTop;\n  }\n  // TODO(Kagami): LAME calls exit(-1) on internal error. Would be nice\n  // to provide custom DEBUGF/ERRORF for easier debugging. Currenty\n  // those functions do nothing.\n  function exit(status) {\n    postMessage({type: \"internal-error\", data: status});\n  }\n\n  let FFI = null;\n  let ref = null;\n  let pcm_l = null;\n  function vmsg_init(rate) {\n    ref = FFI.vmsg_init(rate);\n    if (!ref) return false;\n    const pcm_l_ref = new Uint32Array(memory.buffer, ref, 1)[0];\n    pcm_l = new Float32Array(memory.buffer, pcm_l_ref);\n    return true;\n  }\n  function vmsg_encode(data) {\n    pcm_l.set(data);\n    return FFI.vmsg_encode(ref, data.length) >= 0;\n  }\n  function vmsg_flush() {\n    if (FFI.vmsg_flush(ref) < 0) return null;\n    const mp3_ref = new Uint32Array(memory.buffer, ref + 4, 1)[0];\n    const size = new Uint32Array(memory.buffer, ref + 8, 1)[0];\n    const mp3 = new Uint8Array(memory.buffer, mp3_ref, size);\n    const blob = new Blob([mp3], {type: \"audio/mpeg\"});\n    FFI.vmsg_free(ref);\n    ref = null;\n    pcm_l = null;\n    return blob;\n  }\n\n  // https://github.com/brion/min-wasm-fail\n  function testSafariWebAssemblyBug() {\n    const bin = new Uint8Array([0,97,115,109,1,0,0,0,1,6,1,96,1,127,1,127,3,2,1,0,5,3,1,0,1,7,8,1,4,116,101,115,116,0,0,10,16,1,14,0,32,0,65,1,54,2,0,32,0,40,2,0,11]);\n    const mod = new WebAssembly.Module(bin);\n    const inst = new WebAssembly.Instance(mod, {});\n    // test storing to and loading from a non-zero location via a parameter.\n    // Safari on iOS 11.2.5 returns 0 unexpectedly at non-zero locations\n    return (inst.exports.test(4) !== 0);\n  }\n\n  onmessage = (e) => {\n    const msg = e.data;\n    switch (msg.type) {\n    case \"init\":\n      const { wasmURL, shimURL } = msg.data;\n      Promise.resolve().then(() => {\n        if (self.WebAssembly && !testSafariWebAssemblyBug()) {\n          delete self.WebAssembly;\n        }\n        if (!self.WebAssembly) {\n          importScripts(shimURL);\n        }\n        memory = new WebAssembly.Memory({\n          initial: TOTAL_MEMORY / WASM_PAGE_SIZE,\n          maximum: TOTAL_MEMORY / WASM_PAGE_SIZE,\n        });\n        return {\n          memory: memory,\n          pow: Math.pow,\n          exit: exit,\n          powf: Math.pow,\n          exp: Math.exp,\n          sqrtf: Math.sqrt,\n          cos: Math.cos,\n          log: Math.log,\n          sin: Math.sin,\n          sbrk: sbrk,\n        };\n      }).then(Runtime => {\n        return fetchAndInstantiate(wasmURL, {env: Runtime})\n      }).then(wasm => {\n        FFI = wasm.instance.exports;\n        postMessage({type: \"init\", data: null});\n      }).catch(err => {\n        postMessage({type: \"init-error\", data: err.toString()});\n      });\n      break;\n    case \"start\":\n      if (!vmsg_init(msg.data)) return postMessage({type: \"error\", data: \"vmsg_init\"});\n      break;\n    case \"data\":\n      if (!vmsg_encode(msg.data)) return postMessage({type: \"error\", data: \"vmsg_encode\"});\n      break;\n    case \"stop\":\n      const blob = vmsg_flush();\n      if (!blob) return postMessage({type: \"error\", data: \"vmsg_flush\"});\n      postMessage({type: \"stop\", data: blob});\n      break;\n    }\n  };\n}\n\nexport class Recorder {\n  constructor(opts = {}, onStop = null) {\n    // Can't use relative URL in blob worker, see:\n    // https://stackoverflow.com/a/22582695\n    this.wasmURL = new URL(opts.wasmURL || \"/static/js/vmsg.wasm\", location).href;\n    this.shimURL = new URL(opts.shimURL || \"/static/js/wasm-polyfill.js\", location).href;\n    this.onStop = onStop;\n    this.pitch = opts.pitch || 0;\n    this.stream = null;\n    this.audioCtx = null;\n    this.gainNode = null;\n    this.pitchFX = null;\n    this.encNode = null;\n    this.worker = null;\n    this.workerURL = null;\n    this.blob = null;\n    this.blobURL = null;\n    this.resolve = null;\n    this.reject = null;\n    Object.seal(this);\n  }\n\n  close() {\n    if (this.encNode) this.encNode.disconnect();\n    if (this.encNode) this.encNode.onaudioprocess = null;\n    if (this.audioCtx) this.audioCtx.close();\n    if (this.worker) this.worker.terminate();\n    if (this.workerURL) URL.revokeObjectURL(this.workerURL);\n    if (this.blobURL) URL.revokeObjectURL(this.blobURL);\n  }\n\n  // Without pitch shift:\n  //   [sourceNode] -> [gainNode] -> [encNode] -> [audioCtx.destination]\n  //                                     |\n  //                                     -> [worker]\n  // With pitch shift:\n  //   [sourceNode] -> [gainNode] -> [pitchFX] -> [encNode] -> [audioCtx.destination]\n  //                                                  |\n  //                                                  -> [worker]\n  initAudio() {\n    const getUserMedia = navigator.mediaDevices && navigator.mediaDevices.getUserMedia\n      ? function(constraints) {\n          return navigator.mediaDevices.getUserMedia(constraints);\n        }\n      : function(constraints) {\n          const oldGetUserMedia = navigator.webkitGetUserMedia || navigator.mozGetUserMedia;\n          if (!oldGetUserMedia) {\n            return Promise.reject(new Error(\"getUserMedia is not implemented in this browser\"));\n          }\n          return new Promise(function(resolve, reject) {\n            oldGetUserMedia.call(navigator, constraints, resolve, reject);\n          });\n        };\n\n    return getUserMedia({audio: true}).then((stream) => {\n      this.stream = stream;\n      const audioCtx = this.audioCtx = new (window.AudioContext\n        || window.webkitAudioContext)();\n\n      const sourceNode = audioCtx.createMediaStreamSource(stream);\n      const gainNode = this.gainNode = (audioCtx.createGain\n        || audioCtx.createGainNode).call(audioCtx);\n      gainNode.gain.value = 1;\n      sourceNode.connect(gainNode);\n\n      const pitchFX = this.pitchFX = new Jungle(audioCtx);\n      pitchFX.setPitchOffset(this.pitch);\n\n      const encNode = this.encNode = (audioCtx.createScriptProcessor\n        || audioCtx.createJavaScriptNode).call(audioCtx, 0, 1, 1);\n      pitchFX.output.connect(encNode);\n\n      gainNode.connect(this.pitch === 0 ? encNode : pitchFX.input);\n    });\n  }\n\n  initWorker() {\n    if (!this.stream) throw new Error(\"missing audio initialization\");\n    // https://stackoverflow.com/a/19201292\n    const blob = new Blob(\n      [\"(\", inlineWorker.toString(), \")()\"],\n      {type: \"application/javascript\"});\n    const workerURL = this.workerURL = URL.createObjectURL(blob);\n    const worker = this.worker = new Worker(workerURL);\n    const { wasmURL, shimURL } = this;\n    worker.postMessage({type: \"init\", data: {wasmURL, shimURL}});\n    return new Promise((resolve, reject) => {\n      worker.onmessage = (e) => {\n        const msg = e.data;\n        switch (msg.type) {\n        case \"init\":\n          resolve();\n          break;\n        case \"init-error\":\n          reject(new Error(msg.data));\n          break;\n        // TODO(Kagami): Error handling.\n        case \"error\":\n        case \"internal-error\":\n          console.error(\"Worker error:\", msg.data);\n          if (this.reject) this.reject(msg.data);\n          break;\n        case \"stop\":\n          this.blob = msg.data;\n          this.blobURL = URL.createObjectURL(msg.data);\n          if (this.onStop) this.onStop();\n          if (this.resolve) this.resolve(this.blob);\n          break;\n        }\n      }\n    });\n  }\n\n  init() {\n    return this.initAudio().then(this.initWorker.bind(this));\n  }\n\n  startRecording() {\n    if (!this.stream) throw new Error(\"missing audio initialization\");\n    if (!this.worker) throw new Error(\"missing worker initialization\");\n    this.blob = null;\n    if (this.blobURL) URL.revokeObjectURL(this.blobURL);\n    this.blobURL = null;\n    this.resolve = null;\n    this.reject = null;\n    this.worker.postMessage({type: \"start\", data: this.audioCtx.sampleRate});\n    this.encNode.onaudioprocess = (e) => {\n      const samples = e.inputBuffer.getChannelData(0);\n      this.worker.postMessage({type: \"data\", data: samples});\n    };\n    this.encNode.connect(this.audioCtx.destination);\n  }\n\n  stopRecording() {\n    if (!this.stream) throw new Error(\"missing audio initialization\");\n    if (!this.worker) throw new Error(\"missing worker initialization\");\n    this.encNode.disconnect();\n    this.encNode.onaudioprocess = null;\n    // Might be missed in Safari and old FF/Chrome per MDN.\n    if (this.stream.getTracks) {\n      // Hide browser's recording indicator.\n      this.stream.getTracks().forEach((track) => track.stop());\n    }\n    this.worker.postMessage({type: \"stop\", data: null});\n    return new Promise((resolve, reject) => {\n      this.resolve = resolve;\n      this.reject = reject;\n    });\n  }\n}\n\nexport class Form {\n  constructor(opts = {}, resolve, reject) {\n    this.recorder = new Recorder(opts, this.onStop.bind(this));\n    this.resolve = resolve;\n    this.reject = reject;\n    this.backdrop = null;\n    this.popup = null;\n    this.recordBtn = null;\n    this.stopBtn = null;\n    this.timer = null;\n    this.audio = null;\n    this.saveBtn = null;\n    this.tid = 0;\n    this.start = 0;\n    Object.seal(this);\n\n    this.recorder.initAudio()\n      .then(() => this.drawInit())\n      .then(() => this.recorder.initWorker())\n      .then(() => this.drawAll())\n      .catch((err) => this.drawError(err));\n  }\n\n  drawInit() {\n    if (this.backdrop) return;\n    const backdrop = this.backdrop = document.createElement(\"div\");\n    backdrop.className = \"vmsg-backdrop\";\n    backdrop.addEventListener(\"click\", () => this.close(null));\n\n    const popup = this.popup = document.createElement(\"div\");\n    popup.className = \"vmsg-popup\";\n    popup.addEventListener(\"click\", (e) => e.stopPropagation());\n\n    const progress = document.createElement(\"div\");\n    progress.className = \"vmsg-progress\";\n    for (let i = 0; i < 3; i++) {\n      const progressDot = document.createElement(\"div\");\n      progressDot.className = \"vmsg-progress-dot\";\n      progress.appendChild(progressDot);\n    }\n    popup.appendChild(progress);\n\n    backdrop.appendChild(popup);\n    document.body.appendChild(backdrop);\n  }\n\n  drawTime(msecs) {\n    const secs = Math.round(msecs / 1000);\n    this.timer.textContent = pad2(secs / 60) + \":\" + pad2(secs % 60);\n  }\n\n  drawAll() {\n    this.drawInit();\n    this.clearAll();\n\n    const recordRow = document.createElement(\"div\");\n    recordRow.className = \"vmsg-record-row\";\n    this.popup.appendChild(recordRow);\n\n    const recordBtn = this.recordBtn = document.createElement(\"button\");\n    recordBtn.className = \"vmsg-button vmsg-record-button\";\n    recordBtn.textContent = \"●\";\n    recordBtn.addEventListener(\"click\", () => this.startRecording());\n    recordRow.appendChild(recordBtn);\n\n    const stopBtn = this.stopBtn = document.createElement(\"button\");\n    stopBtn.className = \"vmsg-button vmsg-stop-button\";\n    stopBtn.style.display = \"none\";\n    stopBtn.textContent = \"■\";\n    stopBtn.addEventListener(\"click\", () => this.stopRecording());\n    recordRow.appendChild(stopBtn);\n\n    const audio = this.audio = new Audio();\n    audio.autoplay = true;\n\n    const timer = this.timer = document.createElement(\"span\");\n    timer.className = \"vmsg-timer\";\n    timer.addEventListener(\"click\", () => {\n      if (audio.paused) {\n        if (this.recorder.blobURL) {\n          audio.src = this.recorder.blobURL;\n        }\n      } else {\n        audio.pause();\n      }\n    });\n    this.drawTime(0);\n    recordRow.appendChild(timer);\n\n    const saveBtn = this.saveBtn = document.createElement(\"button\");\n    saveBtn.className = \"vmsg-button vmsg-save-button\";\n    saveBtn.textContent = \"✓\";\n    saveBtn.disabled = true;\n    saveBtn.addEventListener(\"click\", () => this.close(this.recorder.blob));\n    recordRow.appendChild(saveBtn);\n\n    const gainWrapper = document.createElement(\"div\");\n    gainWrapper.className = \"vmsg-slider-wrapper vmsg-gain-slider-wrapper\";\n    const gainSlider = document.createElement(\"input\");\n    gainSlider.className = \"vmsg-slider vmsg-gain-slider\";\n    gainSlider.setAttribute(\"type\", \"range\");\n    gainSlider.min = 0;\n    gainSlider.max = 2;\n    gainSlider.step = 0.2;\n    gainSlider.value = 1;\n    gainSlider.onchange = () => {\n      const gain = +gainSlider.value;\n      this.recorder.gainNode.gain.value = gain;\n    };\n    gainWrapper.appendChild(gainSlider);\n    this.popup.appendChild(gainWrapper);\n\n    const pitchWrapper = document.createElement(\"div\");\n    pitchWrapper.className = \"vmsg-slider-wrapper vmsg-pitch-slider-wrapper\";\n    const pitchSlider = document.createElement(\"input\");\n    pitchSlider.className = \"vmsg-slider vmsg-pitch-slider\";\n    pitchSlider.setAttribute(\"type\", \"range\");\n    pitchSlider.min = -1;\n    pitchSlider.max = 1;\n    pitchSlider.step = 0.2;\n    pitchSlider.value = this.recorder.pitch;\n    pitchSlider.onchange = () => {\n      const pitch = +pitchSlider.value;\n      this.recorder.pitchFX.setPitchOffset(pitch);\n      this.recorder.gainNode.disconnect();\n      this.recorder.gainNode.connect(\n        pitch === 0 ? this.recorder.encNode : this.recorder.pitchFX.input\n      );\n    };\n    pitchWrapper.appendChild(pitchSlider);\n    this.popup.appendChild(pitchWrapper);\n  }\n\n  drawError(err) {\n    console.error(err);\n    this.drawInit();\n    this.clearAll();\n    const error = document.createElement(\"div\");\n    error.className = \"vmsg-error\";\n    error.textContent = err.toString();\n    this.popup.appendChild(error);\n  }\n\n  clearAll() {\n    if (!this.popup) return;\n    this.popup.innerHTML = \"\";\n  }\n\n  close(blob) {\n    if (this.audio) this.audio.pause();\n    if (this.tid) clearTimeout(this.tid);\n    this.recorder.close();\n    this.backdrop.remove();\n    if (blob) {\n      this.resolve(blob);\n    } else {\n      this.reject(new Error(\"No record made\"));\n    }\n  }\n\n  onStop() {\n    this.recordBtn.style.display = \"\";\n    this.stopBtn.style.display = \"none\";\n    this.stopBtn.disabled = false;\n    this.saveBtn.disabled = false;\n  }\n\n  startRecording() {\n    this.audio.pause();\n    this.start = Date.now();\n    this.updateTime();\n    this.recordBtn.style.display = \"none\";\n    this.stopBtn.style.display = \"\";\n    this.saveBtn.disabled = true;\n    this.recorder.startRecording();\n  }\n\n  stopRecording() {\n    clearTimeout(this.tid);\n    this.tid = 0;\n    this.stopBtn.disabled = true;\n    this.recorder.stopRecording();\n  }\n\n  updateTime() {\n    // NOTE(Kagami): We can do this in `onaudioprocess` but that would\n    // run too often and create unnecessary DOM updates.\n    this.drawTime(Date.now() - this.start);\n    this.tid = setTimeout(() => this.updateTime(), 300);\n  }\n}\n\nlet shown = false;\n\n/**\n * Record a new voice message.\n *\n * @param {Object=} opts - Options\n * @param {string=} opts.wasmURL - URL of the module\n *                                 (\"/static/js/vmsg.wasm\" by default)\n * @param {string=} opts.shimURL - URL of the WebAssembly polyfill\n *                                 (\"/static/js/wasm-polyfill.js\" by default)\n * @param {number=} opts.pitch - Initial pitch shift ([-1, 1], 0 by default)\n * @return {Promise.<Blob>} A promise that contains recorded blob when fulfilled.\n */\nexport function record(opts) {\n  return new Promise((resolve, reject) => {\n    if (shown) throw new Error(\"Record form is already opened\");\n    shown = true;\n    new Form(opts, resolve, reject);\n  // Use `.finally` once it's available in Safari and Edge.\n  }).then(result => {\n    shown = false;\n    return result;\n  }, err => {\n    shown = false;\n    throw err;\n  });\n}\n\n/**\n * All available public items.\n */\nexport default { Recorder, Form, record };\n\n// Borrowed from and slightly modified:\n// https://github.com/cwilso/Audio-Input-Effects/blob/master/js/jungle.js\n\n// Copyright 2012, Google Inc.\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n//     * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n//     * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n//     * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nconst delayTime = 0.100;\nconst fadeTime = 0.050;\nconst bufferTime = 0.100;\n\nfunction createFadeBuffer(context, activeTime, fadeTime) {\n  var length1 = activeTime * context.sampleRate;\n  var length2 = (activeTime - 2*fadeTime) * context.sampleRate;\n  var length = length1 + length2;\n  var buffer = context.createBuffer(1, length, context.sampleRate);\n  var p = buffer.getChannelData(0);\n\n  var fadeLength = fadeTime * context.sampleRate;\n\n  var fadeIndex1 = fadeLength;\n  var fadeIndex2 = length1 - fadeLength;\n\n  // 1st part of cycle\n  for (var i = 0; i < length1; ++i) {\n    var value;\n\n    if (i < fadeIndex1) {\n        value = Math.sqrt(i / fadeLength);\n    } else if (i >= fadeIndex2) {\n        value = Math.sqrt(1 - (i - fadeIndex2) / fadeLength);\n    } else {\n        value = 1;\n    }\n\n    p[i] = value;\n  }\n\n  // 2nd part\n  for (var i = length1; i < length; ++i) {\n    p[i] = 0;\n  }\n\n  return buffer;\n}\n\nfunction createDelayTimeBuffer(context, activeTime, fadeTime, shiftUp) {\n  var length1 = activeTime * context.sampleRate;\n  var length2 = (activeTime - 2*fadeTime) * context.sampleRate;\n  var length = length1 + length2;\n  var buffer = context.createBuffer(1, length, context.sampleRate);\n  var p = buffer.getChannelData(0);\n\n  // 1st part of cycle\n  for (var i = 0; i < length1; ++i) {\n    if (shiftUp)\n      // This line does shift-up transpose\n      p[i] = (length1-i)/length;\n    else\n      // This line does shift-down transpose\n      p[i] = i / length1;\n  }\n\n  // 2nd part\n  for (var i = length1; i < length; ++i) {\n    p[i] = 0;\n  }\n\n  return buffer;\n}\n\nfunction Jungle(context) {\n  this.context = context;\n  // Create nodes for the input and output of this \"module\".\n  var input = (context.createGain || context.createGainNode).call(context);\n  var output = (context.createGain || context.createGainNode).call(context);\n  this.input = input;\n  this.output = output;\n\n  // Delay modulation.\n  var mod1 = context.createBufferSource();\n  var mod2 = context.createBufferSource();\n  var mod3 = context.createBufferSource();\n  var mod4 = context.createBufferSource();\n  this.shiftDownBuffer = createDelayTimeBuffer(context, bufferTime, fadeTime, false);\n  this.shiftUpBuffer = createDelayTimeBuffer(context, bufferTime, fadeTime, true);\n  mod1.buffer = this.shiftDownBuffer;\n  mod2.buffer = this.shiftDownBuffer;\n  mod3.buffer = this.shiftUpBuffer;\n  mod4.buffer = this.shiftUpBuffer;\n  mod1.loop = true;\n  mod2.loop = true;\n  mod3.loop = true;\n  mod4.loop = true;\n\n  // for switching between oct-up and oct-down\n  var mod1Gain = (context.createGain || context.createGainNode).call(context);\n  var mod2Gain = (context.createGain || context.createGainNode).call(context);\n  var mod3Gain = (context.createGain || context.createGainNode).call(context);\n  mod3Gain.gain.value = 0;\n  var mod4Gain = (context.createGain || context.createGainNode).call(context);\n  mod4Gain.gain.value = 0;\n\n  mod1.connect(mod1Gain);\n  mod2.connect(mod2Gain);\n  mod3.connect(mod3Gain);\n  mod4.connect(mod4Gain);\n\n  // Delay amount for changing pitch.\n  var modGain1 = (context.createGain || context.createGainNode).call(context);\n  var modGain2 = (context.createGain || context.createGainNode).call(context);\n\n  var delay1 = (context.createDelay || context.createDelayNode).call(context);\n  var delay2 = (context.createDelay || context.createDelayNode).call(context);\n  mod1Gain.connect(modGain1);\n  mod2Gain.connect(modGain2);\n  mod3Gain.connect(modGain1);\n  mod4Gain.connect(modGain2);\n  modGain1.connect(delay1.delayTime);\n  modGain2.connect(delay2.delayTime);\n\n  // Crossfading.\n  var fade1 = context.createBufferSource();\n  var fade2 = context.createBufferSource();\n  var fadeBuffer = createFadeBuffer(context, bufferTime, fadeTime);\n  fade1.buffer = fadeBuffer\n  fade2.buffer = fadeBuffer;\n  fade1.loop = true;\n  fade2.loop = true;\n\n  var mix1 = (context.createGain || context.createGainNode).call(context);\n  var mix2 = (context.createGain || context.createGainNode).call(context);\n  mix1.gain.value = 0;\n  mix2.gain.value = 0;\n\n  fade1.connect(mix1.gain);\n  fade2.connect(mix2.gain);\n\n  // Connect processing graph.\n  input.connect(delay1);\n  input.connect(delay2);\n  delay1.connect(mix1);\n  delay2.connect(mix2);\n  mix1.connect(output);\n  mix2.connect(output);\n\n  // Start\n  var t = context.currentTime + 0.050;\n  var t2 = t + bufferTime - fadeTime;\n  mod1.start(t);\n  mod2.start(t2);\n  mod3.start(t);\n  mod4.start(t2);\n  fade1.start(t);\n  fade2.start(t2);\n\n  this.mod1 = mod1;\n  this.mod2 = mod2;\n  this.mod1Gain = mod1Gain;\n  this.mod2Gain = mod2Gain;\n  this.mod3Gain = mod3Gain;\n  this.mod4Gain = mod4Gain;\n  this.modGain1 = modGain1;\n  this.modGain2 = modGain2;\n  this.fade1 = fade1;\n  this.fade2 = fade2;\n  this.mix1 = mix1;\n  this.mix2 = mix2;\n  this.delay1 = delay1;\n  this.delay2 = delay2;\n\n  this.setDelay(delayTime);\n}\n\nJungle.prototype.setDelay = function(delayTime) {\n  this.modGain1.gain.setTargetAtTime(0.5*delayTime, 0, 0.010);\n  this.modGain2.gain.setTargetAtTime(0.5*delayTime, 0, 0.010);\n};\n\nJungle.prototype.setPitchOffset = function(mult) {\n  if (mult>0) { // pitch up\n    this.mod1Gain.gain.value = 0;\n    this.mod2Gain.gain.value = 0;\n    this.mod3Gain.gain.value = 1;\n    this.mod4Gain.gain.value = 1;\n  } else { // pitch down\n    this.mod1Gain.gain.value = 1;\n    this.mod2Gain.gain.value = 1;\n    this.mod3Gain.gain.value = 0;\n    this.mod4Gain.gain.value = 0;\n  }\n  this.setDelay(delayTime*Math.abs(mult));\n};\n"],"sourceRoot":""}