/*!
 * videojs-record
 * @version 3.4.3
 * @see https://github.com/collab-project/videojs-record
 * @copyright 2014-2019 Collab
 * @license MIT
 */
(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory(require("videojs"));
	else if(typeof define === 'function' && define.amd)
		define("VideojsRecord", ["videojs"], factory);
	else if(typeof exports === 'object')
		exports["VideojsRecord"] = factory(require("videojs"));
	else
		root["VideojsRecord"] = factory(root["videojs"]);
})(window, function(__WEBPACK_EXTERNAL_MODULE_video_js__) {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ({

/***/ "./node_modules/global/window.js":
/*!***************************************!*\
  !*** ./node_modules/global/window.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(global) {var win;\n\nif (typeof window !== \"undefined\") {\n    win = window;\n} else if (typeof global !== \"undefined\") {\n    win = global;\n} else if (typeof self !== \"undefined\"){\n    win = self;\n} else {\n    win = {};\n}\n\nmodule.exports = win;\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\")))\n\n//# sourceURL=webpack://VideojsRecord/./node_modules/global/window.js?");

/***/ }),

/***/ "./node_modules/webpack/buildin/global.js":
/*!***********************************!*\
  !*** (webpack)/buildin/global.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n\n\n//# sourceURL=webpack://VideojsRecord/(webpack)/buildin/global.js?");

/***/ }),

/***/ "./src/css/videojs.record.scss":
/*!*************************************!*\
  !*** ./src/css/videojs.record.scss ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// extracted by mini-css-extract-plugin\n\n//# sourceURL=webpack://VideojsRecord/./src/css/videojs.record.scss?");

/***/ }),

/***/ "./src/js/controls/animation-display.js":
/*!**********************************************!*\
  !*** ./src/js/controls/animation-display.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _video = _interopRequireDefault(__webpack_require__(/*! video.js */ \"video.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nvar Component = _video.default.getComponent('Component');\n\nvar AnimationDisplay = function (_Component) {\n  _inherits(AnimationDisplay, _Component);\n\n  function AnimationDisplay() {\n    _classCallCheck(this, AnimationDisplay);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(AnimationDisplay).apply(this, arguments));\n  }\n\n  _createClass(AnimationDisplay, [{\n    key: \"createEl\",\n    value: function createEl() {\n      return _get(_getPrototypeOf(AnimationDisplay.prototype), \"createEl\", this).call(this, 'div', {\n        className: 'vjs-animation-display',\n        innerHTML: '<img />'\n      });\n    }\n  }]);\n\n  return AnimationDisplay;\n}(Component);\n\nComponent.registerComponent('AnimationDisplay', AnimationDisplay);\nvar _default = AnimationDisplay;\nexports.default = _default;\nmodule.exports = exports.default;\n\n//# sourceURL=webpack://VideojsRecord/./src/js/controls/animation-display.js?");

/***/ }),

/***/ "./src/js/controls/camera-button.js":
/*!******************************************!*\
  !*** ./src/js/controls/camera-button.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _video = _interopRequireDefault(__webpack_require__(/*! video.js */ \"video.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nvar Button = _video.default.getComponent('Button');\n\nvar Component = _video.default.getComponent('Component');\n\nvar CameraButton = function (_Button) {\n  _inherits(CameraButton, _Button);\n\n  function CameraButton() {\n    _classCallCheck(this, CameraButton);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(CameraButton).apply(this, arguments));\n  }\n\n  _createClass(CameraButton, [{\n    key: \"buildCSSClass\",\n    value: function buildCSSClass() {\n      return 'vjs-camera-button vjs-control vjs-button vjs-icon-photo-camera';\n    }\n  }, {\n    key: \"enable\",\n    value: function enable() {\n      _get(_getPrototypeOf(CameraButton.prototype), \"enable\", this).call(this);\n\n      this.on(this.player_, 'startRecord', this.onStart);\n      this.on(this.player_, 'stopRecord', this.onStop);\n    }\n  }, {\n    key: \"disable\",\n    value: function disable() {\n      _get(_getPrototypeOf(CameraButton.prototype), \"disable\", this).call(this);\n\n      this.off(this.player_, 'startRecord', this.onStart);\n      this.off(this.player_, 'stopRecord', this.onStop);\n    }\n  }, {\n    key: \"show\",\n    value: function show() {\n      if (this.layoutExclude && this.layoutExclude === true) {\n        return;\n      }\n\n      _get(_getPrototypeOf(CameraButton.prototype), \"show\", this).call(this);\n    }\n  }, {\n    key: \"handleClick\",\n    value: function handleClick(event) {\n      var recorder = this.player_.record();\n\n      if (!recorder.isProcessing()) {\n        recorder.start();\n      } else {\n        recorder.retrySnapshot();\n        this.onStop();\n      }\n    }\n  }, {\n    key: \"onStart\",\n    value: function onStart(event) {\n      this.removeClass('vjs-icon-photo-camera');\n      this.addClass('vjs-icon-replay');\n      this.controlText('Retry');\n    }\n  }, {\n    key: \"onStop\",\n    value: function onStop(event) {\n      this.removeClass('vjs-icon-replay');\n      this.addClass('vjs-icon-photo-camera');\n      this.controlText('Image');\n    }\n  }]);\n\n  return CameraButton;\n}(Button);\n\nCameraButton.prototype.controlText_ = 'Image';\nComponent.registerComponent('CameraButton', CameraButton);\nvar _default = CameraButton;\nexports.default = _default;\nmodule.exports = exports.default;\n\n//# sourceURL=webpack://VideojsRecord/./src/js/controls/camera-button.js?");

/***/ }),

/***/ "./src/js/controls/device-button.js":
/*!******************************************!*\
  !*** ./src/js/controls/device-button.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _video = _interopRequireDefault(__webpack_require__(/*! video.js */ \"video.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nvar Button = _video.default.getComponent('Button');\n\nvar Component = _video.default.getComponent('Component');\n\nvar DeviceButton = function (_Button) {\n  _inherits(DeviceButton, _Button);\n\n  function DeviceButton() {\n    _classCallCheck(this, DeviceButton);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(DeviceButton).apply(this, arguments));\n  }\n\n  _createClass(DeviceButton, [{\n    key: \"handleClick\",\n    value: function handleClick(event) {\n      this.player_.record().getDevice();\n    }\n  }, {\n    key: \"show\",\n    value: function show() {\n      if (this.layoutExclude && this.layoutExclude === true) {\n        return;\n      }\n\n      _get(_getPrototypeOf(DeviceButton.prototype), \"show\", this).call(this);\n    }\n  }]);\n\n  return DeviceButton;\n}(Button);\n\nDeviceButton.prototype.controlText_ = 'Device';\nComponent.registerComponent('DeviceButton', DeviceButton);\nvar _default = DeviceButton;\nexports.default = _default;\nmodule.exports = exports.default;\n\n//# sourceURL=webpack://VideojsRecord/./src/js/controls/device-button.js?");

/***/ }),

/***/ "./src/js/controls/record-canvas.js":
/*!******************************************!*\
  !*** ./src/js/controls/record-canvas.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _video = _interopRequireDefault(__webpack_require__(/*! video.js */ \"video.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nvar Component = _video.default.getComponent('Component');\n\nvar RecordCanvas = function (_Component) {\n  _inherits(RecordCanvas, _Component);\n\n  function RecordCanvas() {\n    _classCallCheck(this, RecordCanvas);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(RecordCanvas).apply(this, arguments));\n  }\n\n  _createClass(RecordCanvas, [{\n    key: \"createEl\",\n    value: function createEl() {\n      return _get(_getPrototypeOf(RecordCanvas.prototype), \"createEl\", this).call(this, 'div', {\n        className: 'vjs-record-canvas',\n        innerHTML: '<canvas></canvas>'\n      });\n    }\n  }]);\n\n  return RecordCanvas;\n}(Component);\n\nComponent.registerComponent('RecordCanvas', RecordCanvas);\nvar _default = RecordCanvas;\nexports.default = _default;\nmodule.exports = exports.default;\n\n//# sourceURL=webpack://VideojsRecord/./src/js/controls/record-canvas.js?");

/***/ }),

/***/ "./src/js/controls/record-indicator.js":
/*!*********************************************!*\
  !*** ./src/js/controls/record-indicator.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _video = _interopRequireDefault(__webpack_require__(/*! video.js */ \"video.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nvar Component = _video.default.getComponent('Component');\n\nvar RecordIndicator = function (_Component) {\n  _inherits(RecordIndicator, _Component);\n\n  function RecordIndicator(player, options) {\n    var _this;\n\n    _classCallCheck(this, RecordIndicator);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(RecordIndicator).call(this, player, options));\n\n    _this.enable();\n\n    return _this;\n  }\n\n  _createClass(RecordIndicator, [{\n    key: \"createEl\",\n    value: function createEl() {\n      return _get(_getPrototypeOf(RecordIndicator.prototype), \"createEl\", this).call(this, 'div', {\n        className: 'vjs-record-indicator vjs-control',\n        dir: 'ltr'\n      });\n    }\n  }, {\n    key: \"enable\",\n    value: function enable() {\n      this.on(this.player_, 'startRecord', this.show);\n      this.on(this.player_, 'stopRecord', this.hide);\n    }\n  }, {\n    key: \"disable\",\n    value: function disable() {\n      this.off(this.player_, 'startRecord', this.show);\n      this.off(this.player_, 'stopRecord', this.hide);\n    }\n  }, {\n    key: \"show\",\n    value: function show() {\n      if (this.layoutExclude && this.layoutExclude === true) {\n        return;\n      }\n\n      _get(_getPrototypeOf(RecordIndicator.prototype), \"show\", this).call(this);\n    }\n  }]);\n\n  return RecordIndicator;\n}(Component);\n\nComponent.registerComponent('RecordIndicator', RecordIndicator);\nvar _default = RecordIndicator;\nexports.default = _default;\nmodule.exports = exports.default;\n\n//# sourceURL=webpack://VideojsRecord/./src/js/controls/record-indicator.js?");

/***/ }),

/***/ "./src/js/controls/record-toggle.js":
/*!******************************************!*\
  !*** ./src/js/controls/record-toggle.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _video = _interopRequireDefault(__webpack_require__(/*! video.js */ \"video.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nvar Button = _video.default.getComponent('Button');\n\nvar Component = _video.default.getComponent('Component');\n\nvar RecordToggle = function (_Button) {\n  _inherits(RecordToggle, _Button);\n\n  function RecordToggle() {\n    _classCallCheck(this, RecordToggle);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(RecordToggle).apply(this, arguments));\n  }\n\n  _createClass(RecordToggle, [{\n    key: \"buildCSSClass\",\n    value: function buildCSSClass() {\n      return 'vjs-record-button vjs-control vjs-button vjs-icon-record-start';\n    }\n  }, {\n    key: \"enable\",\n    value: function enable() {\n      _get(_getPrototypeOf(RecordToggle.prototype), \"enable\", this).call(this);\n\n      this.on(this.player_, 'startRecord', this.onStart);\n      this.on(this.player_, 'stopRecord', this.onStop);\n    }\n  }, {\n    key: \"disable\",\n    value: function disable() {\n      _get(_getPrototypeOf(RecordToggle.prototype), \"disable\", this).call(this);\n\n      this.off(this.player_, 'startRecord', this.onStart);\n      this.off(this.player_, 'stopRecord', this.onStop);\n    }\n  }, {\n    key: \"show\",\n    value: function show() {\n      if (this.layoutExclude && this.layoutExclude === true) {\n        return;\n      }\n\n      _get(_getPrototypeOf(RecordToggle.prototype), \"show\", this).call(this);\n    }\n  }, {\n    key: \"handleClick\",\n    value: function handleClick(event) {\n      var recorder = this.player_.record();\n\n      if (!recorder.isRecording()) {\n        recorder.start();\n      } else {\n        recorder.stop();\n      }\n    }\n  }, {\n    key: \"onStart\",\n    value: function onStart(event) {\n      this.removeClass('vjs-icon-record-start');\n      this.addClass('vjs-icon-record-stop');\n      this.controlText('Stop');\n    }\n  }, {\n    key: \"onStop\",\n    value: function onStop(event) {\n      this.removeClass('vjs-icon-record-stop');\n      this.addClass('vjs-icon-record-start');\n      this.controlText('Record');\n    }\n  }]);\n\n  return RecordToggle;\n}(Button);\n\nRecordToggle.prototype.controlText_ = 'Record';\nComponent.registerComponent('RecordToggle', RecordToggle);\nvar _default = RecordToggle;\nexports.default = _default;\nmodule.exports = exports.default;\n\n//# sourceURL=webpack://VideojsRecord/./src/js/controls/record-toggle.js?");

/***/ }),

/***/ "./src/js/defaults.js":
/*!****************************!*\
  !*** ./src/js/defaults.js ***!
  \****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar pluginDefaultOptions = {\n  image: false,\n  audio: false,\n  video: false,\n  animation: false,\n  screen: false,\n  maxLength: 10,\n  maxFileSize: 0,\n  msDisplayMax: 3,\n  frameWidth: 320,\n  frameHeight: 240,\n  debug: false,\n  autoMuteDevice: false,\n  videoMimeType: 'video/webm',\n  videoRecorderType: 'auto',\n  audioEngine: 'recordrtc',\n  audioRecorderType: 'auto',\n  audioMimeType: 'auto',\n  audioBufferSize: 4096,\n  audioSampleRate: 44100,\n  audioBitRate: 128,\n  audioChannels: 2,\n  audioWorkerURL: '',\n  audioBufferUpdate: false,\n  animationFrameRate: 200,\n  animationQuality: 10,\n  timeSlice: 0,\n  convertEngine: ''\n};\nvar _default = pluginDefaultOptions;\nexports.default = _default;\nmodule.exports = exports.default;\n\n//# sourceURL=webpack://VideojsRecord/./src/js/defaults.js?");

/***/ }),

/***/ "./src/js/engine/convert-engine.js":
/*!*****************************************!*\
  !*** ./src/js/engine/convert-engine.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TSEBML = exports.CONVERT_PLUGINS = exports.ConvertEngine = void 0;\n\nvar _video = _interopRequireDefault(__webpack_require__(/*! video.js */ \"video.js\"));\n\nvar _fileUtil = __webpack_require__(/*! ../utils/file-util */ \"./src/js/utils/file-util.js\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nvar Component = _video.default.getComponent('Component');\n\nvar TSEBML = 'ts-ebml';\nexports.TSEBML = TSEBML;\nvar CONVERT_PLUGINS = [TSEBML];\nexports.CONVERT_PLUGINS = CONVERT_PLUGINS;\n\nvar ConvertEngine = function (_Component) {\n  _inherits(ConvertEngine, _Component);\n\n  function ConvertEngine(player, options) {\n    _classCallCheck(this, ConvertEngine);\n\n    options.evented = true;\n    return _possibleConstructorReturn(this, _getPrototypeOf(ConvertEngine).call(this, player, options));\n  }\n\n  _createClass(ConvertEngine, [{\n    key: \"setup\",\n    value: function setup(mediaType, debug) {\n      this.mediaType = mediaType;\n      this.debug = debug;\n    }\n  }, {\n    key: \"loadBlob\",\n    value: function loadBlob(data) {\n      return (0, _fileUtil.blobToArrayBuffer)(data);\n    }\n  }, {\n    key: \"addFileInfo\",\n    value: function addFileInfo(fileObj, now) {\n      (0, _fileUtil.addFileInfo)(fileObj, now);\n    }\n  }]);\n\n  return ConvertEngine;\n}(Component);\n\nexports.ConvertEngine = ConvertEngine;\n_video.default.ConvertEngine = ConvertEngine;\nComponent.registerComponent('ConvertEngine', ConvertEngine);\n\n//# sourceURL=webpack://VideojsRecord/./src/js/engine/convert-engine.js?");

/***/ }),

/***/ "./src/js/engine/engine-loader.js":
/*!****************************************!*\
  !*** ./src/js/engine/engine-loader.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getConvertEngine = exports.isAudioPluginActive = exports.getAudioEngine = void 0;\n\nvar _recordRtc = _interopRequireDefault(__webpack_require__(/*! ./record-rtc */ \"./src/js/engine/record-rtc.js\"));\n\nvar _convertEngine = __webpack_require__(/*! ./convert-engine */ \"./src/js/engine/convert-engine.js\");\n\nvar _recordEngine = __webpack_require__(/*! ./record-engine */ \"./src/js/engine/record-engine.js\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar getAudioEngine = function getAudioEngine(audioEngine) {\n  var AudioEngineClass;\n\n  switch (audioEngine) {\n    case _recordEngine.RECORDRTC:\n      AudioEngineClass = _recordRtc.default;\n      break;\n\n    case _recordEngine.LIBVORBISJS:\n      AudioEngineClass = videojs.LibVorbisEngine;\n      break;\n\n    case _recordEngine.RECORDERJS:\n      AudioEngineClass = videojs.RecorderjsEngine;\n      break;\n\n    case _recordEngine.LAMEJS:\n      AudioEngineClass = videojs.LamejsEngine;\n      break;\n\n    case _recordEngine.OPUSRECORDER:\n      AudioEngineClass = videojs.OpusRecorderEngine;\n      break;\n\n    case _recordEngine.VMSG:\n      AudioEngineClass = videojs.VmsgEngine;\n      break;\n\n    default:\n      throw new Error('Unknown audioEngine: ' + audioEngine);\n  }\n\n  return AudioEngineClass;\n};\n\nexports.getAudioEngine = getAudioEngine;\n\nvar isAudioPluginActive = function isAudioPluginActive(audioEngine) {\n  return _recordEngine.AUDIO_PLUGINS.indexOf(audioEngine) > -1;\n};\n\nexports.isAudioPluginActive = isAudioPluginActive;\n\nvar getConvertEngine = function getConvertEngine(convertEngine) {\n  var ConvertEngineClass;\n\n  switch (convertEngine) {\n    case '':\n      break;\n\n    case _convertEngine.TSEBML:\n      ConvertEngineClass = videojs.TsEBMLEngine;\n      break;\n\n    default:\n      throw new Error('Unknown convertEngine: ' + convertEngine);\n  }\n\n  return ConvertEngineClass;\n};\n\nexports.getConvertEngine = getConvertEngine;\n\n//# sourceURL=webpack://VideojsRecord/./src/js/engine/engine-loader.js?");

/***/ }),

/***/ "./src/js/engine/record-engine.js":
/*!****************************************!*\
  !*** ./src/js/engine/record-engine.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.VMSG = exports.OPUSRECORDER = exports.LAMEJS = exports.RECORDERJS = exports.LIBVORBISJS = exports.RECORDRTC = exports.AUDIO_PLUGINS = exports.RECORD_PLUGINS = exports.RecordEngine = void 0;\n\nvar _video = _interopRequireDefault(__webpack_require__(/*! video.js */ \"video.js\"));\n\nvar _fileUtil = __webpack_require__(/*! ../utils/file-util */ \"./src/js/utils/file-util.js\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nvar Component = _video.default.getComponent('Component');\n\nvar RECORDRTC = 'recordrtc';\nexports.RECORDRTC = RECORDRTC;\nvar LIBVORBISJS = 'libvorbis.js';\nexports.LIBVORBISJS = LIBVORBISJS;\nvar RECORDERJS = 'recorder.js';\nexports.RECORDERJS = RECORDERJS;\nvar LAMEJS = 'lamejs';\nexports.LAMEJS = LAMEJS;\nvar OPUSRECORDER = 'opus-recorder';\nexports.OPUSRECORDER = OPUSRECORDER;\nvar VMSG = 'vmsg';\nexports.VMSG = VMSG;\nvar AUDIO_PLUGINS = [LIBVORBISJS, RECORDERJS, LAMEJS, OPUSRECORDER, VMSG];\nexports.AUDIO_PLUGINS = AUDIO_PLUGINS;\nvar RECORD_PLUGINS = AUDIO_PLUGINS;\nexports.RECORD_PLUGINS = RECORD_PLUGINS;\n\nvar RecordEngine = function (_Component) {\n  _inherits(RecordEngine, _Component);\n\n  function RecordEngine(player, options) {\n    _classCallCheck(this, RecordEngine);\n\n    options.evented = true;\n    return _possibleConstructorReturn(this, _getPrototypeOf(RecordEngine).call(this, player, options));\n  }\n\n  _createClass(RecordEngine, [{\n    key: \"dispose\",\n    value: function dispose() {\n      if (this.recordedData !== undefined) {\n        URL.revokeObjectURL(this.recordedData);\n      }\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {}\n  }, {\n    key: \"addFileInfo\",\n    value: function addFileInfo(fileObj) {\n      (0, _fileUtil.addFileInfo)(fileObj);\n    }\n  }, {\n    key: \"onStopRecording\",\n    value: function onStopRecording(data) {\n      this.recordedData = data;\n      this.addFileInfo(this.recordedData);\n      this.dispose();\n      this.trigger('recordComplete');\n    }\n  }, {\n    key: \"saveAs\",\n    value: function saveAs(name) {\n      var fileName = name[Object.keys(name)[0]];\n      (0, _fileUtil.downloadBlob)(fileName, this.recordedData);\n    }\n  }]);\n\n  return RecordEngine;\n}(Component);\n\nexports.RecordEngine = RecordEngine;\n_video.default.RecordEngine = RecordEngine;\nComponent.registerComponent('RecordEngine', RecordEngine);\n\n//# sourceURL=webpack://VideojsRecord/./src/js/engine/record-engine.js?");

/***/ }),

/***/ "./src/js/engine/record-mode.js":
/*!**************************************!*\
  !*** ./src/js/engine/record-mode.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SCREEN_ONLY = exports.ANIMATION = exports.AUDIO_VIDEO = exports.VIDEO_ONLY = exports.AUDIO_ONLY = exports.IMAGE_ONLY = exports.getRecorderMode = void 0;\nvar IMAGE_ONLY = 'image_only';\nexports.IMAGE_ONLY = IMAGE_ONLY;\nvar AUDIO_ONLY = 'audio_only';\nexports.AUDIO_ONLY = AUDIO_ONLY;\nvar VIDEO_ONLY = 'video_only';\nexports.VIDEO_ONLY = VIDEO_ONLY;\nvar AUDIO_VIDEO = 'audio_video';\nexports.AUDIO_VIDEO = AUDIO_VIDEO;\nvar ANIMATION = 'animation';\nexports.ANIMATION = ANIMATION;\nvar SCREEN_ONLY = 'screen_only';\nexports.SCREEN_ONLY = SCREEN_ONLY;\n\nvar getRecorderMode = function getRecorderMode(image, audio, video, animation, screen) {\n  if (isModeEnabled(image)) {\n    return IMAGE_ONLY;\n  } else if (isModeEnabled(animation)) {\n    return ANIMATION;\n  } else if (isModeEnabled(screen)) {\n    return SCREEN_ONLY;\n  } else if (isModeEnabled(audio) && !isModeEnabled(video)) {\n    return AUDIO_ONLY;\n  } else if (isModeEnabled(audio) && isModeEnabled(video)) {\n    return AUDIO_VIDEO;\n  } else if (!isModeEnabled(audio) && isModeEnabled(video)) {\n    return VIDEO_ONLY;\n  }\n};\n\nexports.getRecorderMode = getRecorderMode;\n\nvar isModeEnabled = function isModeEnabled(mode) {\n  return mode === Object(mode) || mode === true;\n};\n\n//# sourceURL=webpack://VideojsRecord/./src/js/engine/record-mode.js?");

/***/ }),

/***/ "./src/js/engine/record-rtc.js":
/*!*************************************!*\
  !*** ./src/js/engine/record-rtc.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _video = _interopRequireDefault(__webpack_require__(/*! video.js */ \"video.js\"));\n\nvar _recordEngine = __webpack_require__(/*! ./record-engine */ \"./src/js/engine/record-engine.js\");\n\nvar _detectBrowser = __webpack_require__(/*! ../utils/detect-browser */ \"./src/js/utils/detect-browser.js\");\n\nvar _recordMode = __webpack_require__(/*! ./record-mode */ \"./src/js/engine/record-mode.js\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nvar Component = _video.default.getComponent('Component');\n\nvar RecordRTCEngine = function (_RecordEngine) {\n  _inherits(RecordRTCEngine, _RecordEngine);\n\n  function RecordRTCEngine() {\n    _classCallCheck(this, RecordRTCEngine);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(RecordRTCEngine).apply(this, arguments));\n  }\n\n  _createClass(RecordRTCEngine, [{\n    key: \"setup\",\n    value: function setup(stream, mediaType, debug) {\n      this.inputStream = stream;\n      this.mediaType = mediaType;\n      this.debug = debug;\n\n      if ('screen' in this.mediaType) {\n        this.mediaType.video = true;\n      }\n\n      this.engine = new RecordRTC.MRecordRTC();\n      this.engine.mediaType = this.mediaType;\n      this.engine.disableLogs = !this.debug;\n      this.engine.mimeType = this.mimeType;\n      this.engine.bufferSize = this.bufferSize;\n      this.engine.sampleRate = this.sampleRate;\n      this.engine.numberOfAudioChannels = this.audioChannels;\n      this.engine.video = this.video;\n      this.engine.canvas = this.canvas;\n      this.engine.quality = this.quality;\n      this.engine.frameRate = this.frameRate;\n\n      if (this.onTimeStamp !== undefined) {\n        this.engine.timeSlice = this.timeSlice;\n        this.engine.onTimeStamp = this.onTimeStamp;\n      }\n\n      this.engine.addStream(this.inputStream);\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      _get(_getPrototypeOf(RecordRTCEngine.prototype), \"dispose\", this).call(this);\n\n      this.destroy();\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      if (this.engine && typeof this.engine.destroy === 'function') {\n        this.engine.destroy();\n      }\n    }\n  }, {\n    key: \"start\",\n    value: function start() {\n      this.engine.startRecording();\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      this.engine.stopRecording(this.onStopRecording.bind(this));\n    }\n  }, {\n    key: \"pause\",\n    value: function pause() {\n      this.engine.pauseRecording();\n    }\n  }, {\n    key: \"resume\",\n    value: function resume() {\n      this.engine.resumeRecording();\n    }\n  }, {\n    key: \"saveAs\",\n    value: function saveAs(name) {\n      if (this.engine && name !== undefined) {\n        this.engine.save(name);\n      }\n    }\n  }, {\n    key: \"onStopRecording\",\n    value: function onStopRecording(audioVideoURL, type) {\n      var _this = this;\n\n      this.mediaURL = audioVideoURL;\n      var recordType = this.player().record().getRecordType();\n      this.engine.getBlob(function (recording) {\n        switch (recordType) {\n          case _recordMode.AUDIO_ONLY:\n            if (recording.audio !== undefined) {\n              _this.recordedData = recording.audio;\n            }\n\n            break;\n\n          case _recordMode.VIDEO_ONLY:\n          case _recordMode.AUDIO_VIDEO:\n          case _recordMode.SCREEN_ONLY:\n            if (recording.video !== undefined) {\n              _this.recordedData = recording.video;\n            }\n\n            break;\n\n          case _recordMode.ANIMATION:\n            if (recording.gif !== undefined) {\n              _this.recordedData = recording.gif;\n            }\n\n            break;\n        }\n\n        _this.addFileInfo(_this.recordedData);\n\n        _this.trigger('recordComplete');\n      });\n    }\n  }]);\n\n  return RecordRTCEngine;\n}(_recordEngine.RecordEngine);\n\n_video.default.RecordRTCEngine = RecordRTCEngine;\nComponent.registerComponent('RecordRTCEngine', RecordRTCEngine);\nvar _default = RecordRTCEngine;\nexports.default = _default;\nmodule.exports = exports.default;\n\n//# sourceURL=webpack://VideojsRecord/./src/js/engine/record-rtc.js?");

/***/ }),

/***/ "./src/js/utils/browser-shim.js":
/*!**************************************!*\
  !*** ./src/js/utils/browser-shim.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar setSrcObject = function setSrcObject(stream, element) {\n  if ('srcObject' in element) {\n    element.srcObject = stream;\n  } else if ('mozSrcObject' in element) {\n    element.mozSrcObject = stream;\n  } else {\n    element.srcObject = stream;\n  }\n};\n\nvar _default = setSrcObject;\nexports.default = _default;\nmodule.exports = exports.default;\n\n//# sourceURL=webpack://VideojsRecord/./src/js/utils/browser-shim.js?");

/***/ }),

/***/ "./src/js/utils/detect-browser.js":
/*!****************************************!*\
  !*** ./src/js/utils/detect-browser.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isFirefox = exports.isSafari = exports.isChrome = exports.isOpera = exports.isEdge = exports.detectBrowser = void 0;\n\nvar _window = _interopRequireDefault(__webpack_require__(/*! global/window */ \"./node_modules/global/window.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar detectBrowser = function detectBrowser() {\n  var result = {};\n  result.browser = null;\n  result.version = null;\n  result.minVersion = null;\n\n  if (typeof _window.default === 'undefined' || !_window.default.navigator) {\n    result.browser = 'Not a supported browser.';\n    return result;\n  }\n\n  if (navigator.mozGetUserMedia) {\n    result.browser = 'firefox';\n    result.version = extractVersion(navigator.userAgent, /Firefox\\/(\\d+)\\./, 1);\n    result.minVersion = 31;\n  } else if (navigator.webkitGetUserMedia) {\n    result.browser = 'chrome';\n    result.version = extractVersion(navigator.userAgent, /Chrom(e|ium)\\/(\\d+)\\./, 2);\n    result.minVersion = 38;\n  } else if (navigator.mediaDevices && navigator.userAgent.match(/Edge\\/(\\d+).(\\d+)$/)) {\n    result.browser = 'edge';\n    result.version = extractVersion(navigator.userAgent, /Edge\\/(\\d+).(\\d+)$/, 2);\n    result.minVersion = 10547;\n  } else if (_window.default.RTCPeerConnection && navigator.userAgent.match(/AppleWebKit\\/(\\d+)\\./)) {\n    result.browser = 'safari';\n    result.version = extractVersion(navigator.userAgent, /AppleWebKit\\/(\\d+)\\./, 1);\n  } else {\n    result.browser = 'Not a supported browser.';\n    return result;\n  }\n\n  return result;\n};\n\nexports.detectBrowser = detectBrowser;\n\nvar extractVersion = function extractVersion(uastring, expr, pos) {\n  var match = uastring.match(expr);\n  return match && match.length >= pos && parseInt(match[pos], 10);\n};\n\nvar isEdge = function isEdge() {\n  return detectBrowser().browser === 'edge';\n};\n\nexports.isEdge = isEdge;\n\nvar isSafari = function isSafari() {\n  return detectBrowser().browser === 'safari';\n};\n\nexports.isSafari = isSafari;\n\nvar isOpera = function isOpera() {\n  return !!_window.default.opera || navigator.userAgent.indexOf('OPR/') !== -1;\n};\n\nexports.isOpera = isOpera;\n\nvar isChrome = function isChrome() {\n  return detectBrowser().browser === 'chrome';\n};\n\nexports.isChrome = isChrome;\n\nvar isFirefox = function isFirefox() {\n  return detectBrowser().browser === 'firefox';\n};\n\nexports.isFirefox = isFirefox;\n\n//# sourceURL=webpack://VideojsRecord/./src/js/utils/detect-browser.js?");

/***/ }),

/***/ "./src/js/utils/file-util.js":
/*!***********************************!*\
  !*** ./src/js/utils/file-util.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.addFileInfo = exports.blobToArrayBuffer = exports.downloadBlob = void 0;\n\nvar downloadBlob = function downloadBlob(fileName, data) {\n  if (typeof navigator.msSaveOrOpenBlob !== 'undefined') {\n    return navigator.msSaveOrOpenBlob(data, fileName);\n  } else if (typeof navigator.msSaveBlob !== 'undefined') {\n    return navigator.msSaveBlob(data, fileName);\n  }\n\n  var hyperlink = document.createElement('a');\n  hyperlink.href = URL.createObjectURL(data);\n  hyperlink.download = fileName;\n  hyperlink.style = 'display:none;opacity:0;color:transparent;';\n  (document.body || document.documentElement).appendChild(hyperlink);\n\n  if (typeof hyperlink.click === 'function') {\n    hyperlink.click();\n  } else {\n    hyperlink.target = '_blank';\n    hyperlink.dispatchEvent(new MouseEvent('click', {\n      view: window,\n      bubbles: true,\n      cancelable: true\n    }));\n  }\n\n  URL.revokeObjectURL(hyperlink.href);\n};\n\nexports.downloadBlob = downloadBlob;\n\nvar blobToArrayBuffer = function blobToArrayBuffer(fileObj) {\n  return new Promise(function (resolve, reject) {\n    var reader = new FileReader();\n\n    reader.onloadend = function () {\n      resolve(reader.result);\n    };\n\n    reader.onerror = function (ev) {\n      reject(ev.error);\n    };\n\n    reader.readAsArrayBuffer(fileObj);\n  });\n};\n\nexports.blobToArrayBuffer = blobToArrayBuffer;\n\nvar addFileInfo = function addFileInfo(fileObj, now) {\n  if (fileObj instanceof Blob || fileObj instanceof File) {\n    if (now === undefined) {\n      now = new Date();\n    }\n\n    try {\n      fileObj.lastModified = now.getTime();\n      fileObj.lastModifiedDate = now;\n    } catch (e) {\n      if (e instanceof TypeError) {} else {\n        throw e;\n      }\n    }\n\n    var fileExtension = '.' + fileObj.type.split('/')[1];\n\n    if (fileExtension.indexOf(';') > -1) {\n      fileExtension = fileExtension.split(';')[0];\n    }\n\n    try {\n      fileObj.name = now.getTime() + fileExtension;\n    } catch (e) {\n      if (e instanceof TypeError) {} else {\n        throw e;\n      }\n    }\n  }\n};\n\nexports.addFileInfo = addFileInfo;\n\n//# sourceURL=webpack://VideojsRecord/./src/js/utils/file-util.js?");

/***/ }),

/***/ "./src/js/utils/format-time.js":
/*!*************************************!*\
  !*** ./src/js/utils/format-time.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar formatTime = function formatTime(seconds, guide, msDisplayMax) {\n  seconds = seconds < 0 ? 0 : seconds;\n  guide = guide || seconds;\n  var s = Math.floor(seconds % 60),\n      m = Math.floor(seconds / 60 % 60),\n      h = Math.floor(seconds / 3600),\n      gm = Math.floor(guide / 60 % 60),\n      gh = Math.floor(guide / 3600),\n      ms = Math.floor((seconds - s) * 1000);\n\n  if (isNaN(seconds) || seconds === Infinity) {\n    h = m = s = ms = '-';\n  }\n\n  if (guide > 0 && guide < msDisplayMax) {\n    if (ms < 100) {\n      if (ms < 10) {\n        ms = '00' + ms;\n      } else {\n        ms = '0' + ms;\n      }\n    }\n\n    ms = ':' + ms;\n  } else {\n    ms = '';\n  }\n\n  h = h > 0 || gh > 0 ? h + ':' : '';\n  m = ((h || gm >= 10) && m < 10 ? '0' + m : m) + ':';\n  s = s < 10 ? '0' + s : s;\n  return h + m + s + ms;\n};\n\nvar _default = formatTime;\nexports.default = _default;\nmodule.exports = exports.default;\n\n//# sourceURL=webpack://VideojsRecord/./src/js/utils/format-time.js?");

/***/ }),

/***/ "./src/js/videojs.record.js":
/*!**********************************!*\
  !*** ./src/js/videojs.record.js ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Record = void 0;\n\nvar _video = _interopRequireDefault(__webpack_require__(/*! video.js */ \"video.js\"));\n\nvar _animationDisplay = _interopRequireDefault(__webpack_require__(/*! ./controls/animation-display */ \"./src/js/controls/animation-display.js\"));\n\nvar _recordCanvas = _interopRequireDefault(__webpack_require__(/*! ./controls/record-canvas */ \"./src/js/controls/record-canvas.js\"));\n\nvar _deviceButton = _interopRequireDefault(__webpack_require__(/*! ./controls/device-button */ \"./src/js/controls/device-button.js\"));\n\nvar _cameraButton = _interopRequireDefault(__webpack_require__(/*! ./controls/camera-button */ \"./src/js/controls/camera-button.js\"));\n\nvar _recordToggle = _interopRequireDefault(__webpack_require__(/*! ./controls/record-toggle */ \"./src/js/controls/record-toggle.js\"));\n\nvar _recordIndicator = _interopRequireDefault(__webpack_require__(/*! ./controls/record-indicator */ \"./src/js/controls/record-indicator.js\"));\n\nvar _defaults = _interopRequireDefault(__webpack_require__(/*! ./defaults */ \"./src/js/defaults.js\"));\n\nvar _formatTime = _interopRequireDefault(__webpack_require__(/*! ./utils/format-time */ \"./src/js/utils/format-time.js\"));\n\nvar _browserShim = _interopRequireDefault(__webpack_require__(/*! ./utils/browser-shim */ \"./src/js/utils/browser-shim.js\"));\n\nvar _detectBrowser = __webpack_require__(/*! ./utils/detect-browser */ \"./src/js/utils/detect-browser.js\");\n\nvar _engineLoader = __webpack_require__(/*! ./engine/engine-loader */ \"./src/js/engine/engine-loader.js\");\n\nvar _recordMode = __webpack_require__(/*! ./engine/record-mode */ \"./src/js/engine/record-mode.js\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nvar Plugin = _video.default.getPlugin('plugin');\n\nvar Player = _video.default.getComponent('Player');\n\nvar AUTO = 'auto';\n\nPlayer.prototype.play = function play() {\n  var retval = this.techGet_('play');\n\n  if (retval !== undefined && typeof retval.then === 'function') {\n    retval.then(null, function (e) {});\n  }\n\n  return retval;\n};\n\nvar Record = function (_Plugin) {\n  _inherits(Record, _Plugin);\n\n  function Record(player, options) {\n    var _this;\n\n    _classCallCheck(this, Record);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Record).call(this, player, options));\n    player.addClass('vjs-record');\n\n    _this.loadOptions();\n\n    _this.resetState();\n\n    var deviceIcon = 'av-perm';\n\n    switch (_this.getRecordType()) {\n      case _recordMode.IMAGE_ONLY:\n      case _recordMode.VIDEO_ONLY:\n      case _recordMode.ANIMATION:\n        deviceIcon = 'video-perm';\n        break;\n\n      case _recordMode.AUDIO_ONLY:\n        deviceIcon = 'audio-perm';\n        break;\n\n      case _recordMode.SCREEN_ONLY:\n        deviceIcon = 'screen-perm';\n        break;\n    }\n\n    _deviceButton.default.prototype.buildCSSClass = function () {\n      return 'vjs-record vjs-device-button vjs-control vjs-icon-' + deviceIcon;\n    };\n\n    player.deviceButton = new _deviceButton.default(player, options);\n    player.addChild(player.deviceButton);\n    player.recordIndicator = new _recordIndicator.default(player, options);\n    player.recordIndicator.hide();\n    player.addChild(player.recordIndicator);\n    player.recordCanvas = new _recordCanvas.default(player, options);\n    player.recordCanvas.hide();\n    player.addChild(player.recordCanvas);\n    player.animationDisplay = new _animationDisplay.default(player, options);\n    player.animationDisplay.hide();\n    player.addChild(player.animationDisplay);\n    player.cameraButton = new _cameraButton.default(player, options);\n    player.cameraButton.hide();\n    player.recordToggle = new _recordToggle.default(player, options);\n    player.recordToggle.hide();\n\n    if (_this.player.options_.controlBar) {\n      var customUIElements = ['deviceButton', 'recordIndicator', 'cameraButton', 'recordToggle'];\n      customUIElements.forEach(function (element) {\n        if (_this.player.options_.controlBar[element] !== undefined) {\n          _this.player[element].layoutExclude = true;\n\n          _this.player[element].hide();\n        }\n      });\n    }\n\n    _this.player.one('ready', _this.setupUI.bind(_assertThisInitialized(_assertThisInitialized(_this))));\n\n    return _this;\n  }\n\n  _createClass(Record, [{\n    key: \"loadOptions\",\n    value: function loadOptions() {\n      var newOptions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      var recordOptions = _video.default.mergeOptions(_defaults.default, this.player.options_.plugins.record, newOptions);\n\n      this.recordImage = recordOptions.image;\n      this.recordAudio = recordOptions.audio;\n      this.recordVideo = recordOptions.video;\n      this.recordAnimation = recordOptions.animation;\n      this.recordScreen = recordOptions.screen;\n      this.maxLength = recordOptions.maxLength;\n      this.maxFileSize = recordOptions.maxFileSize;\n      this.msDisplayMax = parseFloat(recordOptions.msDisplayMax);\n      this.debug = recordOptions.debug;\n      this.recordTimeSlice = recordOptions.timeSlice;\n      this.autoMuteDevice = recordOptions.autoMuteDevice;\n      this.videoFrameWidth = recordOptions.frameWidth;\n      this.videoFrameHeight = recordOptions.frameHeight;\n      this.videoRecorderType = recordOptions.videoRecorderType;\n      this.videoMimeType = recordOptions.videoMimeType;\n      this.convertEngine = recordOptions.convertEngine;\n      this.audioEngine = recordOptions.audioEngine;\n      this.audioRecorderType = recordOptions.audioRecorderType;\n      this.audioWorkerURL = recordOptions.audioWorkerURL;\n      this.audioBufferSize = recordOptions.audioBufferSize;\n      this.audioSampleRate = recordOptions.audioSampleRate;\n      this.audioBitRate = recordOptions.audioBitRate;\n      this.audioChannels = recordOptions.audioChannels;\n      this.audioMimeType = recordOptions.audioMimeType;\n      this.audioBufferUpdate = recordOptions.audioBufferUpdate;\n      this.animationFrameRate = recordOptions.animationFrameRate;\n      this.animationQuality = recordOptions.animationQuality;\n    }\n  }, {\n    key: \"setupUI\",\n    value: function setupUI() {\n      var _this2 = this;\n\n      this.player.controlBar.addChild(this.player.cameraButton);\n      this.player.controlBar.el().insertBefore(this.player.cameraButton.el(), this.player.controlBar.el().firstChild);\n      this.player.controlBar.el().insertBefore(this.player.recordToggle.el(), this.player.controlBar.el().firstChild);\n\n      if (this.player.controlBar.remainingTimeDisplay !== undefined) {\n        this.player.controlBar.remainingTimeDisplay.el().style.display = 'none';\n      }\n\n      if (this.player.controlBar.liveDisplay !== undefined) {\n        this.player.controlBar.liveDisplay.el().style.display = 'none';\n      }\n\n      this.player.loop(false);\n\n      switch (this.getRecordType()) {\n        case _recordMode.AUDIO_ONLY:\n          this.surfer = this.player.wavesurfer();\n          break;\n\n        case _recordMode.IMAGE_ONLY:\n        case _recordMode.VIDEO_ONLY:\n        case _recordMode.AUDIO_VIDEO:\n        case _recordMode.ANIMATION:\n        case _recordMode.SCREEN_ONLY:\n          this.player.bigPlayButton.hide();\n          this.player.one('loadedmetadata', function () {\n            _this2.setDuration(_this2.maxLength);\n          });\n          this.player.one('loadstart', function () {\n            _this2.setDuration(_this2.maxLength);\n          });\n\n          if (this.player.usingNativeControls_ === true) {\n            if (this.player.tech_.el_ !== undefined) {\n              this.player.tech_.el_.controls = false;\n            }\n          }\n\n          this.player.removeTechControlsListeners_();\n\n          if (this.player.options_.controls) {\n            if (this.player.controlBar.progressControl !== undefined) {\n              this.player.controlBar.progressControl.hide();\n            }\n\n            this.player.on('userinactive', function (event) {\n              _this2.player.userActive(true);\n            });\n            this.player.controlBar.show();\n            this.player.controlBar.el().style.display = 'flex';\n          }\n\n          break;\n      }\n\n      this.player.off('timeupdate');\n      this.player.off('durationchange');\n      this.player.off('loadedmetadata');\n      this.player.off('loadstart');\n      this.setDuration(this.maxLength);\n\n      if (this.player.controlBar.playToggle !== undefined) {\n        this.player.controlBar.playToggle.hide();\n      }\n    }\n  }, {\n    key: \"isRecording\",\n    value: function isRecording() {\n      return this._recording;\n    }\n  }, {\n    key: \"isProcessing\",\n    value: function isProcessing() {\n      return this._processing;\n    }\n  }, {\n    key: \"isDestroyed\",\n    value: function isDestroyed() {\n      var destroyed = this.player === null;\n\n      if (destroyed === false) {\n        destroyed = this.player.children() === null;\n      }\n\n      return destroyed;\n    }\n  }, {\n    key: \"getDevice\",\n    value: function getDevice() {\n      var _this3 = this;\n\n      if (this.deviceReadyCallback === undefined) {\n        this.deviceReadyCallback = this.onDeviceReady.bind(this);\n      }\n\n      if (this.deviceErrorCallback === undefined) {\n        this.deviceErrorCallback = this.onDeviceError.bind(this);\n      }\n\n      if (this.engineStopCallback === undefined) {\n        this.engineStopCallback = this.onRecordComplete.bind(this);\n      }\n\n      switch (this.getRecordType()) {\n        case _recordMode.AUDIO_ONLY:\n          this.mediaType = {\n            audio: this.audioRecorderType === AUTO ? true : this.audioRecorderType,\n            video: false\n          };\n          this.surfer.surfer.microphone.un('deviceReady', this.deviceReadyCallback);\n          this.surfer.surfer.microphone.un('deviceError', this.deviceErrorCallback);\n          this.surfer.surfer.microphone.on('deviceReady', this.deviceReadyCallback);\n          this.surfer.surfer.microphone.on('deviceError', this.deviceErrorCallback);\n          this.surfer.setupPlaybackEvents(false);\n          this.surfer.liveMode = true;\n          this.surfer.surfer.microphone.paused = false;\n\n          if (this.audioBufferUpdate === true) {\n            this.surfer.surfer.microphone.reloadBufferFunction = function (event) {\n              if (!_this3.surfer.surfer.microphone.paused) {\n                _this3.surfer.surfer.empty();\n\n                _this3.surfer.surfer.loadDecodedBuffer(event.inputBuffer);\n\n                _this3.player.recordedData = event.inputBuffer;\n\n                _this3.player.trigger('audioBufferUpdate');\n              }\n            };\n          }\n\n          this.surfer.surfer.microphone.start();\n          break;\n\n        case _recordMode.IMAGE_ONLY:\n        case _recordMode.VIDEO_ONLY:\n          this.mediaType = {\n            audio: false,\n            video: this.videoRecorderType === AUTO ? true : this.videoRecorderType\n          };\n          navigator.mediaDevices.getUserMedia({\n            audio: false,\n            video: this.getRecordType() === _recordMode.IMAGE_ONLY ? this.recordImage : this.recordVideo\n          }).then(this.onDeviceReady.bind(this)).catch(this.onDeviceError.bind(this));\n          break;\n\n        case _recordMode.AUDIO_VIDEO:\n          this.mediaType = {\n            audio: this.audioRecorderType === AUTO ? true : this.audioRecorderType,\n            video: this.videoRecorderType === AUTO ? true : this.videoRecorderType\n          };\n          navigator.mediaDevices.getUserMedia({\n            audio: this.recordAudio,\n            video: this.recordVideo\n          }).then(this.onDeviceReady.bind(this)).catch(this.onDeviceError.bind(this));\n          break;\n\n        case _recordMode.ANIMATION:\n          this.mediaType = {\n            audio: false,\n            video: false,\n            gif: true\n          };\n          navigator.mediaDevices.getUserMedia({\n            audio: false,\n            video: this.recordAnimation\n          }).then(this.onDeviceReady.bind(this)).catch(this.onDeviceError.bind(this));\n          break;\n\n        case _recordMode.SCREEN_ONLY:\n          this.mediaType = {\n            audio: false,\n            video: false,\n            screen: true,\n            gif: false\n          };\n          navigator.mediaDevices.getDisplayMedia({\n            video: true\n          }).then(this.onDeviceReady.bind(this)).catch(this.onDeviceError.bind(this));\n          break;\n      }\n    }\n  }, {\n    key: \"onDeviceReady\",\n    value: function onDeviceReady(stream) {\n      var _this4 = this;\n\n      this._deviceActive = true;\n      this.stream = stream;\n      this.player.deviceButton.hide();\n      this.setDuration(this.maxLength);\n      this.setCurrentTime(0);\n\n      if (this.player.controlBar.playToggle !== undefined) {\n        this.player.controlBar.playToggle.hide();\n      }\n\n      this.off(this.player, 'timeupdate', this.playbackTimeUpdate);\n      this.off(this.player, 'ended', this.playbackTimeUpdate);\n\n      if (this.getRecordType() !== _recordMode.IMAGE_ONLY) {\n        if (this.getRecordType() !== _recordMode.AUDIO_ONLY && (0, _engineLoader.isAudioPluginActive)(this.audioEngine)) {\n          throw new Error('Currently ' + this.audioEngine + ' is only supported in audio-only mode.');\n        }\n\n        var AudioEngineClass = (0, _engineLoader.getAudioEngine)(this.audioEngine);\n\n        try {\n          this.engine = new AudioEngineClass(this.player, this.player.options_);\n        } catch (err) {\n          throw new Error('Could not load ' + this.audioEngine + ' plugin');\n        }\n\n        this.engine.on('recordComplete', this.engineStopCallback);\n        this.engine.bufferSize = this.audioBufferSize;\n        this.engine.sampleRate = this.audioSampleRate;\n        this.engine.bitRate = this.audioBitRate;\n        this.engine.audioChannels = this.audioChannels;\n        this.engine.audioWorkerURL = this.audioWorkerURL;\n        this.engine.mimeType = {\n          video: this.videoMimeType,\n          gif: 'image/gif'\n        };\n\n        if (this.audioMimeType !== null && this.audioMimeType !== AUTO) {\n          this.engine.mimeType.audio = this.audioMimeType;\n        }\n\n        this.engine.video = {\n          width: this.videoFrameWidth,\n          height: this.videoFrameHeight\n        };\n        this.engine.canvas = {\n          width: this.videoFrameWidth,\n          height: this.videoFrameHeight\n        };\n        this.engine.quality = this.animationQuality;\n        this.engine.frameRate = this.animationFrameRate;\n\n        if (this.recordTimeSlice && this.recordTimeSlice > 0) {\n          this.engine.timeSlice = this.recordTimeSlice;\n          this.engine.onTimeStamp = this.onTimeStamp.bind(this);\n        }\n\n        this.engine.setup(this.stream, this.mediaType, this.debug);\n\n        if (this.convertEngine !== '') {\n          var ConvertEngineClass = (0, _engineLoader.getConvertEngine)(this.convertEngine);\n\n          try {\n            this.converter = new ConvertEngineClass(this.player, this.player.options_);\n          } catch (err) {\n            throw new Error('Could not load ' + this.convertEngine + ' plugin');\n          }\n\n          this.converter.setup(this.mediaType, this.debug);\n        }\n\n        var uiElements = ['currentTimeDisplay', 'timeDivider', 'durationDisplay'];\n        uiElements.forEach(function (element) {\n          element = _this4.player.controlBar[element];\n\n          if (element !== undefined) {\n            element.el().style.display = 'block';\n            element.show();\n          }\n        });\n        this.player.recordToggle.show();\n      } else {\n        this.player.recordIndicator.disable();\n        this.retrySnapshot();\n        this.player.cameraButton.onStop();\n        this.player.cameraButton.show();\n      }\n\n      if (this.getRecordType() !== _recordMode.AUDIO_ONLY) {\n        this.mediaElement = this.player.el().firstChild;\n        this.mediaElement.controls = false;\n        this.mediaElement.muted = true;\n        this.displayVolumeControl(false);\n        this.load(this.stream);\n        this.player.one('loadedmetadata', function () {\n          _this4.mediaElement.play();\n\n          _this4.player.trigger('deviceReady');\n        });\n      } else {\n        this.player.trigger('deviceReady');\n      }\n    }\n  }, {\n    key: \"onDeviceError\",\n    value: function onDeviceError(code) {\n      this._deviceActive = false;\n\n      if (!this.isDestroyed()) {\n        this.player.deviceErrorCode = code;\n        this.player.trigger('deviceError');\n      }\n    }\n  }, {\n    key: \"start\",\n    value: function start() {\n      var _this5 = this;\n\n      if (!this.isProcessing()) {\n        this._recording = true;\n\n        if (this.player.controlBar.playToggle !== undefined) {\n          this.player.controlBar.playToggle.hide();\n        }\n\n        this.off(this.player, 'timeupdate', this.playbackTimeUpdate);\n        this.off(this.player, 'ended', this.playbackTimeUpdate);\n\n        switch (this.getRecordType()) {\n          case _recordMode.AUDIO_ONLY:\n            this.surfer.setupPlaybackEvents(false);\n            this.surfer.surfer.microphone.paused = false;\n            this.surfer.liveMode = true;\n            this.surfer.surfer.microphone.play();\n            break;\n\n          case _recordMode.VIDEO_ONLY:\n          case _recordMode.AUDIO_VIDEO:\n          case _recordMode.SCREEN_ONLY:\n            this.startVideoPreview();\n            break;\n\n          case _recordMode.ANIMATION:\n            this.player.recordCanvas.hide();\n            this.player.animationDisplay.hide();\n            this.mediaElement.style.display = 'block';\n            this.captureFrame().then(function (result) {\n              _this5.startVideoPreview();\n            });\n            break;\n        }\n\n        if (this.autoMuteDevice) {\n          this.muteTracks(false);\n        }\n\n        switch (this.getRecordType()) {\n          case _recordMode.IMAGE_ONLY:\n            this.createSnapshot();\n            this.player.trigger('startRecord');\n            break;\n\n          case _recordMode.VIDEO_ONLY:\n          case _recordMode.AUDIO_VIDEO:\n          case _recordMode.ANIMATION:\n          case _recordMode.SCREEN_ONLY:\n            this.player.one('loadedmetadata', function () {\n              _this5.startRecording();\n            });\n            break;\n\n          default:\n            this.startRecording();\n        }\n      }\n    }\n  }, {\n    key: \"startRecording\",\n    value: function startRecording() {\n      this.paused = false;\n      this.pauseTime = this.pausedTime = 0;\n      this.startTime = new Date().getTime();\n      this.countDown = this.player.setInterval(this.onCountDown.bind(this), 100);\n\n      if (this.engine !== undefined) {\n        this.engine.dispose();\n      }\n\n      this.engine.start();\n      this.player.trigger('startRecord');\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      if (!this.isProcessing()) {\n        this._recording = false;\n        this._processing = true;\n\n        if (this.getRecordType() !== _recordMode.IMAGE_ONLY) {\n          this.player.trigger('stopRecord');\n          this.player.clearInterval(this.countDown);\n\n          if (this.engine) {\n            this.engine.stop();\n          }\n\n          if (this.autoMuteDevice) {\n            this.muteTracks(true);\n          }\n        } else {\n          if (this.player.recordedData) {\n            this.player.trigger('finishRecord');\n          }\n        }\n      }\n    }\n  }, {\n    key: \"stopDevice\",\n    value: function stopDevice() {\n      if (this.isRecording()) {\n        this.player.one('finishRecord', this.stopStream.bind(this));\n        this.stop();\n      } else {\n        this.stopStream();\n      }\n    }\n  }, {\n    key: \"stopStream\",\n    value: function stopStream() {\n      if (this.stream) {\n        this._deviceActive = false;\n\n        if (this.getRecordType() === _recordMode.AUDIO_ONLY) {\n          this.surfer.surfer.microphone.stopDevice();\n          return;\n        }\n\n        this.stream.getTracks().forEach(function (stream) {\n          stream.stop();\n        });\n      }\n    }\n  }, {\n    key: \"pause\",\n    value: function pause() {\n      if (!this.paused) {\n        this.pauseTime = new Date().getTime();\n        this.paused = true;\n        this.engine.pause();\n      }\n    }\n  }, {\n    key: \"resume\",\n    value: function resume() {\n      if (this.paused) {\n        this.pausedTime += new Date().getTime() - this.pauseTime;\n        this.engine.resume();\n        this.paused = false;\n      }\n    }\n  }, {\n    key: \"onRecordComplete\",\n    value: function onRecordComplete() {\n      var _this6 = this;\n\n      this.player.recordedData = this.engine.recordedData;\n\n      if (this.player.controlBar.playToggle !== undefined) {\n        this.player.controlBar.playToggle.removeClass('vjs-ended');\n        this.player.controlBar.playToggle.show();\n      }\n\n      if (this.converter !== undefined) {\n        this.converter.convert(this.player.recordedData);\n      }\n\n      this.player.trigger('finishRecord');\n\n      if (this.isDestroyed()) {\n        return;\n      }\n\n      switch (this.getRecordType()) {\n        case _recordMode.AUDIO_ONLY:\n          this.surfer.pause();\n          this.surfer.setupPlaybackEvents(true);\n          this.player.loadingSpinner.show();\n          this.surfer.surfer.once('ready', function () {\n            _this6._processing = false;\n          });\n          this.load(this.player.recordedData);\n          break;\n\n        case _recordMode.VIDEO_ONLY:\n        case _recordMode.AUDIO_VIDEO:\n        case _recordMode.SCREEN_ONLY:\n          this.player.one('pause', function () {\n            _this6._processing = false;\n\n            _this6.player.loadingSpinner.hide();\n\n            _this6.setDuration(_this6.streamDuration);\n\n            _this6.on(_this6.player, 'timeupdate', _this6.playbackTimeUpdate);\n\n            _this6.on(_this6.player, 'ended', _this6.playbackTimeUpdate);\n\n            if (_this6.getRecordType() === _recordMode.AUDIO_VIDEO) {\n              _this6.mediaElement.muted = false;\n\n              _this6.displayVolumeControl(true);\n            }\n\n            _this6.load(_this6.player.recordedData);\n          });\n          this.player.pause();\n          break;\n\n        case _recordMode.ANIMATION:\n          this._processing = false;\n          this.player.loadingSpinner.hide();\n          this.setDuration(this.streamDuration);\n          this.mediaElement.style.display = 'none';\n          this.player.recordCanvas.show();\n          this.player.pause();\n          this.on(this.player, 'play', this.showAnimation);\n          this.on(this.player, 'pause', this.hideAnimation);\n          break;\n      }\n    }\n  }, {\n    key: \"onCountDown\",\n    value: function onCountDown() {\n      if (!this.paused) {\n        var now = new Date().getTime();\n        var duration = this.maxLength;\n        var currentTime = (now - (this.startTime + this.pausedTime)) / 1000;\n        this.streamDuration = currentTime;\n\n        if (currentTime >= duration) {\n          currentTime = duration;\n          this.stop();\n        }\n\n        this.setDuration(duration);\n        this.setCurrentTime(currentTime, duration);\n        this.player.trigger('progressRecord');\n      }\n    }\n  }, {\n    key: \"getCurrentTime\",\n    value: function getCurrentTime() {\n      var currentTime = isNaN(this.streamCurrentTime) ? 0 : this.streamCurrentTime;\n\n      if (this.getRecordType() === _recordMode.AUDIO_ONLY) {\n        currentTime = this.surfer.getCurrentTime();\n      }\n\n      return currentTime;\n    }\n  }, {\n    key: \"setCurrentTime\",\n    value: function setCurrentTime(currentTime, duration) {\n      currentTime = isNaN(currentTime) ? 0 : currentTime;\n      duration = isNaN(duration) ? 0 : duration;\n\n      switch (this.getRecordType()) {\n        case _recordMode.AUDIO_ONLY:\n          this.surfer.setCurrentTime(currentTime, duration);\n          break;\n\n        case _recordMode.VIDEO_ONLY:\n        case _recordMode.AUDIO_VIDEO:\n        case _recordMode.ANIMATION:\n        case _recordMode.SCREEN_ONLY:\n          if (this.player.controlBar.currentTimeDisplay && this.player.controlBar.currentTimeDisplay.contentEl()) {\n            this.streamCurrentTime = Math.min(currentTime, duration);\n            this.player.controlBar.currentTimeDisplay.formattedTime_ = this.player.controlBar.currentTimeDisplay.contentEl().lastChild.textContent = (0, _formatTime.default)(this.streamCurrentTime, duration, this.msDisplayMax);\n          }\n\n          break;\n      }\n    }\n  }, {\n    key: \"getDuration\",\n    value: function getDuration() {\n      var duration = isNaN(this.streamDuration) ? 0 : this.streamDuration;\n      return duration;\n    }\n  }, {\n    key: \"setDuration\",\n    value: function setDuration(duration) {\n      duration = isNaN(duration) ? 0 : duration;\n\n      switch (this.getRecordType()) {\n        case _recordMode.AUDIO_ONLY:\n          this.surfer.setDuration(duration);\n          break;\n\n        case _recordMode.VIDEO_ONLY:\n        case _recordMode.AUDIO_VIDEO:\n        case _recordMode.ANIMATION:\n        case _recordMode.SCREEN_ONLY:\n          if (this.player.controlBar.durationDisplay && this.player.controlBar.durationDisplay.contentEl()) {\n            this.player.controlBar.durationDisplay.formattedTime_ = this.player.controlBar.durationDisplay.contentEl().lastChild.textContent = (0, _formatTime.default)(duration, duration, this.msDisplayMax);\n          }\n\n          break;\n      }\n    }\n  }, {\n    key: \"load\",\n    value: function load(url) {\n      switch (this.getRecordType()) {\n        case _recordMode.AUDIO_ONLY:\n          this.surfer.load(url);\n          break;\n\n        case _recordMode.IMAGE_ONLY:\n        case _recordMode.VIDEO_ONLY:\n        case _recordMode.AUDIO_VIDEO:\n        case _recordMode.ANIMATION:\n        case _recordMode.SCREEN_ONLY:\n          if (url instanceof Blob || url instanceof File) {\n            this.mediaElement.srcObject = null;\n            this.mediaElement.src = URL.createObjectURL(url);\n          } else {\n            (0, _browserShim.default)(url, this.mediaElement);\n          }\n\n          break;\n      }\n    }\n  }, {\n    key: \"saveAs\",\n    value: function saveAs(name) {\n      if (this.engine && name !== undefined) {\n        this.engine.saveAs(name);\n      }\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      this.player.off('ready');\n      this.player.off('userinactive');\n      this.player.off('loadedmetadata');\n\n      if (this.engine) {\n        this.engine.dispose();\n        this.engine.destroy();\n        this.engine.off('recordComplete', this.engineStopCallback);\n      }\n\n      this.stop();\n      this.stopDevice();\n      this.player.clearInterval(this.countDown);\n\n      if (this.getRecordType() === _recordMode.AUDIO_ONLY) {\n        if (this.surfer) {\n          this.surfer.destroy();\n        }\n      }\n\n      this.resetState();\n\n      _get(_getPrototypeOf(Record.prototype), \"dispose\", this).call(this);\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.player.dispose();\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      var _this7 = this;\n\n      if (this.engine) {\n        this.engine.dispose();\n        this.engine.off('recordComplete', this.engineStopCallback);\n      }\n\n      this.stop();\n      this.stopDevice();\n      this.player.clearInterval(this.countDown);\n      this.loadOptions();\n      this.resetState();\n      this.setDuration(this.maxLength);\n      this.setCurrentTime(0);\n      this.player.reset();\n\n      switch (this.getRecordType()) {\n        case _recordMode.AUDIO_ONLY:\n          if (this.surfer && this.surfer.surfer) {\n            this.surfer.surfer.empty();\n          }\n\n          break;\n\n        case _recordMode.IMAGE_ONLY:\n        case _recordMode.ANIMATION:\n          this.player.recordCanvas.hide();\n          this.player.cameraButton.hide();\n          break;\n      }\n\n      if (this.player.controlBar.playToggle !== undefined) {\n        this.player.controlBar.playToggle.hide();\n      }\n\n      this.player.deviceButton.show();\n      this.player.recordToggle.hide();\n      this.player.one('loadedmetadata', function () {\n        _this7.setDuration(_this7.maxLength);\n      });\n    }\n  }, {\n    key: \"resetState\",\n    value: function resetState() {\n      this._recording = false;\n      this._processing = false;\n      this._deviceActive = false;\n      this.devices = [];\n    }\n  }, {\n    key: \"muteTracks\",\n    value: function muteTracks(mute) {\n      if ((this.getRecordType() === _recordMode.AUDIO_ONLY || this.getRecordType() === _recordMode.AUDIO_VIDEO) && this.stream.getAudioTracks().length > 0) {\n        this.stream.getAudioTracks()[0].enabled = !mute;\n      }\n\n      if (this.getRecordType() !== _recordMode.AUDIO_ONLY && this.stream.getVideoTracks().length > 0) {\n        this.stream.getVideoTracks()[0].enabled = !mute;\n      }\n    }\n  }, {\n    key: \"getRecordType\",\n    value: function getRecordType() {\n      return (0, _recordMode.getRecorderMode)(this.recordImage, this.recordAudio, this.recordVideo, this.recordAnimation, this.recordScreen);\n    }\n  }, {\n    key: \"createSnapshot\",\n    value: function createSnapshot() {\n      var _this8 = this;\n\n      this.captureFrame().then(function (result) {\n        _this8.player.recordedData = result.toDataURL('image/png');\n        _this8.mediaElement.style.display = 'none';\n\n        _this8.player.recordCanvas.show();\n\n        _this8.stop();\n      });\n    }\n  }, {\n    key: \"retrySnapshot\",\n    value: function retrySnapshot() {\n      this._processing = false;\n      this.player.recordCanvas.hide();\n      this.player.el().firstChild.style.display = 'block';\n    }\n  }, {\n    key: \"captureFrame\",\n    value: function captureFrame() {\n      var _this9 = this;\n\n      var detected = (0, _detectBrowser.detectBrowser)();\n      var recordCanvas = this.player.recordCanvas.el().firstChild;\n      recordCanvas.width = this.player.width();\n      recordCanvas.height = this.player.height();\n      return new Promise(function (resolve, reject) {\n        if (detected.browser === 'chrome' && detected.version >= 60 && (typeof ImageCapture === \"undefined\" ? \"undefined\" : _typeof(ImageCapture)) === (typeof Function === \"undefined\" ? \"undefined\" : _typeof(Function))) {\n          try {\n            var track = _this9.stream.getVideoTracks()[0];\n\n            var imageCapture = new ImageCapture(track);\n            imageCapture.grabFrame().then(function (imageBitmap) {\n              _this9.drawCanvas(recordCanvas, imageBitmap);\n\n              resolve(recordCanvas);\n            }).catch(function (error) {});\n          } catch (err) {}\n        }\n\n        _this9.drawCanvas(recordCanvas, _this9.mediaElement);\n\n        resolve(recordCanvas);\n      });\n    }\n  }, {\n    key: \"drawCanvas\",\n    value: function drawCanvas(canvas, element) {\n      canvas.getContext('2d').drawImage(element, 0, 0, canvas.width, canvas.height);\n    }\n  }, {\n    key: \"startVideoPreview\",\n    value: function startVideoPreview() {\n      this.off('timeupdate');\n      this.off('durationchange');\n      this.off('loadedmetadata');\n      this.off('play');\n      this.mediaElement.muted = true;\n      this.displayVolumeControl(false);\n      this.load(this.stream);\n      this.mediaElement.play();\n    }\n  }, {\n    key: \"showAnimation\",\n    value: function showAnimation() {\n      var animationDisplay = this.player.animationDisplay.el().firstChild;\n      animationDisplay.width = this.player.width();\n      animationDisplay.height = this.player.height();\n      this.player.recordCanvas.hide();\n      (0, _browserShim.default)(this.player.recordedData, animationDisplay);\n      this.player.animationDisplay.show();\n    }\n  }, {\n    key: \"hideAnimation\",\n    value: function hideAnimation() {\n      this.player.recordCanvas.show();\n      this.player.animationDisplay.hide();\n    }\n  }, {\n    key: \"playbackTimeUpdate\",\n    value: function playbackTimeUpdate() {\n      this.setCurrentTime(this.player.currentTime(), this.streamDuration);\n    }\n  }, {\n    key: \"onTimeStamp\",\n    value: function onTimeStamp(current, all) {\n      this.player.currentTimestamp = current;\n      this.player.allTimestamps = all;\n      var internal;\n\n      switch (this.getRecordType()) {\n        case _recordMode.AUDIO_ONLY:\n          internal = this.engine.engine.audioRecorder;\n          break;\n\n        case _recordMode.ANIMATION:\n          internal = this.engine.engine.gifRecorder;\n          break;\n\n        default:\n          internal = this.engine.engine.videoRecorder;\n      }\n\n      var maxFileSizeReached = false;\n\n      if (internal) {\n        internal = internal.getInternalRecorder();\n      }\n\n      if (internal instanceof MediaStreamRecorder === true) {\n        this.player.recordedData = internal.getArrayOfBlobs();\n        this.engine.addFileInfo(this.player.recordedData[this.player.recordedData.length - 1]);\n\n        if (this.maxFileSize > 0) {\n          var currentSize = new Blob(this.player.recordedData).size;\n\n          if (currentSize >= this.maxFileSize) {\n            maxFileSizeReached = true;\n          }\n        }\n      }\n\n      this.player.trigger('timestamp');\n\n      if (maxFileSizeReached) {\n        this.stop();\n      }\n    }\n  }, {\n    key: \"enumerateDevices\",\n    value: function enumerateDevices() {\n      var _this10 = this;\n\n      if (!navigator.mediaDevices || !navigator.mediaDevices.enumerateDevices) {\n        this.player.enumerateErrorCode = 'enumerateDevices() not supported.';\n        this.player.trigger('enumerateError');\n        return;\n      }\n\n      navigator.mediaDevices.enumerateDevices(this).then(function (devices) {\n        _this10.devices = [];\n        devices.forEach(function (device) {\n          _this10.devices.push(device);\n        });\n\n        _this10.player.trigger('enumerateReady');\n      }).catch(function (err) {\n        _this10.player.enumerateErrorCode = err;\n\n        _this10.player.trigger('enumerateError');\n      });\n    }\n  }, {\n    key: \"setAudioOutput\",\n    value: function setAudioOutput(deviceId) {\n      var _this11 = this;\n\n      var errorMessage;\n\n      switch (this.getRecordType()) {\n        case _recordMode.AUDIO_ONLY:\n          this.surfer.surfer.setSinkId(deviceId).then(function (result) {\n            _this11.player.trigger('audioOutputReady');\n\n            return;\n          }).catch(function (err) {\n            errorMessage = err;\n          });\n          break;\n\n        default:\n          var element = player.tech_.el_;\n\n          if (deviceId) {\n            if (typeof element.sinkId !== 'undefined') {\n              element.setSinkId(deviceId).then(function (result) {\n                _this11.player.trigger('audioOutputReady');\n\n                return;\n              }).catch(function (err) {\n                errorMessage = err;\n              });\n            } else {\n              errorMessage = 'Browser does not support audio output device selection.';\n            }\n          } else {\n            errorMessage = 'Invalid deviceId: ' + deviceId;\n          }\n\n          break;\n      }\n\n      this.player.trigger('error', errorMessage);\n    }\n  }, {\n    key: \"displayVolumeControl\",\n    value: function displayVolumeControl(display) {\n      if (this.player.controlBar.volumePanel !== undefined) {\n        if (display === true) {\n          display = 'flex';\n        } else {\n          display = 'none';\n        }\n\n        this.player.controlBar.volumePanel.el().style.display = display;\n      }\n    }\n  }]);\n\n  return Record;\n}(Plugin);\n\nexports.Record = Record;\nRecord.VERSION = \"3.4.3\";\n_video.default.Record = Record;\n\nif (_video.default.getPlugin('record') === undefined) {\n  _video.default.registerPlugin('record', Record);\n}\n\n//# sourceURL=webpack://VideojsRecord/./src/js/videojs.record.js?");

/***/ }),

/***/ 0:
/*!**********************************************************************!*\
  !*** multi ./src/js/videojs.record.js ./src/css/videojs.record.scss ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("__webpack_require__(/*! /home/thijs/projects/videojs-record/src/js/videojs.record.js */\"./src/js/videojs.record.js\");\nmodule.exports = __webpack_require__(/*! /home/thijs/projects/videojs-record/src/css/videojs.record.scss */\"./src/css/videojs.record.scss\");\n\n\n//# sourceURL=webpack://VideojsRecord/multi_./src/js/videojs.record.js_./src/css/videojs.record.scss?");

/***/ }),

/***/ "video.js":
/*!**************************!*\
  !*** external "videojs" ***!
  \**************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = __WEBPACK_EXTERNAL_MODULE_video_js__;\n\n//# sourceURL=webpack://VideojsRecord/external_%22videojs%22?");

/***/ })

/******/ });
});