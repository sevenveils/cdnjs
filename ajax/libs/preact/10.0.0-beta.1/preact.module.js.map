{"version":3,"file":"preact.module.js","sources":["../src/constants.js","../src/options.js","../src/component.js","../src/diff/props.js","../src/create-context.js","../src/util.js","../src/create-element.js","../src/diff/children.js","../src/diff/index.js","../src/render.js","../src/clone-element.js"],"sourcesContent":["export const EMPTY_OBJ = {};\nexport const EMPTY_ARR = [];\nexport const IS_NON_DIMENSIONAL = /acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|^--/i;\n","/** @type {import('./index').Options}  */\nconst options = {};\n\nexport default options;\n","import { assign } from './util';\nimport { diff, commitRoot } from './diff/index';\nimport options from './options';\nimport { Fragment } from './create-element';\n\n/**\n * Base Component class. Provides `setState()` and `forceUpdate()`, which\n * trigger rendering\n * @param {object} props The initial component props\n * @param {object} context The initial context from parent components'\n * getChildContext\n */\nexport function Component(props, context) {\n\tthis.props = props;\n\tthis.context = context;\n\t// this.constructor // When component is functional component, this is reset to functional component\n\t// if (this.state==null) this.state = {};\n\t// this.state = {};\n\t// this._dirty = true;\n\t// this._renderCallbacks = []; // Only class components\n\n\t// Other properties that Component will have set later,\n\t// shown here as commented out for quick reference\n\t// this.base = null;\n\t// this._context = null;\n\t// this._ancestorComponent = null; // Always set right after instantiation\n\t// this._vnode = null;\n\t// this._nextState = null; // Only class components\n\t// this._prevVNode = null;\n\t// this._processingException = null; // Always read, set only when handling error\n\t// this._pendingError = null; // Always read, set only when handling error. This is used to indicate at diffTime to set _processingException\n}\n\n/**\n * Update component state and schedule a re-render.\n * @param {object | ((s: object, p: object) => object)} update A hash of state\n * properties to update with new values or a function that given the current\n * state and props returns a new partial state\n * @param {() => void} [callback] A function to be called once component state is\n * updated\n */\nComponent.prototype.setState = function(update, callback) {\n\t// only clone state when copying to nextState the first time.\n\tlet s = (this._nextState!==this.state && this._nextState) || (this._nextState = assign({}, this.state));\n\n\t// if update() mutates state in-place, skip the copy:\n\tif (typeof update!=='function' || (update = update(s, this.props))) {\n\t\tassign(s, update);\n\t}\n\n\t// Skip update if updater function returned null\n\tif (update==null) return;\n\n\tif (this._vnode) {\n\t\tif (callback) this._renderCallbacks.push(callback);\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Immediately perform a synchronous re-render of the component\n * @param {() => void} [callback] A function to be called after component is\n * re-renderd\n */\nComponent.prototype.forceUpdate = function(callback) {\n\tlet vnode = this._vnode, dom = this._vnode._dom, parentDom = this._parentDom;\n\tif (parentDom) {\n\t\t// Set render mode so that we can differantiate where the render request\n\t\t// is coming from. We need this because forceUpdate should never call\n\t\t// shouldComponentUpdate\n\t\tconst force = callback!==false;\n\n\t\tlet mounts = [];\n\t\tdom = diff(parentDom, vnode, vnode, this._context, parentDom.ownerSVGElement!==undefined, null, mounts, this._ancestorComponent, force, dom);\n\t\tif (dom!=null && dom.parentNode!==parentDom) {\n\t\t\tparentDom.appendChild(dom);\n\t\t}\n\t\tcommitRoot(mounts, vnode);\n\t}\n\tif (callback) callback();\n};\n\n/**\n * Accepts `props` and `state`, and returns a new Virtual DOM tree to build.\n * Virtual DOM is generally constructed via [JSX](http://jasonformat.com/wtf-is-jsx).\n * @param {object} props Props (eg: JSX attributes) received from parent\n * element/component\n * @param {object} state The component's current state\n * @param {object} context Context object, as returned by the nearest\n * ancestor's `getChildContext()`\n * @returns {import('./index').ComponentChildren | void}\n */\nComponent.prototype.render = Fragment;\n\n/**\n * The render queue\n * @type {Array<import('./internal').Component>}\n */\nlet q = [];\n\n/**\n * Asynchronously schedule a callback\n * @type {(cb) => void}\n */\nconst defer = typeof Promise=='function' ? Promise.prototype.then.bind(Promise.resolve()) : setTimeout;\n\n/*\n * The value of `Component.debounce` must asynchronously invoke the passed in callback. It is\n * important that contributors to Preact can consistenly reason about what calls to `setState`, etc.\n * do, and when their effects will be applied. See the links below for some further reading on designing\n * asynchronous APIs.\n * * [Designing APIs for Asynchrony](https://blog.izs.me/2013/08/designing-apis-for-asynchrony)\n * * [Callbacks synchronous and asynchronous](https://blog.ometer.com/2011/07/24/callbacks-synchronous-and-asynchronous/)\n */\n\n/**\n * Enqueue a rerender of a component\n * @param {import('./internal').Component} c The component to rerender\n */\nexport function enqueueRender(c) {\n\tif (!c._dirty && (c._dirty = true) && q.push(c) === 1) {\n\t\t(options.debounceRendering || defer)(process);\n\t}\n}\n\n/** Flush the render queue by rerendering all queued components */\nfunction process() {\n\tlet p;\n\tq.sort((a, b) => b._depth - a._depth);\n\twhile ((p=q.pop())) {\n\t\t// forceUpdate's callback argument is reused here to indicate a non-forced update.\n\t\tif (p._dirty) p.forceUpdate(false);\n\t}\n}\n","import { IS_NON_DIMENSIONAL } from '../constants';\nimport options from '../options';\n\n/**\n * Diff the old and new properties of a VNode and apply changes to the DOM node\n * @param {import('../internal').PreactElement} dom The DOM node to apply\n * changes to\n * @param {object} newProps The new props\n * @param {object} oldProps The old props\n * @param {boolean} isSvg Whether or not this node is an SVG node\n */\nexport function diffProps(dom, newProps, oldProps, isSvg) {\n\tlet keys = Object.keys(newProps).sort();\n\tfor (let i = 0; i < keys.length; i++) {\n\t\tif (keys[i]!=='children' && keys[i]!=='key' && (!oldProps || ((keys[i]==='value' || keys[i]==='checked') ? dom : oldProps)[keys[i]]!==newProps[keys[i]])) {\n\t\t\tsetProperty(dom, keys[i], newProps[keys[i]], oldProps[keys[i]], isSvg);\n\t\t}\n\t}\n\n\tfor (let i in oldProps) {\n\t\tif (i!=='children' && i!=='key' && (!newProps || !(i in newProps))) {\n\t\t\tsetProperty(dom, i, null, oldProps[i], isSvg);\n\t\t}\n\t}\n}\n\nlet CAMEL_REG = /-?(?=[A-Z])/g;\n\n/**\n * Set a property value on a DOM node\n * @param {import('../internal').PreactElement} dom The DOM node to modify\n * @param {string} name The name of the property to set\n * @param {*} value The value to set the property to\n * @param {*} oldValue The old value the property had\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node or not\n */\nfunction setProperty(dom, name, value, oldValue, isSvg) {\n\tlet v;\n\tif (name==='class' || name==='className') name = isSvg ? 'class' : 'className';\n\n\tif (name==='style') {\n\n\t\t/* Possible golfing activities for setting styles:\n\t\t *   - we could just drop String style values. They're not supported in other VDOM libs.\n\t\t *   - assigning to .style sets .style.cssText - TODO: benchmark this, might not be worth the bytes.\n\t\t *   - assigning also casts to String, and ignores invalid values. This means assigning an Object clears all styles.\n\t\t */\n\t\tlet s = dom.style;\n\n\t\tif (typeof value==='string') {\n\t\t\ts.cssText = value;\n\t\t}\n\t\telse {\n\t\t\tif (typeof oldValue==='string') s.cssText = '';\n\t\t\telse {\n\t\t\t\t// remove values not in the new list\n\t\t\t\tfor (let i in oldValue) {\n\t\t\t\t\tif (value==null || !(i in value)) s.setProperty(i.replace(CAMEL_REG, '-'), '');\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (let i in value) {\n\t\t\t\tv = value[i];\n\t\t\t\tif (oldValue==null || v!==oldValue[i]) {\n\t\t\t\t\ts.setProperty(i.replace(CAMEL_REG, '-'), typeof v==='number' && IS_NON_DIMENSIONAL.test(i)===false ? (v + 'px') : v);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\telse if (name==='dangerouslySetInnerHTML') {\n\t\treturn;\n\t}\n\t// Benchmark for comparison: https://esbench.com/bench/574c954bdb965b9a00965ac6\n\telse if (name[0]==='o' && name[1]==='n') {\n\t\tlet useCapture = name !== (name=name.replace(/Capture$/, ''));\n\t\tlet nameLower = name.toLowerCase();\n\t\tname = (nameLower in self ? nameLower : name).substring(2);\n\n\t\tif (value) {\n\t\t\tif (!oldValue) dom.addEventListener(name, eventProxy, useCapture);\n\t\t}\n\t\telse {\n\t\t\tdom.removeEventListener(name, eventProxy, useCapture);\n\t\t}\n\t\t(dom._listeners || (dom._listeners = {}))[name] = value;\n\t}\n\telse if (name!=='list' && name!=='tagName' && !isSvg && (name in dom)) {\n\t\tdom[name] = value==null ? '' : value;\n\t}\n\telse if (value==null || value===false) {\n\t\tif (name!==(name = name.replace(/^xlink:?/, ''))) dom.removeAttributeNS('http://www.w3.org/1999/xlink', name.toLowerCase());\n\t\telse dom.removeAttribute(name);\n\t}\n\telse if (typeof value!=='function') {\n\t\tif (name!==(name = name.replace(/^xlink:?/, ''))) dom.setAttributeNS('http://www.w3.org/1999/xlink', name.toLowerCase(), value);\n\t\telse dom.setAttribute(name, value);\n\t}\n}\n\n/**\n * Proxy an event to hooked event handlers\n * @param {Event} e The event object from the browser\n * @private\n */\nfunction eventProxy(e) {\n\treturn this._listeners[e.type](options.event ? options.event(e) : e);\n}\n","import { enqueueRender } from './component';\n\nexport let i = 0;\n\n/**\n *\n * @param {any} defaultValue\n */\nexport function createContext(defaultValue) {\n\tlet context = {\n\t\t_id: '__cC' + i++,\n\t\t_defaultValue: defaultValue\n\t};\n\n\tfunction Consumer(props, context) {\n\t\treturn props.children(context);\n\t}\n\tConsumer.contextType = context;\n\tcontext.Consumer = Consumer;\n\n\tlet ctx = {};\n\n\tfunction initProvider(comp) {\n\t\tconst subs = [];\n\t\tcomp.getChildContext = () => {\n\t\t\tctx[context._id] = comp;\n\t\t\treturn ctx;\n\t\t};\n\t\tcomp.shouldComponentUpdate = props => {\n\t\t\tsubs.map(c => {\n\t\t\t\t// Check if still mounted\n\t\t\t\tif (c._parentDom) {\n\t\t\t\t\tc.context = props.value;\n\t\t\t\t\tenqueueRender(c);\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\t\tcomp.sub = (c) => {\n\t\t\tsubs.push(c);\n\t\t\tlet old = c.componentWillUnmount;\n\t\t\tc.componentWillUnmount = () => {\n\t\t\t\tsubs.splice(subs.indexOf(c), 1);\n\t\t\t\told && old();\n\t\t\t};\n\t\t};\n\t}\n\n\tfunction Provider(props) {\n\t\tif (!this.getChildContext) initProvider(this);\n\t\treturn props.children;\n\t}\n\tcontext.Provider = Provider;\n\n\treturn context;\n}\n","/**\n * Assign properties from `props` to `obj`\n * @template O, P The obj and props types\n * @param {O} obj The object to copy properties to\n * @param {P} props The object to copy properties from\n * @returns {O & P}\n */\nexport function assign(obj, props) {\n\tfor (let i in props) obj[i] = props[i];\n\treturn /** @type {O & P} */ (obj);\n}\n\n/**\n * Remove a child node from its parent if attached. This is a workaround for\n * IE11 which doesn't support `Element.prototype.remove()`. Using this function\n * is smaller than including a dedicated polyfill.\n * @param {Node} node The node to remove\n */\nexport function removeNode(node) {\n\tlet parentNode = node.parentNode;\n\tif (parentNode) parentNode.removeChild(node);\n}\n","import options from './options';\nimport { assign } from './util';\n\n/**\n  * Create an virtual node (used for JSX)\n  * @param {import('./internal').VNode[\"type\"]} type The node name or Component\n  * constructor for this virtual node\n  * @param {object | null | undefined} [props] The properties of the virtual node\n  * @param {Array<import('.').ComponentChildren>} [children] The children of the virtual node\n  * @returns {import('./internal').VNode}\n  */\nexport function createElement(type, props, children) {\n\tprops = assign({}, props);\n\n\tif (arguments.length>3) {\n\t\tchildren = [children];\n\t\tfor (let i=3; i<arguments.length; i++) {\n\t\t\tchildren.push(arguments[i]);\n\t\t}\n\t}\n\tif (children!=null) {\n\t\tprops.children = children;\n\t}\n\n\t// \"type\" may be undefined during development. The check is needed so that\n\t// we can display a nice error message with our debug helpers\n\tif (type!=null && type.defaultProps!=null) {\n\t\tfor (let i in type.defaultProps) {\n\t\t\tif (props[i]===undefined) props[i] = type.defaultProps[i];\n\t\t}\n\t}\n\tlet ref = props.ref;\n\tif (ref) delete props.ref;\n\tlet key = props.key;\n\tif (key) delete props.key;\n\n\treturn createVNode(type, props, null, key, ref);\n}\n\n/**\n * Create a VNode (used internally by Preact)\n * @param {import('./internal').VNode[\"type\"]} type The node name or Component\n * Constructor for this virtual node\n * @param {object | null} props The properites of this virtual node\n * @param {string | number} text If this virtual node represents a text node,\n * this is the text of the node\n * @param {string |number | null} key The key for this virtual node, used when\n * diffing it against its children\n * @param {import('./internal').VNode[\"ref\"]} ref The ref property that will\n * receive a reference to its created child\n * @returns {import('./internal').VNode}\n */\nexport function createVNode(type, props, text, key, ref) {\n\t// V8 seems to be better at detecting type shapes if the object is allocated from the same call site\n\t// Do not inline into createElement and coerceToVNode!\n\tconst vnode = {\n\t\ttype,\n\t\tprops,\n\t\ttext,\n\t\tkey,\n\t\tref,\n\t\t_children: null,\n\t\t_dom: null,\n\t\t_lastDomChild: null,\n\t\t_component: null\n\t};\n\tvnode._self = vnode;\n\n\tif (options.vnode) options.vnode(vnode);\n\n\treturn vnode;\n}\n\nexport function createRef() {\n\treturn {};\n}\n\nexport /* istanbul ignore next */ function Fragment() { }\n\n/**\n * Coerce an untrusted value into a VNode\n * Specifically, this should be used anywhere a user could provide a boolean, string, or number where\n * a VNode or Component is desired instead\n * @param {boolean | string | number | import('./internal').VNode} possibleVNode A possible VNode\n * @returns {import('./internal').VNode | null}\n */\nexport function coerceToVNode(possibleVNode) {\n\tif (possibleVNode == null || typeof possibleVNode === 'boolean') return null;\n\tif (typeof possibleVNode === 'string' || typeof possibleVNode === 'number') {\n\t\treturn createVNode(null, null, possibleVNode, null, null);\n\t}\n\n\tif (Array.isArray(possibleVNode)) {\n\t\treturn createElement(Fragment, null, possibleVNode);\n\t}\n\n\t// Clone vnode if it has already been used. ceviche/#57\n\tif (possibleVNode._dom!=null || possibleVNode._component!=null) {\n\t\tlet vnode = createVNode(possibleVNode.type, possibleVNode.props, possibleVNode.text, possibleVNode.key, null);\n\t\tvnode._dom = possibleVNode._dom;\n\t\treturn vnode;\n\t}\n\n\treturn possibleVNode;\n}\n","import { diff, unmount } from './index';\nimport { coerceToVNode, Fragment } from '../create-element';\nimport { EMPTY_OBJ, EMPTY_ARR } from '../constants';\nimport { removeNode } from '../util';\n\n/**\n * Diff the children of a virtual node\n * @param {import('../internal').PreactElement} parentDom The DOM element whose\n * children are being diffed\n * @param {import('../internal').VNode} newParentVNode The new virtual\n * node whose children should be diff'ed against oldParentVNode\n * @param {import('../internal').VNode} oldParentVNode The old virtual\n * node whose children should be diff'ed against newParentVNode\n * @param {object} context The current context object\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node\n * @param {Array<import('../internal').PreactElement>} excessDomChildren\n * @param {Array<import('../internal').Component>} mounts The list of components\n * which have mounted\n * @param {import('../internal').Component} ancestorComponent The direct parent\n * component to the ones being diffed\n * @param {Node | Text} oldDom The current attached DOM\n * element any new dom elements should be placed around. Likely `null` on first\n * render (except when hydrating). Can be a sibling DOM element when diffing\n * Fragments that have siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n */\nexport function diffChildren(parentDom, newParentVNode, oldParentVNode, context, isSvg, excessDomChildren, mounts, ancestorComponent, oldDom) {\n\tlet childVNode, i, j, oldVNode, newDom, sibDom;\n\n\tlet newChildren = newParentVNode._children || toChildArray(newParentVNode.props.children, newParentVNode._children=[], coerceToVNode, true);\n\t// This is a compression of oldParentVNode!=null && oldParentVNode != EMPTY_OBJ && oldParentVNode._children || EMPTY_ARR\n\t// as EMPTY_OBJ._children should be `undefined`.\n\tlet oldChildren = oldParentVNode!=null && oldParentVNode._children || EMPTY_ARR;\n\n\tlet oldChildrenLength = oldChildren.length;\n\tlet oldChild;\n\n\t// Only in very specific places should this logic be invoked (top level `render` and `diffElementNodes`).\n\t// I'm using `EMPTY_OBJ` to signal when `diffChildren` is invoked in these situations. I can't use `null`\n\t// for this purpose, because `null` is a valid value for `oldDom` which can mean to skip to this logic\n\t// (e.g. if mounting a new tree in which the old DOM should be ignored (usually for Fragments).\n\tif (oldDom == EMPTY_OBJ) {\n\t\toldDom = null;\n\t\tif (excessDomChildren!=null) {\n\t\t\tfor (i = 0; oldDom==null && i < excessDomChildren.length; i++) {\n\t\t\t\toldDom = excessDomChildren[i];\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tfor (i = 0; oldDom==null && i < oldChildrenLength; i++) {\n\t\t\t\toldDom = oldChildren[i] && oldChildren[i]._dom;\n\t\t\t\toldChild = oldChildren[i];\n\t\t\t}\n\t\t}\n\t}\n\n\tfor (i=0; i<newChildren.length; i++) {\n\t\tchildVNode = newChildren[i] = coerceToVNode(newChildren[i]);\n\n\t\tif (childVNode!=null) {\n\t\t\t// Check if we find a corresponding element in oldChildren.\n\t\t\t// If found, delete the array item by setting to `undefined`.\n\t\t\t// We use `undefined`, as `null` is reserved for empty placeholders\n\t\t\t// (holes).\n\t\t\toldVNode = oldChildren[i];\n\n\t\t\tif (oldVNode===null || (oldVNode != null && (childVNode.key==null && oldVNode.key==null ? (childVNode.type === oldVNode.type) : (childVNode.key === oldVNode.key)))) {\n\t\t\t\toldChildren[i] = undefined;\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Either oldVNode === undefined or oldChildrenLength > 0,\n\t\t\t\t// so after this loop oldVNode == null or oldVNode is a valid value.\n\t\t\t\tfor (j=0; j<oldChildrenLength; j++) {\n\t\t\t\t\toldVNode = oldChildren[j];\n\t\t\t\t\tif (oldVNode!=null && (childVNode.key==null && oldVNode.key==null ? (childVNode.type === oldVNode.type) : (childVNode.key === oldVNode.key))) {\n\t\t\t\t\t\toldChildren[j] = undefined;\n\t\t\t\t\t\tif (oldChildrenLength !== newChildren.length && oldVNode.type !== (oldChild && oldChild.type)) {\n\t\t\t\t\t\t\toldDom = oldVNode._dom;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\toldVNode = null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Morph the old element into the new one, but don't append it to the dom yet\n\t\t\tnewDom = diff(parentDom, childVNode, oldVNode, context, isSvg, excessDomChildren, mounts, ancestorComponent, null, oldDom);\n\n\t\t\t// Only proceed if the vnode has not been unmounted by `diff()` above.\n\t\t\tif (newDom!=null) {\n\t\t\t\tif (childVNode._lastDomChild != null) {\n\t\t\t\t\t// Only Fragments or components that return Fragment like VNodes will\n\t\t\t\t\t// have a non-null _lastDomChild. Continue the diff from the end of\n\t\t\t\t\t// this Fragment's DOM tree.\n\t\t\t\t\tnewDom = childVNode._lastDomChild;\n\t\t\t\t}\n\t\t\t\telse if (excessDomChildren==oldVNode || newDom!=oldDom || newDom.parentNode==null) {\n\t\t\t\t\t// NOTE: excessDomChildren==oldVNode above:\n\t\t\t\t\t// This is a compression of excessDomChildren==null && oldVNode==null!\n\t\t\t\t\t// The values only have the same type when `null`.\n\n\t\t\t\t\touter: if (oldDom==null || oldDom.parentNode!==parentDom) {\n\t\t\t\t\t\tparentDom.appendChild(newDom);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tsibDom = oldDom;\n\t\t\t\t\t\tj = 0;\n\t\t\t\t\t\twhile ((sibDom=sibDom.nextSibling) && j++<oldChildrenLength/2) {\n\t\t\t\t\t\t\tif (sibDom===newDom) {\n\t\t\t\t\t\t\t\tbreak outer;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tparentDom.insertBefore(newDom, oldDom);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\toldDom = newDom.nextSibling;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Remove children that are not part of any vnode. Only used by `hydrate`\n\tif (excessDomChildren!=null && newParentVNode.type!==Fragment) for (i=excessDomChildren.length; i--; ) if (excessDomChildren[i]!=null) removeNode(excessDomChildren[i]);\n\n\t// Remove remaining oldChildren if there are any.\n\tfor (i=oldChildrenLength; i--; ) if (oldChildren[i]!=null) unmount(oldChildren[i], ancestorComponent);\n}\n\n/**\n * Flatten a virtual nodes children to a single dimensional array\n * @param {import('../index').ComponentChildren} children The unflattened\n * children of a virtual node\n * @param {Array<import('../internal').VNode | null>} [flattened] An flat array of children to modify\n * @param {typeof import('../create-element').coerceToVNode} [map] Function that\n * will be applied on each child if the `vnode` is not `null`\n * @param {boolean} [keepHoles] wether to coerce `undefined` to `null` or not.\n * This is needed for Components without children like `<Foo />`.\n */\nexport function toChildArray(children, flattened, map, keepHoles) {\n\tif (flattened == null) flattened = [];\n\tif (children==null || typeof children === 'boolean') {\n\t\tif (keepHoles) flattened.push(null);\n\t}\n\telse if (Array.isArray(children)) {\n\t\tfor (let i=0; i < children.length; i++) {\n\t\t\ttoChildArray(children[i], flattened, map, keepHoles);\n\t\t}\n\t}\n\telse {\n\t\tflattened.push(map ? map(children) : children);\n\t}\n\n\treturn flattened;\n}\n","import { EMPTY_OBJ, EMPTY_ARR } from '../constants';\nimport { Component, enqueueRender } from '../component';\nimport { coerceToVNode, Fragment } from '../create-element';\nimport { diffChildren } from './children';\nimport { diffProps } from './props';\nimport { assign, removeNode } from '../util';\nimport options from '../options';\n\n/**\n * Diff two virtual nodes and apply proper changes to the DOM\n * @param {import('../internal').PreactElement} parentDom The parent of the DOM element\n * @param {import('../internal').VNode | null} newVNode The new virtual node\n * @param {import('../internal').VNode | null} oldVNode The old virtual node\n * @param {object} context The current context object\n * @param {boolean} isSvg Whether or not this element is an SVG node\n * @param {Array<import('../internal').PreactElement>} excessDomChildren\n * @param {Array<import('../internal').Component>} mounts A list of newly\n * mounted components\n * @param {import('../internal').Component | null} ancestorComponent The direct\n * parent component\n * @param {Element | Text} oldDom The current attached DOM\n * element any new dom elements should be placed around. Likely `null` on first\n * render (except when hydrating). Can be a sibling DOM element when diffing\n * Fragments that have siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n */\nexport function diff(parentDom, newVNode, oldVNode, context, isSvg, excessDomChildren, mounts, ancestorComponent, force, oldDom) {\n\t// If the previous type doesn't match the new type we drop the whole subtree\n\tif (oldVNode==null || newVNode==null || oldVNode.type!==newVNode.type || oldVNode.key!==newVNode.key) {\n\t\tif (oldVNode!=null) unmount(oldVNode, ancestorComponent);\n\t\tif (newVNode==null) return null;\n\t\toldVNode = EMPTY_OBJ;\n\t}\n\n\t// When passing through createElement it assigns the object\n\t// ref on _self, to prevent JSON Injection we check if this attribute\n\t// is equal.\n\tif (newVNode._self!==newVNode) return null;\n\n\tif (options.diff) options.diff(newVNode);\n\n\tlet c, p, isNew = false, oldProps, oldState, snapshot,\n\t\tnewType = newVNode.type, clearProcessingException;\n\n\ttry {\n\t\touter: if (oldVNode.type===Fragment || newType===Fragment) {\n\t\t\tdiffChildren(parentDom, newVNode, oldVNode, context, isSvg, excessDomChildren, mounts, c, oldDom);\n\n\t\t\t// Mark dom as empty in case `_children` is any empty array. If it isn't\n\t\t\t// we'll set `dom` to the correct value just a few lines later.\n\n\t\t\tif (newVNode._children.length && newVNode._children[0]!=null) {\n\t\t\t\tnewVNode._dom = newVNode._children[0]._dom;\n\n\t\t\t\t// If the last child is a Fragment, use _lastDomChild, else use _dom\n\t\t\t\t// We have no guarantee that the last child rendered something into the\n\t\t\t\t// dom, so we iterate backwards to find the last child with a dom node.\n\t\t\t\tfor (let i = newVNode._children.length; i--;) {\n\t\t\t\t\tp = newVNode._children[i];\n\t\t\t\t\tnewVNode._lastDomChild = p && (p._lastDomChild || p._dom);\n\t\t\t\t\tif (newVNode._lastDomChild) break;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if (typeof newType==='function') {\n\n\t\t\t// Necessary for createContext api. Setting this property will pass\n\t\t\t// the context value as `this.context` just for this component.\n\t\t\tlet cxType = newType.contextType;\n\t\t\tlet provider = cxType && context[cxType._id];\n\t\t\tlet cctx = cxType != null ? (provider ? provider.props.value : cxType._defaultValue) : context;\n\n\t\t\t// Get component and set it to `c`\n\t\t\tif (oldVNode._component) {\n\t\t\t\tc = newVNode._component = oldVNode._component;\n\t\t\t\tclearProcessingException = c._processingException = c._pendingError;\n\t\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Instantiate the new component\n\t\t\t\tif (newType.prototype && newType.prototype.render) {\n\t\t\t\t\tnewVNode._component = c = new newType(newVNode.props, cctx); // eslint-disable-line new-cap\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tnewVNode._component = c = new Component(newVNode.props, cctx);\n\t\t\t\t\tc.constructor = newType;\n\t\t\t\t\tc.render = doRender;\n\t\t\t\t}\n\t\t\t\tc._ancestorComponent = ancestorComponent;\n\t\t\t\tif (provider) provider.sub(c);\n\n\t\t\t\tc.props = newVNode.props;\n\t\t\t\tif (!c.state) c.state = {};\n\t\t\t\tc.context = cctx;\n\t\t\t\tc._context = context;\n\t\t\t\tisNew = c._dirty = true;\n\t\t\t\tc._renderCallbacks = [];\n\t\t\t}\n\n\t\t\tc._vnode = newVNode;\n\n\t\t\t// Invoke getDerivedStateFromProps\n\t\t\tif (c._nextState==null) {\n\t\t\t\tc._nextState = c.state;\n\t\t\t}\n\t\t\tif (newType.getDerivedStateFromProps!=null) {\n\t\t\t\tassign(c._nextState==c.state ? (c._nextState = assign({}, c._nextState)) : c._nextState, newType.getDerivedStateFromProps(newVNode.props, c._nextState));\n\t\t\t}\n\n\t\t\t// Invoke pre-render lifecycle methods\n\t\t\tif (isNew) {\n\t\t\t\tif (newType.getDerivedStateFromProps==null && c.componentWillMount!=null) c.componentWillMount();\n\t\t\t\tif (c.componentDidMount!=null) mounts.push(c);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (newType.getDerivedStateFromProps==null && force==null && c.componentWillReceiveProps!=null) {\n\t\t\t\t\tc.componentWillReceiveProps(newVNode.props, cctx);\n\t\t\t\t}\n\n\t\t\t\tif (!force && c.shouldComponentUpdate!=null && c.shouldComponentUpdate(newVNode.props, c._nextState, cctx)===false) {\n\t\t\t\t\tc.props = newVNode.props;\n\t\t\t\t\tc.state = c._nextState;\n\t\t\t\t\tc._dirty = false;\n\t\t\t\t\tnewVNode._lastDomChild = oldVNode._lastDomChild;\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\n\t\t\t\tif (c.componentWillUpdate!=null) {\n\t\t\t\t\tc.componentWillUpdate(newVNode.props, c._nextState, cctx);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\toldProps = c.props;\n\t\t\toldState = c.state;\n\n\t\t\tc.context = cctx;\n\t\t\tc.props = newVNode.props;\n\t\t\tc.state = c._nextState;\n\n\t\t\tif (options.render) options.render(newVNode);\n\n\t\t\tlet prev = c._prevVNode || null;\n\t\t\tc._dirty = false;\n\t\t\tlet vnode = c._prevVNode = coerceToVNode(c.render(c.props, c.state, c.context));\n\n\t\t\tif (c.getChildContext!=null) {\n\t\t\t\tcontext = assign(assign({}, context), c.getChildContext());\n\t\t\t}\n\n\t\t\tif (!isNew && c.getSnapshotBeforeUpdate!=null) {\n\t\t\t\tsnapshot = c.getSnapshotBeforeUpdate(oldProps, oldState);\n\t\t\t}\n\n\t\t\tc._depth = ancestorComponent ? (ancestorComponent._depth || 0) + 1 : 0;\n\t\t\tc.base = newVNode._dom = diff(parentDom, vnode, prev, context, isSvg, excessDomChildren, mounts, c, null, oldDom);\n\n\t\t\tif (vnode!=null) {\n\t\t\t\t// If this component returns a Fragment (or another component that\n\t\t\t\t// returns a Fragment), then _lastDomChild will be non-null,\n\t\t\t\t// informing `diffChildren` to diff this component's VNode like a Fragemnt\n\t\t\t\tnewVNode._lastDomChild = vnode._lastDomChild;\n\t\t\t}\n\n\t\t\tc._parentDom = parentDom;\n\n\t\t\tif (newVNode.ref) applyRef(newVNode.ref, c, ancestorComponent);\n\n\t\t\twhile (p=c._renderCallbacks.pop()) p.call(c);\n\n\t\t\t// Don't call componentDidUpdate on mount or when we bailed out via\n\t\t\t// `shouldComponentUpdate`\n\t\t\tif (!isNew && oldProps!=null && c.componentDidUpdate!=null) {\n\t\t\t\tc.componentDidUpdate(oldProps, oldState, snapshot);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tnewVNode._dom = diffElementNodes(oldVNode._dom, newVNode, oldVNode, context, isSvg, excessDomChildren, mounts, ancestorComponent);\n\n\t\t\tif (newVNode.ref && (oldVNode.ref !== newVNode.ref)) {\n\t\t\t\tapplyRef(newVNode.ref, newVNode._dom, ancestorComponent);\n\t\t\t}\n\t\t}\n\n\t\tif (clearProcessingException) {\n\t\t\tc._pendingError = c._processingException = null;\n\t\t}\n\n\t\tif (options.diffed) options.diffed(newVNode);\n\t}\n\tcatch (e) {\n\t\tcatchErrorInComponent(e, ancestorComponent);\n\t}\n\n\treturn newVNode._dom;\n}\n\nexport function commitRoot(mounts, root) {\n\tlet c;\n\twhile ((c = mounts.pop())) {\n\t\ttry {\n\t\t\tc.componentDidMount();\n\t\t}\n\t\tcatch (e) {\n\t\t\tcatchErrorInComponent(e, c._ancestorComponent);\n\t\t}\n\t}\n\n\tif (options.commit) options.commit(root);\n}\n\n/**\n * Diff two virtual nodes representing DOM element\n * @param {import('../internal').PreactElement} dom The DOM element representing\n * the virtual nodes being diffed\n * @param {import('../internal').VNode} newVNode The new virtual node\n * @param {import('../internal').VNode} oldVNode The old virtual node\n * @param {object} context The current context object\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node\n * @param {*} excessDomChildren\n * @param {Array<import('../internal').Component>} mounts An array of newly\n * mounted components\n * @param {import('../internal').Component} ancestorComponent The parent\n * component to the ones being diffed\n * @returns {import('../internal').PreactElement}\n */\nfunction diffElementNodes(dom, newVNode, oldVNode, context, isSvg, excessDomChildren, mounts, ancestorComponent) {\n\tlet originalDom = dom;\n\n\t// Tracks entering and exiting SVG namespace when descending through the tree.\n\tisSvg = newVNode.type==='svg' || isSvg;\n\n\tif (dom==null && excessDomChildren!=null) {\n\t\tfor (let i=0; i<excessDomChildren.length; i++) {\n\t\t\tconst child = excessDomChildren[i];\n\t\t\tif (child!=null && (newVNode.type===null ? child.nodeType===3 : child.localName===newVNode.type)) {\n\t\t\t\tdom = child;\n\t\t\t\texcessDomChildren[i] = null;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (dom==null) {\n\t\tdom = newVNode.type===null ? document.createTextNode(newVNode.text) : isSvg ? document.createElementNS('http://www.w3.org/2000/svg', newVNode.type) : document.createElement(newVNode.type);\n\n\t\t// we created a new parent, so none of the previously attached children can be reused:\n\t\texcessDomChildren = null;\n\t}\n\n\tif (newVNode.type===null) {\n\t\tif ((originalDom==null || dom===originalDom) && newVNode.text!==oldVNode.text) {\n\t\t\tdom.data = newVNode.text;\n\t\t}\n\t}\n\telse {\n\t\tif (excessDomChildren!=null && dom.childNodes!=null) {\n\t\t\texcessDomChildren = EMPTY_ARR.slice.call(dom.childNodes);\n\t\t}\n\t\tif (newVNode!==oldVNode) {\n\t\t\tlet oldProps = oldVNode.props;\n\t\t\tlet newProps = newVNode.props;\n\n\t\t\t// if we're hydrating, use the element's attributes as its current props:\n\t\t\tif (oldProps==null) {\n\t\t\t\toldProps = {};\n\t\t\t\tif (excessDomChildren!=null) {\n\t\t\t\t\tlet name;\n\t\t\t\t\tfor (let i=0; i<dom.attributes.length; i++) {\n\t\t\t\t\t\tname = dom.attributes[i].name;\n\t\t\t\t\t\toldProps[name=='class' && newProps.className ? 'className' : name] = dom.attributes[i].value;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet oldHtml = oldProps.dangerouslySetInnerHTML;\n\t\t\tlet newHtml = newProps.dangerouslySetInnerHTML;\n\t\t\tif (newHtml || oldHtml) {\n\t\t\t\t// Avoid re-applying the same '__html' if it did not changed between re-render\n\t\t\t\tif (!newHtml || !oldHtml || newHtml.__html!=oldHtml.__html) {\n\t\t\t\t\tdom.innerHTML = newHtml && newHtml.__html || '';\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (newProps.multiple) {\n\t\t\t\tdom.multiple = newProps.multiple;\n\t\t\t}\n\n\t\t\tdiffChildren(dom, newVNode, oldVNode, context, newVNode.type==='foreignObject' ? false : isSvg, excessDomChildren, mounts, ancestorComponent, EMPTY_OBJ);\n\t\t\tdiffProps(dom, newProps, oldProps, isSvg);\n\t\t}\n\t}\n\n\treturn dom;\n}\n\n/**\n * Invoke or update a ref, depending on whether it is a function or object ref.\n * @param {object|function} [ref=null]\n * @param {any} [value]\n */\nexport function applyRef(ref, value, ancestorComponent) {\n\ttry {\n\t\tif (typeof ref=='function') ref(value);\n\t\telse ref.current = value;\n\t}\n\tcatch (e) {\n\t\tcatchErrorInComponent(e, ancestorComponent);\n\t}\n}\n\n/**\n * Unmount a virtual node from the tree and apply DOM changes\n * @param {import('../internal').VNode} vnode The virtual node to unmount\n * @param {import('../internal').Component} ancestorComponent The parent\n * component to this virtual node\n * @param {boolean} [skipRemove] Flag that indicates that a parent node of the\n * current element is already detached from the DOM.\n */\nexport function unmount(vnode, ancestorComponent, skipRemove) {\n\tlet r;\n\tif (options.unmount) options.unmount(vnode);\n\n\tif (r = vnode.ref) {\n\t\tapplyRef(r, null, ancestorComponent);\n\t}\n\n\tlet dom;\n\tif (!skipRemove && vnode._lastDomChild==null) {\n\t\tskipRemove = (dom = vnode._dom)!=null;\n\t}\n\n\tvnode._dom = vnode._lastDomChild = null;\n\n\tif ((r = vnode._component)!=null) {\n\t\tif (r.componentWillUnmount) {\n\t\t\ttry {\n\t\t\t\tr.componentWillUnmount();\n\t\t\t}\n\t\t\tcatch (e) {\n\t\t\t\tcatchErrorInComponent(e, ancestorComponent);\n\t\t\t}\n\t\t}\n\n\t\tr.base = r._parentDom = null;\n\t\tif (r = r._prevVNode) unmount(r, ancestorComponent, skipRemove);\n\t}\n\telse if (r = vnode._children) {\n\t\tfor (let i = 0; i < r.length; i++) {\n\t\t\tif (r[i]) unmount(r[i], ancestorComponent, skipRemove);\n\t\t}\n\t}\n\n\tif (dom!=null) removeNode(dom);\n}\n\n/** The `.render()` method for a PFC backing instance. */\nfunction doRender(props, state, context) {\n\treturn this.constructor(props, context);\n}\n\n/**\n * Find the closest error boundary to a thrown error and call it\n * @param {object} error The thrown value\n * @param {import('../internal').Component} component The first ancestor\n * component check for error boundary behaviors\n */\nfunction catchErrorInComponent(error, component) {\n\tfor (; component; component = component._ancestorComponent) {\n\t\tif (!component._processingException) {\n\t\t\ttry {\n\t\t\t\tif (component.constructor.getDerivedStateFromError!=null) {\n\t\t\t\t\tcomponent.setState(component.constructor.getDerivedStateFromError(error));\n\t\t\t\t}\n\t\t\t\telse if (component.componentDidCatch!=null) {\n\t\t\t\t\tcomponent.componentDidCatch(error);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\treturn enqueueRender(component._pendingError = component);\n\t\t\t}\n\t\t\tcatch (e) {\n\t\t\t\terror = e;\n\t\t\t}\n\t\t}\n\t}\n\tthrow error;\n}\n","import { EMPTY_OBJ, EMPTY_ARR } from './constants';\nimport { commitRoot } from './diff/index';\nimport { diffChildren } from './diff/children';\nimport { createElement, Fragment } from './create-element';\nimport options from './options';\n\n/**\n * Render a Preact virtual node into a DOM element\n * @param {import('./index').ComponentChild} vnode The virtual node to render\n * @param {import('./internal').PreactElement} parentDom The DOM element to\n * render into\n * @param {Element | Text} [replaceNode] Attempt to re-use an\n * existing DOM tree rooted at `replaceNode`\n */\nexport function render(vnode, parentDom, replaceNode) {\n\tif (options.root) options.root(vnode, parentDom);\n\tlet oldVNode = parentDom._prevVNode;\n\tvnode = createElement(Fragment, null, [vnode]);\n\n\tlet mounts = [];\n\tdiffChildren(\n\t\tparentDom,\n\t\treplaceNode ? vnode : (parentDom._prevVNode = vnode),\n\t\treplaceNode ? undefined : oldVNode,\n\t\tEMPTY_OBJ,\n\t\tparentDom.ownerSVGElement !== undefined,\n\t\treplaceNode\n\t\t\t? [replaceNode]\n\t\t\t: oldVNode\n\t\t\t\t? null\n\t\t\t\t: EMPTY_ARR.slice.call(parentDom.childNodes),\n\t\tmounts,\n\t\tvnode,\n\t\treplaceNode || EMPTY_OBJ\n\t);\n\tcommitRoot(mounts, vnode);\n}\n\n/**\n * Update an existing DOM element with data from a Preact virtual node\n * @param {import('./index').ComponentChild} vnode The virtual node to render\n * @param {import('./internal').PreactElement} parentDom The DOM element to\n * update\n */\nexport function hydrate(vnode, parentDom) {\n\tparentDom._prevVNode = null;\n\trender(vnode, parentDom);\n}\n","import { assign } from './util';\nimport { EMPTY_ARR } from './constants';\nimport { createVNode } from './create-element';\n\n/**\n * Clones the given VNode, optionally adding attributes/props and replacing its children.\n * @param {import('./internal').VNode} vnode The virtual DOM element to clone\n * @param {object} props Attributes/props to add when cloning\n * @param {Array<import('./index').ComponentChildren>} rest Any additional arguments will be used as replacement children.\n */\nexport function cloneElement(vnode, props) {\n\tprops = assign(assign({}, vnode.props), props);\n\tif (arguments.length>2) props.children = EMPTY_ARR.slice.call(arguments, 2);\n\treturn createVNode(vnode.type, props, null, props.key || vnode.key, props.ref || vnode.ref);\n}\n"],"names":["const","options","q","defer","CAMEL_REG","i","EMPTY_OBJ","EMPTY_ARR","IS_NON_DIMENSIONAL","assign","obj","props","let","removeNode","node","parentNode","removeChild","createElement","type","children","ref","key","arguments","length","push","defaultProps","undefined","createVNode","text","vnode","_children","_dom","_lastDomChild","_component","_self","createRef","Fragment","coerceToVNode","possibleVNode","Array","isArray","Component","context","enqueueRender","c","_dirty","debounceRendering","process","p","sort","a","b","_depth","pop","forceUpdate","diffChildren","parentDom","newParentVNode","oldParentVNode","isSvg","excessDomChildren","mounts","ancestorComponent","oldDom","childVNode","j","oldVNode","newDom","sibDom","oldChild","newChildren","toChildArray","oldChildren","oldChildrenLength","diff","outer","appendChild","nextSibling","insertBefore","unmount","flattened","map","keepHoles","diffProps","dom","newProps","oldProps","keys","Object","setProperty","name","value","oldValue","v","s","useCapture","nameLower","style","cssText","replace","test","toLowerCase","self","substring","addEventListener","eventProxy","removeEventListener","_listeners","removeAttributeNS","removeAttribute","setAttributeNS","setAttribute","e","this","event","newVNode","force","isNew","oldState","snapshot","newType","clearProcessingException","cxType","provider","cctx","prev","contextType","_id","_defaultValue","_processingException","_pendingError","prototype","render","constructor","doRender","_ancestorComponent","sub","state","_context","_renderCallbacks","_vnode","_nextState","getDerivedStateFromProps","componentWillMount","componentDidMount","componentWillReceiveProps","shouldComponentUpdate","componentWillUpdate","_prevVNode","getChildContext","getSnapshotBeforeUpdate","base","_parentDom","applyRef","call","componentDidUpdate","diffElementNodes","diffed","catchErrorInComponent","commitRoot","root","commit","child","oldHtml","newHtml","originalDom","nodeType","localName","document","createTextNode","createElementNS","data","childNodes","slice","attributes","className","dangerouslySetInnerHTML","__html","innerHTML","multiple","current","skipRemove","r","componentWillUnmount","error","component","getDerivedStateFromError","setState","componentDidCatch","replaceNode","ownerSVGElement","hydrate","cloneElement","createContext","defaultValue","ctx","Consumer","Provider","comp","subs","old","splice","indexOf","update","callback","Promise","then","bind","resolve","setTimeout"],"mappings":"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"}