{"version":3,"file":"preact.module.js","sources":["../src/constants.js","../src/options.js","../src/component.js","../src/diff/props.js","../src/create-context.js","../src/util.js","../src/create-element.js","../src/diff/children.js","../src/diff/index.js","../src/render.js","../src/clone-element.js"],"sourcesContent":["export const EMPTY_OBJ = {};\nexport const EMPTY_ARR = [];\nexport const IS_NON_DIMENSIONAL = /acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|^--/i;\n","/** @type {import('./index').Options}  */\nconst options = {};\n\nexport default options;\n","import { assign } from './util';\nimport { diff, commitRoot } from './diff/index';\nimport options from './options';\nimport { Fragment } from './create-element';\n\n/**\n * Base Component class. Provides `setState()` and `forceUpdate()`, which\n * trigger rendering\n * @param {object} props The initial component props\n * @param {object} context The initial context from parent components'\n * getChildContext\n */\nexport function Component(props, context) {\n\tthis.props = props;\n\tthis.context = context;\n\t// this.constructor // When component is functional component, this is reset to functional component\n\t// if (this.state==null) this.state = {};\n\t// this.state = {};\n\t// this._dirty = true;\n\t// this._renderCallbacks = []; // Only class components\n\n\t// Other properties that Component will have set later,\n\t// shown here as commented out for quick reference\n\t// this.base = null;\n\t// this._context = null;\n\t// this._ancestorComponent = null; // Always set right after instantiation\n\t// this._vnode = null;\n\t// this._nextState = null; // Only class components\n\t// this._prevVNode = null;\n\t// this._processingException = null; // Always read, set only when handling error\n\t// this._pendingError = null; // Always read, set only when handling error. This is used to indicate at diffTime to set _processingException\n}\n\n/**\n * Update component state and schedule a re-render.\n * @param {object | ((s: object, p: object) => object)} update A hash of state\n * properties to update with new values or a function that given the current\n * state and props returns a new partial state\n * @param {() => void} [callback] A function to be called once component state is\n * updated\n */\nComponent.prototype.setState = function(update, callback) {\n\t// only clone state when copying to nextState the first time.\n\tlet s = (this._nextState!==this.state && this._nextState) || (this._nextState = assign({}, this.state));\n\n\t// if update() mutates state in-place, skip the copy:\n\tif (typeof update!=='function' || (update = update(s, this.props))) {\n\t\tassign(s, update);\n\t}\n\n\t// Skip update if updater function returned null\n\tif (update==null) return;\n\n\tif (this._vnode) {\n\t\tif (callback) this._renderCallbacks.push(callback);\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Immediately perform a synchronous re-render of the component\n * @param {() => void} [callback] A function to be called after component is\n * re-renderd\n */\nComponent.prototype.forceUpdate = function(callback) {\n\tlet vnode = this._vnode, dom = this._vnode._dom, parentDom = this._parentDom;\n\tif (parentDom) {\n\t\t// Set render mode so that we can differantiate where the render request\n\t\t// is coming from. We need this because forceUpdate should never call\n\t\t// shouldComponentUpdate\n\t\tconst force = callback!==false;\n\n\t\tlet mounts = [];\n\t\tdom = diff(parentDom, vnode, vnode, this._context, parentDom.ownerSVGElement!==undefined, null, mounts, this._ancestorComponent, force, dom);\n\t\tif (dom!=null && dom.parentNode!==parentDom) {\n\t\t\tparentDom.appendChild(dom);\n\t\t}\n\t\tcommitRoot(mounts, vnode);\n\t}\n\tif (callback) callback();\n};\n\n/**\n * Accepts `props` and `state`, and returns a new Virtual DOM tree to build.\n * Virtual DOM is generally constructed via [JSX](http://jasonformat.com/wtf-is-jsx).\n * @param {object} props Props (eg: JSX attributes) received from parent\n * element/component\n * @param {object} state The component's current state\n * @param {object} context Context object, as returned by the nearest\n * ancestor's `getChildContext()`\n * @returns {import('./index').ComponentChildren | void}\n */\nComponent.prototype.render = Fragment;\n\n/**\n * The render queue\n * @type {Array<import('./internal').Component>}\n */\nlet q = [];\n\n/**\n * Asynchronously schedule a callback\n * @type {(cb) => void}\n */\nconst defer = typeof Promise=='function' ? Promise.prototype.then.bind(Promise.resolve()) : setTimeout;\n\n/*\n * The value of `Component.debounce` must asynchronously invoke the passed in callback. It is\n * important that contributors to Preact can consistenly reason about what calls to `setState`, etc.\n * do, and when their effects will be applied. See the links below for some further reading on designing\n * asynchronous APIs.\n * * [Designing APIs for Asynchrony](https://blog.izs.me/2013/08/designing-apis-for-asynchrony)\n * * [Callbacks synchronous and asynchronous](https://blog.ometer.com/2011/07/24/callbacks-synchronous-and-asynchronous/)\n */\n\n/**\n * Enqueue a rerender of a component\n * @param {import('./internal').Component} c The component to rerender\n */\nexport function enqueueRender(c) {\n\tif (!c._dirty && (c._dirty = true) && q.push(c) === 1) {\n\t\t(options.debounceRendering || defer)(process);\n\t}\n}\n\n/** Flush the render queue by rerendering all queued components */\nfunction process() {\n\tlet p;\n\tq.sort((a, b) => b._depth - a._depth);\n\twhile ((p=q.pop())) {\n\t\t// forceUpdate's callback argument is reused here to indicate a non-forced update.\n\t\tif (p._dirty) p.forceUpdate(false);\n\t}\n}\n","import { IS_NON_DIMENSIONAL, EMPTY_OBJ } from '../constants';\nimport options from '../options';\nimport { assign } from '../util';\n\n/**\n * Diff the old and new properties of a VNode and apply changes to the DOM node\n * @param {import('../internal').PreactElement} dom The DOM node to apply\n * changes to\n * @param {object} newProps The new props\n * @param {object} oldProps The old props\n * @param {boolean} isSvg Whether or not this node is an SVG node\n */\nexport function diffProps(dom, newProps, oldProps, isSvg) {\n\tlet i;\n\t\n\tconst keys = Object.keys(newProps).sort();\n\tfor (i = 0; i < keys.length; i++) {\n\t\tconst k = keys[i];\n\t\tif (k!=='children' && k!=='key' && (!oldProps || ((k==='value' || k==='checked') ? dom : oldProps)[k]!==newProps[k])) {\n\t\t\tsetProperty(dom, k, newProps[k], oldProps[k], isSvg);\n\t\t}\n\t}\n\n\tfor (i in oldProps) {\n\t\tif (i!=='children' && i!=='key' && !(i in newProps)) {\n\t\t\tsetProperty(dom, i, null, oldProps[i], isSvg);\n\t\t}\n\t}\n}\n\nconst CAMEL_REG = /[A-Z]/g;\nconst XLINK_NS = 'http://www.w3.org/1999/xlink';\n\n/**\n * Set a property value on a DOM node\n * @param {import('../internal').PreactElement} dom The DOM node to modify\n * @param {string} name The name of the property to set\n * @param {*} value The value to set the property to\n * @param {*} oldValue The old value the property had\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node or not\n */\nfunction setProperty(dom, name, value, oldValue, isSvg) {\n\tname = isSvg ? (name==='className' ? 'class' : name) : (name==='class' ? 'className' : name);\n\n\tif (name==='style') {\n\t\tconst set = assign(assign({}, oldValue), value);\n\t\tfor (let i in set) {\n\t\t\tif ((value || EMPTY_OBJ)[i] === (oldValue || EMPTY_OBJ)[i]) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tdom.style.setProperty(\n\t\t\t\t(i[0] === '-' && i[1] === '-') ? i : i.replace(CAMEL_REG, '-$&'),\n\t\t\t\t(value && (i in value))\n\t\t\t\t\t? (typeof set[i]==='number' && IS_NON_DIMENSIONAL.test(i)===false)\n\t\t\t\t\t\t? set[i] + 'px'\n\t\t\t\t\t\t: set[i]\n\t\t\t\t\t: ''\n\t\t\t);\n\t\t}\n\t}\n\t// Benchmark for comparison: https://esbench.com/bench/574c954bdb965b9a00965ac6\n\telse if (name[0]==='o' && name[1]==='n') {\n\t\tlet useCapture = name !== (name=name.replace(/Capture$/, ''));\n\t\tlet nameLower = name.toLowerCase();\n\t\tname = (nameLower in dom ? nameLower : name).slice(2);\n\n\t\tif (value) {\n\t\t\tif (!oldValue) dom.addEventListener(name, eventProxy, useCapture);\n\t\t}\n\t\telse {\n\t\t\tdom.removeEventListener(name, eventProxy, useCapture);\n\t\t}\n\t\t(dom._listeners || (dom._listeners = {}))[name] = value;\n\t}\n\telse if (name!=='list' && name!=='tagName' && !isSvg && (name in dom)) {\n\t\tdom[name] = value==null ? '' : value;\n\t}\n\telse if (typeof value!=='function' && name!=='dangerouslySetInnerHTML') {\n\t\tif (name!==(name = name.replace(/^xlink:?/, ''))) {\n\t\t\tif (value==null || value===false) {\n\t\t\t\tdom.removeAttributeNS(XLINK_NS, name.toLowerCase());\n\t\t\t}\n\t\t\telse {\n\t\t\t\tdom.setAttributeNS(XLINK_NS, name.toLowerCase(), value);\n\t\t\t}\n\t\t}\n\t\telse if (value==null || value===false) {\n\t\t\tdom.removeAttribute(name);\n\t\t}\n\t\telse {\n\t\t\tdom.setAttribute(name, value);\n\t\t}\n\t}\n}\n\n/**\n * Proxy an event to hooked event handlers\n * @param {Event} e The event object from the browser\n * @private\n */\nfunction eventProxy(e) {\n\treturn this._listeners[e.type](options.event ? options.event(e) : e);\n}\n","import { enqueueRender } from './component';\n\nexport let i = 0;\n\n/**\n *\n * @param {any} defaultValue\n */\nexport function createContext(defaultValue) {\n\tconst ctx = {};\n\n\tconst context = {\n\t\t_id: '__cC' + i++,\n\t\t_defaultValue: defaultValue,\n\t\tConsumer(props, context) {\n\t\t\treturn props.children(context);\n\t\t},\n\t\tProvider(props) {\n\t\t\tif (!this.getChildContext) {\n\t\t\t\tconst subs = [];\n\t\t\t\tthis.getChildContext = () => {\n\t\t\t\t\tctx[context._id] = this;\n\t\t\t\t\treturn ctx;\n\t\t\t\t};\n\t\t\t\tthis.shouldComponentUpdate = props => {\n\t\t\t\t\tsubs.some(c => {\n\t\t\t\t\t\t// Check if still mounted\n\t\t\t\t\t\tif (c._parentDom) {\n\t\t\t\t\t\t\tc.context = props.value;\n\t\t\t\t\t\t\tenqueueRender(c);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t};\n\t\t\t\tthis.sub = (c) => {\n\t\t\t\t\tsubs.push(c);\n\t\t\t\t\tlet old = c.componentWillUnmount;\n\t\t\t\t\tc.componentWillUnmount = () => {\n\t\t\t\t\t\tsubs.splice(subs.indexOf(c), 1);\n\t\t\t\t\t\told && old.call(c);\n\t\t\t\t\t};\n\t\t\t\t};\n\t\t\t}\n\t\t\treturn props.children;\n\t\t}\n\t};\n\n\tcontext.Consumer.contextType = context;\n\n\treturn context;\n}\n","/**\n * Assign properties from `props` to `obj`\n * @template O, P The obj and props types\n * @param {O} obj The object to copy properties to\n * @param {P} props The object to copy properties from\n * @returns {O & P}\n */\nexport function assign(obj, props) {\n\tfor (let i in props) obj[i] = props[i];\n\treturn /** @type {O & P} */ (obj);\n}\n\n/**\n * Remove a child node from its parent if attached. This is a workaround for\n * IE11 which doesn't support `Element.prototype.remove()`. Using this function\n * is smaller than including a dedicated polyfill.\n * @param {Node} node The node to remove\n */\nexport function removeNode(node) {\n\tlet parentNode = node.parentNode;\n\tif (parentNode) parentNode.removeChild(node);\n}\n","import options from './options';\nimport { assign } from './util';\n\n/**\n  * Create an virtual node (used for JSX)\n  * @param {import('./internal').VNode[\"type\"]} type The node name or Component\n  * constructor for this virtual node\n  * @param {object | null | undefined} [props] The properties of the virtual node\n  * @param {Array<import('.').ComponentChildren>} [children] The children of the virtual node\n  * @returns {import('./internal').VNode}\n  */\nexport function createElement(type, props, children) {\n\tprops = assign({}, props);\n\n\tif (arguments.length>3) {\n\t\tchildren = [children];\n\t\tfor (let i=3; i<arguments.length; i++) {\n\t\t\tchildren.push(arguments[i]);\n\t\t}\n\t}\n\tif (children!=null) {\n\t\tprops.children = children;\n\t}\n\n\t// \"type\" may be undefined during development. The check is needed so that\n\t// we can display a nice error message with our debug helpers\n\tif (type!=null && type.defaultProps!=null) {\n\t\tfor (let i in type.defaultProps) {\n\t\t\tif (props[i]===undefined) props[i] = type.defaultProps[i];\n\t\t}\n\t}\n\tlet ref = props.ref;\n\tlet key = props.key;\n\tif (ref!=null) delete props.ref;\n\tif (key!=null) delete props.key;\n\n\treturn createVNode(type, props, key, ref);\n}\n\n/**\n * Create a VNode (used internally by Preact)\n * @param {import('./internal').VNode[\"type\"]} type The node name or Component\n * Constructor for this virtual node\n * @param {object | string | number | null} props The properites of this virtual node.\n * If this virtual node represents a text node, this is the text of the node (string or number).\n * @param {string | number | null} key The key for this virtual node, used when\n * diffing it against its children\n * @param {import('./internal').VNode[\"ref\"]} ref The ref property that will\n * receive a reference to its created child\n * @returns {import('./internal').VNode}\n */\nexport function createVNode(type, props, key, ref) {\n\t// V8 seems to be better at detecting type shapes if the object is allocated from the same call site\n\t// Do not inline into createElement and coerceToVNode!\n\tconst vnode = {\n\t\ttype,\n\t\tprops,\n\t\tkey,\n\t\tref,\n\t\t_children: null,\n\t\t_dom: null,\n\t\t_lastDomChild: null,\n\t\t_component: null,\n\t\tconstructor: undefined\n\t};\n\n\tif (options.vnode) options.vnode(vnode);\n\n\treturn vnode;\n}\n\nexport function createRef() {\n\treturn {};\n}\n\nexport /* istanbul ignore next */ function Fragment() { }\n\n/**\n * Coerce an untrusted value into a VNode\n * Specifically, this should be used anywhere a user could provide a boolean, string, or number where\n * a VNode or Component is desired instead\n * @param {boolean | string | number | import('./internal').VNode} possibleVNode A possible VNode\n * @returns {import('./internal').VNode | null}\n */\nexport function coerceToVNode(possibleVNode) {\n\tif (possibleVNode == null || typeof possibleVNode === 'boolean') return null;\n\tif (typeof possibleVNode === 'string' || typeof possibleVNode === 'number') {\n\t\treturn createVNode(null, possibleVNode, null, null);\n\t}\n\n\tif (Array.isArray(possibleVNode)) {\n\t\treturn createElement(Fragment, null, possibleVNode);\n\t}\n\n\t// Clone vnode if it has already been used. ceviche/#57\n\tif (possibleVNode._dom!=null || possibleVNode._component!=null) {\n\t\tlet vnode = createVNode(possibleVNode.type, possibleVNode.props, possibleVNode.key, null);\n\t\tvnode._dom = possibleVNode._dom;\n\t\treturn vnode;\n\t}\n\n\treturn possibleVNode;\n}\n","import { diff, unmount } from './index';\nimport { coerceToVNode, Fragment } from '../create-element';\nimport { EMPTY_OBJ, EMPTY_ARR } from '../constants';\nimport { removeNode } from '../util';\n\n/**\n * Diff the children of a virtual node\n * @param {import('../internal').PreactElement} parentDom The DOM element whose\n * children are being diffed\n * @param {import('../internal').VNode} newParentVNode The new virtual\n * node whose children should be diff'ed against oldParentVNode\n * @param {import('../internal').VNode} oldParentVNode The old virtual\n * node whose children should be diff'ed against newParentVNode\n * @param {object} context The current context object\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node\n * @param {Array<import('../internal').PreactElement>} excessDomChildren\n * @param {Array<import('../internal').Component>} mounts The list of components\n * which have mounted\n * @param {import('../internal').Component} ancestorComponent The direct parent\n * component to the ones being diffed\n * @param {Node | Text} oldDom The current attached DOM\n * element any new dom elements should be placed around. Likely `null` on first\n * render (except when hydrating). Can be a sibling DOM element when diffing\n * Fragments that have siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n */\nexport function diffChildren(parentDom, newParentVNode, oldParentVNode, context, isSvg, excessDomChildren, mounts, ancestorComponent, oldDom) {\n\tlet childVNode, i, j, oldVNode, newDom, sibDom;\n\n\tlet newChildren = newParentVNode._children || toChildArray(newParentVNode.props.children, newParentVNode._children=[], coerceToVNode, true);\n\t// This is a compression of oldParentVNode!=null && oldParentVNode != EMPTY_OBJ && oldParentVNode._children || EMPTY_ARR\n\t// as EMPTY_OBJ._children should be `undefined`.\n\tlet oldChildren = (oldParentVNode && oldParentVNode._children) || EMPTY_ARR;\n\n\tlet oldChildrenLength = oldChildren.length;\n\n\t// Only in very specific places should this logic be invoked (top level `render` and `diffElementNodes`).\n\t// I'm using `EMPTY_OBJ` to signal when `diffChildren` is invoked in these situations. I can't use `null`\n\t// for this purpose, because `null` is a valid value for `oldDom` which can mean to skip to this logic\n\t// (e.g. if mounting a new tree in which the old DOM should be ignored (usually for Fragments).\n\tif (oldDom == EMPTY_OBJ) {\n\t\toldDom = null;\n\t\tif (excessDomChildren!=null) {\n\t\t\tfor (i = 0; !oldDom && i < excessDomChildren.length; i++) {\n\t\t\t\toldDom = excessDomChildren[i];\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tfor (i = 0; !oldDom && i < oldChildrenLength; i++) {\n\t\t\t\toldDom = oldChildren[i] && oldChildren[i]._dom;\n\t\t\t}\n\t\t}\n\t}\n\n\tfor (i=0; i<newChildren.length; i++) {\n\t\tchildVNode = newChildren[i] = coerceToVNode(newChildren[i]);\n\n\t\tif (childVNode!=null) {\n\t\t\t// Check if we find a corresponding element in oldChildren.\n\t\t\t// If found, delete the array item by setting to `undefined`.\n\t\t\t// We use `undefined`, as `null` is reserved for empty placeholders\n\t\t\t// (holes).\n\t\t\toldVNode = oldChildren[i];\n\n\t\t\tif (oldVNode===null || (oldVNode && childVNode.key == oldVNode.key && childVNode.type === oldVNode.type)) {\n\t\t\t\toldChildren[i] = undefined;\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Either oldVNode === undefined or oldChildrenLength > 0,\n\t\t\t\t// so after this loop oldVNode == null or oldVNode is a valid value.\n\t\t\t\tfor (j=0; j<oldChildrenLength; j++) {\n\t\t\t\t\toldVNode = oldChildren[j];\n\t\t\t\t\t// If childVNode is unkeyed, we only match similarly unkeyed nodes, otherwise we match by key.\n\t\t\t\t\t// We always match by type (in either case).\n\t\t\t\t\tif (oldVNode && childVNode.key == oldVNode.key && childVNode.type === oldVNode.type) {\n\t\t\t\t\t\toldChildren[j] = undefined;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\toldVNode = null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Morph the old element into the new one, but don't append it to the dom yet\n\t\t\tnewDom = diff(parentDom, childVNode, oldVNode, context, isSvg, excessDomChildren, mounts, ancestorComponent, null, oldDom);\n\n\t\t\t// Only proceed if the vnode has not been unmounted by `diff()` above.\n\t\t\tif (newDom!=null) {\n\t\t\t\tif (childVNode._lastDomChild != null) {\n\t\t\t\t\t// Only Fragments or components that return Fragment like VNodes will\n\t\t\t\t\t// have a non-null _lastDomChild. Continue the diff from the end of\n\t\t\t\t\t// this Fragment's DOM tree.\n\t\t\t\t\tnewDom = childVNode._lastDomChild;\n\t\t\t\t}\n\t\t\t\telse if (excessDomChildren==oldVNode || newDom!=oldDom || newDom.parentNode==null) {\n\t\t\t\t\t// NOTE: excessDomChildren==oldVNode above:\n\t\t\t\t\t// This is a compression of excessDomChildren==null && oldVNode==null!\n\t\t\t\t\t// The values only have the same type when `null`.\n\n\t\t\t\t\touter: if (oldDom==null || oldDom.parentNode!==parentDom) {\n\t\t\t\t\t\tparentDom.appendChild(newDom);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t// `j<oldChildrenLength; j+=2` is an alternative to `j++<oldChildrenLength/2`\n\t\t\t\t\t\tfor (sibDom=oldDom, j=0; (sibDom=sibDom.nextSibling) && j<oldChildrenLength; j+=2) {\n\t\t\t\t\t\t\tif (sibDom==newDom) {\n\t\t\t\t\t\t\t\tbreak outer;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tparentDom.insertBefore(newDom, oldDom);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\toldDom = newDom.nextSibling;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Remove children that are not part of any vnode. Only used by `hydrate`\n\tif (excessDomChildren!=null && newParentVNode.type!==Fragment) for (i=excessDomChildren.length; i--; ) if (excessDomChildren[i]!=null) removeNode(excessDomChildren[i]);\n\n\t// Remove remaining oldChildren if there are any.\n\tfor (i=oldChildrenLength; i--; ) if (oldChildren[i]!=null) unmount(oldChildren[i], ancestorComponent);\n}\n\n/**\n * Flatten a virtual nodes children to a single dimensional array\n * @param {import('../index').ComponentChildren} children The unflattened\n * children of a virtual node\n * @param {Array<import('../internal').VNode | null>} [flattened] An flat array of children to modify\n * @param {typeof import('../create-element').coerceToVNode} [map] Function that\n * will be applied on each child if the `vnode` is not `null`\n * @param {boolean} [keepHoles] wether to coerce `undefined` to `null` or not.\n * This is needed for Components without children like `<Foo />`.\n */\nexport function toChildArray(children, flattened, map, keepHoles) {\n\tif (flattened == null) flattened = [];\n\tif (children==null || typeof children === 'boolean') {\n\t\tif (keepHoles) flattened.push(null);\n\t}\n\telse if (Array.isArray(children)) {\n\t\tfor (let i=0; i < children.length; i++) {\n\t\t\ttoChildArray(children[i], flattened, map, keepHoles);\n\t\t}\n\t}\n\telse {\n\t\tflattened.push(map ? map(children) : children);\n\t}\n\n\treturn flattened;\n}\n","import { EMPTY_OBJ, EMPTY_ARR } from '../constants';\nimport { Component, enqueueRender } from '../component';\nimport { coerceToVNode, Fragment } from '../create-element';\nimport { diffChildren } from './children';\nimport { diffProps } from './props';\nimport { assign, removeNode } from '../util';\nimport options from '../options';\n\n/**\n * Diff two virtual nodes and apply proper changes to the DOM\n * @param {import('../internal').PreactElement} parentDom The parent of the DOM element\n * @param {import('../internal').VNode | null} newVNode The new virtual node\n * @param {import('../internal').VNode | null} oldVNode The old virtual node\n * @param {object} context The current context object\n * @param {boolean} isSvg Whether or not this element is an SVG node\n * @param {Array<import('../internal').PreactElement>} excessDomChildren\n * @param {Array<import('../internal').Component>} mounts A list of newly\n * mounted components\n * @param {import('../internal').Component | null} ancestorComponent The direct\n * parent component\n * @param {Element | Text} oldDom The current attached DOM\n * element any new dom elements should be placed around. Likely `null` on first\n * render (except when hydrating). Can be a sibling DOM element when diffing\n * Fragments that have siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n */\nexport function diff(parentDom, newVNode, oldVNode, context, isSvg, excessDomChildren, mounts, ancestorComponent, force, oldDom) {\n\t// If the previous type doesn't match the new type we drop the whole subtree\n\tif (oldVNode==null || newVNode==null || oldVNode.type!==newVNode.type || oldVNode.key!==newVNode.key) {\n\t\tif (oldVNode!=null) unmount(oldVNode, ancestorComponent);\n\t\tif (newVNode==null) return null;\n\t\toldVNode = EMPTY_OBJ;\n\t}\n\n\tlet c, tmp, isNew, oldProps, oldState, snapshot,\n\t\tnewType = newVNode.type, clearProcessingException;\n\n\t// When passing through createElement it assigns the object\n\t// constructor as undefined. This to prevent JSON-injection.\n\tif (newVNode.constructor !== undefined) return null;\n\n\tif (tmp = options.diff) tmp(newVNode);\n\n\ttry {\n\t\touter: if (oldVNode.type===Fragment || newType===Fragment) {\n\t\t\t// Passing the ancestorComponent instead of c here is needed for catchErrorInComponent\n\t\t\t// to properly traverse upwards through fragments to find a parent Suspense\n\t\t\tdiffChildren(parentDom, newVNode, oldVNode, context, isSvg, excessDomChildren, mounts, ancestorComponent, oldDom);\n\n\t\t\t// Mark dom as empty in case `_children` is any empty array. If it isn't\n\t\t\t// we'll set `dom` to the correct value just a few lines later.\n\n\t\t\tlet i = newVNode._children.length;\n\t\t\tif (i && (tmp=newVNode._children[0]) != null) {\n\t\t\t\tnewVNode._dom = tmp._dom;\n\n\t\t\t\t// If the last child is a Fragment, use _lastDomChild, else use _dom\n\t\t\t\t// We have no guarantee that the last child rendered something into the\n\t\t\t\t// dom, so we iterate backwards to find the last child with a dom node.\n\t\t\t\twhile (i--) {\n\t\t\t\t\ttmp = newVNode._children[i];\n\t\t\t\t\tif (newVNode._lastDomChild = (tmp && (tmp._lastDomChild || tmp._dom))) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if (typeof newType==='function') {\n\n\t\t\t// Necessary for createContext api. Setting this property will pass\n\t\t\t// the context value as `this.context` just for this component.\n\t\t\ttmp = newType.contextType;\n\t\t\tlet provider = tmp && context[tmp._id];\n\t\t\tlet cctx = tmp ? (provider ? provider.props.value : tmp._defaultValue) : context;\n\n\t\t\t// Get component and set it to `c`\n\t\t\tif (oldVNode._component) {\n\t\t\t\tc = newVNode._component = oldVNode._component;\n\t\t\t\tclearProcessingException = c._processingException = c._pendingError;\n\t\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Instantiate the new component\n\t\t\t\tif (newType.prototype && newType.prototype.render) {\n\t\t\t\t\tnewVNode._component = c = new newType(newVNode.props, cctx); // eslint-disable-line new-cap\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tnewVNode._component = c = new Component(newVNode.props, cctx);\n\t\t\t\t\tc.constructor = newType;\n\t\t\t\t\tc.render = doRender;\n\t\t\t\t}\n\t\t\t\tc._ancestorComponent = ancestorComponent;\n\t\t\t\tif (provider) provider.sub(c);\n\n\t\t\t\tc.props = newVNode.props;\n\t\t\t\tif (!c.state) c.state = {};\n\t\t\t\tc.context = cctx;\n\t\t\t\tc._context = context;\n\t\t\t\tisNew = c._dirty = true;\n\t\t\t\tc._renderCallbacks = [];\n\t\t\t}\n\n\t\t\tc._vnode = newVNode;\n\n\t\t\t// Invoke getDerivedStateFromProps\n\t\t\tif (c._nextState==null) {\n\t\t\t\tc._nextState = c.state;\n\t\t\t}\n\t\t\tif (newType.getDerivedStateFromProps!=null) {\n\t\t\t\tassign(c._nextState==c.state ? (c._nextState = assign({}, c._nextState)) : c._nextState, newType.getDerivedStateFromProps(newVNode.props, c._nextState));\n\t\t\t}\n\n\t\t\t// Invoke pre-render lifecycle methods\n\t\t\tif (isNew) {\n\t\t\t\tif (newType.getDerivedStateFromProps==null && c.componentWillMount!=null) c.componentWillMount();\n\t\t\t\tif (c.componentDidMount!=null) mounts.push(c);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (newType.getDerivedStateFromProps==null && force==null && c.componentWillReceiveProps!=null) {\n\t\t\t\t\tc.componentWillReceiveProps(newVNode.props, cctx);\n\t\t\t\t}\n\n\t\t\t\tif (!force && c.shouldComponentUpdate!=null && c.shouldComponentUpdate(newVNode.props, c._nextState, cctx)===false) {\n\t\t\t\t\tc.props = newVNode.props;\n\t\t\t\t\tc.state = c._nextState;\n\t\t\t\t\tc._dirty = false;\n\t\t\t\t\tnewVNode._lastDomChild = oldVNode._lastDomChild;\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\n\t\t\t\tif (c.componentWillUpdate!=null) {\n\t\t\t\t\tc.componentWillUpdate(newVNode.props, c._nextState, cctx);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\toldProps = c.props;\n\t\t\toldState = c.state;\n\n\t\t\tc.context = cctx;\n\t\t\tc.props = newVNode.props;\n\t\t\tc.state = c._nextState;\n\n\t\t\tif (tmp = options.render) tmp(newVNode);\n\n\t\t\tlet prev = c._prevVNode || null;\n\t\t\tc._dirty = false;\n\t\t\tlet vnode;\n\t\t\t\n\t\t\ttry {\n\t\t\t\tvnode = c._prevVNode = coerceToVNode(c.render(c.props, c.state, c.context));\n\t\t\t}\n\t\t\tcatch (e) {\n\t\t\t\tif ((tmp = options.catchRender) && tmp(e, c)) return;\n\t\t\t\tthrow e;\n\t\t\t}\n\n\t\t\tif (c.getChildContext!=null) {\n\t\t\t\tcontext = assign(assign({}, context), c.getChildContext());\n\t\t\t}\n\n\t\t\tif (!isNew && c.getSnapshotBeforeUpdate!=null) {\n\t\t\t\tsnapshot = c.getSnapshotBeforeUpdate(oldProps, oldState);\n\t\t\t}\n\n\t\t\tc._depth = ancestorComponent ? (ancestorComponent._depth || 0) + 1 : 0;\n\t\t\tc.base = newVNode._dom = diff(parentDom, vnode, prev, context, isSvg, excessDomChildren, mounts, c, null, oldDom);\n\n\t\t\tif (vnode!=null) {\n\t\t\t\t// If this component returns a Fragment (or another component that\n\t\t\t\t// returns a Fragment), then _lastDomChild will be non-null,\n\t\t\t\t// informing `diffChildren` to diff this component's VNode like a Fragemnt\n\t\t\t\tnewVNode._lastDomChild = vnode._lastDomChild;\n\t\t\t}\n\n\t\t\tc._parentDom = parentDom;\n\n\t\t\tif (tmp = newVNode.ref) applyRef(tmp, c, ancestorComponent);\n\n\t\t\twhile (tmp=c._renderCallbacks.pop()) tmp.call(c);\n\n\t\t\t// Don't call componentDidUpdate on mount or when we bailed out via\n\t\t\t// `shouldComponentUpdate`\n\t\t\tif (!isNew && oldProps!=null && c.componentDidUpdate!=null) {\n\t\t\t\tc.componentDidUpdate(oldProps, oldState, snapshot);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tnewVNode._dom = diffElementNodes(oldVNode._dom, newVNode, oldVNode, context, isSvg, excessDomChildren, mounts, ancestorComponent);\n\n\t\t\tif ((tmp = newVNode.ref) && (oldVNode.ref !== tmp)) {\n\t\t\t\tapplyRef(tmp, newVNode._dom, ancestorComponent);\n\t\t\t}\n\t\t}\n\n\t\tif (clearProcessingException) {\n\t\t\tc._pendingError = c._processingException = null;\n\t\t}\n\n\t\tif (tmp = options.diffed) tmp(newVNode);\n\t}\n\tcatch (e) {\n\t\tcatchErrorInComponent(e, ancestorComponent);\n\t}\n\n\treturn newVNode._dom;\n}\n\nexport function commitRoot(mounts, root) {\n\tlet c;\n\twhile ((c = mounts.pop())) {\n\t\ttry {\n\t\t\tc.componentDidMount();\n\t\t}\n\t\tcatch (e) {\n\t\t\tcatchErrorInComponent(e, c._ancestorComponent);\n\t\t}\n\t}\n\n\tif (options.commit) options.commit(root);\n}\n\n/**\n * Diff two virtual nodes representing DOM element\n * @param {import('../internal').PreactElement} dom The DOM element representing\n * the virtual nodes being diffed\n * @param {import('../internal').VNode} newVNode The new virtual node\n * @param {import('../internal').VNode} oldVNode The old virtual node\n * @param {object} context The current context object\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node\n * @param {*} excessDomChildren\n * @param {Array<import('../internal').Component>} mounts An array of newly\n * mounted components\n * @param {import('../internal').Component} ancestorComponent The parent\n * component to the ones being diffed\n * @returns {import('../internal').PreactElement}\n */\nfunction diffElementNodes(dom, newVNode, oldVNode, context, isSvg, excessDomChildren, mounts, ancestorComponent) {\n\tlet i;\n\tlet oldProps = oldVNode.props;\n\tlet newProps = newVNode.props;\n\n\t// Tracks entering and exiting SVG namespace when descending through the tree.\n\tisSvg = newVNode.type==='svg' || isSvg;\n\n\tif (dom==null && excessDomChildren!=null) {\n\t\tfor (i=0; i<excessDomChildren.length; i++) {\n\t\t\tconst child = excessDomChildren[i];\n\t\t\tif (child!=null && (newVNode.type===null ? child.nodeType===3 : child.localName===newVNode.type)) {\n\t\t\t\tdom = child;\n\t\t\t\texcessDomChildren[i] = null;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (dom==null) {\n\t\tif (newVNode.type===null) {\n\t\t\treturn document.createTextNode(newProps);\n\t\t}\n\t\tdom = isSvg ? document.createElementNS('http://www.w3.org/2000/svg', newVNode.type) : document.createElement(newVNode.type);\n\t\t// we created a new parent, so none of the previously attached children can be reused:\n\t\texcessDomChildren = null;\n\t}\n\n\tif (newVNode.type===null) {\n\t\tif (oldProps !== newProps) {\n\t\t\tdom.data = newProps;\n\t\t}\n\t}\n\telse {\n\t\tif (excessDomChildren!=null && dom.childNodes!=null) {\n\t\t\texcessDomChildren = EMPTY_ARR.slice.call(dom.childNodes);\n\t\t}\n\t\tif (newVNode!==oldVNode) {\n\t\t\tlet oldProps = oldVNode.props || EMPTY_OBJ;\n\t\t\tlet newProps = newVNode.props;\n\n\t\t\tlet oldHtml = oldProps.dangerouslySetInnerHTML;\n\t\t\tlet newHtml = newProps.dangerouslySetInnerHTML;\n\t\t\tif ((newHtml || oldHtml) && excessDomChildren==null) {\n\t\t\t\t// Avoid re-applying the same '__html' if it did not changed between re-render\n\t\t\t\tif (!newHtml || !oldHtml || newHtml.__html!=oldHtml.__html) {\n\t\t\t\t\tdom.innerHTML = newHtml && newHtml.__html || '';\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (newProps.multiple) {\n\t\t\t\tdom.multiple = newProps.multiple;\n\t\t\t}\n\n\t\t\tdiffChildren(dom, newVNode, oldVNode, context, newVNode.type==='foreignObject' ? false : isSvg, excessDomChildren, mounts, ancestorComponent, EMPTY_OBJ);\n\t\t\tdiffProps(dom, newProps, oldProps, isSvg);\n\t\t}\n\t}\n\n\treturn dom;\n}\n\n/**\n * Invoke or update a ref, depending on whether it is a function or object ref.\n * @param {object|function} [ref=null]\n * @param {any} [value]\n */\nexport function applyRef(ref, value, ancestorComponent) {\n\ttry {\n\t\tif (typeof ref=='function') ref(value);\n\t\telse ref.current = value;\n\t}\n\tcatch (e) {\n\t\tcatchErrorInComponent(e, ancestorComponent);\n\t}\n}\n\n/**\n * Unmount a virtual node from the tree and apply DOM changes\n * @param {import('../internal').VNode} vnode The virtual node to unmount\n * @param {import('../internal').Component} ancestorComponent The parent\n * component to this virtual node\n * @param {boolean} [skipRemove] Flag that indicates that a parent node of the\n * current element is already detached from the DOM.\n */\nexport function unmount(vnode, ancestorComponent, skipRemove) {\n\tlet r;\n\tif (options.unmount) options.unmount(vnode);\n\n\tif (r = vnode.ref) {\n\t\tapplyRef(r, null, ancestorComponent);\n\t}\n\n\tlet dom;\n\tif (!skipRemove && vnode._lastDomChild==null) {\n\t\tskipRemove = (dom = vnode._dom)!=null;\n\t}\n\n\tvnode._dom = vnode._lastDomChild = null;\n\n\tif ((r = vnode._component)!=null) {\n\t\tif (r.componentWillUnmount) {\n\t\t\ttry {\n\t\t\t\tr.componentWillUnmount();\n\t\t\t}\n\t\t\tcatch (e) {\n\t\t\t\tcatchErrorInComponent(e, ancestorComponent);\n\t\t\t}\n\t\t}\n\n\t\tr.base = r._parentDom = null;\n\t\tif (r = r._prevVNode) unmount(r, ancestorComponent, skipRemove);\n\t}\n\telse if (r = vnode._children) {\n\t\tfor (let i = 0; i < r.length; i++) {\n\t\t\tif (r[i]) unmount(r[i], ancestorComponent, skipRemove);\n\t\t}\n\t}\n\n\tif (dom!=null) removeNode(dom);\n}\n\n/** The `.render()` method for a PFC backing instance. */\nfunction doRender(props, state, context) {\n\treturn this.constructor(props, context);\n}\n\n/**\n * Find the closest error boundary to a thrown error and call it\n * @param {object} error The thrown value\n * @param {import('../internal').Component} component The first ancestor\n * component check for error boundary behaviors\n */\nfunction catchErrorInComponent(error, component) {\n\tif (options.catchError) { options.catchError(error, component); }\n\n\tfor (; component; component = component._ancestorComponent) {\n\t\tif (!component._processingException) {\n\t\t\ttry {\n\t\t\t\tif (component.constructor && component.constructor.getDerivedStateFromError!=null) {\n\t\t\t\t\tcomponent.setState(component.constructor.getDerivedStateFromError(error));\n\t\t\t\t}\n\t\t\t\telse if (component.componentDidCatch!=null) {\n\t\t\t\t\tcomponent.componentDidCatch(error);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\treturn enqueueRender(component._pendingError = component);\n\t\t\t}\n\t\t\tcatch (e) {\n\t\t\t\terror = e;\n\t\t\t}\n\t\t}\n\t}\n\n\tthrow error;\n}\n","import { EMPTY_OBJ, EMPTY_ARR } from './constants';\nimport { commitRoot } from './diff/index';\nimport { diffChildren } from './diff/children';\nimport { createElement, Fragment } from './create-element';\nimport options from './options';\n\n/**\n * Render a Preact virtual node into a DOM element\n * @param {import('./index').ComponentChild} vnode The virtual node to render\n * @param {import('./internal').PreactElement} parentDom The DOM element to\n * render into\n * @param {Element | Text} [replaceNode] Attempt to re-use an\n * existing DOM tree rooted at `replaceNode`\n */\nexport function render(vnode, parentDom, replaceNode) {\n\tif (options.root) options.root(vnode, parentDom);\n\tlet oldVNode = parentDom._prevVNode;\n\tvnode = createElement(Fragment, null, [vnode]);\n\n\tlet mounts = [];\n\tdiffChildren(\n\t\tparentDom,\n\t\treplaceNode ? vnode : (parentDom._prevVNode = vnode),\n\t\toldVNode,\n\t\tEMPTY_OBJ,\n\t\tparentDom.ownerSVGElement !== undefined,\n\t\treplaceNode\n\t\t\t? [replaceNode]\n\t\t\t: oldVNode\n\t\t\t\t? null\n\t\t\t\t: EMPTY_ARR.slice.call(parentDom.childNodes),\n\t\tmounts,\n\t\tvnode,\n\t\treplaceNode || EMPTY_OBJ\n\t);\n\tcommitRoot(mounts, vnode);\n}\n\n/**\n * Update an existing DOM element with data from a Preact virtual node\n * @param {import('./index').ComponentChild} vnode The virtual node to render\n * @param {import('./internal').PreactElement} parentDom The DOM element to\n * update\n */\nexport function hydrate(vnode, parentDom) {\n\tparentDom._prevVNode = null;\n\trender(vnode, parentDom);\n}\n","import { assign } from './util';\nimport { EMPTY_ARR } from './constants';\nimport { createVNode } from './create-element';\n\n/**\n * Clones the given VNode, optionally adding attributes/props and replacing its children.\n * @param {import('./internal').VNode} vnode The virtual DOM element to clone\n * @param {object} props Attributes/props to add when cloning\n * @param {Array<import('./index').ComponentChildren>} rest Any additional arguments will be used as replacement children.\n */\nexport function cloneElement(vnode, props) {\n\tprops = assign(assign({}, vnode.props), props);\n\tif (arguments.length>2) props.children = EMPTY_ARR.slice.call(arguments, 2);\n\treturn createVNode(vnode.type, props, props.key || vnode.key, props.ref || vnode.ref);\n}\n"],"names":["const","options","q","defer","CAMEL_REG","XLINK_NS","i","EMPTY_OBJ","EMPTY_ARR","IS_NON_DIMENSIONAL","assign","obj","props","let","removeNode","node","parentNode","removeChild","createElement","type","children","ref","key","arguments","length","push","defaultProps","undefined","createVNode","vnode","_children","_dom","_lastDomChild","_component","constructor","createRef","Fragment","coerceToVNode","possibleVNode","Array","isArray","Component","context","enqueueRender","c","_dirty","debounceRendering","process","p","sort","a","b","_depth","pop","forceUpdate","diffChildren","parentDom","newParentVNode","oldParentVNode","isSvg","excessDomChildren","mounts","ancestorComponent","oldDom","childVNode","j","oldVNode","newDom","sibDom","newChildren","toChildArray","oldChildren","oldChildrenLength","diff","outer","appendChild","nextSibling","insertBefore","unmount","flattened","map","keepHoles","diffProps","dom","newProps","oldProps","k","keys","Object","setProperty","name","value","oldValue","set","useCapture","nameLower","style","replace","test","toLowerCase","slice","addEventListener","eventProxy","removeEventListener","_listeners","removeAttributeNS","setAttributeNS","removeAttribute","setAttribute","e","this","event","newVNode","force","tmp","isNew","oldState","snapshot","newType","clearProcessingException","provider","cctx","prev","contextType","_id","_defaultValue","_processingException","_pendingError","prototype","render","doRender","_ancestorComponent","sub","state","_context","_renderCallbacks","_vnode","_nextState","getDerivedStateFromProps","componentWillMount","componentDidMount","componentWillReceiveProps","shouldComponentUpdate","componentWillUpdate","_prevVNode","catchRender","getChildContext","getSnapshotBeforeUpdate","base","_parentDom","applyRef","call","componentDidUpdate","diffElementNodes","diffed","catchErrorInComponent","commitRoot","root","commit","child","oldHtml","newHtml","nodeType","localName","document","createTextNode","createElementNS","data","childNodes","dangerouslySetInnerHTML","__html","innerHTML","multiple","current","skipRemove","r","componentWillUnmount","error","component","catchError","getDerivedStateFromError","setState","componentDidCatch","replaceNode","ownerSVGElement","hydrate","cloneElement","createContext","defaultValue","ctx","Consumer","Provider","subs","some","old","splice","indexOf","update","callback","s","Promise","then","bind","resolve","setTimeout"],"mappings":"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"}