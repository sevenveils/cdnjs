{"version":3,"file":"preact.umd.js","sources":["../src/options.js","../src/component.js","../src/create-context.js","../src/constants.js","../src/util.js","../src/create-element.js","../src/diff/children.js","../src/diff/props.js","../src/diff/index.js","../src/render.js","../src/clone-element.js"],"sourcesContent":["/** @type {import('./internal').Options}  */\nconst options = {};\n\nexport default options;\n","import { assign } from './util';\nimport { diff, commitRoot } from './diff/index';\nimport options from './options';\nimport { Fragment } from './create-element';\n\n/**\n * Base Component class. Provides `setState()` and `forceUpdate()`, which\n * trigger rendering\n * @param {object} props The initial component props\n * @param {object} context The initial context from parent components'\n * getChildContext\n */\nexport function Component(props, context) {\n\tthis.props = props;\n\tthis.context = context;\n\t// this.constructor // When component is functional component, this is reset to functional component\n\t// if (this.state==null) this.state = {};\n\t// this.state = {};\n\t// this._dirty = true;\n\t// this._renderCallbacks = []; // Only class components\n\n\t// Other properties that Component will have set later,\n\t// shown here as commented out for quick reference\n\t// this.base = null;\n\t// this._context = null;\n\t// this._vnode = null;\n\t// this._nextState = null; // Only class components\n\t// this._processingException = null; // Always read, set only when handling error\n\t// this._pendingError = null; // Always read, set only when handling error. This is used to indicate at diffTime to set _processingException\n}\n\n/**\n * Update component state and schedule a re-render.\n * @param {object | ((s: object, p: object) => object)} update A hash of state\n * properties to update with new values or a function that given the current\n * state and props returns a new partial state\n * @param {() => void} [callback] A function to be called once component state is\n * updated\n */\nComponent.prototype.setState = function(update, callback) {\n\t// only clone state when copying to nextState the first time.\n\tlet s = (this._nextState!==this.state && this._nextState) || (this._nextState = assign({}, this.state));\n\n\t// if update() mutates state in-place, skip the copy:\n\tif (typeof update!=='function' || (update = update(s, this.props))) {\n\t\tassign(s, update);\n\t}\n\n\t// Skip update if updater function returned null\n\tif (update==null) return;\n\n\tif (this._vnode) {\n\t\tif (callback) this._renderCallbacks.push(callback);\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Immediately perform a synchronous re-render of the component\n * @param {() => void} [callback] A function to be called after component is\n * re-renderd\n */\nComponent.prototype.forceUpdate = function(callback) {\n\tlet vnode = this._vnode, oldDom = this._vnode._dom, parentDom = this._parentDom;\n\tif (parentDom) {\n\t\t// Set render mode so that we can differantiate where the render request\n\t\t// is coming from. We need this because forceUpdate should never call\n\t\t// shouldComponentUpdate\n\t\tconst force = callback!==false;\n\n\t\tlet mounts = [];\n\t\tlet newDom = diff(parentDom, vnode, assign({}, vnode), this._context, parentDom.ownerSVGElement!==undefined, null, mounts, force, oldDom == null ? getDomSibling(vnode) : oldDom);\n\t\tcommitRoot(mounts, vnode);\n\n\t\tif (newDom != oldDom) {\n\t\t\tupdateParentDomPointers(vnode);\n\t\t}\n\t}\n\tif (callback) callback();\n};\n\n/**\n * Accepts `props` and `state`, and returns a new Virtual DOM tree to build.\n * Virtual DOM is generally constructed via [JSX](http://jasonformat.com/wtf-is-jsx).\n * @param {object} props Props (eg: JSX attributes) received from parent\n * element/component\n * @param {object} state The component's current state\n * @param {object} context Context object, as returned by the nearest\n * ancestor's `getChildContext()`\n * @returns {import('./index').ComponentChildren | void}\n */\nComponent.prototype.render = Fragment;\n\n/**\n * @param {import('./internal').VNode} vnode\n * @param {number | null} [childIndex]\n */\nexport function getDomSibling(vnode, childIndex) {\n\tif (childIndex == null) {\n\t\t// Use childIndex==null as a signal to resume the search from the vnode's sibling\n\t\treturn vnode._parent\n\t\t\t? getDomSibling(vnode._parent, vnode._parent._children.indexOf(vnode) + 1)\n\t\t\t: null;\n\t}\n\n\tlet sibling;\n\tfor (; childIndex < vnode._children.length; childIndex++) {\n\t\tsibling = vnode._children[childIndex];\n\n\t\tif (sibling != null && sibling._dom != null) {\n\t\t\t// Since updateParentDomPointers keeps _dom pointer correct,\n\t\t\t// we can rely on _dom to tell us if this subtree contains a\n\t\t\t// rendered DOM node, and what the first rendered DOM node is\n\t\t\treturn sibling._dom;\n\t\t}\n\t}\n\n\t// If we get here, we have not found a DOM node in this vnode's children.\n\t// We must resume from this vnode's sibling (in it's parent _children array)\n\t// Only climb up and search the parent if we aren't searching through a DOM\n\t// VNode (meaning we reached the DOM parent of the original vnode that began\n\t// the search)\n\treturn typeof vnode.type === 'function' ? getDomSibling(vnode) : null;\n}\n\n/**\n * @param {import('./internal').VNode} vnode\n */\nfunction updateParentDomPointers(vnode) {\n\tif ((vnode = vnode._parent) != null && vnode._component != null) {\n\t\tvnode._dom = vnode._component.base = null;\n\t\tfor (let i = 0; i < vnode._children.length; i++) {\n\t\t\tlet child = vnode._children[i];\n\t\t\tif (child != null && child._dom != null) {\n\t\t\t\tvnode._dom = vnode._component.base = child._dom;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn updateParentDomPointers(vnode);\n\t}\n}\n\n/**\n * The render queue\n * @type {Array<import('./internal').Component>}\n */\nlet q = [];\n\n/**\n * Asynchronously schedule a callback\n * @type {(cb) => void}\n */\nconst defer = typeof Promise=='function' ? Promise.prototype.then.bind(Promise.resolve()) : setTimeout;\n\n/*\n * The value of `Component.debounce` must asynchronously invoke the passed in callback. It is\n * important that contributors to Preact can consistenly reason about what calls to `setState`, etc.\n * do, and when their effects will be applied. See the links below for some further reading on designing\n * asynchronous APIs.\n * * [Designing APIs for Asynchrony](https://blog.izs.me/2013/08/designing-apis-for-asynchrony)\n * * [Callbacks synchronous and asynchronous](https://blog.ometer.com/2011/07/24/callbacks-synchronous-and-asynchronous/)\n */\n\n/**\n * Enqueue a rerender of a component\n * @param {import('./internal').Component} c The component to rerender\n */\nexport function enqueueRender(c) {\n\tif (!c._dirty && (c._dirty = true) && q.push(c) === 1) {\n\t\t(options.debounceRendering || defer)(process);\n\t}\n}\n\n/** Flush the render queue by rerendering all queued components */\nfunction process() {\n\tlet p;\n\tq.sort((a, b) => b._vnode._depth - a._vnode._depth);\n\twhile ((p=q.pop())) {\n\t\t// forceUpdate's callback argument is reused here to indicate a non-forced update.\n\t\tif (p._dirty) p.forceUpdate(false);\n\t}\n}\n","import { enqueueRender } from './component';\n\nexport let i = 0;\n\n/**\n *\n * @param {any} defaultValue\n */\nexport function createContext(defaultValue) {\n\tconst ctx = {};\n\n\tconst context = {\n\t\t_id: '__cC' + i++,\n\t\t_defaultValue: defaultValue,\n\t\tConsumer(props, context) {\n\t\t\treturn props.children(context);\n\t\t},\n\t\tProvider(props) {\n\t\t\tif (!this.getChildContext) {\n\t\t\t\tconst subs = [];\n\t\t\t\tthis.getChildContext = () => {\n\t\t\t\t\tctx[context._id] = this;\n\t\t\t\t\treturn ctx;\n\t\t\t\t};\n\t\t\t\tthis.shouldComponentUpdate = props => {\n\t\t\t\t\tsubs.some(c => {\n\t\t\t\t\t\t// Check if still mounted\n\t\t\t\t\t\tif (c._parentDom) {\n\t\t\t\t\t\t\tc.context = props.value;\n\t\t\t\t\t\t\tenqueueRender(c);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t};\n\t\t\t\tthis.sub = (c) => {\n\t\t\t\t\tsubs.push(c);\n\t\t\t\t\tlet old = c.componentWillUnmount;\n\t\t\t\t\tc.componentWillUnmount = () => {\n\t\t\t\t\t\tsubs.splice(subs.indexOf(c), 1);\n\t\t\t\t\t\told && old.call(c);\n\t\t\t\t\t};\n\t\t\t\t};\n\t\t\t}\n\t\t\treturn props.children;\n\t\t}\n\t};\n\n\tcontext.Consumer.contextType = context;\n\n\treturn context;\n}\n","export const EMPTY_OBJ = {};\nexport const EMPTY_ARR = [];\nexport const IS_NON_DIMENSIONAL = /acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|^--/i;\n","/**\n * Assign properties from `props` to `obj`\n * @template O, P The obj and props types\n * @param {O} obj The object to copy properties to\n * @param {P} props The object to copy properties from\n * @returns {O & P}\n */\nexport function assign(obj, props) {\n\tfor (let i in props) obj[i] = props[i];\n\treturn /** @type {O & P} */ (obj);\n}\n\n/**\n * Remove a child node from its parent if attached. This is a workaround for\n * IE11 which doesn't support `Element.prototype.remove()`. Using this function\n * is smaller than including a dedicated polyfill.\n * @param {Node} node The node to remove\n */\nexport function removeNode(node) {\n\tlet parentNode = node.parentNode;\n\tif (parentNode) parentNode.removeChild(node);\n}\n","import options from './options';\nimport { assign } from './util';\n\n/**\n  * Create an virtual node (used for JSX)\n  * @param {import('./internal').VNode[\"type\"]} type The node name or Component\n  * constructor for this virtual node\n  * @param {object | null | undefined} [props] The properties of the virtual node\n  * @param {Array<import('.').ComponentChildren>} [children] The children of the virtual node\n  * @returns {import('./internal').VNode}\n  */\nexport function createElement(type, props, children) {\n\tprops = assign({}, props);\n\n\tif (arguments.length>3) {\n\t\tchildren = [children];\n\t\tfor (let i=3; i<arguments.length; i++) {\n\t\t\tchildren.push(arguments[i]);\n\t\t}\n\t}\n\tif (children!=null) {\n\t\tprops.children = children;\n\t}\n\n\t// \"type\" may be undefined during development. The check is needed so that\n\t// we can display a nice error message with our debug helpers\n\tif (type!=null && type.defaultProps!=null) {\n\t\tfor (let i in type.defaultProps) {\n\t\t\tif (props[i]===undefined) props[i] = type.defaultProps[i];\n\t\t}\n\t}\n\tlet ref = props.ref;\n\tlet key = props.key;\n\tif (ref!=null) delete props.ref;\n\tif (key!=null) delete props.key;\n\n\treturn createVNode(type, props, key, ref);\n}\n\n/**\n * Create a VNode (used internally by Preact)\n * @param {import('./internal').VNode[\"type\"]} type The node name or Component\n * Constructor for this virtual node\n * @param {object | string | number | null} props The properites of this virtual node.\n * If this virtual node represents a text node, this is the text of the node (string or number).\n * @param {string | number | null} key The key for this virtual node, used when\n * diffing it against its children\n * @param {import('./internal').VNode[\"ref\"]} ref The ref property that will\n * receive a reference to its created child\n * @returns {import('./internal').VNode}\n */\nexport function createVNode(type, props, key, ref) {\n\t// V8 seems to be better at detecting type shapes if the object is allocated from the same call site\n\t// Do not inline into createElement and coerceToVNode!\n\tconst vnode = {\n\t\ttype,\n\t\tprops,\n\t\tkey,\n\t\tref,\n\t\t_children: null,\n\t\t_parent: null,\n\t\t_depth: 0,\n\t\t_dom: null,\n\t\t_lastDomChild: null,\n\t\t_component: null,\n\t\tconstructor: undefined\n\t};\n\n\tif (options.vnode) options.vnode(vnode);\n\n\treturn vnode;\n}\n\nexport function createRef() {\n\treturn {};\n}\n\nexport function Fragment(props) {\n\treturn props.children;\n}\n\n/**\n * Coerce an untrusted value into a VNode\n * Specifically, this should be used anywhere a user could provide a boolean, string, or number where\n * a VNode or Component is desired instead\n * @param {boolean | string | number | import('./internal').VNode} possibleVNode A possible VNode\n * @returns {import('./internal').VNode | null}\n */\nexport function coerceToVNode(possibleVNode) {\n\tif (possibleVNode == null || typeof possibleVNode === 'boolean') return null;\n\tif (typeof possibleVNode === 'string' || typeof possibleVNode === 'number') {\n\t\treturn createVNode(null, possibleVNode, null, null);\n\t}\n\n\t// Clone vnode if it has already been used. ceviche/#57\n\tif (possibleVNode._dom!=null || possibleVNode._component!=null) {\n\t\tlet vnode = createVNode(possibleVNode.type, possibleVNode.props, possibleVNode.key, null);\n\t\tvnode._dom = possibleVNode._dom;\n\t\treturn vnode;\n\t}\n\n\treturn possibleVNode;\n}\n","import { diff, unmount, applyRef } from './index';\nimport { coerceToVNode } from '../create-element';\nimport { EMPTY_OBJ, EMPTY_ARR } from '../constants';\nimport { removeNode } from '../util';\nimport { getDomSibling } from '../component';\n\n/**\n * Diff the children of a virtual node\n * @param {import('../internal').PreactElement} parentDom The DOM element whose\n * children are being diffed\n * @param {import('../internal').VNode} newParentVNode The new virtual\n * node whose children should be diff'ed against oldParentVNode\n * @param {import('../internal').VNode} oldParentVNode The old virtual\n * node whose children should be diff'ed against newParentVNode\n * @param {object} context The current context object\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node\n * @param {Array<import('../internal').PreactElement>} excessDomChildren\n * @param {Array<import('../internal').Component>} mounts The list of components\n * which have mounted\n * @param {Node | Text} oldDom The current attached DOM\n * element any new dom elements should be placed around. Likely `null` on first\n * render (except when hydrating). Can be a sibling DOM element when diffing\n * Fragments that have siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n */\nexport function diffChildren(parentDom, newParentVNode, oldParentVNode, context, isSvg, excessDomChildren, mounts, oldDom) {\n\tlet childVNode, i, j, oldVNode, newDom, sibDom, firstChildDom, refs;\n\n\tlet newChildren = newParentVNode._children || toChildArray(newParentVNode.props.children, newParentVNode._children=[], coerceToVNode, true);\n\t// This is a compression of oldParentVNode!=null && oldParentVNode != EMPTY_OBJ && oldParentVNode._children || EMPTY_ARR\n\t// as EMPTY_OBJ._children should be `undefined`.\n\tlet oldChildren = (oldParentVNode && oldParentVNode._children) || EMPTY_ARR;\n\n\tlet oldChildrenLength = oldChildren.length;\n\n\t// Only in very specific places should this logic be invoked (top level `render` and `diffElementNodes`).\n\t// I'm using `EMPTY_OBJ` to signal when `diffChildren` is invoked in these situations. I can't use `null`\n\t// for this purpose, because `null` is a valid value for `oldDom` which can mean to skip to this logic\n\t// (e.g. if mounting a new tree in which the old DOM should be ignored (usually for Fragments).\n\tif (oldDom == EMPTY_OBJ) {\n\t\tif (excessDomChildren != null) {\n\t\t\toldDom = excessDomChildren[0];\n\t\t}\n\t\telse if (oldChildrenLength) {\n\t\t\toldDom = getDomSibling(oldParentVNode, 0);\n\t\t}\n\t\telse {\n\t\t\toldDom = null;\n\t\t}\n\t}\n\n\tfor (i=0; i<newChildren.length; i++) {\n\t\tchildVNode = newChildren[i] = coerceToVNode(newChildren[i]);\n\n\t\tif (childVNode!=null) {\n\t\t\tchildVNode._parent = newParentVNode;\n\t\t\tchildVNode._depth = newParentVNode._depth + 1;\n\n\t\t\t// Check if we find a corresponding element in oldChildren.\n\t\t\t// If found, delete the array item by setting to `undefined`.\n\t\t\t// We use `undefined`, as `null` is reserved for empty placeholders\n\t\t\t// (holes).\n\t\t\toldVNode = oldChildren[i];\n\n\t\t\tif (oldVNode===null || (oldVNode && childVNode.key == oldVNode.key && childVNode.type === oldVNode.type)) {\n\t\t\t\toldChildren[i] = undefined;\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Either oldVNode === undefined or oldChildrenLength > 0,\n\t\t\t\t// so after this loop oldVNode == null or oldVNode is a valid value.\n\t\t\t\tfor (j=0; j<oldChildrenLength; j++) {\n\t\t\t\t\toldVNode = oldChildren[j];\n\t\t\t\t\t// If childVNode is unkeyed, we only match similarly unkeyed nodes, otherwise we match by key.\n\t\t\t\t\t// We always match by type (in either case).\n\t\t\t\t\tif (oldVNode && childVNode.key == oldVNode.key && childVNode.type === oldVNode.type) {\n\t\t\t\t\t\toldChildren[j] = undefined;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\toldVNode = null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\toldVNode = oldVNode || EMPTY_OBJ;\n\n\t\t\t// Morph the old element into the new one, but don't append it to the dom yet\n\t\t\tnewDom = diff(parentDom, childVNode, oldVNode, context, isSvg, excessDomChildren, mounts, null, oldDom);\n\n\t\t\tif ((j = childVNode.ref) && oldVNode.ref != j) {\n\t\t\t\t(refs || (refs=[])).push(j, childVNode._component || newDom, childVNode);\n\t\t\t}\n\n\t\t\t// Only proceed if the vnode has not been unmounted by `diff()` above.\n\t\t\tif (newDom!=null) {\n\t\t\t\tif (firstChildDom == null) {\n\t\t\t\t\tfirstChildDom = newDom;\n\t\t\t\t}\n\n\t\t\t\tif (childVNode._lastDomChild != null) {\n\t\t\t\t\t// Only Fragments or components that return Fragment like VNodes will\n\t\t\t\t\t// have a non-null _lastDomChild. Continue the diff from the end of\n\t\t\t\t\t// this Fragment's DOM tree.\n\t\t\t\t\tnewDom = childVNode._lastDomChild;\n\n\t\t\t\t\t// Eagerly cleanup _lastDomChild. We don't need to persist the value because\n\t\t\t\t\t// it is only used by `diffChildren` to determine where to resume the diff after\n\t\t\t\t\t// diffing Components and Fragments.\n\t\t\t\t\tchildVNode._lastDomChild = null;\n\t\t\t\t}\n\t\t\t\telse if (excessDomChildren==oldVNode || newDom!=oldDom || newDom.parentNode==null) {\n\t\t\t\t\t// NOTE: excessDomChildren==oldVNode above:\n\t\t\t\t\t// This is a compression of excessDomChildren==null && oldVNode==null!\n\t\t\t\t\t// The values only have the same type when `null`.\n\n\t\t\t\t\touter: if (oldDom==null || oldDom.parentNode!==parentDom) {\n\t\t\t\t\t\tparentDom.appendChild(newDom);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t// `j<oldChildrenLength; j+=2` is an alternative to `j++<oldChildrenLength/2`\n\t\t\t\t\t\tfor (sibDom=oldDom, j=0; (sibDom=sibDom.nextSibling) && j<oldChildrenLength; j+=2) {\n\t\t\t\t\t\t\tif (sibDom==newDom) {\n\t\t\t\t\t\t\t\tbreak outer;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tparentDom.insertBefore(newDom, oldDom);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\toldDom = newDom.nextSibling;\n\n\t\t\t\tif (typeof newParentVNode.type == 'function') {\n\t\t\t\t\t// At this point, if childVNode._lastDomChild existed, then\n\t\t\t\t\t// newDom = childVNode._lastDomChild per line 101. Else it is\n\t\t\t\t\t// the same as childVNode._dom, meaning this component returned\n\t\t\t\t\t// only a single DOM node\n\t\t\t\t\tnewParentVNode._lastDomChild = newDom;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tnewParentVNode._dom = firstChildDom;\n\n\t// Remove children that are not part of any vnode.\n\tif (excessDomChildren!=null && typeof newParentVNode.type !== 'function') for (i=excessDomChildren.length; i--; ) if (excessDomChildren[i]!=null) removeNode(excessDomChildren[i]);\n\n\t// Remove remaining oldChildren if there are any.\n\tfor (i=oldChildrenLength; i--; ) if (oldChildren[i]!=null) unmount(oldChildren[i], oldChildren[i]);\n\n\t// Set refs only after unmount\n\tif (refs) {\n\t\tfor (i = 0; i < refs.length; i++) {\n\t\t\tapplyRef(refs[i], refs[++i], refs[++i]);\n\t\t}\n\t}\n}\n\n/**\n * Flatten a virtual nodes children to a single dimensional array\n * @param {import('../index').ComponentChildren} children The unflattened\n * children of a virtual node\n * @param {Array<import('../internal').VNode | null>} [flattened] An flat array of children to modify\n * @param {typeof import('../create-element').coerceToVNode} [map] Function that\n * will be applied on each child if the `vnode` is not `null`\n * @param {boolean} [keepHoles] wether to coerce `undefined` to `null` or not.\n * This is needed for Components without children like `<Foo />`.\n */\nexport function toChildArray(children, flattened, map, keepHoles) {\n\tif (flattened == null) flattened = [];\n\tif (children==null || typeof children === 'boolean') {\n\t\tif (keepHoles) flattened.push(null);\n\t}\n\telse if (Array.isArray(children)) {\n\t\tfor (let i=0; i < children.length; i++) {\n\t\t\ttoChildArray(children[i], flattened, map, keepHoles);\n\t\t}\n\t}\n\telse {\n\t\tflattened.push(map ? map(children) : children);\n\t}\n\n\treturn flattened;\n}\n","import { IS_NON_DIMENSIONAL } from '../constants';\nimport options from '../options';\n\n/**\n * Diff the old and new properties of a VNode and apply changes to the DOM node\n * @param {import('../internal').PreactElement} dom The DOM node to apply\n * changes to\n * @param {object} newProps The new props\n * @param {object} oldProps The old props\n * @param {boolean} isSvg Whether or not this node is an SVG node\n * @param {boolean} hydrate Whether or not we are in hydration mode\n */\nexport function diffProps(dom, newProps, oldProps, isSvg, hydrate) {\n\tlet i;\n\n\tfor (i in oldProps) {\n\t\tif (!(i in newProps)) {\n\t\t\tsetProperty(dom, i, null, oldProps[i], isSvg);\n\t\t}\n\t}\n\n\tfor (i in newProps) {\n\t\tif ((!hydrate || typeof newProps[i]=='function') && i!=='value' && i!=='checked' && oldProps[i]!==newProps[i]) {\n\t\t\tsetProperty(dom, i, newProps[i], oldProps[i], isSvg);\n\t\t}\n\t}\n}\n\nfunction setStyle(style, key, value) {\n\tif (key[0] === '-') {\n\t\tstyle.setProperty(key, value);\n\t}\n\telse {\n\t\tstyle[key] = typeof value==='number' && IS_NON_DIMENSIONAL.test(key)===false ? value+'px' : value;\n\t}\n}\n\n/**\n * Set a property value on a DOM node\n * @param {import('../internal').PreactElement} dom The DOM node to modify\n * @param {string} name The name of the property to set\n * @param {*} value The value to set the property to\n * @param {*} oldValue The old value the property had\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node or not\n */\nfunction setProperty(dom, name, value, oldValue, isSvg) {\n\tname = isSvg ? (name==='className' ? 'class' : name) : (name==='class' ? 'className' : name);\n\n\tif (name==='key' || name === 'children') {}\n\telse if (name==='style') {\n\t\tconst s = dom.style;\n\n\t\tif (typeof value==='string') {\n\t\t\ts.cssText = value;\n\t\t}\n\t\telse {\n\t\t\tif (typeof oldValue==='string') {\n\t\t\t\ts.cssText = '';\n\t\t\t\toldValue = null;\n\t\t\t}\n\n\t\t\tif (oldValue) for (let i in oldValue) {\n\t\t\t\tif (!(value && i in value)) {\n\t\t\t\t\tsetStyle(s, i, '');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (value) for (let i in value) {\n\t\t\t\tif (!oldValue || value[i] !== oldValue[i]) {\n\t\t\t\t\tsetStyle(s, i, value[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t}\n\t// Benchmark for comparison: https://esbench.com/bench/574c954bdb965b9a00965ac6\n\telse if (name[0]==='o' && name[1]==='n') {\n\t\tlet useCapture = name !== (name=name.replace(/Capture$/, ''));\n\t\tlet nameLower = name.toLowerCase();\n\t\tname = (nameLower in dom ? nameLower : name).slice(2);\n\n\t\tif (value) {\n\t\t\tif (!oldValue) dom.addEventListener(name, eventProxy, useCapture);\n\t\t\t(dom._listeners || (dom._listeners = {}))[name] = value;\n\t\t}\n\t\telse {\n\t\t\tdom.removeEventListener(name, eventProxy, useCapture);\n\t\t}\n\t}\n\telse if (name!=='list' && name!=='tagName' && !isSvg && (name in dom)) {\n\t\t// Setting `select.value` doesn't work in IE11.\n\t\t// Only `<select>` elements have the length property\n\t\tif (dom.length && name=='value') {\n\t\t\tfor (name = dom.length; name--;) {\n\t\t\t\tdom.options[name].selected = dom.options[name].value==value;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tdom[name] = value==null ? '' : value;\n\t\t}\n\t}\n\telse if (typeof value!=='function' && name!=='dangerouslySetInnerHTML') {\n\t\tif (name!==(name = name.replace(/^xlink:?/, ''))) {\n\t\t\tif (value==null || value===false) {\n\t\t\t\tdom.removeAttributeNS('http://www.w3.org/1999/xlink', name.toLowerCase());\n\t\t\t}\n\t\t\telse {\n\t\t\t\tdom.setAttributeNS('http://www.w3.org/1999/xlink', name.toLowerCase(), value);\n\t\t\t}\n\t\t}\n\t\telse if (value==null || value===false) {\n\t\t\tdom.removeAttribute(name);\n\t\t}\n\t\telse {\n\t\t\tdom.setAttribute(name, value);\n\t\t}\n\t}\n}\n\n/**\n * Proxy an event to hooked event handlers\n * @param {Event} e The event object from the browser\n * @private\n */\nfunction eventProxy(e) {\n\treturn this._listeners[e.type](options.event ? options.event(e) : e);\n}\n","import { EMPTY_OBJ, EMPTY_ARR } from '../constants';\nimport { Component, enqueueRender } from '../component';\nimport { coerceToVNode, Fragment } from '../create-element';\nimport { diffChildren, toChildArray } from './children';\nimport { diffProps } from './props';\nimport { assign, removeNode } from '../util';\nimport options from '../options';\n\n/**\n * Diff two virtual nodes and apply proper changes to the DOM\n * @param {import('../internal').PreactElement} parentDom The parent of the DOM element\n * @param {import('../internal').VNode} newVNode The new virtual node\n * @param {import('../internal').VNode} oldVNode The old virtual node\n * @param {object} context The current context object\n * @param {boolean} isSvg Whether or not this element is an SVG node\n * @param {Array<import('../internal').PreactElement>} excessDomChildren\n * @param {Array<import('../internal').Component>} mounts A list of newly\n * mounted components\n * @param {Element | Text} oldDom The current attached DOM\n * element any new dom elements should be placed around. Likely `null` on first\n * render (except when hydrating). Can be a sibling DOM element when diffing\n * Fragments that have siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n */\nexport function diff(parentDom, newVNode, oldVNode, context, isSvg, excessDomChildren, mounts, force, oldDom) {\n\tlet tmp, newType = newVNode.type;\n\n\t// When passing through createElement it assigns the object\n\t// constructor as undefined. This to prevent JSON-injection.\n\tif (newVNode.constructor !== undefined) return null;\n\n\tif (tmp = options._diff) tmp(newVNode);\n\n\ttry {\n\t\touter: if (typeof newType==='function') {\n\t\t\tlet c, isNew, oldProps, oldState, snapshot, clearProcessingException;\n\t\t\tlet newProps = newVNode.props;\n\n\t\t\t// Necessary for createContext api. Setting this property will pass\n\t\t\t// the context value as `this.context` just for this component.\n\t\t\ttmp = newType.contextType;\n\t\t\tlet provider = tmp && context[tmp._id];\n\t\t\tlet cctx = tmp ? (provider ? provider.props.value : tmp._defaultValue) : context;\n\n\t\t\t// Get component and set it to `c`\n\t\t\tif (oldVNode._component) {\n\t\t\t\tc = newVNode._component = oldVNode._component;\n\t\t\t\tclearProcessingException = c._processingException = c._pendingError;\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Instantiate the new component\n\t\t\t\tif (newType.prototype && newType.prototype.render) {\n\t\t\t\t\tnewVNode._component = c = new newType(newProps, cctx); // eslint-disable-line new-cap\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tnewVNode._component = c = new Component(newProps, cctx);\n\t\t\t\t\tc.constructor = newType;\n\t\t\t\t\tc.render = doRender;\n\t\t\t\t}\n\t\t\t\tif (provider) provider.sub(c);\n\n\t\t\t\tc.props = newProps;\n\t\t\t\tif (!c.state) c.state = {};\n\t\t\t\tc.context = cctx;\n\t\t\t\tc._context = context;\n\t\t\t\tisNew = c._dirty = true;\n\t\t\t\tc._renderCallbacks = [];\n\t\t\t}\n\n\t\t\t// Invoke getDerivedStateFromProps\n\t\t\tif (c._nextState==null) {\n\t\t\t\tc._nextState = c.state;\n\t\t\t}\n\t\t\tif (newType.getDerivedStateFromProps!=null) {\n\t\t\t\tassign(c._nextState==c.state ? (c._nextState = assign({}, c._nextState)) : c._nextState, newType.getDerivedStateFromProps(newProps, c._nextState));\n\t\t\t}\n\n\t\t\t// Invoke pre-render lifecycle methods\n\t\t\tif (isNew) {\n\t\t\t\tif (newType.getDerivedStateFromProps==null && c.componentWillMount!=null) c.componentWillMount();\n\t\t\t\tif (c.componentDidMount!=null) mounts.push(c);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (newType.getDerivedStateFromProps==null && force==null && c.componentWillReceiveProps!=null) {\n\t\t\t\t\tc.componentWillReceiveProps(newProps, cctx);\n\t\t\t\t}\n\n\t\t\t\tif (!force && c.shouldComponentUpdate!=null && c.shouldComponentUpdate(newProps, c._nextState, cctx)===false) {\n\t\t\t\t\tc.props = newProps;\n\t\t\t\t\tc.state = c._nextState;\n\t\t\t\t\tc._dirty = false;\n\t\t\t\t\tc._vnode = newVNode;\n\t\t\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t\t\t\tnewVNode._children = oldVNode._children;\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\n\t\t\t\tif (c.componentWillUpdate!=null) {\n\t\t\t\t\tc.componentWillUpdate(newProps, c._nextState, cctx);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\toldProps = c.props;\n\t\t\toldState = c.state;\n\n\t\t\tc.context = cctx;\n\t\t\tc.props = newProps;\n\t\t\tc.state = c._nextState;\n\n\t\t\tif (tmp = options._render) tmp(newVNode);\n\n\t\t\tc._dirty = false;\n\t\t\tc._vnode = newVNode;\n\t\t\tc._parentDom = parentDom;\n\n\t\t\ttmp = c.render(c.props, c.state, c.context);\n\t\t\tlet isTopLevelFragment = tmp != null && tmp.type == Fragment && tmp.key == null;\n\t\t\ttoChildArray(isTopLevelFragment ? tmp.props.children : tmp, newVNode._children=[], coerceToVNode, true);\n\n\t\t\tif (c.getChildContext!=null) {\n\t\t\t\tcontext = assign(assign({}, context), c.getChildContext());\n\t\t\t}\n\n\t\t\tif (!isNew && c.getSnapshotBeforeUpdate!=null) {\n\t\t\t\tsnapshot = c.getSnapshotBeforeUpdate(oldProps, oldState);\n\t\t\t}\n\n\t\t\tdiffChildren(parentDom, newVNode, oldVNode, context, isSvg, excessDomChildren, mounts, oldDom);\n\n\t\t\tc.base = newVNode._dom;\n\n\t\t\twhile (tmp=c._renderCallbacks.pop()) tmp.call(c);\n\n\t\t\t// Don't call componentDidUpdate on mount or when we bailed out via\n\t\t\t// `shouldComponentUpdate`\n\t\t\tif (!isNew && oldProps!=null && c.componentDidUpdate!=null) {\n\t\t\t\tc.componentDidUpdate(oldProps, oldState, snapshot);\n\t\t\t}\n\n\t\t\tif (clearProcessingException) {\n\t\t\t\tc._pendingError = c._processingException = null;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tnewVNode._dom = diffElementNodes(oldVNode._dom, newVNode, oldVNode, context, isSvg, excessDomChildren, mounts);\n\t\t}\n\n\t\tif (tmp = options.diffed) tmp(newVNode);\n\t}\n\tcatch (e) {\n\t\toptions._catchError(e, newVNode, oldVNode);\n\t}\n\n\treturn newVNode._dom;\n}\n\nexport function commitRoot(mounts, root) {\n\tlet c;\n\twhile ((c = mounts.pop())) {\n\t\ttry {\n\t\t\tc.componentDidMount();\n\t\t}\n\t\tcatch (e) {\n\t\t\toptions._catchError(e, c._vnode);\n\t\t}\n\t}\n\n\tif (options._commit) options._commit(root);\n}\n\n/**\n * Diff two virtual nodes representing DOM element\n * @param {import('../internal').PreactElement} dom The DOM element representing\n * the virtual nodes being diffed\n * @param {import('../internal').VNode} newVNode The new virtual node\n * @param {import('../internal').VNode} oldVNode The old virtual node\n * @param {object} context The current context object\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node\n * @param {*} excessDomChildren\n * @param {Array<import('../internal').Component>} mounts An array of newly\n * mounted components\n * @returns {import('../internal').PreactElement}\n */\nfunction diffElementNodes(dom, newVNode, oldVNode, context, isSvg, excessDomChildren, mounts) {\n\tlet i;\n\tlet oldProps = oldVNode.props;\n\tlet newProps = newVNode.props;\n\n\t// Tracks entering and exiting SVG namespace when descending through the tree.\n\tisSvg = newVNode.type==='svg' || isSvg;\n\n\tif (dom==null && excessDomChildren!=null) {\n\t\tfor (i=0; i<excessDomChildren.length; i++) {\n\t\t\tconst child = excessDomChildren[i];\n\t\t\tif (child!=null && (newVNode.type===null ? child.nodeType===3 : child.localName===newVNode.type)) {\n\t\t\t\tdom = child;\n\t\t\t\texcessDomChildren[i] = null;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (dom==null) {\n\t\tif (newVNode.type===null) {\n\t\t\treturn document.createTextNode(newProps);\n\t\t}\n\t\tdom = isSvg ? document.createElementNS('http://www.w3.org/2000/svg', newVNode.type) : document.createElement(newVNode.type);\n\t\t// we created a new parent, so none of the previously attached children can be reused:\n\t\texcessDomChildren = null;\n\t}\n\n\tif (newVNode.type===null) {\n\t\tif (oldProps !== newProps) {\n\t\t\tdom.data = newProps;\n\t\t}\n\t}\n\telse if (newVNode!==oldVNode) {\n\t\tif (excessDomChildren!=null) {\n\t\t\texcessDomChildren = EMPTY_ARR.slice.call(dom.childNodes);\n\t\t}\n\n\t\toldProps = oldVNode.props || EMPTY_OBJ;\n\n\t\tlet oldHtml = oldProps.dangerouslySetInnerHTML;\n\t\tlet newHtml = newProps.dangerouslySetInnerHTML;\n\n\t\t// During hydration, props are not diffed at all (including dangerouslySetInnerHTML)\n\t\t// @TODO we should warn in debug mode when props don't match here.\n\t\tif (excessDomChildren == null) {\n\t\t\tif (newHtml || oldHtml) {\n\t\t\t\t// Avoid re-applying the same '__html' if it did not changed between re-render\n\t\t\t\tif (!newHtml || !oldHtml || newHtml.__html!=oldHtml.__html) {\n\t\t\t\t\tdom.innerHTML = newHtml && newHtml.__html || '';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tdiffProps(dom, newProps, oldProps, isSvg, excessDomChildren!=null);\n\n\t\t// If the new vnode didn't have dangerouslySetInnerHTML, diff its children\n\t\tif (!newHtml) {\n\t\t\tdiffChildren(dom, newVNode, oldVNode, context, newVNode.type==='foreignObject' ? false : isSvg, excessDomChildren, mounts, EMPTY_OBJ);\n\t\t}\n\n\t\t// (as above, don't diff props during hydration)\n\t\tif (excessDomChildren == null) {\n\t\t\tif (('value' in newProps) && newProps.value!==undefined && newProps.value !== dom.value) dom.value = newProps.value==null ? '' : newProps.value;\n\t\t\tif (('checked' in newProps) && newProps.checked!==undefined && newProps.checked !== dom.checked) dom.checked = newProps.checked;\n\t\t}\n\t}\n\n\treturn dom;\n}\n\n/**\n * Invoke or update a ref, depending on whether it is a function or object ref.\n * @param {object|function} ref\n * @param {any} value\n * @param {import('../internal').VNode} vnode\n */\nexport function applyRef(ref, value, vnode) {\n\ttry {\n\t\tif (typeof ref=='function') ref(value);\n\t\telse ref.current = value;\n\t}\n\tcatch (e) {\n\t\toptions._catchError(e, vnode);\n\t}\n}\n\n/**\n * Unmount a virtual node from the tree and apply DOM changes\n * @param {import('../internal').VNode} vnode The virtual node to unmount\n * @param {import('../internal').VNode} parentVNode The parent of the VNode that\n * initiated the unmount\n * @param {boolean} [skipRemove] Flag that indicates that a parent node of the\n * current element is already detached from the DOM.\n */\nexport function unmount(vnode, parentVNode, skipRemove) {\n\tlet r;\n\tif (options.unmount) options.unmount(vnode);\n\n\tif (r = vnode.ref) {\n\t\tapplyRef(r, null, parentVNode);\n\t}\n\n\tlet dom;\n\tif (!skipRemove && typeof vnode.type !== 'function') {\n\t\tskipRemove = (dom = vnode._dom)!=null;\n\t}\n\n\tvnode._dom = vnode._lastDomChild = null;\n\n\tif ((r = vnode._component)!=null) {\n\t\tif (r.componentWillUnmount) {\n\t\t\ttry {\n\t\t\t\tr.componentWillUnmount();\n\t\t\t}\n\t\t\tcatch (e) {\n\t\t\t\toptions._catchError(e, parentVNode);\n\t\t\t}\n\t\t}\n\n\t\tr.base = r._parentDom = null;\n\t}\n\n\tif (r = vnode._children) {\n\t\tfor (let i = 0; i < r.length; i++) {\n\t\t\tif (r[i]) unmount(r[i], parentVNode, skipRemove);\n\t\t}\n\t}\n\n\tif (dom!=null) removeNode(dom);\n}\n\n/** The `.render()` method for a PFC backing instance. */\nfunction doRender(props, state, context) {\n\treturn this.constructor(props, context);\n}\n\n/**\n * Find the closest error boundary to a thrown error and call it\n * @param {object} error The thrown value\n * @param {import('../internal').VNode} vnode The vnode that threw\n * the error that was caught (except for unmounting when this parameter\n * is the highest parent that was being unmounted)\n * @param {import('../internal').VNode} oldVNode The oldVNode of the vnode\n * that threw, if this VNode threw while diffing\n */\n(options)._catchError = function (error, vnode, oldVNode) {\n\n\t/** @type {import('../internal').Component} */\n\tlet component;\n\n\tfor (; vnode = vnode._parent;) {\n\t\tif ((component = vnode._component) && !component._processingException) {\n\t\t\ttry {\n\t\t\t\tif (component.constructor && component.constructor.getDerivedStateFromError!=null) {\n\t\t\t\t\tcomponent.setState(component.constructor.getDerivedStateFromError(error));\n\t\t\t\t}\n\t\t\t\telse if (component.componentDidCatch!=null) {\n\t\t\t\t\tcomponent.componentDidCatch(error);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\treturn enqueueRender(component._pendingError = component);\n\t\t\t}\n\t\t\tcatch (e) {\n\t\t\t\terror = e;\n\t\t\t}\n\t\t}\n\t}\n\n\tthrow error;\n};\n","import { EMPTY_OBJ, EMPTY_ARR } from './constants';\nimport { commitRoot, diff } from './diff/index';\nimport { createElement, Fragment } from './create-element';\nimport options from './options';\n\n/**\n * Render a Preact virtual node into a DOM element\n * @param {import('./index').ComponentChild} vnode The virtual node to render\n * @param {import('./internal').PreactElement} parentDom The DOM element to\n * render into\n * @param {Element | Text} [replaceNode] Attempt to re-use an\n * existing DOM tree rooted at `replaceNode`\n */\nexport function render(vnode, parentDom, replaceNode) {\n\tif (options._root) options._root(vnode, parentDom);\n\tlet oldVNode = replaceNode && replaceNode._children || parentDom._children;\n\n\tvnode = createElement(Fragment, null, [vnode]);\n\n\tlet mounts = [];\n\tdiff(\n\t\tparentDom,\n\t\t(replaceNode || parentDom)._children = vnode,\n\t\toldVNode || EMPTY_OBJ,\n\t\tEMPTY_OBJ,\n\t\tparentDom.ownerSVGElement !== undefined,\n\t\treplaceNode\n\t\t\t? [replaceNode]\n\t\t\t: oldVNode\n\t\t\t\t? null\n\t\t\t\t: EMPTY_ARR.slice.call(parentDom.childNodes),\n\t\tmounts,\n\t\tfalse,\n\t\treplaceNode || EMPTY_OBJ,\n\t);\n\tcommitRoot(mounts, vnode);\n}\n\n/**\n * Update an existing DOM element with data from a Preact virtual node\n * @param {import('./index').ComponentChild} vnode The virtual node to render\n * @param {import('./internal').PreactElement} parentDom The DOM element to\n * update\n */\nexport function hydrate(vnode, parentDom) {\n\tparentDom._children = null;\n\trender(vnode, parentDom);\n}\n","import { assign } from './util';\nimport { EMPTY_ARR } from './constants';\nimport { createVNode } from './create-element';\n\n/**\n * Clones the given VNode, optionally adding attributes/props and replacing its children.\n * @param {import('./internal').VNode} vnode The virtual DOM element to clone\n * @param {object} props Attributes/props to add when cloning\n * @param {Array<import('./index').ComponentChildren>} rest Any additional arguments will be used as replacement children.\n */\nexport function cloneElement(vnode, props) {\n\tprops = assign(assign({}, vnode.props), props);\n\tif (arguments.length>2) props.children = EMPTY_ARR.slice.call(arguments, 2);\n\treturn createVNode(vnode.type, props, props.key || vnode.key, props.ref || vnode.ref);\n}\n"],"names":["options","q","defer","i","EMPTY_OBJ","EMPTY_ARR","IS_NON_DIMENSIONAL","assign","obj","props","let","removeNode","node","parentNode","removeChild","createElement","type","children","ref","key","arguments","length","push","defaultProps","undefined","createVNode","vnode","_children","_parent","_depth","_dom","_lastDomChild","_component","constructor","Fragment","coerceToVNode","possibleVNode","Component","context","getDomSibling","childIndex","indexOf","sibling","updateParentDomPointers","child","base","enqueueRender","c","_dirty","debounceRendering","process","p","sort","a","b","_vnode","pop","forceUpdate","diffChildren","parentDom","newParentVNode","oldParentVNode","isSvg","excessDomChildren","mounts","oldDom","childVNode","j","oldVNode","newDom","sibDom","firstChildDom","refs","newChildren","toChildArray","oldChildren","oldChildrenLength","diff","outer","appendChild","nextSibling","insertBefore","unmount","applyRef","flattened","map","keepHoles","Array","isArray","diffProps","dom","newProps","oldProps","hydrate","setProperty","setStyle","style","value","test","name","oldValue","s","useCapture","nameLower","cssText","replace","toLowerCase","slice","addEventListener","eventProxy","_listeners","removeEventListener","selected","removeAttributeNS","setAttributeNS","removeAttribute","setAttribute","e","this","event","newVNode","force","tmp","isNew","oldState","snapshot","clearProcessingException","provider","cctx","newType","_diff","contextType","_id","_defaultValue","_processingException","_pendingError","prototype","render","doRender","sub","state","_context","_renderCallbacks","_nextState","getDerivedStateFromProps","componentWillMount","componentDidMount","componentWillReceiveProps","shouldComponentUpdate","componentWillUpdate","_render","_parentDom","getChildContext","getSnapshotBeforeUpdate","call","componentDidUpdate","diffElementNodes","diffed","_catchError","commitRoot","root","_commit","oldHtml","newHtml","nodeType","localName","document","createTextNode","createElementNS","data","childNodes","dangerouslySetInnerHTML","__html","innerHTML","checked","current","parentVNode","skipRemove","r","componentWillUnmount","replaceNode","_root","ownerSVGElement","setState","update","callback","Promise","then","bind","resolve","setTimeout","error","component","getDerivedStateFromError","componentDidCatch","defaultValue","ctx","Consumer","Provider","subs","some","old","splice"],"mappings":"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"}