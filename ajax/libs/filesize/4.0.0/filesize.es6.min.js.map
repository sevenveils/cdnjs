{"version":3,"sources":["filesize.es6.js"],"names":["global","filesize","arg","descriptor","Math","pow","floor","log","e","base","bits","ceil","full","fullforms","neg","num","output","round","unix","separator","spacer","standard","symbols","result","val","isNaN","Error","fullform","Array","exponent","symbol","toFixed","charAt","replace","b","test","value","length","toString","join","iec","bytes","jedec","partial","opt","exports","define","amd","module","window"],"mappings":"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","file":"unknown","sourcesContent":["/**\r\n * filesize\r\n *\r\n * @copyright 2019 Jason Mulligan <jason.mulligan@avoidwork.com>\r\n * @license BSD-3-Clause\r\n * @version 4.0.0\r\n */\r\n(function (global) {\r\n\tconst b = /^(b|B)$/,\r\n\t\tsymbol = {\r\n\t\t\tiec: {\r\n\t\t\t\tbits: [\"b\", \"Kib\", \"Mib\", \"Gib\", \"Tib\", \"Pib\", \"Eib\", \"Zib\", \"Yib\"],\r\n\t\t\t\tbytes: [\"B\", \"KiB\", \"MiB\", \"GiB\", \"TiB\", \"PiB\", \"EiB\", \"ZiB\", \"YiB\"]\r\n\t\t\t},\r\n\t\t\tjedec: {\r\n\t\t\t\tbits: [\"b\", \"Kb\", \"Mb\", \"Gb\", \"Tb\", \"Pb\", \"Eb\", \"Zb\", \"Yb\"],\r\n\t\t\t\tbytes: [\"B\", \"KB\", \"MB\", \"GB\", \"TB\", \"PB\", \"EB\", \"ZB\", \"YB\"]\r\n\t\t\t}\r\n\t\t},\r\n\t\tfullform = {\r\n\t\t\tiec: [\"\", \"kibi\", \"mebi\", \"gibi\", \"tebi\", \"pebi\", \"exbi\", \"zebi\", \"yobi\"],\r\n\t\t\tjedec: [\"\", \"kilo\", \"mega\", \"giga\", \"tera\", \"peta\", \"exa\", \"zetta\", \"yotta\"]\r\n\t\t};\r\n\r\n\t/**\r\n\t * filesize\r\n\t *\r\n\t * @method filesize\r\n\t * @param  {Mixed}   arg        String, Int or Float to transform\r\n\t * @param  {Object}  descriptor [Optional] Flags\r\n\t * @return {String}             Readable file size String\r\n\t */\r\n\tfunction filesize (arg, descriptor = {}) {\r\n\t\tlet result = [],\r\n\t\t\tval = 0,\r\n\t\t\te, base, bits, ceil, full, fullforms, neg, num, output, round, unix, separator, spacer, standard, symbols;\r\n\r\n\t\tif (isNaN(arg)) {\r\n\t\t\tthrow new Error(\"Invalid arguments\");\r\n\t\t}\r\n\r\n\t\tbits = descriptor.bits === true;\r\n\t\tunix = descriptor.unix === true;\r\n\t\tbase = descriptor.base || 2;\r\n\t\tround = descriptor.round !== void 0 ? descriptor.round : unix ? 1 : 2;\r\n\t\tseparator = descriptor.separator !== void 0 ? descriptor.separator || \"\" : \"\";\r\n\t\tspacer = descriptor.spacer !== void 0 ? descriptor.spacer : unix ? \"\" : \" \";\r\n\t\tsymbols = descriptor.symbols || {};\r\n\t\tstandard = base === 2 ? descriptor.standard || \"jedec\" : \"jedec\";\r\n\t\toutput = descriptor.output || \"string\";\r\n\t\tfull = descriptor.fullform === true;\r\n\t\tfullforms = descriptor.fullforms instanceof Array ? descriptor.fullforms : [];\r\n\t\te = descriptor.exponent !== void 0 ? descriptor.exponent : -1;\r\n\t\tnum = Number(arg);\r\n\t\tneg = num < 0;\r\n\t\tceil = base > 2 ? 1000 : 1024;\r\n\r\n\t\t// Flipping a negative number to determine the size\r\n\t\tif (neg) {\r\n\t\t\tnum = -num;\r\n\t\t}\r\n\r\n\t\t// Determining the exponent\r\n\t\tif (e === -1 || isNaN(e)) {\r\n\t\t\te = Math.floor(Math.log(num) / Math.log(ceil));\r\n\r\n\t\t\tif (e < 0) {\r\n\t\t\t\te = 0;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Exceeding supported length, time to reduce & multiply\r\n\t\tif (e > 8) {\r\n\t\t\te = 8;\r\n\t\t}\r\n\r\n\t\t// Zero is now a special case because bytes divide by 1\r\n\t\tif (num === 0) {\r\n\t\t\tresult[0] = 0;\r\n\t\t\tresult[1] = unix ? \"\" : symbol[standard][bits ? \"bits\" : \"bytes\"][e];\r\n\t\t} else {\r\n\t\t\tval = num / (base === 2 ? Math.pow(2, e * 10) : Math.pow(1000, e));\r\n\r\n\t\t\tif (bits) {\r\n\t\t\t\tval = val * 8;\r\n\r\n\t\t\t\tif (val >= ceil && e < 8) {\r\n\t\t\t\t\tval = val / ceil;\r\n\t\t\t\t\te++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tresult[0] = Number(val.toFixed(e > 0 ? round : 0));\r\n\t\t\tresult[1] = base === 10 && e === 1 ? bits ? \"kb\" : \"kB\" : symbol[standard][bits ? \"bits\" : \"bytes\"][e];\r\n\r\n\t\t\tif (unix) {\r\n\t\t\t\tresult[1] = standard === \"jedec\" ? result[1].charAt(0) : e > 0 ? result[1].replace(/B$/, \"\") : result[1];\r\n\r\n\t\t\t\tif (b.test(result[1])) {\r\n\t\t\t\t\tresult[0] = Math.floor(result[0]);\r\n\t\t\t\t\tresult[1] = \"\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Decorating a 'diff'\r\n\t\tif (neg) {\r\n\t\t\tresult[0] = -result[0];\r\n\t\t}\r\n\r\n\t\t// Applying custom symbol\r\n\t\tresult[1] = symbols[result[1]] || result[1];\r\n\r\n\t\t// Returning Array, Object, or String (default)\r\n\t\tif (output === \"array\") {\r\n\t\t\treturn result;\r\n\t\t}\r\n\r\n\t\tif (output === \"exponent\") {\r\n\t\t\treturn e;\r\n\t\t}\r\n\r\n\t\tif (output === \"object\") {\r\n\t\t\treturn {value: result[0], symbol: result[1]};\r\n\t\t}\r\n\r\n\t\tif (full) {\r\n\t\t\tresult[1] = fullforms[e] ? fullforms[e] : fullform[standard][e] + (bits ? \"bit\" : \"byte\") + (result[0] === 1 ? \"\" : \"s\");\r\n\t\t}\r\n\r\n\t\tif (separator.length > 0) {\r\n\t\t\tresult[0] = result[0].toString().replace(\".\", separator);\r\n\t\t}\r\n\r\n\t\treturn result.join(spacer);\r\n\t}\r\n\r\n\t// Partial application for functional programming\r\n\tfilesize.partial = opt => arg => filesize(arg, opt);\r\n\r\n\t// CommonJS, AMD, script tag\r\n\tif (typeof exports !== \"undefined\") {\r\n\t\tmodule.exports = filesize;\r\n\t} else if (typeof define === \"function\" && define.amd !== void 0) {\r\n\t\tdefine(() => filesize);\r\n\t} else {\r\n\t\tglobal.filesize = filesize;\r\n\t}\r\n}(typeof window !== \"undefined\" ? window : global));\r\n"]}