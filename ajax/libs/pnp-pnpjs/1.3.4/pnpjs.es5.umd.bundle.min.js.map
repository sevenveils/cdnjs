{"version":3,"sources":["webpack://pnp/webpack/universalModuleDefinition","webpack://pnp/webpack/bootstrap","webpack://pnp/./build/packages-es5/common/src/adalclient.js","webpack://pnp/./build/packages-es5/common/src/collections.js","webpack://pnp/./build/packages-es5/common/src/libconfig.js","webpack://pnp/./build/packages-es5/common/src/storage.js","webpack://pnp/./build/packages-es5/common/index.js","webpack://pnp/./node_modules/tslib/tslib.es6.js","webpack://pnp/./build/packages-es5/common/src/util.js","webpack://pnp/./build/packages-es5/sp/src/config/splibconfig.js","webpack://pnp/./build/packages-es5/sp/src/utils/toabsoluteurl.js","webpack://pnp/./build/packages-es5/common/src/netutil.js","webpack://pnp/(webpack)/buildin/global.js","webpack://pnp/./node_modules/adal-angular/dist/adal.min.js","webpack://pnp/./build/packages-es5/logging/src/logger.js","webpack://pnp/./build/packages-es5/logging/src/loglevel.js","webpack://pnp/./build/packages-es5/logging/src/listeners.js","webpack://pnp/./build/packages-es5/config-store/src/configuration.js","webpack://pnp/./build/packages-es5/config-store/src/providers/cachingConfigurationProvider.js","webpack://pnp/./build/packages-es5/config-store/src/providers/spListConfigurationProvider.js","webpack://pnp/./build/packages-es5/odata/src/caching.js","webpack://pnp/./build/packages-es5/odata/src/parsers.js","webpack://pnp/./build/packages-es5/odata/src/pipeline.js","webpack://pnp/./build/packages-es5/odata/src/queryable.js","webpack://pnp/./build/packages-es5/odata/src/odatabatch.js","webpack://pnp/./build/packages-es5/graph/src/config/graphlibconfig.js","webpack://pnp/./build/packages-es5/graph/src/net/graphhttpclient.js","webpack://pnp/./build/packages-es5/graph/src/types.js","webpack://pnp/./build/packages-es5/graph/src/graphqueryable.js","webpack://pnp/./build/packages-es5/graph/src/members.js","webpack://pnp/./build/packages-es5/graph/src/groups.js","webpack://pnp/./build/packages-es5/graph/src/calendars.js","webpack://pnp/./build/packages-es5/graph/src/attachments.js","webpack://pnp/./build/packages-es5/graph/src/conversations.js","webpack://pnp/./build/packages-es5/graph/src/planner.js","webpack://pnp/./build/packages-es5/graph/src/photos.js","webpack://pnp/./build/packages-es5/graph/src/teams.js","webpack://pnp/./build/packages-es5/graph/src/directoryobjects.js","webpack://pnp/./build/packages-es5/graph/src/contacts.js","webpack://pnp/./build/packages-es5/graph/src/onenote.js","webpack://pnp/./build/packages-es5/graph/src/onedrive.js","webpack://pnp/./build/packages-es5/graph/src/messages.js","webpack://pnp/./build/packages-es5/graph/src/people.js","webpack://pnp/./build/packages-es5/graph/src/insights.js","webpack://pnp/./build/packages-es5/graph/src/users.js","webpack://pnp/./build/packages-es5/graph/src/batch.js","webpack://pnp/./build/packages-es5/graph/src/invitations.js","webpack://pnp/./build/packages-es5/graph/src/subscriptions.js","webpack://pnp/./build/packages-es5/graph/src/security.js","webpack://pnp/./build/packages-es5/graph/src/sites.js","webpack://pnp/./build/packages-es5/graph/src/rest.js","webpack://pnp/./build/packages-es5/sp-addinhelpers/src/sprequestexecutorclient.js","webpack://pnp/./build/packages-es5/sp/src/utils/extractweburl.js","webpack://pnp/./build/packages-es5/sp/src/odata.js","webpack://pnp/./build/packages-es5/sp/src/net/digestcache.js","webpack://pnp/./build/packages-es5/sp/src/net/sphttpclient.js","webpack://pnp/./build/packages-es5/sp/src/utils/metadata.js","webpack://pnp/./build/packages-es5/sp/src/sharepointqueryable.js","webpack://pnp/./build/packages-es5/sp/src/siteusers.js","webpack://pnp/./build/packages-es5/sp/src/sitegroups.js","webpack://pnp/./build/packages-es5/sp/src/types.js","webpack://pnp/./build/packages-es5/sp/src/roles.js","webpack://pnp/./build/packages-es5/sp/src/sharepointqueryablesecurable.js","webpack://pnp/./build/packages-es5/sp/src/files.js","webpack://pnp/./build/packages-es5/sp/src/sharepointqueryableshareable.js","webpack://pnp/./build/packages-es5/sp/src/webparts.js","webpack://pnp/./build/packages-es5/sp/src/folders.js","webpack://pnp/./build/packages-es5/sp/src/contenttypes.js","webpack://pnp/./build/packages-es5/sp/src/attachmentfiles.js","webpack://pnp/./build/packages-es5/sp/src/views.js","webpack://pnp/./build/packages-es5/sp/src/fields.js","webpack://pnp/./build/packages-es5/sp/src/forms.js","webpack://pnp/./build/packages-es5/sp/src/subscriptions.js","webpack://pnp/./build/packages-es5/sp/src/usercustomactions.js","webpack://pnp/./build/packages-es5/sp/src/lists.js","webpack://pnp/./build/packages-es5/sp/src/comments.js","webpack://pnp/./build/packages-es5/sp/src/items.js","webpack://pnp/./build/packages-es5/sp/src/appcatalog.js","webpack://pnp/./build/packages-es5/sp/src/clientsidepages.js","webpack://pnp/./build/packages-es5/sp/src/batch.js","webpack://pnp/./build/packages-es5/sp/src/features.js","webpack://pnp/./build/packages-es5/sp/src/site.js","webpack://pnp/./build/packages-es5/sp/src/navigation.js","webpack://pnp/./build/packages-es5/sp/src/relateditems.js","webpack://pnp/./build/packages-es5/sp/src/regionalsettings.js","webpack://pnp/./build/packages-es5/sp/src/sitedesigns.js","webpack://pnp/./build/packages-es5/sp/src/sitescripts.js","webpack://pnp/./build/packages-es5/sp/src/webs.js","webpack://pnp/./build/packages-es5/sp/src/search.js","webpack://pnp/./build/packages-es5/sp/src/social.js","webpack://pnp/./build/packages-es5/sp/src/searchsuggest.js","webpack://pnp/./build/packages-es5/sp/src/userprofiles.js","webpack://pnp/./build/packages-es5/sp/src/utilities.js","webpack://pnp/./build/packages-es5/sp/src/hubsites.js","webpack://pnp/./build/packages-es5/sp/src/rest.js","webpack://pnp/./build/packages-es5/sp-addinhelpers/src/sprestaddin.js","webpack://pnp/./build/packages-es5/pnpjs/src/pnpjs.js","webpack://pnp/./build/packages-es5/pnpjs/src/config/pnplibconfig.js","webpack://pnp/./build/packages-es5/pnpjs/index.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","getResource","url","parser","document","createElement","href","protocol","hostname","adalclient_AdalClient","_super","AdalClient","clientId","tenant","redirectUri","_this","this","_displayCallback","_loginPromise","tslib_es6","fromSPFxContext","spfxContext","adalclient_SPFxAdalClient","fetch","options","util","Error","getToken","then","token","resource","Promise","resolve","reject","ensureAuthContext","_","login","_authContext","acquireToken","message","catch","adal_min","displayCall","navigateToLoginRequestUrl","getCachedUser","popupWindow","open","focus","pollTimer","setInterval","closed","undefined","clearInterval","URL","indexOf","handleWindowCallback","location","hash","close","e","_loginInProgress","netutil","SPFxAdalClient","context","aadTokenProviderFactory","getTokenProvider","provider","objectEntries","entries","keys","map","k","objectToMap","Map","mergeMaps","target","maps","_i","arguments","length","forEach","v","set","libconfig_RuntimeConfigImpl","RuntimeConfigImpl","_v","extend","config","configurable","RuntimeConfig","storage_PnPClientStorageWrapper","PnPClientStorageWrapper","store","defaultTimeoutMinutes","enabled","test","enableCacheExpiration","cacheExpirationHandler","getItem","persistable","JSON","parse","Date","expiration","delete","put","expire","setItem","createPersistable","removeItem","getOrPut","deleteExpired","defaultTimeout","defaultCachingTimeoutSeconds","pnp","setTimeout","cacheExpirationIntervalMilliseconds","console","error","MemoryStorage","_store","size","clear","index","Array","from","data","PnPClientStorage","_local","_session","getStore","localStorage","sessionStorage","__webpack_exports__","__extends","__decorate","__awaiter","__generator","extendStatics","b","setPrototypeOf","__proto__","__","constructor","decorators","desc","getOwnPropertyDescriptor","Reflect","decorate","thisArg","_arguments","P","generator","fulfilled","step","next","rejected","result","done","apply","body","f","y","g","label","sent","trys","ops","verb","throw","return","iterator","op","TypeError","pop","push","getCtxCallback","method","params","dateAdd","date","interval","units","ret","toLowerCase","setFullYear","getFullYear","setMonth","getMonth","setDate","getDate","setTime","getTime","combine","paths","filter","path","stringIsNullOrEmpty","replace","join","getRandomString","chars","text","possible","charAt","Math","floor","random","getGUID","now","performance","toString","isFunc","cf","objectDefinedNotNull","obj","isArray","array","source","noOverwrite","check","getOwnPropertyNames","reduce","isUrlAbsolute","getAttrValueFromString","html","attrName","match","RegExp","exec","sanitizeGuid","guid","matches","jsS","stringify","hOP","getHashCode","charCodeAt","setup","SPRuntimeConfig","_pnp_common__WEBPACK_IMPORTED_MODULE_0__","SPRuntimeConfigImpl","spPart","headers","baseUrl","pageContext","web","absoluteUrl","fetchClientFactory","global","toAbsoluteUrl","_config_splibconfig__WEBPACK_IMPORTED_MODULE_1__","candidateUrl","_spPageContextInfo","webAbsoluteUrl","webServerRelativeUrl","baseUrl_1","substr","mergeHeaders","mergeOptions","FetchClient","BearerTokenFetchClient","tslib__WEBPACK_IMPORTED_MODULE_0__","_util__WEBPACK_IMPORTED_MODULE_1__","Request","append","_token","Headers","Function","AuthenticationContext","a","REQUEST_TYPE","LOGIN","RENEW_TOKEN","UNKNOWN","RESPONSE_TYPE","ID_TOKEN_TOKEN","TOKEN","CONSTANTS","ACCESS_TOKEN","EXPIRES_IN","ID_TOKEN","ERROR_DESCRIPTION","SESSION_STATE","ERROR","STORAGE","TOKEN_KEYS","ACCESS_TOKEN_KEY","EXPIRATION_KEY","STATE_LOGIN","STATE_RENEW","NONCE_IDTOKEN","USERNAME","IDTOKEN","LOGIN_REQUEST","LOGIN_ERROR","RENEW_STATUS","ANGULAR_LOGIN_REQUEST","RESOURCE_DELIMETER","CACHE_DELIMETER","LOADFRAME_TIMEOUT","TOKEN_RENEW_STATUS_CANCELED","TOKEN_RENEW_STATUS_COMPLETED","TOKEN_RENEW_STATUS_IN_PROGRESS","LOGGING_LEVEL","WARN","INFO","VERBOSE","LEVEL_STRING_MAP","0","1","2","3","POPUP_WIDTH","POPUP_HEIGHT","_singletonInstance","instance","callback","popUp","isAngular","_user","_activeRenewals","_acquireTokenInProgress","_renewStates","_callBackMappedToRenewStates","_callBacksMappedToRenewStates","_openedWindows","_requestType","_adalInstance","_cloneConfig","loginResource","split","postLogoutRedirectUri","anonymousEndpoints","loadFrameTimeout","Logging","piiLoggingEnabled","level","log","info","_guid","state","_idTokenNonce","_getItem","_saveItem","verbose","_getNavigateUrl","encodeURIComponent","registerCallback","_loginPopup","promptUser","_openPopup","screenLeft","screenX","screenTop","screenY","innerWidth","documentElement","clientWidth","h","innerHeight","clientHeight","j","warn","_handlePopupError","_broadcast","encodeURI","bubbles","cancelable","detail","createEvent","initCustomEvent","CustomEvent","Event","dispatchEvent","loginInProgress","_hasResource","_isEmpty","getCachedToken","expireOffsetSeconds","_now","_createUser","_renewToken","_addAdalFrame","_urlRemoveQueryStringParameter","_addHintParameters","verbosePii","src","_loadFrameTimeout","_renewIdToken","_urlContainsQueryStringParameter","_loadFrame","extraQueryParameter","acquireTokenPopup","acquireTokenRedirect","infoPii","clearCache","clearCacheForResource","logOut","logOutUri","getUser","profile","sid","upn","_extractIdToken","aud","userName","email","_getHash","substring","isCallback","_deserialize","getLoginError","getRequestInfo","valid","parameters","stateMatch","stateResponse","requestType","_matchState","parent","_matchNonce","nonce","_getResourceFromState","saveTokenFromHash","error_description","_expiresIn","exp","getResourceForEndpoint","endpoints","_getHostFromUri","String","opener","_serialize","_addLibMetadata","_decodeJwt","JWSPayload","_base64DecodeStringUrlSafe","atob","decodeURIComponent","escape","_decode","fromCharCode","header","JWSSig","_convertUrlSafeToRegularBase64EncodedString","slice","correlationId","_decimalToHex","crypto","msCrypto","getRandomValues","Uint8Array","parseInt","round","getElementById","opera","navigator","userAgent","setAttribute","style","visibility","position","width","height","borderWidth","getElementsByTagName","appendChild","insertAdjacentHTML","frames","cacheLocation","_supportsLocalStorage","_supportsSessionStorage","_libVersion","toUTCString","stack","errorPii","warnPii","inject","LogLevel","Logger","activeLogLevel","_instance","LoggerImpl","subscribe","listeners","listener","clearSubscribers","count","write","writeJSON","json","entry","err","subscribers","subscriber","ConsoleListener","msg","format","FunctionListener","configuration_Settings","Settings","_settings","add","addJSON","common","load","getConfiguration","getJSON","cachingConfigurationProvider","CachingConfigurationProvider","wrappedProvider","cacheKey","cacheStore","selectPnPCache","getWrappedProvider","providedConfig","pnpCache","local","session","spListConfigurationProvider","SPListConfigurationProvider","listTitle","keyFieldName","valueFieldName","lists","getByTitle","items","select","item","asCaching","toUrl","caching_CachingOptions","CachingOptions","storeName","defaultCachingStore","storage","CachingParserWrapper","cacheOptions","response","cacheData","parsers_HttpRequestError","HttpRequestError","status","statusText","isHttpRequestError","init","clone","parsers_ODataParserBase","ODataParserBase","rawJson","handleError","parseImpl","has","parseFloat","txt","parseODataJSON","ok","results","parsers_ODataDefaultParser","ODataDefaultParser","parsers_TextParser","TextParser","parsers_BlobParser","BlobParser","blob","parsers_JSONParser","JSONParser","parsers_BufferParser","BufferParser","arrayBuffer","buffer","parsers_LambdaParser","LambdaParser","setResult","hasResult","pipeline","shift","pipe","requestId","promise","ctx","returnResult","isBatched","batch","addResolveBatchDependency","requestPipelineMethod","alwaysRun","propertyKey","descriptor","args","pipeline_PipelineMethods","PipelineMethods","logStart","requestAbsoluteUrl","caching","isCached","cachingOptions","batchDependency","hydrate","send","batchId","client","clientFactory","opts","logEnd","getDefaultPipeline","queryable_Queryable","Queryable","_query","_options","_url","_parentUrl","_useCaching","_cachingOptions","_cloneParentWasCaching","_cloneParentCacheOptions","_requestPipeline","concat","pathPart","configure","configureFrom","usingCaching","globalCacheDisable","withPipeline","getCore","reqImpl","postCore","patchCore","deleteCore","putCore","getRequestPipeline","toRequestContext","_clone","_0","queryable_ODataQueryable","ODataQueryable","_batch","_batchDependency","inBatch","hasBatch","addBatchDependency","addDependency","cloneSettings","includeBatch","odatabatch_ODataBatch","ODataBatch","_batchId","_reqs","_deps","_rDeps","id","toUpperCase","resolver","execute","all","executeImpl","GraphRuntimeConfig","GraphRuntimeConfigImpl","graphPart","graphhttpclient_GraphHttpClient","GraphHttpClient","_impl","fetchRaw","rawHeaders","retry","delay","attempts","retryCount","retryContext","post","patch","GraphEndpoints","ensure","endpoint","Beta","V1","regex","replaces","graphqueryable_GraphQueryable","GraphQueryable","urlStr","selects","query","expand","expands","as","toUrlAndQuery","char","setEndpoint","getParent","parentUrl","additionalPath","dependencyDispose","graphqueryable_GraphQueryableCollection","GraphQueryableCollection","orderBy","ascending","top","skip","num","skipToken","graphqueryable_GraphQueryableSearchableCollection","GraphQueryableSearchableCollection","search","graphqueryable_GraphQueryableInstance","GraphQueryableInstance","defaultPath","class_1","GroupType","members_Members","Members","Members_1","@odata.id","getById","members_Member","Member","remove","members_Owners","Owners","calendars_Calendar","Calendars","Calendar","calendars_Events","Events","calendars_Event","properties","event","update","attachments_Attachments","Attachments","attachments_Attachment","addFile","bytes","@odata.type","contentBytes","Attachment","conversations_Conversations","Conversations","conversations_Conversation","conversations_Threads","Threads","conversations_Thread","conversations_Posts","Posts","conversations_Post","Conversation","Thread","reply","Post","forward","conversations_Senders","Senders","remover","planner_Planner","Planner","planner_Plans","planner_Tasks","planner_Buckets","Plans","planner_Plan","owner","title","postBody","plan","Plan","planner_Details","Tasks","planner_Task","planId","assignments","bucketId","task","Task","Buckets","orderHint","bucket","planner_Bucket","Bucket","Details","photos_Photo","Photo","Photo_1","getBlob","getBuffer","setContent","content","teams_Teams","Teams","description","ownerId","teamProperties","groupProps","owners@odata.bind","graph","groups","Office365","gar","group","createTeam","team","teams_Team","Team","Team_1","teams_Channels","teams_Apps","archive","shouldSetSpoSiteReadOnlyForMembers","unarchive","cloneTeam","partsToClone","displayName","mailNickname","Channels","channel","teams_Channel","Channel","teams_Tabs","Apps","appUrl","teamsApp@odata.bind","Tabs","tab","teams_Tab","Tab","Tab_1","DirectoryObjectType","groups_Groups","Groups","groups_Group","groupType","additionalProperties","mailEnabled","securityEnabled","Security","groupTypes","Group","addFavorite","getMemberObjects","securityEnabledOnly","getMemberGroups","checkMemberGroups","groupIds","removeFavorite","resetUnseenCount","subscribeByMail","unsubscribeByMail","getCalendarView","start","end","view","toISOString","contacts_Contacts","Contacts","contacts_Contact","givenName","surName","emailAddresses","businessPhones","contact","Contact","contacts_ContactFolders","ContactFolders","contacts_ContactFolder","parentFolderId","contactFolder","ContactFolder","onenote_OneNote","OneNote","onenote_Notebooks","onenote_Sections","onenote_Pages","Notebooks","onenote_Notebook","notebook","Notebook","Sections","onenote_Section","section","Section","Pages","onedrive_Drives","Drives","onedrive_Drive","Drive","onedrive_Root","onedrive_DriveItems","onedrive_DriveList","onedrive_Recent","onedrive_SharedWithMe","Root","onedrive_Children","onedrive_DriveSearch","DriveItems","onedrive_DriveItem","DriveItem","onedrive_Thumbnails","move","parentReference","patchBody","Children","driveItemType","driveItem","DriveList","Recent","SharedWithMe","DriveSearch","Thumbnails","messages_Messages","Messages","messages_Message","Message","messages_MailFolders","MailFolders","messages_MailFolder","mailFolder","MailFolder","messages_MailboxSettings","MailboxSettings","settings","directoryobjects_DirectoryObjects","DirectoryObjects","DirectoryObjects_1","directoryobjects_DirectoryObject","getByIds","ids","type","directoryObject","DirectoryObject","people_People","People","insights_Insights","Insights","insights_Trending","insights_Used","insights_Shared","Trending","Used","Shared","users_Users","Users","users_User","User","sendMail","batch_GraphBatch","GraphBatch","batchUrl","maxRequests","makeUrlRelative","formatRequests","requests","reqInfo","requestFragment","parseResponse","graphResponse","parsedResponses","fill","responses","responseId","Response","nextLink","_loop_1","requestsChunk","splice","this_1","batchRequest","batchOptions","Accept","Content-Type","parsedResponse","chain","request","invitations_Invitations","Invitations","invitedUserEmailAddress","inviteRedirectUrl","subscriptions_Subscriptions","Subscriptions","subscriptions_Subscription","changeType","notificationUrl","expirationDateTime","subscription","Subscription","security_Security","security_Alerts","Alerts","security_Alert","Alert","sites_Sites","Sites","sites_GraphSite","relativeUrl","siteUrl","_urlCombine","lastIndexOf","GraphSite","sites_GraphColumns","sites_GraphContentTypes","sites_GraphLists","GraphContentTypes","sites_GraphContentType","GraphContentType","GraphColumns","sites_GraphColumn","GraphColumn","sites_GraphColumnLinks","GraphColumnLinks","sites_GraphColumnLink","GraphColumnLink","GraphLists","sites_GraphList","list","GraphList","sites_GraphItems","GraphItems","sites_GraphItem","fields","GraphItem","sites_GraphFields","sites_GraphVersions","GraphFields","GraphVersions","sites_Version","Version","rest_GraphRest","GraphRest","createBatch","SPRequestExecutorClient","convertToResponse","spResponse","responseHeaders","statusCode","SP","RequestExecutor","temp","addinWebUrl","executor","requestOptions","success","binaryStringRequestBody","executeAsync","extractWebUrl","odataUrlFrom","candidate","parts","__metadata","uri","odata_SPODataEntityParserImpl","SPODataEntityParserImpl","odata_SPODataEntityArrayParserImpl","SPODataEntityArrayParserImpl","spODataEntity","spODataEntityArray","CachedDigest","digests","digestcache_DigestCache","DigestCache","_httpClient","_digests","getDigest","webUrl","cachedDigest","cache","credentials","splibconfig","GetContextWebInformation","newCachedDigest","FormDigestValue","seconds","FormDigestTimeoutSeconds","sphttpclient_SPHttpClient","SPHttpClient","_digestCache","digest","setRetry","metadata","sharepointqueryable_SharePointQueryable","SharePointQueryable","_forceCaching","aliasedParams","labelName","toabsoluteurl","sharepointqueryable_SharePointQueryableCollection","SharePointQueryableCollection","sharepointqueryable_SharePointQueryableInstance","SharePointQueryableInstance","_update","mapper","props","X-HTTP-Method","_delete","_deleteWithETag","eTag","IF-Match","sharepointqueryable_defaultPath","PrincipalType","siteusers_SiteUsers","SiteUsers","SiteUsers_1","siteusers_SiteUser","getByEmail","getByLoginName","loginName","su","removeById","removeByLoginName","LoginName","siteusers_UserBase","UserBase","sitegroups_SiteGroups","SiteUser","user","siteusers_CurrentUser","CurrentUser","ControlMode","FieldTypes","DateTimeFieldFormatType","DateTimeFieldFriendlyFormatType","AddFieldOptions","CalendarType","UrlFieldFormatType","PermissionKind","types_PrincipalType","PrincipalSource","RoleType","PageType","SharingLinkKind","SharingRole","SharingOperationStatusCode","SPSharedObjectType","SharingDomainRestrictionMode","RenderListDataOptions","FieldUserSelectionMode","ChoiceFieldFormatType","UrlZone","SiteGroups","SiteGroups_1","sg","sitegroups_SiteGroup","Id","getByName","groupName","SiteGroup","retGroup","roles_RoleAssignments","RoleAssignments","RoleAssignments_1","ra","roles_RoleAssignment","principalId","roleDefId","RoleAssignment","roles_RoleDefinitionBindings","roles_RoleDefinitions","RoleDefinitions","roles_RoleDefinition","getByType","roleTypeKind","order","basePermissions","BasePermissions","High","Low","Description","Name","Order","definition","RoleDefinition","retDef","RoleDefinitionBindings","CheckinType","WebPartsPersonalizationScope","MoveOperations","TemplateFileType","sharepointqueryablesecurable_SharePointQueryableSecurable","SharePointQueryableSecurable","getUserEffectivePermissions","q","GetUserEffectivePermissions","getCurrentUserEffectivePermissions","breakRoleInheritance","copyRoleAssignments","clearSubscopes","resetRoleInheritance","userHasPermissions","permission","perms","hasPermissions","currentUserHasPermissions","perm","FullMask","sharepointqueryableshareable_SharePointQueryableShareable","SharePointQueryableShareable","getShareLink","kind","expString","createLink","emailData","linkKind","shareWith","loginNames","role","requireSignin","propagateAcl","userStr","Key","roleFilter","Edit","Contributor","Reader","def","includeAnonymousLinkInEmail","peoplePickerInput","roleValue","useSimplifiedRoles","emailBody","emailSubject","subject","sendEmail","shareObject","bypass","sendShareObjectRequest","getRoleValue","unshareObjectWeb","checkPermissions","recipients","getSharingInformation","getObjectSharingSettings","unshareObject","deleteLinkByKind","unshareLink","shareId","Guest","getShareObjectWeb","sharepointqueryableshareable_SharePointQueryableShareableWeb","SharePointQueryableShareableWeb","View","dependency","shareObjectRaw","sharepointqueryableshareable_SharePointQueryableShareableItem","SharePointQueryableShareableItem","OrganizationView","checkSharingPermissions","unshare","deleteSharingLinkByKind","sharepointqueryableshareable_FileFolderShared","FileFolderShared","getShareable","shareable","sharepointqueryableshareable_SharePointQueryableShareableFile","SharePointQueryableShareableFile","sharepointqueryableshareable_SharePointQueryableShareableFolder","SharePointQueryableShareableFolder","shareEverything","webparts_LimitedWebPartManager","LimitedWebPartManager","webparts_WebPartDefinitions","export","webPartId","import","xml","webPartXml","WebPartDefinitions","webparts_WebPartDefinition","getByControlId","WebPartDefinition","webparts_WebPart","saveChanges","moveTo","zoneId","zoneIndex","WebPart","folders_Folders","Folders","Folders_1","folders_Folder","folder","Folder","files_Files","recycle","listItemAllFields","items_Item","destUrl","_a","srcUrl","ServerRelativeUrl","webBaseUrl","hostUrl","methodUrl","contenttypes_ContentTypes","ContentTypes","ContentTypes_1","addAvailableContentType","contentTypeId","contentType","ct","contenttypes_ContentType","additionalSettings","assign","StringValue","ContentType","contenttypes_FieldLinks","FieldLinks","fl","contenttypes_FieldLink","FieldLink","attachmentfiles_AttachmentFiles","AttachmentFiles","AttachmentFiles_1","attachmentfiles_AttachmentFile","file","addMultiple","files","deleteMultiple","recycleMultiple","AttachmentFile","getText","getParsed","views_Views","Views","Views_1","views_View","personalView","PersonalView","Title","views_ViewFields","renderAsHtml","setViewXml","viewXml","ViewFields","ViewFields_1","getSchemaXml","fieldTitleOrInternalName","fieldInternalName","field","removeAll","fields_Fields","Fields","Fields_1","fields_Field","getByInternalNameOrTitle","createFieldAsXml","SchemaXml","fieldType","addText","maxLength","FieldTypeKind","MaxLength","addCalculated","formula","dateFormat","outputType","Text","DateFormat","Formula","OutputType","addDateTime","displayFormat","calendarType","friendlyDisplayFormat","DateOnly","Gregorian","Unspecified","DateTimeCalendarType","DisplayFormat","FriendlyDisplayFormat","addNumber","minValue","maxValue","MinimumValue","MaximumValue","addCurrency","currencyLocalId","CurrencyLocaleId","addMultilineText","numberOfLines","richText","restrictedMode","appendOnly","allowHyperlink","AllowHyperlink","AppendOnly","NumberOfLines","RestrictedMode","RichText","addUrl","Hyperlink","addUser","selectionMode","SelectionMode","addLookup","lookupListId","lookupFieldName","LookupFieldName","LookupListId","addChoice","choices","fillIn","Dropdown","Choices","EditFormat","FillInChoice","addMultiChoice","addBoolean","addDependentLookupField","primaryLookupFieldId","showField","addLocation","Field","setShowInDisplayForm","show","setShowInEditForm","setShowInNewForm","forms_Forms","Forms","forms_Form","Form","src_subscriptions_Subscriptions","subscriptionId","src_subscriptions_Subscription","expirationDate","clientState","usercustomactions_UserCustomActions","UserCustomActions","UserCustomActions_1","uca","usercustomactions_UserCustomAction","action","UserCustomAction","lists_Lists","Lists","Lists_1","lists_List","template","enableContentTypes","addSettings","AllowContentTypes","BaseTemplate","ContentTypesEnabled","addOrUpdateSettings","created","ensureSiteAssetsLibrary","ensureSitePagesLibrary","List","items_Items","getView","viewId","retList","getChanges","getItemsByCAMLQuery","getListItemChangesSinceToken","Recycle","renderListData","RenderListData","renderListDataAsStream","overrideParameters","renderListFormData","itemId","formId","RenderListFormData","reserveListItemId","ReserveListItemId","getListItemEntityTypeFullName","ListItemEntityTypeFullName","addValidateUpdateItemUsingPath","formValues","decodedUrl","bNewDocumentUpdate","checkInComment","listItemCreateInfo","FolderPath","DecodedUrl","res","AddValidateUpdateItemUsingPath","getSiteScript","rootFolder","absoluteListUrl","sitescripts_SiteScripts","getSiteScriptFromList","comments_Comments","Comments","Comments_1","comments_Comment","Comment","comments_Replies","like","unlike","Replies","Replies_1","Items","Items_1","getItemByStringId","stringId","reverse","getPaged","items_PagedItemCollectionParser","getAll","requestSize","acceptHeader","itemsCollector","gatherer","last","hasNext","getNext","listItemEntityTypeFullName","removeDependency","ensureListItemEntityTypeName","listItemEntityType","candidatelistItemEntityTypeFullName","Item","files_File","items_ItemVersions","items_ItemUpdatedParser","getLikedBy","getWopiFrameUrl","GetWOPIFrameUrl","validateUpdateListItem","newDocumentUpdate","getLikedByInformation","ItemVersions","versionId","items_ItemVersion","ItemVersion","PagedItemCollection","nextUrl","innerParser","PagedItemCollectionParser","_parent","__next","ItemUpdatedParser","odata.etag","Files","Files_1","shouldOverWrite","addChunked","progress","chunkSize","setContentChunked","addTemplateFile","fileUrl","templateFileType","File","files_Versions","approve","comment","cancelUpload","uploadId","checkin","checkinType","Major","checkout","copyTo","deny","getLimitedWebPartManager","scope","moveOperations","Overwrite","publish","undoCheckout","unpublish","binaryStringResponseBody","fileSize","blockCount","blockNumber","currentPointer","stage","totalBlocks","startUpload","pointer","continueUpload","finishUpload","fragment","StartUpload","fileOffset","ContinueUpload","Versions","Versions_1","files_Version","deleteAll","deleteById","recycleByID","deleteByLabel","recycleByLabel","restoreByLabel","PromotedState","appcatalog_AppCatalog","AppCatalog","getAppById","appcatalog_App","filename","catalog","App","deploy","skipFeatureDeployment","retract","install","uninstall","upgrade","batch_SPBatch","SPBatch","ParseResponse","statusRegExp","lines","line","trim","absoluteRequestUrl","batchBody","currentChangeSetId","castHeaders","features_Features","Features","Features_1","force","featdefScope","featureId","feature","features_Feature","Feature","deactivate","DefinitionId","site_Site","Site","Site_1","webs_Web","getRootWeb","rootWeb","Url","getContextInfo","SupportedSchemaVersions","getDocumentLibraries","absoluteWebUrl","GetDocumentLibraries","getWebUrlFromPageUrl","absolutePageUrl","GetWebUrlFromPageUrl","site","siteId","openWebById","webId","fromUrl","joinHubSite","registerHubSite","unRegisterHubSite","createCommunicationSite","lcid","shareByEmailEnabled","classification","siteDesignId","hubSiteId","Classification","HubSiteId","Lcid","Owner","ShareByEmailEnabled","SiteDesignId","WebTemplate","WebTemplateExtensionId","createModernTeamSite","alias","isPublic","owners","optionalParams","CreationOptions","navigation_NavigationNodes","NavigationNodes","node","navigation_NavigationNode","visible","IsVisible","moveAfter","nodeId","previousNodeId","NavigationNode","navigation_Navigation","Navigation","navigation_NavigationService","NavigationService","getMenuState","menuNodeKey","depth","mapProviderName","customProperties","getMenuNodeKey","currentUrl","relateditems_RelatedItemManagerImpl","RelatedItemManagerImpl","RelatedItemManagerImpl_1","FromUrl","getRelatedItems","sourceListName","sourceItemId","SourceItemID","SourceListName","getPageOneRelatedItems","addSingleLink","sourceWebUrl","targetListName","targetItemID","targetWebUrl","tryAddReverseLink","SourceWebUrl","TargetItemID","TargetListName","TargetWebUrl","TryAddReverseLink","addSingleLinkToUrl","targetItemUrl","TargetItemUrl","addSingleLinkFromUrl","sourceItemUrl","targetItemId","SourceItemUrl","deleteSingleLink","tryDeleteReverseLink","TryDeleteReverseLink","regionalsettings_RegionalSettings","RegionalSettings","regionalsettings_InstalledLanguages","regionalsettings_TimeZone","regionalsettings_TimeZones","InstalledLanguages","TimeZone","TimeZone_1","utcToLocalTime","utcTime","dateIsoString","UTCToLocalTime","localTimeToUTC","localTime","getTimezoneOffset","LocalTimeToUTC","TimeZones","TimeZones_1","sitedesigns_SiteDesigns","SiteDesigns","methodName","getBaseUrl","createSiteDesign","creationInfo","applySiteDesign","getSiteDesigns","getSiteDesignMetadata","updateSiteDesign","updateInfo","deleteSiteDesign","getSiteDesignRights","grantSiteDesignRights","principalNames","grantedRights","revokeSiteDesignRights","addSiteDesignTask","addSiteDesignTaskToCurrentWeb","getSiteDesignTask","taskId","getSiteDesignRun","getSiteDesignRunStatus","runId","SiteScripts","getSiteScripts","createSiteScript","getSiteScriptMetadata","deleteSiteScript","updateSiteScript","siteScriptUpdateInfo","Content","listUrl","getSiteScriptFromWeb","extractInfo","webs_Webs","Webs","Webs_1","language","inheritPermissions","Language","UseSamePermissionsAsParentSite","webs_WebInfos","WebInfos","Web","Web_1","getParentWeb","ParentWeb","getSubwebsFilteredForCurrentUser","nWebTemplateFilter","nConfigurationFilter","getFolderById","uniqueId","getFolderByServerRelativeUrl","folderRelativeUrl","getFolderByServerRelativePath","getFileById","getFileByServerRelativeUrl","fileRelativeUrl","getFileByServerRelativePath","getList","listRelativeUrl","applyTheme","colorPaletteUrl","fontSchemeUrl","backgroundImageUrl","shareGenerated","applyWebTemplate","ensureUser","logonName","availableWebTemplates","includeCrossLanugage","getCatalog","getUserById","mapToIcon","progId","getStorageEntity","setStorageEntity","comments","removeStorageEntity","getAppCatalog","getSiteCollectionAppCatalog","getClientSideWebParts","addClientSidePage","pageName","clientsidepages_ClientSidePage","addClientSidePageByPath","createDefaultAssociatedGroups","siteOwner","siteOwner2","groupNameSeed","hubSiteData","forceRefresh","syncHubSiteTheme","getSiteDesignRuns","getNextOrder","collection","max","reindex","columns","controls","ClientSidePage","noInit","sections","commentsDisabled","_bannerImageDirty","initFrom","_pageSettings","controlType","pageSettingsSlice","isDefaultDescription","isDefaultThumbnail","_layoutPart","getDefaultLayoutPart","fromJSON","pageLayoutType","pageInitData","newPage","PageLayoutType","save","fromFile","dataVersion","instanceId","authors","layoutType","showPublishDate","showTopicHeader","textAlignment","topicHeader","serverProcessedContent","htmlStrings","searchablePlainTexts","imageSources","links","BannerImageUrl","imageSourceType","TopicHeader","addSection","clientsidepages_CanvasSection","pageData","canvasControls","CanvasContent1","layouts","LayoutWebpartsContent","setControls","CommentsDisabled","origImgUrl","imgFile","imgId","listId","UniqueId","ParentList","bannerImageUrl","imageSource","customMetadata","IsPageCheckedOutToCurrentUser","saveBody","AuthorByline","getCanvasContent1","getLayoutWebpartsContent","updater","if-match","discardPageCheckout","promoteToNews","promoteNewsImpl","enableComments","setCommentsOn","disableComments","findControlById","findControl","predicate","copyPage","page","pageLayout","getControls","setBannerImage","bannerImageSourceType","translateX","translateY","altText","mergeColumnToTree","clientsidepages_CanvasColumn","part","clientsidepages_ClientSideWebpart","mergePartToTree","textData","clientsidepages_ClientSideText","innerHTML","canvasData","column","displayMode","emphasis","getEmphasisObj","control","zoneEmphasis","on","positionData","sectionFactor","sectionIndex","addColumn","addControl","initer","listData","CanvasSection","_emphasis","_memId","_order","factor","defaultColumn","CanvasColumn","Default","_section","getControl","layoutIndex","ColumnControl","_column","onColumnChange","setData","ClientSideText","anchorComponentId","startsWith","controlIndex","col","addedFromPersistedData","editorType","ClientSideWebpart","fromComponentDef","webPartData","reservedHeight","reservedWidth","setProperties","getProperties","component","componendId","preconfiguredEntries","Manifest","default","funcs","search_props","toPropCase","str","$1","SearchQueryBuilder","queryText","Proxy","Querytext","self","proxy","pk","mappedPk","propKey","SortDirection","ReorderingRuleMatchType","QueryPropertyValueType","search_Search","Search","queryInit","parseQuery","HitHighlightedProperties","fixArrProp","Properties","RefinementFilters","ReorderingRules","SelectProperties","SortList","search_SearchResults","prop","toSearchQuery","SearchResults","rawResponse","_raw","_primary","postquery","RawSearchResults","ElapsedTime","PrimaryQueryResult","RelevantResults","RowCount","TotalRows","TotalRowsIncludingDuplicates","formatSearchResults","Table","Rows","getPage","pageNumber","pageSize","rows","RowLimit","StartRow","rawResults","tempResults_1","tempResult","cells","Cells","cell","Value","writable","SocialActorType","SocialActorTypes","SocialFollowResult","SocialStatusCode","SearchBuiltInSourceId","Documents","ItemsMatchingContentType","ItemsMatchingTag","ItemsRelatedToCurrentUser","ItemsWithSameKeywordAsThisItem","LocalPeopleResults","LocalReportsAndDataResults","LocalSharePointResults","LocalVideoResults","Pictures","Popular","RecentlyChangedItems","RecommendedItems","Wiki","searchsuggest_SearchSuggest","SearchSuggest","mapQueryToQueryString","suggest","PeopleNames","PersonalResults","Queries","querytext","querySetter","checkProp","sp","userprofiles_UserProfileQuery","UserProfileQuery","clientPeoplePickerQuery","userprofiles_ClientPeoplePickerQuery","profileLoader","userprofiles_ProfileLoader","amIFollowedBy","amIFollowing","getFollowedTags","maxCount","getFollowersFor","getPeopleFollowedBy","getPropertiesFor","getUserProfilePropertyFor","propertyName","hideSuggestion","isFollowing","follower","followee","setMyProfilePic","profilePicSource","reader","FileReader","onload","readAsArrayBuffer","Uint16Array","setSingleValueProfileProperty","accountName","propertyValue","setMultiValuedProfileProperty","propertyValues","createPersonalSiteEnqueueBulk","emails","ownerUserProfile","userProfile","createPersonalSite","interactiveRequest","shareAllSocialData","share","clientPeoplePickerResolveUser","queryParams","clientPeoplePickerSearchUser","ProfileLoader","ProfileLoader_1","emailIDs","ClientPeoplePickerQuery","ClientPeoplePickerQuery_1","createClientPeoplePickerQueryParametersRequestBody","ClientPeoplePickerResolveUser","ClientPeoplePickerSearchUser","social_SocialQuery","SocialQuery","SocialQuery_1","social_MySocialQuery","getFollowedSitesUri","FollowedSitesUri","getFollowedDocumentsUri","FollowedDocumentsUri","follow","actorInfo","createSocialActorInfoRequestBody","isFollowed","stopFollowing","actor","MySocialQuery","MySocialQuery_1","followed","types","Followed","followedCount","FollowedCount","followers","Followers","suggestions","Suggestions","utilities_UtilityMethod","UtilityMethod","excute","Body","From","Subject","To","CC","BCC","AdditionalHeaders","getCurrentUserEmailAddresses","GetCurrentUserEmailAddresses","resolvePrincipal","input","scopes","sources","inputIsEmailOnly","addToUserInfoList","matchUserInfoList","ResolvePrincipalInCurrentContext","searchPrincipals","SearchPrincipalsUsingContextWeb","createEmailBodyForInvitation","pageAddress","CreateEmailBodyForInvitation","expandGroupsToPrincipals","inputs","ExpandGroupsToPrincipals","createWikiPage","CreateWikiPageInContextWeb","containsInvalidFileFolderChars","onPremise","InvalidFileFolderNameCharsOnPremiseRegex","InvalidFileFolderNameCharsOnlineRegex","stripInvalidFileFolderChars","replacer","hubsites_HubSites","HubSites","hubsites_HubSite","HubSite","rest_SPRest","SPRest","_baseUrl","searchSuggest","finalQuery","searchWithCaching","getTenantAppCatalogWeb","CorporateCatalogUrl","fm","sprestaddin_sp","SPRestAddIn","crossDomainSite","addInWebUrl","hostWebUrl","_cdImpl","crossDomainWeb","urlPart","pnpjs_sp","pnpjs_graph","pnpjs_config","pnpjs_setup","pnpjs"],"mappings":"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","file":"pnpjs.es5.umd.bundle.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"pnp\"] = factory();\n\telse\n\t\troot[\"pnp\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 8);\n","import * as tslib_1 from \"tslib\";\r\nimport { BearerTokenFetchClient } from \"./netutil\";\r\nimport { isUrlAbsolute } from \"./util\";\r\n// @ts-ignore\r\nimport * as adal from \"adal-angular/dist/adal.min.js\";\r\n/**\r\n * Parses out the root of the request url to use as the resource when getting the token\r\n *\r\n * After: https://gist.github.com/jlong/2428561\r\n * @param url The url to parse\r\n */\r\nfunction getResource(url) {\r\n    var parser = document.createElement(\"a\");\r\n    parser.href = url;\r\n    return parser.protocol + \"//\" + parser.hostname;\r\n}\r\n/**\r\n * Azure AD Client for use in the browser\r\n */\r\nvar AdalClient = /** @class */ (function (_super) {\r\n    tslib_1.__extends(AdalClient, _super);\r\n    /**\r\n     * Creates a new instance of AdalClient\r\n     * @param clientId Azure App Id\r\n     * @param tenant Office 365 tenant (Ex: {tenant}.onmicrosoft.com)\r\n     * @param redirectUri The redirect url used to authenticate the\r\n     */\r\n    function AdalClient(clientId, tenant, redirectUri) {\r\n        var _this = _super.call(this, null) || this;\r\n        _this.clientId = clientId;\r\n        _this.tenant = tenant;\r\n        _this.redirectUri = redirectUri;\r\n        _this._displayCallback = null;\r\n        _this._loginPromise = null;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Creates a new AdalClient using the values of the supplied SPFx context (requires SPFx >= 1.6)\r\n     *\r\n     * @param spfxContext Current SPFx context\r\n     * @description Using this method requires that the features described in this article\r\n     * https://docs.microsoft.com/en-us/sharepoint/dev/spfx/use-aadhttpclient are activated in the tenant.\r\n     */\r\n    AdalClient.fromSPFxContext = function (spfxContext) {\r\n        return new SPFxAdalClient(spfxContext);\r\n    };\r\n    /**\r\n     * Conducts the fetch opertation against the AAD secured resource\r\n     *\r\n     * @param url Absolute URL for the request\r\n     * @param options Any fetch options passed to the underlying fetch implementation\r\n     */\r\n    AdalClient.prototype.fetch = function (url, options) {\r\n        var _this = this;\r\n        if (!isUrlAbsolute(url)) {\r\n            throw Error(\"You must supply absolute urls to AdalClient.fetch.\");\r\n        }\r\n        // the url we are calling is the resource\r\n        return this.getToken(getResource(url)).then(function (token) {\r\n            _this.token = token;\r\n            return _super.prototype.fetch.call(_this, url, options);\r\n        });\r\n    };\r\n    /**\r\n     * Gets a token based on the current user\r\n     *\r\n     * @param resource The resource for which we are requesting a token\r\n     */\r\n    AdalClient.prototype.getToken = function (resource) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            _this.ensureAuthContext().then(function (_) { return _this.login(); }).then(function (_) {\r\n                AdalClient._authContext.acquireToken(resource, function (message, token) {\r\n                    if (message) {\r\n                        return reject(Error(message));\r\n                    }\r\n                    resolve(token);\r\n                });\r\n            }).catch(reject);\r\n        });\r\n    };\r\n    /**\r\n     * Ensures we have created and setup the adal AuthenticationContext instance\r\n     */\r\n    AdalClient.prototype.ensureAuthContext = function () {\r\n        var _this = this;\r\n        return new Promise(function (resolve) {\r\n            if (AdalClient._authContext === null) {\r\n                AdalClient._authContext = adal.inject({\r\n                    clientId: _this.clientId,\r\n                    displayCall: function (url) {\r\n                        if (_this._displayCallback) {\r\n                            _this._displayCallback(url);\r\n                        }\r\n                    },\r\n                    navigateToLoginRequestUrl: false,\r\n                    redirectUri: _this.redirectUri,\r\n                    tenant: _this.tenant,\r\n                });\r\n            }\r\n            resolve();\r\n        });\r\n    };\r\n    /**\r\n     * Ensures the current user is logged in\r\n     */\r\n    AdalClient.prototype.login = function () {\r\n        var _this = this;\r\n        if (this._loginPromise) {\r\n            return this._loginPromise;\r\n        }\r\n        this._loginPromise = new Promise(function (resolve, reject) {\r\n            if (AdalClient._authContext.getCachedUser()) {\r\n                return resolve();\r\n            }\r\n            _this._displayCallback = function (url) {\r\n                var popupWindow = window.open(url, \"login\", \"width=483, height=600\");\r\n                if (!popupWindow) {\r\n                    return reject(Error(\"Could not open pop-up window for auth. Likely pop-ups are blocked by the browser.\"));\r\n                }\r\n                if (popupWindow && popupWindow.focus) {\r\n                    popupWindow.focus();\r\n                }\r\n                var pollTimer = window.setInterval(function () {\r\n                    if (!popupWindow || popupWindow.closed || popupWindow.closed === undefined) {\r\n                        window.clearInterval(pollTimer);\r\n                    }\r\n                    try {\r\n                        if (popupWindow.document.URL.indexOf(_this.redirectUri) !== -1) {\r\n                            window.clearInterval(pollTimer);\r\n                            AdalClient._authContext.handleWindowCallback(popupWindow.location.hash);\r\n                            popupWindow.close();\r\n                            resolve();\r\n                        }\r\n                    }\r\n                    catch (e) {\r\n                        reject(e);\r\n                    }\r\n                }, 30);\r\n            };\r\n            // this triggers the login process\r\n            _this.ensureAuthContext().then(function (_) {\r\n                AdalClient._authContext._loginInProgress = false;\r\n                AdalClient._authContext.login();\r\n                _this._displayCallback = null;\r\n            });\r\n        });\r\n        return this._loginPromise;\r\n    };\r\n    /**\r\n     * Our auth context\r\n     */\r\n    AdalClient._authContext = null;\r\n    return AdalClient;\r\n}(BearerTokenFetchClient));\r\nexport { AdalClient };\r\n/**\r\n * Client wrapping the aadTokenProvider available from SPFx >= 1.6\r\n */\r\nvar SPFxAdalClient = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SPFxAdalClient, _super);\r\n    /**\r\n     *\r\n     * @param context provide the appropriate SPFx Context object\r\n     */\r\n    function SPFxAdalClient(context) {\r\n        var _this = _super.call(this, null) || this;\r\n        _this.context = context;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Executes a fetch request using the supplied url and options\r\n     *\r\n     * @param url Absolute url of the request\r\n     * @param options Any options\r\n     */\r\n    SPFxAdalClient.prototype.fetch = function (url, options) {\r\n        var _this = this;\r\n        return this.getToken(getResource(url)).then(function (token) {\r\n            _this.token = token;\r\n            return _super.prototype.fetch.call(_this, url, options);\r\n        });\r\n    };\r\n    /**\r\n     * Gets an AAD token for the provided resource using the SPFx AADTokenProvider\r\n     *\r\n     * @param resource Resource for which a token is to be requested (ex: https://graph.microsoft.com)\r\n     */\r\n    SPFxAdalClient.prototype.getToken = function (resource) {\r\n        return this.context.aadTokenProviderFactory.getTokenProvider().then(function (provider) {\r\n            return provider.getToken(resource);\r\n        });\r\n    };\r\n    return SPFxAdalClient;\r\n}(BearerTokenFetchClient));\r\nexport { SPFxAdalClient };\r\n//# sourceMappingURL=adalclient.js.map","import { isFunc } from \"./util\";\r\n/**\r\n * Used to calculate the object properties, with polyfill if needed\r\n */\r\nvar objectEntries = isFunc(Object.entries) ? Object.entries : function (o) { return Object.keys(o).map(function (k) { return [k, o[k]]; }); };\r\n/**\r\n * Converts the supplied object to a map\r\n *\r\n * @param o The object to map\r\n */\r\nexport function objectToMap(o) {\r\n    if (o !== undefined && o !== null) {\r\n        return new Map(objectEntries(o));\r\n    }\r\n    return new Map();\r\n}\r\n/**\r\n * Merges to Map instances together, overwriting values in target with matching keys, last in wins\r\n *\r\n * @param target map into which the other maps are merged\r\n * @param maps One or more maps to merge into the target\r\n */\r\nexport function mergeMaps(target) {\r\n    var maps = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        maps[_i - 1] = arguments[_i];\r\n    }\r\n    for (var i = 0; i < maps.length; i++) {\r\n        maps[i].forEach(function (v, k) {\r\n            target.set(k, v);\r\n        });\r\n    }\r\n    return target;\r\n}\r\n//# sourceMappingURL=collections.js.map","import { mergeMaps, objectToMap } from \"./collections\";\r\nexport function setup(config) {\r\n    RuntimeConfig.extend(config);\r\n}\r\n// lable mapping for known config values\r\nvar s = [\r\n    \"defaultCachingStore\",\r\n    \"defaultCachingTimeoutSeconds\",\r\n    \"globalCacheDisable\",\r\n    \"enableCacheExpiration\",\r\n    \"cacheExpirationIntervalMilliseconds\",\r\n    \"spfxContext\",\r\n];\r\nvar RuntimeConfigImpl = /** @class */ (function () {\r\n    function RuntimeConfigImpl(_v) {\r\n        if (_v === void 0) { _v = new Map(); }\r\n        this._v = _v;\r\n        // setup defaults\r\n        this._v.set(s[0], \"session\");\r\n        this._v.set(s[1], 60);\r\n        this._v.set(s[2], false);\r\n        this._v.set(s[3], false);\r\n        this._v.set(s[4], 750);\r\n        this._v.set(s[5], null);\r\n    }\r\n    /**\r\n     *\r\n     * @param config The set of properties to add to the globa configuration instance\r\n     */\r\n    RuntimeConfigImpl.prototype.extend = function (config) {\r\n        this._v = mergeMaps(this._v, objectToMap(config));\r\n    };\r\n    RuntimeConfigImpl.prototype.get = function (key) {\r\n        return this._v.get(key);\r\n    };\r\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"defaultCachingStore\", {\r\n        get: function () {\r\n            return this.get(s[0]);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"defaultCachingTimeoutSeconds\", {\r\n        get: function () {\r\n            return this.get(s[1]);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"globalCacheDisable\", {\r\n        get: function () {\r\n            return this.get(s[2]);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"enableCacheExpiration\", {\r\n        get: function () {\r\n            return this.get(s[3]);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"cacheExpirationIntervalMilliseconds\", {\r\n        get: function () {\r\n            return this.get(s[4]);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"spfxContext\", {\r\n        get: function () {\r\n            return this.get(s[5]);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return RuntimeConfigImpl;\r\n}());\r\nexport { RuntimeConfigImpl };\r\nvar _runtimeConfig = new RuntimeConfigImpl();\r\nexport var RuntimeConfig = _runtimeConfig;\r\n//# sourceMappingURL=libconfig.js.map","import { dateAdd, getCtxCallback, jsS, objectDefinedNotNull } from \"./util\";\r\nimport { RuntimeConfig } from \"./libconfig\";\r\n/**\r\n * A wrapper class to provide a consistent interface to browser based storage\r\n *\r\n */\r\nvar PnPClientStorageWrapper = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of the PnPClientStorageWrapper class\r\n     *\r\n     * @constructor\r\n     */\r\n    function PnPClientStorageWrapper(store, defaultTimeoutMinutes) {\r\n        if (defaultTimeoutMinutes === void 0) { defaultTimeoutMinutes = -1; }\r\n        this.store = store;\r\n        this.defaultTimeoutMinutes = defaultTimeoutMinutes;\r\n        this.enabled = this.test();\r\n        // if the cache timeout is enabled call the handler\r\n        // this will clear any expired items and set the timeout function\r\n        if (RuntimeConfig.enableCacheExpiration) {\r\n            this.cacheExpirationHandler();\r\n        }\r\n    }\r\n    /**\r\n     * Get a value from storage, or null if that value does not exist\r\n     *\r\n     * @param key The key whose value we want to retrieve\r\n     */\r\n    PnPClientStorageWrapper.prototype.get = function (key) {\r\n        if (!this.enabled) {\r\n            return null;\r\n        }\r\n        var o = this.store.getItem(key);\r\n        if (!objectDefinedNotNull(o)) {\r\n            return null;\r\n        }\r\n        var persistable = JSON.parse(o);\r\n        if (new Date(persistable.expiration) <= new Date()) {\r\n            this.delete(key);\r\n            return null;\r\n        }\r\n        else {\r\n            return persistable.value;\r\n        }\r\n    };\r\n    /**\r\n     * Adds a value to the underlying storage\r\n     *\r\n     * @param key The key to use when storing the provided value\r\n     * @param o The value to store\r\n     * @param expire Optional, if provided the expiration of the item, otherwise the default is used\r\n     */\r\n    PnPClientStorageWrapper.prototype.put = function (key, o, expire) {\r\n        if (this.enabled) {\r\n            this.store.setItem(key, this.createPersistable(o, expire));\r\n        }\r\n    };\r\n    /**\r\n     * Deletes a value from the underlying storage\r\n     *\r\n     * @param key The key of the pair we want to remove from storage\r\n     */\r\n    PnPClientStorageWrapper.prototype.delete = function (key) {\r\n        if (this.enabled) {\r\n            this.store.removeItem(key);\r\n        }\r\n    };\r\n    /**\r\n     * Gets an item from the underlying storage, or adds it if it does not exist using the supplied getter function\r\n     *\r\n     * @param key The key to use when storing the provided value\r\n     * @param getter A function which will upon execution provide the desired value\r\n     * @param expire Optional, if provided the expiration of the item, otherwise the default is used\r\n     */\r\n    PnPClientStorageWrapper.prototype.getOrPut = function (key, getter, expire) {\r\n        var _this = this;\r\n        if (!this.enabled) {\r\n            return getter();\r\n        }\r\n        var o = this.get(key);\r\n        if (o === null) {\r\n            return getter().then(function (d) {\r\n                _this.put(key, d, expire);\r\n                return d;\r\n            });\r\n        }\r\n        return Promise.resolve(o);\r\n    };\r\n    /**\r\n     * Deletes any expired items placed in the store by the pnp library, leaves other items untouched\r\n     */\r\n    PnPClientStorageWrapper.prototype.deleteExpired = function () {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            if (!_this.enabled) {\r\n                resolve();\r\n            }\r\n            try {\r\n                for (var i = 0; i < _this.store.length; i++) {\r\n                    var key = _this.store.key(i);\r\n                    if (key !== null) {\r\n                        // test the stored item to see if we stored it\r\n                        if (/[\"|']?pnp[\"|']? ?: ?1/i.test(_this.store.getItem(key))) {\r\n                            // get those items as get will delete from cache if they are expired\r\n                            _this.get(key);\r\n                        }\r\n                    }\r\n                }\r\n                resolve();\r\n            }\r\n            catch (e) {\r\n                reject(e);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Used to determine if the wrapped storage is available currently\r\n     */\r\n    PnPClientStorageWrapper.prototype.test = function () {\r\n        var str = \"t\";\r\n        try {\r\n            this.store.setItem(str, str);\r\n            this.store.removeItem(str);\r\n            return true;\r\n        }\r\n        catch (e) {\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * Creates the persistable to store\r\n     */\r\n    PnPClientStorageWrapper.prototype.createPersistable = function (o, expire) {\r\n        if (expire === undefined) {\r\n            // ensure we are by default inline with the global library setting\r\n            var defaultTimeout = RuntimeConfig.defaultCachingTimeoutSeconds;\r\n            if (this.defaultTimeoutMinutes > 0) {\r\n                defaultTimeout = this.defaultTimeoutMinutes * 60;\r\n            }\r\n            expire = dateAdd(new Date(), \"second\", defaultTimeout);\r\n        }\r\n        return jsS({ pnp: 1, expiration: expire, value: o });\r\n    };\r\n    /**\r\n     * Deletes expired items added by this library in this.store and sets a timeout to call itself\r\n     */\r\n    PnPClientStorageWrapper.prototype.cacheExpirationHandler = function () {\r\n        var _this = this;\r\n        this.deleteExpired().then(function (_) {\r\n            // call ourself in the future\r\n            setTimeout(getCtxCallback(_this, _this.cacheExpirationHandler), RuntimeConfig.cacheExpirationIntervalMilliseconds);\r\n        }).catch(function (e) {\r\n            console.error(e);\r\n        });\r\n    };\r\n    return PnPClientStorageWrapper;\r\n}());\r\nexport { PnPClientStorageWrapper };\r\n/**\r\n * A thin implementation of in-memory storage for use in nodejs\r\n */\r\nvar MemoryStorage = /** @class */ (function () {\r\n    function MemoryStorage(_store) {\r\n        if (_store === void 0) { _store = new Map(); }\r\n        this._store = _store;\r\n    }\r\n    Object.defineProperty(MemoryStorage.prototype, \"length\", {\r\n        get: function () {\r\n            return this._store.size;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    MemoryStorage.prototype.clear = function () {\r\n        this._store.clear();\r\n    };\r\n    MemoryStorage.prototype.getItem = function (key) {\r\n        return this._store.get(key);\r\n    };\r\n    MemoryStorage.prototype.key = function (index) {\r\n        return Array.from(this._store)[index][0];\r\n    };\r\n    MemoryStorage.prototype.removeItem = function (key) {\r\n        this._store.delete(key);\r\n    };\r\n    MemoryStorage.prototype.setItem = function (key, data) {\r\n        this._store.set(key, data);\r\n    };\r\n    return MemoryStorage;\r\n}());\r\n/**\r\n * A class that will establish wrappers for both local and session storage\r\n */\r\nvar PnPClientStorage = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of the PnPClientStorage class\r\n     *\r\n     * @constructor\r\n     */\r\n    function PnPClientStorage(_local, _session) {\r\n        if (_local === void 0) { _local = null; }\r\n        if (_session === void 0) { _session = null; }\r\n        this._local = _local;\r\n        this._session = _session;\r\n    }\r\n    Object.defineProperty(PnPClientStorage.prototype, \"local\", {\r\n        /**\r\n         * Provides access to the local storage of the browser\r\n         */\r\n        get: function () {\r\n            if (this._local === null) {\r\n                this._local = this.getStore(\"local\");\r\n            }\r\n            return this._local;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PnPClientStorage.prototype, \"session\", {\r\n        /**\r\n         * Provides access to the session storage of the browser\r\n         */\r\n        get: function () {\r\n            if (this._session === null) {\r\n                this._session = this.getStore(\"session\");\r\n            }\r\n            return this._session;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    PnPClientStorage.prototype.getStore = function (name) {\r\n        if (name === \"local\") {\r\n            return new PnPClientStorageWrapper(typeof (localStorage) === \"undefined\" ? new MemoryStorage() : localStorage);\r\n        }\r\n        return new PnPClientStorageWrapper(typeof (sessionStorage) === \"undefined\" ? new MemoryStorage() : sessionStorage);\r\n    };\r\n    return PnPClientStorage;\r\n}());\r\nexport { PnPClientStorage };\r\n//# sourceMappingURL=storage.js.map","export * from \"./src/common\";\r\n//# sourceMappingURL=index.js.map","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/**\r\n * Gets a callback function which will maintain context across async calls.\r\n * Allows for the calling pattern getCtxCallback(thisobj, method, methodarg1, methodarg2, ...)\r\n *\r\n * @param context The object that will be the 'this' value in the callback\r\n * @param method The method to which we will apply the context and parameters\r\n * @param params Optional, additional arguments to supply to the wrapped method when it is invoked\r\n */\r\nexport function getCtxCallback(context, method) {\r\n    var params = [];\r\n    for (var _i = 2; _i < arguments.length; _i++) {\r\n        params[_i - 2] = arguments[_i];\r\n    }\r\n    return function () {\r\n        method.apply(context, params);\r\n    };\r\n}\r\n/**\r\n * Adds a value to a date\r\n *\r\n * @param date The date to which we will add units, done in local time\r\n * @param interval The name of the interval to add, one of: ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second']\r\n * @param units The amount to add to date of the given interval\r\n *\r\n * http://stackoverflow.com/questions/1197928/how-to-add-30-minutes-to-a-javascript-date-object\r\n */\r\nexport function dateAdd(date, interval, units) {\r\n    var ret = new Date(date); // don't change original date\r\n    switch (interval.toLowerCase()) {\r\n        case \"year\":\r\n            ret.setFullYear(ret.getFullYear() + units);\r\n            break;\r\n        case \"quarter\":\r\n            ret.setMonth(ret.getMonth() + 3 * units);\r\n            break;\r\n        case \"month\":\r\n            ret.setMonth(ret.getMonth() + units);\r\n            break;\r\n        case \"week\":\r\n            ret.setDate(ret.getDate() + 7 * units);\r\n            break;\r\n        case \"day\":\r\n            ret.setDate(ret.getDate() + units);\r\n            break;\r\n        case \"hour\":\r\n            ret.setTime(ret.getTime() + units * 3600000);\r\n            break;\r\n        case \"minute\":\r\n            ret.setTime(ret.getTime() + units * 60000);\r\n            break;\r\n        case \"second\":\r\n            ret.setTime(ret.getTime() + units * 1000);\r\n            break;\r\n        default:\r\n            ret = undefined;\r\n            break;\r\n    }\r\n    return ret;\r\n}\r\n/**\r\n * Combines an arbitrary set of paths ensuring and normalizes the slashes\r\n *\r\n * @param paths 0 to n path parts to combine\r\n */\r\nexport function combine() {\r\n    var paths = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        paths[_i] = arguments[_i];\r\n    }\r\n    return paths\r\n        .filter(function (path) { return !stringIsNullOrEmpty(path); })\r\n        .map(function (path) { return path.replace(/^[\\\\|\\/]/, \"\").replace(/[\\\\|\\/]$/, \"\"); })\r\n        .join(\"/\")\r\n        .replace(/\\\\/g, \"/\");\r\n}\r\n/**\r\n * Gets a random string of chars length\r\n *\r\n * https://stackoverflow.com/questions/1349404/generate-random-string-characters-in-javascript\r\n *\r\n * @param chars The length of the random string to generate\r\n */\r\nexport function getRandomString(chars) {\r\n    var text = new Array(chars);\r\n    var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n    for (var i = 0; i < chars; i++) {\r\n        text[i] = possible.charAt(Math.floor(Math.random() * possible.length));\r\n    }\r\n    return text.join(\"\");\r\n}\r\n/**\r\n * Gets a random GUID value\r\n *\r\n * http://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\r\n * https://stackoverflow.com/a/8809472 updated to prevent collisions.\r\n */\r\n/* tslint:disable no-bitwise */\r\nexport function getGUID() {\r\n    var d = Date.now();\r\n    if (typeof performance !== \"undefined\" && typeof performance.now === \"function\") {\r\n        d += performance.now(); // use high-precision timer if available\r\n    }\r\n    var guid = \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function (c) {\r\n        var r = (d + Math.random() * 16) % 16 | 0;\r\n        d = Math.floor(d / 16);\r\n        return (c === \"x\" ? r : (r & 0x3 | 0x8)).toString(16);\r\n    });\r\n    return guid;\r\n}\r\n/* tslint:enable */\r\n/**\r\n * Determines if a given value is a function\r\n *\r\n * @param cf The thing to test for functionness\r\n */\r\nexport function isFunc(cf) {\r\n    return typeof cf === \"function\";\r\n}\r\n/**\r\n * Determines if an object is both defined and not null\r\n * @param obj Object to test\r\n */\r\nexport function objectDefinedNotNull(obj) {\r\n    return typeof obj !== \"undefined\" && obj !== null;\r\n}\r\n/**\r\n * @returns whether the provided parameter is a JavaScript Array or not.\r\n*/\r\nexport function isArray(array) {\r\n    if (Array.isArray) {\r\n        return Array.isArray(array);\r\n    }\r\n    return array && typeof array.length === \"number\" && array.constructor === Array;\r\n}\r\n/**\r\n * Provides functionality to extend the given object by doing a shallow copy\r\n *\r\n * @param target The object to which properties will be copied\r\n * @param source The source object from which properties will be copied\r\n * @param noOverwrite If true existing properties on the target are not overwritten from the source\r\n * @param filter If provided allows additional filtering on what properties are copied (propName: string) => boolean\r\n *\r\n */\r\nexport function extend(target, source, noOverwrite, filter) {\r\n    if (noOverwrite === void 0) { noOverwrite = false; }\r\n    if (filter === void 0) { filter = function () { return true; }; }\r\n    if (!objectDefinedNotNull(source)) {\r\n        return target;\r\n    }\r\n    // ensure we don't overwrite things we don't want overwritten\r\n    var check = noOverwrite ? function (o, i) { return !(i in o); } : function () { return true; };\r\n    // final filter we will use\r\n    var f = function (v) { return check(target, v) && filter(v); };\r\n    return Object.getOwnPropertyNames(source)\r\n        .filter(f)\r\n        .reduce(function (t, v) {\r\n        t[v] = source[v];\r\n        return t;\r\n    }, target);\r\n}\r\n/**\r\n * Determines if a given url is absolute\r\n *\r\n * @param url The url to check to see if it is absolute\r\n */\r\nexport function isUrlAbsolute(url) {\r\n    return /^https?:\\/\\/|^\\/\\//i.test(url);\r\n}\r\n/**\r\n * Determines if a string is null or empty or undefined\r\n *\r\n * @param s The string to test\r\n */\r\nexport function stringIsNullOrEmpty(s) {\r\n    return s === undefined || s === null || s.length < 1;\r\n}\r\n/**\r\n * Gets an attribute value from an html/xml string block. NOTE: if the input attribute value has\r\n * RegEx special characters they will be escaped in the returned string\r\n *\r\n * @param html HTML to search\r\n * @param attrName The name of the attribute to find\r\n */\r\nexport function getAttrValueFromString(html, attrName) {\r\n    // make the input safe for regex\r\n    html = html.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\r\n    var reg = new RegExp(attrName + \"\\\\s*?=\\\\s*?(\\\"|')([^\\\\1]*?)\\\\1\", \"i\");\r\n    var match = reg.exec(html);\r\n    return match !== null && match.length > 0 ? match[2] : null;\r\n}\r\n/**\r\n * Ensures guid values are represented consistently as \"ea123463-137d-4ae3-89b8-cf3fc578ca05\"\r\n *\r\n * @param guid The candidate guid\r\n */\r\nexport function sanitizeGuid(guid) {\r\n    if (stringIsNullOrEmpty(guid)) {\r\n        return guid;\r\n    }\r\n    var matches = /([0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12})/i.exec(guid);\r\n    return matches === null ? guid : matches[1];\r\n}\r\n/**\r\n * Shorthand for JSON.stringify\r\n *\r\n * @param o Any type of object\r\n */\r\nexport function jsS(o) {\r\n    return JSON.stringify(o);\r\n}\r\n/**\r\n * Shorthand for Object.hasOwnProperty\r\n *\r\n * @param o Object to check for\r\n * @param p Name of the property\r\n */\r\nexport function hOP(o, p) {\r\n    return Object.hasOwnProperty.call(o, p);\r\n}\r\n/**\r\n * Generates a ~unique hash code\r\n *\r\n * From: https://stackoverflow.com/questions/6122571/simple-non-secure-hash-function-for-javascript\r\n */\r\n// tslint:disable:no-bitwise\r\nexport function getHashCode(s) {\r\n    var hash = 0;\r\n    if (s.length === 0) {\r\n        return hash;\r\n    }\r\n    for (var i = 0; i < s.length; i++) {\r\n        var chr = s.charCodeAt(i);\r\n        hash = ((hash << 5) - hash) + chr;\r\n        hash |= 0; // Convert to 32bit integer\r\n    }\r\n    return hash;\r\n}\r\n// tslint:enable:no-bitwise\r\n//# sourceMappingURL=util.js.map","import { RuntimeConfig, FetchClient, } from \"@pnp/common\";\r\nexport function setup(config) {\r\n    RuntimeConfig.extend(config);\r\n}\r\nvar SPRuntimeConfigImpl = /** @class */ (function () {\r\n    function SPRuntimeConfigImpl() {\r\n    }\r\n    Object.defineProperty(SPRuntimeConfigImpl.prototype, \"headers\", {\r\n        get: function () {\r\n            var spPart = RuntimeConfig.get(\"sp\");\r\n            if (spPart !== undefined && spPart.headers !== undefined) {\r\n                return spPart.headers;\r\n            }\r\n            return {};\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SPRuntimeConfigImpl.prototype, \"baseUrl\", {\r\n        get: function () {\r\n            var spPart = RuntimeConfig.get(\"sp\");\r\n            if (spPart !== undefined && spPart.baseUrl !== undefined) {\r\n                return spPart.baseUrl;\r\n            }\r\n            if (RuntimeConfig.spfxContext !== undefined && RuntimeConfig.spfxContext !== null) {\r\n                return RuntimeConfig.spfxContext.pageContext.web.absoluteUrl;\r\n            }\r\n            return null;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SPRuntimeConfigImpl.prototype, \"fetchClientFactory\", {\r\n        get: function () {\r\n            var spPart = RuntimeConfig.get(\"sp\");\r\n            if (spPart !== undefined && spPart.fetchClientFactory !== undefined) {\r\n                return spPart.fetchClientFactory;\r\n            }\r\n            else {\r\n                return function () { return new FetchClient(); };\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return SPRuntimeConfigImpl;\r\n}());\r\nexport { SPRuntimeConfigImpl };\r\nexport var SPRuntimeConfig = new SPRuntimeConfigImpl();\r\n//# sourceMappingURL=splibconfig.js.map","import { combine, isUrlAbsolute, hOP } from \"@pnp/common\";\r\nimport { SPRuntimeConfig } from \"../config/splibconfig\";\r\n/**\r\n * Ensures that a given url is absolute for the current web based on context\r\n *\r\n * @param candidateUrl The url to make absolute\r\n *\r\n */\r\nexport function toAbsoluteUrl(candidateUrl) {\r\n    return new Promise(function (resolve) {\r\n        if (isUrlAbsolute(candidateUrl)) {\r\n            // if we are already absolute, then just return the url\r\n            return resolve(candidateUrl);\r\n        }\r\n        if (SPRuntimeConfig.baseUrl !== null) {\r\n            // base url specified either with baseUrl of spfxContext config property\r\n            return resolve(combine(SPRuntimeConfig.baseUrl, candidateUrl));\r\n        }\r\n        if (global._spPageContextInfo !== undefined) {\r\n            // operating in classic pages\r\n            if (hOP(global._spPageContextInfo, \"webAbsoluteUrl\")) {\r\n                return resolve(combine(global._spPageContextInfo.webAbsoluteUrl, candidateUrl));\r\n            }\r\n            else if (hOP(global._spPageContextInfo, \"webServerRelativeUrl\")) {\r\n                return resolve(combine(global._spPageContextInfo.webServerRelativeUrl, candidateUrl));\r\n            }\r\n        }\r\n        // does window.location exist and have a certain path part in it?\r\n        if (global.location !== undefined) {\r\n            var baseUrl_1 = global.location.toString().toLowerCase();\r\n            [\"/_layouts/\", \"/siteassets/\"].forEach(function (s) {\r\n                var index = baseUrl_1.indexOf(s);\r\n                if (index > 0) {\r\n                    return resolve(combine(baseUrl_1.substr(0, index), candidateUrl));\r\n                }\r\n            });\r\n        }\r\n        return resolve(candidateUrl);\r\n    });\r\n}\r\n//# sourceMappingURL=toabsoluteurl.js.map","import * as tslib_1 from \"tslib\";\r\nimport { extend, objectDefinedNotNull } from \"./util\";\r\nexport function mergeHeaders(target, source) {\r\n    if (source !== undefined && source !== null) {\r\n        var temp = new Request(\"\", { headers: source });\r\n        temp.headers.forEach(function (value, name) {\r\n            target.append(name, value);\r\n        });\r\n    }\r\n}\r\nexport function mergeOptions(target, source) {\r\n    if (objectDefinedNotNull(source)) {\r\n        var headers = extend(target.headers || {}, source.headers);\r\n        target = extend(target, source);\r\n        target.headers = headers;\r\n    }\r\n}\r\n/**\r\n * Makes requests using the global/window fetch API\r\n */\r\nvar FetchClient = /** @class */ (function () {\r\n    function FetchClient() {\r\n    }\r\n    FetchClient.prototype.fetch = function (url, options) {\r\n        return global.fetch(url, options);\r\n    };\r\n    return FetchClient;\r\n}());\r\nexport { FetchClient };\r\n/**\r\n * Makes requests using the fetch API adding the supplied token to the Authorization header\r\n */\r\nvar BearerTokenFetchClient = /** @class */ (function (_super) {\r\n    tslib_1.__extends(BearerTokenFetchClient, _super);\r\n    function BearerTokenFetchClient(_token) {\r\n        var _this = _super.call(this) || this;\r\n        _this._token = _token;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(BearerTokenFetchClient.prototype, \"token\", {\r\n        get: function () {\r\n            return this._token || \"\";\r\n        },\r\n        set: function (token) {\r\n            this._token = token;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    BearerTokenFetchClient.prototype.fetch = function (url, options) {\r\n        if (options === void 0) { options = {}; }\r\n        var headers = new Headers();\r\n        mergeHeaders(headers, options.headers);\r\n        headers.set(\"Authorization\", \"Bearer \" + this._token);\r\n        options.headers = headers;\r\n        return _super.prototype.fetch.call(this, url, options);\r\n    };\r\n    return BearerTokenFetchClient;\r\n}(FetchClient));\r\nexport { BearerTokenFetchClient };\r\n//# sourceMappingURL=netutil.js.map","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","/*! adal-angular v1.0.17 2018-02-27 */\r\nvar AuthenticationContext=function(){\"use strict\";return AuthenticationContext=function(a){if(this.REQUEST_TYPE={LOGIN:\"LOGIN\",RENEW_TOKEN:\"RENEW_TOKEN\",UNKNOWN:\"UNKNOWN\"},this.RESPONSE_TYPE={ID_TOKEN_TOKEN:\"id_token token\",TOKEN:\"token\"},this.CONSTANTS={ACCESS_TOKEN:\"access_token\",EXPIRES_IN:\"expires_in\",ID_TOKEN:\"id_token\",ERROR_DESCRIPTION:\"error_description\",SESSION_STATE:\"session_state\",ERROR:\"error\",STORAGE:{TOKEN_KEYS:\"adal.token.keys\",ACCESS_TOKEN_KEY:\"adal.access.token.key\",EXPIRATION_KEY:\"adal.expiration.key\",STATE_LOGIN:\"adal.state.login\",STATE_RENEW:\"adal.state.renew\",NONCE_IDTOKEN:\"adal.nonce.idtoken\",SESSION_STATE:\"adal.session.state\",USERNAME:\"adal.username\",IDTOKEN:\"adal.idtoken\",ERROR:\"adal.error\",ERROR_DESCRIPTION:\"adal.error.description\",LOGIN_REQUEST:\"adal.login.request\",LOGIN_ERROR:\"adal.login.error\",RENEW_STATUS:\"adal.token.renew.status\",ANGULAR_LOGIN_REQUEST:\"adal.angular.login.request\"},RESOURCE_DELIMETER:\"|\",CACHE_DELIMETER:\"||\",LOADFRAME_TIMEOUT:6e3,TOKEN_RENEW_STATUS_CANCELED:\"Canceled\",TOKEN_RENEW_STATUS_COMPLETED:\"Completed\",TOKEN_RENEW_STATUS_IN_PROGRESS:\"In Progress\",LOGGING_LEVEL:{ERROR:0,WARN:1,INFO:2,VERBOSE:3},LEVEL_STRING_MAP:{0:\"ERROR:\",1:\"WARNING:\",2:\"INFO:\",3:\"VERBOSE:\"},POPUP_WIDTH:483,POPUP_HEIGHT:600},AuthenticationContext.prototype._singletonInstance)return AuthenticationContext.prototype._singletonInstance;if(AuthenticationContext.prototype._singletonInstance=this,this.instance=\"https://login.microsoftonline.com/\",this.config={},this.callback=null,this.popUp=!1,this.isAngular=!1,this._user=null,this._activeRenewals={},this._loginInProgress=!1,this._acquireTokenInProgress=!1,this._renewStates=[],this._callBackMappedToRenewStates={},this._callBacksMappedToRenewStates={},this._openedWindows=[],this._requestType=this.REQUEST_TYPE.LOGIN,window._adalInstance=this,a.displayCall&&\"function\"!=typeof a.displayCall)throw new Error(\"displayCall is not a function\");if(!a.clientId)throw new Error(\"clientId is required\");this.config=this._cloneConfig(a),void 0===this.config.navigateToLoginRequestUrl&&(this.config.navigateToLoginRequestUrl=!0),this.config.popUp&&(this.popUp=!0),this.config.callback&&\"function\"==typeof this.config.callback&&(this.callback=this.config.callback),this.config.instance&&(this.instance=this.config.instance),this.config.loginResource||(this.config.loginResource=this.config.clientId),this.config.redirectUri||(this.config.redirectUri=window.location.href.split(\"?\")[0].split(\"#\")[0]),this.config.postLogoutRedirectUri||(this.config.postLogoutRedirectUri=window.location.href.split(\"?\")[0].split(\"#\")[0]),this.config.anonymousEndpoints||(this.config.anonymousEndpoints=[]),this.config.isAngular&&(this.isAngular=this.config.isAngular),this.config.loadFrameTimeout&&(this.CONSTANTS.LOADFRAME_TIMEOUT=this.config.loadFrameTimeout)},\"undefined\"!=typeof window&&(window.Logging={piiLoggingEnabled:!1,level:0,log:function(a){}}),AuthenticationContext.prototype.login=function(){if(this._loginInProgress)return void this.info(\"Login in progress\");this._loginInProgress=!0;var a=this._guid();this.config.state=a,this._idTokenNonce=this._guid();var b=this._getItem(this.CONSTANTS.STORAGE.ANGULAR_LOGIN_REQUEST);b&&\"\"!==b?this._saveItem(this.CONSTANTS.STORAGE.ANGULAR_LOGIN_REQUEST,\"\"):b=window.location.href,this.verbose(\"Expected state: \"+a+\" startPage:\"+b),this._saveItem(this.CONSTANTS.STORAGE.LOGIN_REQUEST,b),this._saveItem(this.CONSTANTS.STORAGE.LOGIN_ERROR,\"\"),this._saveItem(this.CONSTANTS.STORAGE.STATE_LOGIN,a,!0),this._saveItem(this.CONSTANTS.STORAGE.NONCE_IDTOKEN,this._idTokenNonce,!0),this._saveItem(this.CONSTANTS.STORAGE.ERROR,\"\"),this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION,\"\");var c=this._getNavigateUrl(\"id_token\",null)+\"&nonce=\"+encodeURIComponent(this._idTokenNonce);this.config.displayCall?this.config.displayCall(c):this.popUp?(this._saveItem(this.CONSTANTS.STORAGE.STATE_LOGIN,\"\"),this._renewStates.push(a),this.registerCallback(a,this.config.clientId,this.callback),this._loginPopup(c)):this.promptUser(c)},AuthenticationContext.prototype._openPopup=function(a,b,c,d){try{var e=window.screenLeft?window.screenLeft:window.screenX,f=window.screenTop?window.screenTop:window.screenY,g=window.innerWidth||document.documentElement.clientWidth||document.body.clientWidth,h=window.innerHeight||document.documentElement.clientHeight||document.body.clientHeight,i=g/2-c/2+e,j=h/2-d/2+f,k=window.open(a,b,\"width=\"+c+\", height=\"+d+\", top=\"+j+\", left=\"+i);return k.focus&&k.focus(),k}catch(a){return this.warn(\"Error opening popup, \"+a.message),this._loginInProgress=!1,this._acquireTokenInProgress=!1,null}},AuthenticationContext.prototype._handlePopupError=function(a,b,c,d,e){this.warn(d),this._saveItem(this.CONSTANTS.STORAGE.ERROR,c),this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION,d),this._saveItem(this.CONSTANTS.STORAGE.LOGIN_ERROR,e),b&&this._activeRenewals[b]&&(this._activeRenewals[b]=null),this._loginInProgress=!1,this._acquireTokenInProgress=!1,a&&a(d,null,c)},AuthenticationContext.prototype._loginPopup=function(a,b,c){var d=this._openPopup(a,\"login\",this.CONSTANTS.POPUP_WIDTH,this.CONSTANTS.POPUP_HEIGHT),e=c||this.callback;if(null==d){var f=\"Popup Window is null. This can happen if you are using IE\";return void this._handlePopupError(e,b,\"Error opening popup\",f,f)}if(this._openedWindows.push(d),-1!=this.config.redirectUri.indexOf(\"#\"))var g=this.config.redirectUri.split(\"#\")[0];else var g=this.config.redirectUri;var h=this,i=window.setInterval(function(){if(!d||d.closed||void 0===d.closed){var a=\"Popup Window closed\",c=\"Popup Window closed by UI action/ Popup Window handle destroyed due to cross zone navigation in IE/Edge\";return h.isAngular&&h._broadcast(\"adal:popUpClosed\",c+h.CONSTANTS.RESOURCE_DELIMETER+a),h._handlePopupError(e,b,a,c,c),void window.clearInterval(i)}try{var f=d.location;if(-1!=encodeURI(f.href).indexOf(encodeURI(g)))return h.isAngular?h._broadcast(\"adal:popUpHashChanged\",f.hash):h.handleWindowCallback(f.hash),window.clearInterval(i),h._loginInProgress=!1,h._acquireTokenInProgress=!1,h.info(\"Closing popup window\"),h._openedWindows=[],void d.close()}catch(a){}},1)},AuthenticationContext.prototype._broadcast=function(a,b){!function(){function a(a,b){b=b||{bubbles:!1,cancelable:!1,detail:void 0};var c=document.createEvent(\"CustomEvent\");return c.initCustomEvent(a,b.bubbles,b.cancelable,b.detail),c}if(\"function\"==typeof window.CustomEvent)return!1;a.prototype=window.Event.prototype,window.CustomEvent=a}();var c=new CustomEvent(a,{detail:b});window.dispatchEvent(c)},AuthenticationContext.prototype.loginInProgress=function(){return this._loginInProgress},AuthenticationContext.prototype._hasResource=function(a){var b=this._getItem(this.CONSTANTS.STORAGE.TOKEN_KEYS);return b&&!this._isEmpty(b)&&b.indexOf(a+this.CONSTANTS.RESOURCE_DELIMETER)>-1},AuthenticationContext.prototype.getCachedToken=function(a){if(!this._hasResource(a))return null;var b=this._getItem(this.CONSTANTS.STORAGE.ACCESS_TOKEN_KEY+a),c=this._getItem(this.CONSTANTS.STORAGE.EXPIRATION_KEY+a),d=this.config.expireOffsetSeconds||300;return c&&c>this._now()+d?b:(this._saveItem(this.CONSTANTS.STORAGE.ACCESS_TOKEN_KEY+a,\"\"),this._saveItem(this.CONSTANTS.STORAGE.EXPIRATION_KEY+a,0),null)},AuthenticationContext.prototype.getCachedUser=function(){if(this._user)return this._user;var a=this._getItem(this.CONSTANTS.STORAGE.IDTOKEN);return this._user=this._createUser(a),this._user},AuthenticationContext.prototype.registerCallback=function(a,b,c){this._activeRenewals[b]=a,this._callBacksMappedToRenewStates[a]||(this._callBacksMappedToRenewStates[a]=[]);var d=this;this._callBacksMappedToRenewStates[a].push(c),this._callBackMappedToRenewStates[a]||(this._callBackMappedToRenewStates[a]=function(c,e,f,g){d._activeRenewals[b]=null;for(var h=0;h<d._callBacksMappedToRenewStates[a].length;++h)try{d._callBacksMappedToRenewStates[a][h](c,e,f,g)}catch(f){d.warn(f)}d._callBacksMappedToRenewStates[a]=null,d._callBackMappedToRenewStates[a]=null})},AuthenticationContext.prototype._renewToken=function(a,b,c){this.info(\"renewToken is called for resource:\"+a);var d=this._addAdalFrame(\"adalRenewFrame\"+a),e=this._guid()+\"|\"+a;this.config.state=e,this._renewStates.push(e),this.verbose(\"Renew token Expected state: \"+e),c=c||\"token\";var f=this._urlRemoveQueryStringParameter(this._getNavigateUrl(c,a),\"prompt\");c===this.RESPONSE_TYPE.ID_TOKEN_TOKEN&&(this._idTokenNonce=this._guid(),this._saveItem(this.CONSTANTS.STORAGE.NONCE_IDTOKEN,this._idTokenNonce,!0),f+=\"&nonce=\"+encodeURIComponent(this._idTokenNonce)),f+=\"&prompt=none\",f=this._addHintParameters(f),this.registerCallback(e,a,b),this.verbosePii(\"Navigate to:\"+f),d.src=\"about:blank\",this._loadFrameTimeout(f,\"adalRenewFrame\"+a,a)},AuthenticationContext.prototype._renewIdToken=function(a,b){this.info(\"renewIdToken is called\");var c=this._addAdalFrame(\"adalIdTokenFrame\"),d=this._guid()+\"|\"+this.config.clientId;this._idTokenNonce=this._guid(),this._saveItem(this.CONSTANTS.STORAGE.NONCE_IDTOKEN,this._idTokenNonce,!0),this.config.state=d,this._renewStates.push(d),this.verbose(\"Renew Idtoken Expected state: \"+d);var e=null===b||void 0===b?null:this.config.clientId,b=b||\"id_token\",f=this._urlRemoveQueryStringParameter(this._getNavigateUrl(b,e),\"prompt\");f+=\"&prompt=none\",f=this._addHintParameters(f),f+=\"&nonce=\"+encodeURIComponent(this._idTokenNonce),this.registerCallback(d,this.config.clientId,a),this.verbosePii(\"Navigate to:\"+f),c.src=\"about:blank\",this._loadFrameTimeout(f,\"adalIdTokenFrame\",this.config.clientId)},AuthenticationContext.prototype._urlContainsQueryStringParameter=function(a,b){return new RegExp(\"[\\\\?&]\"+a+\"=\").test(b)},AuthenticationContext.prototype._urlRemoveQueryStringParameter=function(a,b){var c=new RegExp(\"(\\\\&\"+b+\"=)[^&]+\");return a=a.replace(c,\"\"),c=new RegExp(\"(\"+b+\"=)[^&]+&\"),a=a.replace(c,\"\"),c=new RegExp(\"(\"+b+\"=)[^&]+\"),a=a.replace(c,\"\")},AuthenticationContext.prototype._loadFrameTimeout=function(a,b,c){this.verbose(\"Set loading state to pending for: \"+c),this._saveItem(this.CONSTANTS.STORAGE.RENEW_STATUS+c,this.CONSTANTS.TOKEN_RENEW_STATUS_IN_PROGRESS),this._loadFrame(a,b);var d=this;setTimeout(function(){if(d._getItem(d.CONSTANTS.STORAGE.RENEW_STATUS+c)===d.CONSTANTS.TOKEN_RENEW_STATUS_IN_PROGRESS){d.verbose(\"Loading frame has timed out after: \"+d.CONSTANTS.LOADFRAME_TIMEOUT/1e3+\" seconds for resource \"+c);var a=d._activeRenewals[c];a&&d._callBackMappedToRenewStates[a]&&d._callBackMappedToRenewStates[a](\"Token renewal operation failed due to timeout\",null,\"Token Renewal Failed\"),d._saveItem(d.CONSTANTS.STORAGE.RENEW_STATUS+c,d.CONSTANTS.TOKEN_RENEW_STATUS_CANCELED)}},d.CONSTANTS.LOADFRAME_TIMEOUT)},AuthenticationContext.prototype._loadFrame=function(a,b){var c=this;c.info(\"LoadFrame: \"+b);var d=b;setTimeout(function(){var b=c._addAdalFrame(d);\"\"!==b.src&&\"about:blank\"!==b.src||(b.src=a,c._loadFrame(a,d))},500)},AuthenticationContext.prototype.acquireToken=function(a,b){if(this._isEmpty(a))return this.warn(\"resource is required\"),void b(\"resource is required\",null,\"resource is required\");var c=this.getCachedToken(a);return c?(this.info(\"Token is already in cache for resource:\"+a),void b(null,c,null)):this._user||this.config.extraQueryParameter&&-1!==this.config.extraQueryParameter.indexOf(\"login_hint\")?void(this._activeRenewals[a]?this.registerCallback(this._activeRenewals[a],a,b):(this._requestType=this.REQUEST_TYPE.RENEW_TOKEN,a===this.config.clientId?this._user?(this.verbose(\"renewing idtoken\"),this._renewIdToken(b)):(this.verbose(\"renewing idtoken and access_token\"),this._renewIdToken(b,this.RESPONSE_TYPE.ID_TOKEN_TOKEN)):this._user?(this.verbose(\"renewing access_token\"),this._renewToken(a,b)):(this.verbose(\"renewing idtoken and access_token\"),this._renewToken(a,b,this.RESPONSE_TYPE.ID_TOKEN_TOKEN)))):(this.warn(\"User login is required\"),void b(\"User login is required\",null,\"login required\"))},AuthenticationContext.prototype.acquireTokenPopup=function(a,b,c,d){if(this._isEmpty(a))return this.warn(\"resource is required\"),void d(\"resource is required\",null,\"resource is required\");if(!this._user)return this.warn(\"User login is required\"),void d(\"User login is required\",null,\"login required\");if(this._acquireTokenInProgress)return this.warn(\"Acquire token interactive is already in progress\"),void d(\"Acquire token interactive is already in progress\",null,\"Acquire token interactive is already in progress\");var e=this._guid()+\"|\"+a;this.config.state=e,this._renewStates.push(e),this._requestType=this.REQUEST_TYPE.RENEW_TOKEN,this.verbose(\"Renew token Expected state: \"+e);var f=this._urlRemoveQueryStringParameter(this._getNavigateUrl(\"token\",a),\"prompt\");if(f+=\"&prompt=select_account\",b&&(f+=b),c&&-1===f.indexOf(\"&claims\"))f+=\"&claims=\"+encodeURIComponent(c);else if(c&&-1!==f.indexOf(\"&claims\"))throw new Error(\"Claims cannot be passed as an extraQueryParameter\");f=this._addHintParameters(f),this._acquireTokenInProgress=!0,this.info(\"acquireToken interactive is called for the resource \"+a),this.registerCallback(e,a,d),this._loginPopup(f,a,d)},AuthenticationContext.prototype.acquireTokenRedirect=function(a,b,c){if(this._isEmpty(a))return this.warn(\"resource is required\"),void d(\"resource is required\",null,\"resource is required\");var d=this.callback;if(!this._user)return this.warn(\"User login is required\"),void d(\"User login is required\",null,\"login required\");if(this._acquireTokenInProgress)return this.warn(\"Acquire token interactive is already in progress\"),void d(\"Acquire token interactive is already in progress\",null,\"Acquire token interactive is already in progress\");var e=this._guid()+\"|\"+a;this.config.state=e,this.verbose(\"Renew token Expected state: \"+e);var f=this._urlRemoveQueryStringParameter(this._getNavigateUrl(\"token\",a),\"prompt\");if(f+=\"&prompt=select_account\",b&&(f+=b),c&&-1===f.indexOf(\"&claims\"))f+=\"&claims=\"+encodeURIComponent(c);else if(c&&-1!==f.indexOf(\"&claims\"))throw new Error(\"Claims cannot be passed as an extraQueryParameter\");f=this._addHintParameters(f),this._acquireTokenInProgress=!0,this.info(\"acquireToken interactive is called for the resource \"+a),this._saveItem(this.CONSTANTS.STORAGE.LOGIN_REQUEST,window.location.href),this._saveItem(this.CONSTANTS.STORAGE.STATE_RENEW,e,!0),this.promptUser(f)},AuthenticationContext.prototype.promptUser=function(a){a?(this.infoPii(\"Navigate to:\"+a),window.location.replace(a)):this.info(\"Navigate url is empty\")},AuthenticationContext.prototype.clearCache=function(){this._saveItem(this.CONSTANTS.STORAGE.LOGIN_REQUEST,\"\"),this._saveItem(this.CONSTANTS.STORAGE.ANGULAR_LOGIN_REQUEST,\"\"),this._saveItem(this.CONSTANTS.STORAGE.SESSION_STATE,\"\"),this._saveItem(this.CONSTANTS.STORAGE.STATE_LOGIN,\"\"),this._saveItem(this.CONSTANTS.STORAGE.STATE_RENEW,\"\"),this._renewStates=[],this._saveItem(this.CONSTANTS.STORAGE.NONCE_IDTOKEN,\"\"),this._saveItem(this.CONSTANTS.STORAGE.IDTOKEN,\"\"),this._saveItem(this.CONSTANTS.STORAGE.ERROR,\"\"),this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION,\"\"),this._saveItem(this.CONSTANTS.STORAGE.LOGIN_ERROR,\"\"),this._saveItem(this.CONSTANTS.STORAGE.LOGIN_ERROR,\"\");var a=this._getItem(this.CONSTANTS.STORAGE.TOKEN_KEYS);if(!this._isEmpty(a)){a=a.split(this.CONSTANTS.RESOURCE_DELIMETER);for(var b=0;b<a.length&&\"\"!==a[b];b++)this._saveItem(this.CONSTANTS.STORAGE.ACCESS_TOKEN_KEY+a[b],\"\"),this._saveItem(this.CONSTANTS.STORAGE.EXPIRATION_KEY+a[b],0)}this._saveItem(this.CONSTANTS.STORAGE.TOKEN_KEYS,\"\")},AuthenticationContext.prototype.clearCacheForResource=function(a){this._saveItem(this.CONSTANTS.STORAGE.STATE_RENEW,\"\"),this._saveItem(this.CONSTANTS.STORAGE.ERROR,\"\"),this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION,\"\"),this._hasResource(a)&&(this._saveItem(this.CONSTANTS.STORAGE.ACCESS_TOKEN_KEY+a,\"\"),this._saveItem(this.CONSTANTS.STORAGE.EXPIRATION_KEY+a,0))},AuthenticationContext.prototype.logOut=function(){this.clearCache(),this._user=null;var a;if(this.config.logOutUri)a=this.config.logOutUri;else{var b=\"common\",c=\"\";this.config.tenant&&(b=this.config.tenant),this.config.postLogoutRedirectUri&&(c=\"post_logout_redirect_uri=\"+encodeURIComponent(this.config.postLogoutRedirectUri)),a=this.instance+b+\"/oauth2/logout?\"+c}this.infoPii(\"Logout navigate to: \"+a),this.promptUser(a)},AuthenticationContext.prototype._isEmpty=function(a){return void 0===a||!a||0===a.length},AuthenticationContext.prototype.getUser=function(a){if(\"function\"!=typeof a)throw new Error(\"callback is not a function\");if(this._user)return void a(null,this._user);var b=this._getItem(this.CONSTANTS.STORAGE.IDTOKEN);this._isEmpty(b)?(this.warn(\"User information is not available\"),a(\"User information is not available\",null)):(this.info(\"User exists in cache: \"),this._user=this._createUser(b),a(null,this._user))},AuthenticationContext.prototype._addHintParameters=function(a){if(this._user&&this._user.profile)if(this._user.profile.sid&&-1!==a.indexOf(\"&prompt=none\"))this._urlContainsQueryStringParameter(\"sid\",a)||(a+=\"&sid=\"+encodeURIComponent(this._user.profile.sid));else if(this._user.profile.upn&&(this._urlContainsQueryStringParameter(\"login_hint\",a)||(a+=\"&login_hint=\"+encodeURIComponent(this._user.profile.upn)),!this._urlContainsQueryStringParameter(\"domain_hint\",a)&&this._user.profile.upn.indexOf(\"@\")>-1)){var b=this._user.profile.upn.split(\"@\");a+=\"&domain_hint=\"+encodeURIComponent(b[b.length-1])}return a},AuthenticationContext.prototype._createUser=function(a){var b=null,c=this._extractIdToken(a);return c&&c.hasOwnProperty(\"aud\")&&(c.aud.toLowerCase()===this.config.clientId.toLowerCase()?(b={userName:\"\",profile:c},c.hasOwnProperty(\"upn\")?b.userName=c.upn:c.hasOwnProperty(\"email\")&&(b.userName=c.email)):this.warn(\"IdToken has invalid aud field\")),b},AuthenticationContext.prototype._getHash=function(a){return a.indexOf(\"#/\")>-1?a=a.substring(a.indexOf(\"#/\")+2):a.indexOf(\"#\")>-1&&(a=a.substring(1)),a},AuthenticationContext.prototype.isCallback=function(a){a=this._getHash(a);var b=this._deserialize(a);return b.hasOwnProperty(this.CONSTANTS.ERROR_DESCRIPTION)||b.hasOwnProperty(this.CONSTANTS.ACCESS_TOKEN)||b.hasOwnProperty(this.CONSTANTS.ID_TOKEN)},AuthenticationContext.prototype.getLoginError=function(){return this._getItem(this.CONSTANTS.STORAGE.LOGIN_ERROR)},AuthenticationContext.prototype.getRequestInfo=function(a){a=this._getHash(a);var b=this._deserialize(a),c={valid:!1,parameters:{},stateMatch:!1,stateResponse:\"\",requestType:this.REQUEST_TYPE.UNKNOWN};if(b&&(c.parameters=b,b.hasOwnProperty(this.CONSTANTS.ERROR_DESCRIPTION)||b.hasOwnProperty(this.CONSTANTS.ACCESS_TOKEN)||b.hasOwnProperty(this.CONSTANTS.ID_TOKEN))){c.valid=!0;var d=\"\";if(!b.hasOwnProperty(\"state\"))return this.warn(\"No state returned\"),c;if(this.verbose(\"State: \"+b.state),d=b.state,c.stateResponse=d,this._matchState(c))return c;if(!c.stateMatch&&window.parent){c.requestType=this._requestType;for(var e=this._renewStates,f=0;f<e.length;f++)if(e[f]===c.stateResponse){c.stateMatch=!0;break}}}return c},AuthenticationContext.prototype._matchNonce=function(a){var b=this._getItem(this.CONSTANTS.STORAGE.NONCE_IDTOKEN);if(b){b=b.split(this.CONSTANTS.CACHE_DELIMETER);for(var c=0;c<b.length;c++)if(b[c]===a.profile.nonce)return!0}return!1},AuthenticationContext.prototype._matchState=function(a){var b=this._getItem(this.CONSTANTS.STORAGE.STATE_LOGIN);if(b){b=b.split(this.CONSTANTS.CACHE_DELIMETER);for(var c=0;c<b.length;c++)if(b[c]===a.stateResponse)return a.requestType=this.REQUEST_TYPE.LOGIN,a.stateMatch=!0,!0}var d=this._getItem(this.CONSTANTS.STORAGE.STATE_RENEW);if(d){d=d.split(this.CONSTANTS.CACHE_DELIMETER);for(var c=0;c<d.length;c++)if(d[c]===a.stateResponse)return a.requestType=this.REQUEST_TYPE.RENEW_TOKEN,a.stateMatch=!0,!0}return!1},AuthenticationContext.prototype._getResourceFromState=function(a){if(a){var b=a.indexOf(\"|\");if(b>-1&&b+1<a.length)return a.substring(b+1)}return\"\"},AuthenticationContext.prototype.saveTokenFromHash=function(a){this.info(\"State status:\"+a.stateMatch+\"; Request type:\"+a.requestType),this._saveItem(this.CONSTANTS.STORAGE.ERROR,\"\"),this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION,\"\");var b=this._getResourceFromState(a.stateResponse);if(a.parameters.hasOwnProperty(this.CONSTANTS.ERROR_DESCRIPTION))this.infoPii(\"Error :\"+a.parameters.error+\"; Error description:\"+a.parameters[this.CONSTANTS.ERROR_DESCRIPTION]),this._saveItem(this.CONSTANTS.STORAGE.ERROR,a.parameters.error),this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION,a.parameters[this.CONSTANTS.ERROR_DESCRIPTION]),a.requestType===this.REQUEST_TYPE.LOGIN&&(this._loginInProgress=!1,this._saveItem(this.CONSTANTS.STORAGE.LOGIN_ERROR,a.parameters.error_description));else if(a.stateMatch){this.info(\"State is right\"),a.parameters.hasOwnProperty(this.CONSTANTS.SESSION_STATE)&&this._saveItem(this.CONSTANTS.STORAGE.SESSION_STATE,a.parameters[this.CONSTANTS.SESSION_STATE]);var c;a.parameters.hasOwnProperty(this.CONSTANTS.ACCESS_TOKEN)&&(this.info(\"Fragment has access token\"),this._hasResource(b)||(c=this._getItem(this.CONSTANTS.STORAGE.TOKEN_KEYS)||\"\",this._saveItem(this.CONSTANTS.STORAGE.TOKEN_KEYS,c+b+this.CONSTANTS.RESOURCE_DELIMETER)),this._saveItem(this.CONSTANTS.STORAGE.ACCESS_TOKEN_KEY+b,a.parameters[this.CONSTANTS.ACCESS_TOKEN]),this._saveItem(this.CONSTANTS.STORAGE.EXPIRATION_KEY+b,this._expiresIn(a.parameters[this.CONSTANTS.EXPIRES_IN]))),a.parameters.hasOwnProperty(this.CONSTANTS.ID_TOKEN)&&(this.info(\"Fragment has id token\"),this._loginInProgress=!1,this._user=this._createUser(a.parameters[this.CONSTANTS.ID_TOKEN]),this._user&&this._user.profile?this._matchNonce(this._user)?(this._saveItem(this.CONSTANTS.STORAGE.IDTOKEN,a.parameters[this.CONSTANTS.ID_TOKEN]),b=this.config.loginResource?this.config.loginResource:this.config.clientId,this._hasResource(b)||(c=this._getItem(this.CONSTANTS.STORAGE.TOKEN_KEYS)||\"\",this._saveItem(this.CONSTANTS.STORAGE.TOKEN_KEYS,c+b+this.CONSTANTS.RESOURCE_DELIMETER)),this._saveItem(this.CONSTANTS.STORAGE.ACCESS_TOKEN_KEY+b,a.parameters[this.CONSTANTS.ID_TOKEN]),this._saveItem(this.CONSTANTS.STORAGE.EXPIRATION_KEY+b,this._user.profile.exp)):(this._saveItem(this.CONSTANTS.STORAGE.LOGIN_ERROR,\"Nonce received: \"+this._user.profile.nonce+\" is not same as requested: \"+this._getItem(this.CONSTANTS.STORAGE.NONCE_IDTOKEN)),this._user=null):(a.parameters.error=\"invalid id_token\",a.parameters.error_description=\"Invalid id_token. id_token: \"+a.parameters[this.CONSTANTS.ID_TOKEN],this._saveItem(this.CONSTANTS.STORAGE.ERROR,\"invalid id_token\"),this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION,\"Invalid id_token. id_token: \"+a.parameters[this.CONSTANTS.ID_TOKEN])))}else a.parameters.error=\"Invalid_state\",a.parameters.error_description=\"Invalid_state. state: \"+a.stateResponse,this._saveItem(this.CONSTANTS.STORAGE.ERROR,\"Invalid_state\"),this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION,\"Invalid_state. state: \"+a.stateResponse);this._saveItem(this.CONSTANTS.STORAGE.RENEW_STATUS+b,this.CONSTANTS.TOKEN_RENEW_STATUS_COMPLETED)},AuthenticationContext.prototype.getResourceForEndpoint=function(a){if(this.config&&this.config.anonymousEndpoints)for(var b=0;b<this.config.anonymousEndpoints.length;b++)if(a.indexOf(this.config.anonymousEndpoints[b])>-1)return null;if(this.config&&this.config.endpoints)for(var c in this.config.endpoints)if(a.indexOf(c)>-1)return this.config.endpoints[c];return a.indexOf(\"http://\")>-1||a.indexOf(\"https://\")>-1?this._getHostFromUri(a)===this._getHostFromUri(this.config.redirectUri)?this.config.loginResource:null:this.config.loginResource},AuthenticationContext.prototype._getHostFromUri=function(a){var b=String(a).replace(/^(https?:)\\/\\//,\"\");return b=b.split(\"/\")[0]},AuthenticationContext.prototype.handleWindowCallback=function(a){if(null==a&&(a=window.location.hash),this.isCallback(a)){var b=null,c=!1;this._openedWindows.length>0&&this._openedWindows[this._openedWindows.length-1].opener&&this._openedWindows[this._openedWindows.length-1].opener._adalInstance?(b=this._openedWindows[this._openedWindows.length-1].opener._adalInstance,c=!0):window.parent&&window.parent._adalInstance&&(b=window.parent._adalInstance);var d,e,f=b.getRequestInfo(a),g=null;e=c||window.parent!==window?b._callBackMappedToRenewStates[f.stateResponse]:b.callback,b.info(\"Returned from redirect url\"),b.saveTokenFromHash(f),f.requestType===this.REQUEST_TYPE.RENEW_TOKEN&&window.parent?(window.parent!==window?b.verbose(\"Window is in iframe, acquiring token silently\"):b.verbose(\"acquiring token interactive in progress\"),d=f.parameters[b.CONSTANTS.ACCESS_TOKEN]||f.parameters[b.CONSTANTS.ID_TOKEN],g=b.CONSTANTS.ACCESS_TOKEN):f.requestType===this.REQUEST_TYPE.LOGIN&&(d=f.parameters[b.CONSTANTS.ID_TOKEN],g=b.CONSTANTS.ID_TOKEN);var h=f.parameters[b.CONSTANTS.ERROR_DESCRIPTION],i=f.parameters[b.CONSTANTS.ERROR];try{e&&e(h,d,i,g)}catch(a){b.error(\"Error occurred in user defined callback function: \"+a)}window.parent!==window||c||(b.config.navigateToLoginRequestUrl?window.location.href=b._getItem(b.CONSTANTS.STORAGE.LOGIN_REQUEST):window.location.hash=\"\")}},AuthenticationContext.prototype._getNavigateUrl=function(a,b){var c=\"common\";this.config.tenant&&(c=this.config.tenant);var d=this.instance+c+\"/oauth2/authorize\"+this._serialize(a,this.config,b)+this._addLibMetadata();return this.info(\"Navigate url:\"+d),d},AuthenticationContext.prototype._extractIdToken=function(a){var b=this._decodeJwt(a);if(!b)return null;try{var c=b.JWSPayload,d=this._base64DecodeStringUrlSafe(c);return d?JSON.parse(d):(this.info(\"The returned id_token could not be base64 url safe decoded.\"),null)}catch(a){this.error(\"The returned id_token could not be decoded\",a)}return null},AuthenticationContext.prototype._base64DecodeStringUrlSafe=function(a){return a=a.replace(/-/g,\"+\").replace(/_/g,\"/\"),window.atob?decodeURIComponent(escape(window.atob(a))):decodeURIComponent(escape(this._decode(a)))},AuthenticationContext.prototype._decode=function(a){var b=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";a=String(a).replace(/=+$/,\"\");var c=a.length;if(c%4==1)throw new Error(\"The token to be decoded is not correctly encoded.\");for(var d,e,f,g,h,i,j,k,l=\"\",m=0;m<c;m+=4){if(d=b.indexOf(a.charAt(m)),e=b.indexOf(a.charAt(m+1)),f=b.indexOf(a.charAt(m+2)),g=b.indexOf(a.charAt(m+3)),m+2===c-1){h=d<<18|e<<12|f<<6,i=h>>16&255,j=h>>8&255,l+=String.fromCharCode(i,j);break}if(m+1===c-1){h=d<<18|e<<12,i=h>>16&255,l+=String.fromCharCode(i);break}h=d<<18|e<<12|f<<6|g,i=h>>16&255,j=h>>8&255,k=255&h,l+=String.fromCharCode(i,j,k)}return l},AuthenticationContext.prototype._decodeJwt=function(a){if(this._isEmpty(a))return null;var b=/^([^\\.\\s]*)\\.([^\\.\\s]+)\\.([^\\.\\s]*)$/,c=b.exec(a);return!c||c.length<4?(this.warn(\"The returned id_token is not parseable.\"),null):{header:c[1],JWSPayload:c[2],JWSSig:c[3]}},AuthenticationContext.prototype._convertUrlSafeToRegularBase64EncodedString=function(a){return a.replace(\"-\",\"+\").replace(\"_\",\"/\")},AuthenticationContext.prototype._serialize=function(a,b,c){var d=[];if(null!==b){d.push(\"?response_type=\"+a),d.push(\"client_id=\"+encodeURIComponent(b.clientId)),c&&d.push(\"resource=\"+encodeURIComponent(c)),d.push(\"redirect_uri=\"+encodeURIComponent(b.redirectUri)),d.push(\"state=\"+encodeURIComponent(b.state)),b.hasOwnProperty(\"slice\")&&d.push(\"slice=\"+encodeURIComponent(b.slice)),b.hasOwnProperty(\"extraQueryParameter\")&&d.push(b.extraQueryParameter);var e=b.correlationId?b.correlationId:this._guid();d.push(\"client-request-id=\"+encodeURIComponent(e))}return d.join(\"&\")},AuthenticationContext.prototype._deserialize=function(a){var b,c=/\\+/g,d=/([^&=]+)=([^&]*)/g,e=function(a){return decodeURIComponent(a.replace(c,\" \"))},f={};for(b=d.exec(a);b;)f[e(b[1])]=e(b[2]),b=d.exec(a);return f},AuthenticationContext.prototype._decimalToHex=function(a){for(var b=a.toString(16);b.length<2;)b=\"0\"+b;return b},AuthenticationContext.prototype._guid=function(){var a=window.crypto||window.msCrypto;if(a&&a.getRandomValues){var b=new Uint8Array(16);return a.getRandomValues(b),b[6]|=64,b[6]&=79,b[8]|=128,b[8]&=191,this._decimalToHex(b[0])+this._decimalToHex(b[1])+this._decimalToHex(b[2])+this._decimalToHex(b[3])+\"-\"+this._decimalToHex(b[4])+this._decimalToHex(b[5])+\"-\"+this._decimalToHex(b[6])+this._decimalToHex(b[7])+\"-\"+this._decimalToHex(b[8])+this._decimalToHex(b[9])+\"-\"+this._decimalToHex(b[10])+this._decimalToHex(b[11])+this._decimalToHex(b[12])+this._decimalToHex(b[13])+this._decimalToHex(b[14])+this._decimalToHex(b[15])}for(var c=\"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\",d=\"0123456789abcdef\",e=0,f=\"\",g=0;g<36;g++)\"-\"!==c[g]&&\"4\"!==c[g]&&(e=16*Math.random()|0),\"x\"===c[g]?f+=d[e]:\"y\"===c[g]?(e&=3,e|=8,f+=d[e]):f+=c[g];return f},AuthenticationContext.prototype._expiresIn=function(a){return a||(a=3599),this._now()+parseInt(a,10)},AuthenticationContext.prototype._now=function(){return Math.round((new Date).getTime()/1e3)},AuthenticationContext.prototype._addAdalFrame=function(a){if(void 0!==a){this.info(\"Add adal frame to document:\"+a);var b=document.getElementById(a);if(!b){if(document.createElement&&document.documentElement&&(window.opera||-1===window.navigator.userAgent.indexOf(\"MSIE 5.0\"))){var c=document.createElement(\"iframe\");c.setAttribute(\"id\",a),c.setAttribute(\"aria-hidden\",\"true\"),c.style.visibility=\"hidden\",c.style.position=\"absolute\",c.style.width=c.style.height=c.borderWidth=\"0px\",b=document.getElementsByTagName(\"body\")[0].appendChild(c)}else document.body&&document.body.insertAdjacentHTML&&document.body.insertAdjacentHTML(\"beforeEnd\",'<iframe name=\"'+a+'\" id=\"'+a+'\" style=\"display:none\"></iframe>');window.frames&&window.frames[a]&&(b=window.frames[a])}return b}},AuthenticationContext.prototype._saveItem=function(a,b,c){if(this.config&&this.config.cacheLocation&&\"localStorage\"===this.config.cacheLocation){if(!this._supportsLocalStorage())return this.info(\"Local storage is not supported\"),!1;if(c){var d=this._getItem(a)||\"\";localStorage.setItem(a,d+b+this.CONSTANTS.CACHE_DELIMETER)}else localStorage.setItem(a,b);return!0}return this._supportsSessionStorage()?(sessionStorage.setItem(a,b),!0):(this.info(\"Session storage is not supported\"),!1)},AuthenticationContext.prototype._getItem=function(a){return this.config&&this.config.cacheLocation&&\"localStorage\"===this.config.cacheLocation?this._supportsLocalStorage()?localStorage.getItem(a):(this.info(\"Local storage is not supported\"),null):this._supportsSessionStorage()?sessionStorage.getItem(a):(this.info(\"Session storage is not supported\"),null)},AuthenticationContext.prototype._supportsLocalStorage=function(){try{return!!window.localStorage&&(window.localStorage.setItem(\"storageTest\",\"A\"),\"A\"==window.localStorage.getItem(\"storageTest\")&&(window.localStorage.removeItem(\"storageTest\"),!window.localStorage.getItem(\"storageTest\")))}catch(a){return!1}},AuthenticationContext.prototype._supportsSessionStorage=function(){try{return!!window.sessionStorage&&(window.sessionStorage.setItem(\"storageTest\",\"A\"),\"A\"==window.sessionStorage.getItem(\"storageTest\")&&(window.sessionStorage.removeItem(\"storageTest\"),!window.sessionStorage.getItem(\"storageTest\")))}catch(a){return!1}},AuthenticationContext.prototype._cloneConfig=function(a){if(null===a||\"object\"!=typeof a)return a;var b={};for(var c in a)a.hasOwnProperty(c)&&(b[c]=a[c]);return b},AuthenticationContext.prototype._addLibMetadata=function(){return\"&x-client-SKU=Js&x-client-Ver=\"+this._libVersion()},AuthenticationContext.prototype.log=function(a,b,c,d){if(a<=Logging.level){if(!Logging.piiLoggingEnabled&&d)return;var e=(new Date).toUTCString(),f=\"\";f=this.config.correlationId?e+\":\"+this.config.correlationId+\"-\"+this._libVersion()+\"-\"+this.CONSTANTS.LEVEL_STRING_MAP[a]+\" \"+b:e+\":\"+this._libVersion()+\"-\"+this.CONSTANTS.LEVEL_STRING_MAP[a]+\" \"+b,c&&(f+=\"\\nstack:\\n\"+c.stack),Logging.log(f)}},AuthenticationContext.prototype.error=function(a,b){this.log(this.CONSTANTS.LOGGING_LEVEL.ERROR,a,b)},AuthenticationContext.prototype.warn=function(a){this.log(this.CONSTANTS.LOGGING_LEVEL.WARN,a,null)},AuthenticationContext.prototype.info=function(a){\r\nthis.log(this.CONSTANTS.LOGGING_LEVEL.INFO,a,null)},AuthenticationContext.prototype.verbose=function(a){this.log(this.CONSTANTS.LOGGING_LEVEL.VERBOSE,a,null)},AuthenticationContext.prototype.errorPii=function(a,b){this.log(this.CONSTANTS.LOGGING_LEVEL.ERROR,a,b,!0)},AuthenticationContext.prototype.warnPii=function(a){this.log(this.CONSTANTS.LOGGING_LEVEL.WARN,a,null,!0)},AuthenticationContext.prototype.infoPii=function(a){this.log(this.CONSTANTS.LOGGING_LEVEL.INFO,a,null,!0)},AuthenticationContext.prototype.verbosePii=function(a){this.log(this.CONSTANTS.LOGGING_LEVEL.VERBOSE,a,null,!0)},AuthenticationContext.prototype._libVersion=function(){return\"1.0.17\"},\"undefined\"!=typeof module&&module.exports&&(module.exports=AuthenticationContext,module.exports.inject=function(a){return new AuthenticationContext(a)}),AuthenticationContext}();","/**\r\n * Class used to subscribe ILogListener and log messages throughout an application\r\n *\r\n */\r\nvar Logger = /** @class */ (function () {\r\n    function Logger() {\r\n    }\r\n    Object.defineProperty(Logger, \"activeLogLevel\", {\r\n        /**\r\n         * Gets or sets the active log level to apply for log filtering\r\n         */\r\n        get: function () {\r\n            return Logger.instance.activeLogLevel;\r\n        },\r\n        set: function (value) {\r\n            Logger.instance.activeLogLevel = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Logger, \"instance\", {\r\n        get: function () {\r\n            if (Logger._instance === undefined || Logger._instance === null) {\r\n                Logger._instance = new LoggerImpl();\r\n            }\r\n            return Logger._instance;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Adds ILogListener instances to the set of subscribed listeners\r\n     *\r\n     * @param listeners One or more listeners to subscribe to this log\r\n     */\r\n    Logger.subscribe = function () {\r\n        var listeners = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            listeners[_i] = arguments[_i];\r\n        }\r\n        listeners.map(function (listener) { return Logger.instance.subscribe(listener); });\r\n    };\r\n    /**\r\n     * Clears the subscribers collection, returning the collection before modifiction\r\n     */\r\n    Logger.clearSubscribers = function () {\r\n        return Logger.instance.clearSubscribers();\r\n    };\r\n    Object.defineProperty(Logger, \"count\", {\r\n        /**\r\n         * Gets the current subscriber count\r\n         */\r\n        get: function () {\r\n            return Logger.instance.count;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Writes the supplied string to the subscribed listeners\r\n     *\r\n     * @param message The message to write\r\n     * @param level [Optional] if supplied will be used as the level of the entry (Default: LogLevel.Info)\r\n     */\r\n    Logger.write = function (message, level) {\r\n        if (level === void 0) { level = 1 /* Info */; }\r\n        Logger.instance.log({ level: level, message: message });\r\n    };\r\n    /**\r\n     * Writes the supplied string to the subscribed listeners\r\n     *\r\n     * @param json The json object to stringify and write\r\n     * @param level [Optional] if supplied will be used as the level of the entry (Default: LogLevel.Info)\r\n     */\r\n    Logger.writeJSON = function (json, level) {\r\n        if (level === void 0) { level = 1 /* Info */; }\r\n        this.write(JSON.stringify(json), level);\r\n    };\r\n    /**\r\n     * Logs the supplied entry to the subscribed listeners\r\n     *\r\n     * @param entry The message to log\r\n     */\r\n    Logger.log = function (entry) {\r\n        Logger.instance.log(entry);\r\n    };\r\n    /**\r\n     * Logs an error object to the subscribed listeners\r\n     *\r\n     * @param err The error object\r\n     */\r\n    Logger.error = function (err) {\r\n        Logger.instance.log({ data: err, level: 3 /* Error */, message: err.message });\r\n    };\r\n    return Logger;\r\n}());\r\nexport { Logger };\r\nvar LoggerImpl = /** @class */ (function () {\r\n    function LoggerImpl(activeLogLevel, subscribers) {\r\n        if (activeLogLevel === void 0) { activeLogLevel = 2 /* Warning */; }\r\n        if (subscribers === void 0) { subscribers = []; }\r\n        this.activeLogLevel = activeLogLevel;\r\n        this.subscribers = subscribers;\r\n    }\r\n    LoggerImpl.prototype.subscribe = function (listener) {\r\n        this.subscribers.push(listener);\r\n    };\r\n    LoggerImpl.prototype.clearSubscribers = function () {\r\n        var s = this.subscribers.slice(0);\r\n        this.subscribers.length = 0;\r\n        return s;\r\n    };\r\n    Object.defineProperty(LoggerImpl.prototype, \"count\", {\r\n        get: function () {\r\n            return this.subscribers.length;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    LoggerImpl.prototype.write = function (message, level) {\r\n        if (level === void 0) { level = 1 /* Info */; }\r\n        this.log({ level: level, message: message });\r\n    };\r\n    LoggerImpl.prototype.log = function (entry) {\r\n        if (entry !== undefined && this.activeLogLevel <= entry.level) {\r\n            this.subscribers.map(function (subscriber) { return subscriber.log(entry); });\r\n        }\r\n    };\r\n    return LoggerImpl;\r\n}());\r\n//# sourceMappingURL=logger.js.map","/**\r\n * A set of logging levels\r\n */\r\nexport var LogLevel;\r\n(function (LogLevel) {\r\n    LogLevel[LogLevel[\"Verbose\"] = 0] = \"Verbose\";\r\n    LogLevel[LogLevel[\"Info\"] = 1] = \"Info\";\r\n    LogLevel[LogLevel[\"Warning\"] = 2] = \"Warning\";\r\n    LogLevel[LogLevel[\"Error\"] = 3] = \"Error\";\r\n    LogLevel[LogLevel[\"Off\"] = 99] = \"Off\";\r\n})(LogLevel || (LogLevel = {}));\r\n//# sourceMappingURL=loglevel.js.map","/**\r\n * Implementation of LogListener which logs to the console\r\n *\r\n */\r\nvar ConsoleListener = /** @class */ (function () {\r\n    function ConsoleListener() {\r\n    }\r\n    /**\r\n     * Any associated data that a given logging listener may choose to log or ignore\r\n     *\r\n     * @param entry The information to be logged\r\n     */\r\n    ConsoleListener.prototype.log = function (entry) {\r\n        var msg = this.format(entry);\r\n        switch (entry.level) {\r\n            case 0 /* Verbose */:\r\n            case 1 /* Info */:\r\n                console.log(msg);\r\n                break;\r\n            case 2 /* Warning */:\r\n                console.warn(msg);\r\n                break;\r\n            case 3 /* Error */:\r\n                console.error(msg);\r\n                break;\r\n        }\r\n    };\r\n    /**\r\n     * Formats the message\r\n     *\r\n     * @param entry The information to format into a string\r\n     */\r\n    ConsoleListener.prototype.format = function (entry) {\r\n        var msg = [];\r\n        msg.push(\"Message: \" + entry.message);\r\n        if (entry.data !== undefined) {\r\n            try {\r\n                msg.push(\" Data: \" + JSON.stringify(entry.data));\r\n            }\r\n            catch (e) {\r\n                msg.push(\" Data: Error in stringify of supplied data \" + e);\r\n            }\r\n        }\r\n        return msg.join(\"\");\r\n    };\r\n    return ConsoleListener;\r\n}());\r\nexport { ConsoleListener };\r\n/**\r\n * Implementation of LogListener which logs to the supplied function\r\n *\r\n */\r\nvar FunctionListener = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of the FunctionListener class\r\n     *\r\n     * @constructor\r\n     * @param  method The method to which any logging data will be passed\r\n     */\r\n    function FunctionListener(method) {\r\n        this.method = method;\r\n    }\r\n    /**\r\n     * Any associated data that a given logging listener may choose to log or ignore\r\n     *\r\n     * @param entry The information to be logged\r\n     */\r\n    FunctionListener.prototype.log = function (entry) {\r\n        this.method(entry);\r\n    };\r\n    return FunctionListener;\r\n}());\r\nexport { FunctionListener };\r\n//# sourceMappingURL=listeners.js.map","import { mergeMaps, objectToMap, jsS } from \"@pnp/common\";\r\n/**\r\n * Class used to manage the current application settings\r\n *\r\n */\r\nvar Settings = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of the settings class\r\n     *\r\n     * @constructor\r\n     */\r\n    function Settings(_settings) {\r\n        if (_settings === void 0) { _settings = new Map(); }\r\n        this._settings = _settings;\r\n    }\r\n    /**\r\n     * Adds a new single setting, or overwrites a previous setting with the same key\r\n     *\r\n     * @param {string} key The key used to store this setting\r\n     * @param {string} value The setting value to store\r\n     */\r\n    Settings.prototype.add = function (key, value) {\r\n        this._settings.set(key, value);\r\n    };\r\n    /**\r\n     * Adds a JSON value to the collection as a string, you must use getJSON to rehydrate the object when read\r\n     *\r\n     * @param {string} key The key used to store this setting\r\n     * @param {any} value The setting value to store\r\n     */\r\n    Settings.prototype.addJSON = function (key, value) {\r\n        this._settings.set(key, jsS(value));\r\n    };\r\n    /**\r\n     * Applies the supplied hash to the setting collection overwriting any existing value, or created new values\r\n     *\r\n     * @param {TypedHash<any>} hash The set of values to add\r\n     */\r\n    Settings.prototype.apply = function (hash) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            try {\r\n                _this._settings = mergeMaps(_this._settings, objectToMap(hash));\r\n                resolve();\r\n            }\r\n            catch (e) {\r\n                reject(e);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Loads configuration settings into the collection from the supplied provider and returns a Promise\r\n     *\r\n     * @param {IConfigurationProvider} provider The provider from which we will load the settings\r\n     */\r\n    Settings.prototype.load = function (provider) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            provider.getConfiguration().then(function (value) {\r\n                _this._settings = mergeMaps(_this._settings, objectToMap(value));\r\n                resolve();\r\n            }).catch(reject);\r\n        });\r\n    };\r\n    /**\r\n     * Gets a value from the configuration\r\n     *\r\n     * @param {string} key The key whose value we want to return. Returns null if the key does not exist\r\n     * @return {string} string value from the configuration\r\n     */\r\n    Settings.prototype.get = function (key) {\r\n        return this._settings.get(key) || null;\r\n    };\r\n    /**\r\n     * Gets a JSON value, rehydrating the stored string to the original object\r\n     *\r\n     * @param {string} key The key whose value we want to return. Returns null if the key does not exist\r\n     * @return {any} object from the configuration\r\n     */\r\n    Settings.prototype.getJSON = function (key) {\r\n        var o = this.get(key);\r\n        if (o === undefined || o === null) {\r\n            return o;\r\n        }\r\n        return JSON.parse(o);\r\n    };\r\n    return Settings;\r\n}());\r\nexport { Settings };\r\n//# sourceMappingURL=configuration.js.map","import { PnPClientStorage } from \"@pnp/common\";\r\n/**\r\n * A caching provider which can wrap other non-caching providers\r\n *\r\n */\r\nvar CachingConfigurationProvider = /** @class */ (function () {\r\n    /**\r\n     * Creates a new caching configuration provider\r\n     * @constructor\r\n     * @param {IConfigurationProvider} wrappedProvider Provider which will be used to fetch the configuration\r\n     * @param {string} cacheKey Key that will be used to store cached items to the cache\r\n     * @param {IPnPClientStore} cacheStore OPTIONAL storage, which will be used to store cached settings.\r\n     */\r\n    function CachingConfigurationProvider(wrappedProvider, cacheKey, cacheStore) {\r\n        this.wrappedProvider = wrappedProvider;\r\n        this.cacheKey = cacheKey;\r\n        this.wrappedProvider = wrappedProvider;\r\n        this.store = (cacheStore) ? cacheStore : this.selectPnPCache();\r\n    }\r\n    /**\r\n     * Gets the wrapped configuration providers\r\n     *\r\n     * @return {IConfigurationProvider} Wrapped configuration provider\r\n     */\r\n    CachingConfigurationProvider.prototype.getWrappedProvider = function () {\r\n        return this.wrappedProvider;\r\n    };\r\n    /**\r\n     * Loads the configuration values either from the cache or from the wrapped provider\r\n     *\r\n     * @return {Promise<TypedHash<string>>} Promise of loaded configuration values\r\n     */\r\n    CachingConfigurationProvider.prototype.getConfiguration = function () {\r\n        var _this = this;\r\n        // Cache not available, pass control to the wrapped provider\r\n        if ((!this.store) || (!this.store.enabled)) {\r\n            return this.wrappedProvider.getConfiguration();\r\n        }\r\n        return this.store.getOrPut(this.cacheKey, function () {\r\n            return _this.wrappedProvider.getConfiguration().then(function (providedConfig) {\r\n                _this.store.put(_this.cacheKey, providedConfig);\r\n                return providedConfig;\r\n            });\r\n        });\r\n    };\r\n    CachingConfigurationProvider.prototype.selectPnPCache = function () {\r\n        var pnpCache = new PnPClientStorage();\r\n        if ((pnpCache.local) && (pnpCache.local.enabled)) {\r\n            return pnpCache.local;\r\n        }\r\n        if ((pnpCache.session) && (pnpCache.session.enabled)) {\r\n            return pnpCache.session;\r\n        }\r\n        throw Error(\"Cannot create a caching configuration provider since cache is not available.\");\r\n    };\r\n    return CachingConfigurationProvider;\r\n}());\r\nexport default CachingConfigurationProvider;\r\n//# sourceMappingURL=cachingConfigurationProvider.js.map","import { default as CachingConfigurationProvider } from \"./cachingConfigurationProvider\";\r\n/**\r\n * A configuration provider which loads configuration values from a SharePoint list\r\n *\r\n */\r\nvar SPListConfigurationProvider = /** @class */ (function () {\r\n    /**\r\n     * Creates a new SharePoint list based configuration provider\r\n     * @constructor\r\n     * @param {string} webUrl Url of the SharePoint site, where the configuration list is located\r\n     * @param {string} listTitle Title of the SharePoint list, which contains the configuration settings (optional, default: \"config\")\r\n     * @param {string} keyFieldName The name of the field in the list to use as the setting key (optional, default: \"Title\")\r\n     * @param {string} valueFieldName The name of the field in the list to use as the setting value (optional, default: \"Value\")\r\n     */\r\n    function SPListConfigurationProvider(web, listTitle, keyFieldName, valueFieldName) {\r\n        if (listTitle === void 0) { listTitle = \"config\"; }\r\n        if (keyFieldName === void 0) { keyFieldName = \"Title\"; }\r\n        if (valueFieldName === void 0) { valueFieldName = \"Value\"; }\r\n        this.web = web;\r\n        this.listTitle = listTitle;\r\n        this.keyFieldName = keyFieldName;\r\n        this.valueFieldName = valueFieldName;\r\n    }\r\n    /**\r\n     * Loads the configuration values from the SharePoint list\r\n     *\r\n     * @return {Promise<TypedHash<string>>} Promise of loaded configuration values\r\n     */\r\n    SPListConfigurationProvider.prototype.getConfiguration = function () {\r\n        var _this = this;\r\n        return this.web.lists.getByTitle(this.listTitle).items.select(this.keyFieldName, this.valueFieldName).get()\r\n            .then(function (data) { return data.reduce(function (c, item) {\r\n            c[item[_this.keyFieldName]] = item[_this.valueFieldName];\r\n            return c;\r\n        }, {}); });\r\n    };\r\n    /**\r\n     * Wraps the current provider in a cache enabled provider\r\n     *\r\n     * @return {CachingConfigurationProvider} Caching providers which wraps the current provider\r\n     */\r\n    SPListConfigurationProvider.prototype.asCaching = function (cacheKey) {\r\n        if (cacheKey === void 0) { cacheKey = \"pnp_configcache_splist_\" + this.web.toUrl() + \"+\" + this.listTitle; }\r\n        return new CachingConfigurationProvider(this, cacheKey);\r\n    };\r\n    return SPListConfigurationProvider;\r\n}());\r\nexport default SPListConfigurationProvider;\r\n//# sourceMappingURL=spListConfigurationProvider.js.map","import { RuntimeConfig, dateAdd, PnPClientStorage } from \"@pnp/common\";\r\nvar CachingOptions = /** @class */ (function () {\r\n    function CachingOptions(key) {\r\n        this.key = key;\r\n        this.expiration = dateAdd(new Date(), \"second\", RuntimeConfig.defaultCachingTimeoutSeconds);\r\n        this.storeName = RuntimeConfig.defaultCachingStore;\r\n    }\r\n    Object.defineProperty(CachingOptions.prototype, \"store\", {\r\n        get: function () {\r\n            if (this.storeName === \"local\") {\r\n                return CachingOptions.storage.local;\r\n            }\r\n            else {\r\n                return CachingOptions.storage.session;\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    CachingOptions.storage = new PnPClientStorage();\r\n    return CachingOptions;\r\n}());\r\nexport { CachingOptions };\r\nvar CachingParserWrapper = /** @class */ (function () {\r\n    function CachingParserWrapper(parser, cacheOptions) {\r\n        this.parser = parser;\r\n        this.cacheOptions = cacheOptions;\r\n    }\r\n    CachingParserWrapper.prototype.parse = function (response) {\r\n        var _this = this;\r\n        return this.parser.parse(response).then(function (r) { return _this.cacheData(r); });\r\n    };\r\n    CachingParserWrapper.prototype.cacheData = function (data) {\r\n        if (this.cacheOptions.store !== null) {\r\n            this.cacheOptions.store.put(this.cacheOptions.key, data, this.cacheOptions.expiration);\r\n        }\r\n        return data;\r\n    };\r\n    return CachingParserWrapper;\r\n}());\r\nexport { CachingParserWrapper };\r\n//# sourceMappingURL=caching.js.map","import * as tslib_1 from \"tslib\";\r\nimport { isFunc, hOP } from \"@pnp/common\";\r\nvar HttpRequestError = /** @class */ (function (_super) {\r\n    tslib_1.__extends(HttpRequestError, _super);\r\n    function HttpRequestError(message, response, status, statusText) {\r\n        if (status === void 0) { status = response.status; }\r\n        if (statusText === void 0) { statusText = response.statusText; }\r\n        var _this = _super.call(this, message) || this;\r\n        _this.response = response;\r\n        _this.status = status;\r\n        _this.statusText = statusText;\r\n        _this.isHttpRequestError = true;\r\n        return _this;\r\n    }\r\n    HttpRequestError.init = function (r) {\r\n        return r.clone().text().then(function (t) {\r\n            return new HttpRequestError(\"Error making HttpClient request in queryable [\" + r.status + \"] \" + r.statusText + \" ::> \" + t, r.clone());\r\n        });\r\n    };\r\n    return HttpRequestError;\r\n}(Error));\r\nexport { HttpRequestError };\r\nvar ODataParserBase = /** @class */ (function () {\r\n    function ODataParserBase() {\r\n        this.rawJson = {};\r\n    }\r\n    ODataParserBase.prototype.parse = function (r) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            if (_this.handleError(r, reject)) {\r\n                _this.parseImpl(r, resolve, reject);\r\n            }\r\n        });\r\n    };\r\n    ODataParserBase.prototype.parseImpl = function (r, resolve, reject) {\r\n        var _this = this;\r\n        if ((r.headers.has(\"Content-Length\") && parseFloat(r.headers.get(\"Content-Length\")) === 0) || r.status === 204) {\r\n            resolve({});\r\n        }\r\n        else {\r\n            // patch to handle cases of 200 response with no or whitespace only bodies (#487 & #545)\r\n            r.text()\r\n                .then(function (txt) { return txt.replace(/\\s/ig, \"\").length > 0 ? JSON.parse(txt) : {}; })\r\n                .then(function (json) { return resolve(_this.parseODataJSON(json)); })\r\n                .catch(function (e) { return reject(e); });\r\n        }\r\n    };\r\n    /**\r\n     * Handles a response with ok === false by parsing the body and creating a ProcessHttpClientResponseException\r\n     * which is passed to the reject delegate. This method returns true if there is no error, otherwise false\r\n     *\r\n     * @param r Current response object\r\n     * @param reject reject delegate for the surrounding promise\r\n     */\r\n    ODataParserBase.prototype.handleError = function (r, reject) {\r\n        if (!r.ok) {\r\n            HttpRequestError.init(r).then(reject);\r\n        }\r\n        return r.ok;\r\n    };\r\n    /**\r\n     * Normalizes the json response by removing the various nested levels\r\n     *\r\n     * @param json json object to parse\r\n     */\r\n    ODataParserBase.prototype.parseODataJSON = function (json) {\r\n        this.rawJson = json;\r\n        var result = json;\r\n        if (hOP(json, \"d\")) {\r\n            if (hOP(json.d, \"results\")) {\r\n                result = json.d.results;\r\n            }\r\n            else {\r\n                result = json.d;\r\n            }\r\n        }\r\n        else if (hOP(json, \"value\")) {\r\n            result = json.value;\r\n        }\r\n        return result;\r\n    };\r\n    return ODataParserBase;\r\n}());\r\nexport { ODataParserBase };\r\nvar ODataDefaultParser = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ODataDefaultParser, _super);\r\n    function ODataDefaultParser() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    return ODataDefaultParser;\r\n}(ODataParserBase));\r\nexport { ODataDefaultParser };\r\nvar TextParser = /** @class */ (function (_super) {\r\n    tslib_1.__extends(TextParser, _super);\r\n    function TextParser() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    TextParser.prototype.parseImpl = function (r, resolve) {\r\n        r.text().then(resolve);\r\n    };\r\n    return TextParser;\r\n}(ODataParserBase));\r\nexport { TextParser };\r\nvar BlobParser = /** @class */ (function (_super) {\r\n    tslib_1.__extends(BlobParser, _super);\r\n    function BlobParser() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    BlobParser.prototype.parseImpl = function (r, resolve) {\r\n        r.blob().then(resolve);\r\n    };\r\n    return BlobParser;\r\n}(ODataParserBase));\r\nexport { BlobParser };\r\nvar JSONParser = /** @class */ (function (_super) {\r\n    tslib_1.__extends(JSONParser, _super);\r\n    function JSONParser() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    JSONParser.prototype.parseImpl = function (r, resolve) {\r\n        r.json().then(resolve);\r\n    };\r\n    return JSONParser;\r\n}(ODataParserBase));\r\nexport { JSONParser };\r\nvar BufferParser = /** @class */ (function (_super) {\r\n    tslib_1.__extends(BufferParser, _super);\r\n    function BufferParser() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    BufferParser.prototype.parseImpl = function (r, resolve) {\r\n        if (isFunc(r.arrayBuffer)) {\r\n            r.arrayBuffer().then(resolve);\r\n        }\r\n        else {\r\n            r.buffer().then(resolve);\r\n        }\r\n    };\r\n    return BufferParser;\r\n}(ODataParserBase));\r\nexport { BufferParser };\r\nvar LambdaParser = /** @class */ (function (_super) {\r\n    tslib_1.__extends(LambdaParser, _super);\r\n    function LambdaParser(parser) {\r\n        var _this = _super.call(this) || this;\r\n        _this.parser = parser;\r\n        return _this;\r\n    }\r\n    LambdaParser.prototype.parseImpl = function (r, resolve) {\r\n        this.parser(r).then(resolve);\r\n    };\r\n    return LambdaParser;\r\n}(ODataParserBase));\r\nexport { LambdaParser };\r\n//# sourceMappingURL=parsers.js.map","import * as tslib_1 from \"tslib\";\r\nimport { extend, isFunc, hOP } from \"@pnp/common\";\r\nimport { Logger } from \"@pnp/logging\";\r\nimport { CachingOptions, CachingParserWrapper } from \"./caching\";\r\n/**\r\n * Resolves the context's result value\r\n *\r\n * @param context The current context\r\n */\r\nfunction returnResult(context) {\r\n    Logger.log({\r\n        data: Logger.activeLogLevel === 0 /* Verbose */ ? context.result : {},\r\n        level: 1 /* Info */,\r\n        message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Returning result from pipeline. Set logging to verbose to see data.\",\r\n    });\r\n    return Promise.resolve(context.result);\r\n}\r\n/**\r\n * Sets the result on the context\r\n */\r\nexport function setResult(context, value) {\r\n    return new Promise(function (resolve) {\r\n        context.result = value;\r\n        context.hasResult = true;\r\n        resolve(context);\r\n    });\r\n}\r\n/**\r\n * Invokes the next method in the provided context's pipeline\r\n *\r\n * @param c The current request context\r\n */\r\nfunction next(c) {\r\n    if (c.pipeline.length > 0) {\r\n        return c.pipeline.shift()(c);\r\n    }\r\n    else {\r\n        return Promise.resolve(c);\r\n    }\r\n}\r\n/**\r\n * Executes the current request context's pipeline\r\n *\r\n * @param context Current context\r\n */\r\nexport function pipe(context) {\r\n    if (context.pipeline.length < 1) {\r\n        Logger.write(\"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Request pipeline contains no methods!\", 2 /* Warning */);\r\n    }\r\n    var promise = next(context).then(function (ctx) { return returnResult(ctx); }).catch(function (e) {\r\n        Logger.error(e);\r\n        throw e;\r\n    });\r\n    if (context.isBatched) {\r\n        // this will block the batch's execute method from returning until the child requets have been resolved\r\n        context.batch.addResolveBatchDependency(promise);\r\n    }\r\n    return promise;\r\n}\r\n/**\r\n * decorator factory applied to methods in the pipeline to control behavior\r\n */\r\nexport function requestPipelineMethod(alwaysRun) {\r\n    if (alwaysRun === void 0) { alwaysRun = false; }\r\n    return function (target, propertyKey, descriptor) {\r\n        var method = descriptor.value;\r\n        descriptor.value = function () {\r\n            var args = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                args[_i] = arguments[_i];\r\n            }\r\n            // if we have a result already in the pipeline, pass it along and don't call the tagged method\r\n            if (!alwaysRun && args.length > 0 && hOP(args[0], \"hasResult\") && args[0].hasResult) {\r\n                Logger.write(\"[\" + args[0].requestId + \"] (\" + (new Date()).getTime() + \") Skipping request pipeline method \" + propertyKey + \", existing result in pipeline.\", 0 /* Verbose */);\r\n                return Promise.resolve(args[0]);\r\n            }\r\n            // apply the tagged method\r\n            Logger.write(\"[\" + args[0].requestId + \"] (\" + (new Date()).getTime() + \") Calling request pipeline method \" + propertyKey + \".\", 0 /* Verbose */);\r\n            // then chain the next method in the context's pipeline - allows for dynamic pipeline\r\n            return method.apply(target, args).then(function (ctx) { return next(ctx); });\r\n        };\r\n    };\r\n}\r\n/**\r\n * Contains the methods used within the request pipeline\r\n */\r\nvar PipelineMethods = /** @class */ (function () {\r\n    function PipelineMethods() {\r\n    }\r\n    /**\r\n     * Logs the start of the request\r\n     */\r\n    PipelineMethods.logStart = function (context) {\r\n        return new Promise(function (resolve) {\r\n            Logger.log({\r\n                data: Logger.activeLogLevel === 1 /* Info */ ? {} : context,\r\n                level: 1 /* Info */,\r\n                message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Beginning \" + context.verb + \" request (\" + context.requestAbsoluteUrl + \")\",\r\n            });\r\n            resolve(context);\r\n        });\r\n    };\r\n    /**\r\n     * Handles caching of the request\r\n     */\r\n    PipelineMethods.caching = function (context) {\r\n        return new Promise(function (resolve) {\r\n            // handle caching, if applicable\r\n            if (context.isCached) {\r\n                Logger.write(\"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Caching is enabled for request, checking cache...\", 1 /* Info */);\r\n                var cacheOptions = new CachingOptions(context.requestAbsoluteUrl.toLowerCase());\r\n                if (context.cachingOptions !== undefined) {\r\n                    cacheOptions = extend(cacheOptions, context.cachingOptions);\r\n                }\r\n                // we may not have a valid store\r\n                if (cacheOptions.store !== null) {\r\n                    // check if we have the data in cache and if so resolve the promise and return\r\n                    var data = cacheOptions.store.get(cacheOptions.key);\r\n                    if (data !== null) {\r\n                        // ensure we clear any held batch dependency we are resolving from the cache\r\n                        Logger.log({\r\n                            data: Logger.activeLogLevel === 1 /* Info */ ? {} : data,\r\n                            level: 1 /* Info */,\r\n                            message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Value returned from cache.\",\r\n                        });\r\n                        if (isFunc(context.batchDependency)) {\r\n                            context.batchDependency();\r\n                        }\r\n                        // handle the case where a parser needs to take special actions with a cached result\r\n                        if (hOP(context.parser, \"hydrate\")) {\r\n                            data = context.parser.hydrate(data);\r\n                        }\r\n                        return setResult(context, data).then(function (ctx) { return resolve(ctx); });\r\n                    }\r\n                }\r\n                Logger.write(\"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Value not found in cache.\", 1 /* Info */);\r\n                // if we don't then wrap the supplied parser in the caching parser wrapper\r\n                // and send things on their way\r\n                context.parser = new CachingParserWrapper(context.parser, cacheOptions);\r\n            }\r\n            return resolve(context);\r\n        });\r\n    };\r\n    /**\r\n     * Sends the request\r\n     */\r\n    PipelineMethods.send = function (context) {\r\n        return new Promise(function (resolve, reject) {\r\n            // send or batch the request\r\n            if (context.isBatched) {\r\n                // we are in a batch, so add to batch, remove dependency, and resolve with the batch's promise\r\n                var p = context.batch.add(context.requestAbsoluteUrl, context.verb, context.options, context.parser, context.requestId);\r\n                // we release the dependency here to ensure the batch does not execute until the request is added to the batch\r\n                if (isFunc(context.batchDependency)) {\r\n                    context.batchDependency();\r\n                }\r\n                Logger.write(\"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Batching request in batch \" + context.batch.batchId + \".\", 1 /* Info */);\r\n                // we set the result as the promise which will be resolved by the batch's execution\r\n                resolve(setResult(context, p));\r\n            }\r\n            else {\r\n                Logger.write(\"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Sending request.\", 1 /* Info */);\r\n                // we are not part of a batch, so proceed as normal\r\n                var client = context.clientFactory();\r\n                var opts = extend(context.options || {}, { method: context.verb });\r\n                client.fetch(context.requestAbsoluteUrl, opts)\r\n                    .then(function (response) { return context.parser.parse(response); })\r\n                    .then(function (result) { return setResult(context, result); })\r\n                    .then(function (ctx) { return resolve(ctx); })\r\n                    .catch(function (e) { return reject(e); });\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Logs the end of the request\r\n     */\r\n    PipelineMethods.logEnd = function (context) {\r\n        return new Promise(function (resolve) {\r\n            if (context.isBatched) {\r\n                Logger.log({\r\n                    data: Logger.activeLogLevel === 1 /* Info */ ? {} : context,\r\n                    level: 1 /* Info */,\r\n                    message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") \" + context.verb + \" request will complete in batch \" + context.batch.batchId + \".\",\r\n                });\r\n            }\r\n            else {\r\n                Logger.log({\r\n                    data: Logger.activeLogLevel === 1 /* Info */ ? {} : context,\r\n                    level: 1 /* Info */,\r\n                    message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Completing \" + context.verb + \" request.\",\r\n                });\r\n            }\r\n            resolve(context);\r\n        });\r\n    };\r\n    tslib_1.__decorate([\r\n        requestPipelineMethod(true)\r\n    ], PipelineMethods, \"logStart\", null);\r\n    tslib_1.__decorate([\r\n        requestPipelineMethod()\r\n    ], PipelineMethods, \"caching\", null);\r\n    tslib_1.__decorate([\r\n        requestPipelineMethod()\r\n    ], PipelineMethods, \"send\", null);\r\n    tslib_1.__decorate([\r\n        requestPipelineMethod(true)\r\n    ], PipelineMethods, \"logEnd\", null);\r\n    return PipelineMethods;\r\n}());\r\nexport { PipelineMethods };\r\nexport function getDefaultPipeline() {\r\n    return [\r\n        PipelineMethods.logStart,\r\n        PipelineMethods.caching,\r\n        PipelineMethods.send,\r\n        PipelineMethods.logEnd,\r\n    ].slice(0);\r\n}\r\n//# sourceMappingURL=pipeline.js.map","import * as tslib_1 from \"tslib\";\r\nimport { combine, RuntimeConfig, mergeOptions, objectDefinedNotNull, isArray, } from \"@pnp/common\";\r\nimport { ODataDefaultParser, JSONParser } from \"./parsers\";\r\nimport { getDefaultPipeline, pipe, } from \"./pipeline\";\r\nvar Queryable = /** @class */ (function () {\r\n    function Queryable() {\r\n        this._query = new Map();\r\n        this._options = {};\r\n        this._url = \"\";\r\n        this._parentUrl = \"\";\r\n        this._useCaching = false;\r\n        this._cachingOptions = null;\r\n        this._cloneParentWasCaching = false;\r\n        this._cloneParentCacheOptions = null;\r\n        this._requestPipeline = null;\r\n    }\r\n    /**\r\n    * Gets the currentl url\r\n    *\r\n    */\r\n    Queryable.prototype.toUrl = function () {\r\n        return this._url;\r\n    };\r\n    /**\r\n     * Directly concatonates the supplied string to the current url, not normalizing \"/\" chars\r\n     *\r\n     * @param pathPart The string to concatonate to the url\r\n     */\r\n    Queryable.prototype.concat = function (pathPart) {\r\n        this._url += pathPart;\r\n        return this;\r\n    };\r\n    Object.defineProperty(Queryable.prototype, \"query\", {\r\n        /**\r\n         * Provides access to the query builder for this url\r\n         *\r\n         */\r\n        get: function () {\r\n            return this._query;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Sets custom options for current object and all derived objects accessible via chaining\r\n     *\r\n     * @param options custom options\r\n     */\r\n    Queryable.prototype.configure = function (options) {\r\n        mergeOptions(this._options, options);\r\n        return this;\r\n    };\r\n    /**\r\n     * Configures this instance from the configure options of the supplied instance\r\n     *\r\n     * @param o Instance from which options should be taken\r\n     */\r\n    Queryable.prototype.configureFrom = function (o) {\r\n        mergeOptions(this._options, o._options);\r\n        return this;\r\n    };\r\n    /**\r\n     * Enables caching for this request\r\n     *\r\n     * @param options Defines the options used when caching this request\r\n     */\r\n    Queryable.prototype.usingCaching = function (options) {\r\n        if (!RuntimeConfig.globalCacheDisable) {\r\n            this._useCaching = true;\r\n            if (options !== undefined) {\r\n                this._cachingOptions = options;\r\n            }\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Allows you to set a request specific processing pipeline\r\n     *\r\n     * @param pipeline The set of methods, in order, to execute a given request\r\n     */\r\n    Queryable.prototype.withPipeline = function (pipeline) {\r\n        this._requestPipeline = pipeline.slice(0);\r\n        return this;\r\n    };\r\n    Queryable.prototype.getCore = function (parser, options) {\r\n        if (parser === void 0) { parser = new JSONParser(); }\r\n        if (options === void 0) { options = {}; }\r\n        // Fix for #304 - when we clone objects we in some cases then execute a get request\r\n        // in these cases the caching settings were getting dropped from the request\r\n        // this tracks if the object from which this was cloned was caching and applies that to an immediate get request\r\n        // does not affect objects cloned from this as we are using different fields to track the settings so it won't\r\n        // be triggered\r\n        if (this._cloneParentWasCaching) {\r\n            this.usingCaching(this._cloneParentCacheOptions);\r\n        }\r\n        return this.reqImpl(\"GET\", options, parser);\r\n    };\r\n    Queryable.prototype.postCore = function (options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (parser === void 0) { parser = new JSONParser(); }\r\n        return this.reqImpl(\"POST\", options, parser);\r\n    };\r\n    Queryable.prototype.patchCore = function (options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (parser === void 0) { parser = new JSONParser(); }\r\n        return this.reqImpl(\"PATCH\", options, parser);\r\n    };\r\n    Queryable.prototype.deleteCore = function (options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (parser === void 0) { parser = new JSONParser(); }\r\n        return this.reqImpl(\"DELETE\", options, parser);\r\n    };\r\n    Queryable.prototype.putCore = function (options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (parser === void 0) { parser = new JSONParser(); }\r\n        return this.reqImpl(\"PUT\", options, parser);\r\n    };\r\n    Queryable.prototype.reqImpl = function (method, options, parser) {\r\n        var _this = this;\r\n        if (options === void 0) { options = {}; }\r\n        return this.getRequestPipeline(method, options, parser)\r\n            .then(function (pipeline) { return _this.toRequestContext(method, options, parser, pipeline); })\r\n            .then(function (context) { return pipe(context); });\r\n    };\r\n    /**\r\n     * Appends the given string and normalizes \"/\" chars\r\n     *\r\n     * @param pathPart The string to append\r\n     */\r\n    Queryable.prototype.append = function (pathPart) {\r\n        this._url = combine(this._url, pathPart);\r\n    };\r\n    Object.defineProperty(Queryable.prototype, \"parentUrl\", {\r\n        /**\r\n         * Gets the parent url used when creating this instance\r\n         *\r\n         */\r\n        get: function () {\r\n            return this._parentUrl;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Extends this queryable from the provided parent\r\n     *\r\n     * @param parent Parent queryable from which we will derive a base url\r\n     * @param path Additional path\r\n     */\r\n    Queryable.prototype.extend = function (parent, path) {\r\n        this._parentUrl = parent._url;\r\n        this._url = combine(this._parentUrl, path || \"\");\r\n        this.configureFrom(parent);\r\n    };\r\n    /**\r\n     * Configures a cloned object from this instance\r\n     *\r\n     * @param clone\r\n     */\r\n    Queryable.prototype._clone = function (clone, _0) {\r\n        clone.configureFrom(this);\r\n        if (this._useCaching) {\r\n            clone._cloneParentWasCaching = true;\r\n            clone._cloneParentCacheOptions = this._cachingOptions;\r\n        }\r\n        return clone;\r\n    };\r\n    /**\r\n     * Handles getting the request pipeline to run for a given request\r\n     */\r\n    // @ts-ignore\r\n    // justified because we want to show that all these arguments are passed to the method so folks inheriting and potentially overriding\r\n    // clearly see how the method is invoked inside the class\r\n    Queryable.prototype.getRequestPipeline = function (method, options, parser) {\r\n        var _this = this;\r\n        if (options === void 0) { options = {}; }\r\n        return new Promise(function (resolve) {\r\n            if (objectDefinedNotNull(_this._requestPipeline) && isArray(_this._requestPipeline)) {\r\n                resolve(_this._requestPipeline);\r\n            }\r\n            else {\r\n                resolve(getDefaultPipeline());\r\n            }\r\n        });\r\n    };\r\n    return Queryable;\r\n}());\r\nexport { Queryable };\r\nvar ODataQueryable = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ODataQueryable, _super);\r\n    function ODataQueryable() {\r\n        var _this = _super.call(this) || this;\r\n        _this._batch = null;\r\n        _this._batchDependency = null;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Adds this query to the supplied batch\r\n     *\r\n     * @example\r\n     * ```\r\n     *\r\n     * let b = pnp.sp.createBatch();\r\n     * pnp.sp.web.inBatch(b).get().then(...);\r\n     * b.execute().then(...)\r\n     * ```\r\n     */\r\n    ODataQueryable.prototype.inBatch = function (batch) {\r\n        if (this.batch !== null) {\r\n            throw Error(\"This query is already part of a batch.\");\r\n        }\r\n        if (objectDefinedNotNull(batch)) {\r\n            this._batch = batch;\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Gets the currentl url\r\n     *\r\n     */\r\n    ODataQueryable.prototype.toUrl = function () {\r\n        return this._url;\r\n    };\r\n    /**\r\n     * Executes the currently built request\r\n     *\r\n     * @param parser Allows you to specify a parser to handle the result\r\n     * @param getOptions The options used for this request\r\n     */\r\n    ODataQueryable.prototype.get = function (parser, options) {\r\n        if (parser === void 0) { parser = new ODataDefaultParser(); }\r\n        if (options === void 0) { options = {}; }\r\n        return this.getCore(parser, options);\r\n    };\r\n    ODataQueryable.prototype.getCore = function (parser, options) {\r\n        if (parser === void 0) { parser = new ODataDefaultParser(); }\r\n        if (options === void 0) { options = {}; }\r\n        return _super.prototype.getCore.call(this, parser, options);\r\n    };\r\n    ODataQueryable.prototype.postCore = function (options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (parser === void 0) { parser = new ODataDefaultParser(); }\r\n        return _super.prototype.postCore.call(this, options, parser);\r\n    };\r\n    ODataQueryable.prototype.patchCore = function (options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (parser === void 0) { parser = new ODataDefaultParser(); }\r\n        return _super.prototype.patchCore.call(this, options, parser);\r\n    };\r\n    ODataQueryable.prototype.deleteCore = function (options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (parser === void 0) { parser = new ODataDefaultParser(); }\r\n        return _super.prototype.deleteCore.call(this, options, parser);\r\n    };\r\n    ODataQueryable.prototype.putCore = function (options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (parser === void 0) { parser = new ODataDefaultParser(); }\r\n        return _super.prototype.putCore.call(this, options, parser);\r\n    };\r\n    ODataQueryable.prototype.reqImpl = function (method, options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (this.hasBatch) {\r\n            this._batchDependency = this.addBatchDependency();\r\n        }\r\n        return _super.prototype.reqImpl.call(this, method, options, parser);\r\n    };\r\n    /**\r\n     * Blocks a batch call from occuring, MUST be cleared by calling the returned function\r\n    */\r\n    ODataQueryable.prototype.addBatchDependency = function () {\r\n        if (this._batch !== null) {\r\n            return this._batch.addDependency();\r\n        }\r\n        return function () { return null; };\r\n    };\r\n    Object.defineProperty(ODataQueryable.prototype, \"hasBatch\", {\r\n        /**\r\n         * Indicates if the current query has a batch associated\r\n         *\r\n         */\r\n        get: function () {\r\n            return objectDefinedNotNull(this._batch);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ODataQueryable.prototype, \"batch\", {\r\n        /**\r\n         * The batch currently associated with this query or null\r\n         *\r\n         */\r\n        get: function () {\r\n            return this.hasBatch ? this._batch : null;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Configures a cloned object from this instance\r\n     *\r\n     * @param clone\r\n     */\r\n    ODataQueryable.prototype._clone = function (clone, cloneSettings) {\r\n        clone = _super.prototype._clone.call(this, clone, cloneSettings);\r\n        if (cloneSettings.includeBatch) {\r\n            clone = clone.inBatch(this._batch);\r\n        }\r\n        return clone;\r\n    };\r\n    return ODataQueryable;\r\n}(Queryable));\r\nexport { ODataQueryable };\r\n//# sourceMappingURL=queryable.js.map","import { getGUID } from \"@pnp/common\";\r\nvar ODataBatch = /** @class */ (function () {\r\n    function ODataBatch(_batchId) {\r\n        if (_batchId === void 0) { _batchId = getGUID(); }\r\n        this._batchId = _batchId;\r\n        this._reqs = [];\r\n        this._deps = [];\r\n        this._rDeps = [];\r\n    }\r\n    Object.defineProperty(ODataBatch.prototype, \"batchId\", {\r\n        get: function () {\r\n            return this._batchId;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ODataBatch.prototype, \"requests\", {\r\n        /**\r\n         * The requests contained in this batch\r\n         */\r\n        get: function () {\r\n            return this._reqs;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     *\r\n     * @param url Request url\r\n     * @param method Request method (GET, POST, etc)\r\n     * @param options Any request options\r\n     * @param parser The parser used to handle the eventual return from the query\r\n     * @param id An identifier used to track a request within a batch\r\n     */\r\n    ODataBatch.prototype.add = function (url, method, options, parser, id) {\r\n        var info = {\r\n            id: id,\r\n            method: method.toUpperCase(),\r\n            options: options,\r\n            parser: parser,\r\n            reject: null,\r\n            resolve: null,\r\n            url: url,\r\n        };\r\n        var p = new Promise(function (resolve, reject) {\r\n            info.resolve = resolve;\r\n            info.reject = reject;\r\n        });\r\n        this._reqs.push(info);\r\n        return p;\r\n    };\r\n    /**\r\n     * Adds a dependency insuring that some set of actions will occur before a batch is processed.\r\n     * MUST be cleared using the returned resolve delegate to allow batches to run\r\n     */\r\n    ODataBatch.prototype.addDependency = function () {\r\n        var resolver = function () { return void (0); };\r\n        this._deps.push(new Promise(function (resolve) {\r\n            resolver = resolve;\r\n        }));\r\n        return resolver;\r\n    };\r\n    /**\r\n     * The batch's execute method will not resolve util any promises added here resolve\r\n     *\r\n     * @param p The dependent promise\r\n     */\r\n    ODataBatch.prototype.addResolveBatchDependency = function (p) {\r\n        this._rDeps.push(p);\r\n    };\r\n    /**\r\n     * Execute the current batch and resolve the associated promises\r\n     *\r\n     * @returns A promise which will be resolved once all of the batch's child promises have resolved\r\n     */\r\n    ODataBatch.prototype.execute = function () {\r\n        var _this = this;\r\n        // we need to check the dependencies twice due to how different engines handle things.\r\n        // We can get a second set of promises added during the first set resolving\r\n        return Promise.all(this._deps)\r\n            .then(function () { return Promise.all(_this._deps); })\r\n            .then(function () { return _this.executeImpl(); })\r\n            .then(function () { return Promise.all(_this._rDeps); })\r\n            .then(function () { return void (0); });\r\n    };\r\n    return ODataBatch;\r\n}());\r\nexport { ODataBatch };\r\n//# sourceMappingURL=odatabatch.js.map","import { RuntimeConfig, AdalClient } from \"@pnp/common\";\r\nexport function setup(config) {\r\n    RuntimeConfig.extend(config);\r\n}\r\nvar GraphRuntimeConfigImpl = /** @class */ (function () {\r\n    function GraphRuntimeConfigImpl() {\r\n    }\r\n    Object.defineProperty(GraphRuntimeConfigImpl.prototype, \"headers\", {\r\n        get: function () {\r\n            var graphPart = RuntimeConfig.get(\"graph\");\r\n            if (graphPart !== undefined && graphPart !== null && graphPart.headers !== undefined) {\r\n                return graphPart.headers;\r\n            }\r\n            return {};\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(GraphRuntimeConfigImpl.prototype, \"fetchClientFactory\", {\r\n        get: function () {\r\n            var graphPart = RuntimeConfig.get(\"graph\");\r\n            // use a configured factory firt\r\n            if (graphPart !== undefined && graphPart !== null && graphPart.fetchClientFactory !== undefined) {\r\n                return graphPart.fetchClientFactory;\r\n            }\r\n            // then try and use spfx context if available\r\n            if (RuntimeConfig.spfxContext !== undefined) {\r\n                return function () { return AdalClient.fromSPFxContext(RuntimeConfig.spfxContext); };\r\n            }\r\n            throw Error(\"There is no Graph Client available, either set one using configuraiton or provide a valid SPFx Context using setup.\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return GraphRuntimeConfigImpl;\r\n}());\r\nexport { GraphRuntimeConfigImpl };\r\nexport var GraphRuntimeConfig = new GraphRuntimeConfigImpl();\r\n//# sourceMappingURL=graphlibconfig.js.map","import { extend, mergeHeaders, getCtxCallback, } from \"@pnp/common\";\r\nimport { GraphRuntimeConfig } from \"../config/graphlibconfig\";\r\nvar GraphHttpClient = /** @class */ (function () {\r\n    function GraphHttpClient() {\r\n        this._impl = GraphRuntimeConfig.fetchClientFactory();\r\n    }\r\n    GraphHttpClient.prototype.fetch = function (url, options) {\r\n        if (options === void 0) { options = {}; }\r\n        var headers = new Headers();\r\n        // first we add the global headers so they can be overwritten by any passed in locally to this call\r\n        mergeHeaders(headers, GraphRuntimeConfig.headers);\r\n        // second we add the local options so we can overwrite the globals\r\n        mergeHeaders(headers, options.headers);\r\n        if (!headers.has(\"Content-Type\")) {\r\n            headers.append(\"Content-Type\", \"application/json\");\r\n        }\r\n        var opts = extend(options, { headers: headers });\r\n        return this.fetchRaw(url, opts);\r\n    };\r\n    GraphHttpClient.prototype.fetchRaw = function (url, options) {\r\n        var _this = this;\r\n        if (options === void 0) { options = {}; }\r\n        // here we need to normalize the headers\r\n        var rawHeaders = new Headers();\r\n        mergeHeaders(rawHeaders, options.headers);\r\n        options = extend(options, { headers: rawHeaders });\r\n        var retry = function (ctx) {\r\n            _this._impl.fetch(url, options).then(function (response) { return ctx.resolve(response); }).catch(function (response) {\r\n                // Check if request was throttled - http status code 429\r\n                // Check if request failed due to server unavailable - http status code 503\r\n                if (response.status !== 429 && response.status !== 503) {\r\n                    ctx.reject(response);\r\n                }\r\n                // grab our current delay\r\n                var delay = ctx.delay;\r\n                // Increment our counters.\r\n                ctx.delay *= 2;\r\n                ctx.attempts++;\r\n                // If we have exceeded the retry count, reject.\r\n                if (ctx.retryCount <= ctx.attempts) {\r\n                    ctx.reject(response);\r\n                }\r\n                // Set our retry timeout for {delay} milliseconds.\r\n                setTimeout(getCtxCallback(_this, retry, ctx), delay);\r\n            });\r\n        };\r\n        return new Promise(function (resolve, reject) {\r\n            var retryContext = {\r\n                attempts: 0,\r\n                delay: 100,\r\n                reject: reject,\r\n                resolve: resolve,\r\n                retryCount: 7,\r\n            };\r\n            retry.call(_this, retryContext);\r\n        });\r\n    };\r\n    GraphHttpClient.prototype.get = function (url, options) {\r\n        if (options === void 0) { options = {}; }\r\n        var opts = extend(options, { method: \"GET\" });\r\n        return this.fetch(url, opts);\r\n    };\r\n    GraphHttpClient.prototype.post = function (url, options) {\r\n        if (options === void 0) { options = {}; }\r\n        var opts = extend(options, { method: \"POST\" });\r\n        return this.fetch(url, opts);\r\n    };\r\n    GraphHttpClient.prototype.patch = function (url, options) {\r\n        if (options === void 0) { options = {}; }\r\n        var opts = extend(options, { method: \"PATCH\" });\r\n        return this.fetch(url, opts);\r\n    };\r\n    GraphHttpClient.prototype.delete = function (url, options) {\r\n        if (options === void 0) { options = {}; }\r\n        var opts = extend(options, { method: \"DELETE\" });\r\n        return this.fetch(url, opts);\r\n    };\r\n    return GraphHttpClient;\r\n}());\r\nexport { GraphHttpClient };\r\n//# sourceMappingURL=graphhttpclient.js.map","var GraphEndpoints = /** @class */ (function () {\r\n    function GraphEndpoints() {\r\n    }\r\n    /**\r\n     *\r\n     * @param url The url to set the endpoint\r\n     */\r\n    GraphEndpoints.ensure = function (url, endpoint) {\r\n        var all = [GraphEndpoints.Beta, GraphEndpoints.V1];\r\n        var regex = new RegExp(endpoint, \"i\");\r\n        var replaces = all.filter(function (s) { return !regex.test(s); }).map(function (s) { return s.replace(\".\", \"\\\\.\"); });\r\n        regex = new RegExp(\"/?(\" + replaces.join(\"|\") + \")/\", \"ig\");\r\n        return url.replace(regex, \"/\" + endpoint + \"/\");\r\n    };\r\n    GraphEndpoints.Beta = \"beta\";\r\n    GraphEndpoints.V1 = \"v1.0\";\r\n    return GraphEndpoints;\r\n}());\r\nexport { GraphEndpoints };\r\n//# sourceMappingURL=types.js.map","import * as tslib_1 from \"tslib\";\r\nimport { combine, extend, isUrlAbsolute, getGUID, } from \"@pnp/common\";\r\nimport { ODataQueryable, } from \"@pnp/odata\";\r\nimport { GraphHttpClient } from \"./net/graphhttpclient\";\r\nimport { GraphEndpoints } from \"./types\";\r\n/**\r\n * Queryable Base Class\r\n *\r\n */\r\nvar GraphQueryable = /** @class */ (function (_super) {\r\n    tslib_1.__extends(GraphQueryable, _super);\r\n    /**\r\n     * Creates a new instance of the Queryable class\r\n     *\r\n     * @constructor\r\n     * @param baseUrl A string or Queryable that should form the base part of the url\r\n     *\r\n     */\r\n    function GraphQueryable(baseUrl, path) {\r\n        var _this = _super.call(this) || this;\r\n        if (typeof baseUrl === \"string\") {\r\n            var urlStr = baseUrl;\r\n            _this._parentUrl = urlStr;\r\n            _this._url = combine(urlStr, path);\r\n        }\r\n        else {\r\n            _this.extend(baseUrl, path);\r\n        }\r\n        return _this;\r\n    }\r\n    /**\r\n     * Choose which fields to return\r\n     *\r\n     * @param selects One or more fields to return\r\n     */\r\n    GraphQueryable.prototype.select = function () {\r\n        var selects = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            selects[_i] = arguments[_i];\r\n        }\r\n        if (selects.length > 0) {\r\n            this.query.set(\"$select\", selects.join(\",\"));\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Expands fields such as lookups to get additional data\r\n     *\r\n     * @param expands The Fields for which to expand the values\r\n     */\r\n    GraphQueryable.prototype.expand = function () {\r\n        var expands = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            expands[_i] = arguments[_i];\r\n        }\r\n        if (expands.length > 0) {\r\n            this.query.set(\"$expand\", expands.join(\",\"));\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Creates a new instance of the supplied factory and extends this into that new instance\r\n     *\r\n     * @param factory constructor for the new queryable\r\n     */\r\n    GraphQueryable.prototype.as = function (factory) {\r\n        var o = new factory(this._url, null);\r\n        return extend(o, this, true);\r\n    };\r\n    /**\r\n     * Gets the full url with query information\r\n     *\r\n     */\r\n    GraphQueryable.prototype.toUrlAndQuery = function () {\r\n        var url = this.toUrl();\r\n        if (!isUrlAbsolute(url)) {\r\n            url = combine(\"https://graph.microsoft.com\", url);\r\n        }\r\n        if (this.query.size > 0) {\r\n            var char = url.indexOf(\"?\") > -1 ? \"&\" : \"?\";\r\n            url += \"\" + char + Array.from(this.query).map(function (v) { return v[0] + \"=\" + v[1]; }).join(\"&\");\r\n        }\r\n        return url;\r\n    };\r\n    /**\r\n     * Allows setting the endpoint (v1.0, beta)\r\n     *\r\n     * @param endpoint\r\n     */\r\n    GraphQueryable.prototype.setEndpoint = function (endpoint) {\r\n        this._url = GraphEndpoints.ensure(this._url, endpoint);\r\n        return this;\r\n    };\r\n    /**\r\n     * Gets a parent for this instance as specified\r\n     *\r\n     * @param factory The contructor for the class to create\r\n     */\r\n    GraphQueryable.prototype.getParent = function (factory, baseUrl, path) {\r\n        if (baseUrl === void 0) { baseUrl = this.parentUrl; }\r\n        return new factory(baseUrl, path);\r\n    };\r\n    /**\r\n     * Clones this queryable into a new queryable instance of T\r\n     * @param factory Constructor used to create the new instance\r\n     * @param additionalPath Any additional path to include in the clone\r\n     * @param includeBatch If true this instance's batch will be added to the cloned instance\r\n     */\r\n    GraphQueryable.prototype.clone = function (factory, additionalPath, includeBatch) {\r\n        if (includeBatch === void 0) { includeBatch = true; }\r\n        return _super.prototype._clone.call(this, new factory(this, additionalPath), { includeBatch: includeBatch });\r\n    };\r\n    /**\r\n     * Converts the current instance to a request context\r\n     *\r\n     * @param verb The request verb\r\n     * @param options The set of supplied request options\r\n     * @param parser The supplied ODataParser instance\r\n     * @param pipeline Optional request processing pipeline\r\n     */\r\n    GraphQueryable.prototype.toRequestContext = function (verb, options, parser, pipeline) {\r\n        if (options === void 0) { options = {}; }\r\n        var dependencyDispose = this.hasBatch ? this._batchDependency : function () { return; };\r\n        return Promise.resolve({\r\n            batch: this.batch,\r\n            batchDependency: dependencyDispose,\r\n            cachingOptions: this._cachingOptions,\r\n            clientFactory: function () { return new GraphHttpClient(); },\r\n            isBatched: this.hasBatch,\r\n            isCached: /^get$/i.test(verb) && this._useCaching,\r\n            options: options,\r\n            parser: parser,\r\n            pipeline: pipeline,\r\n            requestAbsoluteUrl: this.toUrlAndQuery(),\r\n            requestId: getGUID(),\r\n            verb: verb,\r\n        });\r\n    };\r\n    return GraphQueryable;\r\n}(ODataQueryable));\r\nexport { GraphQueryable };\r\n/**\r\n * Represents a REST collection which can be filtered, paged, and selected\r\n *\r\n */\r\nvar GraphQueryableCollection = /** @class */ (function (_super) {\r\n    tslib_1.__extends(GraphQueryableCollection, _super);\r\n    function GraphQueryableCollection() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     *\r\n     * @param filter The string representing the filter query\r\n     */\r\n    GraphQueryableCollection.prototype.filter = function (filter) {\r\n        this.query.set(\"$filter\", filter);\r\n        return this;\r\n    };\r\n    /**\r\n     * Orders based on the supplied fields\r\n     *\r\n     * @param orderby The name of the field on which to sort\r\n     * @param ascending If false DESC is appended, otherwise ASC (default)\r\n     */\r\n    GraphQueryableCollection.prototype.orderBy = function (orderBy, ascending) {\r\n        if (ascending === void 0) { ascending = true; }\r\n        var o = \"$orderby\";\r\n        var query = this.query.has(o) ? this.query.get(o).split(\",\") : [];\r\n        query.push(orderBy + \" \" + (ascending ? \"asc\" : \"desc\"));\r\n        this.query.set(o, query.join(\",\"));\r\n        return this;\r\n    };\r\n    /**\r\n     * Limits the query to only return the specified number of items\r\n     *\r\n     * @param top The query row limit\r\n     */\r\n    GraphQueryableCollection.prototype.top = function (top) {\r\n        this.query.set(\"$top\", top.toString());\r\n        return this;\r\n    };\r\n    /**\r\n     * Skips a set number of items in the return set\r\n     *\r\n     * @param num Number of items to skip\r\n     */\r\n    GraphQueryableCollection.prototype.skip = function (num) {\r\n        this.query.set(\"$skip\", num.toString());\r\n        return this;\r\n    };\r\n    /**\r\n     * \tTo request second and subsequent pages of Graph data\r\n     */\r\n    GraphQueryableCollection.prototype.skipToken = function (token) {\r\n        this.query.set(\"$skiptoken\", token);\r\n        return this;\r\n    };\r\n    Object.defineProperty(GraphQueryableCollection.prototype, \"count\", {\r\n        /**\r\n         * \tRetrieves the total count of matching resources\r\n         */\r\n        get: function () {\r\n            this.query.set(\"$count\", \"true\");\r\n            return this;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return GraphQueryableCollection;\r\n}(GraphQueryable));\r\nexport { GraphQueryableCollection };\r\nvar GraphQueryableSearchableCollection = /** @class */ (function (_super) {\r\n    tslib_1.__extends(GraphQueryableSearchableCollection, _super);\r\n    function GraphQueryableSearchableCollection() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * \tTo request second and subsequent pages of Graph data\r\n     */\r\n    GraphQueryableSearchableCollection.prototype.search = function (query) {\r\n        this.query.set(\"$search\", query);\r\n        return this;\r\n    };\r\n    return GraphQueryableSearchableCollection;\r\n}(GraphQueryableCollection));\r\nexport { GraphQueryableSearchableCollection };\r\n/**\r\n * Represents an instance that can be selected\r\n *\r\n */\r\nvar GraphQueryableInstance = /** @class */ (function (_super) {\r\n    tslib_1.__extends(GraphQueryableInstance, _super);\r\n    function GraphQueryableInstance() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    return GraphQueryableInstance;\r\n}(GraphQueryable));\r\nexport { GraphQueryableInstance };\r\n/**\r\n * Decorator used to specify the default path for Queryable objects\r\n *\r\n * @param path\r\n */\r\nexport function defaultPath(path) {\r\n    return function (target) {\r\n        return /** @class */ (function (_super) {\r\n            tslib_1.__extends(class_1, _super);\r\n            function class_1() {\r\n                var args = [];\r\n                for (var _i = 0; _i < arguments.length; _i++) {\r\n                    args[_i] = arguments[_i];\r\n                }\r\n                return _super.call(this, args[0], args.length > 1 && args[1] !== undefined ? args[1] : path) || this;\r\n            }\r\n            return class_1;\r\n        }(target));\r\n    };\r\n}\r\n//# sourceMappingURL=graphqueryable.js.map","import * as tslib_1 from \"tslib\";\r\nimport { GraphQueryableInstance, GraphQueryableCollection, defaultPath } from \"./graphqueryable\";\r\nimport { jsS } from \"@pnp/common\";\r\nvar Members = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Members, _super);\r\n    function Members() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Members_1 = Members;\r\n    /**\r\n     * Use this API to add a member to an Office 365 group, a security group or a mail-enabled security group through\r\n     * the members navigation property. You can add users or other groups.\r\n     * Important: You can add only users to Office 365 groups.\r\n     *\r\n     * @param id Full @odata.id of the directoryObject, user, or group object you want to add (ex: https://graph.microsoft.com/v1.0/directoryObjects/${id})\r\n     */\r\n    Members.prototype.add = function (id) {\r\n        return this.clone(Members_1, \"$ref\").postCore({\r\n            body: jsS({\r\n                \"@odata.id\": id,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Gets a member of the group by id\r\n     *\r\n     * @param id Group member's id\r\n     */\r\n    Members.prototype.getById = function (id) {\r\n        return new Member(this, id);\r\n    };\r\n    var Members_1;\r\n    Members = Members_1 = tslib_1.__decorate([\r\n        defaultPath(\"members\")\r\n    ], Members);\r\n    return Members;\r\n}(GraphQueryableCollection));\r\nexport { Members };\r\nvar Member = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Member, _super);\r\n    function Member() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Removes this Member\r\n     */\r\n    Member.prototype.remove = function () {\r\n        return this.clone(Member, \"$ref\").deleteCore();\r\n    };\r\n    return Member;\r\n}(GraphQueryableInstance));\r\nexport { Member };\r\nvar Owners = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Owners, _super);\r\n    function Owners() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Owners = tslib_1.__decorate([\r\n        defaultPath(\"owners\")\r\n    ], Owners);\r\n    return Owners;\r\n}(Members));\r\nexport { Owners };\r\n//# sourceMappingURL=members.js.map","import * as tslib_1 from \"tslib\";\r\nimport { GraphQueryableInstance, GraphQueryableCollection, defaultPath } from \"./graphqueryable\";\r\nimport { Members, Owners } from \"./members\";\r\nimport { extend, jsS } from \"@pnp/common\";\r\nimport { Calendar, Events } from \"./calendars\";\r\nimport { Conversations, Senders } from \"./conversations\";\r\nimport { Plans } from \"./planner\";\r\nimport { Photo } from \"./photos\";\r\nimport { Team } from \"./teams\";\r\nexport var GroupType;\r\n(function (GroupType) {\r\n    /**\r\n     * Office 365 (aka unified group)\r\n     */\r\n    GroupType[GroupType[\"Office365\"] = 0] = \"Office365\";\r\n    /**\r\n     * Dynamic membership\r\n     */\r\n    GroupType[GroupType[\"Dynamic\"] = 1] = \"Dynamic\";\r\n    /**\r\n     * Security\r\n     */\r\n    GroupType[GroupType[\"Security\"] = 2] = \"Security\";\r\n})(GroupType || (GroupType = {}));\r\n/**\r\n * Describes a collection of Field objects\r\n *\r\n */\r\nvar Groups = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Groups, _super);\r\n    function Groups() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets a group from the collection using the specified id\r\n     *\r\n     * @param id Id of the group to get from this collection\r\n     */\r\n    Groups.prototype.getById = function (id) {\r\n        return new Group(this, id);\r\n    };\r\n    /**\r\n     * Create a new group as specified in the request body.\r\n     *\r\n     * @param name Name to display in the address book for the group\r\n     * @param mailNickname Mail alias for the group\r\n     * @param groupType Type of group being created\r\n     * @param additionalProperties A plain object collection of additional properties you want to set on the new group\r\n     */\r\n    Groups.prototype.add = function (name, mailNickname, groupType, additionalProperties) {\r\n        var _this = this;\r\n        if (additionalProperties === void 0) { additionalProperties = {}; }\r\n        var postBody = extend({\r\n            displayName: name,\r\n            mailEnabled: groupType === GroupType.Office365,\r\n            mailNickname: mailNickname,\r\n            securityEnabled: groupType !== GroupType.Office365,\r\n        }, additionalProperties);\r\n        // include a group type if required\r\n        if (groupType !== GroupType.Security) {\r\n            postBody = extend(postBody, {\r\n                groupTypes: groupType === GroupType.Office365 ? [\"Unified\"] : [\"DynamicMembership\"],\r\n            });\r\n        }\r\n        return this.postCore({\r\n            body: jsS(postBody),\r\n        }).then(function (r) {\r\n            return {\r\n                data: r,\r\n                group: _this.getById(r.id),\r\n            };\r\n        });\r\n    };\r\n    Groups = tslib_1.__decorate([\r\n        defaultPath(\"groups\")\r\n    ], Groups);\r\n    return Groups;\r\n}(GraphQueryableCollection));\r\nexport { Groups };\r\n/**\r\n * Represents a group entity\r\n */\r\nvar Group = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Group, _super);\r\n    function Group() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(Group.prototype, \"calendar\", {\r\n        /**\r\n         * The calendar associated with this group\r\n         */\r\n        get: function () {\r\n            return new Calendar(this, \"calendar\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Group.prototype, \"events\", {\r\n        /**\r\n         * Retrieve a list of event objects\r\n         */\r\n        get: function () {\r\n            return new Events(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Group.prototype, \"owners\", {\r\n        /**\r\n         * Gets the collection of owners for this group\r\n         */\r\n        get: function () {\r\n            return new Owners(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Group.prototype, \"plans\", {\r\n        /**\r\n         * The collection of plans for this group\r\n         */\r\n        get: function () {\r\n            return new Plans(this, \"planner/plans\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Group.prototype, \"members\", {\r\n        /**\r\n         * Gets the collection of members for this group\r\n         */\r\n        get: function () {\r\n            return new Members(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Group.prototype, \"conversations\", {\r\n        /**\r\n         * Gets the conversations collection for this group\r\n         */\r\n        get: function () {\r\n            return new Conversations(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Group.prototype, \"acceptedSenders\", {\r\n        /**\r\n         * Gets the collection of accepted senders for this group\r\n         */\r\n        get: function () {\r\n            return new Senders(this, \"acceptedsenders\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Group.prototype, \"rejectedSenders\", {\r\n        /**\r\n         * Gets the collection of rejected senders for this group\r\n         */\r\n        get: function () {\r\n            return new Senders(this, \"rejectedsenders\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Group.prototype, \"photo\", {\r\n        /**\r\n         * The photo associated with the group\r\n         */\r\n        get: function () {\r\n            return new Photo(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Group.prototype, \"team\", {\r\n        /**\r\n         * Gets the team associated with this group, if it exists\r\n         */\r\n        get: function () {\r\n            return new Team(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Add the group to the list of the current user's favorite groups. Supported for only Office 365 groups\r\n     */\r\n    Group.prototype.addFavorite = function () {\r\n        return this.clone(Group, \"addFavorite\").postCore();\r\n    };\r\n    /**\r\n     * Creates a Microsoft Team associated with this group\r\n     *\r\n     * @param properties Initial properties for the new Team\r\n     */\r\n    Group.prototype.createTeam = function (properties) {\r\n        return this.clone(Group, \"team\").putCore({\r\n            body: jsS(properties),\r\n        });\r\n    };\r\n    /**\r\n     * Returns all the groups and directory roles that the specified group is a member of. The check is transitive\r\n     *\r\n     * @param securityEnabledOnly\r\n     */\r\n    Group.prototype.getMemberObjects = function (securityEnabledOnly) {\r\n        if (securityEnabledOnly === void 0) { securityEnabledOnly = false; }\r\n        return this.clone(Group, \"getMemberObjects\").postCore({\r\n            body: jsS({\r\n                securityEnabledOnly: securityEnabledOnly,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Return all the groups that the specified group is a member of. The check is transitive\r\n     *\r\n     * @param securityEnabledOnly\r\n     */\r\n    Group.prototype.getMemberGroups = function (securityEnabledOnly) {\r\n        if (securityEnabledOnly === void 0) { securityEnabledOnly = false; }\r\n        return this.clone(Group, \"getMemberGroups\").postCore({\r\n            body: jsS({\r\n                securityEnabledOnly: securityEnabledOnly,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Check for membership in a specified list of groups, and returns from that list those groups of which the specified user, group, or directory object is a member.\r\n     * This function is transitive.\r\n     * @param groupIds A collection that contains the object IDs of the groups in which to check membership. Up to 20 groups may be specified.\r\n     */\r\n    Group.prototype.checkMemberGroups = function (groupIds) {\r\n        return this.clone(Group, \"checkMemberGroups\").postCore({\r\n            body: jsS({\r\n                groupIds: groupIds,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Deletes this group\r\n     */\r\n    Group.prototype.delete = function () {\r\n        return this.deleteCore();\r\n    };\r\n    /**\r\n     * Update the properties of a group object\r\n     *\r\n     * @param properties Set of properties of this group to update\r\n     */\r\n    Group.prototype.update = function (properties) {\r\n        return this.patchCore({\r\n            body: jsS(properties),\r\n        });\r\n    };\r\n    /**\r\n     * Remove the group from the list of the current user's favorite groups. Supported for only Office 365 groups\r\n     */\r\n    Group.prototype.removeFavorite = function () {\r\n        return this.clone(Group, \"removeFavorite\").postCore();\r\n    };\r\n    /**\r\n     * Reset the unseenCount of all the posts that the current user has not seen since their last visit\r\n     */\r\n    Group.prototype.resetUnseenCount = function () {\r\n        return this.clone(Group, \"resetUnseenCount\").postCore();\r\n    };\r\n    /**\r\n     * Calling this method will enable the current user to receive email notifications for this group,\r\n     * about new posts, events, and files in that group. Supported for only Office 365 groups\r\n     */\r\n    Group.prototype.subscribeByMail = function () {\r\n        return this.clone(Group, \"subscribeByMail\").postCore();\r\n    };\r\n    /**\r\n     * Calling this method will prevent the current user from receiving email notifications for this group\r\n     * about new posts, events, and files in that group. Supported for only Office 365 groups\r\n     */\r\n    Group.prototype.unsubscribeByMail = function () {\r\n        return this.clone(Group, \"unsubscribeByMail\").postCore();\r\n    };\r\n    /**\r\n     * Get the occurrences, exceptions, and single instances of events in a calendar view defined by a time range, from the default calendar of a group\r\n     *\r\n     * @param start Start date and time of the time range\r\n     * @param end End date and time of the time range\r\n     */\r\n    Group.prototype.getCalendarView = function (start, end) {\r\n        var view = this.clone(Group, \"calendarView\");\r\n        view.query.set(\"startDateTime\", start.toISOString());\r\n        view.query.set(\"endDateTime\", end.toISOString());\r\n        return view.get();\r\n    };\r\n    return Group;\r\n}(GraphQueryableInstance));\r\nexport { Group };\r\n//# sourceMappingURL=groups.js.map","import * as tslib_1 from \"tslib\";\r\nimport { GraphQueryableInstance, GraphQueryableCollection, defaultPath } from \"./graphqueryable\";\r\nimport { jsS } from \"@pnp/common\";\r\n// import { Attachments } from \"./attachments\";\r\nvar Calendars = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Calendars, _super);\r\n    function Calendars() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Calendars = tslib_1.__decorate([\r\n        defaultPath(\"calendars\")\r\n    ], Calendars);\r\n    return Calendars;\r\n}(GraphQueryableCollection));\r\nexport { Calendars };\r\nvar Calendar = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Calendar, _super);\r\n    function Calendar() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(Calendar.prototype, \"events\", {\r\n        get: function () {\r\n            return new Events(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Calendar;\r\n}(GraphQueryableInstance));\r\nexport { Calendar };\r\nvar Events = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Events, _super);\r\n    function Events() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Events.prototype.getById = function (id) {\r\n        return new Event(this, id);\r\n    };\r\n    /**\r\n     * Adds a new event to the collection\r\n     *\r\n     * @param properties The set of properties used to create the event\r\n     */\r\n    Events.prototype.add = function (properties) {\r\n        var _this = this;\r\n        return this.postCore({\r\n            body: jsS(properties),\r\n        }).then(function (r) {\r\n            return {\r\n                data: r,\r\n                event: _this.getById(r.id),\r\n            };\r\n        });\r\n    };\r\n    Events = tslib_1.__decorate([\r\n        defaultPath(\"events\")\r\n    ], Events);\r\n    return Events;\r\n}(GraphQueryableCollection));\r\nexport { Events };\r\nvar Event = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Event, _super);\r\n    function Event() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    // TODO:: when supported\r\n    // /**\r\n    //  * Gets the collection of attachments for this event\r\n    //  */\r\n    // public get attachments(): Attachments {\r\n    //     return new Attachments(this);\r\n    // }\r\n    /**\r\n     * Update the properties of an event object\r\n     *\r\n     * @param properties Set of properties of this event to update\r\n     */\r\n    Event.prototype.update = function (properties) {\r\n        return this.patchCore({\r\n            body: jsS(properties),\r\n        });\r\n    };\r\n    /**\r\n     * Deletes this event\r\n     */\r\n    Event.prototype.delete = function () {\r\n        return this.deleteCore();\r\n    };\r\n    return Event;\r\n}(GraphQueryableInstance));\r\nexport { Event };\r\n//# sourceMappingURL=calendars.js.map","import * as tslib_1 from \"tslib\";\r\nimport { GraphQueryableInstance, GraphQueryableCollection, defaultPath } from \"./graphqueryable\";\r\nimport { jsS } from \"@pnp/common\";\r\nvar Attachments = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Attachments, _super);\r\n    function Attachments() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets a member of the group by id\r\n     *\r\n     * @param id Attachment id\r\n     */\r\n    Attachments.prototype.getById = function (id) {\r\n        return new Attachment(this, id);\r\n    };\r\n    /**\r\n     * Add attachment to this collection\r\n     *\r\n     * @param name Name given to the attachment file\r\n     * @param bytes File content\r\n     */\r\n    Attachments.prototype.addFile = function (name, bytes) {\r\n        return this.postCore({\r\n            body: jsS({\r\n                \"@odata.type\": \"#microsoft.graph.fileAttachment\",\r\n                contentBytes: bytes,\r\n                name: name,\r\n            }),\r\n        });\r\n    };\r\n    Attachments = tslib_1.__decorate([\r\n        defaultPath(\"attachments\")\r\n    ], Attachments);\r\n    return Attachments;\r\n}(GraphQueryableCollection));\r\nexport { Attachments };\r\nvar Attachment = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Attachment, _super);\r\n    function Attachment() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    return Attachment;\r\n}(GraphQueryableInstance));\r\nexport { Attachment };\r\n//# sourceMappingURL=attachments.js.map","import * as tslib_1 from \"tslib\";\r\nimport { GraphQueryableInstance, GraphQueryableCollection, defaultPath } from \"./graphqueryable\";\r\nimport { jsS } from \"@pnp/common\";\r\nimport { Attachments } from \"./attachments\";\r\nvar Conversations = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Conversations, _super);\r\n    function Conversations() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Create a new conversation by including a thread and a post.\r\n     *\r\n     * @param properties Properties used to create the new conversation\r\n     */\r\n    Conversations.prototype.add = function (properties) {\r\n        return this.postCore({\r\n            body: jsS(properties),\r\n        });\r\n    };\r\n    /**\r\n     * Gets a conversation from this collection by id\r\n     *\r\n     * @param id Group member's id\r\n     */\r\n    Conversations.prototype.getById = function (id) {\r\n        return new Conversation(this, id);\r\n    };\r\n    Conversations = tslib_1.__decorate([\r\n        defaultPath(\"conversations\")\r\n    ], Conversations);\r\n    return Conversations;\r\n}(GraphQueryableCollection));\r\nexport { Conversations };\r\nvar Threads = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Threads, _super);\r\n    function Threads() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets a thread from this collection by id\r\n     *\r\n     * @param id Group member's id\r\n     */\r\n    Threads.prototype.getById = function (id) {\r\n        return new Thread(this, id);\r\n    };\r\n    /**\r\n     * Adds a new thread to this collection\r\n     *\r\n     * @param properties properties used to create the new thread\r\n     * @returns Id of the new thread\r\n     */\r\n    Threads.prototype.add = function (properties) {\r\n        return this.postCore({\r\n            body: jsS(properties),\r\n        });\r\n    };\r\n    Threads = tslib_1.__decorate([\r\n        defaultPath(\"threads\")\r\n    ], Threads);\r\n    return Threads;\r\n}(GraphQueryableCollection));\r\nexport { Threads };\r\nvar Posts = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Posts, _super);\r\n    function Posts() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets a thread from this collection by id\r\n     *\r\n     * @param id Group member's id\r\n     */\r\n    Posts.prototype.getById = function (id) {\r\n        return new Post(this, id);\r\n    };\r\n    /**\r\n     * Adds a new thread to this collection\r\n     *\r\n     * @param properties properties used to create the new thread\r\n     * @returns Id of the new thread\r\n     */\r\n    Posts.prototype.add = function (properties) {\r\n        return this.postCore({\r\n            body: jsS(properties),\r\n        });\r\n    };\r\n    Posts = tslib_1.__decorate([\r\n        defaultPath(\"posts\")\r\n    ], Posts);\r\n    return Posts;\r\n}(GraphQueryableCollection));\r\nexport { Posts };\r\nvar Conversation = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Conversation, _super);\r\n    function Conversation() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(Conversation.prototype, \"threads\", {\r\n        /**\r\n         * Get all the threads in a group conversation.\r\n         */\r\n        get: function () {\r\n            return new Threads(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Updates this conversation\r\n     */\r\n    Conversation.prototype.update = function (properties) {\r\n        return this.patchCore({\r\n            body: jsS(properties),\r\n        });\r\n    };\r\n    /**\r\n     * Deletes this member from the group\r\n     */\r\n    Conversation.prototype.delete = function () {\r\n        return this.deleteCore();\r\n    };\r\n    return Conversation;\r\n}(GraphQueryableInstance));\r\nexport { Conversation };\r\nvar Thread = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Thread, _super);\r\n    function Thread() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(Thread.prototype, \"posts\", {\r\n        /**\r\n         * Get all the threads in a group conversation.\r\n         */\r\n        get: function () {\r\n            return new Posts(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Reply to a thread in a group conversation and add a new post to it\r\n     *\r\n     * @param post Contents of the post\r\n     */\r\n    Thread.prototype.reply = function (post) {\r\n        return this.clone(Thread, \"reply\").postCore({\r\n            body: jsS({\r\n                post: post,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Deletes this member from the group\r\n     */\r\n    Thread.prototype.delete = function () {\r\n        return this.deleteCore();\r\n    };\r\n    return Thread;\r\n}(GraphQueryableInstance));\r\nexport { Thread };\r\nvar Post = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Post, _super);\r\n    function Post() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(Post.prototype, \"attachments\", {\r\n        get: function () {\r\n            return new Attachments(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Deletes this post\r\n     */\r\n    Post.prototype.delete = function () {\r\n        return this.deleteCore();\r\n    };\r\n    /**\r\n     * Forward a post to a recipient\r\n     */\r\n    Post.prototype.forward = function (info) {\r\n        return this.clone(Post, \"forward\").postCore({\r\n            body: jsS(info),\r\n        });\r\n    };\r\n    /**\r\n     * Reply to a thread in a group conversation and add a new post to it\r\n     *\r\n     * @param post Contents of the post\r\n     */\r\n    Post.prototype.reply = function (post) {\r\n        return this.clone(Post, \"reply\").postCore({\r\n            body: jsS({\r\n                post: post,\r\n            }),\r\n        });\r\n    };\r\n    return Post;\r\n}(GraphQueryableInstance));\r\nexport { Post };\r\nvar Senders = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Senders, _super);\r\n    function Senders(baseUrl, path) {\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Add a new user or group to this senders collection\r\n     * @param id The full @odata.id value to add (ex: https://graph.microsoft.com/v1.0/users/user@contoso.com)\r\n     */\r\n    Senders.prototype.add = function (id) {\r\n        return this.clone(Senders, \"$ref\").postCore({\r\n            body: jsS({\r\n                \"@odata.id\": id,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Removes the entity from the collection\r\n     *\r\n     * @param id The full @odata.id value to remove (ex: https://graph.microsoft.com/v1.0/users/user@contoso.com)\r\n     */\r\n    Senders.prototype.remove = function (id) {\r\n        var remover = this.clone(Senders, \"$ref\");\r\n        remover.query.set(\"$id\", id);\r\n        return remover.deleteCore();\r\n    };\r\n    return Senders;\r\n}(GraphQueryableCollection));\r\nexport { Senders };\r\n//# sourceMappingURL=conversations.js.map","import * as tslib_1 from \"tslib\";\r\nimport { GraphQueryableInstance, GraphQueryableCollection, defaultPath } from \"./graphqueryable\";\r\nimport { jsS, extend } from \"@pnp/common\";\r\nvar Planner = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Planner, _super);\r\n    function Planner() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(Planner.prototype, \"plans\", {\r\n        // Should Only be able to get by id, or else error occur\r\n        get: function () {\r\n            return new Plans(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Planner.prototype, \"tasks\", {\r\n        // Should Only be able to get by id, or else error occur\r\n        get: function () {\r\n            return new Tasks(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Planner.prototype, \"buckets\", {\r\n        // Should Only be able to get by id, or else error occur\r\n        get: function () {\r\n            return new Buckets(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Planner = tslib_1.__decorate([\r\n        defaultPath(\"planner\")\r\n    ], Planner);\r\n    return Planner;\r\n}(GraphQueryableInstance));\r\nexport { Planner };\r\nvar Plans = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Plans, _super);\r\n    function Plans() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Plans.prototype.getById = function (id) {\r\n        return new Plan(this, id);\r\n    };\r\n    /**\r\n     * Create a new Planner Plan.\r\n     *\r\n     * @param owner Id of Group object.\r\n     * @param title The Title of the Plan.\r\n     */\r\n    Plans.prototype.add = function (owner, title) {\r\n        var _this = this;\r\n        var postBody = {\r\n            owner: owner,\r\n            title: title,\r\n        };\r\n        return this.postCore({\r\n            body: jsS(postBody),\r\n        }).then(function (r) {\r\n            return {\r\n                data: r,\r\n                plan: _this.getById(r.id),\r\n            };\r\n        });\r\n    };\r\n    Plans = tslib_1.__decorate([\r\n        defaultPath(\"plans\")\r\n    ], Plans);\r\n    return Plans;\r\n}(GraphQueryableCollection));\r\nexport { Plans };\r\n/**\r\n * Should not be able to get by Id\r\n */\r\nvar Plan = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Plan, _super);\r\n    function Plan() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(Plan.prototype, \"tasks\", {\r\n        get: function () {\r\n            return new Tasks(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Plan.prototype, \"buckets\", {\r\n        get: function () {\r\n            return new Buckets(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Plan.prototype, \"details\", {\r\n        get: function () {\r\n            return new Details(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Deletes this Plan\r\n     */\r\n    Plan.prototype.delete = function () {\r\n        return this.deleteCore();\r\n    };\r\n    /**\r\n     * Update the properties of a Plan\r\n     *\r\n     * @param properties Set of properties of this Plan to update\r\n     */\r\n    Plan.prototype.update = function (properties) {\r\n        return this.patchCore({\r\n            body: jsS(properties),\r\n        });\r\n    };\r\n    return Plan;\r\n}(GraphQueryableInstance));\r\nexport { Plan };\r\nvar Tasks = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Tasks, _super);\r\n    function Tasks() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Tasks.prototype.getById = function (id) {\r\n        return new Task(this, id);\r\n    };\r\n    /**\r\n     * Create a new Planner Task.\r\n     *\r\n     * @param planId Id of Plan.\r\n     * @param title The Title of the Task.\r\n     * @param assignments Assign the task\r\n     * @param bucketId Id of Bucket\r\n     */\r\n    Tasks.prototype.add = function (planId, title, assignments, bucketId) {\r\n        var _this = this;\r\n        var postBody = extend({\r\n            planId: planId,\r\n            title: title,\r\n        }, assignments);\r\n        if (bucketId) {\r\n            postBody = extend(postBody, {\r\n                bucketId: bucketId,\r\n            });\r\n        }\r\n        return this.postCore({\r\n            body: jsS(postBody),\r\n        }).then(function (r) {\r\n            return {\r\n                data: r,\r\n                task: _this.getById(r.id),\r\n            };\r\n        });\r\n    };\r\n    Tasks = tslib_1.__decorate([\r\n        defaultPath(\"tasks\")\r\n    ], Tasks);\r\n    return Tasks;\r\n}(GraphQueryableCollection));\r\nexport { Tasks };\r\nvar Task = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Task, _super);\r\n    function Task() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Deletes this Task\r\n     */\r\n    Task.prototype.delete = function () {\r\n        return this.deleteCore();\r\n    };\r\n    /**\r\n     * Update the properties of a Task\r\n     *\r\n     * @param properties Set of properties of this Task to update\r\n     */\r\n    Task.prototype.update = function (properties) {\r\n        return this.patchCore({\r\n            body: jsS(properties),\r\n        });\r\n    };\r\n    Object.defineProperty(Task.prototype, \"details\", {\r\n        get: function () {\r\n            return new Details(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Task;\r\n}(GraphQueryableInstance));\r\nexport { Task };\r\nvar Buckets = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Buckets, _super);\r\n    function Buckets() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Create a new Bucket.\r\n     *\r\n     * @param name Name of Bucket object.\r\n     * @param planId The Id of the Plan.\r\n     * @param oderHint Hint used to order items of this type in a list view.\r\n     */\r\n    Buckets.prototype.add = function (name, planId, orderHint) {\r\n        var _this = this;\r\n        var postBody = {\r\n            name: name,\r\n            orderHint: orderHint ? orderHint : \"\",\r\n            planId: planId,\r\n        };\r\n        return this.postCore({\r\n            body: jsS(postBody),\r\n        }).then(function (r) {\r\n            return {\r\n                bucket: _this.getById(r.id),\r\n                data: r,\r\n            };\r\n        });\r\n    };\r\n    Buckets.prototype.getById = function (id) {\r\n        return new Bucket(this, id);\r\n    };\r\n    Buckets = tslib_1.__decorate([\r\n        defaultPath(\"buckets\")\r\n    ], Buckets);\r\n    return Buckets;\r\n}(GraphQueryableCollection));\r\nexport { Buckets };\r\nvar Bucket = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Bucket, _super);\r\n    function Bucket() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Deletes this Bucket\r\n     */\r\n    Bucket.prototype.delete = function () {\r\n        return this.deleteCore();\r\n    };\r\n    /**\r\n     * Update the properties of a Bucket\r\n     *\r\n     * @param properties Set of properties of this Bucket to update\r\n     */\r\n    Bucket.prototype.update = function (properties) {\r\n        return this.patchCore({\r\n            body: jsS(properties),\r\n        });\r\n    };\r\n    Object.defineProperty(Bucket.prototype, \"tasks\", {\r\n        get: function () {\r\n            return new Tasks(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Bucket;\r\n}(GraphQueryableInstance));\r\nexport { Bucket };\r\nvar Details = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Details, _super);\r\n    function Details() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Details = tslib_1.__decorate([\r\n        defaultPath(\"details\")\r\n    ], Details);\r\n    return Details;\r\n}(GraphQueryableCollection));\r\nexport { Details };\r\n//# sourceMappingURL=planner.js.map","import * as tslib_1 from \"tslib\";\r\nimport { GraphQueryableInstance, defaultPath } from \"./graphqueryable\";\r\nimport { BlobParser, BufferParser } from \"@pnp/odata\";\r\nvar Photo = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Photo, _super);\r\n    function Photo() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Photo_1 = Photo;\r\n    /**\r\n     * Gets the image bytes as a blob (browser)\r\n     */\r\n    Photo.prototype.getBlob = function () {\r\n        return this.clone(Photo_1, \"$value\", false).get(new BlobParser());\r\n    };\r\n    /**\r\n     * Gets the image file byets as a Buffer (node.js)\r\n     */\r\n    Photo.prototype.getBuffer = function () {\r\n        return this.clone(Photo_1, \"$value\", false).get(new BufferParser());\r\n    };\r\n    /**\r\n     * Sets the file bytes\r\n     *\r\n     * @param content Image file contents, max 4 MB\r\n     */\r\n    Photo.prototype.setContent = function (content) {\r\n        return this.clone(Photo_1, \"$value\", false).patchCore({\r\n            body: content,\r\n        });\r\n    };\r\n    var Photo_1;\r\n    Photo = Photo_1 = tslib_1.__decorate([\r\n        defaultPath(\"photo\")\r\n    ], Photo);\r\n    return Photo;\r\n}(GraphQueryableInstance));\r\nexport { Photo };\r\n//# sourceMappingURL=photos.js.map","import * as tslib_1 from \"tslib\";\r\nimport { graph } from \"./rest\";\r\nimport { GroupType } from \"./groups\";\r\nimport { GraphQueryableInstance, defaultPath, GraphQueryableCollection } from \"./graphqueryable\";\r\nimport { ODataDefaultParser } from \"@pnp/odata\";\r\nimport { jsS, extend } from \"@pnp/common\";\r\nvar Teams = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Teams, _super);\r\n    function Teams() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Creates a new team and associated Group with the given information\r\n     * @param name The name of the new Group\r\n     * @param description Optional description of the group\r\n     * @param ownerId Add an owner with a user id from the graph\r\n     */\r\n    Teams.prototype.create = function (name, description, ownerId, teamProperties) {\r\n        if (description === void 0) { description = \"\"; }\r\n        if (teamProperties === void 0) { teamProperties = {}; }\r\n        var groupProps = {\r\n            \"description\": description && description.length > 0 ? description : \"\",\r\n            \"owners@odata.bind\": [\r\n                \"https://graph.microsoft.com/v1.0/users/\" + ownerId,\r\n            ],\r\n        };\r\n        return graph.groups.add(name, name, GroupType.Office365, groupProps).then(function (gar) {\r\n            return gar.group.createTeam(teamProperties).then(function (data) {\r\n                return {\r\n                    data: data,\r\n                    group: gar.group,\r\n                    team: new Team(gar.group),\r\n                };\r\n            });\r\n        });\r\n    };\r\n    Teams.prototype.getById = function (id) {\r\n        return new Team(this, id);\r\n    };\r\n    Teams = tslib_1.__decorate([\r\n        defaultPath(\"teams\")\r\n    ], Teams);\r\n    return Teams;\r\n}(GraphQueryableCollection));\r\nexport { Teams };\r\n/**\r\n * Represents a Microsoft Team\r\n */\r\nvar Team = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Team, _super);\r\n    function Team() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Team_1 = Team;\r\n    Object.defineProperty(Team.prototype, \"channels\", {\r\n        get: function () {\r\n            return new Channels(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Team.prototype, \"installedApps\", {\r\n        get: function () {\r\n            return new Apps(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Updates this team instance's properties\r\n     *\r\n     * @param properties The set of properties to update\r\n     */\r\n    // TODO:: update properties to be typed once type is available in graph-types\r\n    Team.prototype.update = function (properties) {\r\n        var _this = this;\r\n        return this.clone(Team_1, \"\").patchCore({\r\n            body: jsS(properties),\r\n        }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                team: _this,\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Archives this Team\r\n     *\r\n     * @param shouldSetSpoSiteReadOnlyForMembers Should members have Read-only in associated Team Site\r\n     */\r\n    // TODO:: update properties to be typed once type is available in graph-types\r\n    Team.prototype.archive = function (shouldSetSpoSiteReadOnlyForMembers) {\r\n        var _this = this;\r\n        var postBody;\r\n        if (shouldSetSpoSiteReadOnlyForMembers != null) {\r\n            postBody = extend(postBody, {\r\n                shouldSetSpoSiteReadOnlyForMembers: shouldSetSpoSiteReadOnlyForMembers,\r\n            });\r\n        }\r\n        return this.clone(Team_1, \"archive\").postCore({\r\n            body: jsS(postBody),\r\n        }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                team: _this,\r\n            };\r\n        });\r\n    };\r\n    /**\r\n    * Unarchives this Team\r\n    *\r\n    */\r\n    // TODO:: update properties to be typed once type is available in graph-types\r\n    Team.prototype.unarchive = function () {\r\n        var _this = this;\r\n        return this.clone(Team_1, \"unarchive\").postCore({}).then(function (data) {\r\n            return {\r\n                data: data,\r\n                team: _this,\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Clones this Team\r\n     * @param name The name of the new Group\r\n     * @param description Optional description of the group\r\n     * @param partsToClone Parts to clone ex: apps,tabs,settings,channels,members\r\n     * @param visibility Set visibility to public or private\r\n     */\r\n    // TODO:: update properties to be typed once type is available in graph-types\r\n    Team.prototype.cloneTeam = function (name, description, partsToClone, visibility) {\r\n        var _this = this;\r\n        if (description === void 0) { description = \"\"; }\r\n        var postBody = {\r\n            description: description ? description : \"\",\r\n            displayName: name,\r\n            mailNickname: name,\r\n            partsToClone: partsToClone,\r\n            visibility: visibility,\r\n        };\r\n        return this.clone(Team_1, \"clone\").postCore({\r\n            body: jsS(postBody),\r\n        }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                team: _this,\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Executes the currently built request\r\n     *\r\n     * @param parser Allows you to specify a parser to handle the result\r\n     * @param getOptions The options used for this request\r\n     */\r\n    Team.prototype.get = function (parser, options) {\r\n        if (parser === void 0) { parser = new ODataDefaultParser(); }\r\n        if (options === void 0) { options = {}; }\r\n        return this.clone(Team_1, \"\").getCore(parser, options);\r\n    };\r\n    var Team_1;\r\n    Team = Team_1 = tslib_1.__decorate([\r\n        defaultPath(\"team\")\r\n    ], Team);\r\n    return Team;\r\n}(GraphQueryableInstance));\r\nexport { Team };\r\nvar Channels = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Channels, _super);\r\n    function Channels() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Creates a new Channel in the Team\r\n     * @param name The display name of the new channel\r\n     * @param description Optional description of the channel\r\n     *\r\n     */\r\n    Channels.prototype.create = function (name, description) {\r\n        var _this = this;\r\n        if (description === void 0) { description = \"\"; }\r\n        var postBody = {\r\n            description: description && description.length > 0 ? description : \"\",\r\n            displayName: name,\r\n        };\r\n        return this.postCore({\r\n            body: jsS(postBody),\r\n        }).then(function (r) {\r\n            return {\r\n                channel: _this.getById(r.id),\r\n                data: r,\r\n            };\r\n        });\r\n    };\r\n    Channels.prototype.getById = function (id) {\r\n        return new Channel(this, id);\r\n    };\r\n    Channels = tslib_1.__decorate([\r\n        defaultPath(\"channels\")\r\n    ], Channels);\r\n    return Channels;\r\n}(GraphQueryableCollection));\r\nexport { Channels };\r\nvar Channel = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Channel, _super);\r\n    function Channel() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(Channel.prototype, \"tabs\", {\r\n        get: function () {\r\n            return new Tabs(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Channel;\r\n}(GraphQueryableInstance));\r\nexport { Channel };\r\nvar Apps = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Apps, _super);\r\n    function Apps() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Creates a new App in the Team\r\n     * @param appUrl The url to an app ex: https://graph.microsoft.com/beta/appCatalogs/teamsApps/12345678-9abc-def0-123456789a\r\n     *\r\n     */\r\n    Apps.prototype.add = function (appUrl) {\r\n        var postBody = {\r\n            \"teamsApp@odata.bind\": appUrl,\r\n        };\r\n        return this.postCore({\r\n            body: jsS(postBody),\r\n        }).then(function (r) {\r\n            return {\r\n                data: r,\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Deletes this app\r\n     */\r\n    Apps.prototype.remove = function () {\r\n        return this.deleteCore();\r\n    };\r\n    Apps = tslib_1.__decorate([\r\n        defaultPath(\"installedApps\")\r\n    ], Apps);\r\n    return Apps;\r\n}(GraphQueryableCollection));\r\nexport { Apps };\r\nvar Tabs = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Tabs, _super);\r\n    function Tabs() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Adds a tab to the cahnnel\r\n     * @param name The name of the new Tab\r\n     * @param appUrl The url to an app ex: https://graph.microsoft.com/beta/appCatalogs/teamsApps/12345678-9abc-def0-123456789a\r\n     * @param tabsConfiguration visit https://developer.microsoft.com/en-us/graph/docs/api-reference/v1.0/api/teamstab_add for reference\r\n     */\r\n    Tabs.prototype.add = function (name, appUrl, properties) {\r\n        var _this = this;\r\n        var postBody = extend({\r\n            name: name,\r\n            \"teamsApp@odata.bind\": appUrl,\r\n        }, properties);\r\n        return this.postCore({\r\n            body: jsS(postBody),\r\n        }).then(function (r) {\r\n            return {\r\n                data: r,\r\n                tab: _this.getById(r.id),\r\n            };\r\n        });\r\n    };\r\n    Tabs.prototype.getById = function (id) {\r\n        return new Tab(this, id);\r\n    };\r\n    Tabs = tslib_1.__decorate([\r\n        defaultPath(\"tabs\")\r\n    ], Tabs);\r\n    return Tabs;\r\n}(GraphQueryableCollection));\r\nexport { Tabs };\r\n/**\r\n * Represents a Microsoft Team\r\n */\r\nvar Tab = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Tab, _super);\r\n    function Tab() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Tab_1 = Tab;\r\n    /**\r\n     * Updates this tab\r\n     *\r\n     * @param properties The set of properties to update\r\n     */\r\n    // TODO:: update properties to be typed once type is available in graph-types\r\n    Tab.prototype.update = function (properties) {\r\n        var _this = this;\r\n        return this.clone(Tab_1, \"\").patchCore({\r\n            body: jsS(properties),\r\n        }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                tab: _this,\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Deletes this tab\r\n     */\r\n    Tab.prototype.remove = function () {\r\n        return this.deleteCore();\r\n    };\r\n    var Tab_1;\r\n    Tab = Tab_1 = tslib_1.__decorate([\r\n        defaultPath(\"tab\")\r\n    ], Tab);\r\n    return Tab;\r\n}(GraphQueryableInstance));\r\nexport { Tab };\r\n//# sourceMappingURL=teams.js.map","import * as tslib_1 from \"tslib\";\r\nimport { GraphQueryableInstance, GraphQueryableCollection, defaultPath } from \"./graphqueryable\";\r\nimport { jsS } from \"@pnp/common\";\r\nexport var DirectoryObjectType;\r\n(function (DirectoryObjectType) {\r\n    /**\r\n     * Directory Objects\r\n     */\r\n    DirectoryObjectType[DirectoryObjectType[\"directoryObject\"] = 0] = \"directoryObject\";\r\n    /**\r\n     * User\r\n     */\r\n    DirectoryObjectType[DirectoryObjectType[\"user\"] = 1] = \"user\";\r\n    /**\r\n     * Group\r\n     */\r\n    DirectoryObjectType[DirectoryObjectType[\"group\"] = 2] = \"group\";\r\n    /**\r\n     * Device\r\n     */\r\n    DirectoryObjectType[DirectoryObjectType[\"device\"] = 3] = \"device\";\r\n})(DirectoryObjectType || (DirectoryObjectType = {}));\r\n/**\r\n * Describes a collection of Directory Objects\r\n *\r\n */\r\nvar DirectoryObjects = /** @class */ (function (_super) {\r\n    tslib_1.__extends(DirectoryObjects, _super);\r\n    function DirectoryObjects() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    DirectoryObjects_1 = DirectoryObjects;\r\n    /**\r\n     * Gets a directoryObject from the collection using the specified id\r\n     *\r\n     * @param id Id of the Directory Object to get from this collection\r\n     */\r\n    DirectoryObjects.prototype.getById = function (id) {\r\n        return new DirectoryObject(this, id);\r\n    };\r\n    /**\r\n    * Returns the directory objects specified in a list of ids. NOTE: The directory objects returned are the full objects containing all their properties.\r\n    * The $select query option is not available for this operation.\r\n    *\r\n    * @param ids A collection of ids for which to return objects. You can specify up to 1000 ids.\r\n    * @param type A collection of resource types that specifies the set of resource collections to search. Default is directoryObject.\r\n    */\r\n    DirectoryObjects.prototype.getByIds = function (ids, type) {\r\n        if (type === void 0) { type = DirectoryObjectType.directoryObject; }\r\n        return this.clone(DirectoryObjects_1, \"getByIds\").postCore({\r\n            body: jsS({\r\n                ids: ids,\r\n                type: type,\r\n            }),\r\n        });\r\n    };\r\n    var DirectoryObjects_1;\r\n    DirectoryObjects = DirectoryObjects_1 = tslib_1.__decorate([\r\n        defaultPath(\"directoryObjects\")\r\n    ], DirectoryObjects);\r\n    return DirectoryObjects;\r\n}(GraphQueryableCollection));\r\nexport { DirectoryObjects };\r\n/**\r\n * Represents a Directory Object entity\r\n */\r\nvar DirectoryObject = /** @class */ (function (_super) {\r\n    tslib_1.__extends(DirectoryObject, _super);\r\n    function DirectoryObject() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Deletes this group\r\n     */\r\n    DirectoryObject.prototype.delete = function () {\r\n        return this.deleteCore();\r\n    };\r\n    /**\r\n     * Returns all the groups and directory roles that the specified Directory Object is a member of. The check is transitive\r\n     *\r\n     * @param securityEnabledOnly\r\n     */\r\n    DirectoryObject.prototype.getMemberObjects = function (securityEnabledOnly) {\r\n        if (securityEnabledOnly === void 0) { securityEnabledOnly = false; }\r\n        return this.clone(DirectoryObject, \"getMemberObjects\").postCore({\r\n            body: jsS({\r\n                securityEnabledOnly: securityEnabledOnly,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Returns all the groups that the specified Directory Object is a member of. The check is transitive\r\n     *\r\n     * @param securityEnabledOnly\r\n     */\r\n    DirectoryObject.prototype.getMemberGroups = function (securityEnabledOnly) {\r\n        if (securityEnabledOnly === void 0) { securityEnabledOnly = false; }\r\n        return this.clone(DirectoryObject, \"getMemberGroups\").postCore({\r\n            body: jsS({\r\n                securityEnabledOnly: securityEnabledOnly,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Check for membership in a specified list of groups, and returns from that list those groups of which the specified user, group, or directory object is a member.\r\n     * This function is transitive.\r\n     * @param groupIds A collection that contains the object IDs of the groups in which to check membership. Up to 20 groups may be specified.\r\n     */\r\n    DirectoryObject.prototype.checkMemberGroups = function (groupIds) {\r\n        return this.clone(DirectoryObject, \"checkMemberGroups\").postCore({\r\n            body: jsS({\r\n                groupIds: groupIds,\r\n            }),\r\n        });\r\n    };\r\n    return DirectoryObject;\r\n}(GraphQueryableInstance));\r\nexport { DirectoryObject };\r\n//# sourceMappingURL=directoryobjects.js.map","import * as tslib_1 from \"tslib\";\r\nimport { GraphQueryableInstance, GraphQueryableCollection, defaultPath } from \"./graphqueryable\";\r\nimport { jsS, extend } from \"@pnp/common\";\r\nvar Contacts = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Contacts, _super);\r\n    function Contacts() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Contacts.prototype.getById = function (id) {\r\n        return new Contact(this, id);\r\n    };\r\n    /**\r\n    * Create a new Contact for the user.\r\n    *\r\n    * @param givenName The contact's given name.\r\n    * @param surName The contact's surname.\r\n    * @param emailAddresses The contact's email addresses.\r\n    * @param businessPhones The contact's business phone numbers.\r\n    * @param additionalProperties A plain object collection of additional properties you want to set on the new contact\r\n    */\r\n    Contacts.prototype.add = function (givenName, surName, emailAddresses, businessPhones, additionalProperties) {\r\n        var _this = this;\r\n        if (additionalProperties === void 0) { additionalProperties = {}; }\r\n        var postBody = extend({\r\n            businessPhones: businessPhones,\r\n            emailAddresses: emailAddresses,\r\n            givenName: givenName,\r\n            surName: surName,\r\n        }, additionalProperties);\r\n        return this.postCore({\r\n            body: jsS(postBody),\r\n        }).then(function (r) {\r\n            return {\r\n                contact: _this.getById(r.id),\r\n                data: r,\r\n            };\r\n        });\r\n    };\r\n    Contacts = tslib_1.__decorate([\r\n        defaultPath(\"contacts\")\r\n    ], Contacts);\r\n    return Contacts;\r\n}(GraphQueryableCollection));\r\nexport { Contacts };\r\nvar Contact = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Contact, _super);\r\n    function Contact() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Deletes this contact\r\n     */\r\n    Contact.prototype.delete = function () {\r\n        return this.deleteCore();\r\n    };\r\n    /**\r\n     * Update the properties of a contact object\r\n     *\r\n     * @param properties Set of properties of this contact to update\r\n     */\r\n    Contact.prototype.update = function (properties) {\r\n        return this.patchCore({\r\n            body: jsS(properties),\r\n        });\r\n    };\r\n    return Contact;\r\n}(GraphQueryableInstance));\r\nexport { Contact };\r\nvar ContactFolders = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ContactFolders, _super);\r\n    function ContactFolders() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    ContactFolders.prototype.getById = function (id) {\r\n        return new ContactFolder(this, id);\r\n    };\r\n    /**\r\n     * Create a new Contact Folder for the user.\r\n     *\r\n     * @param displayName The folder's display name.\r\n     * @param parentFolderId The ID of the folder's parent folder.\r\n     */\r\n    ContactFolders.prototype.add = function (displayName, parentFolderId) {\r\n        var _this = this;\r\n        var postBody = {\r\n            displayName: displayName,\r\n            parentFolderId: parentFolderId,\r\n        };\r\n        return this.postCore({\r\n            body: jsS(postBody),\r\n        }).then(function (r) {\r\n            return {\r\n                contactFolder: _this.getById(r.id),\r\n                data: r,\r\n            };\r\n        });\r\n    };\r\n    ContactFolders = tslib_1.__decorate([\r\n        defaultPath(\"contactFolders\")\r\n    ], ContactFolders);\r\n    return ContactFolders;\r\n}(GraphQueryableCollection));\r\nexport { ContactFolders };\r\nvar ContactFolder = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ContactFolder, _super);\r\n    function ContactFolder() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(ContactFolder.prototype, \"contacts\", {\r\n        /**\r\n         * Gets the contacts in this contact folder\r\n         */\r\n        get: function () {\r\n            return new Contacts(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ContactFolder.prototype, \"childFolders\", {\r\n        /**\r\n        * Gets the contacts in this contact folder\r\n        */\r\n        get: function () {\r\n            return new ContactFolders(this, \"childFolders\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Deletes this contact folder\r\n     */\r\n    ContactFolder.prototype.delete = function () {\r\n        return this.deleteCore();\r\n    };\r\n    /**\r\n     * Update the properties of a contact folder\r\n     *\r\n     * @param properties Set of properties of this contact folder to update\r\n     */\r\n    ContactFolder.prototype.update = function (properties) {\r\n        return this.patchCore({\r\n            body: jsS(properties),\r\n        });\r\n    };\r\n    return ContactFolder;\r\n}(GraphQueryableInstance));\r\nexport { ContactFolder };\r\n//# sourceMappingURL=contacts.js.map","import * as tslib_1 from \"tslib\";\r\nimport { GraphQueryableInstance, GraphQueryableCollection, defaultPath } from \"./graphqueryable\";\r\nimport { jsS } from \"@pnp/common\";\r\n/**\r\n * Represents a onenote entity\r\n */\r\nvar OneNote = /** @class */ (function (_super) {\r\n    tslib_1.__extends(OneNote, _super);\r\n    function OneNote() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(OneNote.prototype, \"notebooks\", {\r\n        get: function () {\r\n            return new Notebooks(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(OneNote.prototype, \"sections\", {\r\n        get: function () {\r\n            return new Sections(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(OneNote.prototype, \"pages\", {\r\n        get: function () {\r\n            return new Pages(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    OneNote = tslib_1.__decorate([\r\n        defaultPath(\"onenote\")\r\n    ], OneNote);\r\n    return OneNote;\r\n}(GraphQueryableInstance));\r\nexport { OneNote };\r\n/**\r\n * Describes a collection of Notebook objects\r\n *\r\n */\r\nvar Notebooks = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Notebooks, _super);\r\n    function Notebooks() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets a notebook instance by id\r\n     *\r\n     * @param id Notebook id\r\n     */\r\n    Notebooks.prototype.getById = function (id) {\r\n        return new Notebook(this, id);\r\n    };\r\n    /**\r\n     * Create a new notebook as specified in the request body.\r\n     *\r\n     * @param displayName Notebook display name\r\n     */\r\n    Notebooks.prototype.add = function (displayName) {\r\n        var _this = this;\r\n        var postBody = {\r\n            displayName: displayName,\r\n        };\r\n        return this.postCore({\r\n            body: jsS(postBody),\r\n        }).then(function (r) {\r\n            return {\r\n                data: r,\r\n                notebook: _this.getById(r.id),\r\n            };\r\n        });\r\n    };\r\n    Notebooks = tslib_1.__decorate([\r\n        defaultPath(\"notebooks\")\r\n    ], Notebooks);\r\n    return Notebooks;\r\n}(GraphQueryableCollection));\r\nexport { Notebooks };\r\n/**\r\n * Describes a notebook instance\r\n *\r\n */\r\nvar Notebook = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Notebook, _super);\r\n    function Notebook(baseUrl, path) {\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    Object.defineProperty(Notebook.prototype, \"sections\", {\r\n        get: function () {\r\n            return new Sections(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Notebook;\r\n}(GraphQueryableInstance));\r\nexport { Notebook };\r\n/**\r\n * Describes a collection of Sections objects\r\n *\r\n */\r\nvar Sections = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Sections, _super);\r\n    function Sections() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets a section instance by id\r\n     *\r\n     * @param id Section id\r\n     */\r\n    Sections.prototype.getById = function (id) {\r\n        return new Section(this, id);\r\n    };\r\n    /**\r\n     * Adds a new section\r\n     *\r\n     * @param displayName New section display name\r\n     */\r\n    Sections.prototype.add = function (displayName) {\r\n        var _this = this;\r\n        var postBody = {\r\n            displayName: displayName,\r\n        };\r\n        return this.postCore({\r\n            body: jsS(postBody),\r\n        }).then(function (r) {\r\n            return {\r\n                data: r,\r\n                section: _this.getById(r.id),\r\n            };\r\n        });\r\n    };\r\n    Sections = tslib_1.__decorate([\r\n        defaultPath(\"sections\")\r\n    ], Sections);\r\n    return Sections;\r\n}(GraphQueryableCollection));\r\nexport { Sections };\r\n/**\r\n * Describes a sections instance\r\n *\r\n */\r\nvar Section = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Section, _super);\r\n    function Section(baseUrl, path) {\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    return Section;\r\n}(GraphQueryableInstance));\r\nexport { Section };\r\n/**\r\n * Describes a collection of Pages objects\r\n *\r\n */\r\nvar Pages = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Pages, _super);\r\n    function Pages() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Pages = tslib_1.__decorate([\r\n        defaultPath(\"pages\")\r\n    ], Pages);\r\n    return Pages;\r\n}(GraphQueryableCollection));\r\nexport { Pages };\r\n//# sourceMappingURL=onenote.js.map","import * as tslib_1 from \"tslib\";\r\nimport { GraphQueryableInstance, GraphQueryableCollection, defaultPath } from \"./graphqueryable\";\r\nimport { jsS, extend } from \"@pnp/common\";\r\n/**\r\n * Describes a collection of Drive objects\r\n *\r\n */\r\nvar Drives = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Drives, _super);\r\n    function Drives() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets a Drive instance by id\r\n     *\r\n     * @param id Drive id\r\n     */\r\n    Drives.prototype.getById = function (id) {\r\n        return new Drive(this, id);\r\n    };\r\n    Drives = tslib_1.__decorate([\r\n        defaultPath(\"drives\")\r\n    ], Drives);\r\n    return Drives;\r\n}(GraphQueryableCollection));\r\nexport { Drives };\r\n/**\r\n * Describes a Drive instance\r\n *\r\n */\r\nvar Drive = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Drive, _super);\r\n    function Drive() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(Drive.prototype, \"root\", {\r\n        get: function () {\r\n            return new Root(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Drive.prototype, \"items\", {\r\n        get: function () {\r\n            return new DriveItems(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Drive.prototype, \"list\", {\r\n        get: function () {\r\n            return new DriveList(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Drive.prototype, \"recent\", {\r\n        get: function () {\r\n            return new Recent(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Drive.prototype, \"sharedWithMe\", {\r\n        get: function () {\r\n            return new SharedWithMe(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Drive = tslib_1.__decorate([\r\n        defaultPath(\"drive\")\r\n    ], Drive);\r\n    return Drive;\r\n}(GraphQueryableInstance));\r\nexport { Drive };\r\n/**\r\n * Describes a Root instance\r\n *\r\n */\r\nvar Root = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Root, _super);\r\n    function Root() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(Root.prototype, \"children\", {\r\n        get: function () {\r\n            return new Children(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Root.prototype.search = function (query) {\r\n        return new DriveSearch(this, \"search(q='\" + query + \"')\");\r\n    };\r\n    Root = tslib_1.__decorate([\r\n        defaultPath(\"root\")\r\n    ], Root);\r\n    return Root;\r\n}(GraphQueryableInstance));\r\nexport { Root };\r\n/**\r\n * Describes a collection of Drive Item objects\r\n *\r\n */\r\nvar DriveItems = /** @class */ (function (_super) {\r\n    tslib_1.__extends(DriveItems, _super);\r\n    function DriveItems() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets a Drive Item instance by id\r\n     *\r\n     * @param id Drive Item id\r\n     */\r\n    DriveItems.prototype.getById = function (id) {\r\n        return new DriveItem(this, id);\r\n    };\r\n    DriveItems = tslib_1.__decorate([\r\n        defaultPath(\"items\")\r\n    ], DriveItems);\r\n    return DriveItems;\r\n}(GraphQueryableCollection));\r\nexport { DriveItems };\r\n/**\r\n * Describes a Drive Item instance\r\n *\r\n */\r\nvar DriveItem = /** @class */ (function (_super) {\r\n    tslib_1.__extends(DriveItem, _super);\r\n    function DriveItem() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(DriveItem.prototype, \"children\", {\r\n        get: function () {\r\n            return new Children(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DriveItem.prototype, \"thumbnails\", {\r\n        get: function () {\r\n            return new Thumbnails(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Deletes this Drive Item\r\n     */\r\n    DriveItem.prototype.delete = function () {\r\n        return this.deleteCore();\r\n    };\r\n    /**\r\n     * Update the properties of a Drive item\r\n     *\r\n     * @param properties Set of properties of this Drive Item to update\r\n     */\r\n    DriveItem.prototype.update = function (properties) {\r\n        return this.patchCore({\r\n            body: jsS(properties),\r\n        });\r\n    };\r\n    /**\r\n     * Move the Drive item and optionally update the properties\r\n     *\r\n     * @param parentReference Should contain Id of new parent folder\r\n     * @param properties Optional set of properties of this Drive Item to update\r\n     */\r\n    DriveItem.prototype.move = function (parentReference, properties) {\r\n        var patchBody = extend({}, parentReference);\r\n        if (properties) {\r\n            patchBody = extend({}, properties);\r\n        }\r\n        return this.patchCore({\r\n            body: jsS(patchBody),\r\n        });\r\n    };\r\n    return DriveItem;\r\n}(GraphQueryableInstance));\r\nexport { DriveItem };\r\n/**\r\n * Return a collection of DriveItems in the children relationship of a DriveItem\r\n *\r\n */\r\nvar Children = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Children, _super);\r\n    function Children() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n    * Create a new folder or DriveItem in a Drive with a specified parent item or path\r\n    * Currently only Folder or File works\r\n    * @param name The name of the Drive Item.\r\n    * @param properties Type of Drive Item to create.\r\n    * */\r\n    Children.prototype.add = function (name, driveItemType) {\r\n        var _this = this;\r\n        var postBody = extend({\r\n            name: name,\r\n        }, driveItemType);\r\n        return this.postCore({\r\n            body: jsS(postBody),\r\n        }).then(function (r) {\r\n            return {\r\n                data: r,\r\n                driveItem: new DriveItem(_this, r.id),\r\n            };\r\n        });\r\n    };\r\n    Children = tslib_1.__decorate([\r\n        defaultPath(\"children\")\r\n    ], Children);\r\n    return Children;\r\n}(GraphQueryableCollection));\r\nexport { Children };\r\nvar DriveList = /** @class */ (function (_super) {\r\n    tslib_1.__extends(DriveList, _super);\r\n    function DriveList() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    DriveList = tslib_1.__decorate([\r\n        defaultPath(\"list\")\r\n    ], DriveList);\r\n    return DriveList;\r\n}(GraphQueryableCollection));\r\nexport { DriveList };\r\nvar Recent = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Recent, _super);\r\n    function Recent() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Recent = tslib_1.__decorate([\r\n        defaultPath(\"recent\")\r\n    ], Recent);\r\n    return Recent;\r\n}(GraphQueryableInstance));\r\nexport { Recent };\r\nvar SharedWithMe = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SharedWithMe, _super);\r\n    function SharedWithMe() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    SharedWithMe = tslib_1.__decorate([\r\n        defaultPath(\"sharedWithMe\")\r\n    ], SharedWithMe);\r\n    return SharedWithMe;\r\n}(GraphQueryableInstance));\r\nexport { SharedWithMe };\r\nvar DriveSearch = /** @class */ (function (_super) {\r\n    tslib_1.__extends(DriveSearch, _super);\r\n    function DriveSearch() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    DriveSearch = tslib_1.__decorate([\r\n        defaultPath(\"search\")\r\n    ], DriveSearch);\r\n    return DriveSearch;\r\n}(GraphQueryableInstance));\r\nexport { DriveSearch };\r\nvar Thumbnails = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Thumbnails, _super);\r\n    function Thumbnails() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Thumbnails = tslib_1.__decorate([\r\n        defaultPath(\"thumbnails\")\r\n    ], Thumbnails);\r\n    return Thumbnails;\r\n}(GraphQueryableInstance));\r\nexport { Thumbnails };\r\n//# sourceMappingURL=onedrive.js.map","import * as tslib_1 from \"tslib\";\r\nimport { GraphQueryableInstance, GraphQueryableCollection, defaultPath } from \"./graphqueryable\";\r\nimport { jsS } from \"@pnp/common\";\r\nvar Messages = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Messages, _super);\r\n    function Messages() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets a member of the group by id\r\n     *\r\n     * @param id Attachment id\r\n     */\r\n    Messages.prototype.getById = function (id) {\r\n        return new Message(this, id);\r\n    };\r\n    /**\r\n     * Add a message to this collection\r\n     *\r\n     * @param message The message details\r\n     */\r\n    Messages.prototype.add = function (message) {\r\n        return this.postCore({\r\n            body: jsS(message),\r\n        });\r\n    };\r\n    Messages = tslib_1.__decorate([\r\n        defaultPath(\"messages\")\r\n    ], Messages);\r\n    return Messages;\r\n}(GraphQueryableCollection));\r\nexport { Messages };\r\nvar Message = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Message, _super);\r\n    function Message() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    return Message;\r\n}(GraphQueryableInstance));\r\nexport { Message };\r\nvar MailFolders = /** @class */ (function (_super) {\r\n    tslib_1.__extends(MailFolders, _super);\r\n    function MailFolders() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets a member of the group by id\r\n     *\r\n     * @param id Attachment id\r\n     */\r\n    MailFolders.prototype.getById = function (id) {\r\n        return new MailFolder(this, id);\r\n    };\r\n    /**\r\n     * Add a mail folder to this collection\r\n     *\r\n     * @param message The message details\r\n     */\r\n    MailFolders.prototype.add = function (mailFolder) {\r\n        return this.postCore({\r\n            body: jsS(mailFolder),\r\n        });\r\n    };\r\n    MailFolders = tslib_1.__decorate([\r\n        defaultPath(\"mailFolders\")\r\n    ], MailFolders);\r\n    return MailFolders;\r\n}(GraphQueryableCollection));\r\nexport { MailFolders };\r\nvar MailFolder = /** @class */ (function (_super) {\r\n    tslib_1.__extends(MailFolder, _super);\r\n    function MailFolder() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    return MailFolder;\r\n}(GraphQueryableInstance));\r\nexport { MailFolder };\r\nvar MailboxSettings = /** @class */ (function (_super) {\r\n    tslib_1.__extends(MailboxSettings, _super);\r\n    function MailboxSettings() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    MailboxSettings.prototype.update = function (settings) {\r\n        return this.patchCore({\r\n            body: jsS(settings),\r\n        });\r\n    };\r\n    MailboxSettings = tslib_1.__decorate([\r\n        defaultPath(\"mailboxSettings\")\r\n    ], MailboxSettings);\r\n    return MailboxSettings;\r\n}(GraphQueryableInstance));\r\nexport { MailboxSettings };\r\n//# sourceMappingURL=messages.js.map","import * as tslib_1 from \"tslib\";\r\nimport { GraphQueryableCollection, defaultPath } from \"./graphqueryable\";\r\nvar People = /** @class */ (function (_super) {\r\n    tslib_1.__extends(People, _super);\r\n    function People() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    People = tslib_1.__decorate([\r\n        defaultPath(\"people\")\r\n    ], People);\r\n    return People;\r\n}(GraphQueryableCollection));\r\nexport { People };\r\n//# sourceMappingURL=people.js.map","import * as tslib_1 from \"tslib\";\r\nimport { GraphQueryableInstance, GraphQueryableCollection, defaultPath } from \"./graphqueryable\";\r\n/**\r\n * Represents a Insights entity\r\n */\r\nvar Insights = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Insights, _super);\r\n    function Insights() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(Insights.prototype, \"trending\", {\r\n        get: function () {\r\n            return new Trending(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Insights.prototype, \"used\", {\r\n        get: function () {\r\n            return new Used(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Insights.prototype, \"shared\", {\r\n        get: function () {\r\n            return new Shared(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Insights = tslib_1.__decorate([\r\n        defaultPath(\"insights\")\r\n    ], Insights);\r\n    return Insights;\r\n}(GraphQueryableInstance));\r\nexport { Insights };\r\n/**\r\n * Describes a collection of Trending objects\r\n *\r\n */\r\nvar Trending = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Trending, _super);\r\n    function Trending() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Trending = tslib_1.__decorate([\r\n        defaultPath(\"trending\")\r\n    ], Trending);\r\n    return Trending;\r\n}(GraphQueryableCollection));\r\nexport { Trending };\r\n/**\r\n * Describes a collection of Used objects\r\n *\r\n */\r\nvar Used = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Used, _super);\r\n    function Used() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Used = tslib_1.__decorate([\r\n        defaultPath(\"used\")\r\n    ], Used);\r\n    return Used;\r\n}(GraphQueryableCollection));\r\nexport { Used };\r\n/**\r\n * Describes a collection of Shared objects\r\n *\r\n */\r\nvar Shared = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Shared, _super);\r\n    function Shared() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Shared = tslib_1.__decorate([\r\n        defaultPath(\"shared\")\r\n    ], Shared);\r\n    return Shared;\r\n}(GraphQueryableCollection));\r\nexport { Shared };\r\n//# sourceMappingURL=insights.js.map","import * as tslib_1 from \"tslib\";\r\nimport { jsS } from \"@pnp/common\";\r\nimport { GraphQueryableInstance, GraphQueryableCollection, defaultPath } from \"./graphqueryable\";\r\nimport { Contacts, ContactFolders } from \"./contacts\";\r\nimport { OneNote } from \"./onenote\";\r\nimport { Drive, Drives } from \"./onedrive\";\r\nimport { Tasks } from \"./planner\";\r\nimport { Teams } from \"./teams\";\r\nimport { Messages, MailboxSettings, MailFolders } from \"./messages\";\r\nimport { DirectoryObjects } from \"./directoryobjects\";\r\nimport { People } from \"./people\";\r\nimport { Photo } from \"./photos\";\r\nimport { Insights } from \"./insights\";\r\n/**\r\n * Describes a collection of Users objects\r\n *\r\n */\r\nvar Users = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Users, _super);\r\n    function Users() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets a user from the collection using the specified id\r\n     *\r\n     * @param id Id of the user to get from this collection\r\n     */\r\n    Users.prototype.getById = function (id) {\r\n        return new User(this, id);\r\n    };\r\n    Users = tslib_1.__decorate([\r\n        defaultPath(\"users\")\r\n    ], Users);\r\n    return Users;\r\n}(GraphQueryableCollection));\r\nexport { Users };\r\n/**\r\n * Represents a user entity\r\n */\r\nvar User = /** @class */ (function (_super) {\r\n    tslib_1.__extends(User, _super);\r\n    function User() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(User.prototype, \"onenote\", {\r\n        /**\r\n        * The onenote associated with me\r\n        */\r\n        get: function () {\r\n            return new OneNote(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(User.prototype, \"contacts\", {\r\n        /**\r\n        * The Contacts associated with the user\r\n        */\r\n        get: function () {\r\n            return new Contacts(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(User.prototype, \"photo\", {\r\n        /**\r\n        * The photo associated with the user\r\n        */\r\n        get: function () {\r\n            return new Photo(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(User.prototype, \"joinedTeams\", {\r\n        /**\r\n        * The Teams associated with the user\r\n        */\r\n        get: function () {\r\n            return new Teams(this, \"joinedTeams\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(User.prototype, \"memberOf\", {\r\n        /**\r\n        * The groups and directory roles associated with the user\r\n        */\r\n        get: function () {\r\n            return new DirectoryObjects(this, \"memberOf\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Returns all the groups and directory roles that the specified useris a member of. The check is transitive\r\n     *\r\n     * @param securityEnabledOnly\r\n     */\r\n    User.prototype.getMemberObjects = function (securityEnabledOnly) {\r\n        if (securityEnabledOnly === void 0) { securityEnabledOnly = false; }\r\n        return this.clone(User, \"getMemberObjects\").postCore({\r\n            body: jsS({\r\n                securityEnabledOnly: securityEnabledOnly,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Return all the groups that the specified user is a member of. The check is transitive\r\n     *\r\n     * @param securityEnabledOnly\r\n     */\r\n    User.prototype.getMemberGroups = function (securityEnabledOnly) {\r\n        if (securityEnabledOnly === void 0) { securityEnabledOnly = false; }\r\n        return this.clone(User, \"getMemberGroups\").postCore({\r\n            body: jsS({\r\n                securityEnabledOnly: securityEnabledOnly,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Check for membership in a specified list of groups, and returns from that list those groups of which the specified user, group, or directory object is a member.\r\n     * This function is transitive.\r\n     * @param groupIds A collection that contains the object IDs of the groups in which to check membership. Up to 20 groups may be specified.\r\n     */\r\n    User.prototype.checkMemberGroups = function (groupIds) {\r\n        return this.clone(User, \"checkMemberGroups\").postCore({\r\n            body: jsS({\r\n                groupIds: groupIds,\r\n            }),\r\n        });\r\n    };\r\n    Object.defineProperty(User.prototype, \"contactFolders\", {\r\n        /**\r\n        * The Contact Folders associated with the user\r\n        */\r\n        get: function () {\r\n            return new ContactFolders(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(User.prototype, \"drive\", {\r\n        /**\r\n        * The default Drive associated with the user\r\n        */\r\n        get: function () {\r\n            return new Drive(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(User.prototype, \"drives\", {\r\n        /**\r\n        * The Drives the user has available\r\n        */\r\n        get: function () {\r\n            return new Drives(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(User.prototype, \"tasks\", {\r\n        /**\r\n        * The Tasks the user has available\r\n        */\r\n        get: function () {\r\n            return new Tasks(this, \"planner/tasks\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(User.prototype, \"messages\", {\r\n        /**\r\n         * Get the messages in the signed-in user's mailbox\r\n         */\r\n        get: function () {\r\n            return new Messages(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(User.prototype, \"mailboxSettings\", {\r\n        /**\r\n         * Get the MailboxSettings in the signed-in user's mailbox\r\n         */\r\n        get: function () {\r\n            return new MailboxSettings(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(User.prototype, \"mailFolders\", {\r\n        /**\r\n         * Get the MailboxSettings in the signed-in user's mailbox\r\n         */\r\n        get: function () {\r\n            return new MailFolders(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Updates this user\r\n     *\r\n     * @param properties Properties used to update this user\r\n     */\r\n    User.prototype.update = function (properties) {\r\n        return this.patchCore({\r\n            body: jsS(properties),\r\n        });\r\n    };\r\n    /**\r\n     * Deletes this user\r\n     */\r\n    User.prototype.delete = function () {\r\n        return this.deleteCore();\r\n    };\r\n    /**\r\n     * Send the message specified in the request body. The message is saved in the Sent Items folder by default.\r\n     */\r\n    User.prototype.sendMail = function (message) {\r\n        return this.clone(User, \"sendMail\").postCore({\r\n            body: jsS(message),\r\n        });\r\n    };\r\n    Object.defineProperty(User.prototype, \"people\", {\r\n        /**\r\n        * People ordered by their relevance to the user\r\n        */\r\n        get: function () {\r\n            return new People(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(User.prototype, \"directReports\", {\r\n        /**\r\n        * People that have direct reports to the user\r\n        */\r\n        get: function () {\r\n            return new People(this, \"directReports\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(User.prototype, \"insights\", {\r\n        /**\r\n        * The Insights associated with me\r\n        */\r\n        get: function () {\r\n            return new Insights(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return User;\r\n}(GraphQueryableInstance));\r\nexport { User };\r\n//# sourceMappingURL=users.js.map","import * as tslib_1 from \"tslib\";\r\nimport { ODataBatch } from \"@pnp/odata\";\r\nimport { Logger } from \"@pnp/logging\";\r\nimport { extend, jsS, isUrlAbsolute } from \"@pnp/common\";\r\nimport { GraphRuntimeConfig } from \"./config/graphlibconfig\";\r\nimport { GraphHttpClient } from \"./net/graphhttpclient\";\r\nvar GraphBatch = /** @class */ (function (_super) {\r\n    tslib_1.__extends(GraphBatch, _super);\r\n    function GraphBatch(batchUrl, maxRequests) {\r\n        if (batchUrl === void 0) { batchUrl = \"https://graph.microsoft.com/v1.0/$batch\"; }\r\n        if (maxRequests === void 0) { maxRequests = 20; }\r\n        var _this = _super.call(this) || this;\r\n        _this.batchUrl = batchUrl;\r\n        _this.maxRequests = maxRequests;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Urls come to the batch absolute, but the processor expects relative\r\n     * @param url Url to ensure is relative\r\n     */\r\n    GraphBatch.makeUrlRelative = function (url) {\r\n        if (!isUrlAbsolute(url)) {\r\n            // already not absolute, just give it back\r\n            return url;\r\n        }\r\n        var index = url.indexOf(\".com/v1.0/\");\r\n        if (index < 0) {\r\n            index = url.indexOf(\".com/beta/\");\r\n            if (index > -1) {\r\n                // beta url\r\n                return url.substr(index + 10);\r\n            }\r\n        }\r\n        else {\r\n            // v1.0 url\r\n            return url.substr(index + 9);\r\n        }\r\n        // no idea\r\n        return url;\r\n    };\r\n    GraphBatch.formatRequests = function (requests) {\r\n        var _this = this;\r\n        return requests.map(function (reqInfo, index) {\r\n            var requestFragment = {\r\n                id: \"\" + ++index,\r\n                method: reqInfo.method,\r\n                url: _this.makeUrlRelative(reqInfo.url),\r\n            };\r\n            var headers = {};\r\n            // merge global config headers\r\n            if (GraphRuntimeConfig.headers !== undefined && GraphRuntimeConfig.headers !== null) {\r\n                headers = extend(headers, GraphRuntimeConfig.headers);\r\n            }\r\n            if (reqInfo.options !== undefined) {\r\n                // merge per request headers\r\n                if (reqInfo.options.headers !== undefined && reqInfo.options.headers !== null) {\r\n                    headers = extend(headers, reqInfo.options.headers);\r\n                }\r\n                // add a request body\r\n                if (reqInfo.options.body !== undefined && reqInfo.options.body !== null) {\r\n                    requestFragment = extend(requestFragment, {\r\n                        body: reqInfo.options.body,\r\n                    });\r\n                }\r\n            }\r\n            requestFragment = extend(requestFragment, {\r\n                headers: headers,\r\n            });\r\n            return requestFragment;\r\n        });\r\n    };\r\n    GraphBatch.parseResponse = function (requests, graphResponse) {\r\n        return new Promise(function (resolve) {\r\n            var parsedResponses = new Array(requests.length).fill(null);\r\n            for (var i = 0; i < graphResponse.responses.length; ++i) {\r\n                var response = graphResponse.responses[i];\r\n                // we create the request id by adding 1 to the index, so we place the response by subtracting one to match\r\n                // the array of requests and make it easier to map them by index\r\n                var responseId = parseInt(response.id, 10) - 1;\r\n                if (response.status === 204) {\r\n                    parsedResponses[responseId] = new Response();\r\n                }\r\n                else {\r\n                    parsedResponses[responseId] = new Response(JSON.stringify(response.body), response);\r\n                }\r\n            }\r\n            resolve({\r\n                nextLink: graphResponse.nextLink,\r\n                responses: parsedResponses,\r\n            });\r\n        });\r\n    };\r\n    GraphBatch.prototype.executeImpl = function () {\r\n        var _this = this;\r\n        Logger.write(\"[\" + this.batchId + \"] (\" + (new Date()).getTime() + \") Executing batch with \" + this.requests.length + \" requests.\", 1 /* Info */);\r\n        if (this.requests.length < 1) {\r\n            Logger.write(\"Resolving empty batch.\", 1 /* Info */);\r\n            return Promise.resolve();\r\n        }\r\n        var client = new GraphHttpClient();\r\n        // create a working copy of our requests\r\n        var requests = this.requests.slice();\r\n        // this is the root of our promise chain\r\n        var promise = Promise.resolve();\r\n        var _loop_1 = function () {\r\n            var requestsChunk = requests.splice(0, this_1.maxRequests);\r\n            var batchRequest = {\r\n                requests: GraphBatch.formatRequests(requestsChunk),\r\n            };\r\n            var batchOptions = {\r\n                body: jsS(batchRequest),\r\n                headers: {\r\n                    \"Accept\": \"application/json\",\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                method: \"POST\",\r\n            };\r\n            Logger.write(\"[\" + this_1.batchId + \"] (\" + (new Date()).getTime() + \") Sending batch request.\", 1 /* Info */);\r\n            client.fetch(this_1.batchUrl, batchOptions)\r\n                .then(function (r) { return r.json(); })\r\n                .then(function (j) { return GraphBatch.parseResponse(requestsChunk, j); })\r\n                .then(function (parsedResponse) {\r\n                Logger.write(\"[\" + _this.batchId + \"] (\" + (new Date()).getTime() + \") Resolving batched requests.\", 1 /* Info */);\r\n                parsedResponse.responses.reduce(function (chain, response, index) {\r\n                    var request = requestsChunk[index];\r\n                    Logger.write(\"[\" + _this.batchId + \"] (\" + (new Date()).getTime() + \") Resolving batched request \" + request.method + \" \" + request.url + \".\", 0 /* Verbose */);\r\n                    return chain.then(function (_) { return request.parser.parse(response).then(request.resolve).catch(request.reject); });\r\n                }, promise);\r\n            });\r\n        };\r\n        var this_1 = this;\r\n        while (requests.length > 0) {\r\n            _loop_1();\r\n        }\r\n        return promise;\r\n    };\r\n    return GraphBatch;\r\n}(ODataBatch));\r\nexport { GraphBatch };\r\n//# sourceMappingURL=batch.js.map","import * as tslib_1 from \"tslib\";\r\nimport { jsS, extend } from \"@pnp/common\";\r\nimport { GraphQueryableCollection, defaultPath } from \"./graphqueryable\";\r\nvar Invitations = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Invitations, _super);\r\n    function Invitations() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Create a new Invitation via invitation manager.\r\n     *\r\n     * @param invitedUserEmailAddress The email address of the user being invited.\r\n     * @param inviteRedirectUrl The URL user should be redirected to once the invitation is redeemed.\r\n     * @param additionalProperties A plain object collection of additional properties you want to set in the invitation\r\n     */\r\n    Invitations.prototype.create = function (invitedUserEmailAddress, inviteRedirectUrl, additionalProperties) {\r\n        if (additionalProperties === void 0) { additionalProperties = {}; }\r\n        var postBody = extend({\r\n            inviteRedirectUrl: inviteRedirectUrl,\r\n            invitedUserEmailAddress: invitedUserEmailAddress,\r\n        }, additionalProperties);\r\n        return this.postCore({\r\n            body: jsS(postBody),\r\n        }).then(function (r) {\r\n            return {\r\n                data: r,\r\n            };\r\n        });\r\n    };\r\n    Invitations = tslib_1.__decorate([\r\n        defaultPath(\"invitations\")\r\n    ], Invitations);\r\n    return Invitations;\r\n}(GraphQueryableCollection));\r\nexport { Invitations };\r\n//# sourceMappingURL=invitations.js.map","import * as tslib_1 from \"tslib\";\r\nimport { GraphQueryableInstance, GraphQueryableCollection, defaultPath } from \"./graphqueryable\";\r\nimport { jsS, extend } from \"@pnp/common\";\r\nvar Subscriptions = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Subscriptions, _super);\r\n    function Subscriptions() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Subscriptions.prototype.getById = function (id) {\r\n        return new Subscription(this, id);\r\n    };\r\n    /**\r\n     * Create a new Subscription.\r\n     *\r\n     * @param changeType Indicates the type of change in the subscribed resource that will raise a notification. The supported values are: created, updated, deleted.\r\n     * @param notificationUrl The URL of the endpoint that will receive the notifications. This URL must make use of the HTTPS protocol.\r\n     * @param resource Specifies the resource that will be monitored for changes. Do not include the base URL (https://graph.microsoft.com/v1.0/).\r\n     * @param expirationDateTime Specifies the date and time when the webhook subscription expires. The time is in UTC.\r\n     * @param additionalProperties A plain object collection of additional properties you want to set on the new subscription\r\n     *\r\n     */\r\n    Subscriptions.prototype.add = function (changeType, notificationUrl, resource, expirationDateTime, additionalProperties) {\r\n        var _this = this;\r\n        if (additionalProperties === void 0) { additionalProperties = {}; }\r\n        var postBody = extend({\r\n            changeType: changeType,\r\n            expirationDateTime: expirationDateTime,\r\n            notificationUrl: notificationUrl,\r\n            resource: resource,\r\n        }, additionalProperties);\r\n        return this.postCore({\r\n            body: jsS(postBody),\r\n        }).then(function (r) {\r\n            return {\r\n                data: r,\r\n                subscription: _this.getById(r.id),\r\n            };\r\n        });\r\n    };\r\n    Subscriptions = tslib_1.__decorate([\r\n        defaultPath(\"subscriptions\")\r\n    ], Subscriptions);\r\n    return Subscriptions;\r\n}(GraphQueryableCollection));\r\nexport { Subscriptions };\r\nvar Subscription = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Subscription, _super);\r\n    function Subscription() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Deletes this Subscription\r\n     */\r\n    Subscription.prototype.delete = function () {\r\n        return this.deleteCore();\r\n    };\r\n    /**\r\n     * Update the properties of a Subscription\r\n     *\r\n     * @param properties Set of properties of this Subscription to update\r\n     */\r\n    Subscription.prototype.update = function (properties) {\r\n        return this.patchCore({\r\n            body: jsS(properties),\r\n        });\r\n    };\r\n    return Subscription;\r\n}(GraphQueryableInstance));\r\nexport { Subscription };\r\n//# sourceMappingURL=subscriptions.js.map","import * as tslib_1 from \"tslib\";\r\nimport { jsS } from \"@pnp/common\";\r\nimport { GraphQueryableCollection, defaultPath, GraphQueryableInstance } from \"./graphqueryable\";\r\nvar Security = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Security, _super);\r\n    function Security() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(Security.prototype, \"alerts\", {\r\n        get: function () {\r\n            return new Alerts(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Security = tslib_1.__decorate([\r\n        defaultPath(\"security\")\r\n    ], Security);\r\n    return Security;\r\n}(GraphQueryableInstance));\r\nexport { Security };\r\nvar Alerts = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Alerts, _super);\r\n    function Alerts() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Alerts.prototype.getById = function (id) {\r\n        return new Alert(this, id);\r\n    };\r\n    Alerts = tslib_1.__decorate([\r\n        defaultPath(\"alerts\")\r\n    ], Alerts);\r\n    return Alerts;\r\n}(GraphQueryableCollection));\r\nexport { Alerts };\r\nvar Alert = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Alert, _super);\r\n    function Alert() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n    * Update the properties of an Alert\r\n    *\r\n    * @param properties Set of properties of this Alert to update\r\n    */\r\n    Alert.prototype.update = function (properties) {\r\n        return this.patchCore({\r\n            body: jsS(properties),\r\n        });\r\n    };\r\n    return Alert;\r\n}(GraphQueryableInstance));\r\nexport { Alert };\r\n//# sourceMappingURL=security.js.map","import * as tslib_1 from \"tslib\";\r\nimport { GraphQueryableInstance, GraphQueryableCollection, defaultPath } from \"./graphqueryable\";\r\nimport { jsS, extend } from \"@pnp/common\";\r\nimport { Drive, Drives, DriveItem, } from \"./onedrive\";\r\n/**\r\n * Represents a Sites entity\r\n */\r\nvar Sites = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Sites, _super);\r\n    function Sites() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(Sites.prototype, \"root\", {\r\n        /**\r\n         * Gets the root site collection of the tenant\r\n         */\r\n        get: function () {\r\n            return new GraphSite(this, \"root\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets a Site instance by id\r\n     *\r\n     * @param baseUrl Base url ex: contoso.sharepoint.com\r\n     * @param relativeUrl Optional relative url ex: /sites/site\r\n     */\r\n    Sites.prototype.getById = function (baseUrl, relativeUrl) {\r\n        var siteUrl = baseUrl;\r\n        // If a relative URL combine url with : at the right places\r\n        if (relativeUrl) {\r\n            siteUrl = this._urlCombine(baseUrl, relativeUrl);\r\n        }\r\n        return new GraphSite(this, siteUrl);\r\n    };\r\n    /**\r\n     * Method to make sure the url is encoded as it should with :\r\n     *\r\n     */\r\n    Sites.prototype._urlCombine = function (baseUrl, relativeUrl) {\r\n        // remove last '/' of base if exists\r\n        if (baseUrl.lastIndexOf(\"/\") === baseUrl.length - 1) {\r\n            baseUrl = baseUrl.substring(0, baseUrl.length - 1);\r\n        }\r\n        // remove '/' at 0\r\n        if (relativeUrl.charAt(0) === \"/\") {\r\n            relativeUrl = relativeUrl.substring(1, relativeUrl.length);\r\n        }\r\n        // remove last '/' of next if exists\r\n        if (relativeUrl.lastIndexOf(\"/\") === relativeUrl.length - 1) {\r\n            relativeUrl = relativeUrl.substring(0, relativeUrl.length - 1);\r\n        }\r\n        return baseUrl + \":/\" + relativeUrl + \":\";\r\n    };\r\n    Sites = tslib_1.__decorate([\r\n        defaultPath(\"sites\")\r\n    ], Sites);\r\n    return Sites;\r\n}(GraphQueryableInstance));\r\nexport { Sites };\r\n/**\r\n * Describes a Site object\r\n *\r\n */\r\nvar GraphSite = /** @class */ (function (_super) {\r\n    tslib_1.__extends(GraphSite, _super);\r\n    function GraphSite() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(GraphSite.prototype, \"columns\", {\r\n        get: function () {\r\n            return new GraphColumns(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(GraphSite.prototype, \"contentTypes\", {\r\n        get: function () {\r\n            return new GraphContentTypes(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(GraphSite.prototype, \"drive\", {\r\n        get: function () {\r\n            return new Drive(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(GraphSite.prototype, \"drives\", {\r\n        get: function () {\r\n            return new Drives(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(GraphSite.prototype, \"lists\", {\r\n        get: function () {\r\n            return new GraphLists(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(GraphSite.prototype, \"sites\", {\r\n        get: function () {\r\n            return new Sites(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return GraphSite;\r\n}(GraphQueryableInstance));\r\nexport { GraphSite };\r\n/**\r\n* Describes a collection of Content Type objects\r\n*\r\n*/\r\nvar GraphContentTypes = /** @class */ (function (_super) {\r\n    tslib_1.__extends(GraphContentTypes, _super);\r\n    function GraphContentTypes() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets a Content Type instance by id\r\n     *\r\n     * @param id Content Type id\r\n     */\r\n    GraphContentTypes.prototype.getById = function (id) {\r\n        return new GraphContentType(this, id);\r\n    };\r\n    GraphContentTypes = tslib_1.__decorate([\r\n        defaultPath(\"contenttypes\")\r\n    ], GraphContentTypes);\r\n    return GraphContentTypes;\r\n}(GraphQueryableCollection));\r\nexport { GraphContentTypes };\r\n/**\r\n * Describes a Content Type object\r\n *\r\n */\r\nvar GraphContentType = /** @class */ (function (_super) {\r\n    tslib_1.__extends(GraphContentType, _super);\r\n    function GraphContentType() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    return GraphContentType;\r\n}(GraphQueryableInstance));\r\nexport { GraphContentType };\r\n/**\r\n * Describes a collection of Column Definition objects\r\n *\r\n */\r\nvar GraphColumns = /** @class */ (function (_super) {\r\n    tslib_1.__extends(GraphColumns, _super);\r\n    function GraphColumns() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets a Column instance by id\r\n     *\r\n     * @param id Column id\r\n     */\r\n    GraphColumns.prototype.getById = function (id) {\r\n        return new GraphColumn(this, id);\r\n    };\r\n    GraphColumns = tslib_1.__decorate([\r\n        defaultPath(\"columns\")\r\n    ], GraphColumns);\r\n    return GraphColumns;\r\n}(GraphQueryableCollection));\r\nexport { GraphColumns };\r\n/**\r\n * Describes a Column Definition object\r\n *\r\n */\r\nvar GraphColumn = /** @class */ (function (_super) {\r\n    tslib_1.__extends(GraphColumn, _super);\r\n    function GraphColumn() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(GraphColumn.prototype, \"columnLinks\", {\r\n        get: function () {\r\n            return new GraphColumnLinks(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return GraphColumn;\r\n}(GraphQueryableInstance));\r\nexport { GraphColumn };\r\n/**\r\n * Describes a collection of Column Link objects\r\n *\r\n */\r\nvar GraphColumnLinks = /** @class */ (function (_super) {\r\n    tslib_1.__extends(GraphColumnLinks, _super);\r\n    function GraphColumnLinks() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets a Column Link instance by id\r\n     *\r\n     * @param id Column link id\r\n     */\r\n    GraphColumnLinks.prototype.getById = function (id) {\r\n        return new GraphColumnLink(this, id);\r\n    };\r\n    GraphColumnLinks = tslib_1.__decorate([\r\n        defaultPath(\"columnlinks\")\r\n    ], GraphColumnLinks);\r\n    return GraphColumnLinks;\r\n}(GraphQueryableCollection));\r\nexport { GraphColumnLinks };\r\n/**\r\n * Describes a Column Link object\r\n *\r\n */\r\nvar GraphColumnLink = /** @class */ (function (_super) {\r\n    tslib_1.__extends(GraphColumnLink, _super);\r\n    function GraphColumnLink() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    return GraphColumnLink;\r\n}(GraphQueryableInstance));\r\nexport { GraphColumnLink };\r\n/**\r\n* Describes a collection of Column definitions objects\r\n*/\r\nvar GraphLists = /** @class */ (function (_super) {\r\n    tslib_1.__extends(GraphLists, _super);\r\n    function GraphLists() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets a List instance by id\r\n     *\r\n     * @param id List id\r\n     */\r\n    GraphLists.prototype.getById = function (id) {\r\n        return new GraphList(this, id);\r\n    };\r\n    /**\r\n    * Create a new List\r\n    * @param displayName The display name of the List\r\n    * @param list List information. Which template, if hidden, and contentTypesEnabled.\r\n    * @param additionalProperties A plain object collection of additional properties you want to set in list\r\n    *\r\n    * */\r\n    GraphLists.prototype.create = function (displayName, list, additionalProperties) {\r\n        var _this = this;\r\n        if (additionalProperties === void 0) { additionalProperties = {}; }\r\n        var postBody = extend({\r\n            displayName: displayName,\r\n            list: list,\r\n        }, additionalProperties);\r\n        return this.postCore({\r\n            body: jsS(postBody),\r\n        }).then(function (r) {\r\n            return {\r\n                data: r,\r\n                list: new GraphList(_this, r.id),\r\n            };\r\n        });\r\n    };\r\n    GraphLists = tslib_1.__decorate([\r\n        defaultPath(\"lists\")\r\n    ], GraphLists);\r\n    return GraphLists;\r\n}(GraphQueryableCollection));\r\nexport { GraphLists };\r\n/**\r\n * Describes a List object\r\n *\r\n */\r\nvar GraphList = /** @class */ (function (_super) {\r\n    tslib_1.__extends(GraphList, _super);\r\n    function GraphList() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(GraphList.prototype, \"columns\", {\r\n        get: function () {\r\n            return new GraphColumns(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(GraphList.prototype, \"contentTypes\", {\r\n        get: function () {\r\n            return new GraphContentTypes(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(GraphList.prototype, \"drive\", {\r\n        get: function () {\r\n            return new Drive(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(GraphList.prototype, \"items\", {\r\n        get: function () {\r\n            return new GraphItems(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return GraphList;\r\n}(GraphQueryableInstance));\r\nexport { GraphList };\r\n/**\r\n* Describes a collection of Item objects\r\n*/\r\nvar GraphItems = /** @class */ (function (_super) {\r\n    tslib_1.__extends(GraphItems, _super);\r\n    function GraphItems() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets a List Item instance by id\r\n     *\r\n     * @param id List item id\r\n     */\r\n    GraphItems.prototype.getById = function (id) {\r\n        return new GraphItem(this, id);\r\n    };\r\n    /**\r\n    * Create a new Item\r\n    * @param displayName The display name of the List\r\n    * @param list List information. Which template, if hidden, and contentTypesEnabled.\r\n    * @param additionalProperties A plain object collection of additional properties you want to set in list\r\n    *\r\n    * */\r\n    GraphItems.prototype.create = function (fields) {\r\n        var _this = this;\r\n        var postBody = {\r\n            fields: fields,\r\n        };\r\n        return this.postCore({\r\n            body: jsS(postBody),\r\n        }).then(function (r) {\r\n            return {\r\n                data: r,\r\n                item: new GraphItem(_this, r.id),\r\n            };\r\n        });\r\n    };\r\n    GraphItems = tslib_1.__decorate([\r\n        defaultPath(\"items\")\r\n    ], GraphItems);\r\n    return GraphItems;\r\n}(GraphQueryableCollection));\r\nexport { GraphItems };\r\n/**\r\n * Describes an Item object\r\n *\r\n */\r\nvar GraphItem = /** @class */ (function (_super) {\r\n    tslib_1.__extends(GraphItem, _super);\r\n    function GraphItem() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(GraphItem.prototype, \"driveItem\", {\r\n        get: function () {\r\n            return new DriveItem(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(GraphItem.prototype, \"fields\", {\r\n        get: function () {\r\n            return new GraphFields(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(GraphItem.prototype, \"versions\", {\r\n        get: function () {\r\n            return new GraphVersions(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Deletes this item\r\n     */\r\n    GraphItem.prototype.delete = function () {\r\n        return this.deleteCore();\r\n    };\r\n    /**\r\n     * Update the properties of a item object\r\n     *\r\n     * @param properties Set of properties of this item to update\r\n     */\r\n    GraphItem.prototype.update = function (properties) {\r\n        return this.patchCore({\r\n            body: jsS(properties),\r\n        });\r\n    };\r\n    return GraphItem;\r\n}(GraphQueryableInstance));\r\nexport { GraphItem };\r\n/**\r\n * Describes a collection of Field objects\r\n *\r\n */\r\nvar GraphFields = /** @class */ (function (_super) {\r\n    tslib_1.__extends(GraphFields, _super);\r\n    function GraphFields() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    GraphFields = tslib_1.__decorate([\r\n        defaultPath(\"fields\")\r\n    ], GraphFields);\r\n    return GraphFields;\r\n}(GraphQueryableCollection));\r\nexport { GraphFields };\r\n/**\r\n * Describes a collection of Version objects\r\n *\r\n */\r\nvar GraphVersions = /** @class */ (function (_super) {\r\n    tslib_1.__extends(GraphVersions, _super);\r\n    function GraphVersions() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n    * Gets a Version instance by id\r\n    *\r\n    * @param id Version id\r\n    */\r\n    GraphVersions.prototype.getById = function (id) {\r\n        return new Version(this, id);\r\n    };\r\n    GraphVersions = tslib_1.__decorate([\r\n        defaultPath(\"versions\")\r\n    ], GraphVersions);\r\n    return GraphVersions;\r\n}(GraphQueryableCollection));\r\nexport { GraphVersions };\r\n/**\r\n * Describes a Version object\r\n *\r\n */\r\nvar Version = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Version, _super);\r\n    function Version() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    return Version;\r\n}(GraphQueryableInstance));\r\nexport { Version };\r\n//# sourceMappingURL=sites.js.map","import * as tslib_1 from \"tslib\";\r\nimport { GraphQueryable } from \"./graphqueryable\";\r\nimport { setup as _setup, } from \"./config/graphlibconfig\";\r\nimport { Groups } from \"./groups\";\r\nimport { Teams } from \"./teams\";\r\nimport { Users, User } from \"./users\";\r\nimport { Planner } from \"./planner\";\r\nimport { GraphBatch } from \"./batch\";\r\nimport { DirectoryObjects } from \"./directoryobjects\";\r\nimport { Invitations } from \"./invitations\";\r\nimport { Subscriptions } from \"./subscriptions\";\r\nimport { Security } from \"./security\";\r\nimport { Sites } from \"./sites\";\r\nvar GraphRest = /** @class */ (function (_super) {\r\n    tslib_1.__extends(GraphRest, _super);\r\n    function GraphRest(baseUrl, path) {\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    Object.defineProperty(GraphRest.prototype, \"directoryObjects\", {\r\n        get: function () {\r\n            return new DirectoryObjects(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(GraphRest.prototype, \"groups\", {\r\n        get: function () {\r\n            return new Groups(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(GraphRest.prototype, \"teams\", {\r\n        get: function () {\r\n            return new Teams(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(GraphRest.prototype, \"me\", {\r\n        get: function () {\r\n            return new User(this, \"me\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(GraphRest.prototype, \"planner\", {\r\n        get: function () {\r\n            return new Planner(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(GraphRest.prototype, \"users\", {\r\n        get: function () {\r\n            return new Users(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(GraphRest.prototype, \"invitations\", {\r\n        get: function () {\r\n            return new Invitations(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(GraphRest.prototype, \"subscriptions\", {\r\n        get: function () {\r\n            return new Subscriptions(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    GraphRest.prototype.createBatch = function () {\r\n        return new GraphBatch();\r\n    };\r\n    GraphRest.prototype.setup = function (config) {\r\n        _setup(config);\r\n    };\r\n    Object.defineProperty(GraphRest.prototype, \"security\", {\r\n        get: function () {\r\n            return new Security(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(GraphRest.prototype, \"sites\", {\r\n        get: function () {\r\n            return new Sites(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return GraphRest;\r\n}(GraphQueryable));\r\nexport { GraphRest };\r\nexport var graph = new GraphRest(\"v1.0\");\r\n//# sourceMappingURL=rest.js.map","import { extend } from \"@pnp/common\";\r\n/**\r\n * Makes requests using the SP.RequestExecutor library.\r\n */\r\nvar SPRequestExecutorClient = /** @class */ (function () {\r\n    function SPRequestExecutorClient() {\r\n        /**\r\n         * Converts a SharePoint REST API response to a fetch API response.\r\n         */\r\n        this.convertToResponse = function (spResponse) {\r\n            var responseHeaders = new Headers();\r\n            if (spResponse.headers !== undefined) {\r\n                for (var h in spResponse.headers) {\r\n                    if (spResponse.headers[h]) {\r\n                        responseHeaders.append(h, spResponse.headers[h]);\r\n                    }\r\n                }\r\n            }\r\n            // Cannot have an empty string body when creating a Response with status 204\r\n            var body = spResponse.statusCode === 204 ? null : spResponse.body;\r\n            return new Response(body, {\r\n                headers: responseHeaders,\r\n                status: spResponse.statusCode,\r\n                statusText: spResponse.statusText,\r\n            });\r\n        };\r\n    }\r\n    /**\r\n     * Fetches a URL using the SP.RequestExecutor library.\r\n     */\r\n    SPRequestExecutorClient.prototype.fetch = function (url, options) {\r\n        var _this = this;\r\n        if (SP === undefined || SP.RequestExecutor === undefined) {\r\n            throw Error(\"SP.RequestExecutor is undefined. Load the SP.RequestExecutor.js library (/_layouts/15/SP.RequestExecutor.js) before loading the PnP JS Core library.\");\r\n        }\r\n        var addinWebUrl = url.substring(0, url.indexOf(\"/_api\")), executor = new SP.RequestExecutor(addinWebUrl);\r\n        var headers = {}, iterator, temp;\r\n        if (options.headers && options.headers instanceof Headers) {\r\n            iterator = options.headers.entries();\r\n            temp = iterator.next();\r\n            while (!temp.done) {\r\n                headers[temp.value[0]] = temp.value[1];\r\n                temp = iterator.next();\r\n            }\r\n        }\r\n        else {\r\n            headers = options.headers;\r\n        }\r\n        return new Promise(function (resolve, reject) {\r\n            var requestOptions = {\r\n                error: function (error) {\r\n                    reject(_this.convertToResponse(error));\r\n                },\r\n                headers: headers,\r\n                method: options.method,\r\n                success: function (response) {\r\n                    resolve(_this.convertToResponse(response));\r\n                },\r\n                url: url,\r\n            };\r\n            if (options.body) {\r\n                requestOptions = extend(requestOptions, { body: options.body });\r\n            }\r\n            else {\r\n                requestOptions = extend(requestOptions, { binaryStringRequestBody: true });\r\n            }\r\n            executor.executeAsync(requestOptions);\r\n        });\r\n    };\r\n    return SPRequestExecutorClient;\r\n}());\r\nexport { SPRequestExecutorClient };\r\n//# sourceMappingURL=sprequestexecutorclient.js.map","import { stringIsNullOrEmpty } from \"@pnp/common\";\r\nexport function extractWebUrl(candidateUrl) {\r\n    if (stringIsNullOrEmpty(candidateUrl)) {\r\n        return \"\";\r\n    }\r\n    var index = candidateUrl.indexOf(\"_api/\");\r\n    if (index < 0) {\r\n        index = candidateUrl.indexOf(\"_vti_bin/\");\r\n    }\r\n    if (index > -1) {\r\n        return candidateUrl.substr(0, index);\r\n    }\r\n    // if all else fails just give them what they gave us back\r\n    return candidateUrl;\r\n}\r\n//# sourceMappingURL=extractweburl.js.map","import * as tslib_1 from \"tslib\";\r\nimport { extend, combine, hOP } from \"@pnp/common\";\r\nimport { Logger } from \"@pnp/logging\";\r\nimport { ODataParserBase } from \"@pnp/odata\";\r\nimport { extractWebUrl } from \"./utils/extractweburl\";\r\nexport function odataUrlFrom(candidate) {\r\n    var parts = [];\r\n    var s = [\"odata.type\", \"odata.editLink\", \"__metadata\", \"odata.metadata\"];\r\n    if (hOP(candidate, s[0]) && candidate[s[0]] === \"SP.Web\") {\r\n        // webs return an absolute url in the editLink\r\n        if (hOP(candidate, s[1])) {\r\n            parts.push(candidate[s[1]]);\r\n        }\r\n        else if (hOP(candidate, s[2])) {\r\n            // we are dealing with verbose, which has an absolute uri\r\n            parts.push(candidate.__metadata.uri);\r\n        }\r\n    }\r\n    else {\r\n        if (hOP(candidate, s[3]) && hOP(candidate, s[1])) {\r\n            // we are dealign with minimal metadata (default)\r\n            parts.push(extractWebUrl(candidate[s[3]]), \"_api\", candidate[s[1]]);\r\n        }\r\n        else if (hOP(candidate, s[1])) {\r\n            parts.push(\"_api\", candidate[s[1]]);\r\n        }\r\n        else if (hOP(candidate, s[2])) {\r\n            // we are dealing with verbose, which has an absolute uri\r\n            parts.push(candidate.__metadata.uri);\r\n        }\r\n    }\r\n    if (parts.length < 1) {\r\n        Logger.write(\"No uri information found in ODataEntity parsing, chaining will fail for this object.\", 2 /* Warning */);\r\n        return \"\";\r\n    }\r\n    return combine.apply(void 0, parts);\r\n}\r\nvar SPODataEntityParserImpl = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SPODataEntityParserImpl, _super);\r\n    function SPODataEntityParserImpl(factory) {\r\n        var _this = _super.call(this) || this;\r\n        _this.factory = factory;\r\n        _this.hydrate = function (d) {\r\n            var o = new _this.factory(odataUrlFrom(d), null);\r\n            return extend(o, d);\r\n        };\r\n        return _this;\r\n    }\r\n    SPODataEntityParserImpl.prototype.parse = function (r) {\r\n        var _this = this;\r\n        return _super.prototype.parse.call(this, r).then(function (d) {\r\n            var o = new _this.factory(odataUrlFrom(d), null);\r\n            return extend(o, d);\r\n        });\r\n    };\r\n    return SPODataEntityParserImpl;\r\n}(ODataParserBase));\r\nvar SPODataEntityArrayParserImpl = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SPODataEntityArrayParserImpl, _super);\r\n    function SPODataEntityArrayParserImpl(factory) {\r\n        var _this = _super.call(this) || this;\r\n        _this.factory = factory;\r\n        _this.hydrate = function (d) {\r\n            return d.map(function (v) {\r\n                var o = new _this.factory(odataUrlFrom(v), null);\r\n                return extend(o, v);\r\n            });\r\n        };\r\n        return _this;\r\n    }\r\n    SPODataEntityArrayParserImpl.prototype.parse = function (r) {\r\n        var _this = this;\r\n        return _super.prototype.parse.call(this, r).then(function (d) {\r\n            return d.map(function (v) {\r\n                var o = new _this.factory(odataUrlFrom(v), null);\r\n                return extend(o, v);\r\n            });\r\n        });\r\n    };\r\n    return SPODataEntityArrayParserImpl;\r\n}(ODataParserBase));\r\nexport function spODataEntity(factory) {\r\n    return new SPODataEntityParserImpl(factory);\r\n}\r\nexport function spODataEntityArray(factory) {\r\n    return new SPODataEntityArrayParserImpl(factory);\r\n}\r\n//# sourceMappingURL=odata.js.map","import { combine, extend } from \"@pnp/common\";\r\nimport { ODataDefaultParser } from \"@pnp/odata\";\r\nimport { SPRuntimeConfig } from \"../config/splibconfig\";\r\nvar CachedDigest = /** @class */ (function () {\r\n    function CachedDigest() {\r\n    }\r\n    return CachedDigest;\r\n}());\r\nexport { CachedDigest };\r\n// allows for the caching of digests across all HttpClient's which each have their own DigestCache wrapper.\r\nvar digests = new Map();\r\nvar DigestCache = /** @class */ (function () {\r\n    function DigestCache(_httpClient, _digests) {\r\n        if (_digests === void 0) { _digests = digests; }\r\n        this._httpClient = _httpClient;\r\n        this._digests = _digests;\r\n    }\r\n    DigestCache.prototype.getDigest = function (webUrl) {\r\n        var _this = this;\r\n        var cachedDigest = this._digests.get(webUrl);\r\n        if (cachedDigest !== undefined) {\r\n            var now = new Date();\r\n            if (now < cachedDigest.expiration) {\r\n                return Promise.resolve(cachedDigest.value);\r\n            }\r\n        }\r\n        var url = combine(webUrl, \"/_api/contextinfo\");\r\n        var headers = {\r\n            \"Accept\": \"application/json;odata=verbose\",\r\n            \"Content-Type\": \"application/json;odata=verbose;charset=utf-8\",\r\n        };\r\n        return this._httpClient.fetchRaw(url, {\r\n            cache: \"no-cache\",\r\n            credentials: \"same-origin\",\r\n            headers: extend(headers, SPRuntimeConfig.headers, true),\r\n            method: \"POST\",\r\n        }).then(function (response) {\r\n            var parser = new ODataDefaultParser();\r\n            return parser.parse(response).then(function (d) { return d.GetContextWebInformation; });\r\n        }).then(function (data) {\r\n            var newCachedDigest = new CachedDigest();\r\n            newCachedDigest.value = data.FormDigestValue;\r\n            var seconds = data.FormDigestTimeoutSeconds;\r\n            var expiration = new Date();\r\n            expiration.setTime(expiration.getTime() + 1000 * seconds);\r\n            newCachedDigest.expiration = expiration;\r\n            _this._digests.set(webUrl, newCachedDigest);\r\n            return newCachedDigest.value;\r\n        });\r\n    };\r\n    DigestCache.prototype.clear = function () {\r\n        this._digests.clear();\r\n    };\r\n    return DigestCache;\r\n}());\r\nexport { DigestCache };\r\n//# sourceMappingURL=digestcache.js.map","import { DigestCache } from \"./digestcache\";\r\nimport { extend, mergeHeaders, getCtxCallback, } from \"@pnp/common\";\r\nimport { SPRuntimeConfig } from \"../config/splibconfig\";\r\nimport { extractWebUrl } from \"../utils/extractweburl\";\r\nvar SPHttpClient = /** @class */ (function () {\r\n    function SPHttpClient(_impl) {\r\n        if (_impl === void 0) { _impl = SPRuntimeConfig.fetchClientFactory(); }\r\n        this._impl = _impl;\r\n        this._digestCache = new DigestCache(this);\r\n    }\r\n    SPHttpClient.prototype.fetch = function (url, options) {\r\n        var _this = this;\r\n        if (options === void 0) { options = {}; }\r\n        var opts = extend(options, { cache: \"no-cache\", credentials: \"same-origin\" }, true);\r\n        var headers = new Headers();\r\n        // first we add the global headers so they can be overwritten by any passed in locally to this call\r\n        mergeHeaders(headers, SPRuntimeConfig.headers);\r\n        // second we add the local options so we can overwrite the globals\r\n        mergeHeaders(headers, options.headers);\r\n        // lastly we apply any default headers we need that may not exist\r\n        if (!headers.has(\"Accept\")) {\r\n            headers.append(\"Accept\", \"application/json\");\r\n        }\r\n        if (!headers.has(\"Content-Type\")) {\r\n            headers.append(\"Content-Type\", \"application/json;odata=verbose;charset=utf-8\");\r\n        }\r\n        if (!headers.has(\"X-ClientService-ClientTag\")) {\r\n            headers.append(\"X-ClientService-ClientTag\", \"PnPCoreJS:@pnp-1.3.4\");\r\n        }\r\n        if (!headers.has(\"User-Agent\")) {\r\n            // this marks the requests for understanding by the service\r\n            headers.append(\"User-Agent\", \"NONISV|SharePointPnP|PnPCoreJS/1.3.4\");\r\n        }\r\n        opts = extend(opts, { headers: headers });\r\n        if (opts.method && opts.method.toUpperCase() !== \"GET\") {\r\n            // if we have either a request digest or an authorization header we don't need a digest\r\n            if (!headers.has(\"X-RequestDigest\") && !headers.has(\"Authorization\")) {\r\n                return this._digestCache.getDigest(extractWebUrl(url))\r\n                    .then(function (digest) {\r\n                    headers.append(\"X-RequestDigest\", digest);\r\n                    return _this.fetchRaw(url, opts);\r\n                });\r\n            }\r\n        }\r\n        return this.fetchRaw(url, opts);\r\n    };\r\n    SPHttpClient.prototype.fetchRaw = function (url, options) {\r\n        var _this = this;\r\n        if (options === void 0) { options = {}; }\r\n        // here we need to normalize the headers\r\n        var rawHeaders = new Headers();\r\n        mergeHeaders(rawHeaders, options.headers);\r\n        options = extend(options, { headers: rawHeaders });\r\n        var retry = function (ctx) {\r\n            // handles setting the proper timeout for a retry\r\n            var setRetry = function (response) {\r\n                var delay;\r\n                if (response.headers.has(\"Retry-After\")) {\r\n                    // if we have gotten a header, use that value as the delay value\r\n                    delay = parseInt(response.headers.get(\"Retry-After\"), 10);\r\n                }\r\n                else {\r\n                    // grab our current delay\r\n                    delay = ctx.delay;\r\n                    // Increment our counters.\r\n                    ctx.delay *= 2;\r\n                }\r\n                ctx.attempts++;\r\n                // If we have exceeded the retry count, reject.\r\n                if (ctx.retryCount <= ctx.attempts) {\r\n                    ctx.reject(Error(\"Retry count exceeded (\" + ctx.retryCount + \") for request. Response status: [\" + response.status + \"] \" + response.statusText));\r\n                }\r\n                else {\r\n                    // Set our retry timeout for {delay} milliseconds.\r\n                    setTimeout(getCtxCallback(_this, retry, ctx), delay);\r\n                }\r\n            };\r\n            // send the actual request\r\n            _this._impl.fetch(url, options).then(function (response) {\r\n                if (response.status === 429) {\r\n                    // we have been throttled\r\n                    setRetry(response);\r\n                }\r\n                else {\r\n                    ctx.resolve(response);\r\n                }\r\n            }).catch(function (response) {\r\n                if (response.status === 503) {\r\n                    // http status code 503, we can retry this\r\n                    setRetry(response);\r\n                }\r\n                else {\r\n                    ctx.reject(response);\r\n                }\r\n            });\r\n        };\r\n        return new Promise(function (resolve, reject) {\r\n            var retryContext = {\r\n                attempts: 0,\r\n                delay: 100,\r\n                reject: reject,\r\n                resolve: resolve,\r\n                retryCount: 7,\r\n            };\r\n            retry.call(_this, retryContext);\r\n        });\r\n    };\r\n    SPHttpClient.prototype.get = function (url, options) {\r\n        if (options === void 0) { options = {}; }\r\n        var opts = extend(options, { method: \"GET\" });\r\n        return this.fetch(url, opts);\r\n    };\r\n    SPHttpClient.prototype.post = function (url, options) {\r\n        if (options === void 0) { options = {}; }\r\n        var opts = extend(options, { method: \"POST\" });\r\n        return this.fetch(url, opts);\r\n    };\r\n    SPHttpClient.prototype.patch = function (url, options) {\r\n        if (options === void 0) { options = {}; }\r\n        var opts = extend(options, { method: \"PATCH\" });\r\n        return this.fetch(url, opts);\r\n    };\r\n    SPHttpClient.prototype.delete = function (url, options) {\r\n        if (options === void 0) { options = {}; }\r\n        var opts = extend(options, { method: \"DELETE\" });\r\n        return this.fetch(url, opts);\r\n    };\r\n    return SPHttpClient;\r\n}());\r\nexport { SPHttpClient };\r\n//# sourceMappingURL=sphttpclient.js.map","export function metadata(type) {\r\n    return {\r\n        \"__metadata\": { \"type\": type },\r\n    };\r\n}\r\n//# sourceMappingURL=metadata.js.map","import * as tslib_1 from \"tslib\";\r\nimport { combine, isUrlAbsolute, mergeOptions, extend, getGUID, jsS, } from \"@pnp/common\";\r\nimport { ODataQueryable, } from \"@pnp/odata\";\r\nimport { Logger } from \"@pnp/logging\";\r\nimport { SPHttpClient } from \"./net/sphttpclient\";\r\nimport { toAbsoluteUrl } from \"./utils/toabsoluteurl\";\r\nimport { metadata } from \"./utils/metadata\";\r\n/**\r\n * SharePointQueryable Base Class\r\n *\r\n */\r\nvar SharePointQueryable = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SharePointQueryable, _super);\r\n    /**\r\n     * Creates a new instance of the SharePointQueryable class\r\n     *\r\n     * @constructor\r\n     * @param baseUrl A string or SharePointQueryable that should form the base part of the url\r\n     *\r\n     */\r\n    function SharePointQueryable(baseUrl, path) {\r\n        var _this = _super.call(this) || this;\r\n        _this._forceCaching = false;\r\n        if (typeof baseUrl === \"string\") {\r\n            // we need to do some extra parsing to get the parent url correct if we are\r\n            // being created from just a string.\r\n            if (isUrlAbsolute(baseUrl) || baseUrl.lastIndexOf(\"/\") < 0) {\r\n                _this._parentUrl = baseUrl;\r\n                _this._url = combine(baseUrl, path);\r\n            }\r\n            else if (baseUrl.lastIndexOf(\"/\") > baseUrl.lastIndexOf(\"(\")) {\r\n                // .../items(19)/fields\r\n                var index = baseUrl.lastIndexOf(\"/\");\r\n                _this._parentUrl = baseUrl.slice(0, index);\r\n                path = combine(baseUrl.slice(index), path);\r\n                _this._url = combine(_this._parentUrl, path);\r\n            }\r\n            else {\r\n                // .../items(19)\r\n                var index = baseUrl.lastIndexOf(\"(\");\r\n                _this._parentUrl = baseUrl.slice(0, index);\r\n                _this._url = combine(baseUrl, path);\r\n            }\r\n        }\r\n        else {\r\n            _this.extend(baseUrl, path);\r\n            var target = baseUrl.query.get(\"@target\");\r\n            if (target !== undefined) {\r\n                _this.query.set(\"@target\", target);\r\n            }\r\n        }\r\n        return _this;\r\n    }\r\n    /**\r\n     * Creates a new instance of the supplied factory and extends this into that new instance\r\n     *\r\n     * @param factory constructor for the new SharePointQueryable\r\n     */\r\n    SharePointQueryable.prototype.as = function (factory) {\r\n        var o = new factory(this._url, null);\r\n        return extend(o, this, true);\r\n    };\r\n    /**\r\n     * Gets the full url with query information\r\n     *\r\n     */\r\n    SharePointQueryable.prototype.toUrlAndQuery = function () {\r\n        var aliasedParams = new Map(this.query);\r\n        var url = this.toUrl().replace(/'!(@.*?)::(.*?)'/ig, function (match, labelName, value) {\r\n            Logger.write(\"Rewriting aliased parameter from match \" + match + \" to label: \" + labelName + \" value: \" + value, 0 /* Verbose */);\r\n            aliasedParams.set(labelName, \"'\" + value + \"'\");\r\n            return labelName;\r\n        });\r\n        if (aliasedParams.size > 0) {\r\n            var char = url.indexOf(\"?\") > -1 ? \"&\" : \"?\";\r\n            url += \"\" + char + Array.from(aliasedParams).map(function (v) { return v[0] + \"=\" + v[1]; }).join(\"&\");\r\n        }\r\n        return url;\r\n    };\r\n    /**\r\n     * Choose which fields to return\r\n     *\r\n     * @param selects One or more fields to return\r\n     */\r\n    SharePointQueryable.prototype.select = function () {\r\n        var selects = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            selects[_i] = arguments[_i];\r\n        }\r\n        if (selects.length > 0) {\r\n            this.query.set(\"$select\", selects.join(\",\"));\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Expands fields such as lookups to get additional data\r\n     *\r\n     * @param expands The Fields for which to expand the values\r\n     */\r\n    SharePointQueryable.prototype.expand = function () {\r\n        var expands = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            expands[_i] = arguments[_i];\r\n        }\r\n        if (expands.length > 0) {\r\n            this.query.set(\"$expand\", expands.join(\",\"));\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Gets a parent for this instance as specified\r\n     *\r\n     * @param factory The contructor for the class to create\r\n     */\r\n    SharePointQueryable.prototype.getParent = function (factory, baseUrl, path, batch) {\r\n        if (baseUrl === void 0) { baseUrl = this.parentUrl; }\r\n        var parent = new factory(baseUrl, path).configureFrom(this);\r\n        var t = \"@target\";\r\n        if (this.query.has(t)) {\r\n            parent.query.set(t, this.query.get(t));\r\n        }\r\n        if (batch !== undefined) {\r\n            parent = parent.inBatch(batch);\r\n        }\r\n        return parent;\r\n    };\r\n    /**\r\n     * Clones this SharePointQueryable into a new SharePointQueryable instance of T\r\n     * @param factory Constructor used to create the new instance\r\n     * @param additionalPath Any additional path to include in the clone\r\n     * @param includeBatch If true this instance's batch will be added to the cloned instance\r\n     */\r\n    SharePointQueryable.prototype.clone = function (factory, additionalPath, includeBatch) {\r\n        if (includeBatch === void 0) { includeBatch = true; }\r\n        var clone = _super.prototype._clone.call(this, new factory(this, additionalPath), { includeBatch: includeBatch });\r\n        // handle sp specific clone actions\r\n        var t = \"@target\";\r\n        if (this.query.has(t)) {\r\n            clone.query.set(t, this.query.get(t));\r\n        }\r\n        return clone;\r\n    };\r\n    /**\r\n     * Converts the current instance to a request context\r\n     *\r\n     * @param verb The request verb\r\n     * @param options The set of supplied request options\r\n     * @param parser The supplied ODataParser instance\r\n     * @param pipeline Optional request processing pipeline\r\n     */\r\n    SharePointQueryable.prototype.toRequestContext = function (verb, options, parser, pipeline) {\r\n        var _this = this;\r\n        if (options === void 0) { options = {}; }\r\n        var dependencyDispose = this.hasBatch ? this._batchDependency : function () { return; };\r\n        return toAbsoluteUrl(this.toUrlAndQuery()).then(function (url) {\r\n            mergeOptions(options, _this._options);\r\n            // build our request context\r\n            var context = {\r\n                batch: _this.batch,\r\n                batchDependency: dependencyDispose,\r\n                cachingOptions: _this._cachingOptions,\r\n                clientFactory: function () { return new SPHttpClient(); },\r\n                isBatched: _this.hasBatch,\r\n                isCached: _this._forceCaching || (_this._useCaching && /^get$/i.test(verb)),\r\n                options: options,\r\n                parser: parser,\r\n                pipeline: pipeline,\r\n                requestAbsoluteUrl: url,\r\n                requestId: getGUID(),\r\n                verb: verb,\r\n            };\r\n            return context;\r\n        });\r\n    };\r\n    return SharePointQueryable;\r\n}(ODataQueryable));\r\nexport { SharePointQueryable };\r\n/**\r\n * Represents a REST collection which can be filtered, paged, and selected\r\n *\r\n */\r\nvar SharePointQueryableCollection = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SharePointQueryableCollection, _super);\r\n    function SharePointQueryableCollection() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Filters the returned collection (https://msdn.microsoft.com/en-us/library/office/fp142385.aspx#bk_supported)\r\n     *\r\n     * @param filter The string representing the filter query\r\n     */\r\n    SharePointQueryableCollection.prototype.filter = function (filter) {\r\n        this.query.set(\"$filter\", filter);\r\n        return this;\r\n    };\r\n    /**\r\n     * Orders based on the supplied fields\r\n     *\r\n     * @param orderby The name of the field on which to sort\r\n     * @param ascending If false DESC is appended, otherwise ASC (default)\r\n     */\r\n    SharePointQueryableCollection.prototype.orderBy = function (orderBy, ascending) {\r\n        if (ascending === void 0) { ascending = true; }\r\n        var o = \"$orderby\";\r\n        var query = this.query.has(o) ? this.query.get(o).split(\",\") : [];\r\n        query.push(orderBy + \" \" + (ascending ? \"asc\" : \"desc\"));\r\n        this.query.set(o, query.join(\",\"));\r\n        return this;\r\n    };\r\n    /**\r\n     * Skips the specified number of items\r\n     *\r\n     * @param skip The number of items to skip\r\n     */\r\n    SharePointQueryableCollection.prototype.skip = function (skip) {\r\n        this.query.set(\"$skip\", skip.toString());\r\n        return this;\r\n    };\r\n    /**\r\n     * Limits the query to only return the specified number of items\r\n     *\r\n     * @param top The query row limit\r\n     */\r\n    SharePointQueryableCollection.prototype.top = function (top) {\r\n        this.query.set(\"$top\", top.toString());\r\n        return this;\r\n    };\r\n    return SharePointQueryableCollection;\r\n}(SharePointQueryable));\r\nexport { SharePointQueryableCollection };\r\n/**\r\n * Represents an instance that can be selected\r\n *\r\n */\r\nvar SharePointQueryableInstance = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SharePointQueryableInstance, _super);\r\n    function SharePointQueryableInstance() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Curries the update function into the common pieces\r\n     *\r\n     * @param type\r\n     * @param mapper\r\n     */\r\n    SharePointQueryableInstance.prototype._update = function (type, mapper) {\r\n        var _this = this;\r\n        return function (props) { return _this.postCore({\r\n            body: jsS(extend(metadata(type), props)),\r\n            headers: {\r\n                \"X-HTTP-Method\": \"MERGE\",\r\n            },\r\n        }).then(function (d) { return mapper(d, props); }); };\r\n    };\r\n    /**\r\n    * Deletes this instance\r\n    *\r\n    */\r\n    SharePointQueryableInstance.prototype._delete = function () {\r\n        return this.postCore({\r\n            headers: {\r\n                \"X-HTTP-Method\": \"DELETE\",\r\n            },\r\n        });\r\n    };\r\n    /**\r\n     * Deletes this instance with an etag value in the headers\r\n     *\r\n     * @param eTag eTag to delete\r\n     */\r\n    SharePointQueryableInstance.prototype._deleteWithETag = function (eTag) {\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        return this.postCore({\r\n            headers: {\r\n                \"IF-Match\": eTag,\r\n                \"X-HTTP-Method\": \"DELETE\",\r\n            },\r\n        });\r\n    };\r\n    return SharePointQueryableInstance;\r\n}(SharePointQueryable));\r\nexport { SharePointQueryableInstance };\r\n/**\r\n * Decorator used to specify the default path for SharePointQueryable objects\r\n *\r\n * @param path\r\n */\r\nexport function defaultPath(path) {\r\n    return function (target) {\r\n        return /** @class */ (function (_super) {\r\n            tslib_1.__extends(class_1, _super);\r\n            function class_1() {\r\n                var args = [];\r\n                for (var _i = 0; _i < arguments.length; _i++) {\r\n                    args[_i] = arguments[_i];\r\n                }\r\n                return _super.call(this, args[0], args.length > 1 && args[1] !== undefined ? args[1] : path) || this;\r\n            }\r\n            return class_1;\r\n        }(target));\r\n    };\r\n}\r\n//# sourceMappingURL=sharepointqueryable.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryableInstance, SharePointQueryableCollection, defaultPath } from \"./sharepointqueryable\";\r\nimport { SiteGroups } from \"./sitegroups\";\r\nimport { jsS, extend } from \"@pnp/common\";\r\nimport { metadata } from \"./utils/metadata\";\r\n/**\r\n * Describes a collection of all site collection users\r\n *\r\n */\r\nvar SiteUsers = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SiteUsers, _super);\r\n    function SiteUsers() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    SiteUsers_1 = SiteUsers;\r\n    /**\r\n     * Gets a user from the collection by id\r\n     *\r\n     * @param id The id of the user to retrieve\r\n     */\r\n    SiteUsers.prototype.getById = function (id) {\r\n        return new SiteUser(this, \"getById(\" + id + \")\");\r\n    };\r\n    /**\r\n     * Gets a user from the collection by email\r\n     *\r\n     * @param email The email address of the user to retrieve\r\n     */\r\n    SiteUsers.prototype.getByEmail = function (email) {\r\n        return new SiteUser(this, \"getByEmail('\" + email + \"')\");\r\n    };\r\n    /**\r\n     * Gets a user from the collection by login name\r\n     *\r\n     * @param loginName The login name of the user to retrieve\r\n     */\r\n    SiteUsers.prototype.getByLoginName = function (loginName) {\r\n        var su = new SiteUser(this);\r\n        su.concat(\"('!@v::\" + encodeURIComponent(loginName) + \"')\");\r\n        return su;\r\n    };\r\n    /**\r\n     * Removes a user from the collection by id\r\n     *\r\n     * @param id The id of the user to remove\r\n     */\r\n    SiteUsers.prototype.removeById = function (id) {\r\n        return this.clone(SiteUsers_1, \"removeById(\" + id + \")\").postCore();\r\n    };\r\n    /**\r\n     * Removes a user from the collection by login name\r\n     *\r\n     * @param loginName The login name of the user to remove\r\n     */\r\n    SiteUsers.prototype.removeByLoginName = function (loginName) {\r\n        var o = this.clone(SiteUsers_1, \"removeByLoginName(@v)\");\r\n        o.query.set(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return o.postCore();\r\n    };\r\n    /**\r\n     * Adds a user to a group\r\n     *\r\n     * @param loginName The login name of the user to add to the group\r\n     *\r\n     */\r\n    SiteUsers.prototype.add = function (loginName) {\r\n        var _this = this;\r\n        return this.clone(SiteUsers_1, null).postCore({\r\n            body: jsS(extend(metadata(\"SP.User\"), { LoginName: loginName })),\r\n        }).then(function () { return _this.getByLoginName(loginName); });\r\n    };\r\n    var SiteUsers_1;\r\n    SiteUsers = SiteUsers_1 = tslib_1.__decorate([\r\n        defaultPath(\"siteusers\")\r\n    ], SiteUsers);\r\n    return SiteUsers;\r\n}(SharePointQueryableCollection));\r\nexport { SiteUsers };\r\n/**\r\n * Base class for a user\r\n *\r\n */\r\nvar UserBase = /** @class */ (function (_super) {\r\n    tslib_1.__extends(UserBase, _super);\r\n    function UserBase() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(UserBase.prototype, \"groups\", {\r\n        /**\r\n         * Gets the groups for this user\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteGroups(this, \"groups\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return UserBase;\r\n}(SharePointQueryableInstance));\r\nexport { UserBase };\r\n/**\r\n * Describes a single user\r\n *\r\n */\r\nvar SiteUser = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SiteUser, _super);\r\n    function SiteUser() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n        * Updates this user instance with the supplied properties\r\n        *\r\n        * @param properties A plain object of property names and values to update for the user\r\n        */\r\n        _this.update = _this._update(\"SP.User\", function (data) { return ({ data: data, user: _this }); });\r\n        /**\r\n         * Delete this user\r\n         *\r\n         */\r\n        _this.delete = _this._delete;\r\n        return _this;\r\n    }\r\n    return SiteUser;\r\n}(UserBase));\r\nexport { SiteUser };\r\n/**\r\n * Represents the current user\r\n */\r\nvar CurrentUser = /** @class */ (function (_super) {\r\n    tslib_1.__extends(CurrentUser, _super);\r\n    function CurrentUser() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    CurrentUser = tslib_1.__decorate([\r\n        defaultPath(\"currentuser\")\r\n    ], CurrentUser);\r\n    return CurrentUser;\r\n}(UserBase));\r\nexport { CurrentUser };\r\n//# sourceMappingURL=siteusers.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryableInstance, SharePointQueryableCollection, defaultPath } from \"./sharepointqueryable\";\r\nimport { SiteUsers } from \"./siteusers\";\r\nimport { extend, jsS, hOP } from \"@pnp/common\";\r\nimport { metadata } from \"./utils/metadata\";\r\n/**\r\n * Principal Type enum\r\n *\r\n */\r\nexport var PrincipalType;\r\n(function (PrincipalType) {\r\n    PrincipalType[PrincipalType[\"None\"] = 0] = \"None\";\r\n    PrincipalType[PrincipalType[\"User\"] = 1] = \"User\";\r\n    PrincipalType[PrincipalType[\"DistributionList\"] = 2] = \"DistributionList\";\r\n    PrincipalType[PrincipalType[\"SecurityGroup\"] = 4] = \"SecurityGroup\";\r\n    PrincipalType[PrincipalType[\"SharePointGroup\"] = 8] = \"SharePointGroup\";\r\n    PrincipalType[PrincipalType[\"All\"] = 15] = \"All\";\r\n})(PrincipalType || (PrincipalType = {}));\r\n/**\r\n * Describes a collection of site groups\r\n *\r\n */\r\nvar SiteGroups = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SiteGroups, _super);\r\n    function SiteGroups() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    SiteGroups_1 = SiteGroups;\r\n    /**\r\n     * Gets a group from the collection by id\r\n     *\r\n     * @param id The id of the group to retrieve\r\n     */\r\n    SiteGroups.prototype.getById = function (id) {\r\n        var sg = new SiteGroup(this);\r\n        sg.concat(\"(\" + id + \")\");\r\n        return sg;\r\n    };\r\n    /**\r\n     * Adds a new group to the site collection\r\n     *\r\n     * @param props The group properties object of property names and values to be set for the group\r\n     */\r\n    SiteGroups.prototype.add = function (properties) {\r\n        var _this = this;\r\n        var postBody = jsS(extend(metadata(\"SP.Group\"), properties));\r\n        return this.postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                group: _this.getById(data.Id),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Gets a group from the collection by name\r\n     *\r\n     * @param groupName The name of the group to retrieve\r\n     */\r\n    SiteGroups.prototype.getByName = function (groupName) {\r\n        return new SiteGroup(this, \"getByName('\" + groupName + \"')\");\r\n    };\r\n    /**\r\n     * Removes the group with the specified member id from the collection\r\n     *\r\n     * @param id The id of the group to remove\r\n     */\r\n    SiteGroups.prototype.removeById = function (id) {\r\n        return this.clone(SiteGroups_1, \"removeById('\" + id + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Removes the cross-site group with the specified name from the collection\r\n     *\r\n     * @param loginName The name of the group to remove\r\n     */\r\n    SiteGroups.prototype.removeByLoginName = function (loginName) {\r\n        return this.clone(SiteGroups_1, \"removeByLoginName('\" + loginName + \"')\").postCore();\r\n    };\r\n    var SiteGroups_1;\r\n    SiteGroups = SiteGroups_1 = tslib_1.__decorate([\r\n        defaultPath(\"sitegroups\")\r\n    ], SiteGroups);\r\n    return SiteGroups;\r\n}(SharePointQueryableCollection));\r\nexport { SiteGroups };\r\n/**\r\n * Describes a single group\r\n *\r\n */\r\nvar SiteGroup = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SiteGroup, _super);\r\n    function SiteGroup() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.update = _this._update(\"SP.Group\", function (d, p) {\r\n            var retGroup = _this;\r\n            if (hOP(p, \"Title\")) {\r\n                /* tslint:disable-next-line no-string-literal */\r\n                retGroup = _this.getParent(SiteGroup, _this.parentUrl, \"getByName('\" + p[\"Title\"] + \"')\");\r\n            }\r\n            return {\r\n                data: d,\r\n                group: retGroup,\r\n            };\r\n        });\r\n        return _this;\r\n    }\r\n    Object.defineProperty(SiteGroup.prototype, \"users\", {\r\n        /**\r\n         * Gets the users for this group\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteUsers(this, \"users\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return SiteGroup;\r\n}(SharePointQueryableInstance));\r\nexport { SiteGroup };\r\n//# sourceMappingURL=sitegroups.js.map","/**\r\n * Determines the display mode of the given control or view\r\n */\r\nexport var ControlMode;\r\n(function (ControlMode) {\r\n    ControlMode[ControlMode[\"Display\"] = 1] = \"Display\";\r\n    ControlMode[ControlMode[\"Edit\"] = 2] = \"Edit\";\r\n    ControlMode[ControlMode[\"New\"] = 3] = \"New\";\r\n})(ControlMode || (ControlMode = {}));\r\n/**\r\n * Specifies the type of the field.\r\n */\r\nexport var FieldTypes;\r\n(function (FieldTypes) {\r\n    FieldTypes[FieldTypes[\"Invalid\"] = 0] = \"Invalid\";\r\n    FieldTypes[FieldTypes[\"Integer\"] = 1] = \"Integer\";\r\n    FieldTypes[FieldTypes[\"Text\"] = 2] = \"Text\";\r\n    FieldTypes[FieldTypes[\"Note\"] = 3] = \"Note\";\r\n    FieldTypes[FieldTypes[\"DateTime\"] = 4] = \"DateTime\";\r\n    FieldTypes[FieldTypes[\"Counter\"] = 5] = \"Counter\";\r\n    FieldTypes[FieldTypes[\"Choice\"] = 6] = \"Choice\";\r\n    FieldTypes[FieldTypes[\"Lookup\"] = 7] = \"Lookup\";\r\n    FieldTypes[FieldTypes[\"Boolean\"] = 8] = \"Boolean\";\r\n    FieldTypes[FieldTypes[\"Number\"] = 9] = \"Number\";\r\n    FieldTypes[FieldTypes[\"Currency\"] = 10] = \"Currency\";\r\n    FieldTypes[FieldTypes[\"URL\"] = 11] = \"URL\";\r\n    FieldTypes[FieldTypes[\"Computed\"] = 12] = \"Computed\";\r\n    FieldTypes[FieldTypes[\"Threading\"] = 13] = \"Threading\";\r\n    FieldTypes[FieldTypes[\"Guid\"] = 14] = \"Guid\";\r\n    FieldTypes[FieldTypes[\"MultiChoice\"] = 15] = \"MultiChoice\";\r\n    FieldTypes[FieldTypes[\"GridChoice\"] = 16] = \"GridChoice\";\r\n    FieldTypes[FieldTypes[\"Calculated\"] = 17] = \"Calculated\";\r\n    FieldTypes[FieldTypes[\"File\"] = 18] = \"File\";\r\n    FieldTypes[FieldTypes[\"Attachments\"] = 19] = \"Attachments\";\r\n    FieldTypes[FieldTypes[\"User\"] = 20] = \"User\";\r\n    FieldTypes[FieldTypes[\"Recurrence\"] = 21] = \"Recurrence\";\r\n    FieldTypes[FieldTypes[\"CrossProjectLink\"] = 22] = \"CrossProjectLink\";\r\n    FieldTypes[FieldTypes[\"ModStat\"] = 23] = \"ModStat\";\r\n    FieldTypes[FieldTypes[\"Error\"] = 24] = \"Error\";\r\n    FieldTypes[FieldTypes[\"ContentTypeId\"] = 25] = \"ContentTypeId\";\r\n    FieldTypes[FieldTypes[\"PageSeparator\"] = 26] = \"PageSeparator\";\r\n    FieldTypes[FieldTypes[\"ThreadIndex\"] = 27] = \"ThreadIndex\";\r\n    FieldTypes[FieldTypes[\"WorkflowStatus\"] = 28] = \"WorkflowStatus\";\r\n    FieldTypes[FieldTypes[\"AllDayEvent\"] = 29] = \"AllDayEvent\";\r\n    FieldTypes[FieldTypes[\"WorkflowEventType\"] = 30] = \"WorkflowEventType\";\r\n})(FieldTypes || (FieldTypes = {}));\r\nexport var DateTimeFieldFormatType;\r\n(function (DateTimeFieldFormatType) {\r\n    DateTimeFieldFormatType[DateTimeFieldFormatType[\"DateOnly\"] = 0] = \"DateOnly\";\r\n    DateTimeFieldFormatType[DateTimeFieldFormatType[\"DateTime\"] = 1] = \"DateTime\";\r\n})(DateTimeFieldFormatType || (DateTimeFieldFormatType = {}));\r\nexport var DateTimeFieldFriendlyFormatType;\r\n(function (DateTimeFieldFriendlyFormatType) {\r\n    DateTimeFieldFriendlyFormatType[DateTimeFieldFriendlyFormatType[\"Unspecified\"] = 0] = \"Unspecified\";\r\n    DateTimeFieldFriendlyFormatType[DateTimeFieldFriendlyFormatType[\"Disabled\"] = 1] = \"Disabled\";\r\n    DateTimeFieldFriendlyFormatType[DateTimeFieldFriendlyFormatType[\"Relative\"] = 2] = \"Relative\";\r\n})(DateTimeFieldFriendlyFormatType || (DateTimeFieldFriendlyFormatType = {}));\r\n/**\r\n * Specifies the control settings while adding a field.\r\n */\r\nexport var AddFieldOptions;\r\n(function (AddFieldOptions) {\r\n    /**\r\n     *  Specify that a new field added to the list must also be added to the default content type in the site collection\r\n     */\r\n    AddFieldOptions[AddFieldOptions[\"DefaultValue\"] = 0] = \"DefaultValue\";\r\n    /**\r\n     * Specify that a new field added to the list must also be added to the default content type in the site collection.\r\n     */\r\n    AddFieldOptions[AddFieldOptions[\"AddToDefaultContentType\"] = 1] = \"AddToDefaultContentType\";\r\n    /**\r\n     * Specify that a new field must not be added to any other content type\r\n     */\r\n    AddFieldOptions[AddFieldOptions[\"AddToNoContentType\"] = 2] = \"AddToNoContentType\";\r\n    /**\r\n     *  Specify that a new field that is added to the specified list must also be added to all content types in the site collection\r\n     */\r\n    AddFieldOptions[AddFieldOptions[\"AddToAllContentTypes\"] = 4] = \"AddToAllContentTypes\";\r\n    /**\r\n     * Specify adding an internal field name hint for the purpose of avoiding possible database locking or field renaming operations\r\n     */\r\n    AddFieldOptions[AddFieldOptions[\"AddFieldInternalNameHint\"] = 8] = \"AddFieldInternalNameHint\";\r\n    /**\r\n     * Specify that a new field that is added to the specified list must also be added to the default list view\r\n     */\r\n    AddFieldOptions[AddFieldOptions[\"AddFieldToDefaultView\"] = 16] = \"AddFieldToDefaultView\";\r\n    /**\r\n     * Specify to confirm that no other field has the same display name\r\n     */\r\n    AddFieldOptions[AddFieldOptions[\"AddFieldCheckDisplayName\"] = 32] = \"AddFieldCheckDisplayName\";\r\n})(AddFieldOptions || (AddFieldOptions = {}));\r\nexport var CalendarType;\r\n(function (CalendarType) {\r\n    CalendarType[CalendarType[\"Gregorian\"] = 1] = \"Gregorian\";\r\n    CalendarType[CalendarType[\"Japan\"] = 3] = \"Japan\";\r\n    CalendarType[CalendarType[\"Taiwan\"] = 4] = \"Taiwan\";\r\n    CalendarType[CalendarType[\"Korea\"] = 5] = \"Korea\";\r\n    CalendarType[CalendarType[\"Hijri\"] = 6] = \"Hijri\";\r\n    CalendarType[CalendarType[\"Thai\"] = 7] = \"Thai\";\r\n    CalendarType[CalendarType[\"Hebrew\"] = 8] = \"Hebrew\";\r\n    CalendarType[CalendarType[\"GregorianMEFrench\"] = 9] = \"GregorianMEFrench\";\r\n    CalendarType[CalendarType[\"GregorianArabic\"] = 10] = \"GregorianArabic\";\r\n    CalendarType[CalendarType[\"GregorianXLITEnglish\"] = 11] = \"GregorianXLITEnglish\";\r\n    CalendarType[CalendarType[\"GregorianXLITFrench\"] = 12] = \"GregorianXLITFrench\";\r\n    CalendarType[CalendarType[\"KoreaJapanLunar\"] = 14] = \"KoreaJapanLunar\";\r\n    CalendarType[CalendarType[\"ChineseLunar\"] = 15] = \"ChineseLunar\";\r\n    CalendarType[CalendarType[\"SakaEra\"] = 16] = \"SakaEra\";\r\n    CalendarType[CalendarType[\"UmAlQura\"] = 23] = \"UmAlQura\";\r\n})(CalendarType || (CalendarType = {}));\r\nexport var UrlFieldFormatType;\r\n(function (UrlFieldFormatType) {\r\n    UrlFieldFormatType[UrlFieldFormatType[\"Hyperlink\"] = 0] = \"Hyperlink\";\r\n    UrlFieldFormatType[UrlFieldFormatType[\"Image\"] = 1] = \"Image\";\r\n})(UrlFieldFormatType || (UrlFieldFormatType = {}));\r\nexport var PermissionKind;\r\n(function (PermissionKind) {\r\n    /**\r\n     * Has no permissions on the Site. Not available through the user interface.\r\n     */\r\n    PermissionKind[PermissionKind[\"EmptyMask\"] = 0] = \"EmptyMask\";\r\n    /**\r\n     * View items in lists, documents in document libraries, and Web discussion comments.\r\n     */\r\n    PermissionKind[PermissionKind[\"ViewListItems\"] = 1] = \"ViewListItems\";\r\n    /**\r\n     * Add items to lists, documents to document libraries, and Web discussion comments.\r\n     */\r\n    PermissionKind[PermissionKind[\"AddListItems\"] = 2] = \"AddListItems\";\r\n    /**\r\n     * Edit items in lists, edit documents in document libraries, edit Web discussion comments\r\n     * in documents, and customize Web Part Pages in document libraries.\r\n     */\r\n    PermissionKind[PermissionKind[\"EditListItems\"] = 3] = \"EditListItems\";\r\n    /**\r\n     * Delete items from a list, documents from a document library, and Web discussion\r\n     * comments in documents.\r\n     */\r\n    PermissionKind[PermissionKind[\"DeleteListItems\"] = 4] = \"DeleteListItems\";\r\n    /**\r\n     * Approve a minor version of a list item or document.\r\n     */\r\n    PermissionKind[PermissionKind[\"ApproveItems\"] = 5] = \"ApproveItems\";\r\n    /**\r\n     * View the source of documents with server-side file handlers.\r\n     */\r\n    PermissionKind[PermissionKind[\"OpenItems\"] = 6] = \"OpenItems\";\r\n    /**\r\n     * View past versions of a list item or document.\r\n     */\r\n    PermissionKind[PermissionKind[\"ViewVersions\"] = 7] = \"ViewVersions\";\r\n    /**\r\n     * Delete past versions of a list item or document.\r\n     */\r\n    PermissionKind[PermissionKind[\"DeleteVersions\"] = 8] = \"DeleteVersions\";\r\n    /**\r\n     * Discard or check in a document which is checked out to another user.\r\n     */\r\n    PermissionKind[PermissionKind[\"CancelCheckout\"] = 9] = \"CancelCheckout\";\r\n    /**\r\n     * Create, change, and delete personal views of lists.\r\n     */\r\n    PermissionKind[PermissionKind[\"ManagePersonalViews\"] = 10] = \"ManagePersonalViews\";\r\n    /**\r\n     * Create and delete lists, add or remove columns in a list, and add or remove public views of a list.\r\n     */\r\n    PermissionKind[PermissionKind[\"ManageLists\"] = 12] = \"ManageLists\";\r\n    /**\r\n     * View forms, views, and application pages, and enumerate lists.\r\n     */\r\n    PermissionKind[PermissionKind[\"ViewFormPages\"] = 13] = \"ViewFormPages\";\r\n    /**\r\n     * Make content of a list or document library retrieveable for anonymous users through SharePoint search.\r\n     * The list permissions in the site do not change.\r\n     */\r\n    PermissionKind[PermissionKind[\"AnonymousSearchAccessList\"] = 14] = \"AnonymousSearchAccessList\";\r\n    /**\r\n     * Allow users to open a Site, list, or folder to access items inside that container.\r\n     */\r\n    PermissionKind[PermissionKind[\"Open\"] = 17] = \"Open\";\r\n    /**\r\n     * View pages in a Site.\r\n     */\r\n    PermissionKind[PermissionKind[\"ViewPages\"] = 18] = \"ViewPages\";\r\n    /**\r\n     * Add, change, or delete HTML pages or Web Part Pages, and edit the Site using\r\n     * a Windows SharePoint Services compatible editor.\r\n     */\r\n    PermissionKind[PermissionKind[\"AddAndCustomizePages\"] = 19] = \"AddAndCustomizePages\";\r\n    /**\r\n     * Apply a theme or borders to the entire Site.\r\n     */\r\n    PermissionKind[PermissionKind[\"ApplyThemeAndBorder\"] = 20] = \"ApplyThemeAndBorder\";\r\n    /**\r\n     * Apply a style sheet (.css file) to the Site.\r\n     */\r\n    PermissionKind[PermissionKind[\"ApplyStyleSheets\"] = 21] = \"ApplyStyleSheets\";\r\n    /**\r\n     * View reports on Site usage.\r\n     */\r\n    PermissionKind[PermissionKind[\"ViewUsageData\"] = 22] = \"ViewUsageData\";\r\n    /**\r\n     * Create a Site using Self-Service Site Creation.\r\n     */\r\n    PermissionKind[PermissionKind[\"CreateSSCSite\"] = 23] = \"CreateSSCSite\";\r\n    /**\r\n     * Create subsites such as team sites, Meeting Workspace sites, and Document Workspace sites.\r\n     */\r\n    PermissionKind[PermissionKind[\"ManageSubwebs\"] = 24] = \"ManageSubwebs\";\r\n    /**\r\n     * Create a group of users that can be used anywhere within the site collection.\r\n     */\r\n    PermissionKind[PermissionKind[\"CreateGroups\"] = 25] = \"CreateGroups\";\r\n    /**\r\n     * Create and change permission levels on the Site and assign permissions to users\r\n     * and groups.\r\n     */\r\n    PermissionKind[PermissionKind[\"ManagePermissions\"] = 26] = \"ManagePermissions\";\r\n    /**\r\n     * Enumerate files and folders in a Site using Microsoft Office SharePoint Designer\r\n     * and WebDAV interfaces.\r\n     */\r\n    PermissionKind[PermissionKind[\"BrowseDirectories\"] = 27] = \"BrowseDirectories\";\r\n    /**\r\n     * View information about users of the Site.\r\n     */\r\n    PermissionKind[PermissionKind[\"BrowseUserInfo\"] = 28] = \"BrowseUserInfo\";\r\n    /**\r\n     * Add or remove personal Web Parts on a Web Part Page.\r\n     */\r\n    PermissionKind[PermissionKind[\"AddDelPrivateWebParts\"] = 29] = \"AddDelPrivateWebParts\";\r\n    /**\r\n     * Update Web Parts to display personalized information.\r\n     */\r\n    PermissionKind[PermissionKind[\"UpdatePersonalWebParts\"] = 30] = \"UpdatePersonalWebParts\";\r\n    /**\r\n     * Grant the ability to perform all administration tasks for the Site as well as\r\n     * manage content, activate, deactivate, or edit properties of Site scoped Features\r\n     * through the object model or through the user interface (UI). When granted on the\r\n     * root Site of a Site Collection, activate, deactivate, or edit properties of\r\n     * site collection scoped Features through the object model. To browse to the Site\r\n     * Collection Features page and activate or deactivate Site Collection scoped Features\r\n     * through the UI, you must be a Site Collection administrator.\r\n     */\r\n    PermissionKind[PermissionKind[\"ManageWeb\"] = 31] = \"ManageWeb\";\r\n    /**\r\n     * Content of lists and document libraries in the Web site will be retrieveable for anonymous users through\r\n     * SharePoint search if the list or document library has AnonymousSearchAccessList set.\r\n     */\r\n    PermissionKind[PermissionKind[\"AnonymousSearchAccessWebLists\"] = 32] = \"AnonymousSearchAccessWebLists\";\r\n    /**\r\n     * Use features that launch client applications. Otherwise, users must work on documents\r\n     * locally and upload changes.\r\n     */\r\n    PermissionKind[PermissionKind[\"UseClientIntegration\"] = 37] = \"UseClientIntegration\";\r\n    /**\r\n     * Use SOAP, WebDAV, or Microsoft Office SharePoint Designer interfaces to access the Site.\r\n     */\r\n    PermissionKind[PermissionKind[\"UseRemoteAPIs\"] = 38] = \"UseRemoteAPIs\";\r\n    /**\r\n     * Manage alerts for all users of the Site.\r\n     */\r\n    PermissionKind[PermissionKind[\"ManageAlerts\"] = 39] = \"ManageAlerts\";\r\n    /**\r\n     * Create e-mail alerts.\r\n     */\r\n    PermissionKind[PermissionKind[\"CreateAlerts\"] = 40] = \"CreateAlerts\";\r\n    /**\r\n     * Allows a user to change his or her user information, such as adding a picture.\r\n     */\r\n    PermissionKind[PermissionKind[\"EditMyUserInfo\"] = 41] = \"EditMyUserInfo\";\r\n    /**\r\n     * Enumerate permissions on Site, list, folder, document, or list item.\r\n     */\r\n    PermissionKind[PermissionKind[\"EnumeratePermissions\"] = 63] = \"EnumeratePermissions\";\r\n    /**\r\n     * Has all permissions on the Site. Not available through the user interface.\r\n     */\r\n    PermissionKind[PermissionKind[\"FullMask\"] = 65] = \"FullMask\";\r\n})(PermissionKind || (PermissionKind = {}));\r\n/**\r\n * Specifies the type of a principal.\r\n */\r\n/* tslint:disable:no-bitwise */\r\nexport var PrincipalType;\r\n(function (PrincipalType) {\r\n    /**\r\n     * Enumeration whose value specifies no principal type.\r\n     */\r\n    PrincipalType[PrincipalType[\"None\"] = 0] = \"None\";\r\n    /**\r\n     * Enumeration whose value specifies a user as the principal type.\r\n     */\r\n    PrincipalType[PrincipalType[\"User\"] = 1] = \"User\";\r\n    /**\r\n     * Enumeration whose value specifies a distribution list as the principal type.\r\n     */\r\n    PrincipalType[PrincipalType[\"DistributionList\"] = 2] = \"DistributionList\";\r\n    /**\r\n     * Enumeration whose value specifies a security group as the principal type.\r\n     */\r\n    PrincipalType[PrincipalType[\"SecurityGroup\"] = 4] = \"SecurityGroup\";\r\n    /**\r\n     * Enumeration whose value specifies a group as the principal type.\r\n     */\r\n    PrincipalType[PrincipalType[\"SharePointGroup\"] = 8] = \"SharePointGroup\";\r\n    /**\r\n     * Enumeration whose value specifies all principal types.\r\n     */\r\n    PrincipalType[PrincipalType[\"All\"] = 15] = \"All\";\r\n})(PrincipalType || (PrincipalType = {}));\r\n/* tslint:enable:no-bitwise */\r\n/**\r\n * Specifies the source of a principal.\r\n */\r\n/* tslint:disable:no-bitwise */\r\nexport var PrincipalSource;\r\n(function (PrincipalSource) {\r\n    /**\r\n     * Enumeration whose value specifies no principal source.\r\n     */\r\n    PrincipalSource[PrincipalSource[\"None\"] = 0] = \"None\";\r\n    /**\r\n     * Enumeration whose value specifies user information list as the principal source.\r\n     */\r\n    PrincipalSource[PrincipalSource[\"UserInfoList\"] = 1] = \"UserInfoList\";\r\n    /**\r\n     * Enumeration whose value specifies Active Directory as the principal source.\r\n     */\r\n    PrincipalSource[PrincipalSource[\"Windows\"] = 2] = \"Windows\";\r\n    /**\r\n     * Enumeration whose value specifies the current membership provider as the principal source.\r\n     */\r\n    PrincipalSource[PrincipalSource[\"MembershipProvider\"] = 4] = \"MembershipProvider\";\r\n    /**\r\n     * Enumeration whose value specifies the current role provider as the principal source.\r\n     */\r\n    PrincipalSource[PrincipalSource[\"RoleProvider\"] = 8] = \"RoleProvider\";\r\n    /**\r\n     * Enumeration whose value specifies all principal sources.\r\n     */\r\n    PrincipalSource[PrincipalSource[\"All\"] = 15] = \"All\";\r\n})(PrincipalSource || (PrincipalSource = {}));\r\n/* tslint:enable:no-bitwise */\r\nexport var RoleType;\r\n(function (RoleType) {\r\n    RoleType[RoleType[\"None\"] = 0] = \"None\";\r\n    RoleType[RoleType[\"Guest\"] = 1] = \"Guest\";\r\n    RoleType[RoleType[\"Reader\"] = 2] = \"Reader\";\r\n    RoleType[RoleType[\"Contributor\"] = 3] = \"Contributor\";\r\n    RoleType[RoleType[\"WebDesigner\"] = 4] = \"WebDesigner\";\r\n    RoleType[RoleType[\"Administrator\"] = 5] = \"Administrator\";\r\n})(RoleType || (RoleType = {}));\r\nexport var PageType;\r\n(function (PageType) {\r\n    PageType[PageType[\"Invalid\"] = -1] = \"Invalid\";\r\n    PageType[PageType[\"DefaultView\"] = 0] = \"DefaultView\";\r\n    PageType[PageType[\"NormalView\"] = 1] = \"NormalView\";\r\n    PageType[PageType[\"DialogView\"] = 2] = \"DialogView\";\r\n    PageType[PageType[\"View\"] = 3] = \"View\";\r\n    PageType[PageType[\"DisplayForm\"] = 4] = \"DisplayForm\";\r\n    PageType[PageType[\"DisplayFormDialog\"] = 5] = \"DisplayFormDialog\";\r\n    PageType[PageType[\"EditForm\"] = 6] = \"EditForm\";\r\n    PageType[PageType[\"EditFormDialog\"] = 7] = \"EditFormDialog\";\r\n    PageType[PageType[\"NewForm\"] = 8] = \"NewForm\";\r\n    PageType[PageType[\"NewFormDialog\"] = 9] = \"NewFormDialog\";\r\n    PageType[PageType[\"SolutionForm\"] = 10] = \"SolutionForm\";\r\n    PageType[PageType[\"PAGE_MAXITEMS\"] = 11] = \"PAGE_MAXITEMS\";\r\n})(PageType || (PageType = {}));\r\nexport var SharingLinkKind;\r\n(function (SharingLinkKind) {\r\n    /**\r\n     * Uninitialized link\r\n     */\r\n    SharingLinkKind[SharingLinkKind[\"Uninitialized\"] = 0] = \"Uninitialized\";\r\n    /**\r\n     * Direct link to the object being shared\r\n     */\r\n    SharingLinkKind[SharingLinkKind[\"Direct\"] = 1] = \"Direct\";\r\n    /**\r\n     * Organization-shareable link to the object being shared with view permissions\r\n     */\r\n    SharingLinkKind[SharingLinkKind[\"OrganizationView\"] = 2] = \"OrganizationView\";\r\n    /**\r\n     * Organization-shareable link to the object being shared with edit permissions\r\n     */\r\n    SharingLinkKind[SharingLinkKind[\"OrganizationEdit\"] = 3] = \"OrganizationEdit\";\r\n    /**\r\n     * View only anonymous link\r\n     */\r\n    SharingLinkKind[SharingLinkKind[\"AnonymousView\"] = 4] = \"AnonymousView\";\r\n    /**\r\n     * Read/Write anonymous link\r\n     */\r\n    SharingLinkKind[SharingLinkKind[\"AnonymousEdit\"] = 5] = \"AnonymousEdit\";\r\n    /**\r\n     * Flexible sharing Link where properties can change without affecting link URL\r\n     */\r\n    SharingLinkKind[SharingLinkKind[\"Flexible\"] = 6] = \"Flexible\";\r\n})(SharingLinkKind || (SharingLinkKind = {}));\r\n/**\r\n * Indicates the role of the sharing link\r\n */\r\nexport var SharingRole;\r\n(function (SharingRole) {\r\n    SharingRole[SharingRole[\"None\"] = 0] = \"None\";\r\n    SharingRole[SharingRole[\"View\"] = 1] = \"View\";\r\n    SharingRole[SharingRole[\"Edit\"] = 2] = \"Edit\";\r\n    SharingRole[SharingRole[\"Owner\"] = 3] = \"Owner\";\r\n})(SharingRole || (SharingRole = {}));\r\nexport var SharingOperationStatusCode;\r\n(function (SharingOperationStatusCode) {\r\n    /**\r\n     * The share operation completed without errors.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"CompletedSuccessfully\"] = 0] = \"CompletedSuccessfully\";\r\n    /**\r\n     * The share operation completed and generated requests for access.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"AccessRequestsQueued\"] = 1] = \"AccessRequestsQueued\";\r\n    /**\r\n     * The share operation failed as there were no resolved users.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"NoResolvedUsers\"] = -1] = \"NoResolvedUsers\";\r\n    /**\r\n     * The share operation failed due to insufficient permissions.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"AccessDenied\"] = -2] = \"AccessDenied\";\r\n    /**\r\n     * The share operation failed when attempting a cross site share, which is not supported.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"CrossSiteRequestNotSupported\"] = -3] = \"CrossSiteRequestNotSupported\";\r\n    /**\r\n     * The sharing operation failed due to an unknown error.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"UnknowError\"] = -4] = \"UnknowError\";\r\n    /**\r\n     * The text you typed is too long. Please shorten it.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"EmailBodyTooLong\"] = -5] = \"EmailBodyTooLong\";\r\n    /**\r\n     * The maximum number of unique scopes in the list has been exceeded.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"ListUniqueScopesExceeded\"] = -6] = \"ListUniqueScopesExceeded\";\r\n    /**\r\n     * The share operation failed because a sharing capability is disabled in the site.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"CapabilityDisabled\"] = -7] = \"CapabilityDisabled\";\r\n    /**\r\n     * The specified object for the share operation is not supported.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"ObjectNotSupported\"] = -8] = \"ObjectNotSupported\";\r\n    /**\r\n     * A SharePoint group cannot contain another SharePoint group.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"NestedGroupsNotSupported\"] = -9] = \"NestedGroupsNotSupported\";\r\n})(SharingOperationStatusCode || (SharingOperationStatusCode = {}));\r\nexport var SPSharedObjectType;\r\n(function (SPSharedObjectType) {\r\n    SPSharedObjectType[SPSharedObjectType[\"Unknown\"] = 0] = \"Unknown\";\r\n    SPSharedObjectType[SPSharedObjectType[\"File\"] = 1] = \"File\";\r\n    SPSharedObjectType[SPSharedObjectType[\"Folder\"] = 2] = \"Folder\";\r\n    SPSharedObjectType[SPSharedObjectType[\"Item\"] = 3] = \"Item\";\r\n    SPSharedObjectType[SPSharedObjectType[\"List\"] = 4] = \"List\";\r\n    SPSharedObjectType[SPSharedObjectType[\"Web\"] = 5] = \"Web\";\r\n    SPSharedObjectType[SPSharedObjectType[\"Max\"] = 6] = \"Max\";\r\n})(SPSharedObjectType || (SPSharedObjectType = {}));\r\nexport var SharingDomainRestrictionMode;\r\n(function (SharingDomainRestrictionMode) {\r\n    SharingDomainRestrictionMode[SharingDomainRestrictionMode[\"None\"] = 0] = \"None\";\r\n    SharingDomainRestrictionMode[SharingDomainRestrictionMode[\"AllowList\"] = 1] = \"AllowList\";\r\n    SharingDomainRestrictionMode[SharingDomainRestrictionMode[\"BlockList\"] = 2] = \"BlockList\";\r\n})(SharingDomainRestrictionMode || (SharingDomainRestrictionMode = {}));\r\nexport var RenderListDataOptions;\r\n(function (RenderListDataOptions) {\r\n    RenderListDataOptions[RenderListDataOptions[\"None\"] = 0] = \"None\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ContextInfo\"] = 1] = \"ContextInfo\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ListData\"] = 2] = \"ListData\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ListSchema\"] = 4] = \"ListSchema\";\r\n    RenderListDataOptions[RenderListDataOptions[\"MenuView\"] = 8] = \"MenuView\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ListContentType\"] = 16] = \"ListContentType\";\r\n    RenderListDataOptions[RenderListDataOptions[\"FileSystemItemId\"] = 32] = \"FileSystemItemId\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ClientFormSchema\"] = 64] = \"ClientFormSchema\";\r\n    RenderListDataOptions[RenderListDataOptions[\"QuickLaunch\"] = 128] = \"QuickLaunch\";\r\n    RenderListDataOptions[RenderListDataOptions[\"Spotlight\"] = 256] = \"Spotlight\";\r\n    RenderListDataOptions[RenderListDataOptions[\"Visualization\"] = 512] = \"Visualization\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ViewMetadata\"] = 1024] = \"ViewMetadata\";\r\n    RenderListDataOptions[RenderListDataOptions[\"DisableAutoHyperlink\"] = 2048] = \"DisableAutoHyperlink\";\r\n    RenderListDataOptions[RenderListDataOptions[\"EnableMediaTAUrls\"] = 4096] = \"EnableMediaTAUrls\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ParentInfo\"] = 8192] = \"ParentInfo\";\r\n    RenderListDataOptions[RenderListDataOptions[\"PageContextInfo\"] = 16384] = \"PageContextInfo\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ClientSideComponentManifest\"] = 32768] = \"ClientSideComponentManifest\";\r\n})(RenderListDataOptions || (RenderListDataOptions = {}));\r\nexport var FieldUserSelectionMode;\r\n(function (FieldUserSelectionMode) {\r\n    FieldUserSelectionMode[FieldUserSelectionMode[\"PeopleAndGroups\"] = 1] = \"PeopleAndGroups\";\r\n    FieldUserSelectionMode[FieldUserSelectionMode[\"PeopleOnly\"] = 0] = \"PeopleOnly\";\r\n})(FieldUserSelectionMode || (FieldUserSelectionMode = {}));\r\nexport var ChoiceFieldFormatType;\r\n(function (ChoiceFieldFormatType) {\r\n    ChoiceFieldFormatType[ChoiceFieldFormatType[\"Dropdown\"] = 0] = \"Dropdown\";\r\n    ChoiceFieldFormatType[ChoiceFieldFormatType[\"RadioButtons\"] = 1] = \"RadioButtons\";\r\n})(ChoiceFieldFormatType || (ChoiceFieldFormatType = {}));\r\n/**\r\n * Specifies the originating zone of a request received.\r\n */\r\nexport var UrlZone;\r\n(function (UrlZone) {\r\n    /**\r\n     * Specifies the default zone used for requests unless another zone is specified.\r\n     */\r\n    UrlZone[UrlZone[\"DefaultZone\"] = 0] = \"DefaultZone\";\r\n    /**\r\n     * Specifies an intranet zone.\r\n     */\r\n    UrlZone[UrlZone[\"Intranet\"] = 1] = \"Intranet\";\r\n    /**\r\n     * Specifies an Internet zone.\r\n     */\r\n    UrlZone[UrlZone[\"Internet\"] = 2] = \"Internet\";\r\n    /**\r\n     * Specifies a custom zone.\r\n     */\r\n    UrlZone[UrlZone[\"Custom\"] = 3] = \"Custom\";\r\n    /**\r\n     * Specifies an extranet zone.\r\n     */\r\n    UrlZone[UrlZone[\"Extranet\"] = 4] = \"Extranet\";\r\n})(UrlZone || (UrlZone = {}));\r\n//# sourceMappingURL=types.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryableInstance, SharePointQueryableCollection, defaultPath } from \"./sharepointqueryable\";\r\nimport { SiteGroups } from \"./sitegroups\";\r\nimport { extend, jsS, hOP } from \"@pnp/common\";\r\nimport { metadata } from \"./utils/metadata\";\r\n/**\r\n * Describes a set of role assignments for the current scope\r\n *\r\n */\r\nvar RoleAssignments = /** @class */ (function (_super) {\r\n    tslib_1.__extends(RoleAssignments, _super);\r\n    function RoleAssignments() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    RoleAssignments_1 = RoleAssignments;\r\n    /**\r\n     * Gets the role assignment associated with the specified principal id from the collection.\r\n     *\r\n     * @param id The id of the role assignment\r\n     */\r\n    RoleAssignments.prototype.getById = function (id) {\r\n        var ra = new RoleAssignment(this);\r\n        ra.concat(\"(\" + id + \")\");\r\n        return ra;\r\n    };\r\n    /**\r\n     * Adds a new role assignment with the specified principal and role definitions to the collection\r\n     *\r\n     * @param principalId The id of the user or group to assign permissions to\r\n     * @param roleDefId The id of the role definition that defines the permissions to assign\r\n     *\r\n     */\r\n    RoleAssignments.prototype.add = function (principalId, roleDefId) {\r\n        return this.clone(RoleAssignments_1, \"addroleassignment(principalid=\" + principalId + \", roledefid=\" + roleDefId + \")\").postCore();\r\n    };\r\n    /**\r\n     * Removes the role assignment with the specified principal and role definition from the collection\r\n     *\r\n     * @param principalId The id of the user or group in the role assignment\r\n     * @param roleDefId The id of the role definition in the role assignment\r\n     *\r\n     */\r\n    RoleAssignments.prototype.remove = function (principalId, roleDefId) {\r\n        return this.clone(RoleAssignments_1, \"removeroleassignment(principalid=\" + principalId + \", roledefid=\" + roleDefId + \")\").postCore();\r\n    };\r\n    var RoleAssignments_1;\r\n    RoleAssignments = RoleAssignments_1 = tslib_1.__decorate([\r\n        defaultPath(\"roleassignments\")\r\n    ], RoleAssignments);\r\n    return RoleAssignments;\r\n}(SharePointQueryableCollection));\r\nexport { RoleAssignments };\r\n/**\r\n * Describes a role assignment\r\n *\r\n */\r\nvar RoleAssignment = /** @class */ (function (_super) {\r\n    tslib_1.__extends(RoleAssignment, _super);\r\n    function RoleAssignment() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * Deletes this role assignment\r\n         *\r\n         */\r\n        _this.delete = _this._delete;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(RoleAssignment.prototype, \"groups\", {\r\n        /**\r\n         * Gets the groups that directly belong to the access control list (ACL) for this securable object\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteGroups(this, \"groups\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RoleAssignment.prototype, \"bindings\", {\r\n        /**\r\n         * Gets the role definition bindings for this role assignment\r\n         *\r\n         */\r\n        get: function () {\r\n            return new RoleDefinitionBindings(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return RoleAssignment;\r\n}(SharePointQueryableInstance));\r\nexport { RoleAssignment };\r\n/**\r\n * Describes a collection of role definitions\r\n *\r\n */\r\nvar RoleDefinitions = /** @class */ (function (_super) {\r\n    tslib_1.__extends(RoleDefinitions, _super);\r\n    function RoleDefinitions() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets the role definition with the specified id from the collection\r\n     *\r\n     * @param id The id of the role definition\r\n     *\r\n     */\r\n    RoleDefinitions.prototype.getById = function (id) {\r\n        return new RoleDefinition(this, \"getById(\" + id + \")\");\r\n    };\r\n    /**\r\n     * Gets the role definition with the specified name\r\n     *\r\n     * @param name The name of the role definition\r\n     *\r\n     */\r\n    RoleDefinitions.prototype.getByName = function (name) {\r\n        return new RoleDefinition(this, \"getbyname('\" + name + \"')\");\r\n    };\r\n    /**\r\n     * Gets the role definition with the specified role type\r\n     *\r\n     * @param roleTypeKind The roletypekind of the role definition (None=0, Guest=1, Reader=2, Contributor=3, WebDesigner=4, Administrator=5, Editor=6, System=7)\r\n     *\r\n     */\r\n    RoleDefinitions.prototype.getByType = function (roleTypeKind) {\r\n        return new RoleDefinition(this, \"getbytype(\" + roleTypeKind + \")\");\r\n    };\r\n    /**\r\n     * Creates a role definition\r\n     *\r\n     * @param name The new role definition's name\r\n     * @param description The new role definition's description\r\n     * @param order The order in which the role definition appears\r\n     * @param basePermissions The permissions mask for this role definition\r\n     *\r\n     */\r\n    RoleDefinitions.prototype.add = function (name, description, order, basePermissions) {\r\n        var _this = this;\r\n        var postBody = jsS({\r\n            BasePermissions: {\r\n                High: basePermissions.High.toString(),\r\n                Low: basePermissions.Low.toString(),\r\n            },\r\n            Description: description,\r\n            Name: name,\r\n            Order: order,\r\n            __metadata: { \"type\": \"SP.RoleDefinition\" },\r\n        });\r\n        return this.postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                definition: _this.getById(data.Id),\r\n            };\r\n        });\r\n    };\r\n    RoleDefinitions = tslib_1.__decorate([\r\n        defaultPath(\"roledefinitions\")\r\n    ], RoleDefinitions);\r\n    return RoleDefinitions;\r\n}(SharePointQueryableCollection));\r\nexport { RoleDefinitions };\r\n/**\r\n * Describes a role definition\r\n *\r\n */\r\nvar RoleDefinition = /** @class */ (function (_super) {\r\n    tslib_1.__extends(RoleDefinition, _super);\r\n    function RoleDefinition() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * Deletes this role definition\r\n         *\r\n         */\r\n        _this.delete = _this._delete;\r\n        return _this;\r\n        /* tslint:enable */\r\n    }\r\n    /**\r\n     * Updates this role definition with the supplied properties\r\n     *\r\n     * @param properties A plain object hash of values to update for the role definition\r\n     */\r\n    /* tslint:disable no-string-literal */\r\n    RoleDefinition.prototype.update = function (properties) {\r\n        var _this = this;\r\n        if (hOP(properties, \"BasePermissions\") !== undefined) {\r\n            properties[\"BasePermissions\"] = extend({ __metadata: { type: \"SP.BasePermissions\" } }, {\r\n                High: properties[\"BasePermissions\"].High.toString(),\r\n                Low: properties[\"BasePermissions\"].Low.toString(),\r\n            });\r\n        }\r\n        var postBody = jsS(extend(metadata(\"SP.RoleDefinition\"), properties));\r\n        return this.postCore({\r\n            body: postBody,\r\n            headers: {\r\n                \"X-HTTP-Method\": \"MERGE\",\r\n            },\r\n        }).then(function (data) {\r\n            var retDef = _this;\r\n            if (hOP(properties, \"Name\")) {\r\n                var parent_1 = _this.getParent(RoleDefinitions, _this.parentUrl, \"\");\r\n                retDef = parent_1.getByName(properties[\"Name\"]);\r\n            }\r\n            return {\r\n                data: data,\r\n                definition: retDef,\r\n            };\r\n        });\r\n    };\r\n    return RoleDefinition;\r\n}(SharePointQueryableInstance));\r\nexport { RoleDefinition };\r\n/**\r\n * Describes the role definitons bound to a role assignment object\r\n *\r\n */\r\nvar RoleDefinitionBindings = /** @class */ (function (_super) {\r\n    tslib_1.__extends(RoleDefinitionBindings, _super);\r\n    function RoleDefinitionBindings() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    RoleDefinitionBindings = tslib_1.__decorate([\r\n        defaultPath(\"roledefinitionbindings\")\r\n    ], RoleDefinitionBindings);\r\n    return RoleDefinitionBindings;\r\n}(SharePointQueryableCollection));\r\nexport { RoleDefinitionBindings };\r\n//# sourceMappingURL=roles.js.map","import * as tslib_1 from \"tslib\";\r\nimport { RoleAssignments } from \"./roles\";\r\nimport { PermissionKind } from \"./types\";\r\nimport { SharePointQueryable, SharePointQueryableInstance } from \"./sharepointqueryable\";\r\nimport { hOP } from \"@pnp/common\";\r\nvar SharePointQueryableSecurable = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SharePointQueryableSecurable, _super);\r\n    function SharePointQueryableSecurable() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(SharePointQueryableSecurable.prototype, \"roleAssignments\", {\r\n        /**\r\n         * Gets the set of role assignments for this item\r\n         *\r\n         */\r\n        get: function () {\r\n            return new RoleAssignments(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SharePointQueryableSecurable.prototype, \"firstUniqueAncestorSecurableObject\", {\r\n        /**\r\n         * Gets the closest securable up the security hierarchy whose permissions are applied to this list item\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableInstance(this, \"FirstUniqueAncestorSecurableObject\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets the effective permissions for the user supplied\r\n     *\r\n     * @param loginName The claims username for the user (ex: i:0#.f|membership|user@domain.com)\r\n     */\r\n    SharePointQueryableSecurable.prototype.getUserEffectivePermissions = function (loginName) {\r\n        var q = this.clone(SharePointQueryable, \"getUserEffectivePermissions(@user)\");\r\n        q.query.set(\"@user\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.get().then(function (r) {\r\n            // handle verbose mode\r\n            return hOP(r, \"GetUserEffectivePermissions\") ? r.GetUserEffectivePermissions : r;\r\n        });\r\n    };\r\n    /**\r\n     * Gets the effective permissions for the current user\r\n     */\r\n    SharePointQueryableSecurable.prototype.getCurrentUserEffectivePermissions = function () {\r\n        var _this = this;\r\n        // remove need to reference Web here, which created a circular build issue\r\n        var w = new SharePointQueryableInstance(\"_api/web\", \"currentuser\");\r\n        return w.configureFrom(this).select(\"LoginName\").get().then(function (user) {\r\n            return _this.getUserEffectivePermissions(user.LoginName);\r\n        });\r\n    };\r\n    /**\r\n     * Breaks the security inheritance at this level optinally copying permissions and clearing subscopes\r\n     *\r\n     * @param copyRoleAssignments If true the permissions are copied from the current parent scope\r\n     * @param clearSubscopes Optional. true to make all child securable objects inherit role assignments from the current object\r\n     */\r\n    SharePointQueryableSecurable.prototype.breakRoleInheritance = function (copyRoleAssignments, clearSubscopes) {\r\n        if (copyRoleAssignments === void 0) { copyRoleAssignments = false; }\r\n        if (clearSubscopes === void 0) { clearSubscopes = false; }\r\n        return this.clone(SharePointQueryableSecurable, \"breakroleinheritance(copyroleassignments=\" + copyRoleAssignments + \", clearsubscopes=\" + clearSubscopes + \")\").postCore();\r\n    };\r\n    /**\r\n     * Removes the local role assignments so that it re-inherit role assignments from the parent object.\r\n     *\r\n     */\r\n    SharePointQueryableSecurable.prototype.resetRoleInheritance = function () {\r\n        return this.clone(SharePointQueryableSecurable, \"resetroleinheritance\").postCore();\r\n    };\r\n    /**\r\n     * Determines if a given user has the appropriate permissions\r\n     *\r\n     * @param loginName The user to check\r\n     * @param permission The permission being checked\r\n     */\r\n    SharePointQueryableSecurable.prototype.userHasPermissions = function (loginName, permission) {\r\n        var _this = this;\r\n        return this.getUserEffectivePermissions(loginName).then(function (perms) {\r\n            return _this.hasPermissions(perms, permission);\r\n        });\r\n    };\r\n    /**\r\n     * Determines if the current user has the requested permissions\r\n     *\r\n     * @param permission The permission we wish to check\r\n     */\r\n    SharePointQueryableSecurable.prototype.currentUserHasPermissions = function (permission) {\r\n        var _this = this;\r\n        return this.getCurrentUserEffectivePermissions().then(function (perms) {\r\n            return _this.hasPermissions(perms, permission);\r\n        });\r\n    };\r\n    /**\r\n     * Taken from sp.js, checks the supplied permissions against the mask\r\n     *\r\n     * @param value The security principal's permissions on the given object\r\n     * @param perm The permission checked against the value\r\n     */\r\n    /* tslint:disable:no-bitwise */\r\n    SharePointQueryableSecurable.prototype.hasPermissions = function (value, perm) {\r\n        if (!perm) {\r\n            return true;\r\n        }\r\n        if (perm === PermissionKind.FullMask) {\r\n            return (value.High & 32767) === 32767 && value.Low === 65535;\r\n        }\r\n        perm = perm - 1;\r\n        var num = 1;\r\n        if (perm >= 0 && perm < 32) {\r\n            num = num << perm;\r\n            return 0 !== (value.Low & num);\r\n        }\r\n        else if (perm >= 32 && perm < 64) {\r\n            num = num << perm - 32;\r\n            return 0 !== (value.High & num);\r\n        }\r\n        return false;\r\n    };\r\n    return SharePointQueryableSecurable;\r\n}(SharePointQueryableInstance));\r\nexport { SharePointQueryableSecurable };\r\n//# sourceMappingURL=sharepointqueryablesecurable.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryableCollection, SharePointQueryableInstance, defaultPath } from \"./sharepointqueryable\";\r\nimport { TextParser, BlobParser, JSONParser, BufferParser } from \"@pnp/odata\";\r\nimport { extend, getGUID } from \"@pnp/common\";\r\nimport { LimitedWebPartManager } from \"./webparts\";\r\nimport { Item } from \"./items\";\r\nimport { SharePointQueryableShareableFile } from \"./sharepointqueryableshareable\";\r\nimport { odataUrlFrom } from \"./odata\";\r\n/**\r\n * Describes a collection of File objects\r\n *\r\n */\r\nvar Files = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Files, _super);\r\n    function Files() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Files_1 = Files;\r\n    /**\r\n     * Gets a File by filename\r\n     *\r\n     * @param name The name of the file, including extension.\r\n     */\r\n    Files.prototype.getByName = function (name) {\r\n        var f = new File(this);\r\n        f.concat(\"('\" + name + \"')\");\r\n        return f;\r\n    };\r\n    /**\r\n     * Uploads a file. Not supported for batching\r\n     *\r\n     * @param url The folder-relative url of the file.\r\n     * @param content The file contents blob.\r\n     * @param shouldOverWrite Should a file with the same name in the same location be overwritten? (default: true)\r\n     * @returns The new File and the raw response.\r\n     */\r\n    Files.prototype.add = function (url, content, shouldOverWrite) {\r\n        var _this = this;\r\n        if (shouldOverWrite === void 0) { shouldOverWrite = true; }\r\n        return new Files_1(this, \"add(overwrite=\" + shouldOverWrite + \",url='\" + url + \"')\")\r\n            .postCore({\r\n            body: content,\r\n        }).then(function (response) {\r\n            return {\r\n                data: response,\r\n                file: _this.getByName(url),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Uploads a file. Not supported for batching\r\n     *\r\n     * @param url The folder-relative url of the file.\r\n     * @param content The Blob file content to add\r\n     * @param progress A callback function which can be used to track the progress of the upload\r\n     * @param shouldOverWrite Should a file with the same name in the same location be overwritten? (default: true)\r\n     * @param chunkSize The size of each file slice, in bytes (default: 10485760)\r\n     * @returns The new File and the raw response.\r\n     */\r\n    Files.prototype.addChunked = function (url, content, progress, shouldOverWrite, chunkSize) {\r\n        var _this = this;\r\n        if (shouldOverWrite === void 0) { shouldOverWrite = true; }\r\n        if (chunkSize === void 0) { chunkSize = 10485760; }\r\n        var adder = this.clone(Files_1, \"add(overwrite=\" + shouldOverWrite + \",url='\" + url + \"')\", false);\r\n        return adder.postCore()\r\n            .then(function () { return _this.getByName(url); })\r\n            .then(function (file) { return file.setContentChunked(content, progress, chunkSize); });\r\n    };\r\n    /**\r\n     * Adds a ghosted file to an existing list or document library. Not supported for batching.\r\n     *\r\n     * @param fileUrl The server-relative url where you want to save the file.\r\n     * @param templateFileType The type of use to create the file.\r\n     * @returns The template file that was added and the raw response.\r\n     */\r\n    Files.prototype.addTemplateFile = function (fileUrl, templateFileType) {\r\n        var _this = this;\r\n        return this.clone(Files_1, \"addTemplateFile(urloffile='\" + fileUrl + \"',templatefiletype=\" + templateFileType + \")\", false)\r\n            .postCore().then(function (response) {\r\n            return {\r\n                data: response,\r\n                file: _this.getByName(fileUrl),\r\n            };\r\n        });\r\n    };\r\n    var Files_1;\r\n    Files = Files_1 = tslib_1.__decorate([\r\n        defaultPath(\"files\")\r\n    ], Files);\r\n    return Files;\r\n}(SharePointQueryableCollection));\r\nexport { Files };\r\n/**\r\n * Describes a single File instance\r\n *\r\n */\r\nvar File = /** @class */ (function (_super) {\r\n    tslib_1.__extends(File, _super);\r\n    function File() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(File.prototype, \"listItemAllFields\", {\r\n        /**\r\n         * Gets a value that specifies the list item field values for the list item corresponding to the file.\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableInstance(this, \"listItemAllFields\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(File.prototype, \"versions\", {\r\n        /**\r\n         * Gets a collection of versions\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Versions(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Approves the file submitted for content approval with the specified comment.\r\n     * Only documents in lists that are enabled for content approval can be approved.\r\n     *\r\n     * @param comment The comment for the approval.\r\n     */\r\n    File.prototype.approve = function (comment) {\r\n        if (comment === void 0) { comment = \"\"; }\r\n        return this.clone(File, \"approve(comment='\" + comment + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Stops the chunk upload session without saving the uploaded data. Does not support batching.\r\n     * If the file doesn’t already exist in the library, the partially uploaded file will be deleted.\r\n     * Use this in response to user action (as in a request to cancel an upload) or an error or exception.\r\n     * Use the uploadId value that was passed to the StartUpload method that started the upload session.\r\n     * This method is currently available only on Office 365.\r\n     *\r\n     * @param uploadId The unique identifier of the upload session.\r\n     */\r\n    File.prototype.cancelUpload = function (uploadId) {\r\n        return this.clone(File, \"cancelUpload(uploadId=guid'\" + uploadId + \"')\", false).postCore();\r\n    };\r\n    /**\r\n     * Checks the file in to a document library based on the check-in type.\r\n     *\r\n     * @param comment A comment for the check-in. Its length must be <= 1023.\r\n     * @param checkinType The check-in type for the file.\r\n     */\r\n    File.prototype.checkin = function (comment, checkinType) {\r\n        if (comment === void 0) { comment = \"\"; }\r\n        if (checkinType === void 0) { checkinType = CheckinType.Major; }\r\n        if (comment.length > 1023) {\r\n            throw Error(\"The maximum comment length is 1023 characters.\");\r\n        }\r\n        return this.clone(File, \"checkin(comment='\" + comment + \"',checkintype=\" + checkinType + \")\").postCore();\r\n    };\r\n    /**\r\n     * Checks out the file from a document library.\r\n     */\r\n    File.prototype.checkout = function () {\r\n        return this.clone(File, \"checkout\").postCore();\r\n    };\r\n    /**\r\n     * Copies the file to the destination url.\r\n     *\r\n     * @param url The absolute url or server relative url of the destination file path to copy to.\r\n     * @param shouldOverWrite Should a file with the same name in the same location be overwritten?\r\n     */\r\n    File.prototype.copyTo = function (url, shouldOverWrite) {\r\n        if (shouldOverWrite === void 0) { shouldOverWrite = true; }\r\n        return this.clone(File, \"copyTo(strnewurl='\" + url + \"',boverwrite=\" + shouldOverWrite + \")\").postCore();\r\n    };\r\n    /**\r\n     * Delete this file.\r\n     *\r\n     * @param eTag Value used in the IF-Match header, by default \"*\"\r\n     */\r\n    File.prototype.delete = function (eTag) {\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        return this.clone(File, null).postCore({\r\n            headers: {\r\n                \"IF-Match\": eTag,\r\n                \"X-HTTP-Method\": \"DELETE\",\r\n            },\r\n        });\r\n    };\r\n    /**\r\n     * Denies approval for a file that was submitted for content approval.\r\n     * Only documents in lists that are enabled for content approval can be denied.\r\n     *\r\n     * @param comment The comment for the denial.\r\n     */\r\n    File.prototype.deny = function (comment) {\r\n        if (comment === void 0) { comment = \"\"; }\r\n        if (comment.length > 1023) {\r\n            throw Error(\"The maximum comment length is 1023 characters.\");\r\n        }\r\n        return this.clone(File, \"deny(comment='\" + comment + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Specifies the control set used to access, modify, or add Web Parts associated with this Web Part Page and view.\r\n     * An exception is thrown if the file is not an ASPX page.\r\n     *\r\n     * @param scope The WebPartsPersonalizationScope view on the Web Parts page.\r\n     */\r\n    File.prototype.getLimitedWebPartManager = function (scope) {\r\n        if (scope === void 0) { scope = WebPartsPersonalizationScope.Shared; }\r\n        return new LimitedWebPartManager(this, \"getLimitedWebPartManager(scope=\" + scope + \")\");\r\n    };\r\n    /**\r\n     * Moves the file to the specified destination url.\r\n     *\r\n     * @param url The absolute url or server relative url of the destination file path to move to.\r\n     * @param moveOperations The bitwise MoveOperations value for how to move the file.\r\n     */\r\n    File.prototype.moveTo = function (url, moveOperations) {\r\n        if (moveOperations === void 0) { moveOperations = MoveOperations.Overwrite; }\r\n        return this.clone(File, \"moveTo(newurl='\" + url + \"',flags=\" + moveOperations + \")\").postCore();\r\n    };\r\n    /**\r\n     * Submits the file for content approval with the specified comment.\r\n     *\r\n     * @param comment The comment for the published file. Its length must be <= 1023.\r\n     */\r\n    File.prototype.publish = function (comment) {\r\n        if (comment === void 0) { comment = \"\"; }\r\n        if (comment.length > 1023) {\r\n            throw Error(\"The maximum comment length is 1023 characters.\");\r\n        }\r\n        return this.clone(File, \"publish(comment='\" + comment + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Moves the file to the Recycle Bin and returns the identifier of the new Recycle Bin item.\r\n     *\r\n     * @returns The GUID of the recycled file.\r\n     */\r\n    File.prototype.recycle = function () {\r\n        return this.clone(File, \"recycle\").postCore();\r\n    };\r\n    /**\r\n     * Reverts an existing checkout for the file.\r\n     *\r\n     */\r\n    File.prototype.undoCheckout = function () {\r\n        return this.clone(File, \"undoCheckout\").postCore();\r\n    };\r\n    /**\r\n     * Removes the file from content approval or unpublish a major version.\r\n     *\r\n     * @param comment The comment for the unpublish operation. Its length must be <= 1023.\r\n     */\r\n    File.prototype.unpublish = function (comment) {\r\n        if (comment === void 0) { comment = \"\"; }\r\n        if (comment.length > 1023) {\r\n            throw Error(\"The maximum comment length is 1023 characters.\");\r\n        }\r\n        return this.clone(File, \"unpublish(comment='\" + comment + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Gets the contents of the file as text. Not supported in batching.\r\n     *\r\n     */\r\n    File.prototype.getText = function () {\r\n        return this.clone(File, \"$value\", false).get(new TextParser(), { headers: { \"binaryStringResponseBody\": \"true\" } });\r\n    };\r\n    /**\r\n     * Gets the contents of the file as a blob, does not work in Node.js. Not supported in batching.\r\n     *\r\n     */\r\n    File.prototype.getBlob = function () {\r\n        return this.clone(File, \"$value\", false).get(new BlobParser(), { headers: { \"binaryStringResponseBody\": \"true\" } });\r\n    };\r\n    /**\r\n     * Gets the contents of a file as an ArrayBuffer, works in Node.js. Not supported in batching.\r\n     */\r\n    File.prototype.getBuffer = function () {\r\n        return this.clone(File, \"$value\", false).get(new BufferParser(), { headers: { \"binaryStringResponseBody\": \"true\" } });\r\n    };\r\n    /**\r\n     * Gets the contents of a file as an ArrayBuffer, works in Node.js. Not supported in batching.\r\n     */\r\n    File.prototype.getJSON = function () {\r\n        return this.clone(File, \"$value\", false).get(new JSONParser(), { headers: { \"binaryStringResponseBody\": \"true\" } });\r\n    };\r\n    /**\r\n     * Sets the content of a file, for large files use setContentChunked. Not supported in batching.\r\n     *\r\n     * @param content The file content\r\n     *\r\n     */\r\n    File.prototype.setContent = function (content) {\r\n        var _this = this;\r\n        return this.clone(File, \"$value\", false).postCore({\r\n            body: content,\r\n            headers: {\r\n                \"X-HTTP-Method\": \"PUT\",\r\n            },\r\n        }).then(function (_) { return new File(_this); });\r\n    };\r\n    /**\r\n     * Gets the associated list item for this folder, loading the default properties\r\n     */\r\n    File.prototype.getItem = function () {\r\n        var _this = this;\r\n        var selects = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            selects[_i] = arguments[_i];\r\n        }\r\n        var q = this.listItemAllFields;\r\n        return q.select.apply(q, selects).get().then(function (d) {\r\n            return extend((new Item(odataUrlFrom(d))).configureFrom(_this), d);\r\n        });\r\n    };\r\n    /**\r\n     * Sets the contents of a file using a chunked upload approach. Not supported in batching.\r\n     *\r\n     * @param file The file to upload\r\n     * @param progress A callback function which can be used to track the progress of the upload\r\n     * @param chunkSize The size of each file slice, in bytes (default: 10485760)\r\n     */\r\n    File.prototype.setContentChunked = function (file, progress, chunkSize) {\r\n        var _this = this;\r\n        if (chunkSize === void 0) { chunkSize = 10485760; }\r\n        if (progress === undefined) {\r\n            progress = function () { return null; };\r\n        }\r\n        var fileSize = file.size;\r\n        var blockCount = parseInt((file.size / chunkSize).toString(), 10) + ((file.size % chunkSize === 0) ? 1 : 0);\r\n        var uploadId = getGUID();\r\n        // start the chain with the first fragment\r\n        progress({ uploadId: uploadId, blockNumber: 1, chunkSize: chunkSize, currentPointer: 0, fileSize: fileSize, stage: \"starting\", totalBlocks: blockCount });\r\n        var chain = this.startUpload(uploadId, file.slice(0, chunkSize));\r\n        var _loop_1 = function (i) {\r\n            chain = chain.then(function (pointer) {\r\n                progress({ uploadId: uploadId, blockNumber: i, chunkSize: chunkSize, currentPointer: pointer, fileSize: fileSize, stage: \"continue\", totalBlocks: blockCount });\r\n                return _this.continueUpload(uploadId, pointer, file.slice(pointer, pointer + chunkSize));\r\n            });\r\n        };\r\n        // skip the first and last blocks\r\n        for (var i = 2; i < blockCount; i++) {\r\n            _loop_1(i);\r\n        }\r\n        return chain.then(function (pointer) {\r\n            progress({ uploadId: uploadId, blockNumber: blockCount, chunkSize: chunkSize, currentPointer: pointer, fileSize: fileSize, stage: \"finishing\", totalBlocks: blockCount });\r\n            return _this.finishUpload(uploadId, pointer, file.slice(pointer));\r\n        });\r\n    };\r\n    /**\r\n     * Starts a new chunk upload session and uploads the first fragment.\r\n     * The current file content is not changed when this method completes.\r\n     * The method is idempotent (and therefore does not change the result) as long as you use the same values for uploadId and stream.\r\n     * The upload session ends either when you use the CancelUpload method or when you successfully\r\n     * complete the upload session by passing the rest of the file contents through the ContinueUpload and FinishUpload methods.\r\n     * The StartUpload and ContinueUpload methods return the size of the running total of uploaded data in bytes,\r\n     * so you can pass those return values to subsequent uses of ContinueUpload and FinishUpload.\r\n     * This method is currently available only on Office 365.\r\n     *\r\n     * @param uploadId The unique identifier of the upload session.\r\n     * @param fragment The file contents.\r\n     * @returns The size of the total uploaded data in bytes.\r\n     */\r\n    File.prototype.startUpload = function (uploadId, fragment) {\r\n        return this.clone(File, \"startUpload(uploadId=guid'\" + uploadId + \"')\", false)\r\n            .postCore({ body: fragment })\r\n            .then(function (n) {\r\n            // When OData=verbose the payload has the following shape:\r\n            // { StartUpload: \"10485760\" }\r\n            if (typeof n === \"object\") {\r\n                n = n.StartUpload;\r\n            }\r\n            return parseFloat(n);\r\n        });\r\n    };\r\n    /**\r\n     * Continues the chunk upload session with an additional fragment.\r\n     * The current file content is not changed.\r\n     * Use the uploadId value that was passed to the StartUpload method that started the upload session.\r\n     * This method is currently available only on Office 365.\r\n     *\r\n     * @param uploadId The unique identifier of the upload session.\r\n     * @param fileOffset The size of the offset into the file where the fragment starts.\r\n     * @param fragment The file contents.\r\n     * @returns The size of the total uploaded data in bytes.\r\n     */\r\n    File.prototype.continueUpload = function (uploadId, fileOffset, fragment) {\r\n        return this.clone(File, \"continueUpload(uploadId=guid'\" + uploadId + \"',fileOffset=\" + fileOffset + \")\", false)\r\n            .postCore({ body: fragment })\r\n            .then(function (n) {\r\n            // When OData=verbose the payload has the following shape:\r\n            // { ContinueUpload: \"20971520\" }\r\n            if (typeof n === \"object\") {\r\n                n = n.ContinueUpload;\r\n            }\r\n            return parseFloat(n);\r\n        });\r\n    };\r\n    /**\r\n     * Uploads the last file fragment and commits the file. The current file content is changed when this method completes.\r\n     * Use the uploadId value that was passed to the StartUpload method that started the upload session.\r\n     * This method is currently available only on Office 365.\r\n     *\r\n     * @param uploadId The unique identifier of the upload session.\r\n     * @param fileOffset The size of the offset into the file where the fragment starts.\r\n     * @param fragment The file contents.\r\n     * @returns The newly uploaded file.\r\n     */\r\n    File.prototype.finishUpload = function (uploadId, fileOffset, fragment) {\r\n        return this.clone(File, \"finishUpload(uploadId=guid'\" + uploadId + \"',fileOffset=\" + fileOffset + \")\", false)\r\n            .postCore({ body: fragment })\r\n            .then(function (response) {\r\n            return {\r\n                data: response,\r\n                file: new File(odataUrlFrom(response)),\r\n            };\r\n        });\r\n    };\r\n    return File;\r\n}(SharePointQueryableShareableFile));\r\nexport { File };\r\n/**\r\n * Describes a collection of Version objects\r\n *\r\n */\r\nvar Versions = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Versions, _super);\r\n    function Versions() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Versions_1 = Versions;\r\n    /**\r\n     * Gets a version by id\r\n     *\r\n     * @param versionId The id of the version to retrieve\r\n     */\r\n    Versions.prototype.getById = function (versionId) {\r\n        var v = new Version(this);\r\n        v.concat(\"(\" + versionId + \")\");\r\n        return v;\r\n    };\r\n    /**\r\n     * Deletes all the file version objects in the collection.\r\n     *\r\n     */\r\n    Versions.prototype.deleteAll = function () {\r\n        return new Versions_1(this, \"deleteAll\").postCore();\r\n    };\r\n    /**\r\n     * Deletes the specified version of the file.\r\n     *\r\n     * @param versionId The ID of the file version to delete.\r\n     */\r\n    Versions.prototype.deleteById = function (versionId) {\r\n        return this.clone(Versions_1, \"deleteById(vid=\" + versionId + \")\").postCore();\r\n    };\r\n    /**\r\n     * Recycles the specified version of the file.\r\n     *\r\n     * @param versionId The ID of the file version to delete.\r\n     */\r\n    Versions.prototype.recycleByID = function (versionId) {\r\n        return this.clone(Versions_1, \"recycleByID(vid=\" + versionId + \")\").postCore();\r\n    };\r\n    /**\r\n     * Deletes the file version object with the specified version label.\r\n     *\r\n     * @param label The version label of the file version to delete, for example: 1.2\r\n     */\r\n    Versions.prototype.deleteByLabel = function (label) {\r\n        return this.clone(Versions_1, \"deleteByLabel(versionlabel='\" + label + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Recycles the file version object with the specified version label.\r\n     *\r\n     * @param label The version label of the file version to delete, for example: 1.2\r\n     */\r\n    Versions.prototype.recycleByLabel = function (label) {\r\n        return this.clone(Versions_1, \"recycleByLabel(versionlabel='\" + label + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Creates a new file version from the file specified by the version label.\r\n     *\r\n     * @param label The version label of the file version to restore, for example: 1.2\r\n     */\r\n    Versions.prototype.restoreByLabel = function (label) {\r\n        return this.clone(Versions_1, \"restoreByLabel(versionlabel='\" + label + \"')\").postCore();\r\n    };\r\n    var Versions_1;\r\n    Versions = Versions_1 = tslib_1.__decorate([\r\n        defaultPath(\"versions\")\r\n    ], Versions);\r\n    return Versions;\r\n}(SharePointQueryableCollection));\r\nexport { Versions };\r\n/**\r\n * Describes a single Version instance\r\n *\r\n */\r\nvar Version = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Version, _super);\r\n    function Version() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n        * Delete a specific version of a file.\r\n        *\r\n        * @param eTag Value used in the IF-Match header, by default \"*\"\r\n        */\r\n        _this.delete = _this._deleteWithETag;\r\n        return _this;\r\n        // /**\r\n        // * Delete a specific version of a file.\r\n        // *\r\n        // * @param eTag Value used in the IF-Match header, by default \"*\"\r\n        // */\r\n        // public delete(eTag = \"*\"): Promise<void> {\r\n        //     return this.postCore({\r\n        //         headers: {\r\n        //             \"IF-Match\": eTag,\r\n        //             \"X-HTTP-Method\": \"DELETE\",\r\n        //         },\r\n        //     });\r\n        // }\r\n    }\r\n    return Version;\r\n}(SharePointQueryableInstance));\r\nexport { Version };\r\nexport var CheckinType;\r\n(function (CheckinType) {\r\n    CheckinType[CheckinType[\"Minor\"] = 0] = \"Minor\";\r\n    CheckinType[CheckinType[\"Major\"] = 1] = \"Major\";\r\n    CheckinType[CheckinType[\"Overwrite\"] = 2] = \"Overwrite\";\r\n})(CheckinType || (CheckinType = {}));\r\nexport var WebPartsPersonalizationScope;\r\n(function (WebPartsPersonalizationScope) {\r\n    WebPartsPersonalizationScope[WebPartsPersonalizationScope[\"User\"] = 0] = \"User\";\r\n    WebPartsPersonalizationScope[WebPartsPersonalizationScope[\"Shared\"] = 1] = \"Shared\";\r\n})(WebPartsPersonalizationScope || (WebPartsPersonalizationScope = {}));\r\nexport var MoveOperations;\r\n(function (MoveOperations) {\r\n    MoveOperations[MoveOperations[\"Overwrite\"] = 1] = \"Overwrite\";\r\n    MoveOperations[MoveOperations[\"AllowBrokenThickets\"] = 8] = \"AllowBrokenThickets\";\r\n})(MoveOperations || (MoveOperations = {}));\r\nexport var TemplateFileType;\r\n(function (TemplateFileType) {\r\n    TemplateFileType[TemplateFileType[\"StandardPage\"] = 0] = \"StandardPage\";\r\n    TemplateFileType[TemplateFileType[\"WikiPage\"] = 1] = \"WikiPage\";\r\n    TemplateFileType[TemplateFileType[\"FormPage\"] = 2] = \"FormPage\";\r\n    TemplateFileType[TemplateFileType[\"ClientSidePage\"] = 3] = \"ClientSidePage\";\r\n})(TemplateFileType || (TemplateFileType = {}));\r\n//# sourceMappingURL=files.js.map","import * as tslib_1 from \"tslib\";\r\nimport { extend, combine, jsS } from \"@pnp/common\";\r\nimport { odataUrlFrom } from \"./odata\";\r\nimport { SharePointQueryable, SharePointQueryableInstance, SharePointQueryableCollection, } from \"./sharepointqueryable\";\r\nimport { SharePointQueryableSecurable } from \"./sharepointqueryablesecurable\";\r\nimport { RoleType, SharingLinkKind, SharingRole, } from \"./types\";\r\nimport { extractWebUrl } from \"./utils/extractweburl\";\r\n/**\r\n * Internal helper class used to augment classes to include sharing functionality\r\n */\r\nvar SharePointQueryableShareable = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SharePointQueryableShareable, _super);\r\n    function SharePointQueryableShareable() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets a sharing link for the supplied\r\n     *\r\n     * @param kind The kind of link to share\r\n     * @param expiration The optional expiration for this link\r\n     */\r\n    SharePointQueryableShareable.prototype.getShareLink = function (kind, expiration) {\r\n        if (expiration === void 0) { expiration = null; }\r\n        // date needs to be an ISO string or null\r\n        var expString = expiration !== null ? expiration.toISOString() : null;\r\n        // clone using the factory and send the request\r\n        return this.clone(SharePointQueryableShareable, \"shareLink\").postCore({\r\n            body: jsS({\r\n                request: {\r\n                    createLink: true,\r\n                    emailData: null,\r\n                    settings: {\r\n                        expiration: expString,\r\n                        linkKind: kind,\r\n                    },\r\n                },\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Shares this instance with the supplied users\r\n     *\r\n     * @param loginNames Resolved login names to share\r\n     * @param role The role\r\n     * @param requireSignin True to require the user is authenticated, otherwise false\r\n     * @param propagateAcl True to apply this share to all children\r\n     * @param emailData If supplied an email will be sent with the indicated properties\r\n     */\r\n    SharePointQueryableShareable.prototype.shareWith = function (loginNames, role, requireSignin, propagateAcl, emailData) {\r\n        var _this = this;\r\n        if (requireSignin === void 0) { requireSignin = false; }\r\n        if (propagateAcl === void 0) { propagateAcl = false; }\r\n        // handle the multiple input types\r\n        if (!Array.isArray(loginNames)) {\r\n            loginNames = [loginNames];\r\n        }\r\n        var userStr = jsS(loginNames.map(function (login) { return { Key: login }; }));\r\n        var roleFilter = role === SharingRole.Edit ? RoleType.Contributor : RoleType.Reader;\r\n        // start by looking up the role definition id we need to set the roleValue\r\n        // remove need to reference Web here, which created a circular build issue\r\n        var w = new SharePointQueryableCollection(\"_api/web\", \"roledefinitions\");\r\n        return w.select(\"Id\").filter(\"RoleTypeKind eq \" + roleFilter).get().then(function (def) {\r\n            if (!Array.isArray(def) || def.length < 1) {\r\n                throw Error(\"Could not locate a role defintion with RoleTypeKind \" + roleFilter);\r\n            }\r\n            var postBody = {\r\n                includeAnonymousLinkInEmail: requireSignin,\r\n                peoplePickerInput: userStr,\r\n                propagateAcl: propagateAcl,\r\n                roleValue: \"role:\" + def[0].Id,\r\n                useSimplifiedRoles: true,\r\n            };\r\n            if (emailData !== undefined) {\r\n                postBody = extend(postBody, {\r\n                    emailBody: emailData.body,\r\n                    emailSubject: emailData.subject !== undefined ? emailData.subject : \"\",\r\n                    sendEmail: true,\r\n                });\r\n            }\r\n            return _this.clone(SharePointQueryableShareable, \"shareObject\").postCore({\r\n                body: jsS(postBody),\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Shares an object based on the supplied options\r\n     *\r\n     * @param options The set of options to send to the ShareObject method\r\n     * @param bypass If true any processing is skipped and the options are sent directly to the ShareObject method\r\n     */\r\n    SharePointQueryableShareable.prototype.shareObject = function (options, bypass) {\r\n        var _this = this;\r\n        if (bypass === void 0) { bypass = false; }\r\n        if (bypass) {\r\n            // if the bypass flag is set send the supplied parameters directly to the service\r\n            return this.sendShareObjectRequest(options);\r\n        }\r\n        // extend our options with some defaults\r\n        options = extend(options, {\r\n            group: null,\r\n            includeAnonymousLinkInEmail: false,\r\n            propagateAcl: false,\r\n            useSimplifiedRoles: true,\r\n        }, true);\r\n        return this.getRoleValue(options.role, options.group).then(function (roleValue) {\r\n            // handle the multiple input types\r\n            if (!Array.isArray(options.loginNames)) {\r\n                options.loginNames = [options.loginNames];\r\n            }\r\n            var userStr = jsS(options.loginNames.map(function (login) { return { Key: login }; }));\r\n            var postBody = {\r\n                peoplePickerInput: userStr,\r\n                roleValue: roleValue,\r\n                url: options.url,\r\n            };\r\n            if (options.emailData !== undefined && options.emailData !== null) {\r\n                postBody = extend(postBody, {\r\n                    emailBody: options.emailData.body,\r\n                    emailSubject: options.emailData.subject !== undefined ? options.emailData.subject : \"Shared with you.\",\r\n                    sendEmail: true,\r\n                });\r\n            }\r\n            return _this.sendShareObjectRequest(postBody);\r\n        });\r\n    };\r\n    /**\r\n     * Calls the web's UnshareObject method\r\n     *\r\n     * @param url The url of the object to unshare\r\n     */\r\n    SharePointQueryableShareable.prototype.unshareObjectWeb = function (url) {\r\n        return this.clone(SharePointQueryableShareable, \"unshareObject\").postCore({\r\n            body: jsS({\r\n                url: url,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Checks Permissions on the list of Users and returns back role the users have on the Item.\r\n     *\r\n     * @param recipients The array of Entities for which Permissions need to be checked.\r\n     */\r\n    SharePointQueryableShareable.prototype.checkPermissions = function (recipients) {\r\n        return this.clone(SharePointQueryableShareable, \"checkPermissions\").postCore({\r\n            body: jsS({\r\n                recipients: recipients,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Get Sharing Information.\r\n     *\r\n     * @param request The SharingInformationRequest Object.\r\n     * @param expands Expand more fields.\r\n     *\r\n     */\r\n    SharePointQueryableShareable.prototype.getSharingInformation = function (request, expands) {\r\n        if (request === void 0) { request = null; }\r\n        var q = this.clone(SharePointQueryableShareable, \"getSharingInformation\");\r\n        return q.expand.apply(q, expands).postCore({\r\n            body: jsS({\r\n                request: request,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Gets the sharing settings of an item.\r\n     *\r\n     * @param useSimplifiedRoles Determines whether to use simplified roles.\r\n     */\r\n    SharePointQueryableShareable.prototype.getObjectSharingSettings = function (useSimplifiedRoles) {\r\n        if (useSimplifiedRoles === void 0) { useSimplifiedRoles = true; }\r\n        return this.clone(SharePointQueryableShareable, \"getObjectSharingSettings\").postCore({\r\n            body: jsS({\r\n                useSimplifiedRoles: useSimplifiedRoles,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Unshares this object\r\n     */\r\n    SharePointQueryableShareable.prototype.unshareObject = function () {\r\n        return this.clone(SharePointQueryableShareable, \"unshareObject\").postCore();\r\n    };\r\n    /**\r\n     * Deletes a link by type\r\n     *\r\n     * @param kind Deletes a sharing link by the kind of link\r\n     */\r\n    SharePointQueryableShareable.prototype.deleteLinkByKind = function (kind) {\r\n        return this.clone(SharePointQueryableShareable, \"deleteLinkByKind\").postCore({\r\n            body: jsS({ linkKind: kind }),\r\n        });\r\n    };\r\n    /**\r\n     * Removes the specified link to the item.\r\n     *\r\n     * @param kind The kind of link to be deleted.\r\n     * @param shareId\r\n     */\r\n    SharePointQueryableShareable.prototype.unshareLink = function (kind, shareId) {\r\n        if (shareId === void 0) { shareId = \"00000000-0000-0000-0000-000000000000\"; }\r\n        return this.clone(SharePointQueryableShareable, \"unshareLink\").postCore({\r\n            body: jsS({ linkKind: kind, shareId: shareId }),\r\n        });\r\n    };\r\n    /**\r\n     * Calculates the roleValue string used in the sharing query\r\n     *\r\n     * @param role The Sharing Role\r\n     * @param group The Group type\r\n     */\r\n    SharePointQueryableShareable.prototype.getRoleValue = function (role, group) {\r\n        // we will give group precedence, because we had to make a choice\r\n        if (group !== undefined && group !== null) {\r\n            switch (group) {\r\n                case RoleType.Contributor:\r\n                    // remove need to reference Web here, which created a circular build issue\r\n                    var memberGroup = new SharePointQueryableInstance(\"_api/web\", \"associatedmembergroup\");\r\n                    return memberGroup.select(\"Id\").get().then(function (g) { return \"group: \" + g.Id; });\r\n                case RoleType.Reader:\r\n                case RoleType.Guest:\r\n                    // remove need to reference Web here, which created a circular build issue\r\n                    var visitorGroup = new SharePointQueryableInstance(\"_api/web\", \"associatedvisitorgroup\");\r\n                    return visitorGroup.select(\"Id\").get().then(function (g) { return \"group: \" + g.Id; });\r\n                default:\r\n                    throw Error(\"Could not determine role value for supplied value. Contributor, Reader, and Guest are supported\");\r\n            }\r\n        }\r\n        else {\r\n            var roleFilter = role === SharingRole.Edit ? RoleType.Contributor : RoleType.Reader;\r\n            // remove need to reference Web here, which created a circular build issue\r\n            var roleDefs = new SharePointQueryableCollection(\"_api/web\", \"roledefinitions\");\r\n            return roleDefs.select(\"Id\").top(1).filter(\"RoleTypeKind eq \" + roleFilter).get().then(function (def) {\r\n                if (def.length < 1) {\r\n                    throw Error(\"Could not locate associated role definition for supplied role. Edit and View are supported\");\r\n                }\r\n                return \"role: \" + def[0].Id;\r\n            });\r\n        }\r\n    };\r\n    SharePointQueryableShareable.prototype.getShareObjectWeb = function (candidate) {\r\n        return Promise.resolve(new SharePointQueryableInstance(extractWebUrl(candidate), \"/_api/SP.Web.ShareObject\"));\r\n    };\r\n    SharePointQueryableShareable.prototype.sendShareObjectRequest = function (options) {\r\n        return this.getShareObjectWeb(this.toUrl()).then(function (web) {\r\n            return web.expand(\"UsersWithAccessRequests\", \"GroupsSharedWith\").as(SharePointQueryableShareable).postCore({\r\n                body: jsS(options),\r\n            });\r\n        });\r\n    };\r\n    return SharePointQueryableShareable;\r\n}(SharePointQueryable));\r\nexport { SharePointQueryableShareable };\r\nvar SharePointQueryableShareableWeb = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SharePointQueryableShareableWeb, _super);\r\n    function SharePointQueryableShareableWeb() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Shares this web with the supplied users\r\n     * @param loginNames The resolved login names to share\r\n     * @param role The role to share this web\r\n     * @param emailData Optional email data\r\n     */\r\n    SharePointQueryableShareableWeb.prototype.shareWith = function (loginNames, role, emailData) {\r\n        var _this = this;\r\n        if (role === void 0) { role = SharingRole.View; }\r\n        var dependency = this.addBatchDependency();\r\n        // remove need to reference Web here, which created a circular build issue\r\n        var web = new SharePointQueryableInstance(extractWebUrl(this.toUrl()), \"/_api/web/url\");\r\n        return web.get().then(function (url) {\r\n            dependency();\r\n            return _this.shareObject(combine(url, \"/_layouts/15/aclinv.aspx?forSharing=1&mbypass=1\"), loginNames, role, emailData);\r\n        });\r\n    };\r\n    /**\r\n     * Provides direct access to the static web.ShareObject method\r\n     *\r\n     * @param url The url to share\r\n     * @param loginNames Resolved loginnames string[] of a single login name string\r\n     * @param roleValue Role value\r\n     * @param emailData Optional email data\r\n     * @param groupId Optional group id\r\n     * @param propagateAcl\r\n     * @param includeAnonymousLinkInEmail\r\n     * @param useSimplifiedRoles\r\n     */\r\n    SharePointQueryableShareableWeb.prototype.shareObject = function (url, loginNames, role, emailData, group, propagateAcl, includeAnonymousLinkInEmail, useSimplifiedRoles) {\r\n        if (propagateAcl === void 0) { propagateAcl = false; }\r\n        if (includeAnonymousLinkInEmail === void 0) { includeAnonymousLinkInEmail = false; }\r\n        if (useSimplifiedRoles === void 0) { useSimplifiedRoles = true; }\r\n        return this.clone(SharePointQueryableShareable, null).shareObject({\r\n            emailData: emailData,\r\n            group: group,\r\n            includeAnonymousLinkInEmail: includeAnonymousLinkInEmail,\r\n            loginNames: loginNames,\r\n            propagateAcl: propagateAcl,\r\n            role: role,\r\n            url: url,\r\n            useSimplifiedRoles: useSimplifiedRoles,\r\n        });\r\n    };\r\n    /**\r\n     * Supplies a method to pass any set of arguments to ShareObject\r\n     *\r\n     * @param options The set of options to send to ShareObject\r\n     */\r\n    SharePointQueryableShareableWeb.prototype.shareObjectRaw = function (options) {\r\n        return this.clone(SharePointQueryableShareable, null).shareObject(options, true);\r\n    };\r\n    /**\r\n     * Unshares the object\r\n     *\r\n     * @param url The url of the object to stop sharing\r\n     */\r\n    SharePointQueryableShareableWeb.prototype.unshareObject = function (url) {\r\n        return this.clone(SharePointQueryableShareable, null).unshareObjectWeb(url);\r\n    };\r\n    return SharePointQueryableShareableWeb;\r\n}(SharePointQueryableSecurable));\r\nexport { SharePointQueryableShareableWeb };\r\nvar SharePointQueryableShareableItem = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SharePointQueryableShareableItem, _super);\r\n    function SharePointQueryableShareableItem() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets a link suitable for sharing for this item\r\n     *\r\n     * @param kind The type of link to share\r\n     * @param expiration The optional expiration date\r\n     */\r\n    SharePointQueryableShareableItem.prototype.getShareLink = function (kind, expiration) {\r\n        if (kind === void 0) { kind = SharingLinkKind.OrganizationView; }\r\n        if (expiration === void 0) { expiration = null; }\r\n        return this.clone(SharePointQueryableShareable, null).getShareLink(kind, expiration);\r\n    };\r\n    /**\r\n     * Shares this item with one or more users\r\n     *\r\n     * @param loginNames string or string[] of resolved login names to which this item will be shared\r\n     * @param role The role (View | Edit) applied to the share\r\n     * @param emailData Optional, if inlucded an email will be sent. Note subject currently has no effect.\r\n     */\r\n    SharePointQueryableShareableItem.prototype.shareWith = function (loginNames, role, requireSignin, emailData) {\r\n        if (role === void 0) { role = SharingRole.View; }\r\n        if (requireSignin === void 0) { requireSignin = false; }\r\n        return this.clone(SharePointQueryableShareable, null).shareWith(loginNames, role, requireSignin, false, emailData);\r\n    };\r\n    /**\r\n     * Checks Permissions on the list of Users and returns back role the users have on the Item.\r\n     *\r\n     * @param recipients The array of Entities for which Permissions need to be checked.\r\n     */\r\n    SharePointQueryableShareableItem.prototype.checkSharingPermissions = function (recipients) {\r\n        return this.clone(SharePointQueryableShareable, null).checkPermissions(recipients);\r\n    };\r\n    /**\r\n     * Get Sharing Information.\r\n     *\r\n     * @param request The SharingInformationRequest Object.\r\n     * @param expands Expand more fields.\r\n     *\r\n     */\r\n    SharePointQueryableShareableItem.prototype.getSharingInformation = function (request, expands) {\r\n        if (request === void 0) { request = null; }\r\n        return this.clone(SharePointQueryableShareable, null).getSharingInformation(request, expands);\r\n    };\r\n    /**\r\n     * Gets the sharing settings of an item.\r\n     *\r\n     * @param useSimplifiedRoles Determines whether to use simplified roles.\r\n     */\r\n    SharePointQueryableShareableItem.prototype.getObjectSharingSettings = function (useSimplifiedRoles) {\r\n        if (useSimplifiedRoles === void 0) { useSimplifiedRoles = true; }\r\n        return this.clone(SharePointQueryableShareable, null).getObjectSharingSettings(useSimplifiedRoles);\r\n    };\r\n    /**\r\n     * Unshare this item\r\n     */\r\n    SharePointQueryableShareableItem.prototype.unshare = function () {\r\n        return this.clone(SharePointQueryableShareable, null).unshareObject();\r\n    };\r\n    /**\r\n     * Deletes a sharing link by kind\r\n     *\r\n     * @param kind Deletes a sharing link by the kind of link\r\n     */\r\n    SharePointQueryableShareableItem.prototype.deleteSharingLinkByKind = function (kind) {\r\n        return this.clone(SharePointQueryableShareable, null).deleteLinkByKind(kind);\r\n    };\r\n    /**\r\n     * Removes the specified link to the item.\r\n     *\r\n     * @param kind The kind of link to be deleted.\r\n     * @param shareId\r\n     */\r\n    SharePointQueryableShareableItem.prototype.unshareLink = function (kind, shareId) {\r\n        return this.clone(SharePointQueryableShareable, null).unshareLink(kind, shareId);\r\n    };\r\n    return SharePointQueryableShareableItem;\r\n}(SharePointQueryableSecurable));\r\nexport { SharePointQueryableShareableItem };\r\nvar FileFolderShared = /** @class */ (function (_super) {\r\n    tslib_1.__extends(FileFolderShared, _super);\r\n    function FileFolderShared() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets a link suitable for sharing\r\n     *\r\n     * @param kind The kind of link to get\r\n     * @param expiration Optional, an expiration for this link\r\n     */\r\n    FileFolderShared.prototype.getShareLink = function (kind, expiration) {\r\n        if (kind === void 0) { kind = SharingLinkKind.OrganizationView; }\r\n        if (expiration === void 0) { expiration = null; }\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.getShareLink(kind, expiration);\r\n        });\r\n    };\r\n    /**\r\n         * Checks Permissions on the list of Users and returns back role the users have on the Item.\r\n         *\r\n         * @param recipients The array of Entities for which Permissions need to be checked.\r\n         */\r\n    FileFolderShared.prototype.checkSharingPermissions = function (recipients) {\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.checkPermissions(recipients);\r\n        });\r\n    };\r\n    /**\r\n     * Get Sharing Information.\r\n     *\r\n     * @param request The SharingInformationRequest Object.\r\n     * @param expands Expand more fields.\r\n     *\r\n     */\r\n    FileFolderShared.prototype.getSharingInformation = function (request, expands) {\r\n        if (request === void 0) { request = null; }\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.getSharingInformation(request, expands);\r\n        });\r\n    };\r\n    /**\r\n     * Gets the sharing settings of an item.\r\n     *\r\n     * @param useSimplifiedRoles Determines whether to use simplified roles.\r\n     */\r\n    FileFolderShared.prototype.getObjectSharingSettings = function (useSimplifiedRoles) {\r\n        if (useSimplifiedRoles === void 0) { useSimplifiedRoles = true; }\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.getObjectSharingSettings(useSimplifiedRoles);\r\n        });\r\n    };\r\n    /**\r\n     * Unshare this item\r\n     */\r\n    FileFolderShared.prototype.unshare = function () {\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.unshareObject();\r\n        });\r\n    };\r\n    /**\r\n     * Deletes a sharing link by the kind of link\r\n     *\r\n     * @param kind The kind of link to be deleted.\r\n     */\r\n    FileFolderShared.prototype.deleteSharingLinkByKind = function (kind) {\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.deleteLinkByKind(kind);\r\n        });\r\n    };\r\n    /**\r\n     * Removes the specified link to the item.\r\n     *\r\n     * @param kind The kind of link to be deleted.\r\n     * @param shareId The share id to delete\r\n     */\r\n    FileFolderShared.prototype.unshareLink = function (kind, shareId) {\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.unshareLink(kind, shareId);\r\n        });\r\n    };\r\n    /**\r\n     * For files and folders we need to use the associated item end point\r\n     */\r\n    FileFolderShared.prototype.getShareable = function () {\r\n        var _this = this;\r\n        // sharing only works on the item end point, not the file one - so we create a folder instance with the item url internally\r\n        return this.clone(SharePointQueryableShareableFile, \"listItemAllFields\", false).select(\"odata.id\").get().then(function (d) {\r\n            var shareable = new SharePointQueryableShareable(odataUrlFrom(d));\r\n            // we need to handle batching\r\n            if (_this.hasBatch) {\r\n                shareable = shareable.inBatch(_this.batch);\r\n            }\r\n            return shareable;\r\n        });\r\n    };\r\n    return FileFolderShared;\r\n}(SharePointQueryableInstance));\r\nexport { FileFolderShared };\r\nvar SharePointQueryableShareableFile = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SharePointQueryableShareableFile, _super);\r\n    function SharePointQueryableShareableFile() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Shares this item with one or more users\r\n     *\r\n     * @param loginNames string or string[] of resolved login names to which this item will be shared\r\n     * @param role The role (View | Edit) applied to the share\r\n     * @param shareEverything Share everything in this folder, even items with unique permissions.\r\n     * @param requireSignin If true the user must signin to view link, otherwise anyone with the link can access the resource\r\n     * @param emailData Optional, if inlucded an email will be sent. Note subject currently has no effect.\r\n     */\r\n    SharePointQueryableShareableFile.prototype.shareWith = function (loginNames, role, requireSignin, emailData) {\r\n        if (role === void 0) { role = SharingRole.View; }\r\n        if (requireSignin === void 0) { requireSignin = false; }\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.shareWith(loginNames, role, requireSignin, false, emailData);\r\n        });\r\n    };\r\n    return SharePointQueryableShareableFile;\r\n}(FileFolderShared));\r\nexport { SharePointQueryableShareableFile };\r\nvar SharePointQueryableShareableFolder = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SharePointQueryableShareableFolder, _super);\r\n    function SharePointQueryableShareableFolder() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Shares this item with one or more users\r\n     *\r\n     * @param loginNames string or string[] of resolved login names to which this item will be shared\r\n     * @param role The role (View | Edit) applied to the share\r\n     * @param shareEverything Share everything in this folder, even items with unique permissions.\r\n     * @param requireSignin If true the user must signin to view link, otherwise anyone with the link can access the resource\r\n     * @param emailData Optional, if inlucded an email will be sent. Note subject currently has no effect.\r\n     */\r\n    SharePointQueryableShareableFolder.prototype.shareWith = function (loginNames, role, requireSignin, shareEverything, emailData) {\r\n        if (role === void 0) { role = SharingRole.View; }\r\n        if (requireSignin === void 0) { requireSignin = false; }\r\n        if (shareEverything === void 0) { shareEverything = false; }\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.shareWith(loginNames, role, requireSignin, shareEverything, emailData);\r\n        });\r\n    };\r\n    return SharePointQueryableShareableFolder;\r\n}(FileFolderShared));\r\nexport { SharePointQueryableShareableFolder };\r\n//# sourceMappingURL=sharepointqueryableshareable.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryable, SharePointQueryableInstance, SharePointQueryableCollection, defaultPath } from \"./sharepointqueryable\";\r\nimport { jsS } from \"@pnp/common\";\r\nvar LimitedWebPartManager = /** @class */ (function (_super) {\r\n    tslib_1.__extends(LimitedWebPartManager, _super);\r\n    function LimitedWebPartManager() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(LimitedWebPartManager.prototype, \"webparts\", {\r\n        /**\r\n         * Gets the set of web part definitions contained by this web part manager\r\n         *\r\n         */\r\n        get: function () {\r\n            return new WebPartDefinitions(this, \"webparts\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Exports a webpart definition\r\n     *\r\n     * @param id the GUID id of the definition to export\r\n     */\r\n    LimitedWebPartManager.prototype.export = function (id) {\r\n        return this.clone(LimitedWebPartManager, \"ExportWebPart\").postCore({\r\n            body: jsS({ webPartId: id }),\r\n        });\r\n    };\r\n    /**\r\n     * Imports a webpart\r\n     *\r\n     * @param xml webpart definition which must be valid XML in the .dwp or .webpart format\r\n     */\r\n    LimitedWebPartManager.prototype.import = function (xml) {\r\n        return this.clone(LimitedWebPartManager, \"ImportWebPart\").postCore({\r\n            body: jsS({ webPartXml: xml }),\r\n        });\r\n    };\r\n    return LimitedWebPartManager;\r\n}(SharePointQueryable));\r\nexport { LimitedWebPartManager };\r\nvar WebPartDefinitions = /** @class */ (function (_super) {\r\n    tslib_1.__extends(WebPartDefinitions, _super);\r\n    function WebPartDefinitions() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets a web part definition from the collection by id\r\n     *\r\n     * @param id The storage ID of the SPWebPartDefinition to retrieve\r\n     */\r\n    WebPartDefinitions.prototype.getById = function (id) {\r\n        return new WebPartDefinition(this, \"getbyid('\" + id + \"')\");\r\n    };\r\n    /**\r\n     * Gets a web part definition from the collection by storage id\r\n     *\r\n     * @param id The WebPart.ID of the SPWebPartDefinition to retrieve\r\n     */\r\n    WebPartDefinitions.prototype.getByControlId = function (id) {\r\n        return new WebPartDefinition(this, \"getByControlId('\" + id + \"')\");\r\n    };\r\n    return WebPartDefinitions;\r\n}(SharePointQueryableCollection));\r\nexport { WebPartDefinitions };\r\nvar WebPartDefinition = /** @class */ (function (_super) {\r\n    tslib_1.__extends(WebPartDefinition, _super);\r\n    function WebPartDefinition() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(WebPartDefinition.prototype, \"webpart\", {\r\n        /**\r\n         * Gets the webpart information associated with this definition\r\n         */\r\n        get: function () {\r\n            return new WebPart(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Saves changes to the Web Part made using other properties and methods on the SPWebPartDefinition object\r\n     */\r\n    WebPartDefinition.prototype.saveChanges = function () {\r\n        return this.clone(WebPartDefinition, \"SaveWebPartChanges\").postCore();\r\n    };\r\n    /**\r\n     * Moves the Web Part to a different location on a Web Part Page\r\n     *\r\n     * @param zoneId The ID of the Web Part Zone to which to move the Web Part\r\n     * @param zoneIndex A Web Part zone index that specifies the position at which the Web Part is to be moved within the destination Web Part zone\r\n     */\r\n    WebPartDefinition.prototype.moveTo = function (zoneId, zoneIndex) {\r\n        return this.clone(WebPartDefinition, \"MoveWebPartTo(zoneID='\" + zoneId + \"', zoneIndex=\" + zoneIndex + \")\").postCore();\r\n    };\r\n    /**\r\n     * Closes the Web Part. If the Web Part is already closed, this method does nothing\r\n     */\r\n    WebPartDefinition.prototype.close = function () {\r\n        return this.clone(WebPartDefinition, \"CloseWebPart\").postCore();\r\n    };\r\n    /**\r\n     * Opens the Web Part. If the Web Part is already closed, this method does nothing\r\n     */\r\n    WebPartDefinition.prototype.open = function () {\r\n        return this.clone(WebPartDefinition, \"OpenWebPart\").postCore();\r\n    };\r\n    /**\r\n     * Removes a webpart from a page, all settings will be lost\r\n     */\r\n    WebPartDefinition.prototype.delete = function () {\r\n        return this.clone(WebPartDefinition, \"DeleteWebPart\").postCore();\r\n    };\r\n    return WebPartDefinition;\r\n}(SharePointQueryableInstance));\r\nexport { WebPartDefinition };\r\nvar WebPart = /** @class */ (function (_super) {\r\n    tslib_1.__extends(WebPart, _super);\r\n    function WebPart() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    WebPart = tslib_1.__decorate([\r\n        defaultPath(\"webpart\")\r\n    ], WebPart);\r\n    return WebPart;\r\n}(SharePointQueryableInstance));\r\nexport { WebPart };\r\n//# sourceMappingURL=webparts.js.map","import * as tslib_1 from \"tslib\";\r\nimport { extend, jsS } from \"@pnp/common\";\r\nimport { SharePointQueryable, SharePointQueryableCollection, SharePointQueryableInstance, defaultPath } from \"./sharepointqueryable\";\r\nimport { SharePointQueryableShareableFolder } from \"./sharepointqueryableshareable\";\r\nimport { Files } from \"./files\";\r\nimport { odataUrlFrom } from \"./odata\";\r\nimport { Item } from \"./items\";\r\nimport { SPHttpClient } from \"./net/sphttpclient\";\r\n/**\r\n * Describes a collection of Folder objects\r\n *\r\n */\r\nvar Folders = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Folders, _super);\r\n    function Folders() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Folders_1 = Folders;\r\n    /**\r\n     * Gets a folder by folder name\r\n     *\r\n     */\r\n    Folders.prototype.getByName = function (name) {\r\n        var f = new Folder(this);\r\n        f.concat(\"('\" + name + \"')\");\r\n        return f;\r\n    };\r\n    /**\r\n     * Adds a new folder to the current folder (relative) or any folder (absolute)\r\n     *\r\n     * @param url The relative or absolute url where the new folder will be created. Urls starting with a forward slash are absolute.\r\n     * @returns The new Folder and the raw response.\r\n     */\r\n    Folders.prototype.add = function (url) {\r\n        var _this = this;\r\n        return this.clone(Folders_1, \"add('\" + url + \"')\").postCore().then(function (response) {\r\n            return {\r\n                data: response,\r\n                folder: _this.getByName(url),\r\n            };\r\n        });\r\n    };\r\n    var Folders_1;\r\n    Folders = Folders_1 = tslib_1.__decorate([\r\n        defaultPath(\"folders\")\r\n    ], Folders);\r\n    return Folders;\r\n}(SharePointQueryableCollection));\r\nexport { Folders };\r\n/**\r\n * Describes a single Folder instance\r\n *\r\n */\r\nvar Folder = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Folder, _super);\r\n    function Folder() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.update = _this._update(\"SP.Folder\", function (data) { return ({ data: data, folder: _this }); });\r\n        return _this;\r\n    }\r\n    Object.defineProperty(Folder.prototype, \"contentTypeOrder\", {\r\n        /**\r\n         * Specifies the sequence in which content types are displayed.\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableCollection(this, \"contentTypeOrder\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Folder.prototype, \"files\", {\r\n        /**\r\n         * Gets this folder's files\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Files(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Folder.prototype, \"folders\", {\r\n        /**\r\n         * Gets this folder's sub folders\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Folders(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Folder.prototype, \"listItemAllFields\", {\r\n        /**\r\n         * Gets this folder's list item field values\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableInstance(this, \"listItemAllFields\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Folder.prototype, \"parentFolder\", {\r\n        /**\r\n         * Gets the parent folder, if available\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Folder(this, \"parentFolder\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Folder.prototype, \"properties\", {\r\n        /**\r\n         * Gets this folder's properties\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableInstance(this, \"properties\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Folder.prototype, \"serverRelativeUrl\", {\r\n        /**\r\n         * Gets this folder's server relative url\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryable(this, \"serverRelativeUrl\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Folder.prototype, \"uniqueContentTypeOrder\", {\r\n        /**\r\n         * Gets a value that specifies the content type order.\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableCollection(this, \"uniqueContentTypeOrder\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n    * Delete this folder\r\n    *\r\n    * @param eTag Value used in the IF-Match header, by default \"*\"\r\n    */\r\n    Folder.prototype.delete = function (eTag) {\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        return this.clone(Folder, null).postCore({\r\n            headers: {\r\n                \"IF-Match\": eTag,\r\n                \"X-HTTP-Method\": \"DELETE\",\r\n            },\r\n        });\r\n    };\r\n    /**\r\n     * Moves the folder to the Recycle Bin and returns the identifier of the new Recycle Bin item.\r\n     */\r\n    Folder.prototype.recycle = function () {\r\n        return this.clone(Folder, \"recycle\").postCore();\r\n    };\r\n    /**\r\n     * Gets the associated list item for this folder, loading the default properties\r\n     */\r\n    Folder.prototype.getItem = function () {\r\n        var selects = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            selects[_i] = arguments[_i];\r\n        }\r\n        var q = this.listItemAllFields;\r\n        return q.select.apply(q, selects).get().then(function (d) {\r\n            return extend(new Item(odataUrlFrom(d)), d);\r\n        });\r\n    };\r\n    /**\r\n     * Moves a folder to destination path\r\n     *\r\n     * @param destUrl Absolute or relative URL of the destination path\r\n     */\r\n    Folder.prototype.moveTo = function (destUrl) {\r\n        var _this = this;\r\n        return this.select(\"ServerRelativeUrl\").get().then(function (_a) {\r\n            var srcUrl = _a.ServerRelativeUrl;\r\n            var client = new SPHttpClient();\r\n            var webBaseUrl = _this.toUrl().split(\"/_api\")[0];\r\n            var hostUrl = webBaseUrl.replace(\"://\", \"___\").split(\"/\")[0].replace(\"___\", \"://\");\r\n            var methodUrl = webBaseUrl + \"/_api/SP.MoveCopyUtil.MoveFolder()\";\r\n            return client.post(methodUrl, {\r\n                body: jsS({\r\n                    destUrl: destUrl.indexOf(\"http\") === 0 ? destUrl : \"\" + hostUrl + destUrl,\r\n                    srcUrl: \"\" + hostUrl + srcUrl,\r\n                }),\r\n            }).then(function (r) { return r.json(); });\r\n        });\r\n    };\r\n    return Folder;\r\n}(SharePointQueryableShareableFolder));\r\nexport { Folder };\r\n//# sourceMappingURL=folders.js.map","import * as tslib_1 from \"tslib\";\r\nimport { jsS } from \"@pnp/common\";\r\nimport { SharePointQueryableCollection, SharePointQueryableInstance, defaultPath } from \"./sharepointqueryable\";\r\nimport { metadata } from \"./utils/metadata\";\r\n/**\r\n * Describes a collection of content types\r\n *\r\n */\r\nvar ContentTypes = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ContentTypes, _super);\r\n    function ContentTypes() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    ContentTypes_1 = ContentTypes;\r\n    /**\r\n     * Adds an existing contenttype to a content type collection\r\n     *\r\n     * @param contentTypeId in the following format, for example: 0x010102\r\n     */\r\n    ContentTypes.prototype.addAvailableContentType = function (contentTypeId) {\r\n        var _this = this;\r\n        var postBody = jsS({\r\n            \"contentTypeId\": contentTypeId,\r\n        });\r\n        return this.clone(ContentTypes_1, \"addAvailableContentType\").postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                contentType: _this.getById(data.id),\r\n                data: data,\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Gets a ContentType by content type id\r\n     */\r\n    ContentTypes.prototype.getById = function (id) {\r\n        var ct = new ContentType(this);\r\n        ct.concat(\"('\" + id + \"')\");\r\n        return ct;\r\n    };\r\n    /**\r\n     * Adds a new content type to the collection\r\n     *\r\n     * @param id The desired content type id for the new content type (also determines the parent content type)\r\n     * @param name The name of the content type\r\n     * @param description The description of the content type\r\n     * @param group The group in which to add the content type\r\n     * @param additionalSettings Any additional settings to provide when creating the content type\r\n     *\r\n     */\r\n    ContentTypes.prototype.add = function (id, name, description, group, additionalSettings) {\r\n        var _this = this;\r\n        if (description === void 0) { description = \"\"; }\r\n        if (group === void 0) { group = \"Custom Content Types\"; }\r\n        if (additionalSettings === void 0) { additionalSettings = {}; }\r\n        var postBody = jsS(Object.assign(metadata(\"SP.ContentType\"), {\r\n            \"Description\": description,\r\n            \"Group\": group,\r\n            \"Id\": { \"StringValue\": id },\r\n            \"Name\": name,\r\n        }, additionalSettings));\r\n        return this.postCore({ body: postBody }).then(function (data) {\r\n            return { contentType: _this.getById(data.id), data: data };\r\n        });\r\n    };\r\n    var ContentTypes_1;\r\n    ContentTypes = ContentTypes_1 = tslib_1.__decorate([\r\n        defaultPath(\"contenttypes\")\r\n    ], ContentTypes);\r\n    return ContentTypes;\r\n}(SharePointQueryableCollection));\r\nexport { ContentTypes };\r\n/**\r\n * Describes a single ContentType instance\r\n *\r\n */\r\nvar ContentType = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ContentType, _super);\r\n    function ContentType() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * Delete this content type\r\n         */\r\n        _this.delete = _this._delete;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(ContentType.prototype, \"fieldLinks\", {\r\n        /**\r\n         * Gets the column (also known as field) references in the content type.\r\n        */\r\n        get: function () {\r\n            return new FieldLinks(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ContentType.prototype, \"fields\", {\r\n        /**\r\n         * Gets a value that specifies the collection of fields for the content type.\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableCollection(this, \"fields\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ContentType.prototype, \"parent\", {\r\n        /**\r\n         * Gets the parent content type of the content type.\r\n         */\r\n        get: function () {\r\n            return new ContentType(this, \"parent\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ContentType.prototype, \"workflowAssociations\", {\r\n        /**\r\n         * Gets a value that specifies the collection of workflow associations for the content type.\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableCollection(this, \"workflowAssociations\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return ContentType;\r\n}(SharePointQueryableInstance));\r\nexport { ContentType };\r\n/**\r\n * Represents a collection of field link instances\r\n */\r\nvar FieldLinks = /** @class */ (function (_super) {\r\n    tslib_1.__extends(FieldLinks, _super);\r\n    function FieldLinks() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets a FieldLink by GUID id\r\n     *\r\n     * @param id The GUID id of the field link\r\n     */\r\n    FieldLinks.prototype.getById = function (id) {\r\n        var fl = new FieldLink(this);\r\n        fl.concat(\"(guid'\" + id + \"')\");\r\n        return fl;\r\n    };\r\n    FieldLinks = tslib_1.__decorate([\r\n        defaultPath(\"fieldlinks\")\r\n    ], FieldLinks);\r\n    return FieldLinks;\r\n}(SharePointQueryableCollection));\r\nexport { FieldLinks };\r\n/**\r\n * Represents a field link instance\r\n */\r\nvar FieldLink = /** @class */ (function (_super) {\r\n    tslib_1.__extends(FieldLink, _super);\r\n    function FieldLink() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    return FieldLink;\r\n}(SharePointQueryableInstance));\r\nexport { FieldLink };\r\n//# sourceMappingURL=contenttypes.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryableInstance, SharePointQueryableCollection, defaultPath } from \"./sharepointqueryable\";\r\nimport { TextParser, BlobParser, JSONParser, BufferParser } from \"@pnp/odata\";\r\n/**\r\n * Describes a collection of Item objects\r\n *\r\n */\r\nvar AttachmentFiles = /** @class */ (function (_super) {\r\n    tslib_1.__extends(AttachmentFiles, _super);\r\n    function AttachmentFiles() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    AttachmentFiles_1 = AttachmentFiles;\r\n    /**\r\n     * Gets a Attachment File by filename\r\n     *\r\n     * @param name The name of the file, including extension.\r\n     */\r\n    AttachmentFiles.prototype.getByName = function (name) {\r\n        var f = new AttachmentFile(this);\r\n        f.concat(\"('\" + name + \"')\");\r\n        return f;\r\n    };\r\n    /**\r\n     * Adds a new attachment to the collection. Not supported for batching.\r\n     *\r\n     * @param name The name of the file, including extension.\r\n     * @param content The Base64 file content.\r\n     */\r\n    AttachmentFiles.prototype.add = function (name, content) {\r\n        var _this = this;\r\n        return this.clone(AttachmentFiles_1, \"add(FileName='\" + name + \"')\", false).postCore({\r\n            body: content,\r\n        }).then(function (response) {\r\n            return {\r\n                data: response,\r\n                file: _this.getByName(name),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Adds multiple new attachment to the collection. Not supported for batching.\r\n     *\r\n     * @param files The collection of files to add\r\n     */\r\n    AttachmentFiles.prototype.addMultiple = function (files) {\r\n        var _this = this;\r\n        // add the files in series so we don't get update conflicts\r\n        return files.reduce(function (chain, file) { return chain.then(function () { return _this.clone(AttachmentFiles_1, \"add(FileName='\" + file.name + \"')\", false).postCore({\r\n            body: file.content,\r\n        }); }); }, Promise.resolve());\r\n    };\r\n    /**\r\n     * Delete multiple attachments from the collection. Not supported for batching.\r\n     *\r\n     * @param files The collection of files to delete\r\n     */\r\n    AttachmentFiles.prototype.deleteMultiple = function () {\r\n        var _this = this;\r\n        var files = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            files[_i] = arguments[_i];\r\n        }\r\n        return files.reduce(function (chain, file) { return chain.then(function () { return _this.getByName(file).delete(); }); }, Promise.resolve());\r\n    };\r\n    /**\r\n     * Delete multiple attachments from the collection and send to recycle bin. Not supported for batching.\r\n     *\r\n     * @param files The collection of files to be deleted and sent to recycle bin\r\n     */\r\n    AttachmentFiles.prototype.recycleMultiple = function () {\r\n        var _this = this;\r\n        var files = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            files[_i] = arguments[_i];\r\n        }\r\n        return files.reduce(function (chain, file) { return chain.then(function () { return _this.getByName(file).recycle(); }); }, Promise.resolve());\r\n    };\r\n    var AttachmentFiles_1;\r\n    AttachmentFiles = AttachmentFiles_1 = tslib_1.__decorate([\r\n        defaultPath(\"AttachmentFiles\")\r\n    ], AttachmentFiles);\r\n    return AttachmentFiles;\r\n}(SharePointQueryableCollection));\r\nexport { AttachmentFiles };\r\n/**\r\n * Describes a single attachment file instance\r\n *\r\n */\r\nvar AttachmentFile = /** @class */ (function (_super) {\r\n    tslib_1.__extends(AttachmentFile, _super);\r\n    function AttachmentFile() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.delete = _this._deleteWithETag;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Gets the contents of the file as text\r\n     *\r\n     */\r\n    AttachmentFile.prototype.getText = function () {\r\n        return this.getParsed(new TextParser());\r\n    };\r\n    /**\r\n     * Gets the contents of the file as a blob, does not work in Node.js\r\n     *\r\n     */\r\n    AttachmentFile.prototype.getBlob = function () {\r\n        return this.getParsed(new BlobParser());\r\n    };\r\n    /**\r\n     * Gets the contents of a file as an ArrayBuffer, works in Node.js\r\n     */\r\n    AttachmentFile.prototype.getBuffer = function () {\r\n        return this.getParsed(new BufferParser());\r\n    };\r\n    /**\r\n     * Gets the contents of a file as an ArrayBuffer, works in Node.js\r\n     */\r\n    AttachmentFile.prototype.getJSON = function () {\r\n        return this.getParsed(new JSONParser());\r\n    };\r\n    /**\r\n     * Sets the content of a file. Not supported for batching\r\n     *\r\n     * @param content The value to set for the file contents\r\n     */\r\n    AttachmentFile.prototype.setContent = function (content) {\r\n        var _this = this;\r\n        return this.clone(AttachmentFile, \"$value\", false).postCore({\r\n            body: content,\r\n            headers: {\r\n                \"X-HTTP-Method\": \"PUT\",\r\n            },\r\n        }).then(function (_) { return new AttachmentFile(_this); });\r\n    };\r\n    /**\r\n     * Delete this attachment file and send it to recycle bin\r\n     *\r\n     * @param eTag Value used in the IF-Match header, by default \"*\"\r\n     */\r\n    AttachmentFile.prototype.recycle = function (eTag) {\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        return this.clone(AttachmentFile, \"recycleObject\").postCore({\r\n            headers: {\r\n                \"IF-Match\": eTag,\r\n                \"X-HTTP-Method\": \"DELETE\",\r\n            },\r\n        });\r\n    };\r\n    // /**\r\n    //  * Delete this attachment file\r\n    //  *\r\n    //  * @param eTag Value used in the IF-Match header, by default \"*\"\r\n    //  */\r\n    // public delete(eTag = \"*\"): Promise<void> {\r\n    //     return this.postCore({\r\n    //         headers: {\r\n    //             \"IF-Match\": eTag,\r\n    //             \"X-HTTP-Method\": \"DELETE\",\r\n    //         },\r\n    //     });\r\n    // }\r\n    AttachmentFile.prototype.getParsed = function (parser) {\r\n        return this.clone(AttachmentFile, \"$value\", false).get(parser);\r\n    };\r\n    return AttachmentFile;\r\n}(SharePointQueryableInstance));\r\nexport { AttachmentFile };\r\n//# sourceMappingURL=attachmentfiles.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryable, SharePointQueryableCollection, SharePointQueryableInstance, defaultPath } from \"./sharepointqueryable\";\r\nimport { jsS } from \"@pnp/common\";\r\nimport { metadata } from \"./utils/metadata\";\r\n/**\r\n * Describes the views available in the current context\r\n *\r\n */\r\nvar Views = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Views, _super);\r\n    function Views() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Views_1 = Views;\r\n    /**\r\n     * Gets a view by guid id\r\n     *\r\n     * @param id The GUID id of the view\r\n     */\r\n    Views.prototype.getById = function (id) {\r\n        var v = new View(this);\r\n        v.concat(\"('\" + id + \"')\");\r\n        return v;\r\n    };\r\n    /**\r\n     * Gets a view by title (case-sensitive)\r\n     *\r\n     * @param title The case-sensitive title of the view\r\n     */\r\n    Views.prototype.getByTitle = function (title) {\r\n        return new View(this, \"getByTitle('\" + title + \"')\");\r\n    };\r\n    /**\r\n     * Adds a new view to the collection\r\n     *\r\n     * @param title The new views's title\r\n     * @param personalView True if this is a personal view, otherwise false, default = false\r\n     * @param additionalSettings Will be passed as part of the view creation body\r\n     */\r\n    Views.prototype.add = function (title, personalView, additionalSettings) {\r\n        var _this = this;\r\n        if (personalView === void 0) { personalView = false; }\r\n        if (additionalSettings === void 0) { additionalSettings = {}; }\r\n        var postBody = jsS(Object.assign(metadata(\"SP.View\"), {\r\n            \"PersonalView\": personalView,\r\n            \"Title\": title,\r\n        }, additionalSettings));\r\n        return this.clone(Views_1, null).postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                view: _this.getById(data.Id),\r\n            };\r\n        });\r\n    };\r\n    var Views_1;\r\n    Views = Views_1 = tslib_1.__decorate([\r\n        defaultPath(\"views\")\r\n    ], Views);\r\n    return Views;\r\n}(SharePointQueryableCollection));\r\nexport { Views };\r\n/**\r\n * Describes a single View instance\r\n *\r\n */\r\nvar View = /** @class */ (function (_super) {\r\n    tslib_1.__extends(View, _super);\r\n    function View() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * Updates this view intance with the supplied properties\r\n         *\r\n         * @param properties A plain object hash of values to update for the view\r\n         */\r\n        _this.update = _this._update(\"SP.View\", function (data) { return ({ data: data, view: _this }); });\r\n        /**\r\n         * Delete this view\r\n         *\r\n         */\r\n        _this.delete = _this._delete;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(View.prototype, \"fields\", {\r\n        get: function () {\r\n            return new ViewFields(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Returns the list view as HTML.\r\n     *\r\n     */\r\n    View.prototype.renderAsHtml = function () {\r\n        return this.clone(SharePointQueryable, \"renderashtml\").get();\r\n    };\r\n    /**\r\n     * Sets the view schema\r\n     *\r\n     * @param viewXml The view XML to set\r\n     */\r\n    View.prototype.setViewXml = function (viewXml) {\r\n        return this.clone(View, \"SetViewXml\").postCore({\r\n            body: jsS({\r\n                viewXml: viewXml,\r\n            }),\r\n        });\r\n    };\r\n    return View;\r\n}(SharePointQueryableInstance));\r\nexport { View };\r\nvar ViewFields = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ViewFields, _super);\r\n    function ViewFields() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    ViewFields_1 = ViewFields;\r\n    /**\r\n     * Gets a value that specifies the XML schema that represents the collection.\r\n     */\r\n    ViewFields.prototype.getSchemaXml = function () {\r\n        return this.clone(SharePointQueryable, \"schemaxml\").get();\r\n    };\r\n    /**\r\n     * Adds the field with the specified field internal name or display name to the collection.\r\n     *\r\n     * @param fieldTitleOrInternalName The case-sensitive internal name or display name of the field to add.\r\n     */\r\n    ViewFields.prototype.add = function (fieldTitleOrInternalName) {\r\n        return this.clone(ViewFields_1, \"addviewfield('\" + fieldTitleOrInternalName + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Moves the field with the specified field internal name to the specified position in the collection.\r\n     *\r\n     * @param fieldInternalName The case-sensitive internal name of the field to move.\r\n     * @param index The zero-based index of the new position for the field.\r\n     */\r\n    ViewFields.prototype.move = function (fieldInternalName, index) {\r\n        return this.clone(ViewFields_1, \"moveviewfieldto\").postCore({\r\n            body: jsS({ \"field\": fieldInternalName, \"index\": index }),\r\n        });\r\n    };\r\n    /**\r\n     * Removes all the fields from the collection.\r\n     */\r\n    ViewFields.prototype.removeAll = function () {\r\n        return this.clone(ViewFields_1, \"removeallviewfields\").postCore();\r\n    };\r\n    /**\r\n     * Removes the field with the specified field internal name from the collection.\r\n     *\r\n     * @param fieldInternalName The case-sensitive internal name of the field to remove from the view.\r\n     */\r\n    ViewFields.prototype.remove = function (fieldInternalName) {\r\n        return this.clone(ViewFields_1, \"removeviewfield('\" + fieldInternalName + \"')\").postCore();\r\n    };\r\n    var ViewFields_1;\r\n    ViewFields = ViewFields_1 = tslib_1.__decorate([\r\n        defaultPath(\"viewfields\")\r\n    ], ViewFields);\r\n    return ViewFields;\r\n}(SharePointQueryableCollection));\r\nexport { ViewFields };\r\n//# sourceMappingURL=views.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryableCollection, SharePointQueryableInstance, defaultPath } from \"./sharepointqueryable\";\r\nimport { extend, jsS } from \"@pnp/common\";\r\nimport { DateTimeFieldFormatType, DateTimeFieldFriendlyFormatType, FieldTypes, CalendarType, UrlFieldFormatType, ChoiceFieldFormatType, } from \"./types\";\r\nimport { metadata } from \"./utils/metadata\";\r\n/**\r\n * Describes a collection of Field objects\r\n *\r\n */\r\nvar Fields = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Fields, _super);\r\n    function Fields() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Fields_1 = Fields;\r\n    /**\r\n     * Gets a field from the collection by id\r\n     *\r\n     * @param id The Id of the list\r\n     */\r\n    Fields.prototype.getById = function (id) {\r\n        var f = new Field(this);\r\n        f.concat(\"('\" + id + \"')\");\r\n        return f;\r\n    };\r\n    /**\r\n     * Gets a field from the collection by title\r\n     *\r\n     * @param title The case-sensitive title of the field\r\n     */\r\n    Fields.prototype.getByTitle = function (title) {\r\n        return new Field(this, \"getByTitle('\" + title + \"')\");\r\n    };\r\n    /**\r\n     * Gets a field from the collection by using internal name or title\r\n     *\r\n     * @param name The case-sensitive internal name or title of the field\r\n     */\r\n    Fields.prototype.getByInternalNameOrTitle = function (name) {\r\n        return new Field(this, \"getByInternalNameOrTitle('\" + name + \"')\");\r\n    };\r\n    /**\r\n     * Creates a field based on the specified schema\r\n     */\r\n    Fields.prototype.createFieldAsXml = function (xml) {\r\n        var _this = this;\r\n        var info;\r\n        if (typeof xml === \"string\") {\r\n            info = { SchemaXml: xml };\r\n        }\r\n        else {\r\n            info = xml;\r\n        }\r\n        var postBody = jsS({\r\n            \"parameters\": extend(metadata(\"SP.XmlSchemaFieldCreationInformation\"), info),\r\n        });\r\n        return this.clone(Fields_1, \"createfieldasxml\").postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                field: _this.getById(data.Id),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Adds a new field to the collection\r\n     *\r\n     * @param title The new field's title\r\n     * @param fieldType The new field's type (ex: SP.FieldText)\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.add = function (title, fieldType, properties) {\r\n        var _this = this;\r\n        var postBody = jsS(Object.assign(metadata(fieldType), {\r\n            \"Title\": title,\r\n        }, properties));\r\n        return this.clone(Fields_1, null).postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                field: _this.getById(data.Id),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldText to the collection\r\n     *\r\n     * @param title The field title\r\n     * @param maxLength The maximum number of characters allowed in the value of the field.\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addText = function (title, maxLength, properties) {\r\n        if (maxLength === void 0) { maxLength = 255; }\r\n        var props = {\r\n            FieldTypeKind: 2,\r\n            MaxLength: maxLength,\r\n        };\r\n        return this.add(title, \"SP.FieldText\", extend(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldCalculated to the collection\r\n     *\r\n     * @param title The field title.\r\n     * @param formula The formula for the field.\r\n     * @param dateFormat The date and time format that is displayed in the field.\r\n     * @param outputType Specifies the output format for the field. Represents a FieldType value.\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addCalculated = function (title, formula, dateFormat, outputType, properties) {\r\n        if (outputType === void 0) { outputType = FieldTypes.Text; }\r\n        var props = {\r\n            DateFormat: dateFormat,\r\n            FieldTypeKind: 17,\r\n            Formula: formula,\r\n            OutputType: outputType,\r\n        };\r\n        return this.add(title, \"SP.FieldCalculated\", extend(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldDateTime to the collection\r\n     *\r\n     * @param title The field title\r\n     * @param displayFormat The format of the date and time that is displayed in the field.\r\n     * @param calendarType Specifies the calendar type of the field.\r\n     * @param friendlyDisplayFormat The type of friendly display format that is used in the field.\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addDateTime = function (title, displayFormat, calendarType, friendlyDisplayFormat, properties) {\r\n        if (displayFormat === void 0) { displayFormat = DateTimeFieldFormatType.DateOnly; }\r\n        if (calendarType === void 0) { calendarType = CalendarType.Gregorian; }\r\n        if (friendlyDisplayFormat === void 0) { friendlyDisplayFormat = DateTimeFieldFriendlyFormatType.Unspecified; }\r\n        var props = {\r\n            DateTimeCalendarType: calendarType,\r\n            DisplayFormat: displayFormat,\r\n            FieldTypeKind: 4,\r\n            FriendlyDisplayFormat: friendlyDisplayFormat,\r\n        };\r\n        return this.add(title, \"SP.FieldDateTime\", extend(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldNumber to the collection\r\n     *\r\n     * @param title The field title\r\n     * @param minValue The field's minimum value\r\n     * @param maxValue The field's maximum value\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addNumber = function (title, minValue, maxValue, properties) {\r\n        var props = { FieldTypeKind: 9 };\r\n        if (minValue !== undefined) {\r\n            props = extend({ MinimumValue: minValue }, props);\r\n        }\r\n        if (maxValue !== undefined) {\r\n            props = extend({ MaximumValue: maxValue }, props);\r\n        }\r\n        return this.add(title, \"SP.FieldNumber\", extend(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldCurrency to the collection\r\n     *\r\n     * @param title The field title\r\n     * @param minValue The field's minimum value\r\n     * @param maxValue The field's maximum value\r\n     * @param currencyLocalId Specifies the language code identifier (LCID) used to format the value of the field\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addCurrency = function (title, minValue, maxValue, currencyLocalId, properties) {\r\n        if (currencyLocalId === void 0) { currencyLocalId = 1033; }\r\n        var props = {\r\n            CurrencyLocaleId: currencyLocalId,\r\n            FieldTypeKind: 10,\r\n        };\r\n        if (minValue !== undefined) {\r\n            props = extend({ MinimumValue: minValue }, props);\r\n        }\r\n        if (maxValue !== undefined) {\r\n            props = extend({ MaximumValue: maxValue }, props);\r\n        }\r\n        return this.add(title, \"SP.FieldCurrency\", extend(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldMultiLineText to the collection\r\n     *\r\n     * @param title The field title\r\n     * @param numberOfLines Specifies the number of lines of text to display for the field.\r\n     * @param richText Specifies whether the field supports rich formatting.\r\n     * @param restrictedMode Specifies whether the field supports a subset of rich formatting.\r\n     * @param appendOnly Specifies whether all changes to the value of the field are displayed in list forms.\r\n     * @param allowHyperlink Specifies whether a hyperlink is allowed as a value of the field.\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     *\r\n     */\r\n    Fields.prototype.addMultilineText = function (title, numberOfLines, richText, restrictedMode, appendOnly, allowHyperlink, properties) {\r\n        if (numberOfLines === void 0) { numberOfLines = 6; }\r\n        if (richText === void 0) { richText = true; }\r\n        if (restrictedMode === void 0) { restrictedMode = false; }\r\n        if (appendOnly === void 0) { appendOnly = false; }\r\n        if (allowHyperlink === void 0) { allowHyperlink = true; }\r\n        var props = {\r\n            AllowHyperlink: allowHyperlink,\r\n            AppendOnly: appendOnly,\r\n            FieldTypeKind: 3,\r\n            NumberOfLines: numberOfLines,\r\n            RestrictedMode: restrictedMode,\r\n            RichText: richText,\r\n        };\r\n        return this.add(title, \"SP.FieldMultiLineText\", extend(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldUrl to the collection\r\n     *\r\n     * @param title The field title\r\n     */\r\n    Fields.prototype.addUrl = function (title, displayFormat, properties) {\r\n        if (displayFormat === void 0) { displayFormat = UrlFieldFormatType.Hyperlink; }\r\n        var props = {\r\n            DisplayFormat: displayFormat,\r\n            FieldTypeKind: 11,\r\n        };\r\n        return this.add(title, \"SP.FieldUrl\", extend(props, properties));\r\n    };\r\n    /** Adds a user field to the colleciton\r\n    *\r\n    * @param title The new field's title\r\n    * @param selectionMode The selection mode of the field\r\n    * @param selectionGroup Value that specifies the identifier of the SharePoint group whose members can be selected as values of the field\r\n    * @param properties\r\n    */\r\n    Fields.prototype.addUser = function (title, selectionMode, properties) {\r\n        var props = {\r\n            FieldTypeKind: 20,\r\n            SelectionMode: selectionMode,\r\n        };\r\n        return this.add(title, \"SP.FieldUser\", extend(props, properties));\r\n    };\r\n    /**\r\n     * Adds a SP.FieldLookup to the collection\r\n     *\r\n     * @param title The new field's title\r\n     * @param lookupListId The guid id of the list where the source of the lookup is found\r\n     * @param lookupFieldName The internal name of the field in the source list\r\n     * @param properties Set of additional properties to set on the new field\r\n     */\r\n    Fields.prototype.addLookup = function (title, lookupListId, lookupFieldName, properties) {\r\n        var _this = this;\r\n        var props = extend({\r\n            FieldTypeKind: 7,\r\n            LookupFieldName: lookupFieldName,\r\n            LookupListId: lookupListId,\r\n            Title: title,\r\n        }, properties);\r\n        var postBody = jsS({\r\n            \"parameters\": extend(metadata(\"SP.FieldCreationInformation\"), props),\r\n        });\r\n        return this.clone(Fields_1, \"addfield\").postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                field: _this.getById(data.Id),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldChoice to the collection\r\n     *\r\n     * @param title The field title.\r\n     * @param choices The choices for the field.\r\n     * @param format The display format of the available options for the field.\r\n     * @param fillIn Specifies whether the field allows fill-in values.\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addChoice = function (title, choices, format, fillIn, properties) {\r\n        if (format === void 0) { format = ChoiceFieldFormatType.Dropdown; }\r\n        var props = {\r\n            Choices: {\r\n                results: choices,\r\n            },\r\n            EditFormat: format,\r\n            FieldTypeKind: 6,\r\n            FillInChoice: fillIn,\r\n        };\r\n        return this.add(title, \"SP.FieldChoice\", extend(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldMultiChoice to the collection\r\n     *\r\n     * @param title The field title.\r\n     * @param choices The choices for the field.\r\n     * @param fillIn Specifies whether the field allows fill-in values.\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addMultiChoice = function (title, choices, fillIn, properties) {\r\n        var props = {\r\n            Choices: {\r\n                results: choices,\r\n            },\r\n            FieldTypeKind: 15,\r\n            FillInChoice: fillIn,\r\n        };\r\n        return this.add(title, \"SP.FieldMultiChoice\", extend(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldBoolean to the collection\r\n     *\r\n     * @param title The field title.\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addBoolean = function (title, properties) {\r\n        var props = {\r\n            FieldTypeKind: 8,\r\n        };\r\n        return this.add(title, \"SP.Field\", extend(props, properties));\r\n    };\r\n    /**\r\n    * Creates a secondary (dependent) lookup field, based on the Id of the primary lookup field.\r\n    *\r\n    * @param displayName The display name of the new field.\r\n    * @param primaryLookupFieldId The guid of the primary Lookup Field.\r\n    * @param showField Which field to show from the lookup list.\r\n    */\r\n    Fields.prototype.addDependentLookupField = function (displayName, primaryLookupFieldId, showField) {\r\n        var _this = this;\r\n        return this.clone(Fields_1, \"adddependentlookupfield(displayName='\" + displayName + \"', primarylookupfieldid='\" + primaryLookupFieldId + \"', showfield='\" + showField + \"')\")\r\n            .postCore()\r\n            .then(function (data) {\r\n            return {\r\n                data: data,\r\n                field: _this.getById(data.Id),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldLocation to the collection\r\n     *\r\n     * @param title The field title.\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addLocation = function (title, properties) {\r\n        var props = { FieldTypeKind: 33 };\r\n        return this.add(title, \"SP.FieldLocation\", extend(props, properties));\r\n    };\r\n    var Fields_1;\r\n    Fields = Fields_1 = tslib_1.__decorate([\r\n        defaultPath(\"fields\")\r\n    ], Fields);\r\n    return Fields;\r\n}(SharePointQueryableCollection));\r\nexport { Fields };\r\n/**\r\n * Describes a single of Field instance\r\n *\r\n */\r\nvar Field = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Field, _super);\r\n    function Field() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * Delete this fields\r\n         *\r\n         */\r\n        _this.delete = _this._delete;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Updates this field intance with the supplied properties\r\n     *\r\n     * @param properties A plain object hash of values to update for the list\r\n     * @param fieldType The type value, required to update child field type properties\r\n     */\r\n    Field.prototype.update = function (properties, fieldType) {\r\n        var _this = this;\r\n        if (fieldType === void 0) { fieldType = \"SP.Field\"; }\r\n        var postBody = jsS(extend(metadata(fieldType), properties));\r\n        return this.postCore({\r\n            body: postBody,\r\n            headers: {\r\n                \"X-HTTP-Method\": \"MERGE\",\r\n            },\r\n        }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                field: _this,\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Sets the value of the ShowInDisplayForm property for this field.\r\n     */\r\n    Field.prototype.setShowInDisplayForm = function (show) {\r\n        return this.clone(Field, \"setshowindisplayform(\" + show + \")\").postCore();\r\n    };\r\n    /**\r\n     * Sets the value of the ShowInEditForm property for this field.\r\n     */\r\n    Field.prototype.setShowInEditForm = function (show) {\r\n        return this.clone(Field, \"setshowineditform(\" + show + \")\").postCore();\r\n    };\r\n    /**\r\n     * Sets the value of the ShowInNewForm property for this field.\r\n     */\r\n    Field.prototype.setShowInNewForm = function (show) {\r\n        return this.clone(Field, \"setshowinnewform(\" + show + \")\").postCore();\r\n    };\r\n    return Field;\r\n}(SharePointQueryableInstance));\r\nexport { Field };\r\n//# sourceMappingURL=fields.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryableCollection, SharePointQueryableInstance, defaultPath } from \"./sharepointqueryable\";\r\n/**\r\n * Describes a collection of Field objects\r\n *\r\n */\r\nvar Forms = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Forms, _super);\r\n    function Forms() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets a form by id\r\n     *\r\n     * @param id The guid id of the item to retrieve\r\n     */\r\n    Forms.prototype.getById = function (id) {\r\n        var i = new Form(this);\r\n        i.concat(\"('\" + id + \"')\");\r\n        return i;\r\n    };\r\n    Forms = tslib_1.__decorate([\r\n        defaultPath(\"forms\")\r\n    ], Forms);\r\n    return Forms;\r\n}(SharePointQueryableCollection));\r\nexport { Forms };\r\n/**\r\n * Describes a single of Form instance\r\n *\r\n */\r\nvar Form = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Form, _super);\r\n    function Form() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    return Form;\r\n}(SharePointQueryableInstance));\r\nexport { Form };\r\n//# sourceMappingURL=forms.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryableCollection, SharePointQueryableInstance, defaultPath } from \"./sharepointqueryable\";\r\nimport { jsS } from \"@pnp/common\";\r\n/**\r\n * Describes a collection of webhook subscriptions\r\n *\r\n */\r\nvar Subscriptions = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Subscriptions, _super);\r\n    function Subscriptions() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Returns all the webhook subscriptions or the specified webhook subscription\r\n     *\r\n     * @param subscriptionId The id of a specific webhook subscription to retrieve, omit to retrieve all the webhook subscriptions\r\n     */\r\n    Subscriptions.prototype.getById = function (subscriptionId) {\r\n        var s = new Subscription(this);\r\n        s.concat(\"('\" + subscriptionId + \"')\");\r\n        return s;\r\n    };\r\n    /**\r\n     * Creates a new webhook subscription\r\n     *\r\n     * @param notificationUrl The url to receive the notifications\r\n     * @param expirationDate The date and time to expire the subscription in the form YYYY-MM-ddTHH:mm:ss+00:00 (maximum of 6 months)\r\n     * @param clientState A client specific string (optional)\r\n     */\r\n    Subscriptions.prototype.add = function (notificationUrl, expirationDate, clientState) {\r\n        var _this = this;\r\n        var postBody = {\r\n            \"expirationDateTime\": expirationDate,\r\n            \"notificationUrl\": notificationUrl,\r\n            \"resource\": this.toUrl(),\r\n        };\r\n        if (clientState) {\r\n            postBody.clientState = clientState;\r\n        }\r\n        return this.postCore({ body: jsS(postBody), headers: { \"Content-Type\": \"application/json\" } }).then(function (result) {\r\n            return { data: result, subscription: _this.getById(result.id) };\r\n        });\r\n    };\r\n    Subscriptions = tslib_1.__decorate([\r\n        defaultPath(\"subscriptions\")\r\n    ], Subscriptions);\r\n    return Subscriptions;\r\n}(SharePointQueryableCollection));\r\nexport { Subscriptions };\r\n/**\r\n * Describes a single webhook subscription instance\r\n *\r\n */\r\nvar Subscription = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Subscription, _super);\r\n    function Subscription() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Renews this webhook subscription\r\n     *\r\n     * @param expirationDate The date and time to expire the subscription in the form YYYY-MM-ddTHH:mm:ss+00:00 (maximum of 6 months, optional)\r\n     * @param notificationUrl The url to receive the notifications (optional)\r\n     * @param clientState A client specific string (optional)\r\n     */\r\n    Subscription.prototype.update = function (expirationDate, notificationUrl, clientState) {\r\n        var _this = this;\r\n        var postBody = {};\r\n        if (expirationDate) {\r\n            postBody.expirationDateTime = expirationDate;\r\n        }\r\n        if (notificationUrl) {\r\n            postBody.notificationUrl = notificationUrl;\r\n        }\r\n        if (clientState) {\r\n            postBody.clientState = clientState;\r\n        }\r\n        return this.patchCore({ body: jsS(postBody), headers: { \"Content-Type\": \"application/json\" } }).then(function (data) {\r\n            return { data: data, subscription: _this };\r\n        });\r\n    };\r\n    /**\r\n     * Removes this webhook subscription\r\n     *\r\n     */\r\n    Subscription.prototype.delete = function () {\r\n        return _super.prototype.deleteCore.call(this);\r\n    };\r\n    return Subscription;\r\n}(SharePointQueryableInstance));\r\nexport { Subscription };\r\n//# sourceMappingURL=subscriptions.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryableInstance, SharePointQueryableCollection, defaultPath } from \"./sharepointqueryable\";\r\nimport { extend, jsS } from \"@pnp/common\";\r\n/**\r\n * Describes a collection of user custom actions\r\n *\r\n */\r\nvar UserCustomActions = /** @class */ (function (_super) {\r\n    tslib_1.__extends(UserCustomActions, _super);\r\n    function UserCustomActions() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    UserCustomActions_1 = UserCustomActions;\r\n    /**\r\n     * Returns the user custom action with the specified id\r\n     *\r\n     * @param id The GUID id of the user custom action to retrieve\r\n     */\r\n    UserCustomActions.prototype.getById = function (id) {\r\n        var uca = new UserCustomAction(this);\r\n        uca.concat(\"('\" + id + \"')\");\r\n        return uca;\r\n    };\r\n    /**\r\n     * Creates a user custom action\r\n     *\r\n     * @param properties The information object of property names and values which define the new user custom action\r\n     *\r\n     */\r\n    UserCustomActions.prototype.add = function (properties) {\r\n        var _this = this;\r\n        var postBody = jsS(extend({ __metadata: { \"type\": \"SP.UserCustomAction\" } }, properties));\r\n        return this.postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                action: _this.getById(data.Id),\r\n                data: data,\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Deletes all user custom actions in the collection\r\n     *\r\n     */\r\n    UserCustomActions.prototype.clear = function () {\r\n        return this.clone(UserCustomActions_1, \"clear\").postCore();\r\n    };\r\n    var UserCustomActions_1;\r\n    UserCustomActions = UserCustomActions_1 = tslib_1.__decorate([\r\n        defaultPath(\"usercustomactions\")\r\n    ], UserCustomActions);\r\n    return UserCustomActions;\r\n}(SharePointQueryableCollection));\r\nexport { UserCustomActions };\r\n/**\r\n * Describes a single user custom action\r\n *\r\n */\r\nvar UserCustomAction = /** @class */ (function (_super) {\r\n    tslib_1.__extends(UserCustomAction, _super);\r\n    function UserCustomAction() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n        * Updates this user custom action with the supplied properties\r\n        *\r\n        * @param properties An information object of property names and values to update for this user custom action\r\n        */\r\n        _this.update = _this._update(\"SP.UserCustomAction\", function (data) { return ({ data: data, action: _this }); });\r\n        return _this;\r\n    }\r\n    /**\r\n    * Removes this user custom action\r\n    *\r\n    */\r\n    UserCustomAction.prototype.delete = function () {\r\n        return _super.prototype.deleteCore.call(this);\r\n    };\r\n    return UserCustomAction;\r\n}(SharePointQueryableInstance));\r\nexport { UserCustomAction };\r\n//# sourceMappingURL=usercustomactions.js.map","import * as tslib_1 from \"tslib\";\r\nimport { Items } from \"./items\";\r\nimport { Views, View } from \"./views\";\r\nimport { ContentTypes } from \"./contenttypes\";\r\nimport { Fields } from \"./fields\";\r\nimport { Forms } from \"./forms\";\r\nimport { Subscriptions } from \"./subscriptions\";\r\nimport { SharePointQueryable, SharePointQueryableCollection, defaultPath } from \"./sharepointqueryable\";\r\nimport { SharePointQueryableSecurable } from \"./sharepointqueryablesecurable\";\r\nimport { extend, hOP, jsS } from \"@pnp/common\";\r\nimport { UserCustomActions } from \"./usercustomactions\";\r\nimport { odataUrlFrom } from \"./odata\";\r\nimport { Folder } from \"./folders\";\r\nimport { metadata } from \"./utils/metadata\";\r\nimport { SiteScripts } from \"..\";\r\nimport { toAbsoluteUrl } from \"./utils/toabsoluteurl\";\r\n/**\r\n * Describes a collection of List objects\r\n *\r\n */\r\nvar Lists = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Lists, _super);\r\n    function Lists() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Lists_1 = Lists;\r\n    /**\r\n     * Gets a list from the collection by guid id\r\n     *\r\n     * @param id The Id of the list (GUID)\r\n     */\r\n    Lists.prototype.getById = function (id) {\r\n        var list = new List(this);\r\n        list.concat(\"('\" + id + \"')\");\r\n        return list;\r\n    };\r\n    /**\r\n     * Gets a list from the collection by title\r\n     *\r\n     * @param title The title of the list\r\n     */\r\n    Lists.prototype.getByTitle = function (title) {\r\n        return new List(this, \"getByTitle('\" + title + \"')\");\r\n    };\r\n    /**\r\n     * Adds a new list to the collection\r\n     *\r\n     * @param title The new list's title\r\n     * @param description The new list's description\r\n     * @param template The list template value\r\n     * @param enableContentTypes If true content types will be allowed and enabled, otherwise they will be disallowed and not enabled\r\n     * @param additionalSettings Will be passed as part of the list creation body\r\n     */\r\n    Lists.prototype.add = function (title, description, template, enableContentTypes, additionalSettings) {\r\n        var _this = this;\r\n        if (description === void 0) { description = \"\"; }\r\n        if (template === void 0) { template = 100; }\r\n        if (enableContentTypes === void 0) { enableContentTypes = false; }\r\n        if (additionalSettings === void 0) { additionalSettings = {}; }\r\n        var addSettings = extend({\r\n            \"AllowContentTypes\": enableContentTypes,\r\n            \"BaseTemplate\": template,\r\n            \"ContentTypesEnabled\": enableContentTypes,\r\n            \"Description\": description,\r\n            \"Title\": title,\r\n            \"__metadata\": { \"type\": \"SP.List\" },\r\n        }, additionalSettings);\r\n        return this.postCore({ body: jsS(addSettings) }).then(function (data) {\r\n            return { data: data, list: _this.getByTitle(addSettings.Title) };\r\n        });\r\n    };\r\n    /**\r\n     * Ensures that the specified list exists in the collection (note: this method not supported for batching)\r\n     *\r\n     * @param title The new list's title\r\n     * @param description The new list's description\r\n     * @param template The list template value\r\n     * @param enableContentTypes If true content types will be allowed and enabled, otherwise they will be disallowed and not enabled\r\n     * @param additionalSettings Will be passed as part of the list creation body or used to update an existing list\r\n     */\r\n    Lists.prototype.ensure = function (title, description, template, enableContentTypes, additionalSettings) {\r\n        var _this = this;\r\n        if (description === void 0) { description = \"\"; }\r\n        if (template === void 0) { template = 100; }\r\n        if (enableContentTypes === void 0) { enableContentTypes = false; }\r\n        if (additionalSettings === void 0) { additionalSettings = {}; }\r\n        if (this.hasBatch) {\r\n            throw Error(\"The ensure list method is not supported for use in a batch.\");\r\n        }\r\n        return new Promise(function (resolve, reject) {\r\n            var addOrUpdateSettings = extend(additionalSettings, { Title: title, Description: description, ContentTypesEnabled: enableContentTypes }, true);\r\n            var list = _this.getByTitle(addOrUpdateSettings.Title);\r\n            list.get().then(function (_) {\r\n                list.update(addOrUpdateSettings).then(function (d) {\r\n                    resolve({ created: false, data: d, list: _this.getByTitle(addOrUpdateSettings.Title) });\r\n                }).catch(function (e) { return reject(e); });\r\n            }).catch(function (_) {\r\n                _this.add(title, description, template, enableContentTypes, addOrUpdateSettings).then(function (r) {\r\n                    resolve({ created: true, data: r.data, list: _this.getByTitle(addOrUpdateSettings.Title) });\r\n                }).catch(function (e) { return reject(e); });\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Gets a list that is the default asset location for images or other files, which the users upload to their wiki pages.\r\n     */\r\n    Lists.prototype.ensureSiteAssetsLibrary = function () {\r\n        return this.clone(Lists_1, \"ensuresiteassetslibrary\").postCore().then(function (json) {\r\n            return new List(odataUrlFrom(json));\r\n        });\r\n    };\r\n    /**\r\n     * Gets a list that is the default location for wiki pages.\r\n     */\r\n    Lists.prototype.ensureSitePagesLibrary = function () {\r\n        return this.clone(Lists_1, \"ensuresitepageslibrary\").postCore().then(function (json) {\r\n            return new List(odataUrlFrom(json));\r\n        });\r\n    };\r\n    var Lists_1;\r\n    Lists = Lists_1 = tslib_1.__decorate([\r\n        defaultPath(\"lists\")\r\n    ], Lists);\r\n    return Lists;\r\n}(SharePointQueryableCollection));\r\nexport { Lists };\r\n/**\r\n * Describes a single List instance\r\n *\r\n */\r\nvar List = /** @class */ (function (_super) {\r\n    tslib_1.__extends(List, _super);\r\n    function List() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(List.prototype, \"contentTypes\", {\r\n        /**\r\n         * Gets the content types in this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new ContentTypes(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"items\", {\r\n        /**\r\n         * Gets the items in this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Items(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"views\", {\r\n        /**\r\n         * Gets the views in this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Views(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"fields\", {\r\n        /**\r\n         * Gets the fields in this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Fields(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"forms\", {\r\n        /**\r\n         * Gets the forms in this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Forms(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"defaultView\", {\r\n        /**\r\n         * Gets the default view of this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new View(this, \"DefaultView\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"userCustomActions\", {\r\n        /**\r\n         * Get all custom actions on a site collection\r\n         *\r\n         */\r\n        get: function () {\r\n            return new UserCustomActions(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"effectiveBasePermissions\", {\r\n        /**\r\n         * Gets the effective base permissions of this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryable(this, \"EffectiveBasePermissions\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"eventReceivers\", {\r\n        /**\r\n         * Gets the event receivers attached to this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableCollection(this, \"EventReceivers\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"relatedFields\", {\r\n        /**\r\n         * Gets the related fields of this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryable(this, \"getRelatedFields\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"informationRightsManagementSettings\", {\r\n        /**\r\n         * Gets the IRM settings for this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryable(this, \"InformationRightsManagementSettings\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"subscriptions\", {\r\n        /**\r\n         * Gets the webhook subscriptions of this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Subscriptions(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"rootFolder\", {\r\n        /**\r\n         * The root folder of the list\r\n         */\r\n        get: function () {\r\n            return new Folder(this, \"rootFolder\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets a view by view guid id\r\n     *\r\n     */\r\n    List.prototype.getView = function (viewId) {\r\n        return new View(this, \"getView('\" + viewId + \"')\");\r\n    };\r\n    /**\r\n     * Updates this list intance with the supplied properties\r\n     *\r\n     * @param properties A plain object hash of values to update for the list\r\n     * @param eTag Value used in the IF-Match header, by default \"*\"\r\n     */\r\n    /* tslint:disable no-string-literal */\r\n    List.prototype.update = function (properties, eTag) {\r\n        var _this = this;\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        var postBody = jsS(extend({\r\n            \"__metadata\": { \"type\": \"SP.List\" },\r\n        }, properties));\r\n        return this.postCore({\r\n            body: postBody,\r\n            headers: {\r\n                \"IF-Match\": eTag,\r\n                \"X-HTTP-Method\": \"MERGE\",\r\n            },\r\n        }).then(function (data) {\r\n            var retList = _this;\r\n            if (hOP(properties, \"Title\")) {\r\n                retList = _this.getParent(List, _this.parentUrl, \"getByTitle('\" + properties[\"Title\"] + \"')\");\r\n            }\r\n            return {\r\n                data: data,\r\n                list: retList,\r\n            };\r\n        });\r\n    };\r\n    /* tslint:enable */\r\n    /**\r\n     * Delete this list\r\n     *\r\n     * @param eTag Value used in the IF-Match header, by default \"*\"\r\n     */\r\n    List.prototype.delete = function (eTag) {\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        return this.postCore({\r\n            headers: {\r\n                \"IF-Match\": eTag,\r\n                \"X-HTTP-Method\": \"DELETE\",\r\n            },\r\n        });\r\n    };\r\n    /**\r\n     * Returns the collection of changes from the change log that have occurred within the list, based on the specified query.\r\n     */\r\n    List.prototype.getChanges = function (query) {\r\n        return this.clone(List, \"getchanges\").postCore({\r\n            body: jsS({ \"query\": extend(metadata(\"SP.ChangeQuery\"), query) }),\r\n        });\r\n    };\r\n    /**\r\n     * Returns a collection of items from the list based on the specified query.\r\n     *\r\n     * @param CamlQuery The Query schema of Collaborative Application Markup\r\n     * Language (CAML) is used in various ways within the context of Microsoft SharePoint Foundation\r\n     * to define queries against list data.\r\n     * see:\r\n     *\r\n     * https://msdn.microsoft.com/en-us/library/office/ms467521.aspx\r\n     *\r\n     * @param expands A URI with a $expand System Query Option indicates that Entries associated with\r\n     * the Entry or Collection of Entries identified by the Resource Path\r\n     * section of the URI must be represented inline (i.e. eagerly loaded).\r\n     * see:\r\n     *\r\n     * https://msdn.microsoft.com/en-us/library/office/fp142385.aspx\r\n     *\r\n     * http://www.odata.org/documentation/odata-version-2-0/uri-conventions/#ExpandSystemQueryOption\r\n     */\r\n    List.prototype.getItemsByCAMLQuery = function (query) {\r\n        var expands = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            expands[_i - 1] = arguments[_i];\r\n        }\r\n        var q = this.clone(List, \"getitems\");\r\n        return q.expand.apply(q, expands).postCore({\r\n            body: jsS({ \"query\": extend({ \"__metadata\": { \"type\": \"SP.CamlQuery\" } }, query) }),\r\n        });\r\n    };\r\n    /**\r\n     * See: https://msdn.microsoft.com/en-us/library/office/dn292554.aspx\r\n     */\r\n    List.prototype.getListItemChangesSinceToken = function (query) {\r\n        return this.clone(List, \"getlistitemchangessincetoken\").postCore({\r\n            body: jsS({ \"query\": extend({ \"__metadata\": { \"type\": \"SP.ChangeLogItemQuery\" } }, query) }),\r\n        }, { parse: function (r) { return r.text(); } });\r\n    };\r\n    /**\r\n     * Moves the list to the Recycle Bin and returns the identifier of the new Recycle Bin item.\r\n     */\r\n    List.prototype.recycle = function () {\r\n        return this.clone(List, \"recycle\").postCore().then(function (data) {\r\n            if (hOP(data, \"Recycle\")) {\r\n                return data.Recycle;\r\n            }\r\n            else {\r\n                return data;\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Renders list data based on the view xml provided\r\n     */\r\n    List.prototype.renderListData = function (viewXml) {\r\n        var q = this.clone(List, \"renderlistdata(@viewXml)\");\r\n        q.query.set(\"@viewXml\", \"'\" + viewXml + \"'\");\r\n        return q.postCore().then(function (data) {\r\n            // data will be a string, so we parse it again\r\n            return JSON.parse(hOP(data, \"RenderListData\") ? data.RenderListData : data);\r\n        });\r\n    };\r\n    /**\r\n     * Returns the data for the specified query view\r\n     *\r\n     * @param parameters The parameters to be used to render list data as JSON string.\r\n     * @param overrideParameters The parameters that are used to override and extend the regular SPRenderListDataParameters.\r\n     */\r\n    List.prototype.renderListDataAsStream = function (parameters, overrideParameters) {\r\n        if (overrideParameters === void 0) { overrideParameters = null; }\r\n        var postBody = {\r\n            overrideParameters: extend(metadata(\"SP.RenderListDataOverrideParameters\"), overrideParameters),\r\n            parameters: extend(metadata(\"SP.RenderListDataParameters\"), parameters),\r\n        };\r\n        return this.clone(List, \"RenderListDataAsStream\", true).postCore({\r\n            body: jsS(postBody),\r\n        });\r\n    };\r\n    /**\r\n     * Gets the field values and field schema attributes for a list item.\r\n     */\r\n    List.prototype.renderListFormData = function (itemId, formId, mode) {\r\n        return this.clone(List, \"renderlistformdata(itemid=\" + itemId + \", formid='\" + formId + \"', mode='\" + mode + \"')\").postCore().then(function (data) {\r\n            // data will be a string, so we parse it again\r\n            return JSON.parse(hOP(data, \"RenderListFormData\") ? data.RenderListFormData : data);\r\n        });\r\n    };\r\n    /**\r\n     * Reserves a list item ID for idempotent list item creation.\r\n     */\r\n    List.prototype.reserveListItemId = function () {\r\n        return this.clone(List, \"reservelistitemid\").postCore().then(function (data) {\r\n            if (hOP(data, \"ReserveListItemId\")) {\r\n                return data.ReserveListItemId;\r\n            }\r\n            else {\r\n                return data;\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Returns the ListItemEntityTypeFullName for this list, used when adding/updating list items. Does not support batching.\r\n     *\r\n     */\r\n    List.prototype.getListItemEntityTypeFullName = function () {\r\n        return this.clone(List, null, false).select(\"ListItemEntityTypeFullName\").get().then(function (o) { return o.ListItemEntityTypeFullName; });\r\n    };\r\n    /**\r\n     * Creates an item using path (in a folder), validates and sets its field values.\r\n     *\r\n     * @param formValues The fields to change and their new values.\r\n     * @param decodedUrl Path decoded url; folder's server relative path.\r\n     * @param bNewDocumentUpdate true if the list item is a document being updated after upload; otherwise false.\r\n     * @param checkInComment Optional check in comment.\r\n     */\r\n    List.prototype.addValidateUpdateItemUsingPath = function (formValues, decodedUrl, bNewDocumentUpdate, checkInComment) {\r\n        if (bNewDocumentUpdate === void 0) { bNewDocumentUpdate = false; }\r\n        return this.clone(List, \"AddValidateUpdateItemUsingPath()\").postCore({\r\n            body: jsS({\r\n                bNewDocumentUpdate: bNewDocumentUpdate,\r\n                checkInComment: checkInComment,\r\n                formValues: formValues,\r\n                listItemCreateInfo: {\r\n                    FolderPath: {\r\n                        DecodedUrl: decodedUrl,\r\n                        __metadata: { type: \"SP.ResourcePath\" },\r\n                    },\r\n                    __metadata: { type: \"SP.ListItemCreationInformationUsingPath\" },\r\n                },\r\n            }),\r\n        }).then(function (res) {\r\n            if (typeof res.AddValidateUpdateItemUsingPath !== \"undefined\") {\r\n                return res.AddValidateUpdateItemUsingPath.results;\r\n            }\r\n            return res;\r\n        });\r\n    };\r\n    /**\r\n    * Gets the site script syntax (JSON) for the current list\r\n    */\r\n    List.prototype.getSiteScript = function () {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var rootFolder, absoluteListUrl;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.clone(List).rootFolder.select(\"ServerRelativeUrl\").get()];\r\n                    case 1:\r\n                        rootFolder = _a.sent();\r\n                        return [4 /*yield*/, toAbsoluteUrl(rootFolder.ServerRelativeUrl)];\r\n                    case 2:\r\n                        absoluteListUrl = _a.sent();\r\n                        return [2 /*return*/, new SiteScripts(this, \"\").getSiteScriptFromList(absoluteListUrl)];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return List;\r\n}(SharePointQueryableSecurable));\r\nexport { List };\r\n//# sourceMappingURL=lists.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryableCollection, SharePointQueryableInstance, defaultPath } from \"./sharepointqueryable\";\r\nimport { extend, jsS } from \"@pnp/common\";\r\nimport { odataUrlFrom } from \"./odata\";\r\nimport { metadata } from \"./utils/metadata\";\r\n/**\r\n * Represents a Collection of comments\r\n */\r\nvar Comments = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Comments, _super);\r\n    function Comments() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Comments_1 = Comments;\r\n    /**\r\n     * Adds a new comment to this collection\r\n     *\r\n     * @param info Comment information to add\r\n     */\r\n    Comments.prototype.add = function (info) {\r\n        var _this = this;\r\n        if (typeof info === \"string\") {\r\n            info = { text: info };\r\n        }\r\n        var postBody = jsS(extend(metadata(\"Microsoft.SharePoint.Comments.comment\"), info));\r\n        return this.clone(Comments_1, null).postCore({ body: postBody }).then(function (d) {\r\n            return extend(_this.getById(d.id), d);\r\n        });\r\n    };\r\n    /**\r\n     * Gets a comment by id\r\n     *\r\n     * @param id Id of the comment to load\r\n     */\r\n    Comments.prototype.getById = function (id) {\r\n        var c = new Comment(this);\r\n        c.concat(\"(\" + id + \")\");\r\n        return c;\r\n    };\r\n    /**\r\n     * Deletes all the comments in this collection\r\n     */\r\n    Comments.prototype.clear = function () {\r\n        return this.clone(Comments_1, \"DeleteAll\").postCore();\r\n    };\r\n    var Comments_1;\r\n    Comments = Comments_1 = tslib_1.__decorate([\r\n        defaultPath(\"comments\")\r\n    ], Comments);\r\n    return Comments;\r\n}(SharePointQueryableCollection));\r\nexport { Comments };\r\n/**\r\n * Represents a comment\r\n */\r\nvar Comment = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Comment, _super);\r\n    function Comment() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(Comment.prototype, \"replies\", {\r\n        get: function () {\r\n            return new Replies(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Likes the comment as the current user\r\n     */\r\n    Comment.prototype.like = function () {\r\n        return this.clone(Comment, \"Like\").postCore();\r\n    };\r\n    /**\r\n     * Unlikes the comment as the current user\r\n     */\r\n    Comment.prototype.unlike = function () {\r\n        return this.clone(Comment, \"Unlike\").postCore();\r\n    };\r\n    /**\r\n     * Deletes this comment\r\n     */\r\n    Comment.prototype.delete = function () {\r\n        return this.deleteCore();\r\n    };\r\n    return Comment;\r\n}(SharePointQueryableInstance));\r\nexport { Comment };\r\n/**\r\n * Represents a Collection of comments\r\n */\r\nvar Replies = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Replies, _super);\r\n    function Replies() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Replies_1 = Replies;\r\n    /**\r\n     * Adds a new reply to this collection\r\n     *\r\n     * @param info Comment information to add\r\n     */\r\n    Replies.prototype.add = function (info) {\r\n        if (typeof info === \"string\") {\r\n            info = { text: info };\r\n        }\r\n        var postBody = jsS(extend(metadata(\"Microsoft.SharePoint.Comments.comment\"), info));\r\n        return this.clone(Replies_1, null).postCore({ body: postBody }).then(function (d) {\r\n            return extend(new Comment(odataUrlFrom(d)), d);\r\n        });\r\n    };\r\n    var Replies_1;\r\n    Replies = Replies_1 = tslib_1.__decorate([\r\n        defaultPath(\"replies\")\r\n    ], Replies);\r\n    return Replies;\r\n}(SharePointQueryableCollection));\r\nexport { Replies };\r\n//# sourceMappingURL=comments.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryable, SharePointQueryableCollection, SharePointQueryableInstance, defaultPath } from \"./sharepointqueryable\";\r\nimport { SharePointQueryableShareableItem } from \"./sharepointqueryableshareable\";\r\nimport { Folder } from \"./folders\";\r\nimport { File } from \"./files\";\r\nimport { ContentType } from \"./contenttypes\";\r\nimport { extend, jsS, hOP } from \"@pnp/common\";\r\nimport { ODataParserBase, ODataDefaultParser } from \"@pnp/odata\";\r\nimport { AttachmentFiles } from \"./attachmentfiles\";\r\nimport { List } from \"./lists\";\r\nimport { Logger } from \"@pnp/logging\";\r\nimport { Comments } from \"./comments\";\r\nimport { metadata } from \"./utils/metadata\";\r\n/**\r\n * Describes a collection of Item objects\r\n *\r\n */\r\nvar Items = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Items, _super);\r\n    function Items() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Items_1 = Items;\r\n    /**\r\n    * Gets an Item by id\r\n    *\r\n    * @param id The integer id of the item to retrieve\r\n    */\r\n    Items.prototype.getById = function (id) {\r\n        var i = new Item(this);\r\n        i.concat(\"(\" + id + \")\");\r\n        return i;\r\n    };\r\n    /**\r\n     * Gets BCS Item by string id\r\n     *\r\n     * @param stringId The string id of the BCS item to retrieve\r\n     */\r\n    Items.prototype.getItemByStringId = function (stringId) {\r\n        // creates an item with the parent list path and append out method call\r\n        return new Item(this.parentUrl, \"getItemByStringId('\" + stringId + \"')\");\r\n    };\r\n    /**\r\n     * Skips the specified number of items (https://msdn.microsoft.com/en-us/library/office/fp142385.aspx#sectionSection6)\r\n     *\r\n     * @param skip The starting id where the page should start, use with top to specify pages\r\n     * @param reverse It true the PagedPrev=true parameter is added allowing backwards navigation in the collection\r\n     */\r\n    Items.prototype.skip = function (skip, reverse) {\r\n        if (reverse === void 0) { reverse = false; }\r\n        if (reverse) {\r\n            this.query.set(\"$skiptoken\", encodeURIComponent(\"Paged=TRUE&PagedPrev=TRUE&p_ID=\" + skip));\r\n        }\r\n        else {\r\n            this.query.set(\"$skiptoken\", encodeURIComponent(\"Paged=TRUE&p_ID=\" + skip));\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Gets a collection designed to aid in paging through data\r\n     *\r\n     */\r\n    Items.prototype.getPaged = function (parser) {\r\n        if (parser === void 0) { parser = new ODataDefaultParser(); }\r\n        return this.get(new PagedItemCollectionParser(this, parser));\r\n    };\r\n    /**\r\n     * Gets all the items in a list, regardless of count. Does not support batching or caching\r\n     *\r\n     *  @param requestSize Number of items to return in each request (Default: 2000)\r\n     *  @param acceptHeader Allows for setting the value of the Accept header for SP 2013 support\r\n     */\r\n    Items.prototype.getAll = function (requestSize, acceptHeader) {\r\n        if (requestSize === void 0) { requestSize = 2000; }\r\n        if (acceptHeader === void 0) { acceptHeader = \"application/json;odata=nometadata\"; }\r\n        Logger.write(\"Calling items.getAll should be done sparingly. Ensure this is the correct choice. If you are unsure, it is not.\", 2 /* Warning */);\r\n        // this will be used for the actual query\r\n        // and we set no metadata here to try and reduce traffic\r\n        var items = new Items_1(this, \"\").top(requestSize).configure({\r\n            headers: {\r\n                \"Accept\": acceptHeader,\r\n            },\r\n        });\r\n        // let's copy over the odata query params that can be applied\r\n        // $top - allow setting the page size this way (override what we did above)\r\n        // $select - allow picking the return fields (good behavior)\r\n        // $filter - allow setting a filter, though this may fail due for large lists\r\n        this.query.forEach(function (v, k) {\r\n            if (/^\\$select|filter|top|expand$/i.test(k)) {\r\n                items.query.set(k, v);\r\n            }\r\n        });\r\n        // give back the promise\r\n        return new Promise(function (resolve, reject) {\r\n            // this will eventually hold the items we return\r\n            var itemsCollector = [];\r\n            // action that will gather up our results recursively\r\n            var gatherer = function (last) {\r\n                // collect that set of results\r\n                [].push.apply(itemsCollector, last.results);\r\n                // if we have more, repeat - otherwise resolve with the collected items\r\n                if (last.hasNext) {\r\n                    last.getNext().then(gatherer).catch(reject);\r\n                }\r\n                else {\r\n                    resolve(itemsCollector);\r\n                }\r\n            };\r\n            // start the cycle\r\n            items.getPaged().then(gatherer).catch(reject);\r\n        });\r\n    };\r\n    /**\r\n     * Adds a new item to the collection\r\n     *\r\n     * @param properties The new items's properties\r\n     * @param listItemEntityTypeFullName The type name of the list's entities\r\n     */\r\n    Items.prototype.add = function (properties, listItemEntityTypeFullName) {\r\n        var _this = this;\r\n        if (properties === void 0) { properties = {}; }\r\n        if (listItemEntityTypeFullName === void 0) { listItemEntityTypeFullName = null; }\r\n        var removeDependency = this.addBatchDependency();\r\n        return this.ensureListItemEntityTypeName(listItemEntityTypeFullName).then(function (listItemEntityType) {\r\n            var postBody = jsS(extend(metadata(listItemEntityType), properties));\r\n            var promise = _this.clone(Items_1, \"\").postCore({ body: postBody }).then(function (data) {\r\n                return {\r\n                    data: data,\r\n                    item: _this.getById(data.Id),\r\n                };\r\n            });\r\n            removeDependency();\r\n            return promise;\r\n        });\r\n    };\r\n    /**\r\n     * Ensures we have the proper list item entity type name, either from the value provided or from the list\r\n     *\r\n     * @param candidatelistItemEntityTypeFullName The potential type name\r\n     */\r\n    Items.prototype.ensureListItemEntityTypeName = function (candidatelistItemEntityTypeFullName) {\r\n        return candidatelistItemEntityTypeFullName ?\r\n            Promise.resolve(candidatelistItemEntityTypeFullName) :\r\n            this.getParent(List).getListItemEntityTypeFullName();\r\n    };\r\n    var Items_1;\r\n    Items = Items_1 = tslib_1.__decorate([\r\n        defaultPath(\"items\")\r\n    ], Items);\r\n    return Items;\r\n}(SharePointQueryableCollection));\r\nexport { Items };\r\n/**\r\n * Descrines a single Item instance\r\n *\r\n */\r\nvar Item = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Item, _super);\r\n    function Item() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * Delete this item\r\n         *\r\n         * @param eTag Value used in the IF-Match header, by default \"*\"\r\n         */\r\n        _this.delete = _this._deleteWithETag;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(Item.prototype, \"attachmentFiles\", {\r\n        /**\r\n         * Gets the set of attachments for this item\r\n         *\r\n         */\r\n        get: function () {\r\n            return new AttachmentFiles(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"contentType\", {\r\n        /**\r\n         * Gets the content type for this item\r\n         *\r\n         */\r\n        get: function () {\r\n            return new ContentType(this, \"ContentType\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"comments\", {\r\n        /**\r\n         * Gets the collection of comments associated with this list item\r\n         */\r\n        get: function () {\r\n            return new Comments(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"effectiveBasePermissions\", {\r\n        /**\r\n         * Gets the effective base permissions for the item\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryable(this, \"EffectiveBasePermissions\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"effectiveBasePermissionsForUI\", {\r\n        /**\r\n         * Gets the effective base permissions for the item in a UI context\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryable(this, \"EffectiveBasePermissionsForUI\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"fieldValuesAsHTML\", {\r\n        /**\r\n         * Gets the field values for this list item in their HTML representation\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableInstance(this, \"FieldValuesAsHTML\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"fieldValuesAsText\", {\r\n        /**\r\n         * Gets the field values for this list item in their text representation\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableInstance(this, \"FieldValuesAsText\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"fieldValuesForEdit\", {\r\n        /**\r\n         * Gets the field values for this list item for use in editing controls\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableInstance(this, \"FieldValuesForEdit\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"folder\", {\r\n        /**\r\n         * Gets the folder associated with this list item (if this item represents a folder)\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Folder(this, \"folder\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"file\", {\r\n        /**\r\n         * Gets the folder associated with this list item (if this item represents a folder)\r\n         *\r\n         */\r\n        get: function () {\r\n            return new File(this, \"file\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"versions\", {\r\n        /**\r\n         * Gets the collection of versions associated with this item\r\n         */\r\n        get: function () {\r\n            return new ItemVersions(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"list\", {\r\n        get: function () {\r\n            return this.getParent(List, this.parentUrl.substr(0, this.parentUrl.lastIndexOf(\"/\")));\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Updates this list intance with the supplied properties\r\n     *\r\n     * @param properties A plain object hash of values to update for the list\r\n     * @param eTag Value used in the IF-Match header, by default \"*\"\r\n     * @param listItemEntityTypeFullName The type name of the list's entities\r\n     */\r\n    Item.prototype.update = function (properties, eTag, listItemEntityTypeFullName) {\r\n        var _this = this;\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        if (listItemEntityTypeFullName === void 0) { listItemEntityTypeFullName = null; }\r\n        return new Promise(function (resolve, reject) {\r\n            var removeDependency = _this.addBatchDependency();\r\n            return _this.ensureListItemEntityTypeName(listItemEntityTypeFullName).then(function (listItemEntityType) {\r\n                var postBody = jsS(extend(metadata(listItemEntityType), properties));\r\n                removeDependency();\r\n                return _this.postCore({\r\n                    body: postBody,\r\n                    headers: {\r\n                        \"IF-Match\": eTag,\r\n                        \"X-HTTP-Method\": \"MERGE\",\r\n                    },\r\n                }, new ItemUpdatedParser()).then(function (data) {\r\n                    resolve({\r\n                        data: data,\r\n                        item: _this,\r\n                    });\r\n                });\r\n            }).catch(function (e) { return reject(e); });\r\n        });\r\n    };\r\n    /**\r\n     * Gets the collection of people who have liked this item\r\n     */\r\n    Item.prototype.getLikedBy = function () {\r\n        return this.clone(Item, \"likedBy\").postCore();\r\n    };\r\n    /**\r\n     * Likes this item as the current user\r\n     */\r\n    Item.prototype.like = function () {\r\n        return this.clone(Item, \"like\").postCore();\r\n    };\r\n    /**\r\n     * Unlikes this item as the current user\r\n     */\r\n    Item.prototype.unlike = function () {\r\n        return this.clone(Item, \"unlike\").postCore();\r\n    };\r\n    /**\r\n     * Moves the list item to the Recycle Bin and returns the identifier of the new Recycle Bin item.\r\n     */\r\n    Item.prototype.recycle = function () {\r\n        return this.clone(Item, \"recycle\").postCore();\r\n    };\r\n    /**\r\n     * Gets a string representation of the full URL to the WOPI frame.\r\n     * If there is no associated WOPI application, or no associated action, an empty string is returned.\r\n     *\r\n     * @param action Display mode: 0: view, 1: edit, 2: mobileView, 3: interactivePreview\r\n     */\r\n    Item.prototype.getWopiFrameUrl = function (action) {\r\n        if (action === void 0) { action = 0; }\r\n        var i = this.clone(Item, \"getWOPIFrameUrl(@action)\");\r\n        i.query.set(\"@action\", action);\r\n        return i.postCore().then(function (data) {\r\n            // handle verbose mode\r\n            if (hOP(data, \"GetWOPIFrameUrl\")) {\r\n                return data.GetWOPIFrameUrl;\r\n            }\r\n            return data;\r\n        });\r\n    };\r\n    /**\r\n     * Validates and sets the values of the specified collection of fields for the list item.\r\n     *\r\n     * @param formValues The fields to change and their new values.\r\n     * @param newDocumentUpdate true if the list item is a document being updated after upload; otherwise false.\r\n     */\r\n    Item.prototype.validateUpdateListItem = function (formValues, newDocumentUpdate) {\r\n        if (newDocumentUpdate === void 0) { newDocumentUpdate = false; }\r\n        return this.clone(Item, \"validateupdatelistitem\").postCore({\r\n            body: jsS({ \"formValues\": formValues, bNewDocumentUpdate: newDocumentUpdate }),\r\n        });\r\n    };\r\n    /**\r\n     * Get the like by information for a modern site page\r\n     */\r\n    Item.prototype.getLikedByInformation = function () {\r\n        return this.clone(Item, \"likedByInformation\").expand(\"likedby\").getCore();\r\n    };\r\n    /**\r\n     * Ensures we have the proper list item entity type name, either from the value provided or from the list\r\n     *\r\n     * @param candidatelistItemEntityTypeFullName The potential type name\r\n     */\r\n    Item.prototype.ensureListItemEntityTypeName = function (candidatelistItemEntityTypeFullName) {\r\n        return candidatelistItemEntityTypeFullName ?\r\n            Promise.resolve(candidatelistItemEntityTypeFullName) :\r\n            this.list.getListItemEntityTypeFullName();\r\n    };\r\n    return Item;\r\n}(SharePointQueryableShareableItem));\r\nexport { Item };\r\n/**\r\n * Describes a collection of Version objects\r\n *\r\n */\r\nvar ItemVersions = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ItemVersions, _super);\r\n    function ItemVersions() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets a version by id\r\n     *\r\n     * @param versionId The id of the version to retrieve\r\n     */\r\n    ItemVersions.prototype.getById = function (versionId) {\r\n        var v = new ItemVersion(this);\r\n        v.concat(\"(\" + versionId + \")\");\r\n        return v;\r\n    };\r\n    ItemVersions = tslib_1.__decorate([\r\n        defaultPath(\"versions\")\r\n    ], ItemVersions);\r\n    return ItemVersions;\r\n}(SharePointQueryableCollection));\r\nexport { ItemVersions };\r\n/**\r\n * Describes a single Version instance\r\n *\r\n */\r\nvar ItemVersion = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ItemVersion, _super);\r\n    function ItemVersion() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n        * Delete a specific version of a file.\r\n        *\r\n        * @param eTag Value used in the IF-Match header, by default \"*\"\r\n        */\r\n        _this.delete = _this._deleteWithETag;\r\n        return _this;\r\n    }\r\n    return ItemVersion;\r\n}(SharePointQueryableInstance));\r\nexport { ItemVersion };\r\n/**\r\n * Provides paging functionality for list items\r\n */\r\nvar PagedItemCollection = /** @class */ (function () {\r\n    function PagedItemCollection(parent, nextUrl, results, innerParser) {\r\n        this.parent = parent;\r\n        this.nextUrl = nextUrl;\r\n        this.results = results;\r\n        this.innerParser = innerParser;\r\n    }\r\n    Object.defineProperty(PagedItemCollection.prototype, \"hasNext\", {\r\n        /**\r\n         * If true there are more results available in the set, otherwise there are not\r\n         */\r\n        get: function () {\r\n            return typeof this.nextUrl === \"string\" && this.nextUrl.length > 0;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets the next set of results, or resolves to null if no results are available\r\n     */\r\n    PagedItemCollection.prototype.getNext = function () {\r\n        if (this.hasNext) {\r\n            var items = new Items(this.nextUrl, null).configureFrom(this.parent);\r\n            return items.getPaged(this.innerParser);\r\n        }\r\n        return new Promise(function (r) { return r(null); });\r\n    };\r\n    return PagedItemCollection;\r\n}());\r\nexport { PagedItemCollection };\r\nvar PagedItemCollectionParser = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PagedItemCollectionParser, _super);\r\n    function PagedItemCollectionParser(_parent, innerParser) {\r\n        var _this = _super.call(this) || this;\r\n        _this._parent = _parent;\r\n        _this.innerParser = innerParser;\r\n        return _this;\r\n    }\r\n    PagedItemCollectionParser.prototype.parse = function (r) {\r\n        var _this = this;\r\n        return this.innerParser.parse(r).then(function (items) { return tslib_1.__awaiter(_this, void 0, void 0, function () {\r\n            var json, nextUrl;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                json = this.innerParser.rawJson;\r\n                nextUrl = hOP(json, \"d\") && hOP(json.d, \"__next\") ? json.d.__next : json[\"odata.nextLink\"];\r\n                return [2 /*return*/, new PagedItemCollection(this._parent, nextUrl, items, this.innerParser)];\r\n            });\r\n        }); });\r\n    };\r\n    return PagedItemCollectionParser;\r\n}(ODataParserBase));\r\nvar ItemUpdatedParser = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ItemUpdatedParser, _super);\r\n    function ItemUpdatedParser() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    ItemUpdatedParser.prototype.parse = function (r) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var _this = this;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                return [2 /*return*/, new Promise(function (resolve, reject) {\r\n                        if (_this.handleError(r, reject)) {\r\n                            resolve({\r\n                                \"odata.etag\": r.headers.get(\"etag\"),\r\n                            });\r\n                        }\r\n                    })];\r\n            });\r\n        });\r\n    };\r\n    return ItemUpdatedParser;\r\n}(ODataParserBase));\r\n//# sourceMappingURL=items.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryableInstance, SharePointQueryableCollection } from \"./sharepointqueryable\";\r\nimport { File } from \"./files\";\r\nimport { odataUrlFrom } from \"./odata\";\r\nimport { extractWebUrl } from \"./utils/extractweburl\";\r\n/**\r\n * Represents an app catalog\r\n */\r\nvar AppCatalog = /** @class */ (function (_super) {\r\n    tslib_1.__extends(AppCatalog, _super);\r\n    function AppCatalog(baseUrl, path) {\r\n        if (path === void 0) { path = \"_api/web/tenantappcatalog/AvailableApps\"; }\r\n        return _super.call(this, extractWebUrl(typeof baseUrl === \"string\" ? baseUrl : baseUrl.toUrl()), path) || this;\r\n    }\r\n    /**\r\n     * Get details of specific app from the app catalog\r\n     * @param id - Specify the guid of the app\r\n     */\r\n    AppCatalog.prototype.getAppById = function (id) {\r\n        return new App(this, \"getById('\" + id + \"')\");\r\n    };\r\n    /**\r\n     * Uploads an app package. Not supported for batching\r\n     *\r\n     * @param filename Filename to create.\r\n     * @param content app package data (eg: the .app or .sppkg file).\r\n     * @param shouldOverWrite Should an app with the same name in the same location be overwritten? (default: true)\r\n     * @returns Promise<AppAddResult>\r\n     */\r\n    AppCatalog.prototype.add = function (filename, content, shouldOverWrite) {\r\n        if (shouldOverWrite === void 0) { shouldOverWrite = true; }\r\n        var catalog = this.toUrl().indexOf(\"tenantappcatalog\") > 0 ? \"tenantappcatalog\" : \"sitecollectionappcatalog\";\r\n        // you don't add to the availableapps collection\r\n        var adder = new AppCatalog(extractWebUrl(this.toUrl()), \"_api/web/\" + catalog + \"/add(overwrite=\" + shouldOverWrite + \",url='\" + filename + \"')\");\r\n        return adder.postCore({\r\n            body: content,\r\n        }).then(function (r) {\r\n            return {\r\n                data: r,\r\n                file: new File(odataUrlFrom(r)),\r\n            };\r\n        });\r\n    };\r\n    return AppCatalog;\r\n}(SharePointQueryableCollection));\r\nexport { AppCatalog };\r\n/**\r\n * Represents the actions you can preform on a given app within the catalog\r\n */\r\nvar App = /** @class */ (function (_super) {\r\n    tslib_1.__extends(App, _super);\r\n    function App() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * This method deploys an app on the app catalog.  It must be called in the context\r\n     * of the tenant app catalog web or it will fail.\r\n     *\r\n     * @param skipFeatureDeployment Deploy the app to the entire tenant\r\n     */\r\n    App.prototype.deploy = function (skipFeatureDeployment) {\r\n        if (skipFeatureDeployment === void 0) { skipFeatureDeployment = false; }\r\n        return this.clone(App, \"Deploy(\" + skipFeatureDeployment + \")\").postCore();\r\n    };\r\n    /**\r\n     * This method retracts a deployed app on the app catalog.  It must be called in the context\r\n     * of the tenant app catalog web or it will fail.\r\n     */\r\n    App.prototype.retract = function () {\r\n        return this.clone(App, \"Retract\").postCore();\r\n    };\r\n    /**\r\n     * This method allows an app which is already deployed to be installed on a web\r\n     */\r\n    App.prototype.install = function () {\r\n        return this.clone(App, \"Install\").postCore();\r\n    };\r\n    /**\r\n     * This method allows an app which is already insatlled to be uninstalled on a web\r\n     */\r\n    App.prototype.uninstall = function () {\r\n        return this.clone(App, \"Uninstall\").postCore();\r\n    };\r\n    /**\r\n     * This method allows an app which is already insatlled to be upgraded on a web\r\n     */\r\n    App.prototype.upgrade = function () {\r\n        return this.clone(App, \"Upgrade\").postCore();\r\n    };\r\n    /**\r\n     * This method removes an app from the app catalog.  It must be called in the context\r\n     * of the tenant app catalog web or it will fail.\r\n     */\r\n    App.prototype.remove = function () {\r\n        return this.clone(App, \"Remove\").postCore();\r\n    };\r\n    return App;\r\n}(SharePointQueryableInstance));\r\nexport { App };\r\n//# sourceMappingURL=appcatalog.js.map","import * as tslib_1 from \"tslib\";\r\nimport { Item } from \"./items\";\r\nimport { extend, getGUID, jsS, hOP, stringIsNullOrEmpty, objectDefinedNotNull, combine, isUrlAbsolute } from \"@pnp/common\";\r\nimport { SharePointQueryable } from \"./sharepointqueryable\";\r\nimport { metadata } from \"./utils/metadata\";\r\nimport { List } from \"./lists\";\r\nimport { odataUrlFrom } from \"./odata\";\r\nimport { Web } from \"./webs\";\r\nimport { extractWebUrl } from \"./utils/extractweburl\";\r\nimport { Site } from \"./site\";\r\n/**\r\n * Page promotion state\r\n */\r\nexport var PromotedState;\r\n(function (PromotedState) {\r\n    /**\r\n     * Regular client side page\r\n     */\r\n    PromotedState[PromotedState[\"NotPromoted\"] = 0] = \"NotPromoted\";\r\n    /**\r\n     * Page that will be promoted as news article after publishing\r\n     */\r\n    PromotedState[PromotedState[\"PromoteOnPublish\"] = 1] = \"PromoteOnPublish\";\r\n    /**\r\n     * Page that is promoted as news article\r\n     */\r\n    PromotedState[PromotedState[\"Promoted\"] = 2] = \"Promoted\";\r\n})(PromotedState || (PromotedState = {}));\r\n/**\r\n * Gets the next order value 1 based for the provided collection\r\n *\r\n * @param collection Collection of orderable things\r\n */\r\nfunction getNextOrder(collection) {\r\n    if (collection.length < 1) {\r\n        return 1;\r\n    }\r\n    return Math.max.apply(null, collection.map(function (i) { return i.order; })) + 1;\r\n}\r\n/**\r\n * Normalizes the order value for all the sections, columns, and controls to be 1 based and stepped (1, 2, 3...)\r\n *\r\n * @param collection The collection to normalize\r\n */\r\nfunction reindex(collection) {\r\n    for (var i = 0; i < collection.length; i++) {\r\n        collection[i].order = i + 1;\r\n        if (hOP(collection[i], \"columns\")) {\r\n            reindex(collection[i].columns);\r\n        }\r\n        else if (hOP(collection[i], \"controls\")) {\r\n            reindex(collection[i].controls);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Represents the data and methods associated with client side \"modern\" pages\r\n */\r\nvar ClientSidePage = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ClientSidePage, _super);\r\n    /**\r\n     * PLEASE DON'T USE THIS CONSTRUCTOR DIRECTLY\r\n     *\r\n     */\r\n    function ClientSidePage(baseUrl, path, json, noInit, sections, commentsDisabled) {\r\n        if (noInit === void 0) { noInit = false; }\r\n        if (sections === void 0) { sections = []; }\r\n        if (commentsDisabled === void 0) { commentsDisabled = false; }\r\n        var _this = _super.call(this, baseUrl, path) || this;\r\n        _this.json = json;\r\n        _this.sections = sections;\r\n        _this.commentsDisabled = commentsDisabled;\r\n        _this._bannerImageDirty = false;\r\n        // ensure we have a good url to build on for the pages api\r\n        if (typeof baseUrl === \"string\") {\r\n            _this._parentUrl = \"\";\r\n            _this._url = combine(extractWebUrl(baseUrl), path);\r\n        }\r\n        else {\r\n            _this.extend(ClientSidePage.initFrom(baseUrl, null), path);\r\n        }\r\n        // set a default page settings slice\r\n        _this._pageSettings = { controlType: 0, pageSettingsSlice: { isDefaultDescription: true, isDefaultThumbnail: true } };\r\n        // set a default layout part\r\n        _this._layoutPart = ClientSidePage.getDefaultLayoutPart();\r\n        if (typeof json !== \"undefined\" && !noInit) {\r\n            _this.fromJSON(json);\r\n        }\r\n        return _this;\r\n    }\r\n    /**\r\n     * Creates a new blank page within the supplied library [does not work with batching]\r\n     *\r\n     * @param web Parent web in which we will create the page (we allow list here too matching the old api)\r\n     * @param pageName Filename of the page, such as \"page\"\r\n     * @param title The display title of the page\r\n     * @param pageLayoutType Layout type of the page to use\r\n     */\r\n    ClientSidePage.create = function (web, pageName, title, pageLayoutType) {\r\n        if (pageLayoutType === void 0) { pageLayoutType = \"Article\"; }\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var pageInitData, newPage;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        // patched because previously we used the full page name with the .aspx at the end\r\n                        // this allows folk's existing code to work after the re-write to the new API\r\n                        pageName = pageName.replace(/\\.aspx$/i, \"\");\r\n                        return [4 /*yield*/, ClientSidePage.initFrom(web, \"_api/sitepages/pages\").postCore({\r\n                                body: jsS(Object.assign(metadata(\"SP.Publishing.SitePage\"), {\r\n                                    PageLayoutType: pageLayoutType,\r\n                                })),\r\n                            })];\r\n                    case 1:\r\n                        pageInitData = _a.sent();\r\n                        newPage = new ClientSidePage(web, \"\", pageInitData);\r\n                        // newPage.authors = [currentUserLogin.UserPrincipalName];\r\n                        newPage.title = pageName;\r\n                        return [4 /*yield*/, newPage.save(false)];\r\n                    case 2:\r\n                        _a.sent();\r\n                        newPage.title = title;\r\n                        return [2 /*return*/, newPage];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Creates a new ClientSidePage instance from the provided html content string\r\n     *\r\n     * @param html HTML markup representing the page\r\n     */\r\n    ClientSidePage.fromFile = function (file) {\r\n        return file.getItem().then(function (i) {\r\n            var page = new ClientSidePage(extractWebUrl(file.toUrl()), \"\", { Id: i.Id }, true);\r\n            return page.configureFrom(file).load();\r\n        });\r\n    };\r\n    ClientSidePage.getDefaultLayoutPart = function () {\r\n        return {\r\n            dataVersion: \"1.4\",\r\n            description: \"Title Region Description\",\r\n            id: \"cbe7b0a9-3504-44dd-a3a3-0e5cacd07788\",\r\n            instanceId: \"cbe7b0a9-3504-44dd-a3a3-0e5cacd07788\",\r\n            properties: {\r\n                authors: [],\r\n                layoutType: \"FullWidthImage\",\r\n                showPublishDate: false,\r\n                showTopicHeader: false,\r\n                textAlignment: \"Left\",\r\n                title: \"\",\r\n                topicHeader: \"\",\r\n            },\r\n            serverProcessedContent: { htmlStrings: {}, searchablePlainTexts: {}, imageSources: {}, links: {} },\r\n            title: \"Title area\",\r\n        };\r\n    };\r\n    ClientSidePage.initFrom = function (o, url) {\r\n        return (new ClientSidePage(extractWebUrl(o.toUrl()), url)).configureFrom(o);\r\n    };\r\n    Object.defineProperty(ClientSidePage.prototype, \"pageLayout\", {\r\n        get: function () {\r\n            return this.json.PageLayoutType;\r\n        },\r\n        set: function (value) {\r\n            this.json.PageLayoutType = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ClientSidePage.prototype, \"bannerImageUrl\", {\r\n        get: function () {\r\n            return this.json.BannerImageUrl;\r\n        },\r\n        set: function (value) {\r\n            this.json.BannerImageUrl = value;\r\n            this._bannerImageDirty = true;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ClientSidePage.prototype, \"bannerImageSourceType\", {\r\n        get: function () {\r\n            return this._layoutPart.properties.imageSourceType;\r\n        },\r\n        set: function (value) {\r\n            this._layoutPart.properties.imageSourceType = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ClientSidePage.prototype, \"topicHeader\", {\r\n        get: function () {\r\n            return objectDefinedNotNull(this.json.TopicHeader) ? this.json.TopicHeader : \"\";\r\n        },\r\n        set: function (value) {\r\n            this.json.TopicHeader = value;\r\n            this._layoutPart.properties.topicHeader = value;\r\n            if (stringIsNullOrEmpty(value)) {\r\n                this.showTopicHeader = false;\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ClientSidePage.prototype, \"title\", {\r\n        // public get authors(): string[] {\r\n        //     return this._layoutPart.properties.authorByline;\r\n        // }\r\n        // public set authors(value: string[]) {\r\n        //     this.json.AuthorByline = value;\r\n        //     this._layoutPart.properties.authorByline = value;\r\n        //     this._layoutPart.properties.authors = null;\r\n        // }\r\n        get: function () {\r\n            return this._layoutPart.properties.title;\r\n        },\r\n        set: function (value) {\r\n            this.json.Title = value;\r\n            this._layoutPart.properties.title = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ClientSidePage.prototype, \"layoutType\", {\r\n        get: function () {\r\n            return this._layoutPart.properties.layoutType;\r\n        },\r\n        set: function (value) {\r\n            this._layoutPart.properties.layoutType = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ClientSidePage.prototype, \"headerTextAlignment\", {\r\n        get: function () {\r\n            return this._layoutPart.properties.textAlignment;\r\n        },\r\n        set: function (value) {\r\n            this._layoutPart.properties.textAlignment = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ClientSidePage.prototype, \"showTopicHeader\", {\r\n        get: function () {\r\n            return this._layoutPart.properties.showTopicHeader;\r\n        },\r\n        set: function (value) {\r\n            this._layoutPart.properties.showTopicHeader = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ClientSidePage.prototype, \"showPublishDate\", {\r\n        get: function () {\r\n            return this._layoutPart.properties.showPublishDate;\r\n        },\r\n        set: function (value) {\r\n            this._layoutPart.properties.showPublishDate = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Add a section to this page\r\n     */\r\n    ClientSidePage.prototype.addSection = function () {\r\n        var section = new CanvasSection(this, getNextOrder(this.sections));\r\n        this.sections.push(section);\r\n        return section;\r\n    };\r\n    ClientSidePage.prototype.fromJSON = function (pageData) {\r\n        this.json = pageData;\r\n        var canvasControls = JSON.parse(pageData.CanvasContent1);\r\n        var layouts = JSON.parse(pageData.LayoutWebpartsContent);\r\n        if (layouts && layouts.length > 0) {\r\n            this._layoutPart = layouts[0];\r\n        }\r\n        this.setControls(canvasControls);\r\n        return this;\r\n    };\r\n    /**\r\n     * Loads this page's content from the server\r\n     */\r\n    ClientSidePage.prototype.load = function () {\r\n        var _this = this;\r\n        // load item id, then load page data from new pages api\r\n        return this.getItem(\"Id\", \"CommentsDisabled\").then(function (item) {\r\n            return (new SharePointQueryable(_this, \"_api/sitepages/pages(\" + item.Id + \")\")).get().then(function (pageData) {\r\n                _this.commentsDisabled = item.CommentsDisabled;\r\n                return _this.fromJSON(pageData);\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Persists the content changes (sections, columns, and controls) [does not work with batching]\r\n     *\r\n     * @param publish If true the page is published, if false the changes are persisted to SharePoint but not published\r\n     */\r\n    ClientSidePage.prototype.save = function (publish) {\r\n        var _this = this;\r\n        if (publish === void 0) { publish = true; }\r\n        if (this.json.Id === null) {\r\n            throw Error(\"The id for this page is null. If you want to create a new page, please use ClientSidePage.Create\");\r\n        }\r\n        // we will chain our work on this promise\r\n        var promise = Promise.resolve({});\r\n        if (this._bannerImageDirty) {\r\n            // we have to do these gymnastics to set the banner image url\r\n            promise = promise.then(function (_) { return new Promise(function (resolve, reject) {\r\n                var origImgUrl = _this.json.BannerImageUrl;\r\n                if (isUrlAbsolute(origImgUrl)) {\r\n                    // do our best to make this a server relative url by removing the x.sharepoint.com part\r\n                    origImgUrl = origImgUrl.replace(/^https?:\\/\\/[a-z0-9\\.]*?\\.[a-z]{2,3}\\//i, \"/\");\r\n                }\r\n                var site = new Site(extractWebUrl(_this.toUrl()));\r\n                var web = new Web(extractWebUrl(_this.toUrl()));\r\n                var imgFile = web.getFileByServerRelativePath(origImgUrl);\r\n                var siteId = \"\";\r\n                var webId = \"\";\r\n                var imgId = \"\";\r\n                var listId = \"\";\r\n                var webUrl = \"\";\r\n                Promise.all([\r\n                    site.select(\"Id\", \"Url\").get().then(function (r) { return siteId = r.Id; }),\r\n                    web.select(\"Id\", \"Url\").get().then(function (r) { webId = r.Id; webUrl = r.Url; }),\r\n                    imgFile.listItemAllFields.select(\"UniqueId\", \"ParentList/Id\").expand(\"ParentList\").get().then(function (r) { imgId = r.UniqueId; listId = r.ParentList.Id; }),\r\n                ]).then(function () {\r\n                    var f = new SharePointQueryable(webUrl, \"_layouts/15/getpreview.ashx\");\r\n                    f.query.set(\"guidSite\", \"\" + siteId);\r\n                    f.query.set(\"guidWeb\", \"\" + webId);\r\n                    f.query.set(\"guidFile\", \"\" + imgId);\r\n                    _this.bannerImageUrl = f.toUrlAndQuery();\r\n                    if (!objectDefinedNotNull(_this._layoutPart.serverProcessedContent)) {\r\n                        _this._layoutPart.serverProcessedContent = {};\r\n                    }\r\n                    _this._layoutPart.serverProcessedContent.imageSources = { imageSource: origImgUrl };\r\n                    if (!objectDefinedNotNull(_this._layoutPart.serverProcessedContent.customMetadata)) {\r\n                        _this._layoutPart.serverProcessedContent.customMetadata = {};\r\n                    }\r\n                    _this._layoutPart.serverProcessedContent.customMetadata.imageSource = {\r\n                        listId: listId,\r\n                        siteId: siteId,\r\n                        uniqueId: imgId,\r\n                        webId: webId,\r\n                    };\r\n                    _this._layoutPart.properties.webId = webId;\r\n                    _this._layoutPart.properties.siteId = siteId;\r\n                    _this._layoutPart.properties.listId = listId;\r\n                    _this._layoutPart.properties.uniqueId = imgId;\r\n                    resolve();\r\n                }).catch(reject);\r\n            }); });\r\n        }\r\n        // we need to update our authors if they have changed\r\n        // if (this._layoutPart.properties.authors === null && this._layoutPart.properties.authorByline.length > 0) {\r\n        //     promise = promise.then(_ => new Promise(resolve => {\r\n        //         const collector: any[] = [];\r\n        //         const userResolver = ClientSidePage.getPoster(\"/_api/SP.UI.ApplicationPages.ClientPeoplePickerWebServiceInterface.ClientPeoplePickerResolveUser\");\r\n        //         this._layoutPart.properties.authorByline.forEach(async author => {\r\n        //             const userData = await userResolver.postCore({\r\n        //                 body: jsS({\r\n        //                     queryParams: {\r\n        //                         AllowEmailAddresses: false,\r\n        //                         MaximumEntitySuggestions: 1,\r\n        //                         PrincipalSource: 15,\r\n        //                         PrincipalType: 1,\r\n        //                         QueryString: author,\r\n        //                         SharePointGroupID: 0,\r\n        //                     },\r\n        //                 }),\r\n        //             });\r\n        //             collector.push({\r\n        //                 email: userData.EntityData.Email,\r\n        //                 id: userData.Key,\r\n        //                 name: userData.DisplayName,\r\n        //                 role: \"\",\r\n        //                 upn: userData.EntityData.Email,\r\n        //             });\r\n        //         });\r\n        //         this._layoutPart.properties.authors = collector;\r\n        //         resolve();\r\n        //     }));\r\n        // }\r\n        // we try and check out the page for the user\r\n        if (!this.json.IsPageCheckedOutToCurrentUser) {\r\n            promise = promise.then(function (_) { return (ClientSidePage.initFrom(_this, \"_api/sitepages/pages(\" + _this.json.Id + \")/checkoutpage\")).postCore(); });\r\n        }\r\n        promise = promise.then(function (_) {\r\n            var saveBody = Object.assign(metadata(\"SP.Publishing.SitePage\"), {\r\n                AuthorByline: _this.json.AuthorByline || [],\r\n                BannerImageUrl: _this.bannerImageUrl,\r\n                CanvasContent1: _this.getCanvasContent1(),\r\n                LayoutWebpartsContent: _this.getLayoutWebpartsContent(),\r\n                Title: _this.title,\r\n                TopicHeader: _this.topicHeader,\r\n            });\r\n            var updater = ClientSidePage.initFrom(_this, \"_api/sitepages/pages(\" + _this.json.Id + \")/savepage\");\r\n            updater.configure({\r\n                headers: {\r\n                    \"if-match\": \"*\",\r\n                },\r\n            });\r\n            return updater.postCore({ body: jsS(saveBody) });\r\n        });\r\n        if (publish) {\r\n            promise = promise.then(function (_) { return (ClientSidePage.initFrom(_this, \"_api/sitepages/pages(\" + _this.json.Id + \")/publish\")).postCore(); }).then(function (r) {\r\n                if (r) {\r\n                    _this.json.IsPageCheckedOutToCurrentUser = false;\r\n                }\r\n            });\r\n        }\r\n        promise = promise.then(function (_) {\r\n            // these are post-save actions\r\n            _this._bannerImageDirty = false;\r\n        });\r\n        return promise;\r\n    };\r\n    ClientSidePage.prototype.discardPageCheckout = function () {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var d;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (this.json.Id === null) {\r\n                            throw Error(\"The id for this page is null. If you want to create a new page, please use ClientSidePage.Create\");\r\n                        }\r\n                        return [4 /*yield*/, ClientSidePage.initFrom(this, \"_api/sitepages/pages(\" + this.json.Id + \")/discardPage\").postCore({\r\n                                body: jsS(metadata(\"SP.Publishing.SitePage\")),\r\n                            })];\r\n                    case 1:\r\n                        d = _a.sent();\r\n                        this.fromJSON(d);\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    ClientSidePage.prototype.promoteToNews = function () {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            return tslib_1.__generator(this, function (_a) {\r\n                return [2 /*return*/, this.promoteNewsImpl(\"promoteToNews\")];\r\n            });\r\n        });\r\n    };\r\n    // API is currently broken on server side\r\n    // public async demoteFromNews(): Promise<boolean> {\r\n    //     return this.promoteNewsImpl(\"demoteFromNews\");\r\n    // }\r\n    /**\r\n     * Enables comments on this page\r\n     */\r\n    ClientSidePage.prototype.enableComments = function () {\r\n        var _this = this;\r\n        return this.setCommentsOn(true).then(function (r) {\r\n            _this.commentsDisabled = false;\r\n            return r;\r\n        });\r\n    };\r\n    /**\r\n     * Disables comments on this page\r\n     */\r\n    ClientSidePage.prototype.disableComments = function () {\r\n        var _this = this;\r\n        return this.setCommentsOn(false).then(function (r) {\r\n            _this.commentsDisabled = true;\r\n            return r;\r\n        });\r\n    };\r\n    /**\r\n     * Finds a control by the specified instance id\r\n     *\r\n     * @param id Instance id of the control to find\r\n     */\r\n    ClientSidePage.prototype.findControlById = function (id) {\r\n        return this.findControl(function (c) { return c.id === id; });\r\n    };\r\n    /**\r\n     * Finds a control within this page's control tree using the supplied predicate\r\n     *\r\n     * @param predicate Takes a control and returns true or false, if true that control is returned by findControl\r\n     */\r\n    ClientSidePage.prototype.findControl = function (predicate) {\r\n        // check all sections\r\n        for (var i = 0; i < this.sections.length; i++) {\r\n            // check all columns\r\n            for (var j = 0; j < this.sections[i].columns.length; j++) {\r\n                // check all controls\r\n                for (var k = 0; k < this.sections[i].columns[j].controls.length; k++) {\r\n                    // check to see if the predicate likes this control\r\n                    if (predicate(this.sections[i].columns[j].controls[k])) {\r\n                        return this.sections[i].columns[j].controls[k];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        // we found nothing so give nothing back\r\n        return null;\r\n    };\r\n    /**\r\n     * Like the modern site page\r\n     */\r\n    ClientSidePage.prototype.like = function () {\r\n        return this.getItem().then(function (i) {\r\n            return i.like();\r\n        });\r\n    };\r\n    /**\r\n     * Unlike the modern site page\r\n     */\r\n    ClientSidePage.prototype.unlike = function () {\r\n        return this.getItem().then(function (i) {\r\n            return i.unlike();\r\n        });\r\n    };\r\n    /**\r\n     * Get the liked by information for a modern site page\r\n     */\r\n    ClientSidePage.prototype.getLikedByInformation = function () {\r\n        return this.getItem().then(function (i) {\r\n            return i.getLikedByInformation();\r\n        });\r\n    };\r\n    /**\r\n     * Creates a copy of this page\r\n     *\r\n     * @param web The web where we will create the copy\r\n     * @param pageName The file name of the new page\r\n     * @param title The title of the new page\r\n     * @param publish If true the page will be published\r\n     */\r\n    ClientSidePage.prototype.copyPage = function (web, pageName, title, publish) {\r\n        if (publish === void 0) { publish = true; }\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var page;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, ClientSidePage.create(web, pageName, title, this.pageLayout)];\r\n                    case 1:\r\n                        page = _a.sent();\r\n                        page.setControls(this.getControls());\r\n                        return [4 /*yield*/, page.save(publish)];\r\n                    case 2:\r\n                        _a.sent();\r\n                        return [2 /*return*/, page];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Sets the modern page banner image\r\n     *\r\n     * @param url Url of the image to display\r\n     * @param altText Alt text to describe the image\r\n     * @param bannerProps Additional properties to control display of the banner\r\n     */\r\n    ClientSidePage.prototype.setBannerImage = function (url, props) {\r\n        this.bannerImageUrl = url;\r\n        this.bannerImageSourceType = 2; // this seems to always be true, so default?\r\n        if (objectDefinedNotNull(props)) {\r\n            if (hOP(props, \"translateX\")) {\r\n                this._layoutPart.properties.translateX = props.translateX;\r\n            }\r\n            if (hOP(props, \"translateY\")) {\r\n                this._layoutPart.properties.translateY = props.translateY;\r\n            }\r\n            if (hOP(props, \"imageSourceType\")) {\r\n                this.bannerImageSourceType = props.imageSourceType;\r\n            }\r\n            if (hOP(props, \"altText\")) {\r\n                this._layoutPart.properties.altText = props.altText;\r\n            }\r\n        }\r\n    };\r\n    ClientSidePage.prototype.getCanvasContent1 = function () {\r\n        return JSON.stringify(this.getControls());\r\n    };\r\n    ClientSidePage.prototype.getLayoutWebpartsContent = function () {\r\n        if (this._layoutPart) {\r\n            return JSON.stringify([this._layoutPart]);\r\n        }\r\n        else {\r\n            return JSON.stringify(null);\r\n        }\r\n    };\r\n    ClientSidePage.prototype.setControls = function (controls) {\r\n        if (controls && controls.length) {\r\n            for (var i = 0; i < controls.length; i++) {\r\n                // if no control type is present this is a column which we give type 0 to let us process it\r\n                var controlType = hOP(controls[i], \"controlType\") ? controls[i].controlType : 0;\r\n                switch (controlType) {\r\n                    case 0:\r\n                        // empty canvas column or page settings\r\n                        if (hOP(controls[i], \"pageSettingsSlice\")) {\r\n                            this._pageSettings = controls[i];\r\n                        }\r\n                        else {\r\n                            // we have an empty column\r\n                            this.mergeColumnToTree(new CanvasColumn(controls[i]));\r\n                        }\r\n                        break;\r\n                    case 3:\r\n                        var part = new ClientSideWebpart(controls[i]);\r\n                        this.mergePartToTree(part, part.data.position);\r\n                        break;\r\n                    case 4:\r\n                        var textData = controls[i];\r\n                        var text = new ClientSideText(textData.innerHTML, textData);\r\n                        this.mergePartToTree(text, text.data.position);\r\n                        break;\r\n                }\r\n            }\r\n            reindex(this.sections);\r\n        }\r\n    };\r\n    ClientSidePage.prototype.getControls = function () {\r\n        var _this = this;\r\n        // reindex things\r\n        reindex(this.sections);\r\n        // rollup the control changes\r\n        var canvasData = [];\r\n        this.sections.forEach(function (section) {\r\n            section.columns.forEach(function (column) {\r\n                if (column.controls.length < 1) {\r\n                    // empty column\r\n                    canvasData.push({\r\n                        displayMode: column.data.displayMode,\r\n                        emphasis: _this.getEmphasisObj(section.emphasis),\r\n                        position: column.data.position,\r\n                    });\r\n                }\r\n                else {\r\n                    column.controls.forEach(function (control) {\r\n                        control.data.emphasis = _this.getEmphasisObj(section.emphasis);\r\n                        canvasData.push(control.data);\r\n                    });\r\n                }\r\n            });\r\n        });\r\n        canvasData.push(this._pageSettings);\r\n        return canvasData;\r\n    };\r\n    ClientSidePage.prototype.getEmphasisObj = function (value) {\r\n        if (value < 1 || value > 3) {\r\n            return {};\r\n        }\r\n        return { zoneEmphasis: value };\r\n    };\r\n    /**\r\n     * Sets the comments flag for a page\r\n     *\r\n     * @param on If true comments are enabled, false they are disabled\r\n     */\r\n    ClientSidePage.prototype.setCommentsOn = function (on) {\r\n        return this.getItem().then(function (i) {\r\n            var updater = new Item(i, \"SetCommentsDisabled(\" + !on + \")\");\r\n            return updater.update({});\r\n        });\r\n    };\r\n    ClientSidePage.prototype.promoteNewsImpl = function (method) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var d;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (this.json.Id === null) {\r\n                            throw Error(\"The id for this page is null. If you want to create a new page, please use ClientSidePage.Create\");\r\n                        }\r\n                        return [4 /*yield*/, ClientSidePage.initFrom(this, \"_api/sitepages/pages(\" + this.json.Id + \")/\" + method).postCore({\r\n                                body: jsS(metadata(\"SP.Publishing.SitePage\")),\r\n                            })];\r\n                    case 1:\r\n                        d = _a.sent();\r\n                        return [2 /*return*/, d];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Merges the control into the tree of sections and columns for this page\r\n     *\r\n     * @param control The control to merge\r\n     */\r\n    ClientSidePage.prototype.mergePartToTree = function (control, positionData) {\r\n        var section = null;\r\n        var column = null;\r\n        var sectionFactor = 12;\r\n        var sectionIndex = 0;\r\n        var zoneIndex = 0;\r\n        // handle case where we don't have position data (shouldn't happen?)\r\n        if (positionData) {\r\n            if (hOP(positionData, \"zoneIndex\")) {\r\n                zoneIndex = positionData.zoneIndex;\r\n            }\r\n            if (hOP(positionData, \"sectionIndex\")) {\r\n                sectionIndex = positionData.sectionIndex;\r\n            }\r\n            if (hOP(positionData, \"sectionFactor\")) {\r\n                sectionFactor = positionData.sectionFactor;\r\n            }\r\n        }\r\n        var sections = this.sections.filter(function (s) { return s.order === zoneIndex; });\r\n        if (sections.length < 1) {\r\n            section = new CanvasSection(this, zoneIndex);\r\n            this.sections.push(section);\r\n        }\r\n        else {\r\n            section = sections[0];\r\n        }\r\n        section.emphasis = control.data.emphasis && control.data.emphasis.zoneEmphasis ? control.data.emphasis.zoneEmphasis : 0;\r\n        var columns = section.columns.filter(function (c) { return c.order === sectionIndex; });\r\n        if (columns.length < 1) {\r\n            column = section.addColumn(sectionFactor);\r\n        }\r\n        else {\r\n            column = columns[0];\r\n        }\r\n        control.column = column;\r\n        column.addControl(control);\r\n    };\r\n    /**\r\n     * Merges the supplied column into the tree\r\n     *\r\n     * @param column Column to merge\r\n     * @param position The position data for the column\r\n     */\r\n    ClientSidePage.prototype.mergeColumnToTree = function (column) {\r\n        var order = hOP(column.data, \"position\") && hOP(column.data.position, \"zoneIndex\") ? column.data.position.zoneIndex : 0;\r\n        var section = null;\r\n        var sections = this.sections.filter(function (s) { return s.order === order; });\r\n        if (sections.length < 1) {\r\n            section = new CanvasSection(this, order);\r\n            section.emphasis = column.data.emphasis.zoneEmphasis || 0;\r\n            this.sections.push(section);\r\n        }\r\n        else {\r\n            section = sections[0];\r\n        }\r\n        column.section = section;\r\n        section.columns.push(column);\r\n    };\r\n    ClientSidePage.prototype.getItem = function () {\r\n        var _this = this;\r\n        var selects = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            selects[_i] = arguments[_i];\r\n        }\r\n        var initer = ClientSidePage.initFrom(this, \"/_api/lists/EnsureClientRenderedSitePagesLibrary\").select(\"EnableModeration\", \"EnableMinorVersions\", \"Id\");\r\n        return initer.postCore().then(function (listData) {\r\n            var item = (new List(listData[\"odata.id\"])).configureFrom(_this).items.getById(_this.json.Id);\r\n            return item.select.apply(item, selects).get().then(function (d) {\r\n                return extend((new Item(odataUrlFrom(d))).configureFrom(_this), d);\r\n            });\r\n        });\r\n    };\r\n    return ClientSidePage;\r\n}(SharePointQueryable));\r\nexport { ClientSidePage };\r\nvar CanvasSection = /** @class */ (function () {\r\n    function CanvasSection(page, order, columns, _emphasis) {\r\n        if (columns === void 0) { columns = []; }\r\n        if (_emphasis === void 0) { _emphasis = 0; }\r\n        this.page = page;\r\n        this.columns = columns;\r\n        this._emphasis = _emphasis;\r\n        this._memId = getGUID();\r\n        this._order = order;\r\n    }\r\n    Object.defineProperty(CanvasSection.prototype, \"order\", {\r\n        get: function () {\r\n            return this._order;\r\n        },\r\n        set: function (value) {\r\n            this._order = value;\r\n            for (var i = 0; i < this.columns.length; i++) {\r\n                this.columns[i].data.position.zoneIndex = value;\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CanvasSection.prototype, \"defaultColumn\", {\r\n        /**\r\n         * Default column (this.columns[0]) for this section\r\n         */\r\n        get: function () {\r\n            if (this.columns.length < 1) {\r\n                this.addColumn(12);\r\n            }\r\n            return this.columns[0];\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Adds a new column to this section\r\n     */\r\n    CanvasSection.prototype.addColumn = function (factor) {\r\n        var column = new CanvasColumn();\r\n        column.section = this;\r\n        column.data.position.zoneIndex = this.order;\r\n        column.data.position.sectionFactor = factor;\r\n        column.order = getNextOrder(this.columns);\r\n        this.columns.push(column);\r\n        return column;\r\n    };\r\n    /**\r\n     * Adds a control to the default column for this section\r\n     *\r\n     * @param control Control to add to the default column\r\n     */\r\n    CanvasSection.prototype.addControl = function (control) {\r\n        this.defaultColumn.addControl(control);\r\n        return this;\r\n    };\r\n    Object.defineProperty(CanvasSection.prototype, \"emphasis\", {\r\n        get: function () {\r\n            return this._emphasis;\r\n        },\r\n        set: function (value) {\r\n            this._emphasis = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Removes this section and all contained columns and controls from the collection\r\n     */\r\n    CanvasSection.prototype.remove = function () {\r\n        var _this = this;\r\n        this.page.sections = this.page.sections.filter(function (section) { return section._memId !== _this._memId; });\r\n        reindex(this.page.sections);\r\n    };\r\n    return CanvasSection;\r\n}());\r\nexport { CanvasSection };\r\nvar CanvasColumn = /** @class */ (function () {\r\n    function CanvasColumn(json, controls) {\r\n        if (json === void 0) { json = JSON.parse(JSON.stringify(CanvasColumn.Default)); }\r\n        if (controls === void 0) { controls = []; }\r\n        this.json = json;\r\n        this.controls = controls;\r\n        this._section = null;\r\n        this._memId = getGUID();\r\n    }\r\n    Object.defineProperty(CanvasColumn.prototype, \"data\", {\r\n        get: function () {\r\n            return this.json;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CanvasColumn.prototype, \"section\", {\r\n        get: function () {\r\n            return this._section;\r\n        },\r\n        set: function (section) {\r\n            this._section = section;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CanvasColumn.prototype, \"order\", {\r\n        get: function () {\r\n            return this.data.position.sectionIndex;\r\n        },\r\n        set: function (value) {\r\n            this.data.position.sectionIndex = value;\r\n            for (var i = 0; i < this.controls.length; i++) {\r\n                this.controls[i].data.position.zoneIndex = this.data.position.zoneIndex;\r\n                this.controls[i].data.position.sectionIndex = value;\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CanvasColumn.prototype, \"factor\", {\r\n        get: function () {\r\n            return this.data.position.sectionFactor;\r\n        },\r\n        set: function (value) {\r\n            this.data.position.sectionFactor = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    CanvasColumn.prototype.addControl = function (control) {\r\n        control.column = this;\r\n        this.controls.push(control);\r\n        return this;\r\n    };\r\n    CanvasColumn.prototype.getControl = function (index) {\r\n        return this.controls[index];\r\n    };\r\n    CanvasColumn.prototype.remove = function () {\r\n        var _this = this;\r\n        this.section.columns = this.section.columns.filter(function (column) { return column._memId !== _this._memId; });\r\n        reindex(this.section.columns);\r\n    };\r\n    CanvasColumn.Default = {\r\n        controlType: 0,\r\n        displayMode: 2,\r\n        emphasis: {},\r\n        position: {\r\n            layoutIndex: 1,\r\n            sectionFactor: 12,\r\n            sectionIndex: 1,\r\n            zoneIndex: 1,\r\n        },\r\n    };\r\n    return CanvasColumn;\r\n}());\r\nexport { CanvasColumn };\r\nvar ColumnControl = /** @class */ (function () {\r\n    function ColumnControl(json) {\r\n        this.json = json;\r\n    }\r\n    Object.defineProperty(ColumnControl.prototype, \"id\", {\r\n        get: function () {\r\n            return this.json.id;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ColumnControl.prototype, \"data\", {\r\n        get: function () {\r\n            return this.json;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ColumnControl.prototype, \"column\", {\r\n        get: function () {\r\n            return this._column;\r\n        },\r\n        set: function (value) {\r\n            this._column = value;\r\n            this.onColumnChange(this._column);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ColumnControl.prototype.remove = function () {\r\n        var _this = this;\r\n        this.column.controls = this.column.controls.filter(function (control) { return control.id !== _this.id; });\r\n        reindex(this.column.controls);\r\n    };\r\n    ColumnControl.prototype.setData = function (data) {\r\n        this.json = data;\r\n    };\r\n    return ColumnControl;\r\n}());\r\nexport { ColumnControl };\r\nvar ClientSideText = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ClientSideText, _super);\r\n    function ClientSideText(text, json) {\r\n        if (json === void 0) { json = JSON.parse(JSON.stringify(ClientSideText.Default)); }\r\n        var _this = this;\r\n        if (stringIsNullOrEmpty(json.id)) {\r\n            json.id = getGUID();\r\n            json.anchorComponentId = json.id;\r\n        }\r\n        _this = _super.call(this, json) || this;\r\n        _this.text = text;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(ClientSideText.prototype, \"text\", {\r\n        get: function () {\r\n            return this.data.innerHTML;\r\n        },\r\n        set: function (value) {\r\n            if (!value.startsWith(\"<p>\")) {\r\n                value = \"<p>\" + value + \"</p>\";\r\n            }\r\n            this.data.innerHTML = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ClientSideText.prototype, \"order\", {\r\n        get: function () {\r\n            return this.data.position.controlIndex;\r\n        },\r\n        set: function (value) {\r\n            this.data.position.controlIndex = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ClientSideText.prototype.onColumnChange = function (col) {\r\n        this.data.position.sectionFactor = col.factor;\r\n        this.data.position.controlIndex = getNextOrder(col.controls);\r\n        this.data.position.zoneIndex = col.data.position.zoneIndex;\r\n        this.data.position.sectionIndex = col.order;\r\n    };\r\n    ClientSideText.Default = {\r\n        addedFromPersistedData: false,\r\n        anchorComponentId: \"\",\r\n        controlType: 4,\r\n        displayMode: 2,\r\n        editorType: \"CKEditor\",\r\n        emphasis: {},\r\n        id: \"\",\r\n        innerHTML: \"\",\r\n        position: {\r\n            controlIndex: 1,\r\n            layoutIndex: 1,\r\n            sectionFactor: 12,\r\n            sectionIndex: 1,\r\n            zoneIndex: 1,\r\n        },\r\n    };\r\n    return ClientSideText;\r\n}(ColumnControl));\r\nexport { ClientSideText };\r\nvar ClientSideWebpart = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ClientSideWebpart, _super);\r\n    function ClientSideWebpart(json) {\r\n        if (json === void 0) { json = JSON.parse(JSON.stringify(ClientSideWebpart.Default)); }\r\n        return _super.call(this, json) || this;\r\n    }\r\n    ClientSideWebpart.fromComponentDef = function (definition) {\r\n        var part = new ClientSideWebpart();\r\n        part.import(definition);\r\n        return part;\r\n    };\r\n    Object.defineProperty(ClientSideWebpart.prototype, \"title\", {\r\n        get: function () {\r\n            return this.data.webPartData.title;\r\n        },\r\n        set: function (value) {\r\n            this.data.webPartData.title = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ClientSideWebpart.prototype, \"description\", {\r\n        get: function () {\r\n            return this.data.webPartData.description;\r\n        },\r\n        set: function (value) {\r\n            this.data.webPartData.description = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ClientSideWebpart.prototype, \"order\", {\r\n        get: function () {\r\n            return this.data.position.controlIndex;\r\n        },\r\n        set: function (value) {\r\n            this.data.position.controlIndex = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ClientSideWebpart.prototype, \"height\", {\r\n        get: function () {\r\n            return this.data.reservedHeight;\r\n        },\r\n        set: function (value) {\r\n            this.data.reservedHeight = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ClientSideWebpart.prototype, \"width\", {\r\n        get: function () {\r\n            return this.data.reservedWidth;\r\n        },\r\n        set: function (value) {\r\n            this.data.reservedWidth = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ClientSideWebpart.prototype, \"dataVersion\", {\r\n        get: function () {\r\n            return this.data.webPartData.dataVersion;\r\n        },\r\n        set: function (value) {\r\n            this.data.webPartData.dataVersion = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ClientSideWebpart.prototype.setProperties = function (properties) {\r\n        this.data.webPartData.properties = extend(this.data.webPartData.properties, properties);\r\n        return this;\r\n    };\r\n    ClientSideWebpart.prototype.getProperties = function () {\r\n        return this.data.webPartData.properties;\r\n    };\r\n    ClientSideWebpart.prototype.onColumnChange = function (col) {\r\n        this.data.position = {\r\n            controlIndex: getNextOrder(col.controls),\r\n            sectionFactor: col.factor,\r\n            sectionIndex: col.data.position.sectionIndex,\r\n            zoneIndex: col.data.position.zoneIndex,\r\n        };\r\n    };\r\n    ClientSideWebpart.prototype.import = function (component) {\r\n        var id = getGUID();\r\n        var componendId = component.Id.replace(/^\\{|\\}$/g, \"\").toLowerCase();\r\n        var manifest = JSON.parse(component.Manifest);\r\n        var preconfiguredEntries = manifest.preconfiguredEntries[0];\r\n        this.setData(Object.assign({}, this.data, {\r\n            id: id,\r\n            webPartData: {\r\n                dataVersion: \"1.0\",\r\n                description: preconfiguredEntries.description.default,\r\n                id: componendId,\r\n                instanceId: id,\r\n                properties: preconfiguredEntries.properties,\r\n                title: preconfiguredEntries.title.default,\r\n            },\r\n            webPartId: componendId,\r\n        }));\r\n    };\r\n    ClientSideWebpart.Default = {\r\n        addedFromPersistedData: false,\r\n        controlType: 3,\r\n        displayMode: 2,\r\n        emphasis: {},\r\n        id: null,\r\n        position: {\r\n            controlIndex: 1,\r\n            sectionFactor: 12,\r\n            sectionIndex: 1,\r\n            zoneIndex: 1,\r\n        },\r\n        reservedHeight: 500,\r\n        reservedWidth: 500,\r\n        webPartData: null,\r\n        webPartId: null,\r\n    };\r\n    return ClientSideWebpart;\r\n}(ColumnControl));\r\nexport { ClientSideWebpart };\r\n//# sourceMappingURL=clientsidepages.js.map","import * as tslib_1 from \"tslib\";\r\nimport { ODataBatch } from \"@pnp/odata\";\r\nimport { getGUID, isUrlAbsolute, combine, mergeHeaders, hOP } from \"@pnp/common\";\r\nimport { Logger } from \"@pnp/logging\";\r\nimport { SPHttpClient } from \"./net/sphttpclient\";\r\nimport { SPRuntimeConfig } from \"./config/splibconfig\";\r\nimport { toAbsoluteUrl } from \"./utils/toabsoluteurl\";\r\n/**\r\n * Manages a batch of OData operations\r\n */\r\nvar SPBatch = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SPBatch, _super);\r\n    function SPBatch(baseUrl) {\r\n        var _this = _super.call(this) || this;\r\n        _this.baseUrl = baseUrl;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Parses the response from a batch request into an array of Response instances\r\n     *\r\n     * @param body Text body of the response from the batch request\r\n     */\r\n    SPBatch.ParseResponse = function (body) {\r\n        return new Promise(function (resolve, reject) {\r\n            var responses = [];\r\n            var header = \"--batchresponse_\";\r\n            // Ex. \"HTTP/1.1 500 Internal Server Error\"\r\n            var statusRegExp = new RegExp(\"^HTTP/[0-9.]+ +([0-9]+) +(.*)\", \"i\");\r\n            var lines = body.split(\"\\n\");\r\n            var state = \"batch\";\r\n            var status;\r\n            var statusText;\r\n            for (var i = 0; i < lines.length; ++i) {\r\n                var line = lines[i];\r\n                switch (state) {\r\n                    case \"batch\":\r\n                        if (line.substr(0, header.length) === header) {\r\n                            state = \"batchHeaders\";\r\n                        }\r\n                        else {\r\n                            if (line.trim() !== \"\") {\r\n                                throw Error(\"Invalid response, line \" + i);\r\n                            }\r\n                        }\r\n                        break;\r\n                    case \"batchHeaders\":\r\n                        if (line.trim() === \"\") {\r\n                            state = \"status\";\r\n                        }\r\n                        break;\r\n                    case \"status\":\r\n                        var parts = statusRegExp.exec(line);\r\n                        if (parts.length !== 3) {\r\n                            throw Error(\"Invalid status, line \" + i);\r\n                        }\r\n                        status = parseInt(parts[1], 10);\r\n                        statusText = parts[2];\r\n                        state = \"statusHeaders\";\r\n                        break;\r\n                    case \"statusHeaders\":\r\n                        if (line.trim() === \"\") {\r\n                            state = \"body\";\r\n                        }\r\n                        break;\r\n                    case \"body\":\r\n                        responses.push((status === 204) ? new Response() : new Response(line, { status: status, statusText: statusText }));\r\n                        state = \"batch\";\r\n                        break;\r\n                }\r\n            }\r\n            if (state !== \"status\") {\r\n                reject(Error(\"Unexpected end of input\"));\r\n            }\r\n            resolve(responses);\r\n        });\r\n    };\r\n    SPBatch.prototype.executeImpl = function () {\r\n        var _this = this;\r\n        Logger.write(\"[\" + this.batchId + \"] (\" + (new Date()).getTime() + \") Executing batch with \" + this.requests.length + \" requests.\", 1 /* Info */);\r\n        // if we don't have any requests, don't bother sending anything\r\n        // this could be due to caching further upstream, or just an empty batch\r\n        if (this.requests.length < 1) {\r\n            Logger.write(\"Resolving empty batch.\", 1 /* Info */);\r\n            return Promise.resolve();\r\n        }\r\n        // creating the client here allows the url to be populated for nodejs client as well as potentially\r\n        // any other hacks needed for other types of clients. Essentially allows the absoluteRequestUrl\r\n        // below to be correct\r\n        var client = new SPHttpClient();\r\n        // due to timing we need to get the absolute url here so we can use it for all the individual requests\r\n        // and for sending the entire batch\r\n        return toAbsoluteUrl(this.baseUrl).then(function (absoluteRequestUrl) {\r\n            // build all the requests, send them, pipe results in order to parsers\r\n            var batchBody = [];\r\n            var currentChangeSetId = \"\";\r\n            for (var i = 0; i < _this.requests.length; i++) {\r\n                var reqInfo = _this.requests[i];\r\n                if (reqInfo.method === \"GET\") {\r\n                    if (currentChangeSetId.length > 0) {\r\n                        // end an existing change set\r\n                        batchBody.push(\"--changeset_\" + currentChangeSetId + \"--\\n\\n\");\r\n                        currentChangeSetId = \"\";\r\n                    }\r\n                    batchBody.push(\"--batch_\" + _this.batchId + \"\\n\");\r\n                }\r\n                else {\r\n                    if (currentChangeSetId.length < 1) {\r\n                        // start new change set\r\n                        currentChangeSetId = getGUID();\r\n                        batchBody.push(\"--batch_\" + _this.batchId + \"\\n\");\r\n                        batchBody.push(\"Content-Type: multipart/mixed; boundary=\\\"changeset_\" + currentChangeSetId + \"\\\"\\n\\n\");\r\n                    }\r\n                    batchBody.push(\"--changeset_\" + currentChangeSetId + \"\\n\");\r\n                }\r\n                // common batch part prefix\r\n                batchBody.push(\"Content-Type: application/http\\n\");\r\n                batchBody.push(\"Content-Transfer-Encoding: binary\\n\\n\");\r\n                var headers = new Headers();\r\n                // this is the url of the individual request within the batch\r\n                var url = isUrlAbsolute(reqInfo.url) ? reqInfo.url : combine(absoluteRequestUrl, reqInfo.url);\r\n                Logger.write(\"[\" + _this.batchId + \"] (\" + (new Date()).getTime() + \") Adding request \" + reqInfo.method + \" \" + url + \" to batch.\", 0 /* Verbose */);\r\n                if (reqInfo.method !== \"GET\") {\r\n                    var method = reqInfo.method;\r\n                    var castHeaders = reqInfo.options.headers;\r\n                    if (hOP(reqInfo, \"options\") && hOP(reqInfo.options, \"headers\") && castHeaders[\"X-HTTP-Method\"] !== undefined) {\r\n                        method = castHeaders[\"X-HTTP-Method\"];\r\n                        delete castHeaders[\"X-HTTP-Method\"];\r\n                    }\r\n                    batchBody.push(method + \" \" + url + \" HTTP/1.1\\n\");\r\n                    headers.set(\"Content-Type\", \"application/json;odata=verbose;charset=utf-8\");\r\n                }\r\n                else {\r\n                    batchBody.push(reqInfo.method + \" \" + url + \" HTTP/1.1\\n\");\r\n                }\r\n                // merge global config headers\r\n                mergeHeaders(headers, SPRuntimeConfig.headers);\r\n                // merge per-request headers\r\n                if (reqInfo.options) {\r\n                    mergeHeaders(headers, reqInfo.options.headers);\r\n                }\r\n                // lastly we apply any default headers we need that may not exist\r\n                if (!headers.has(\"Accept\")) {\r\n                    headers.append(\"Accept\", \"application/json\");\r\n                }\r\n                if (!headers.has(\"Content-Type\")) {\r\n                    headers.append(\"Content-Type\", \"application/json;odata=verbose;charset=utf-8\");\r\n                }\r\n                if (!headers.has(\"X-ClientService-ClientTag\")) {\r\n                    headers.append(\"X-ClientService-ClientTag\", \"PnPCoreJS:@pnp-1.3.4\");\r\n                }\r\n                // write headers into batch body\r\n                headers.forEach(function (value, name) {\r\n                    batchBody.push(name + \": \" + value + \"\\n\");\r\n                });\r\n                batchBody.push(\"\\n\");\r\n                if (reqInfo.options.body) {\r\n                    batchBody.push(reqInfo.options.body + \"\\n\\n\");\r\n                }\r\n            }\r\n            if (currentChangeSetId.length > 0) {\r\n                // Close the changeset\r\n                batchBody.push(\"--changeset_\" + currentChangeSetId + \"--\\n\\n\");\r\n                currentChangeSetId = \"\";\r\n            }\r\n            batchBody.push(\"--batch_\" + _this.batchId + \"--\\n\");\r\n            var batchOptions = {\r\n                \"body\": batchBody.join(\"\"),\r\n                \"headers\": {\r\n                    \"Content-Type\": \"multipart/mixed; boundary=batch_\" + _this.batchId,\r\n                },\r\n                \"method\": \"POST\",\r\n            };\r\n            Logger.write(\"[\" + _this.batchId + \"] (\" + (new Date()).getTime() + \") Sending batch request.\", 1 /* Info */);\r\n            return client.fetch(combine(absoluteRequestUrl, \"/_api/$batch\"), batchOptions)\r\n                .then(function (r) { return r.text(); })\r\n                .then(SPBatch.ParseResponse)\r\n                .then(function (responses) {\r\n                if (responses.length !== _this.requests.length) {\r\n                    throw Error(\"Could not properly parse responses to match requests in batch.\");\r\n                }\r\n                Logger.write(\"[\" + _this.batchId + \"] (\" + (new Date()).getTime() + \") Resolving batched requests.\", 1 /* Info */);\r\n                return responses.reduce(function (chain, response, index) {\r\n                    var request = _this.requests[index];\r\n                    Logger.write(\"[\" + request.id + \"] (\" + (new Date()).getTime() + \") Resolving request in batch \" + _this.batchId + \".\", 1 /* Info */);\r\n                    return chain.then(function (_) { return request.parser.parse(response).then(request.resolve).catch(request.reject); });\r\n                }, Promise.resolve());\r\n            });\r\n        });\r\n    };\r\n    return SPBatch;\r\n}(ODataBatch));\r\nexport { SPBatch };\r\n//# sourceMappingURL=batch.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryableInstance, SharePointQueryableCollection, defaultPath } from \"./sharepointqueryable\";\r\nimport { jsS } from \"@pnp/common\";\r\n/**\r\n * Describes a collection of List objects\r\n *\r\n */\r\nvar Features = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Features, _super);\r\n    function Features() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Features_1 = Features;\r\n    /**\r\n     * Adds a new list to the collection\r\n     *\r\n     * @param id The Id of the feature (GUID)\r\n     * @param force If true the feature activation will be forced\r\n     */\r\n    Features.prototype.add = function (id, force) {\r\n        var _this = this;\r\n        if (force === void 0) { force = false; }\r\n        return this.clone(Features_1, \"add\").postCore({\r\n            body: jsS({\r\n                featdefScope: 0,\r\n                featureId: id,\r\n                force: force,\r\n            }),\r\n        }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                feature: _this.getById(id),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Gets a list from the collection by guid id\r\n     *\r\n     * @param id The Id of the feature (GUID)\r\n     */\r\n    Features.prototype.getById = function (id) {\r\n        var feature = new Feature(this);\r\n        feature.concat(\"('\" + id + \"')\");\r\n        return feature;\r\n    };\r\n    /**\r\n     * Removes (deactivates) a feature from the collection\r\n     *\r\n     * @param id The Id of the feature (GUID)\r\n     * @param force If true the feature deactivation will be forced\r\n     */\r\n    Features.prototype.remove = function (id, force) {\r\n        if (force === void 0) { force = false; }\r\n        return this.clone(Features_1, \"remove\").postCore({\r\n            body: jsS({\r\n                featureId: id,\r\n                force: force,\r\n            }),\r\n        });\r\n    };\r\n    var Features_1;\r\n    Features = Features_1 = tslib_1.__decorate([\r\n        defaultPath(\"features\")\r\n    ], Features);\r\n    return Features;\r\n}(SharePointQueryableCollection));\r\nexport { Features };\r\nvar Feature = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Feature, _super);\r\n    function Feature() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Removes (deactivates) a feature from the collection\r\n     *\r\n     * @param force If true the feature deactivation will be forced\r\n     */\r\n    Feature.prototype.deactivate = function (force) {\r\n        var _this = this;\r\n        if (force === void 0) { force = false; }\r\n        var removeDependency = this.addBatchDependency();\r\n        var idGet = new Feature(this).select(\"DefinitionId\");\r\n        return idGet.get().then(function (feature) {\r\n            var promise = _this.getParent(Features, _this.parentUrl, \"\", _this.batch).remove(feature.DefinitionId, force);\r\n            removeDependency();\r\n            return promise;\r\n        });\r\n    };\r\n    return Feature;\r\n}(SharePointQueryableInstance));\r\nexport { Feature };\r\n//# sourceMappingURL=features.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryable, SharePointQueryableInstance, defaultPath } from \"./sharepointqueryable\";\r\nimport { Web } from \"./webs\";\r\nimport { UserCustomActions } from \"./usercustomactions\";\r\nimport { SPBatch } from \"./batch\";\r\nimport { Features } from \"./features\";\r\nimport { hOP, jsS, extend } from \"@pnp/common\";\r\nimport { SPHttpClient } from \"./net/sphttpclient\";\r\n/**\r\n * Describes a site collection\r\n *\r\n */\r\nvar Site = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Site, _super);\r\n    function Site() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Site_1 = Site;\r\n    Object.defineProperty(Site.prototype, \"rootWeb\", {\r\n        /**\r\n         * Gets the root web of the site collection\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Web(this, \"rootweb\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Site.prototype, \"features\", {\r\n        /**\r\n         * Gets the active features for this site collection\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Features(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Site.prototype, \"userCustomActions\", {\r\n        /**\r\n         * Gets all custom actions for this site collection\r\n         *\r\n         */\r\n        get: function () {\r\n            return new UserCustomActions(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets a Web instance representing the root web of the site collection\r\n     * correctly setup for chaining within the library\r\n     */\r\n    Site.prototype.getRootWeb = function () {\r\n        return this.rootWeb.select(\"Url\").get().then(function (web) { return new Web(web.Url); });\r\n    };\r\n    /**\r\n     * Gets the context information for this site collection\r\n     */\r\n    Site.prototype.getContextInfo = function () {\r\n        var q = new Site_1(this.parentUrl, \"_api/contextinfo\");\r\n        return q.postCore().then(function (data) {\r\n            if (hOP(data, \"GetContextWebInformation\")) {\r\n                var info = data.GetContextWebInformation;\r\n                info.SupportedSchemaVersions = info.SupportedSchemaVersions.results;\r\n                return info;\r\n            }\r\n            else {\r\n                return data;\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Gets the document libraries on a site. Static method. (SharePoint Online only)\r\n     *\r\n     * @param absoluteWebUrl The absolute url of the web whose document libraries should be returned\r\n     */\r\n    Site.prototype.getDocumentLibraries = function (absoluteWebUrl) {\r\n        var q = new SharePointQueryable(\"\", \"_api/sp.web.getdocumentlibraries(@v)\");\r\n        q.query.set(\"@v\", \"'\" + absoluteWebUrl + \"'\");\r\n        return q.get().then(function (data) {\r\n            if (hOP(data, \"GetDocumentLibraries\")) {\r\n                return data.GetDocumentLibraries;\r\n            }\r\n            else {\r\n                return data;\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Gets the site url from a page url\r\n     *\r\n     * @param absolutePageUrl The absolute url of the page\r\n     */\r\n    Site.prototype.getWebUrlFromPageUrl = function (absolutePageUrl) {\r\n        var q = new SharePointQueryable(\"\", \"_api/sp.web.getweburlfrompageurl(@v)\");\r\n        q.query.set(\"@v\", \"'\" + absolutePageUrl + \"'\");\r\n        return q.get().then(function (data) {\r\n            if (hOP(data, \"GetWebUrlFromPageUrl\")) {\r\n                return data.GetWebUrlFromPageUrl;\r\n            }\r\n            else {\r\n                return data;\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Deletes the current site\r\n     *\r\n     */\r\n    Site.prototype.delete = function () {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var site, q;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.clone(Site_1, \"\").select(\"Id\").get()];\r\n                    case 1:\r\n                        site = _a.sent();\r\n                        q = new Site_1(this.parentUrl, \"_api/SPSiteManager/Delete\");\r\n                        return [4 /*yield*/, q.postCore({\r\n                                body: jsS({\r\n                                    siteId: site.Id,\r\n                                }),\r\n                            })];\r\n                    case 2:\r\n                        _a.sent();\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Creates a new batch for requests within the context of this site collection\r\n     *\r\n     */\r\n    Site.prototype.createBatch = function () {\r\n        return new SPBatch(this.parentUrl);\r\n    };\r\n    /**\r\n     * Opens a web by id (using POST)\r\n     *\r\n     * @param webId The GUID id of the web to open\r\n     */\r\n    Site.prototype.openWebById = function (webId) {\r\n        return this.clone(Site_1, \"openWebById('\" + webId + \"')\").postCore().then(function (d) { return ({\r\n            data: d,\r\n            web: Web.fromUrl(d[\"odata.id\"] || d.__metadata.uri),\r\n        }); });\r\n    };\r\n    /**\r\n     * Associates a site collection to a hub site.\r\n     *\r\n     * @param siteId Id of the hub site collection you want to join.\r\n     * If you want to disassociate the site collection from hub site, then\r\n     * pass the siteId as 00000000-0000-0000-0000-000000000000\r\n     */\r\n    Site.prototype.joinHubSite = function (siteId) {\r\n        return this.clone(Site_1, \"joinHubSite('\" + siteId + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Registers the current site collection as hub site collection\r\n     */\r\n    Site.prototype.registerHubSite = function () {\r\n        return this.clone(Site_1, \"registerHubSite\").postCore();\r\n    };\r\n    /**\r\n     * Unregisters the current site collection as hub site collection.\r\n     */\r\n    Site.prototype.unRegisterHubSite = function () {\r\n        return this.clone(Site_1, \"unRegisterHubSite\").postCore();\r\n    };\r\n    /**\r\n     * Creates a Modern communication site.\r\n     *\r\n     * @param title The title of the site to create\r\n     * @param lcid The language to use for the site. If not specified will default to 1033 (English).\r\n     * @param shareByEmailEnabled If set to true, it will enable sharing files via Email. By default it is set to false\r\n     * @param url The fully qualified URL (e.g. https://yourtenant.sharepoint.com/sites/mysitecollection) of the site.\r\n     * @param description The description of the communication site.\r\n     * @param classification The Site classification to use. For instance 'Contoso Classified'. See https://www.youtube.com/watch?v=E-8Z2ggHcS0 for more information\r\n     * @param siteDesignId The Guid of the site design to be used.\r\n     *                     You can use the below default OOTB GUIDs:\r\n     *                     Topic: 00000000-0000-0000-0000-000000000000\r\n     *                     Showcase: 6142d2a0-63a5-4ba0-aede-d9fefca2c767\r\n     *                     Blank: f6cc5403-0d63-442e-96c0-285923709ffc\r\n     * @param owner Required when creating the site using app-only context\r\n     */\r\n    Site.prototype.createCommunicationSite = function (title, lcid, shareByEmailEnabled, url, description, classification, siteDesignId, hubSiteId, owner) {\r\n        var _this = this;\r\n        if (lcid === void 0) { lcid = 1033; }\r\n        if (shareByEmailEnabled === void 0) { shareByEmailEnabled = false; }\r\n        if (description === void 0) { description = \"\"; }\r\n        if (classification === void 0) { classification = \"\"; }\r\n        if (siteDesignId === void 0) { siteDesignId = \"00000000-0000-0000-0000-000000000000\"; }\r\n        if (hubSiteId === void 0) { hubSiteId = \"00000000-0000-0000-0000-000000000000\"; }\r\n        var props = {\r\n            Classification: classification,\r\n            Description: description,\r\n            HubSiteId: hubSiteId,\r\n            Lcid: lcid,\r\n            Owner: owner,\r\n            ShareByEmailEnabled: shareByEmailEnabled,\r\n            SiteDesignId: siteDesignId,\r\n            Title: title,\r\n            Url: url,\r\n            WebTemplate: \"SITEPAGEPUBLISHING#0\",\r\n            WebTemplateExtensionId: \"00000000-0000-0000-0000-000000000000\",\r\n        };\r\n        var postBody = jsS({\r\n            \"request\": extend({\r\n                \"__metadata\": { \"type\": \"Microsoft.SharePoint.Portal.SPSiteCreationRequest\" },\r\n            }, props),\r\n        });\r\n        return this.getRootWeb().then(function (d) { return tslib_1.__awaiter(_this, void 0, void 0, function () {\r\n            var client, methodUrl;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                client = new SPHttpClient();\r\n                methodUrl = d.parentUrl + \"/_api/SPSiteManager/Create\";\r\n                return [2 /*return*/, client.post(methodUrl, {\r\n                        body: postBody,\r\n                        headers: {\r\n                            \"Accept\": \"application/json;odata=verbose\",\r\n                            \"Content-Type\": \"application/json;odata=verbose;charset=utf-8\",\r\n                        },\r\n                    }).then(function (r) { return r.json(); })];\r\n            });\r\n        }); });\r\n    };\r\n    /**\r\n     * Creates a Modern team site backed by Office 365 group. For use in SP Online only. This will not work with App-only tokens\r\n     *\r\n     * @param displayName The title or display name of the Modern team site to be created\r\n     * @param alias Alias of the underlying Office 365 Group\r\n     * @param isPublic Defines whether the Office 365 Group will be public (default), or private.\r\n     * @param lcid The language to use for the site. If not specified will default to English (1033).\r\n     * @param description The description of the site to be created.\r\n     * @param classification The Site classification to use. For instance 'Contoso Classified'. See https://www.youtube.com/watch?v=E-8Z2ggHcS0 for more information\r\n     * @param owners The Owners of the site to be created\r\n     * @param siteDesignId The ID of the site design to apply to the new site\r\n     */\r\n    Site.prototype.createModernTeamSite = function (displayName, alias, isPublic, lcid, description, classification, owners, hubSiteId, siteDesignId) {\r\n        var _this = this;\r\n        if (isPublic === void 0) { isPublic = true; }\r\n        if (lcid === void 0) { lcid = 1033; }\r\n        if (description === void 0) { description = \"\"; }\r\n        if (classification === void 0) { classification = \"\"; }\r\n        if (hubSiteId === void 0) { hubSiteId = \"00000000-0000-0000-0000-000000000000\"; }\r\n        var postBody = {\r\n            alias: alias,\r\n            displayName: displayName,\r\n            isPublic: isPublic,\r\n            optionalParams: {\r\n                Classification: classification,\r\n                CreationOptions: {\r\n                    \"results\": [\"SPSiteLanguage:\" + lcid, \"HubSiteId:\" + hubSiteId],\r\n                },\r\n                Description: description,\r\n                Owners: {\r\n                    \"results\": owners ? owners : [],\r\n                },\r\n            },\r\n        };\r\n        if (siteDesignId) {\r\n            postBody.optionalParams.CreationOptions.results.push(\"implicit_formula_292aa8a00786498a87a5ca52d9f4214a_\" + siteDesignId);\r\n        }\r\n        return this.getRootWeb().then(function (d) { return tslib_1.__awaiter(_this, void 0, void 0, function () {\r\n            var client, methodUrl;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                client = new SPHttpClient();\r\n                methodUrl = d.parentUrl + \"/_api/GroupSiteManager/CreateGroupEx\";\r\n                return [2 /*return*/, client.post(methodUrl, {\r\n                        body: jsS(postBody),\r\n                        headers: {\r\n                            \"Accept\": \"application/json;odata=verbose\",\r\n                            \"Content-Type\": \"application/json;odata=verbose;charset=utf-8\",\r\n                        },\r\n                    }).then(function (r) { return r.json(); })];\r\n            });\r\n        }); });\r\n    };\r\n    var Site_1;\r\n    Site = Site_1 = tslib_1.__decorate([\r\n        defaultPath(\"_api/site\")\r\n    ], Site);\r\n    return Site;\r\n}(SharePointQueryableInstance));\r\nexport { Site };\r\n//# sourceMappingURL=site.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryable, SharePointQueryableInstance, SharePointQueryableCollection, defaultPath } from \"./sharepointqueryable\";\r\nimport { jsS, extend } from \"@pnp/common\";\r\nimport { metadata } from \"./utils/metadata\";\r\n/**\r\n * Represents a collection of navigation nodes\r\n *\r\n */\r\nvar NavigationNodes = /** @class */ (function (_super) {\r\n    tslib_1.__extends(NavigationNodes, _super);\r\n    function NavigationNodes() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets a navigation node by id\r\n     *\r\n     * @param id The id of the node\r\n     */\r\n    NavigationNodes.prototype.getById = function (id) {\r\n        var node = new NavigationNode(this);\r\n        node.concat(\"(\" + id + \")\");\r\n        return node;\r\n    };\r\n    /**\r\n     * Adds a new node to the collection\r\n     *\r\n     * @param title Display name of the node\r\n     * @param url The url of the node\r\n     * @param visible If true the node is visible, otherwise it is hidden (default: true)\r\n     */\r\n    NavigationNodes.prototype.add = function (title, url, visible) {\r\n        var _this = this;\r\n        if (visible === void 0) { visible = true; }\r\n        var postBody = jsS(extend(metadata(\"SP.NavigationNode\"), {\r\n            IsVisible: visible,\r\n            Title: title,\r\n            Url: url,\r\n        }));\r\n        return this.clone(NavigationNodes, null).postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                node: _this.getById(data.Id),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Moves a node to be after another node in the navigation\r\n     *\r\n     * @param nodeId Id of the node to move\r\n     * @param previousNodeId Id of the node after which we move the node specified by nodeId\r\n     */\r\n    NavigationNodes.prototype.moveAfter = function (nodeId, previousNodeId) {\r\n        var postBody = jsS({\r\n            nodeId: nodeId,\r\n            previousNodeId: previousNodeId,\r\n        });\r\n        return this.clone(NavigationNodes, \"MoveAfter\").postCore({ body: postBody });\r\n    };\r\n    return NavigationNodes;\r\n}(SharePointQueryableCollection));\r\nexport { NavigationNodes };\r\n/**\r\n * Represents an instance of a navigation node\r\n *\r\n */\r\nvar NavigationNode = /** @class */ (function (_super) {\r\n    tslib_1.__extends(NavigationNode, _super);\r\n    function NavigationNode() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(NavigationNode.prototype, \"children\", {\r\n        /**\r\n         * Represents the child nodes of this node\r\n         */\r\n        get: function () {\r\n            return new NavigationNodes(this, \"Children\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Deletes this node and any child nodes\r\n     */\r\n    NavigationNode.prototype.delete = function () {\r\n        return _super.prototype.deleteCore.call(this);\r\n    };\r\n    /**\r\n     * Updates this node\r\n     *\r\n     * @param properties Properties used to update this node\r\n     */\r\n    NavigationNode.prototype.update = function (properties) {\r\n        var _this = this;\r\n        var postBody = jsS(extend({\r\n            \"__metadata\": { \"type\": \"SP.NavigationNode\" },\r\n        }, properties));\r\n        return this.postCore({\r\n            body: postBody,\r\n            headers: {\r\n                \"X-HTTP-Method\": \"MERGE\",\r\n            },\r\n        }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                node: _this,\r\n            };\r\n        });\r\n    };\r\n    return NavigationNode;\r\n}(SharePointQueryableInstance));\r\nexport { NavigationNode };\r\n/**\r\n * Exposes the navigation components\r\n *\r\n */\r\nvar Navigation = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Navigation, _super);\r\n    function Navigation() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(Navigation.prototype, \"quicklaunch\", {\r\n        /**\r\n         * Gets the quicklaunch navigation nodes for the current context\r\n         *\r\n         */\r\n        get: function () {\r\n            return new NavigationNodes(this, \"quicklaunch\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Navigation.prototype, \"topNavigationBar\", {\r\n        /**\r\n         * Gets the top bar navigation nodes for the current context\r\n         *\r\n         */\r\n        get: function () {\r\n            return new NavigationNodes(this, \"topnavigationbar\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Navigation = tslib_1.__decorate([\r\n        defaultPath(\"navigation\")\r\n    ], Navigation);\r\n    return Navigation;\r\n}(SharePointQueryable));\r\nexport { Navigation };\r\n/**\r\n * Represents the top level navigation service\r\n */\r\nvar NavigationService = /** @class */ (function (_super) {\r\n    tslib_1.__extends(NavigationService, _super);\r\n    function NavigationService(baseUrl, path) {\r\n        if (path === void 0) { path = null; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * The MenuState service operation returns a Menu-State (dump) of a SiteMapProvider on a site.\r\n     *\r\n     * @param menuNodeKey MenuNode.Key of the start node within the SiteMapProvider If no key is provided the SiteMapProvider.RootNode will be the root of the menu state.\r\n     * @param depth Depth of the dump. If no value is provided a dump with the depth of 10 is returned\r\n     * @param mapProviderName The name identifying the SiteMapProvider to be used\r\n     * @param customProperties comma seperated list of custom properties to be returned.\r\n     */\r\n    NavigationService.prototype.getMenuState = function (menuNodeKey, depth, mapProviderName, customProperties) {\r\n        if (menuNodeKey === void 0) { menuNodeKey = null; }\r\n        if (depth === void 0) { depth = 10; }\r\n        if (mapProviderName === void 0) { mapProviderName = null; }\r\n        if (customProperties === void 0) { customProperties = null; }\r\n        return (new NavigationService(this, \"_api/navigation/MenuState\")).postCore({\r\n            body: jsS({\r\n                customProperties: customProperties,\r\n                depth: depth,\r\n                mapProviderName: mapProviderName,\r\n                menuNodeKey: menuNodeKey,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Tries to get a SiteMapNode.Key for a given URL within a site collection.\r\n     *\r\n     * @param currentUrl A url representing the SiteMapNode\r\n     * @param mapProviderName The name identifying the SiteMapProvider to be used\r\n     */\r\n    NavigationService.prototype.getMenuNodeKey = function (currentUrl, mapProviderName) {\r\n        if (mapProviderName === void 0) { mapProviderName = null; }\r\n        return (new NavigationService(this, \"_api/navigation/MenuNodeKey\")).postCore({\r\n            body: jsS({\r\n                currentUrl: currentUrl,\r\n                mapProviderName: mapProviderName,\r\n            }),\r\n        });\r\n    };\r\n    return NavigationService;\r\n}(SharePointQueryable));\r\nexport { NavigationService };\r\n//# sourceMappingURL=navigation.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryable, defaultPath } from \"./sharepointqueryable\";\r\nimport { jsS } from \"@pnp/common\";\r\nvar RelatedItemManagerImpl = /** @class */ (function (_super) {\r\n    tslib_1.__extends(RelatedItemManagerImpl, _super);\r\n    function RelatedItemManagerImpl() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    RelatedItemManagerImpl_1 = RelatedItemManagerImpl;\r\n    RelatedItemManagerImpl.FromUrl = function (url) {\r\n        if (url === null) {\r\n            return new RelatedItemManagerImpl_1(\"\");\r\n        }\r\n        var index = url.indexOf(\"_api/\");\r\n        if (index > -1) {\r\n            return new RelatedItemManagerImpl_1(url.substr(0, index));\r\n        }\r\n        return new RelatedItemManagerImpl_1(url);\r\n    };\r\n    RelatedItemManagerImpl.prototype.getRelatedItems = function (sourceListName, sourceItemId) {\r\n        var query = this.clone(RelatedItemManagerImpl_1, null);\r\n        query.concat(\".GetRelatedItems\");\r\n        return query.postCore({\r\n            body: jsS({\r\n                SourceItemID: sourceItemId,\r\n                SourceListName: sourceListName,\r\n            }),\r\n        });\r\n    };\r\n    RelatedItemManagerImpl.prototype.getPageOneRelatedItems = function (sourceListName, sourceItemId) {\r\n        var query = this.clone(RelatedItemManagerImpl_1, null);\r\n        query.concat(\".GetPageOneRelatedItems\");\r\n        return query.postCore({\r\n            body: jsS({\r\n                SourceItemID: sourceItemId,\r\n                SourceListName: sourceListName,\r\n            }),\r\n        });\r\n    };\r\n    RelatedItemManagerImpl.prototype.addSingleLink = function (sourceListName, sourceItemId, sourceWebUrl, targetListName, targetItemID, targetWebUrl, tryAddReverseLink) {\r\n        if (tryAddReverseLink === void 0) { tryAddReverseLink = false; }\r\n        var query = this.clone(RelatedItemManagerImpl_1, null);\r\n        query.concat(\".AddSingleLink\");\r\n        return query.postCore({\r\n            body: jsS({\r\n                SourceItemID: sourceItemId,\r\n                SourceListName: sourceListName,\r\n                SourceWebUrl: sourceWebUrl,\r\n                TargetItemID: targetItemID,\r\n                TargetListName: targetListName,\r\n                TargetWebUrl: targetWebUrl,\r\n                TryAddReverseLink: tryAddReverseLink,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Adds a related item link from an item specified by list name and item id, to an item specified by url\r\n     *\r\n     * @param sourceListName The source list name or list id\r\n     * @param sourceItemId The source item id\r\n     * @param targetItemUrl The target item url\r\n     * @param tryAddReverseLink If set to true try to add the reverse link (will not return error if it fails)\r\n     */\r\n    RelatedItemManagerImpl.prototype.addSingleLinkToUrl = function (sourceListName, sourceItemId, targetItemUrl, tryAddReverseLink) {\r\n        if (tryAddReverseLink === void 0) { tryAddReverseLink = false; }\r\n        var query = this.clone(RelatedItemManagerImpl_1, null);\r\n        query.concat(\".AddSingleLinkToUrl\");\r\n        return query.postCore({\r\n            body: jsS({\r\n                SourceItemID: sourceItemId,\r\n                SourceListName: sourceListName,\r\n                TargetItemUrl: targetItemUrl,\r\n                TryAddReverseLink: tryAddReverseLink,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Adds a related item link from an item specified by url, to an item specified by list name and item id\r\n     *\r\n     * @param sourceItemUrl The source item url\r\n     * @param targetListName The target list name or list id\r\n     * @param targetItemId The target item id\r\n     * @param tryAddReverseLink If set to true try to add the reverse link (will not return error if it fails)\r\n     */\r\n    RelatedItemManagerImpl.prototype.addSingleLinkFromUrl = function (sourceItemUrl, targetListName, targetItemId, tryAddReverseLink) {\r\n        if (tryAddReverseLink === void 0) { tryAddReverseLink = false; }\r\n        var query = this.clone(RelatedItemManagerImpl_1, null);\r\n        query.concat(\".AddSingleLinkFromUrl\");\r\n        return query.postCore({\r\n            body: jsS({\r\n                SourceItemUrl: sourceItemUrl,\r\n                TargetItemID: targetItemId,\r\n                TargetListName: targetListName,\r\n                TryAddReverseLink: tryAddReverseLink,\r\n            }),\r\n        });\r\n    };\r\n    RelatedItemManagerImpl.prototype.deleteSingleLink = function (sourceListName, sourceItemId, sourceWebUrl, targetListName, targetItemId, targetWebUrl, tryDeleteReverseLink) {\r\n        if (tryDeleteReverseLink === void 0) { tryDeleteReverseLink = false; }\r\n        var query = this.clone(RelatedItemManagerImpl_1, null);\r\n        query.concat(\".DeleteSingleLink\");\r\n        return query.postCore({\r\n            body: jsS({\r\n                SourceItemID: sourceItemId,\r\n                SourceListName: sourceListName,\r\n                SourceWebUrl: sourceWebUrl,\r\n                TargetItemID: targetItemId,\r\n                TargetListName: targetListName,\r\n                TargetWebUrl: targetWebUrl,\r\n                TryDeleteReverseLink: tryDeleteReverseLink,\r\n            }),\r\n        });\r\n    };\r\n    var RelatedItemManagerImpl_1;\r\n    RelatedItemManagerImpl = RelatedItemManagerImpl_1 = tslib_1.__decorate([\r\n        defaultPath(\"_api/SP.RelatedItemManager\")\r\n    ], RelatedItemManagerImpl);\r\n    return RelatedItemManagerImpl;\r\n}(SharePointQueryable));\r\nexport { RelatedItemManagerImpl };\r\n//# sourceMappingURL=relateditems.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryableInstance, SharePointQueryableCollection, defaultPath, } from \"./sharepointqueryable\";\r\nimport { spODataEntity, } from \"./odata\";\r\nimport { dateAdd, hOP, } from \"@pnp/common\";\r\n/**\r\n * Describes regional settings ODada object\r\n */\r\nvar RegionalSettings = /** @class */ (function (_super) {\r\n    tslib_1.__extends(RegionalSettings, _super);\r\n    function RegionalSettings() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(RegionalSettings.prototype, \"installedLanguages\", {\r\n        /**\r\n         * Gets the collection of languages used in a server farm.\r\n         */\r\n        get: function () {\r\n            return new InstalledLanguages(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RegionalSettings.prototype, \"globalInstalledLanguages\", {\r\n        /**\r\n         * Gets the collection of language packs that are installed on the server.\r\n         */\r\n        get: function () {\r\n            return new InstalledLanguages(this, \"globalinstalledlanguages\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RegionalSettings.prototype, \"timeZone\", {\r\n        /**\r\n         * Gets time zone\r\n         */\r\n        get: function () {\r\n            return new TimeZone(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RegionalSettings.prototype, \"timeZones\", {\r\n        /**\r\n         * Gets time zones\r\n         */\r\n        get: function () {\r\n            return new TimeZones(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    RegionalSettings = tslib_1.__decorate([\r\n        defaultPath(\"regionalsettings\")\r\n    ], RegionalSettings);\r\n    return RegionalSettings;\r\n}(SharePointQueryableInstance));\r\nexport { RegionalSettings };\r\n/**\r\n * Describes installed languages ODada queriable collection\r\n */\r\nvar InstalledLanguages = /** @class */ (function (_super) {\r\n    tslib_1.__extends(InstalledLanguages, _super);\r\n    function InstalledLanguages() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    InstalledLanguages = tslib_1.__decorate([\r\n        defaultPath(\"installedlanguages\")\r\n    ], InstalledLanguages);\r\n    return InstalledLanguages;\r\n}(SharePointQueryableCollection));\r\nexport { InstalledLanguages };\r\n/**\r\n * Describes TimeZone ODada object\r\n */\r\nvar TimeZone = /** @class */ (function (_super) {\r\n    tslib_1.__extends(TimeZone, _super);\r\n    function TimeZone() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    TimeZone_1 = TimeZone;\r\n    /**\r\n     * Gets an Local Time by UTC Time\r\n     *\r\n     * @param utcTime UTC Time as Date or ISO String\r\n     */\r\n    TimeZone.prototype.utcToLocalTime = function (utcTime) {\r\n        var dateIsoString;\r\n        if (typeof utcTime === \"string\") {\r\n            dateIsoString = utcTime;\r\n        }\r\n        else {\r\n            dateIsoString = utcTime.toISOString();\r\n        }\r\n        return this.clone(TimeZone_1, \"utctolocaltime('\" + dateIsoString + \"')\")\r\n            .postCore()\r\n            .then(function (res) { return hOP(res, \"UTCToLocalTime\") ? res.UTCToLocalTime : res; });\r\n    };\r\n    /**\r\n     * Gets an UTC Time by Local Time\r\n     *\r\n     * @param localTime Local Time as Date or ISO String\r\n     */\r\n    TimeZone.prototype.localTimeToUTC = function (localTime) {\r\n        var dateIsoString;\r\n        if (typeof localTime === \"string\") {\r\n            dateIsoString = localTime;\r\n        }\r\n        else {\r\n            dateIsoString = dateAdd(localTime, \"minute\", localTime.getTimezoneOffset() * -1).toISOString();\r\n        }\r\n        return this.clone(TimeZone_1, \"localtimetoutc('\" + dateIsoString + \"')\")\r\n            .postCore()\r\n            .then(function (res) { return hOP(res, \"LocalTimeToUTC\") ? res.LocalTimeToUTC : res; });\r\n    };\r\n    var TimeZone_1;\r\n    TimeZone = TimeZone_1 = tslib_1.__decorate([\r\n        defaultPath(\"timezone\")\r\n    ], TimeZone);\r\n    return TimeZone;\r\n}(SharePointQueryableInstance));\r\nexport { TimeZone };\r\n/**\r\n * Describes time zones queriable collection\r\n */\r\nvar TimeZones = /** @class */ (function (_super) {\r\n    tslib_1.__extends(TimeZones, _super);\r\n    function TimeZones() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    TimeZones_1 = TimeZones;\r\n    // https://msdn.microsoft.com/en-us/library/office/jj247008.aspx - timezones ids\r\n    /**\r\n     * Gets an TimeZone by id\r\n     *\r\n     * @param id The integer id of the timezone to retrieve\r\n     */\r\n    TimeZones.prototype.getById = function (id) {\r\n        // do the post and merge the result into a TimeZone instance so the data and methods are available\r\n        return this.clone(TimeZones_1, \"GetById(\" + id + \")\").postCore({}, spODataEntity(TimeZone));\r\n    };\r\n    var TimeZones_1;\r\n    TimeZones = TimeZones_1 = tslib_1.__decorate([\r\n        defaultPath(\"timezones\")\r\n    ], TimeZones);\r\n    return TimeZones;\r\n}(SharePointQueryableCollection));\r\nexport { TimeZones };\r\n//# sourceMappingURL=regionalsettings.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryable } from \"./sharepointqueryable\";\r\nimport { hOP } from \"@pnp/common\";\r\n/**\r\n * Implements the site designs API REST methods\r\n *\r\n */\r\nvar SiteDesigns = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SiteDesigns, _super);\r\n    /**\r\n     * Creates a new instance of the SiteDesigns method class\r\n     *\r\n     * @param baseUrl The parent url provider\r\n     * @param methodName The static method name to call on the utility class\r\n     */\r\n    function SiteDesigns(baseUrl, methodName) {\r\n        return _super.call(this, SiteDesigns.getBaseUrl(baseUrl), \"_api/Microsoft.Sharepoint.Utilities.WebTemplateExtensions.SiteScriptUtility.\" + methodName) || this;\r\n    }\r\n    SiteDesigns.getBaseUrl = function (candidate) {\r\n        if (typeof candidate === \"string\") {\r\n            return candidate;\r\n        }\r\n        var c = candidate;\r\n        var url = c.toUrl();\r\n        var index = url.indexOf(\"_api/\");\r\n        if (index < 0) {\r\n            return url;\r\n        }\r\n        return url.substr(0, index);\r\n    };\r\n    SiteDesigns.prototype.execute = function (props) {\r\n        return this.postCore({\r\n            body: JSON.stringify(props),\r\n            headers: {\r\n                \"Content-Type\": \"application/json;charset=utf-8\",\r\n            },\r\n        });\r\n    };\r\n    /**\r\n     * Creates a new site design available to users when they create a new site from the SharePoint home page.\r\n     *\r\n     * @param creationInfo A sitedesign creation information object\r\n     */\r\n    SiteDesigns.prototype.createSiteDesign = function (creationInfo) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.clone(SiteDesigns, \"CreateSiteDesign\").execute({ info: creationInfo })];\r\n                    case 1: return [2 /*return*/, _a.sent()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Applies a site design to an existing site collection.\r\n     *\r\n     * @param siteDesignId The ID of the site design to apply.\r\n     * @param webUrl The URL of the site collection where you want to apply the site design.\r\n     */\r\n    SiteDesigns.prototype.applySiteDesign = function (siteDesignId, webUrl) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.clone(SiteDesigns, \"ApplySiteDesign\").execute({ siteDesignId: siteDesignId, \"webUrl\": webUrl })];\r\n                    case 1: return [2 /*return*/, _a.sent()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Gets a list of information about existing site designs.\r\n     */\r\n    SiteDesigns.prototype.getSiteDesigns = function () {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.clone(SiteDesigns, \"GetSiteDesigns\").execute({})];\r\n                    case 1: return [2 /*return*/, _a.sent()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Gets information about a specific site design.\r\n     * @param id The ID of the site design to get information about.\r\n     */\r\n    SiteDesigns.prototype.getSiteDesignMetadata = function (id) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.clone(SiteDesigns, \"GetSiteDesignMetadata\").execute({ id: id })];\r\n                    case 1: return [2 /*return*/, _a.sent()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Updates a site design with new values. In the REST call, all parameters are optional except the site script Id.\r\n     * If you had previously set the IsDefault parameter to TRUE and wish it to remain true, you must pass in this parameter again (otherwise it will be reset to FALSE).\r\n     * @param updateInfo A sitedesign update information object\r\n     */\r\n    SiteDesigns.prototype.updateSiteDesign = function (updateInfo) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.clone(SiteDesigns, \"UpdateSiteDesign\").execute({ updateInfo: updateInfo })];\r\n                    case 1: return [2 /*return*/, _a.sent()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Deletes a site design.\r\n     * @param id The ID of the site design to delete.\r\n     */\r\n    SiteDesigns.prototype.deleteSiteDesign = function (id) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.clone(SiteDesigns, \"DeleteSiteDesign\").execute({ id: id })];\r\n                    case 1: return [2 /*return*/, _a.sent()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Gets a list of principals that have access to a site design.\r\n     * @param id The ID of the site design to get rights information from.\r\n     */\r\n    SiteDesigns.prototype.getSiteDesignRights = function (id) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.clone(SiteDesigns, \"GetSiteDesignRights\").execute({ id: id })];\r\n                    case 1: return [2 /*return*/, _a.sent()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Grants access to a site design for one or more principals.\r\n     * @param id The ID of the site design to grant rights on.\r\n     * @param principalNames An array of one or more principals to grant view rights.\r\n     *                       Principals can be users or mail-enabled security groups in the form of \"alias\" or \"alias@<domain name>.com\"\r\n     * @param grantedRights Always set to 1. This represents the View right.\r\n     */\r\n    SiteDesigns.prototype.grantSiteDesignRights = function (id, principalNames, grantedRights) {\r\n        if (grantedRights === void 0) { grantedRights = 1; }\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.clone(SiteDesigns, \"GrantSiteDesignRights\")\r\n                            .execute({\r\n                            \"grantedRights\": grantedRights.toString(),\r\n                            \"id\": id,\r\n                            \"principalNames\": principalNames,\r\n                        })];\r\n                    case 1: return [2 /*return*/, _a.sent()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Revokes access from a site design for one or more principals.\r\n     * @param id The ID of the site design to revoke rights from.\r\n     * @param principalNames An array of one or more principals to revoke view rights from.\r\n     *                       If all principals have rights revoked on the site design, the site design becomes viewable to everyone.\r\n     */\r\n    SiteDesigns.prototype.revokeSiteDesignRights = function (id, principalNames) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.clone(SiteDesigns, \"RevokeSiteDesignRights\")\r\n                            .execute({\r\n                            \"id\": id,\r\n                            \"principalNames\": principalNames,\r\n                        })];\r\n                    case 1: return [2 /*return*/, _a.sent()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Adds a site design task on the specified web url to be invoked asynchronously.\r\n     * @param webUrl The absolute url of the web on where to create the task\r\n     * @param siteDesignId The ID of the site design to create a task for\r\n     */\r\n    SiteDesigns.prototype.addSiteDesignTask = function (webUrl, siteDesignId) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.clone(SiteDesigns, \"AddSiteDesignTask\")\r\n                            .execute({ \"webUrl\": webUrl, \"siteDesignId\": siteDesignId })];\r\n                    case 1: return [2 /*return*/, _a.sent()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Adds a site design task on the current web to be invoked asynchronously.\r\n     * @param siteDesignId The ID of the site design to create a task for\r\n     */\r\n    SiteDesigns.prototype.addSiteDesignTaskToCurrentWeb = function (siteDesignId) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.clone(SiteDesigns, \"AddSiteDesignTaskToCurrentWeb\")\r\n                            .execute({ \"siteDesignId\": siteDesignId })];\r\n                    case 1: return [2 /*return*/, _a.sent()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Retrieves the site design task, if the task has finished running null will be returned\r\n     * @param id The ID of the site design task\r\n     */\r\n    SiteDesigns.prototype.getSiteDesignTask = function (id) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var task;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.clone(SiteDesigns, \"GetSiteDesignTask\")\r\n                            .execute({ \"taskId\": id })];\r\n                    case 1:\r\n                        task = _a.sent();\r\n                        return [2 /*return*/, hOP(task, \"ID\") ? task : null];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Retrieves a list of site design that have run on a specific web\r\n     * @param webUrl The url of the web where the site design was applied\r\n     * @param siteDesignId (Optional) the site design ID, if not provided will return all site design runs\r\n     */\r\n    SiteDesigns.prototype.getSiteDesignRun = function (webUrl, siteDesignId) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.clone(SiteDesigns, \"GetSiteDesignRun\")\r\n                            .execute({ \"webUrl\": webUrl, siteDesignId: siteDesignId })];\r\n                    case 1: return [2 /*return*/, _a.sent()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Retrieves the status of a site design that has been run or is still running\r\n     * @param webUrl The url of the web where the site design was applied\r\n     * @param runId the run ID\r\n     */\r\n    SiteDesigns.prototype.getSiteDesignRunStatus = function (webUrl, runId) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.clone(SiteDesigns, \"GetSiteDesignRunStatus\")\r\n                            .execute({ \"webUrl\": webUrl, runId: runId })];\r\n                    case 1: return [2 /*return*/, _a.sent()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return SiteDesigns;\r\n}(SharePointQueryable));\r\nexport { SiteDesigns };\r\n//# sourceMappingURL=sitedesigns.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryable } from \"./sharepointqueryable\";\r\n/**\r\n * Implements the site script API REST methods\r\n *\r\n */\r\nvar SiteScripts = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SiteScripts, _super);\r\n    /**\r\n     * Creates a new instance of the SiteScripts method class\r\n     *\r\n     * @param baseUrl The parent url provider\r\n     * @param methodName The static method name to call on the utility class\r\n     */\r\n    function SiteScripts(baseUrl, methodName) {\r\n        return _super.call(this, SiteScripts.getBaseUrl(baseUrl), \"_api/Microsoft.Sharepoint.Utilities.WebTemplateExtensions.SiteScriptUtility.\" + methodName) || this;\r\n    }\r\n    SiteScripts.getBaseUrl = function (candidate) {\r\n        if (typeof candidate === \"string\") {\r\n            return candidate;\r\n        }\r\n        var c = candidate;\r\n        var url = c.toUrl();\r\n        var index = url.indexOf(\"_api/\");\r\n        if (index < 0) {\r\n            return url;\r\n        }\r\n        return url.substr(0, index);\r\n    };\r\n    SiteScripts.prototype.execute = function (props) {\r\n        return this.postCore({\r\n            body: JSON.stringify(props),\r\n        });\r\n    };\r\n    /**\r\n     * Gets a list of information on all existing site scripts.\r\n     */\r\n    SiteScripts.prototype.getSiteScripts = function () {\r\n        return this.clone(SiteScripts, \"GetSiteScripts\", true).execute({});\r\n    };\r\n    /**\r\n     * Creates a new site script.\r\n     *\r\n     * @param title The display name of the site design.\r\n     * @param content JSON value that describes the script. For more information, see JSON reference.\r\n     */\r\n    SiteScripts.prototype.createSiteScript = function (title, description, content) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.clone(SiteScripts, \"CreateSiteScript(Title=@title,Description=@desc)?@title='\" + encodeURIComponent(title) + \"'&@desc='\" + encodeURIComponent(description) + \"'\")\r\n                            .execute(content)];\r\n                    case 1: return [2 /*return*/, _a.sent()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Gets information about a specific site script. It also returns the JSON of the script.\r\n     *\r\n     * @param id The ID of the site script to get information about.\r\n     */\r\n    SiteScripts.prototype.getSiteScriptMetadata = function (id) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.clone(SiteScripts, \"GetSiteScriptMetadata\").execute({ id: id })];\r\n                    case 1: return [2 /*return*/, _a.sent()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Deletes a site script.\r\n     *\r\n     * @param id The ID of the site script to delete.\r\n     */\r\n    SiteScripts.prototype.deleteSiteScript = function (id) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.clone(SiteScripts, \"DeleteSiteScript\").execute({ id: id })];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Updates a site script with new values. In the REST call, all parameters are optional except the site script Id.\r\n     *\r\n     * @param siteScriptUpdateInfo Object that contains the information to update a site script.\r\n     *                             Make sure you stringify the content object or pass it in the second 'content' parameter\r\n     * @param content (Optional) A new JSON script defining the script actions. For more information, see Site design JSON schema.\r\n     */\r\n    SiteScripts.prototype.updateSiteScript = function (siteScriptUpdateInfo, content) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (content) {\r\n                            siteScriptUpdateInfo.Content = JSON.stringify(content);\r\n                        }\r\n                        return [4 /*yield*/, this.clone(SiteScripts, \"UpdateSiteScript\").execute({ updateInfo: siteScriptUpdateInfo })];\r\n                    case 1: return [2 /*return*/, _a.sent()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Gets the site script syntax (JSON) for a specific list\r\n     * @param listUrl The absolute url of the list to retrieve site script\r\n     */\r\n    SiteScripts.prototype.getSiteScriptFromList = function (listUrl) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.clone(SiteScripts, \"GetSiteScriptFromList\")\r\n                            .execute({ \"listUrl\": listUrl })];\r\n                    case 1: return [2 /*return*/, _a.sent()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Gets the site script syntax (JSON) for a specific web\r\n     * @param webUrl The absolute url of the web to retrieve site script\r\n     * @param extractInfo configuration object to specify what to extract\r\n     */\r\n    SiteScripts.prototype.getSiteScriptFromWeb = function (webUrl, extractInfo) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.clone(SiteScripts, \"getSiteScriptFromWeb\")\r\n                            .execute({ \"webUrl\": webUrl, info: extractInfo })];\r\n                    case 1: return [2 /*return*/, _a.sent()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return SiteScripts;\r\n}(SharePointQueryable));\r\nexport { SiteScripts };\r\n//# sourceMappingURL=sitescripts.js.map","import * as tslib_1 from \"tslib\";\r\nimport { extend, jsS } from \"@pnp/common\";\r\nimport { SharePointQueryableInstance, SharePointQueryableCollection, defaultPath } from \"./sharepointqueryable\";\r\nimport { SharePointQueryableShareableWeb } from \"./sharepointqueryableshareable\";\r\nimport { Folders, Folder } from \"./folders\";\r\nimport { Lists, List } from \"./lists\";\r\nimport { Fields } from \"./fields\";\r\nimport { Site } from \"./site\";\r\nimport { Navigation } from \"./navigation\";\r\nimport { SiteGroups, SiteGroup } from \"./sitegroups\";\r\nimport { ContentTypes } from \"./contenttypes\";\r\nimport { RoleDefinitions } from \"./roles\";\r\nimport { File } from \"./files\";\r\nimport { extractWebUrl } from \"./utils/extractweburl\";\r\nimport { SiteUsers, SiteUser, CurrentUser } from \"./siteusers\";\r\nimport { UserCustomActions } from \"./usercustomactions\";\r\nimport { odataUrlFrom } from \"./odata\";\r\nimport { SPBatch } from \"./batch\";\r\nimport { Features } from \"./features\";\r\nimport { RelatedItemManagerImpl } from \"./relateditems\";\r\nimport { AppCatalog } from \"./appcatalog\";\r\nimport { RegionalSettings } from \"./regionalsettings\";\r\nimport { ClientSidePage } from \"./clientsidepages\";\r\nimport { SiteDesigns } from \"./sitedesigns\";\r\nimport { SiteScripts } from \"./sitescripts\";\r\n/**\r\n * Describes a collection of webs\r\n *\r\n */\r\nvar Webs = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Webs, _super);\r\n    function Webs() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Webs_1 = Webs;\r\n    /**\r\n     * Adds a new web to the collection\r\n     *\r\n     * @param title The new web's title\r\n     * @param url The new web's relative url\r\n     * @param description The new web's description\r\n     * @param template The new web's template internal name (default = STS)\r\n     * @param language The locale id that specifies the new web's language (default = 1033 [English, US])\r\n     * @param inheritPermissions When true, permissions will be inherited from the new web's parent (default = true)\r\n     */\r\n    Webs.prototype.add = function (title, url, description, template, language, inheritPermissions) {\r\n        if (description === void 0) { description = \"\"; }\r\n        if (template === void 0) { template = \"STS\"; }\r\n        if (language === void 0) { language = 1033; }\r\n        if (inheritPermissions === void 0) { inheritPermissions = true; }\r\n        var props = {\r\n            Description: description,\r\n            Language: language,\r\n            Title: title,\r\n            Url: url,\r\n            UseSamePermissionsAsParentSite: inheritPermissions,\r\n            WebTemplate: template,\r\n        };\r\n        var postBody = jsS({\r\n            \"parameters\": extend({\r\n                \"__metadata\": { \"type\": \"SP.WebCreationInformation\" },\r\n            }, props),\r\n        });\r\n        return this.clone(Webs_1, \"add\").postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                web: new Web(odataUrlFrom(data).replace(/_api\\/web\\/?/i, \"\")),\r\n            };\r\n        });\r\n    };\r\n    var Webs_1;\r\n    Webs = Webs_1 = tslib_1.__decorate([\r\n        defaultPath(\"webs\")\r\n    ], Webs);\r\n    return Webs;\r\n}(SharePointQueryableCollection));\r\nexport { Webs };\r\n/**\r\n * Describes a collection of web infos\r\n *\r\n */\r\nvar WebInfos = /** @class */ (function (_super) {\r\n    tslib_1.__extends(WebInfos, _super);\r\n    function WebInfos() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    WebInfos = tslib_1.__decorate([\r\n        defaultPath(\"webinfos\")\r\n    ], WebInfos);\r\n    return WebInfos;\r\n}(SharePointQueryableCollection));\r\nexport { WebInfos };\r\n/**\r\n * Describes a web\r\n *\r\n */\r\nvar Web = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Web, _super);\r\n    function Web() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Web_1 = Web;\r\n    /**\r\n     * Creates a new web instance from the given url by indexing the location of the /_api/\r\n     * segment. If this is not found the method creates a new web with the entire string as\r\n     * supplied.\r\n     *\r\n     * @param url\r\n     */\r\n    Web.fromUrl = function (url, path) {\r\n        return new Web_1(extractWebUrl(url), path);\r\n    };\r\n    Object.defineProperty(Web.prototype, \"webs\", {\r\n        /**\r\n         * Gets this web's subwebs\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Webs(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets this web's parent web and data\r\n     *\r\n     */\r\n    Web.prototype.getParentWeb = function () {\r\n        var _this = this;\r\n        return this.select(\"ParentWeb/Id\").expand(\"ParentWeb\").get()\r\n            .then(function (_a) {\r\n            var ParentWeb = _a.ParentWeb;\r\n            return ParentWeb ? new Site(_this.parentUrl).openWebById(ParentWeb.Id) : null;\r\n        });\r\n    };\r\n    /**\r\n    * Returns a collection of objects that contain metadata about subsites of the current site in which the current user is a member.\r\n    *\r\n    * @param nWebTemplateFilter Specifies the site definition (default = -1)\r\n    * @param nConfigurationFilter A 16-bit integer that specifies the identifier of a configuration (default = -1)\r\n    */\r\n    Web.prototype.getSubwebsFilteredForCurrentUser = function (nWebTemplateFilter, nConfigurationFilter) {\r\n        if (nWebTemplateFilter === void 0) { nWebTemplateFilter = -1; }\r\n        if (nConfigurationFilter === void 0) { nConfigurationFilter = -1; }\r\n        return this.clone(Webs, \"getSubwebsFilteredForCurrentUser(nWebTemplateFilter=\" + nWebTemplateFilter + \",nConfigurationFilter=\" + nConfigurationFilter + \")\");\r\n    };\r\n    Object.defineProperty(Web.prototype, \"allProperties\", {\r\n        /**\r\n         * Allows access to the web's all properties collection\r\n         */\r\n        get: function () {\r\n            return this.clone(SharePointQueryableInstance, \"allproperties\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"webinfos\", {\r\n        /**\r\n         * Gets a collection of WebInfos for this web's subwebs\r\n         *\r\n         */\r\n        get: function () {\r\n            return new WebInfos(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"contentTypes\", {\r\n        /**\r\n         * Gets the content types available in this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new ContentTypes(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"lists\", {\r\n        /**\r\n         * Gets the lists in this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Lists(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"fields\", {\r\n        /**\r\n         * Gets the fields in this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Fields(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"features\", {\r\n        /**\r\n         * Gets the active features for this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Features(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"availablefields\", {\r\n        /**\r\n         * Gets the available fields in this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Fields(this, \"availablefields\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"navigation\", {\r\n        /**\r\n         * Gets the navigation options in this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Navigation(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"siteUsers\", {\r\n        /**\r\n         * Gets the site users\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteUsers(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"siteGroups\", {\r\n        /**\r\n         * Gets the site groups\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteGroups(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"siteUserInfoList\", {\r\n        /**\r\n         * Gets site user info list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new List(this, \"siteuserinfolist\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"regionalSettings\", {\r\n        /**\r\n         * Gets regional settings\r\n         *\r\n         */\r\n        get: function () {\r\n            return new RegionalSettings(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"currentUser\", {\r\n        /**\r\n         * Gets the current user\r\n         */\r\n        get: function () {\r\n            return new CurrentUser(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"folders\", {\r\n        /**\r\n         * Gets the top-level folders in this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Folders(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"userCustomActions\", {\r\n        /**\r\n         * Gets all user custom actions for this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new UserCustomActions(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"roleDefinitions\", {\r\n        /**\r\n         * Gets the collection of RoleDefinition resources\r\n         *\r\n         */\r\n        get: function () {\r\n            return new RoleDefinitions(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"relatedItems\", {\r\n        /**\r\n         * Provides an interface to manage related items\r\n         *\r\n         */\r\n        get: function () {\r\n            return RelatedItemManagerImpl.FromUrl(this.toUrl());\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Creates a new batch for requests within the context of this web\r\n     *\r\n     */\r\n    Web.prototype.createBatch = function () {\r\n        return new SPBatch(this.parentUrl);\r\n    };\r\n    Object.defineProperty(Web.prototype, \"rootFolder\", {\r\n        /**\r\n         * Gets the root folder of this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Folder(this, \"rootFolder\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"associatedOwnerGroup\", {\r\n        /**\r\n         * Gets the associated owner group for this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteGroup(this, \"associatedownergroup\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"associatedMemberGroup\", {\r\n        /**\r\n         * Gets the associated member group for this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteGroup(this, \"associatedmembergroup\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"associatedVisitorGroup\", {\r\n        /**\r\n         * Gets the associated visitor group for this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteGroup(this, \"associatedvisitorgroup\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"defaultDocumentLibrary\", {\r\n        /**\r\n         * Gets the default document library for this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new List(this, \"DefaultDocumentLibrary\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets a folder by id\r\n     *\r\n     * @param uniqueId The uniqueId of the folder\r\n     */\r\n    Web.prototype.getFolderById = function (uniqueId) {\r\n        return new Folder(this, \"getFolderById('\" + uniqueId + \"')\");\r\n    };\r\n    /**\r\n     * Gets a folder by server relative url\r\n     *\r\n     * @param folderRelativeUrl The server relative path to the folder (including /sites/ if applicable)\r\n     */\r\n    Web.prototype.getFolderByServerRelativeUrl = function (folderRelativeUrl) {\r\n        return new Folder(this, \"getFolderByServerRelativeUrl('\" + folderRelativeUrl + \"')\");\r\n    };\r\n    /**\r\n     * Gets a folder by server relative relative path if your folder name contains # and % characters\r\n     * you need to first encode the file name using encodeURIComponent() and then pass the url\r\n     * let url = \"/sites/test/Shared Documents/\" + encodeURIComponent(\"%123\");\r\n     * This works only in SharePoint online.\r\n     *\r\n     * @param folderRelativeUrl The server relative path to the folder (including /sites/ if applicable)\r\n     */\r\n    Web.prototype.getFolderByServerRelativePath = function (folderRelativeUrl) {\r\n        return new Folder(this, \"getFolderByServerRelativePath(decodedUrl='\" + folderRelativeUrl + \"')\");\r\n    };\r\n    /**\r\n     * Gets a file by id\r\n     *\r\n     * @param uniqueId The uniqueId of the file\r\n     */\r\n    Web.prototype.getFileById = function (uniqueId) {\r\n        return new File(this, \"getFileById('\" + uniqueId + \"')\");\r\n    };\r\n    /**\r\n     * Gets a file by server relative url\r\n     *\r\n     * @param fileRelativeUrl The server relative path to the file (including /sites/ if applicable)\r\n     */\r\n    Web.prototype.getFileByServerRelativeUrl = function (fileRelativeUrl) {\r\n        return new File(this, \"getFileByServerRelativeUrl('\" + fileRelativeUrl + \"')\");\r\n    };\r\n    /**\r\n     * Gets a file by server relative url if your file name contains # and % characters\r\n     * you need to first encode the file name using encodeURIComponent() and then pass the url\r\n     * let url = \"/sites/test/Shared Documents/\" + encodeURIComponent(\"%123.docx\");\r\n     *\r\n     * @param fileRelativeUrl The server relative path to the file (including /sites/ if applicable)\r\n     */\r\n    Web.prototype.getFileByServerRelativePath = function (fileRelativeUrl) {\r\n        return new File(this, \"getFileByServerRelativePath(decodedUrl='\" + fileRelativeUrl + \"')\");\r\n    };\r\n    /**\r\n     * Gets a list by server relative url (list's root folder)\r\n     *\r\n     * @param listRelativeUrl The server relative path to the list's root folder (including /sites/ if applicable)\r\n     */\r\n    Web.prototype.getList = function (listRelativeUrl) {\r\n        return new List(this, \"getList('\" + listRelativeUrl + \"')\");\r\n    };\r\n    /**\r\n     * Updates this web instance with the supplied properties\r\n     *\r\n     * @param properties A plain object hash of values to update for the web\r\n     */\r\n    Web.prototype.update = function (properties) {\r\n        var _this = this;\r\n        var postBody = jsS(extend({\r\n            \"__metadata\": { \"type\": \"SP.Web\" },\r\n        }, properties));\r\n        return this.postCore({\r\n            body: postBody,\r\n            headers: {\r\n                \"X-HTTP-Method\": \"MERGE\",\r\n            },\r\n        }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                web: _this,\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Deletes this web\r\n     *\r\n     */\r\n    Web.prototype.delete = function () {\r\n        return _super.prototype.deleteCore.call(this);\r\n    };\r\n    /**\r\n     * Applies the theme specified by the contents of each of the files specified in the arguments to the site\r\n     *\r\n     * @param colorPaletteUrl The server-relative URL of the color palette file\r\n     * @param fontSchemeUrl The server-relative URL of the font scheme\r\n     * @param backgroundImageUrl The server-relative URL of the background image\r\n     * @param shareGenerated When true, the generated theme files are stored in the root site. When false, they are stored in this web\r\n     */\r\n    Web.prototype.applyTheme = function (colorPaletteUrl, fontSchemeUrl, backgroundImageUrl, shareGenerated) {\r\n        var postBody = jsS({\r\n            backgroundImageUrl: backgroundImageUrl,\r\n            colorPaletteUrl: colorPaletteUrl,\r\n            fontSchemeUrl: fontSchemeUrl,\r\n            shareGenerated: shareGenerated,\r\n        });\r\n        return this.clone(Web_1, \"applytheme\").postCore({ body: postBody });\r\n    };\r\n    /**\r\n     * Applies the specified site definition or site template to the Web site that has no template applied to it\r\n     *\r\n     * @param template Name of the site definition or the name of the site template\r\n     */\r\n    Web.prototype.applyWebTemplate = function (template) {\r\n        var q = this.clone(Web_1, \"applywebtemplate\");\r\n        q.concat(\"(@t)\");\r\n        q.query.set(\"@t\", template);\r\n        return q.postCore();\r\n    };\r\n    /**\r\n     * Checks whether the specified login name belongs to a valid user in the web. If the user doesn't exist, adds the user to the web.\r\n     *\r\n     * @param loginName The login name of the user (ex: i:0#.f|membership|user@domain.onmicrosoft.com)\r\n     */\r\n    Web.prototype.ensureUser = function (loginName) {\r\n        var postBody = jsS({\r\n            logonName: loginName,\r\n        });\r\n        return this.clone(Web_1, \"ensureuser\").postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                user: new SiteUser(odataUrlFrom(data)),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Returns a collection of site templates available for the site\r\n     *\r\n     * @param language The locale id of the site templates to retrieve (default = 1033 [English, US])\r\n     * @param includeCrossLanguage When true, includes language-neutral site templates; otherwise false (default = true)\r\n     */\r\n    Web.prototype.availableWebTemplates = function (language, includeCrossLanugage) {\r\n        if (language === void 0) { language = 1033; }\r\n        if (includeCrossLanugage === void 0) { includeCrossLanugage = true; }\r\n        return new SharePointQueryableCollection(this, \"getavailablewebtemplates(lcid=\" + language + \", doincludecrosslanguage=\" + includeCrossLanugage + \")\");\r\n    };\r\n    /**\r\n     * Returns the list gallery on the site\r\n     *\r\n     * @param type The gallery type - WebTemplateCatalog = 111, WebPartCatalog = 113 ListTemplateCatalog = 114,\r\n     * MasterPageCatalog = 116, SolutionCatalog = 121, ThemeCatalog = 123, DesignCatalog = 124, AppDataCatalog = 125\r\n     */\r\n    Web.prototype.getCatalog = function (type) {\r\n        return this.clone(Web_1, \"getcatalog(\" + type + \")\").select(\"Id\").get().then(function (data) {\r\n            return new List(odataUrlFrom(data));\r\n        });\r\n    };\r\n    /**\r\n     * Returns the collection of changes from the change log that have occurred within the list, based on the specified query\r\n     *\r\n     * @param query The change query\r\n     */\r\n    Web.prototype.getChanges = function (query) {\r\n        var postBody = jsS({ \"query\": extend({ \"__metadata\": { \"type\": \"SP.ChangeQuery\" } }, query) });\r\n        return this.clone(Web_1, \"getchanges\").postCore({ body: postBody });\r\n    };\r\n    Object.defineProperty(Web.prototype, \"customListTemplate\", {\r\n        /**\r\n         * Gets the custom list templates for the site\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableCollection(this, \"getcustomlisttemplates\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Returns the user corresponding to the specified member identifier for the current site\r\n     *\r\n     * @param id The id of the user\r\n     */\r\n    Web.prototype.getUserById = function (id) {\r\n        return new SiteUser(this, \"getUserById(\" + id + \")\");\r\n    };\r\n    /**\r\n     * Returns the name of the image file for the icon that is used to represent the specified file\r\n     *\r\n     * @param filename The file name. If this parameter is empty, the server returns an empty string\r\n     * @param size The size of the icon: 16x16 pixels = 0, 32x32 pixels = 1 (default = 0)\r\n     * @param progId The ProgID of the application that was used to create the file, in the form OLEServerName.ObjectName\r\n     */\r\n    Web.prototype.mapToIcon = function (filename, size, progId) {\r\n        if (size === void 0) { size = 0; }\r\n        if (progId === void 0) { progId = \"\"; }\r\n        return this.clone(Web_1, \"maptoicon(filename='\" + filename + \"', progid='\" + progId + \"', size=\" + size + \")\").get();\r\n    };\r\n    /**\r\n     * Returns the tenant property corresponding to the specified key in the app catalog site\r\n     *\r\n     * @param key Id of storage entity to be set\r\n     */\r\n    Web.prototype.getStorageEntity = function (key) {\r\n        return this.clone(Web_1, \"getStorageEntity('\" + key + \"')\").get();\r\n    };\r\n    /**\r\n     * This will set the storage entity identified by the given key (MUST be called in the context of the app catalog)\r\n     *\r\n     * @param key Id of storage entity to be set\r\n     * @param value Value of storage entity to be set\r\n     * @param description Description of storage entity to be set\r\n     * @param comments Comments of storage entity to be set\r\n     */\r\n    Web.prototype.setStorageEntity = function (key, value, description, comments) {\r\n        if (description === void 0) { description = \"\"; }\r\n        if (comments === void 0) { comments = \"\"; }\r\n        return this.clone(Web_1, \"setStorageEntity\").postCore({\r\n            body: jsS({\r\n                comments: comments,\r\n                description: description,\r\n                key: key,\r\n                value: value,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * This will remove the storage entity identified by the given key\r\n     *\r\n     * @param key Id of storage entity to be removed\r\n     */\r\n    Web.prototype.removeStorageEntity = function (key) {\r\n        return this.clone(Web_1, \"removeStorageEntity('\" + key + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Gets the tenant app catalog for this web\r\n     *\r\n     * @param url Optional url or web containing the app catalog (default: current web)\r\n     */\r\n    Web.prototype.getAppCatalog = function (url) {\r\n        return new AppCatalog(url || this);\r\n    };\r\n    /**\r\n     * Gets the site collection app catalog for this web\r\n     *\r\n     * @param url Optional url or web containing the app catalog (default: current web)\r\n     */\r\n    Web.prototype.getSiteCollectionAppCatalog = function (url) {\r\n        return new AppCatalog(url || this, \"_api/web/sitecollectionappcatalog/AvailableApps\");\r\n    };\r\n    /**\r\n     * Gets the collection of available client side web parts for this web instance\r\n     */\r\n    Web.prototype.getClientSideWebParts = function () {\r\n        return this.clone(SharePointQueryableCollection, \"GetClientSideWebParts\").get();\r\n    };\r\n    /**\r\n     * Creates a new client side page\r\n     *\r\n     * @param pageName Name of the new page\r\n     * @param title Display title of the new page\r\n     * @param libraryTitle Title of the library in which to create the new page. Default: \"Site Pages\"\r\n     */\r\n    Web.prototype.addClientSidePage = function (pageName, title) {\r\n        if (title === void 0) { title = pageName.replace(/\\.[^/.]+$/, \"\"); }\r\n        return ClientSidePage.create(this, pageName, title);\r\n    };\r\n    /**\r\n     * Creates a new client side page using the library path\r\n     *\r\n     * @param pageName Name of the new page\r\n     * @param listRelativePath The server relative path to the list's root folder (including /sites/ if applicable)\r\n     * @param title Display title of the new page\r\n     */\r\n    Web.prototype.addClientSidePageByPath = function (pageName, title) {\r\n        if (title === void 0) { title = pageName.replace(/\\.[^/.]+$/, \"\"); }\r\n        return ClientSidePage.create(this, pageName, title);\r\n    };\r\n    /**\r\n     * Creates the default associated groups (Members, Owners, Visitors) and gives them the default permissions on the site.\r\n     * The target site must have unique permissions and no associated members / owners / visitors groups\r\n     *\r\n     * @param siteOwner The user login name to be added to the site Owners group. Default is the current user\r\n     * @param siteOwner2 The second user login name to be added to the site Owners group. Default is empty\r\n     * @param groupNameSeed The base group name. E.g. 'TestSite' would produce 'TestSite Members' etc.\r\n     */\r\n    Web.prototype.createDefaultAssociatedGroups = function (siteOwner, siteOwner2, groupNameSeed) {\r\n        var q = this.clone(Web_1, \"createDefaultAssociatedGroups(userLogin=@u,userLogin2=@v,groupNameSeed=@s)\");\r\n        q.query.set(\"@u\", \"'\" + encodeURIComponent(siteOwner || \"\") + \"'\");\r\n        q.query.set(\"@v\", \"'\" + encodeURIComponent(siteOwner2 || \"\") + \"'\");\r\n        q.query.set(\"@s\", \"'\" + encodeURIComponent(groupNameSeed || \"\") + \"'\");\r\n        return q.postCore();\r\n    };\r\n    /**\r\n     * Gets hub site data for the current web.\r\n     *\r\n     * @param forceRefresh Default value is false. When false, the data is returned from the server's cache.\r\n     * When true, the cache is refreshed with the latest updates and then returned.\r\n     * Use this if you just made changes and need to see those changes right away.\r\n     */\r\n    Web.prototype.hubSiteData = function (forceRefresh) {\r\n        if (forceRefresh === void 0) { forceRefresh = false; }\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            return tslib_1.__generator(this, function (_a) {\r\n                return [2 /*return*/, this.clone(Web_1, \"hubSiteData(\" + forceRefresh + \")\").get().then(function (r) { return JSON.parse(r); })];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Applies theme updates from the parent hub site collection.\r\n     */\r\n    Web.prototype.syncHubSiteTheme = function () {\r\n        return this.clone(Web_1, \"syncHubSiteTheme\").postCore();\r\n    };\r\n    /**\r\n     * Retrieves a list of site design that have run on the current web\r\n     * @param siteDesignId (Optional) the site design ID, if not provided will return all site design runs\r\n     */\r\n    Web.prototype.getSiteDesignRuns = function (siteDesignId) {\r\n        return new SiteDesigns(this, \"\").getSiteDesignRun(undefined, siteDesignId);\r\n    };\r\n    /**\r\n     * Gets the site script syntax (JSON) for a specific web\r\n     * @param extractInfo configuration object to specify what to extract\r\n     */\r\n    Web.prototype.getSiteScript = function (extractInfo) {\r\n        return new SiteScripts(this, \"\").getSiteScriptFromWeb(undefined, extractInfo);\r\n    };\r\n    /**\r\n     * Adds a site design task on the current web to be invoked asynchronously.\r\n     * @param siteDesignId The ID of the site design to create a task for\r\n     */\r\n    Web.prototype.addSiteDesignTask = function (siteDesignId) {\r\n        return new SiteDesigns(this, \"\").addSiteDesignTaskToCurrentWeb(siteDesignId);\r\n    };\r\n    /**\r\n     * Retrieves the status of a site design that has been run or is still running\r\n     * @param runId the run ID\r\n     */\r\n    Web.prototype.getSiteDesignRunStatus = function (runId) {\r\n        return new SiteDesigns(this, \"\").getSiteDesignRunStatus(undefined, runId);\r\n    };\r\n    var Web_1;\r\n    Web = Web_1 = tslib_1.__decorate([\r\n        defaultPath(\"_api/web\")\r\n    ], Web);\r\n    return Web;\r\n}(SharePointQueryableShareableWeb));\r\nexport { Web };\r\n//# sourceMappingURL=webs.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryableInstance, defaultPath } from \"./sharepointqueryable\";\r\nimport { extend, jsS, hOP, getHashCode, objectDefinedNotNull, isArray } from \"@pnp/common\";\r\nimport { metadata } from \"./utils/metadata\";\r\nimport { CachingOptions } from \"@pnp/odata\";\r\nvar funcs = new Map([\r\n    [\"text\", \"Querytext\"],\r\n    [\"template\", \"QueryTemplate\"],\r\n    [\"sourceId\", \"SourceId\"],\r\n    [\"trimDuplicatesIncludeId\", \"\"],\r\n    [\"startRow\", \"\"],\r\n    [\"rowLimit\", \"\"],\r\n    [\"rankingModelId\", \"\"],\r\n    [\"rowsPerPage\", \"\"],\r\n    [\"selectProperties\", \"\"],\r\n    [\"culture\", \"\"],\r\n    [\"timeZoneId\", \"\"],\r\n    [\"refinementFilters\", \"\"],\r\n    [\"refiners\", \"\"],\r\n    [\"hiddenConstraints\", \"\"],\r\n    [\"sortList\", \"\"],\r\n    [\"timeout\", \"\"],\r\n    [\"hithighlightedProperties\", \"\"],\r\n    [\"clientType\", \"\"],\r\n    [\"personalizationData\", \"\"],\r\n    [\"resultsURL\", \"\"],\r\n    [\"queryTag\", \"\"],\r\n    [\"properties\", \"\"],\r\n    [\"queryTemplatePropertiesUrl\", \"\"],\r\n    [\"reorderingRules\", \"\"],\r\n    [\"hitHighlightedMultivaluePropertyLimit\", \"\"],\r\n    [\"collapseSpecification\", \"\"],\r\n    [\"uiLanguage\", \"\"],\r\n    [\"desiredSnippetLength\", \"\"],\r\n    [\"maxSnippetLength\", \"\"],\r\n    [\"summaryLength\", \"\"],\r\n]);\r\nvar props = new Map([]);\r\nfunction toPropCase(str) {\r\n    return str.replace(/^(.)/, function ($1) { return $1.toUpperCase(); });\r\n}\r\n/**\r\n * Creates a new instance of the SearchQueryBuilder\r\n *\r\n * @param queryText Initial query text\r\n * @param _query Any initial query configuration\r\n */\r\nexport function SearchQueryBuilder(queryText, _query) {\r\n    if (queryText === void 0) { queryText = \"\"; }\r\n    if (_query === void 0) { _query = {}; }\r\n    return new Proxy({\r\n        query: Object.assign({\r\n            Querytext: queryText,\r\n        }, _query),\r\n    }, {\r\n        get: function (self, propertyKey, proxy) {\r\n            var pk = propertyKey.toString();\r\n            if (pk === \"toSearchQuery\") {\r\n                return function () { return self.query; };\r\n            }\r\n            if (funcs.has(pk)) {\r\n                return function () {\r\n                    var value = [];\r\n                    for (var _i = 0; _i < arguments.length; _i++) {\r\n                        value[_i] = arguments[_i];\r\n                    }\r\n                    var mappedPk = funcs.get(pk);\r\n                    self.query[mappedPk.length > 0 ? mappedPk : toPropCase(pk)] = value.length > 1 ? value : value[0];\r\n                    return proxy;\r\n                };\r\n            }\r\n            var propKey = props.has(pk) ? props.get(pk) : toPropCase(pk);\r\n            self.query[propKey] = true;\r\n            return proxy;\r\n        },\r\n    });\r\n}\r\n/**\r\n * Describes the search API\r\n *\r\n */\r\nvar Search = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Search, _super);\r\n    function Search() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * @returns Promise\r\n     */\r\n    Search.prototype.execute = function (queryInit) {\r\n        var _this = this;\r\n        var query = this.parseQuery(queryInit);\r\n        var postBody = jsS({\r\n            request: extend(metadata(\"Microsoft.Office.Server.Search.REST.SearchRequest\"), Object.assign({}, query, {\r\n                HitHighlightedProperties: this.fixArrProp(query.HitHighlightedProperties),\r\n                Properties: this.fixArrProp(query.Properties),\r\n                RefinementFilters: this.fixArrProp(query.RefinementFilters),\r\n                ReorderingRules: this.fixArrProp(query.ReorderingRules),\r\n                SelectProperties: this.fixArrProp(query.SelectProperties),\r\n                SortList: this.fixArrProp(query.SortList),\r\n            })),\r\n        });\r\n        // if we are using caching with this search request, then we need to handle some work upfront to enable that\r\n        if (this._useCaching) {\r\n            // force use of the cache for this request if .usingCaching was called\r\n            this._forceCaching = true;\r\n            // because all the requests use the same url they would collide in the cache we use a special key\r\n            var cacheKey = \"PnPjs.SearchWithCaching(\" + getHashCode(postBody) + \")\";\r\n            if (objectDefinedNotNull(this._cachingOptions)) {\r\n                // if our key ends in the postquery url we overwrite it\r\n                if (/\\/_api\\/search\\/postquery$/i.test(this._cachingOptions.key)) {\r\n                    this._cachingOptions.key = cacheKey;\r\n                }\r\n            }\r\n            else {\r\n                this._cachingOptions = new CachingOptions(cacheKey);\r\n            }\r\n        }\r\n        return this.postCore({ body: postBody }).then(function (data) { return new SearchResults(data, _this.toUrl(), query); });\r\n    };\r\n    /**\r\n     * Fix array property\r\n     *\r\n     * @param prop property to fix for container struct\r\n     */\r\n    Search.prototype.fixArrProp = function (prop) {\r\n        if (typeof prop === \"undefined\") {\r\n            return ({ results: [] });\r\n        }\r\n        prop = isArray(prop) ? prop : [prop];\r\n        return hOP(prop, \"results\") ? prop : { results: prop };\r\n    };\r\n    /**\r\n     * Translates one of the query initializers into a SearchQuery instance\r\n     *\r\n     * @param query\r\n     */\r\n    Search.prototype.parseQuery = function (query) {\r\n        var finalQuery;\r\n        if (typeof query === \"string\") {\r\n            finalQuery = { Querytext: query };\r\n        }\r\n        else if (query.toSearchQuery) {\r\n            finalQuery = query.toSearchQuery();\r\n        }\r\n        else {\r\n            finalQuery = query;\r\n        }\r\n        return finalQuery;\r\n    };\r\n    Search = tslib_1.__decorate([\r\n        defaultPath(\"_api/search/postquery\")\r\n    ], Search);\r\n    return Search;\r\n}(SharePointQueryableInstance));\r\nexport { Search };\r\n/**\r\n * Describes the SearchResults class, which returns the formatted and raw version of the query response\r\n */\r\nvar SearchResults = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of the SearchResult class\r\n     *\r\n     */\r\n    function SearchResults(rawResponse, _url, _query, _raw, _primary) {\r\n        if (_raw === void 0) { _raw = null; }\r\n        if (_primary === void 0) { _primary = null; }\r\n        this._url = _url;\r\n        this._query = _query;\r\n        this._raw = _raw;\r\n        this._primary = _primary;\r\n        this._raw = rawResponse.postquery ? rawResponse.postquery : rawResponse;\r\n    }\r\n    Object.defineProperty(SearchResults.prototype, \"ElapsedTime\", {\r\n        get: function () {\r\n            return this.RawSearchResults.ElapsedTime;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchResults.prototype, \"RowCount\", {\r\n        get: function () {\r\n            return this.RawSearchResults.PrimaryQueryResult.RelevantResults.RowCount;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchResults.prototype, \"TotalRows\", {\r\n        get: function () {\r\n            return this.RawSearchResults.PrimaryQueryResult.RelevantResults.TotalRows;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchResults.prototype, \"TotalRowsIncludingDuplicates\", {\r\n        get: function () {\r\n            return this.RawSearchResults.PrimaryQueryResult.RelevantResults.TotalRowsIncludingDuplicates;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchResults.prototype, \"RawSearchResults\", {\r\n        get: function () {\r\n            return this._raw;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchResults.prototype, \"PrimarySearchResults\", {\r\n        get: function () {\r\n            if (this._primary === null) {\r\n                this._primary = this.formatSearchResults(this._raw.PrimaryQueryResult.RelevantResults.Table.Rows);\r\n            }\r\n            return this._primary;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets a page of results\r\n     *\r\n     * @param pageNumber Index of the page to return. Used to determine StartRow\r\n     * @param pageSize Optional, items per page (default = 10)\r\n     */\r\n    SearchResults.prototype.getPage = function (pageNumber, pageSize) {\r\n        // if we got all the available rows we don't have another page\r\n        if (this.TotalRows < this.RowCount) {\r\n            return Promise.resolve(null);\r\n        }\r\n        // if pageSize is supplied, then we use that regardless of any previous values\r\n        // otherwise get the previous RowLimit or default to 10\r\n        var rows = pageSize !== undefined ? pageSize : hOP(this._query, \"RowLimit\") ? this._query.RowLimit : 10;\r\n        var query = extend(this._query, {\r\n            RowLimit: rows,\r\n            StartRow: rows * (pageNumber - 1),\r\n        });\r\n        // we have reached the end\r\n        if (query.StartRow > this.TotalRows) {\r\n            return Promise.resolve(null);\r\n        }\r\n        var search = new Search(this._url, null);\r\n        return search.execute(query);\r\n    };\r\n    /**\r\n     * Formats a search results array\r\n     *\r\n     * @param rawResults The array to process\r\n     */\r\n    SearchResults.prototype.formatSearchResults = function (rawResults) {\r\n        var results = new Array();\r\n        var tempResults = rawResults.results ? rawResults.results : rawResults;\r\n        for (var _i = 0, tempResults_1 = tempResults; _i < tempResults_1.length; _i++) {\r\n            var tempResult = tempResults_1[_i];\r\n            var cells = tempResult.Cells.results ? tempResult.Cells.results : tempResult.Cells;\r\n            results.push(cells.reduce(function (res, cell) {\r\n                Object.defineProperty(res, cell.Key, {\r\n                    configurable: false,\r\n                    enumerable: true,\r\n                    value: cell.Value,\r\n                    writable: false,\r\n                });\r\n                return res;\r\n            }, {}));\r\n        }\r\n        return results;\r\n    };\r\n    return SearchResults;\r\n}());\r\nexport { SearchResults };\r\n/**\r\n * defines the SortDirection enum\r\n */\r\nexport var SortDirection;\r\n(function (SortDirection) {\r\n    SortDirection[SortDirection[\"Ascending\"] = 0] = \"Ascending\";\r\n    SortDirection[SortDirection[\"Descending\"] = 1] = \"Descending\";\r\n    SortDirection[SortDirection[\"FQLFormula\"] = 2] = \"FQLFormula\";\r\n})(SortDirection || (SortDirection = {}));\r\n/**\r\n * defines the ReorderingRuleMatchType  enum\r\n */\r\nexport var ReorderingRuleMatchType;\r\n(function (ReorderingRuleMatchType) {\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"ResultContainsKeyword\"] = 0] = \"ResultContainsKeyword\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"TitleContainsKeyword\"] = 1] = \"TitleContainsKeyword\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"TitleMatchesKeyword\"] = 2] = \"TitleMatchesKeyword\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"UrlStartsWith\"] = 3] = \"UrlStartsWith\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"UrlExactlyMatches\"] = 4] = \"UrlExactlyMatches\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"ContentTypeIs\"] = 5] = \"ContentTypeIs\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"FileExtensionMatches\"] = 6] = \"FileExtensionMatches\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"ResultHasTag\"] = 7] = \"ResultHasTag\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"ManualCondition\"] = 8] = \"ManualCondition\";\r\n})(ReorderingRuleMatchType || (ReorderingRuleMatchType = {}));\r\n/**\r\n * Specifies the type value for the property\r\n */\r\nexport var QueryPropertyValueType;\r\n(function (QueryPropertyValueType) {\r\n    QueryPropertyValueType[QueryPropertyValueType[\"None\"] = 0] = \"None\";\r\n    QueryPropertyValueType[QueryPropertyValueType[\"StringType\"] = 1] = \"StringType\";\r\n    QueryPropertyValueType[QueryPropertyValueType[\"Int32Type\"] = 2] = \"Int32Type\";\r\n    QueryPropertyValueType[QueryPropertyValueType[\"BooleanType\"] = 3] = \"BooleanType\";\r\n    QueryPropertyValueType[QueryPropertyValueType[\"StringArrayType\"] = 4] = \"StringArrayType\";\r\n    QueryPropertyValueType[QueryPropertyValueType[\"UnSupportedType\"] = 5] = \"UnSupportedType\";\r\n})(QueryPropertyValueType || (QueryPropertyValueType = {}));\r\nvar SearchBuiltInSourceId = /** @class */ (function () {\r\n    function SearchBuiltInSourceId() {\r\n    }\r\n    SearchBuiltInSourceId.Documents = \"e7ec8cee-ded8-43c9-beb5-436b54b31e84\";\r\n    SearchBuiltInSourceId.ItemsMatchingContentType = \"5dc9f503-801e-4ced-8a2c-5d1237132419\";\r\n    SearchBuiltInSourceId.ItemsMatchingTag = \"e1327b9c-2b8c-4b23-99c9-3730cb29c3f7\";\r\n    SearchBuiltInSourceId.ItemsRelatedToCurrentUser = \"48fec42e-4a92-48ce-8363-c2703a40e67d\";\r\n    SearchBuiltInSourceId.ItemsWithSameKeywordAsThisItem = \"5c069288-1d17-454a-8ac6-9c642a065f48\";\r\n    SearchBuiltInSourceId.LocalPeopleResults = \"b09a7990-05ea-4af9-81ef-edfab16c4e31\";\r\n    SearchBuiltInSourceId.LocalReportsAndDataResults = \"203fba36-2763-4060-9931-911ac8c0583b\";\r\n    SearchBuiltInSourceId.LocalSharePointResults = \"8413cd39-2156-4e00-b54d-11efd9abdb89\";\r\n    SearchBuiltInSourceId.LocalVideoResults = \"78b793ce-7956-4669-aa3b-451fc5defebf\";\r\n    SearchBuiltInSourceId.Pages = \"5e34578e-4d08-4edc-8bf3-002acf3cdbcc\";\r\n    SearchBuiltInSourceId.Pictures = \"38403c8c-3975-41a8-826e-717f2d41568a\";\r\n    SearchBuiltInSourceId.Popular = \"97c71db1-58ce-4891-8b64-585bc2326c12\";\r\n    SearchBuiltInSourceId.RecentlyChangedItems = \"ba63bbae-fa9c-42c0-b027-9a878f16557c\";\r\n    SearchBuiltInSourceId.RecommendedItems = \"ec675252-14fa-4fbe-84dd-8d098ed74181\";\r\n    SearchBuiltInSourceId.Wiki = \"9479bf85-e257-4318-b5a8-81a180f5faa1\";\r\n    return SearchBuiltInSourceId;\r\n}());\r\nexport { SearchBuiltInSourceId };\r\n//# sourceMappingURL=search.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryableInstance, defaultPath, } from \"./sharepointqueryable\";\r\nimport { jsS, hOP } from \"@pnp/common\";\r\nimport { metadata } from \"./utils/metadata\";\r\n/**\r\n * Exposes social following methods\r\n */\r\nvar SocialQuery = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SocialQuery, _super);\r\n    function SocialQuery() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    SocialQuery_1 = SocialQuery;\r\n    Object.defineProperty(SocialQuery.prototype, \"my\", {\r\n        get: function () {\r\n            return new MySocialQuery(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets a URI to a site that lists the current user's followed sites.\r\n     */\r\n    SocialQuery.prototype.getFollowedSitesUri = function () {\r\n        return this.clone(SocialQuery_1, \"FollowedSitesUri\").get().then(function (r) {\r\n            return r.FollowedSitesUri || r;\r\n        });\r\n    };\r\n    /**\r\n     * Gets a URI to a site that lists the current user's followed documents.\r\n     */\r\n    SocialQuery.prototype.getFollowedDocumentsUri = function () {\r\n        return this.clone(SocialQuery_1, \"FollowedDocumentsUri\").get().then(function (r) {\r\n            return r.FollowedDocumentsUri || r;\r\n        });\r\n    };\r\n    /**\r\n     * Makes the current user start following a user, document, site, or tag\r\n     *\r\n     * @param actorInfo The actor to start following\r\n     */\r\n    SocialQuery.prototype.follow = function (actorInfo) {\r\n        return this.clone(SocialQuery_1, \"follow\").postCore({ body: this.createSocialActorInfoRequestBody(actorInfo) });\r\n    };\r\n    /**\r\n     * Indicates whether the current user is following a specified user, document, site, or tag\r\n     *\r\n     * @param actorInfo The actor to find the following status for\r\n     */\r\n    SocialQuery.prototype.isFollowed = function (actorInfo) {\r\n        return this.clone(SocialQuery_1, \"isfollowed\").postCore({ body: this.createSocialActorInfoRequestBody(actorInfo) });\r\n    };\r\n    /**\r\n     * Makes the current user stop following a user, document, site, or tag\r\n     *\r\n     * @param actorInfo The actor to stop following\r\n     */\r\n    SocialQuery.prototype.stopFollowing = function (actorInfo) {\r\n        return this.clone(SocialQuery_1, \"stopfollowing\").postCore({ body: this.createSocialActorInfoRequestBody(actorInfo) });\r\n    };\r\n    /**\r\n     * Creates SocialActorInfo request body\r\n     *\r\n     * @param actorInfo The actor to create request body\r\n     */\r\n    SocialQuery.prototype.createSocialActorInfoRequestBody = function (actorInfo) {\r\n        return jsS({\r\n            \"actor\": Object.assign(metadata(\"SP.Social.SocialActorInfo\"), {\r\n                Id: null,\r\n            }, actorInfo),\r\n        });\r\n    };\r\n    var SocialQuery_1;\r\n    SocialQuery = SocialQuery_1 = tslib_1.__decorate([\r\n        defaultPath(\"_api/social.following\")\r\n    ], SocialQuery);\r\n    return SocialQuery;\r\n}(SharePointQueryableInstance));\r\nexport { SocialQuery };\r\nvar MySocialQuery = /** @class */ (function (_super) {\r\n    tslib_1.__extends(MySocialQuery, _super);\r\n    function MySocialQuery() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    MySocialQuery_1 = MySocialQuery;\r\n    /**\r\n     * Gets users, documents, sites, and tags that the current user is following.\r\n     *\r\n     * @param types Bitwise set of SocialActorTypes to retrieve\r\n     */\r\n    MySocialQuery.prototype.followed = function (types) {\r\n        return this.clone(MySocialQuery_1, \"followed(types=\" + types + \")\").get().then(function (r) {\r\n            return hOP(r, \"Followed\") ? r.Followed.results : r;\r\n        });\r\n    };\r\n    /**\r\n     * Gets the count of users, documents, sites, and tags that the current user is following.\r\n     *\r\n     * @param types Bitwise set of SocialActorTypes to retrieve\r\n     */\r\n    MySocialQuery.prototype.followedCount = function (types) {\r\n        return this.clone(MySocialQuery_1, \"followedcount(types=\" + types + \")\").get().then(function (r) {\r\n            return r.FollowedCount || r;\r\n        });\r\n    };\r\n    /**\r\n     * Gets the users who are following the current user.\r\n     */\r\n    MySocialQuery.prototype.followers = function () {\r\n        return this.clone(MySocialQuery_1, \"followers\").get().then(function (r) {\r\n            return hOP(r, \"Followers\") ? r.Followers.results : r;\r\n        });\r\n    };\r\n    /**\r\n     * Gets users who the current user might want to follow.\r\n     */\r\n    MySocialQuery.prototype.suggestions = function () {\r\n        return this.clone(MySocialQuery_1, \"suggestions\").get().then(function (r) {\r\n            return hOP(r, \"Suggestions\") ? r.Suggestions.results : r;\r\n        });\r\n    };\r\n    var MySocialQuery_1;\r\n    MySocialQuery = MySocialQuery_1 = tslib_1.__decorate([\r\n        defaultPath(\"my\")\r\n    ], MySocialQuery);\r\n    return MySocialQuery;\r\n}(SharePointQueryableInstance));\r\nexport { MySocialQuery };\r\n/**\r\n * Social actor type\r\n *\r\n */\r\nexport var SocialActorType;\r\n(function (SocialActorType) {\r\n    SocialActorType[SocialActorType[\"User\"] = 0] = \"User\";\r\n    SocialActorType[SocialActorType[\"Document\"] = 1] = \"Document\";\r\n    SocialActorType[SocialActorType[\"Site\"] = 2] = \"Site\";\r\n    SocialActorType[SocialActorType[\"Tag\"] = 3] = \"Tag\";\r\n})(SocialActorType || (SocialActorType = {}));\r\n/**\r\n * Social actor type\r\n *\r\n */\r\n/* tslint:disable:no-bitwise */\r\nexport var SocialActorTypes;\r\n(function (SocialActorTypes) {\r\n    SocialActorTypes[SocialActorTypes[\"None\"] = 0] = \"None\";\r\n    SocialActorTypes[SocialActorTypes[\"User\"] = 1] = \"User\";\r\n    SocialActorTypes[SocialActorTypes[\"Document\"] = 2] = \"Document\";\r\n    SocialActorTypes[SocialActorTypes[\"Site\"] = 4] = \"Site\";\r\n    SocialActorTypes[SocialActorTypes[\"Tag\"] = 8] = \"Tag\";\r\n    /**\r\n     * The set excludes documents and sites that do not have feeds.\r\n     */\r\n    SocialActorTypes[SocialActorTypes[\"ExcludeContentWithoutFeeds\"] = 268435456] = \"ExcludeContentWithoutFeeds\";\r\n    /**\r\n     * The set includes group sites\r\n     */\r\n    SocialActorTypes[SocialActorTypes[\"IncludeGroupsSites\"] = 536870912] = \"IncludeGroupsSites\";\r\n    /**\r\n     * The set includes only items created within the last 24 hours\r\n     */\r\n    SocialActorTypes[SocialActorTypes[\"WithinLast24Hours\"] = 1073741824] = \"WithinLast24Hours\";\r\n})(SocialActorTypes || (SocialActorTypes = {}));\r\n/* tslint:enable */\r\n/**\r\n * Result from following\r\n *\r\n */\r\nexport var SocialFollowResult;\r\n(function (SocialFollowResult) {\r\n    SocialFollowResult[SocialFollowResult[\"Ok\"] = 0] = \"Ok\";\r\n    SocialFollowResult[SocialFollowResult[\"AlreadyFollowing\"] = 1] = \"AlreadyFollowing\";\r\n    SocialFollowResult[SocialFollowResult[\"LimitReached\"] = 2] = \"LimitReached\";\r\n    SocialFollowResult[SocialFollowResult[\"InternalError\"] = 3] = \"InternalError\";\r\n})(SocialFollowResult || (SocialFollowResult = {}));\r\n/**\r\n * Specifies an exception or status code.\r\n */\r\nexport var SocialStatusCode;\r\n(function (SocialStatusCode) {\r\n    /**\r\n     * The operation completed successfully\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"OK\"] = 0] = \"OK\";\r\n    /**\r\n     * The request is invalid.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"InvalidRequest\"] = 1] = \"InvalidRequest\";\r\n    /**\r\n     *  The current user is not authorized to perform the operation.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"AccessDenied\"] = 2] = \"AccessDenied\";\r\n    /**\r\n     * The target of the operation was not found.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"ItemNotFound\"] = 3] = \"ItemNotFound\";\r\n    /**\r\n     * The operation is invalid for the target's current state.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"InvalidOperation\"] = 4] = \"InvalidOperation\";\r\n    /**\r\n     * The operation completed without modifying the target.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"ItemNotModified\"] = 5] = \"ItemNotModified\";\r\n    /**\r\n     * The operation failed because an internal error occurred.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"InternalError\"] = 6] = \"InternalError\";\r\n    /**\r\n     * The operation failed because the server could not access the distributed cache.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"CacheReadError\"] = 7] = \"CacheReadError\";\r\n    /**\r\n     * The operation succeeded but the server could not update the distributed cache.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"CacheUpdateError\"] = 8] = \"CacheUpdateError\";\r\n    /**\r\n     * No personal site exists for the current user, and no further information is available.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"PersonalSiteNotFound\"] = 9] = \"PersonalSiteNotFound\";\r\n    /**\r\n     * No personal site exists for the current user, and a previous attempt to create one failed.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"FailedToCreatePersonalSite\"] = 10] = \"FailedToCreatePersonalSite\";\r\n    /**\r\n     * No personal site exists for the current user, and a previous attempt to create one was not authorized.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"NotAuthorizedToCreatePersonalSite\"] = 11] = \"NotAuthorizedToCreatePersonalSite\";\r\n    /**\r\n     * No personal site exists for the current user, and no attempt should be made to create one.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"CannotCreatePersonalSite\"] = 12] = \"CannotCreatePersonalSite\";\r\n    /**\r\n     * The operation was rejected because an internal limit had been reached.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"LimitReached\"] = 13] = \"LimitReached\";\r\n    /**\r\n     * The operation failed because an error occurred during the processing of the specified attachment.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"AttachmentError\"] = 14] = \"AttachmentError\";\r\n    /**\r\n     * The operation succeeded with recoverable errors; the returned data is incomplete.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"PartialData\"] = 15] = \"PartialData\";\r\n    /**\r\n     * A required SharePoint feature is not enabled.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"FeatureDisabled\"] = 16] = \"FeatureDisabled\";\r\n    /**\r\n     * The site's storage quota has been exceeded.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"StorageQuotaExceeded\"] = 17] = \"StorageQuotaExceeded\";\r\n    /**\r\n     * The operation failed because the server could not access the database.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"DatabaseError\"] = 18] = \"DatabaseError\";\r\n})(SocialStatusCode || (SocialStatusCode = {}));\r\n//# sourceMappingURL=social.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryableInstance, defaultPath } from \"./sharepointqueryable\";\r\nimport { hOP } from \"@pnp/common\";\r\nvar SearchSuggest = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SearchSuggest, _super);\r\n    function SearchSuggest() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    SearchSuggest.prototype.execute = function (query) {\r\n        this.mapQueryToQueryString(query);\r\n        return this.get().then(function (response) {\r\n            var mapper = hOP(response, \"suggest\") ? function (s) { return response.suggest[s].results; } : function (s) { return response[s]; };\r\n            return {\r\n                PeopleNames: mapper(\"PeopleNames\"),\r\n                PersonalResults: mapper(\"PersonalResults\"),\r\n                Queries: mapper(\"Queries\"),\r\n            };\r\n        });\r\n    };\r\n    SearchSuggest.prototype.mapQueryToQueryString = function (query) {\r\n        var _this = this;\r\n        var setProp = function (q) { return function (checkProp) { return function (sp) {\r\n            if (hOP(q, checkProp)) {\r\n                _this.query.set(sp, q[checkProp].toString());\r\n            }\r\n        }; }; };\r\n        this.query.set(\"querytext\", \"'\" + query.querytext + \"'\");\r\n        var querySetter = setProp(query);\r\n        querySetter(\"count\")(\"inumberofquerysuggestions\");\r\n        querySetter(\"personalCount\")(\"inumberofresultsuggestions\");\r\n        querySetter(\"preQuery\")(\"fprequerysuggestions\");\r\n        querySetter(\"hitHighlighting\")(\"fhithighlighting\");\r\n        querySetter(\"capitalize\")(\"fcapitalizefirstletters\");\r\n        querySetter(\"culture\")(\"culture\");\r\n        querySetter(\"stemming\")(\"enablestemming\");\r\n        querySetter(\"includePeople\")(\"showpeoplenamesuggestions\");\r\n        querySetter(\"queryRules\")(\"enablequeryrules\");\r\n        querySetter(\"prefixMatch\")(\"fprefixmatchallterms\");\r\n    };\r\n    SearchSuggest = tslib_1.__decorate([\r\n        defaultPath(\"_api/search/suggest\")\r\n    ], SearchSuggest);\r\n    return SearchSuggest;\r\n}(SharePointQueryableInstance));\r\nexport { SearchSuggest };\r\n//# sourceMappingURL=searchsuggest.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryable, SharePointQueryableInstance, SharePointQueryableCollection, defaultPath } from \"./sharepointqueryable\";\r\nimport { extend, jsS } from \"@pnp/common\";\r\nimport { metadata } from \"./utils/metadata\";\r\nvar UserProfileQuery = /** @class */ (function (_super) {\r\n    tslib_1.__extends(UserProfileQuery, _super);\r\n    /**\r\n     * Creates a new instance of the UserProfileQuery class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this user profile query\r\n     */\r\n    function UserProfileQuery(baseUrl, path) {\r\n        if (path === void 0) { path = \"_api/sp.userprofiles.peoplemanager\"; }\r\n        var _this = _super.call(this, baseUrl, path) || this;\r\n        _this.clientPeoplePickerQuery = (new ClientPeoplePickerQuery(baseUrl)).configureFrom(_this);\r\n        _this.profileLoader = (new ProfileLoader(baseUrl)).configureFrom(_this);\r\n        return _this;\r\n    }\r\n    Object.defineProperty(UserProfileQuery.prototype, \"editProfileLink\", {\r\n        /**\r\n         * The url of the edit profile page for the current user\r\n         */\r\n        get: function () {\r\n            return this.clone(UserProfileQuery, \"EditProfileLink\").get();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(UserProfileQuery.prototype, \"isMyPeopleListPublic\", {\r\n        /**\r\n         * A boolean value that indicates whether the current user's \"People I'm Following\" list is public\r\n         */\r\n        get: function () {\r\n            return this.clone(UserProfileQuery, \"IsMyPeopleListPublic\").get();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * A boolean value that indicates whether the current user is being followed by the specified user\r\n     *\r\n     * @param loginName The account name of the user\r\n     */\r\n    UserProfileQuery.prototype.amIFollowedBy = function (loginName) {\r\n        var q = this.clone(UserProfileQuery, \"amifollowedby(@v)\");\r\n        q.query.set(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.get();\r\n    };\r\n    /**\r\n     * A boolean value that indicates whether the current user is following the specified user\r\n     *\r\n     * @param loginName The account name of the user\r\n     */\r\n    UserProfileQuery.prototype.amIFollowing = function (loginName) {\r\n        var q = this.clone(UserProfileQuery, \"amifollowing(@v)\");\r\n        q.query.set(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.get();\r\n    };\r\n    /**\r\n     * Gets tags that the current user is following\r\n     *\r\n     * @param maxCount The maximum number of tags to retrieve (default is 20)\r\n     */\r\n    UserProfileQuery.prototype.getFollowedTags = function (maxCount) {\r\n        if (maxCount === void 0) { maxCount = 20; }\r\n        return this.clone(UserProfileQuery, \"getfollowedtags(\" + maxCount + \")\").get();\r\n    };\r\n    /**\r\n     * Gets the people who are following the specified user\r\n     *\r\n     * @param loginName The account name of the user\r\n     */\r\n    UserProfileQuery.prototype.getFollowersFor = function (loginName) {\r\n        var q = this.clone(UserProfileQuery, \"getfollowersfor(@v)\");\r\n        q.query.set(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.get();\r\n    };\r\n    Object.defineProperty(UserProfileQuery.prototype, \"myFollowers\", {\r\n        /**\r\n         * Gets the people who are following the current user\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableCollection(this, \"getmyfollowers\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(UserProfileQuery.prototype, \"myProperties\", {\r\n        /**\r\n         * Gets user properties for the current user\r\n         *\r\n         */\r\n        get: function () {\r\n            return new UserProfileQuery(this, \"getmyproperties\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets the people who the specified user is following\r\n     *\r\n     * @param loginName The account name of the user.\r\n     */\r\n    UserProfileQuery.prototype.getPeopleFollowedBy = function (loginName) {\r\n        var q = this.clone(UserProfileQuery, \"getpeoplefollowedby(@v)\");\r\n        q.query.set(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.get();\r\n    };\r\n    /**\r\n     * Gets user properties for the specified user.\r\n     *\r\n     * @param loginName The account name of the user.\r\n     */\r\n    UserProfileQuery.prototype.getPropertiesFor = function (loginName) {\r\n        var q = this.clone(UserProfileQuery, \"getpropertiesfor(@v)\");\r\n        q.query.set(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.get();\r\n    };\r\n    Object.defineProperty(UserProfileQuery.prototype, \"trendingTags\", {\r\n        /**\r\n         * Gets the 20 most popular hash tags over the past week, sorted so that the most popular tag appears first\r\n         *\r\n         */\r\n        get: function () {\r\n            var q = this.clone(UserProfileQuery, null);\r\n            q.concat(\".gettrendingtags\");\r\n            return q.get();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets the specified user profile property for the specified user\r\n     *\r\n     * @param loginName The account name of the user\r\n     * @param propertyName The case-sensitive name of the property to get\r\n     */\r\n    UserProfileQuery.prototype.getUserProfilePropertyFor = function (loginName, propertyName) {\r\n        var q = this.clone(UserProfileQuery, \"getuserprofilepropertyfor(accountname=@v, propertyname='\" + propertyName + \"')\");\r\n        q.query.set(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.get();\r\n    };\r\n    /**\r\n     * Removes the specified user from the user's list of suggested people to follow\r\n     *\r\n     * @param loginName The account name of the user\r\n     */\r\n    UserProfileQuery.prototype.hideSuggestion = function (loginName) {\r\n        var q = this.clone(UserProfileQuery, \"hidesuggestion(@v)\");\r\n        q.query.set(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.postCore();\r\n    };\r\n    /**\r\n     * A boolean values that indicates whether the first user is following the second user\r\n     *\r\n     * @param follower The account name of the user who might be following the followee\r\n     * @param followee The account name of the user who might be followed by the follower\r\n     */\r\n    UserProfileQuery.prototype.isFollowing = function (follower, followee) {\r\n        var q = this.clone(UserProfileQuery, null);\r\n        q.concat(\".isfollowing(possiblefolloweraccountname=@v, possiblefolloweeaccountname=@y)\");\r\n        q.query.set(\"@v\", \"'\" + encodeURIComponent(follower) + \"'\");\r\n        q.query.set(\"@y\", \"'\" + encodeURIComponent(followee) + \"'\");\r\n        return q.get();\r\n    };\r\n    /**\r\n     * Uploads and sets the user profile picture (Users can upload a picture to their own profile only). Not supported for batching.\r\n     *\r\n     * @param profilePicSource Blob data representing the user's picture in BMP, JPEG, or PNG format of up to 4.76MB\r\n     */\r\n    UserProfileQuery.prototype.setMyProfilePic = function (profilePicSource) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            var buffer = null;\r\n            var reader = new FileReader();\r\n            reader.onload = function (e) { return buffer = e.target.result; };\r\n            reader.readAsArrayBuffer(profilePicSource);\r\n            var request = new UserProfileQuery(_this, \"setmyprofilepicture\");\r\n            request.postCore({\r\n                body: String.fromCharCode.apply(null, new Uint16Array(buffer)),\r\n            }).then(function (_) { return resolve(); }).catch(function (e) { return reject(e); });\r\n        });\r\n    };\r\n    /**\r\n     * Sets single value User Profile property\r\n     *\r\n     * @param accountName The account name of the user\r\n     * @param propertyName Property name\r\n     * @param propertyValue Property value\r\n     */\r\n    UserProfileQuery.prototype.setSingleValueProfileProperty = function (accountName, propertyName, propertyValue) {\r\n        var postBody = jsS({\r\n            accountName: accountName,\r\n            propertyName: propertyName,\r\n            propertyValue: propertyValue,\r\n        });\r\n        return this.clone(UserProfileQuery, \"SetSingleValueProfileProperty\")\r\n            .postCore({ body: postBody });\r\n    };\r\n    /**\r\n     * Sets multi valued User Profile property\r\n     *\r\n     * @param accountName The account name of the user\r\n     * @param propertyName Property name\r\n     * @param propertyValues Property values\r\n     */\r\n    UserProfileQuery.prototype.setMultiValuedProfileProperty = function (accountName, propertyName, propertyValues) {\r\n        var postBody = jsS({\r\n            accountName: accountName,\r\n            propertyName: propertyName,\r\n            propertyValues: propertyValues,\r\n        });\r\n        return this.clone(UserProfileQuery, \"SetMultiValuedProfileProperty\")\r\n            .postCore({ body: postBody });\r\n    };\r\n    /**\r\n     * Provisions one or more users' personal sites. (My Site administrator on SharePoint Online only)\r\n     *\r\n     * @param emails The email addresses of the users to provision sites for\r\n     */\r\n    UserProfileQuery.prototype.createPersonalSiteEnqueueBulk = function () {\r\n        var emails = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            emails[_i] = arguments[_i];\r\n        }\r\n        return this.profileLoader.createPersonalSiteEnqueueBulk(emails);\r\n    };\r\n    Object.defineProperty(UserProfileQuery.prototype, \"ownerUserProfile\", {\r\n        /**\r\n         * Gets the user profile of the site owner\r\n         *\r\n         */\r\n        get: function () {\r\n            return this.profileLoader.ownerUserProfile;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(UserProfileQuery.prototype, \"userProfile\", {\r\n        /**\r\n         * Gets the user profile for the current user\r\n         */\r\n        get: function () {\r\n            return this.profileLoader.userProfile;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Enqueues creating a personal site for this user, which can be used to share documents, web pages, and other files\r\n     *\r\n     * @param interactiveRequest true if interactively (web) initiated request, or false (default) if non-interactively (client) initiated request\r\n     */\r\n    UserProfileQuery.prototype.createPersonalSite = function (interactiveRequest) {\r\n        if (interactiveRequest === void 0) { interactiveRequest = false; }\r\n        return this.profileLoader.createPersonalSite(interactiveRequest);\r\n    };\r\n    /**\r\n     * Sets the privacy settings for this profile\r\n     *\r\n     * @param share true to make all social data public; false to make all social data private\r\n     */\r\n    UserProfileQuery.prototype.shareAllSocialData = function (share) {\r\n        return this.profileLoader.shareAllSocialData(share);\r\n    };\r\n    /**\r\n     * Resolves user or group using specified query parameters\r\n     *\r\n     * @param queryParams The query parameters used to perform resolve\r\n     */\r\n    UserProfileQuery.prototype.clientPeoplePickerResolveUser = function (queryParams) {\r\n        return this.clientPeoplePickerQuery.clientPeoplePickerResolveUser(queryParams);\r\n    };\r\n    /**\r\n     * Searches for users or groups using specified query parameters\r\n     *\r\n     * @param queryParams The query parameters used to perform search\r\n     */\r\n    UserProfileQuery.prototype.clientPeoplePickerSearchUser = function (queryParams) {\r\n        return this.clientPeoplePickerQuery.clientPeoplePickerSearchUser(queryParams);\r\n    };\r\n    return UserProfileQuery;\r\n}(SharePointQueryableInstance));\r\nexport { UserProfileQuery };\r\nvar ProfileLoader = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ProfileLoader, _super);\r\n    function ProfileLoader() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    ProfileLoader_1 = ProfileLoader;\r\n    /**\r\n     * Provisions one or more users' personal sites. (My Site administrator on SharePoint Online only) Doesn't support batching\r\n     *\r\n     * @param emails The email addresses of the users to provision sites for\r\n     */\r\n    ProfileLoader.prototype.createPersonalSiteEnqueueBulk = function (emails) {\r\n        return this.clone(ProfileLoader_1, \"createpersonalsiteenqueuebulk\", false).postCore({\r\n            body: jsS({ \"emailIDs\": emails }),\r\n        });\r\n    };\r\n    Object.defineProperty(ProfileLoader.prototype, \"ownerUserProfile\", {\r\n        /**\r\n         * Gets the user profile of the site owner.\r\n         *\r\n         */\r\n        get: function () {\r\n            var q = this.getParent(ProfileLoader_1, this.parentUrl, \"_api/sp.userprofiles.profileloader.getowneruserprofile\");\r\n            if (this.hasBatch) {\r\n                q = q.inBatch(this.batch);\r\n            }\r\n            return q.postCore();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ProfileLoader.prototype, \"userProfile\", {\r\n        /**\r\n         * Gets the user profile of the current user.\r\n         *\r\n         */\r\n        get: function () {\r\n            return this.clone(ProfileLoader_1, \"getuserprofile\").postCore();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Enqueues creating a personal site for this user, which can be used to share documents, web pages, and other files.\r\n     *\r\n     * @param interactiveRequest true if interactively (web) initiated request, or false (default) if non-interactively (client) initiated request\r\n     */\r\n    ProfileLoader.prototype.createPersonalSite = function (interactiveRequest) {\r\n        if (interactiveRequest === void 0) { interactiveRequest = false; }\r\n        return this.clone(ProfileLoader_1, \"getuserprofile/createpersonalsiteenque(\" + interactiveRequest + \")\").postCore();\r\n    };\r\n    /**\r\n     * Sets the privacy settings for this profile\r\n     *\r\n     * @param share true to make all social data public; false to make all social data private.\r\n     */\r\n    ProfileLoader.prototype.shareAllSocialData = function (share) {\r\n        return this.clone(ProfileLoader_1, \"getuserprofile/shareallsocialdata(\" + share + \")\").postCore();\r\n    };\r\n    var ProfileLoader_1;\r\n    ProfileLoader = ProfileLoader_1 = tslib_1.__decorate([\r\n        defaultPath(\"_api/sp.userprofiles.profileloader.getprofileloader\")\r\n    ], ProfileLoader);\r\n    return ProfileLoader;\r\n}(SharePointQueryable));\r\nvar ClientPeoplePickerQuery = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ClientPeoplePickerQuery, _super);\r\n    function ClientPeoplePickerQuery() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    ClientPeoplePickerQuery_1 = ClientPeoplePickerQuery;\r\n    /**\r\n     * Resolves user or group using specified query parameters\r\n     *\r\n     * @param queryParams The query parameters used to perform resolve\r\n     */\r\n    ClientPeoplePickerQuery.prototype.clientPeoplePickerResolveUser = function (queryParams) {\r\n        var q = this.clone(ClientPeoplePickerQuery_1, null);\r\n        q.concat(\".clientpeoplepickerresolveuser\");\r\n        return q.postCore({\r\n            body: this.createClientPeoplePickerQueryParametersRequestBody(queryParams),\r\n        })\r\n            .then(function (res) {\r\n            if (typeof res === \"object\") {\r\n                return res.ClientPeoplePickerResolveUser;\r\n            }\r\n            return res;\r\n        })\r\n            .then(JSON.parse);\r\n    };\r\n    /**\r\n     * Searches for users or groups using specified query parameters\r\n     *\r\n     * @param queryParams The query parameters used to perform search\r\n     */\r\n    ClientPeoplePickerQuery.prototype.clientPeoplePickerSearchUser = function (queryParams) {\r\n        var q = this.clone(ClientPeoplePickerQuery_1, null);\r\n        q.concat(\".clientpeoplepickersearchuser\");\r\n        return q.postCore({\r\n            body: this.createClientPeoplePickerQueryParametersRequestBody(queryParams),\r\n        })\r\n            .then(function (res) {\r\n            if (typeof res === \"object\") {\r\n                return res.ClientPeoplePickerSearchUser;\r\n            }\r\n            return res;\r\n        })\r\n            .then(JSON.parse);\r\n    };\r\n    /**\r\n     * Creates ClientPeoplePickerQueryParameters request body\r\n     *\r\n     * @param queryParams The query parameters to create request body\r\n     */\r\n    ClientPeoplePickerQuery.prototype.createClientPeoplePickerQueryParametersRequestBody = function (queryParams) {\r\n        return jsS({\r\n            \"queryParams\": extend(metadata(\"SP.UI.ApplicationPages.ClientPeoplePickerQueryParameters\"), queryParams),\r\n        });\r\n    };\r\n    var ClientPeoplePickerQuery_1;\r\n    ClientPeoplePickerQuery = ClientPeoplePickerQuery_1 = tslib_1.__decorate([\r\n        defaultPath(\"_api/sp.ui.applicationpages.clientpeoplepickerwebserviceinterface\")\r\n    ], ClientPeoplePickerQuery);\r\n    return ClientPeoplePickerQuery;\r\n}(SharePointQueryable));\r\n//# sourceMappingURL=userprofiles.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryable } from \"./sharepointqueryable\";\r\nimport { extend, jsS, hOP } from \"@pnp/common\";\r\nimport { File } from \"./files\";\r\nimport { odataUrlFrom } from \"./odata\";\r\nimport { metadata } from \"./utils/metadata\";\r\n/**\r\n * Allows for calling of the static SP.Utilities.Utility methods by supplying the method name\r\n */\r\nvar UtilityMethod = /** @class */ (function (_super) {\r\n    tslib_1.__extends(UtilityMethod, _super);\r\n    /**\r\n     * Creates a new instance of the Utility method class\r\n     *\r\n     * @param baseUrl The parent url provider\r\n     * @param methodName The static method name to call on the utility class\r\n     */\r\n    function UtilityMethod(baseUrl, methodName) {\r\n        return _super.call(this, UtilityMethod.getBaseUrl(baseUrl), \"_api/SP.Utilities.Utility.\" + methodName) || this;\r\n    }\r\n    UtilityMethod.getBaseUrl = function (candidate) {\r\n        if (typeof candidate === \"string\") {\r\n            return candidate;\r\n        }\r\n        var c = candidate;\r\n        var url = c.toUrl();\r\n        var index = url.indexOf(\"_api/\");\r\n        if (index < 0) {\r\n            return url;\r\n        }\r\n        return url.substr(0, index);\r\n    };\r\n    UtilityMethod.prototype.excute = function (props) {\r\n        return this.postCore({\r\n            body: jsS(props),\r\n        });\r\n    };\r\n    /**\r\n     * Sends an email based on the supplied properties\r\n     *\r\n     * @param props The properties of the email to send\r\n     */\r\n    UtilityMethod.prototype.sendEmail = function (props) {\r\n        var params = {\r\n            properties: extend(metadata(\"SP.Utilities.EmailProperties\"), {\r\n                Body: props.Body,\r\n                From: props.From,\r\n                Subject: props.Subject,\r\n            }),\r\n        };\r\n        if (props.To && props.To.length > 0) {\r\n            params.properties = extend(params.properties, {\r\n                To: { results: props.To },\r\n            });\r\n        }\r\n        if (props.CC && props.CC.length > 0) {\r\n            params.properties = extend(params.properties, {\r\n                CC: { results: props.CC },\r\n            });\r\n        }\r\n        if (props.BCC && props.BCC.length > 0) {\r\n            params.properties = extend(params.properties, {\r\n                BCC: { results: props.BCC },\r\n            });\r\n        }\r\n        if (props.AdditionalHeaders) {\r\n            params.properties = extend(params.properties, {\r\n                AdditionalHeaders: props.AdditionalHeaders,\r\n            });\r\n        }\r\n        return this.clone(UtilityMethod, \"SendEmail\", true).excute(params);\r\n    };\r\n    UtilityMethod.prototype.getCurrentUserEmailAddresses = function () {\r\n        return this.clone(UtilityMethod, \"GetCurrentUserEmailAddresses\", true).excute({}).then(function (r) {\r\n            return hOP(r, \"GetCurrentUserEmailAddresses\") ? r.GetCurrentUserEmailAddresses : r;\r\n        });\r\n    };\r\n    UtilityMethod.prototype.resolvePrincipal = function (input, scopes, sources, inputIsEmailOnly, addToUserInfoList, matchUserInfoList) {\r\n        if (matchUserInfoList === void 0) { matchUserInfoList = false; }\r\n        var params = {\r\n            addToUserInfoList: addToUserInfoList,\r\n            input: input,\r\n            inputIsEmailOnly: inputIsEmailOnly,\r\n            matchUserInfoList: matchUserInfoList,\r\n            scopes: scopes,\r\n            sources: sources,\r\n        };\r\n        return this.clone(UtilityMethod, \"ResolvePrincipalInCurrentContext\", true).excute(params).then(function (r) {\r\n            return hOP(r, \"ResolvePrincipalInCurrentContext\") ? r.ResolvePrincipalInCurrentContext : r;\r\n        });\r\n    };\r\n    UtilityMethod.prototype.searchPrincipals = function (input, scopes, sources, groupName, maxCount) {\r\n        var params = {\r\n            groupName: groupName,\r\n            input: input,\r\n            maxCount: maxCount,\r\n            scopes: scopes,\r\n            sources: sources,\r\n        };\r\n        return this.clone(UtilityMethod, \"SearchPrincipalsUsingContextWeb\", true).excute(params).then(function (r) {\r\n            return hOP(r, \"SearchPrincipalsUsingContextWeb\") ? r.SearchPrincipalsUsingContextWeb : r;\r\n        });\r\n    };\r\n    UtilityMethod.prototype.createEmailBodyForInvitation = function (pageAddress) {\r\n        var params = {\r\n            pageAddress: pageAddress,\r\n        };\r\n        return this.clone(UtilityMethod, \"CreateEmailBodyForInvitation\", true).excute(params).then(function (r) {\r\n            return hOP(r, \"CreateEmailBodyForInvitation\") ? r.CreateEmailBodyForInvitation : r;\r\n        });\r\n    };\r\n    UtilityMethod.prototype.expandGroupsToPrincipals = function (inputs, maxCount) {\r\n        if (maxCount === void 0) { maxCount = 30; }\r\n        var params = {\r\n            inputs: inputs,\r\n            maxCount: maxCount,\r\n        };\r\n        return this.clone(UtilityMethod, \"ExpandGroupsToPrincipals\", true).excute(params).then(function (r) {\r\n            return hOP(r, \"ExpandGroupsToPrincipals\") ? r.ExpandGroupsToPrincipals : r;\r\n        });\r\n    };\r\n    UtilityMethod.prototype.createWikiPage = function (info) {\r\n        return this.clone(UtilityMethod, \"CreateWikiPageInContextWeb\", true).excute({\r\n            parameters: info,\r\n        }).then(function (r) {\r\n            return {\r\n                data: hOP(r, \"CreateWikiPageInContextWeb\") ? r.CreateWikiPageInContextWeb : r,\r\n                file: new File(odataUrlFrom(r)),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Checks if file or folder name contains invalid characters\r\n     *\r\n     * @param input File or folder name to check\r\n     * @param onPremise Set to true for SharePoint On-Premise\r\n     * @returns True if contains invalid chars, false otherwise\r\n     */\r\n    UtilityMethod.prototype.containsInvalidFileFolderChars = function (input, onPremise) {\r\n        if (onPremise === void 0) { onPremise = false; }\r\n        if (onPremise) {\r\n            return UtilityMethod.InvalidFileFolderNameCharsOnPremiseRegex.test(input);\r\n        }\r\n        else {\r\n            return UtilityMethod.InvalidFileFolderNameCharsOnlineRegex.test(input);\r\n        }\r\n    };\r\n    /**\r\n     * Removes invalid characters from file or folder name\r\n     *\r\n     * @param input File or folder name\r\n     * @param replacer Value that will replace invalid characters\r\n     * @param onPremise Set to true for SharePoint On-Premise\r\n     * @returns File or folder name with replaced invalid characters\r\n     */\r\n    UtilityMethod.prototype.stripInvalidFileFolderChars = function (input, replacer, onPremise) {\r\n        if (replacer === void 0) { replacer = \"\"; }\r\n        if (onPremise === void 0) { onPremise = false; }\r\n        if (onPremise) {\r\n            return input.replace(UtilityMethod.InvalidFileFolderNameCharsOnPremiseRegex, replacer);\r\n        }\r\n        else {\r\n            return input.replace(UtilityMethod.InvalidFileFolderNameCharsOnlineRegex, replacer);\r\n        }\r\n    };\r\n    UtilityMethod.InvalidFileFolderNameCharsOnlineRegex = /[\"*:<>?/\\\\|\\x00-\\x1f\\x7f-\\x9f]/g;\r\n    UtilityMethod.InvalidFileFolderNameCharsOnPremiseRegex = /[\"#%*:<>?/\\\\|\\x00-\\x1f\\x7f-\\x9f]/g;\r\n    return UtilityMethod;\r\n}(SharePointQueryable));\r\nexport { UtilityMethod };\r\n//# sourceMappingURL=utilities.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryableInstance, SharePointQueryableCollection, defaultPath } from \"./sharepointqueryable\";\r\n/**\r\n * Describes a collection of Hub Sites\r\n *\r\n */\r\nvar HubSites = /** @class */ (function (_super) {\r\n    tslib_1.__extends(HubSites, _super);\r\n    function HubSites() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets a Hub Site from the collection by id\r\n     *\r\n     * @param id The Id of the Hub Site\r\n     */\r\n    HubSites.prototype.getById = function (id) {\r\n        return new HubSite(this, \"GetById?hubSiteId='\" + id + \"'\");\r\n    };\r\n    HubSites = tslib_1.__decorate([\r\n        defaultPath(\"_api/hubsites\")\r\n    ], HubSites);\r\n    return HubSites;\r\n}(SharePointQueryableCollection));\r\nexport { HubSites };\r\nvar HubSite = /** @class */ (function (_super) {\r\n    tslib_1.__extends(HubSite, _super);\r\n    function HubSite() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    return HubSite;\r\n}(SharePointQueryableInstance));\r\nexport { HubSite };\r\n//# sourceMappingURL=hubsites.js.map","import { Search } from \"./search\";\r\nimport { SearchSuggest } from \"./searchsuggest\";\r\nimport { Site } from \"./site\";\r\nimport { Web } from \"./webs\";\r\nimport { UserProfileQuery } from \"./userprofiles\";\r\nimport { NavigationService } from \"./navigation\";\r\nimport { SocialQuery } from \"./social\";\r\nimport { SiteScripts } from \"./sitescripts\";\r\nimport { SiteDesigns } from \"./sitedesigns\";\r\nimport { UtilityMethod } from \"./utilities\";\r\nimport { setup as _setup, } from \"./config/splibconfig\";\r\nimport { HubSites } from \"./hubsites\";\r\n/**\r\n * Root of the SharePoint REST module\r\n */\r\nvar SPRest = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of the SPRest class\r\n     *\r\n     * @param options Additional options\r\n     * @param baseUrl A string that should form the base part of the url\r\n     */\r\n    function SPRest(_options, _baseUrl) {\r\n        if (_options === void 0) { _options = {}; }\r\n        if (_baseUrl === void 0) { _baseUrl = \"\"; }\r\n        this._options = _options;\r\n        this._baseUrl = _baseUrl;\r\n    }\r\n    /**\r\n     * Configures instance with additional options and baseUrl.\r\n     * Provided configuration used by other objects in a chain\r\n     *\r\n     * @param options Additional options\r\n     * @param baseUrl A string that should form the base part of the url\r\n     */\r\n    SPRest.prototype.configure = function (options, baseUrl) {\r\n        if (baseUrl === void 0) { baseUrl = \"\"; }\r\n        return new SPRest(options, baseUrl);\r\n    };\r\n    /**\r\n     * Global SharePoint configuration options\r\n     *\r\n     * @param config The SharePoint configuration to apply\r\n     */\r\n    SPRest.prototype.setup = function (config) {\r\n        _setup(config);\r\n    };\r\n    /**\r\n     * Executes a search against this web context\r\n     *\r\n     * @param query The SearchQuery definition\r\n     */\r\n    SPRest.prototype.searchSuggest = function (query) {\r\n        var finalQuery;\r\n        if (typeof query === \"string\") {\r\n            finalQuery = { querytext: query };\r\n        }\r\n        else {\r\n            finalQuery = query;\r\n        }\r\n        return this.create(SearchSuggest).execute(finalQuery);\r\n    };\r\n    /**\r\n     * Executes a search against this web context\r\n     *\r\n     * @param query The SearchQuery definition\r\n     */\r\n    SPRest.prototype.search = function (query) {\r\n        return this.create(Search).execute(query);\r\n    };\r\n    /**\r\n     * Executes the provided search query, caching the results\r\n     *\r\n     * @param query The SearchQuery definition\r\n     * @param options The set of caching options used to store the results\r\n     */\r\n    SPRest.prototype.searchWithCaching = function (query, options) {\r\n        return this.create(Search).usingCaching(options).execute(query);\r\n    };\r\n    Object.defineProperty(SPRest.prototype, \"site\", {\r\n        /**\r\n         * Begins a site collection scoped REST request\r\n         *\r\n         */\r\n        get: function () {\r\n            return this.create(Site);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SPRest.prototype, \"web\", {\r\n        /**\r\n         * Begins a web scoped REST request\r\n         *\r\n         */\r\n        get: function () {\r\n            return this.create(Web);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SPRest.prototype, \"profiles\", {\r\n        /**\r\n         * Access to user profile methods\r\n         *\r\n         */\r\n        get: function () {\r\n            return this.create(UserProfileQuery);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SPRest.prototype, \"social\", {\r\n        /**\r\n         * Access to social methods\r\n         */\r\n        get: function () {\r\n            return this.create(SocialQuery);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SPRest.prototype, \"navigation\", {\r\n        /**\r\n         * Access to the site collection level navigation service\r\n         */\r\n        get: function () {\r\n            return this.create(NavigationService);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Creates a new batch object for use with the SharePointQueryable.addToBatch method\r\n     *\r\n     */\r\n    SPRest.prototype.createBatch = function () {\r\n        return this.web.createBatch();\r\n    };\r\n    Object.defineProperty(SPRest.prototype, \"utility\", {\r\n        /**\r\n         * Static utilities methods from SP.Utilities.Utility\r\n         */\r\n        get: function () {\r\n            return this.create(UtilityMethod, \"\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SPRest.prototype, \"siteScripts\", {\r\n        /**\r\n         * Access to sitescripts methods\r\n         */\r\n        get: function () {\r\n            return this.create(SiteScripts, \"\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SPRest.prototype, \"siteDesigns\", {\r\n        /**\r\n         * Access to sitedesigns methods\r\n         */\r\n        get: function () {\r\n            return this.create(SiteDesigns, \"\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SPRest.prototype, \"hubSites\", {\r\n        /**\r\n         * Access to Hub Site methods\r\n         */\r\n        get: function () {\r\n            return this.create(HubSites);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets the Web instance representing the tenant app catalog web\r\n     */\r\n    SPRest.prototype.getTenantAppCatalogWeb = function () {\r\n        var _this = this;\r\n        return this.create(Web, \"_api/SP_TenantSettings_Current\").get().then(function (r) {\r\n            return (new Web(r.CorporateCatalogUrl)).configure(_this._options);\r\n        });\r\n    };\r\n    /**\r\n     * Handles creating and configuring the objects returned from this class\r\n     *\r\n     * @param fm The factory method used to create the instance\r\n     * @param path Optional additional path information to pass to the factory method\r\n     */\r\n    SPRest.prototype.create = function (fm, path) {\r\n        return new fm(this._baseUrl, path).configure(this._options);\r\n    };\r\n    return SPRest;\r\n}());\r\nexport { SPRest };\r\nexport var sp = new SPRest();\r\n//# sourceMappingURL=rest.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SPRest, Web, Site, } from \"@pnp/sp\";\r\nimport { isUrlAbsolute, combine, } from \"@pnp/common\";\r\nvar SPRestAddIn = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SPRestAddIn, _super);\r\n    function SPRestAddIn() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Begins a cross-domain, host site scoped REST request, for use in add-in webs\r\n     *\r\n     * @param addInWebUrl The absolute url of the add-in web\r\n     * @param hostWebUrl The absolute url of the host web\r\n     */\r\n    SPRestAddIn.prototype.crossDomainSite = function (addInWebUrl, hostWebUrl) {\r\n        return this._cdImpl(Site, addInWebUrl, hostWebUrl, \"site\");\r\n    };\r\n    /**\r\n     * Begins a cross-domain, host web scoped REST request, for use in add-in webs\r\n     *\r\n     * @param addInWebUrl The absolute url of the add-in web\r\n     * @param hostWebUrl The absolute url of the host web\r\n     */\r\n    SPRestAddIn.prototype.crossDomainWeb = function (addInWebUrl, hostWebUrl) {\r\n        return this._cdImpl(Web, addInWebUrl, hostWebUrl, \"web\");\r\n    };\r\n    /**\r\n     * Implements the creation of cross domain REST urls\r\n     *\r\n     * @param factory The constructor of the object to create Site | Web\r\n     * @param addInWebUrl The absolute url of the add-in web\r\n     * @param hostWebUrl The absolute url of the host web\r\n     * @param urlPart String part to append to the url \"site\" | \"web\"\r\n     */\r\n    SPRestAddIn.prototype._cdImpl = function (factory, addInWebUrl, hostWebUrl, urlPart) {\r\n        if (!isUrlAbsolute(addInWebUrl)) {\r\n            throw Error(\"The addInWebUrl parameter must be an absolute url.\");\r\n        }\r\n        if (!isUrlAbsolute(hostWebUrl)) {\r\n            throw Error(\"The hostWebUrl parameter must be an absolute url.\");\r\n        }\r\n        var url = combine(addInWebUrl, \"_api/SP.AppContextSite(@target)\");\r\n        var instance = new factory(url, urlPart);\r\n        instance.query.set(\"@target\", \"'\" + encodeURIComponent(hostWebUrl) + \"'\");\r\n        return instance.configure(this._options);\r\n    };\r\n    return SPRestAddIn;\r\n}(SPRest));\r\nexport { SPRestAddIn };\r\nexport var sp = new SPRestAddIn();\r\n//# sourceMappingURL=sprestaddin.js.map","import { Logger } from \"@pnp/logging\";\r\nimport { PnPClientStorage, dateAdd, combine, getCtxCallback, getRandomString, getGUID, isFunc, objectDefinedNotNull, isArray, extend, isUrlAbsolute, stringIsNullOrEmpty, getAttrValueFromString, sanitizeGuid, } from \"@pnp/common\";\r\nimport { Settings } from \"@pnp/config-store\";\r\nimport { graph as _graph } from \"@pnp/graph\";\r\nimport { sp as _sp } from \"@pnp/sp-addinhelpers\";\r\nimport { setup as _setup } from \"./config/pnplibconfig\";\r\n/**\r\n * Root class of the Patterns and Practices namespace, provides an entry point to the library\r\n */\r\n/**\r\n * Re-export everything from the dependencies to match the previous pattern\r\n */\r\nexport * from \"@pnp/sp\";\r\nexport * from \"@pnp/graph\";\r\nexport * from \"@pnp/common\";\r\nexport * from \"@pnp/logging\";\r\nexport * from \"@pnp/config-store\";\r\nexport * from \"@pnp/odata\";\r\n/**\r\n * Utility methods\r\n */\r\nexport var util = {\r\n    combine: combine,\r\n    dateAdd: dateAdd,\r\n    extend: extend,\r\n    getAttrValueFromString: getAttrValueFromString,\r\n    getCtxCallback: getCtxCallback,\r\n    getGUID: getGUID,\r\n    getRandomString: getRandomString,\r\n    isArray: isArray,\r\n    isFunc: isFunc,\r\n    isUrlAbsolute: isUrlAbsolute,\r\n    objectDefinedNotNull: objectDefinedNotNull,\r\n    sanitizeGuid: sanitizeGuid,\r\n    stringIsNullOrEmpty: stringIsNullOrEmpty,\r\n};\r\n/**\r\n * Provides access to the SharePoint REST interface\r\n */\r\nexport var sp = _sp;\r\n/**\r\n * Provides access to the Microsoft Graph REST interface\r\n */\r\nexport var graph = _graph;\r\n/**\r\n * Provides access to local and session storage\r\n */\r\nexport var storage = new PnPClientStorage();\r\n/**\r\n * Global configuration instance to which providers can be added\r\n */\r\nexport var config = new Settings();\r\n/**\r\n * Global logging instance to which subscribers can be registered and messages written\r\n */\r\nexport var log = Logger;\r\n/**\r\n * Allows for the configuration of the library\r\n */\r\nexport var setup = _setup;\r\n// /**\r\n//  * Expose a subset of classes from the library for public consumption\r\n//  */\r\n// creating this class instead of directly assigning to default fixes issue #116\r\nvar Def = {\r\n    /**\r\n     * Global configuration instance to which providers can be added\r\n     */\r\n    config: config,\r\n    /**\r\n     * Provides access to the Microsoft Graph REST interface\r\n     */\r\n    graph: graph,\r\n    /**\r\n     * Global logging instance to which subscribers can be registered and messages written\r\n     */\r\n    log: log,\r\n    /**\r\n     * Provides access to local and session storage\r\n     */\r\n    setup: setup,\r\n    /**\r\n     * Provides access to the REST interface\r\n     */\r\n    sp: sp,\r\n    /**\r\n     * Provides access to local and session storage\r\n     */\r\n    storage: storage,\r\n    /**\r\n     * Utility methods\r\n     */\r\n    util: util,\r\n};\r\n/**\r\n * Enables use of the import pnp from syntax\r\n */\r\nexport default Def;\r\n//# sourceMappingURL=pnpjs.js.map","import { RuntimeConfig } from \"@pnp/common\";\r\nexport function setup(config) {\r\n    RuntimeConfig.extend(config);\r\n}\r\n//# sourceMappingURL=pnplibconfig.js.map","export * from \"./src/pnpjs\";\r\nimport pnp from \"./src/pnpjs\";\r\nexport default pnp;\r\n//# sourceMappingURL=index.js.map"],"sourceRoot":""}