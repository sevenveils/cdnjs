{"version":3,"file":"infinitegrid.js","sources":["../src/browser.ts","../src/consts.ts","../src/utils.ts","../src/ItemManager.ts","../src/DOMRenderer.ts","../src/Watcher.ts","../src/Infinite.ts","../src/AutoSizer.ts","../src/ImageLoaded.ts","../src/LayoutManager.ts","../src/InfiniteGrid.ts","../src/layouts/GridLayout.ts","../src/layouts/FrameLayout.ts","../src/layouts/SquareLayout.ts","../src/layouts/lib/BoxModel.ts","../src/layouts/PackingLayout.ts","../src/layouts/lib/dijkstra.ts","../src/layouts/JustifiedLayout.ts","../src/index.umd.ts"],"sourcesContent":["import { WindowMockType } from \"./types\";\n\nlet win: WindowMockType;\n\nif (typeof window === \"undefined\") {\n\t// window is undefined in node.js\n\twin = {\n\t\tdocument: {},\n\t\tnavigator: {\n\t\t\tuserAgent: \"\",\n\t\t},\n\t};\n} else {\n\twin = window;\n}\n\nexport { win as window };\nexport const document = win.document;\n","import { window, document } from \"./browser\";\nimport { IAlign } from \"./types\";\n\nconst ua = window.navigator.userAgent;\n\nexport const SUPPORT_COMPUTEDSTYLE = !!(\"getComputedStyle\" in window);\nexport const SUPPORT_ADDEVENTLISTENER = !!(\"addEventListener\" in document);\nexport const SUPPORT_PASSIVE = (() => {\n\tlet supportsPassiveOption = false;\n\n\ttry {\n\t\tif (SUPPORT_ADDEVENTLISTENER && Object.defineProperty) {\n\t\t\tdocument.addEventListener(\"test\", null, Object.defineProperty({},\n\t\t\t\t\"passive\", {\n\t\t\t\t\tget() {\n\t\t\t\t\t\tsupportsPassiveOption = true;\n\t\t\t\t\t},\n\t\t\t\t}));\n\t\t}\n\t} catch (e) {\n\t\t//\n\t}\n\treturn supportsPassiveOption;\n})();\n\nexport const IS_IE = /MSIE|Trident|Windows Phone|Edge/.test(ua);\nexport const IS_IOS = /iPhone|iPad/.test(ua);\nexport const IS_ANDROID2 = /Android 2\\./.test(ua);\nexport const CONTAINER_CLASSNAME = \"_eg-infinitegrid-container_\";\nexport const IGNORE_CLASSNAME = \"_eg-infinitegrid-ignore_\";\nexport const TRANSITION_NAME = \"_INFINITEGRID_TRANSITION\";\n\nexport const APPEND = true;\nexport const PREPEND = false;\nexport const VERTICAL = \"vertical\";\nexport const HORIZONTAL = \"horizontal\";\nexport const CACHE = true;\nexport const NO_CACHE = false;\nexport const TRUSTED = true;\nexport const NO_TRUSTED = false;\nexport const MULTI = true;\nexport const SINGLE = false;\nexport const DUMMY_POSITION = -100000;\nexport const GROUPKEY_ATT = \"data-groupkey\";\n\nexport const DEFAULT_OPTIONS = {\n\thorizontal: false,\n\tmargin: 0,\n};\n\nexport const agent = ua.toLowerCase();\nexport const isMobile = /mobi|ios|android/.test(agent);\n\nexport const ALIGN: IAlign = {\n\tSTART: \"start\",\n\tCENTER: \"center\",\n\tEND: \"end\",\n\tJUSTIFY: \"justify\",\n};\n\nexport const IDLE = 0;\nexport const LOADING_APPEND = 1;\nexport const LOADING_PREPEND = 2;\nexport const PROCESSING = 4;\n\nconst webkit = /applewebkit\\/([\\d|.]*)/g.exec(agent);\n\nexport const WEBKIT_VERSION = (webkit && parseInt(webkit[1], 10)) || 0;\nexport const DEFENSE_BROWSER = (WEBKIT_VERSION && WEBKIT_VERSION < 537);\n\ninterface ITransitionEnd {\n\ttransitionend: string;\n\twebkitTransitionEnd: string;\n\tMSTransitionEnd: string;\n\toTransitionEnd: string;\n\tmozTransitionEnd: string;\n}\n\nexport const [TRANSFORM, TRANSITION, TRANSITION_END] = (() => {\n\tconst properties: ITransitionEnd = {\n\t\ttransitionend: \"\",\n\t\twebkitTransitionEnd: \"-webkit-\",\n\t\tMSTransitionEnd: \"-ms-\",\n\t\toTransitionEnd: \"-o-\",\n\t\tmozTransitionEnd: \"-moz-\",\n\t};\n\n\tfor (const property in properties) {\n\t\tconst prefix = properties[property as keyof ITransitionEnd];\n\n\t\tif (`on${property.toLowerCase()}` in window) {\n\t\t\treturn [`${prefix}transform`, `${prefix}transition`, property];\n\t\t}\n\t}\n\treturn [];\n})() as [\"transform\", \"transition\", \"transitionend\"];\n","\nimport { window, document } from \"./browser\";\nimport {\n\tSUPPORT_COMPUTEDSTYLE,\n\tSUPPORT_ADDEVENTLISTENER,\n\tSUPPORT_PASSIVE,\n\tVERTICAL,\n\tHORIZONTAL,\n\tDEFAULT_OPTIONS,\n} from \"./consts\";\nimport { IJQuery, IRectlProperties, InnerSizeType, ClientSizeType, ScrollSizeType, OffsetSizeType, WindowMockType } from \"./types\";\n\nexport function toArray(nodes: HTMLCollection): HTMLElement[];\nexport function toArray<T extends Node>(nodes: T[] | NodeListOf<T>): T[];\nexport function toArray<T extends Node>(nodes: T[] | NodeListOf<T> | HTMLCollection) {\n\t// SCRIPT5014 in IE8\n\tconst array = [];\n\n\tif (nodes) {\n\t\tfor (let i = 0, len = nodes.length; i < len; i++) {\n\t\t\tarray.push(nodes[i]);\n\t\t}\n\t}\n\treturn array;\n}\nexport function matchHTML(html: string) {\n\treturn html.match(/^<([A-z]+)\\s*([^>]*)>/);\n}\n/**\n * Select or create element\n * @param {String|HTMLElement|jQuery} param\n *  when string given is as HTML tag, then create element\n *  otherwise it returns selected elements\n * @param {Boolean} multi\n * @returns {HTMLElement}\n */\nexport function $(param: WindowMockType, multi?: false): WindowMockType;\nexport function $(\n\tparam: string | HTMLElement | Array<string | HTMLElement> | IJQuery,\n\tmulti: true,\n): HTMLElement[];\nexport function $(\n\tparam: string | HTMLElement | Array<string | HTMLElement> | IJQuery,\n\tmulti?: false,\n): HTMLElement;\nexport function $(\n\tparam: string | HTMLElement | WindowMockType | IJQuery,\n\tmulti?: false,\n): HTMLElement | WindowMockType;\nexport function $(\n\tparam: string | WindowMockType | HTMLElement | Array<string | HTMLElement> | IJQuery,\n\tmulti = false,\n): HTMLElement | WindowMockType | HTMLElement[] {\n\tlet el: WindowMockType | HTMLElement | HTMLElement[] | NodeListOf<HTMLElement>;\n\n\tif (typeof param === \"string\") { // String (HTML, Selector)\n\t\t// check if string is HTML tag format\n\t\tconst match = matchHTML(param);\n\n\t\t// creating element\n\t\tif (match) { // HTML\n\t\t\tconst dummy = document.createElement(\"div\");\n\n\t\t\tdummy.innerHTML = param;\n\t\t\tel = dummy.childNodes as NodeListOf<HTMLElement>;\n\t\t} else { // Selector\n\t\t\tel = document.querySelectorAll(param);\n\t\t}\n\t\tif (multi) {\n\t\t\treturn toArray(el as NodeListOf<HTMLElement>);\n\t\t} else {\n\t\t\treturn el && (el as NodeListOf<HTMLElement>)[0];\n\t\t}\n\t} else if (isWindow(param)) { // window\n\t\tel = param;\n\t} else if (isJQuery(param)) { // jQuery\n\t\tel = multi ? $(param.toArray(), true) :\n\t\t\t$(param.get(0), false);\n\t} else if (Array.isArray(param)) {\n\t\tel = param.map(v => $(v));\n\t\tif (!multi) {\n\t\t\tel = el.length >= 1 ? (el as HTMLElement[])[0] : undefined;\n\t\t}\n\t} else if (param.nodeName &&\n\t\t(param.nodeType === 1 || param.nodeType === 9)) { // HTMLElement, Document\n\t\tel = param;\n\t}\n\treturn el;\n}\nexport function addEvent(\n\telement: Element | WindowMockType,\n\ttype: string,\n\thandler: (...args: any[]) => any,\n\teventListenerOptions?: boolean | { [key: string]: any },\n) {\n\tif (SUPPORT_ADDEVENTLISTENER) {\n\t\tlet options = eventListenerOptions || false;\n\n\t\tif (typeof eventListenerOptions === \"object\") {\n\t\t\toptions = SUPPORT_PASSIVE ? eventListenerOptions : false;\n\t\t}\n\t\telement.addEventListener(type, handler, options);\n\t} else if ((element as any).attachEvent) {\n\t\t(element as any).attachEvent(`on${type}`, handler);\n\t} else {\n\t\t(element as any)[`on${type}`] = handler;\n\t}\n}\nexport function removeEvent(\n\telement: Element | WindowMockType,\n\ttype: string,\n\thandler: (...args: any[]) => any,\n) {\n\tif (element.removeEventListener) {\n\t\telement.removeEventListener(type, handler, false);\n\t} else if ((element as any).detachEvent) {\n\t\t(element as any).detachEvent(`on${type}`, handler);\n\t} else {\n\t\t(element as any)[`on${type}`] = null;\n\t}\n}\nexport function addOnceEvent(\n\telement: Element,\n\ttype: string,\n\thandler: (...args: any[]) => any,\n\teventListenerOptions?: boolean | { [key: string]: any },\n) {\n\tconst callback = (e: any) => {\n\t\tremoveEvent(element, type, callback);\n\t\thandler(e);\n\t};\n\n\taddEvent(element, type, callback, eventListenerOptions);\n}\nexport function scroll(el: HTMLElement | WindowMockType, horizontal = false) {\n\tconst prop = `scroll${horizontal ? \"Left\" : \"Top\"}` as \"scrollLeft\" | \"scrollTop\";\n\n\tif (isWindow(el)) {\n\t\treturn window[horizontal ? \"pageXOffset\" : \"pageYOffset\"] || document.body[prop] || document.documentElement[prop];\n\t} else {\n\t\treturn el[prop];\n\t}\n}\nexport function scrollTo(el: WindowMockType | Element, x: number, y: number) {\n\tif (isWindow(el)) {\n\t\tel.scroll(x, y);\n\t} else {\n\t\tel.scrollLeft = x;\n\t\tel.scrollTop = y;\n\t}\n}\nexport function scrollBy(el: WindowMockType | Element, x: number, y: number) {\n\tif (isWindow(el)) {\n\t\tel.scrollBy(x, y);\n\t} else {\n\t\tel.scrollLeft += x;\n\t\tel.scrollTop += y;\n\t}\n}\nexport function getStyles(el: Element) {\n\treturn (SUPPORT_COMPUTEDSTYLE ?\n\t\twindow.getComputedStyle(el) : (el as any).currentStyle) || {};\n}\nfunction _getSize(el: WindowMockType | Document | HTMLElement, name: \"Width\" | \"Height\", isOffset?: boolean) {\n\tif (isWindow(el)) { // WINDOW\n\t\treturn window[`inner${name}` as InnerSizeType] || document.body[`client${name}` as ClientSizeType];\n\t} else if (isDocument(el)) { // DOCUMENT_NODE\n\t\tconst doc = (el as Document).documentElement;\n\t\tconst body = (el as Document).body;\n\n\t\treturn Math.max(\n\t\t\tbody[`scroll${name}` as ScrollSizeType], doc[`scroll${name}` as ScrollSizeType],\n\t\t\tbody[`offset${name}` as OffsetSizeType], doc[`offset${name}` as OffsetSizeType],\n\t\t\tdoc[`client${name}` as ClientSizeType],\n\t\t);\n\t} else { // NODE\n\t\tlet size = 0;\n\n\t\tif (isOffset) {\n\t\t\tconst clientRect = el.getBoundingClientRect();\n\n\t\t\tsize = name === \"Width\" ? clientRect.right - clientRect.left : clientRect.bottom - clientRect.top;\n\t\t} else {\n\t\t\tsize = el[`client${name}` as ClientSizeType] || el[`offset${name}` as OffsetSizeType];\n\t\t}\n\t\tif (size) {\n\t\t\treturn size;\n\t\t}\n\t\tconst cssSize = getStyles(el)[name.toLowerCase()];\n\n\t\treturn (~cssSize.indexOf(\"px\") && parseFloat(cssSize)) || 0;\n\t}\n}\n\nexport function innerWidth(el: WindowMockType | Document | HTMLElement) {\n\treturn _getSize(el, \"Width\", false);\n}\nexport function innerHeight(el: WindowMockType | Document | HTMLElement) {\n\treturn _getSize(el, \"Height\", false);\n}\nexport function outerWidth(el: WindowMockType | Document | HTMLElement) {\n\treturn _getSize(el, \"Width\", true);\n}\nexport function outerHeight(el: WindowMockType | Document | HTMLElement) {\n\treturn _getSize(el, \"Height\", true);\n}\nexport function getSize(el: HTMLElement) {\n\treturn {\n\t\twidth: outerWidth(el),\n\t\theight: outerHeight(el),\n\t};\n}\nexport const STYLE: {\n\tvertical: IRectlProperties,\n\thorizontal: IRectlProperties,\n} = {\n\tvertical: {\n\t\tstartPos1: \"top\",\n\t\tendPos1: \"bottom\",\n\t\tsize1: \"height\",\n\t\tstartPos2: \"left\",\n\t\tendPos2: \"right\",\n\t\tsize2: \"width\",\n\t},\n\thorizontal: {\n\t\tstartPos1: \"left\",\n\t\tendPos1: \"right\",\n\t\tsize1: \"width\",\n\t\tstartPos2: \"top\",\n\t\tendPos2: \"bottom\",\n\t\tsize2: \"height\",\n\t},\n};\n\nexport function getStyleNames(isHorizontal: boolean): IRectlProperties {\n\treturn STYLE[isHorizontal ? HORIZONTAL : VERTICAL];\n}\nexport function assign<A, B>(target: A, source: B): A & B;\nexport function assign<A, B, C>(target: A, source1: B, source2: C): A & B & C;\nexport function assign<A, B, C, D>(target: A, source1: B, source2: C, source3: D): A & B & C & D;\nexport function assign(target: { [key: string]: any }, ...sources: Array<{ [key: string]: any }>): { [key: string]: any };\nexport function assign(target: { [key: string]: any }, ...sources: Array<{ [key: string]: any }>) {\n\tsources.forEach(source => {\n\t\tfor (const key in source) {\n\t\t\ttarget[key] = source[key];\n\t\t}\n\t});\n\treturn target;\n}\nexport function assignOptions<A extends { [key: string]: any }, B extends { [key: string]: any }>(\n\tdefaultOptions: A, options: B): typeof DEFAULT_OPTIONS & A & B {\n\treturn assign({},\n\t\tDEFAULT_OPTIONS,\n\t\tdefaultOptions,\n\t\toptions);\n}\n\nexport function toZeroArray(outline?: number[]) {\n\tif (!outline || !outline.length) {\n\t\treturn [0];\n\t}\n\treturn outline;\n}\nexport function cloneItems<T extends { [key: string]: any }>(items: T[]) {\n\treturn items.map(item => assign({}, item));\n}\nexport function isJQuery(el: any): el is IJQuery {\n\treturn (typeof (window as any).jQuery === \"function\" && el instanceof (window as any).jQuery) ||\n\t\tel.constructor.prototype.jquery && el.toArray;\n}\nexport function isWindow(el: any): el is WindowMockType {\n\treturn el === window;\n}\nexport function isDocument(el: Node): el is Document {\n\treturn el.nodeType === 9;\n}\n\nexport function fill<T>(arr: T[], value: T) {\n\tconst length = arr.length;\n\n\tfor (let i = length - 1; i >= 0; --i) {\n\t\tarr[i] = value;\n\t}\n\n\treturn arr;\n}\n\nexport function isUndefined(target: any): target is undefined {\n\treturn typeof target === \"undefined\";\n}\n","import { MULTI, GROUPKEY_ATT, IGNORE_CLASSNAME, DUMMY_POSITION } from \"./consts\";\nimport { $, toArray, isUndefined, assign } from \"./utils\";\nimport { CursorType, IJQuery, IInfiniteGridGroup, IInfiniteGridItem, IItemManagerStatus } from \"./types\";\n\nexport default class ItemManager {\n\tpublic static from(\n\t\telements: HTMLElement[] | string | string[] | IJQuery, selector: string,\n\t\t{ groupKey }: { groupKey: string | number }) {\n\t\tconst filted = ItemManager.selectItems($(elements, MULTI), selector);\n\n\t\t// Item Structure\n\t\treturn toArray(filted).map(el => ({\n\t\t\tel,\n\t\t\tgroupKey,\n\t\t\tcontent: el.outerHTML,\n\t\t\trect: {\n\t\t\t\ttop: DUMMY_POSITION,\n\t\t\t\tleft: DUMMY_POSITION,\n\t\t\t},\n\t\t}));\n\t}\n\tpublic static selectItems(elements: HTMLElement[], selector?: string) {\n\t\treturn elements.filter(v => {\n\t\t\tconst classNames = v.className.split(\" \");\n\n\t\t\tif (classNames.some(c => c === IGNORE_CLASSNAME)) {\n\t\t\t\treturn false;\n\t\t\t} else if (!selector || selector === \"*\") {\n\t\t\t\treturn v;\n\t\t\t} else {\n\t\t\t\treturn classNames.some(c => c === selector);\n\t\t\t}\n\t\t});\n\t}\n\tpublic static pluck<A extends { [key: string]: any }, B extends keyof A>(data: A[], property: B):\n\t\tA[B] extends any[] ? A[B] : Array<A[B]> {\n\t\treturn data.reduce((acc, v) => acc.concat(v[property]), []) as any;\n\t}\n\tpublic _data: IInfiniteGridGroup[];\n\tconstructor() {\n\t\tthis.clear();\n\t}\n\tpublic getStatus(startKey?: string | number, endKey?: string | number): IItemManagerStatus {\n\t\tconst datas = this._data;\n\t\tconst startIndex = Math.max(this.indexOf(startKey), 0);\n\t\tconst endIndex = this.indexOf(endKey) + 1 || datas.length;\n\n\t\treturn {\n\t\t\t_data: datas.slice(startIndex, endIndex).map(data => {\n\t\t\t\tconst items = data.items.map(item => {\n\t\t\t\t\tconst item2 = assign({}, item);\n\n\t\t\t\t\tdelete item2.el;\n\t\t\t\t\treturn item2;\n\t\t\t\t});\n\t\t\t\tconst data2 = assign({}, data);\n\n\t\t\t\tdata2.items = items;\n\t\t\t\treturn data2;\n\t\t\t}),\n\t\t};\n\t}\n\tpublic setStatus(status: IItemManagerStatus) {\n\t\tconst data = status._data;\n\n\t\tthis.set(data);\n\t}\n\tpublic size() {\n\t\treturn this._data.length;\n\t}\n\tpublic fit(base: number, horizontal: boolean) {\n\t\tif (!this._data.length) {\n\t\t\treturn;\n\t\t}\n\t\tconst property = horizontal ? \"left\" : \"top\";\n\n\t\tif (base !== 0) {\n\t\t\tthis._data = this._data.map(v => {\n\t\t\t\tv.items = v.items.map(item => {\n\t\t\t\t\titem.rect[property] -= base;\n\t\t\t\t\treturn item;\n\t\t\t\t});\n\t\t\t\tv.outlines.start = v.outlines.start.map(start => start - base);\n\t\t\t\tv.outlines.end = v.outlines.end.map(end => end - base);\n\t\t\t\treturn v;\n\t\t\t});\n\t\t}\n\t}\n\tpublic pluck<T extends keyof IInfiniteGridGroup>(property: T, start?: number, end?: number) {\n\t\tconst data = isUndefined(start) ? this._data :\n\t\t\tthis._data.slice(start, (isUndefined(end) ? start : end) + 1);\n\n\t\treturn ItemManager.pluck(data, property);\n\t}\n\tpublic getOutline(index: number, property: keyof IInfiniteGridGroup[\"outlines\"]) {\n\t\tconst data = this._data[index];\n\n\t\treturn data ? data.outlines[property] : [];\n\t}\n\tpublic getEdgeIndex(cursor: CursorType, start: number, end: number) {\n\t\tconst prop = cursor === \"start\" ? \"min\" : \"max\";\n\t\tlet index = -1;\n\t\tlet targetValue = cursor === \"start\" ? Infinity : -Infinity;\n\n\t\tfor (let i = start; i <= end; i++) {\n\t\t\tconst value = Math[prop](...this.getOutline(i, cursor));\n\n\t\t\tif ((cursor === \"start\" && targetValue > value) ||\n\t\t\t\t(cursor === \"end\" && targetValue < value)) {\n\t\t\t\ttargetValue = value;\n\t\t\t\tindex = i;\n\t\t\t}\n\t\t}\n\t\treturn index;\n\t}\n\tpublic getEdgeValue(cursor: CursorType, start: number, end: number) {\n\t\tconst outlines = this.pluck(\"outlines\", this.getEdgeIndex(cursor, start, end))\n\t\t\t.reduce<number[]>((acc, v) => acc.concat(v[cursor]), []);\n\n\t\treturn outlines.length ? Math[cursor === \"start\" ? \"min\" : \"max\"](...outlines) : 0;\n\t}\n\tpublic clearOutlines(startCursor = -1, endCursor = -1) {\n\t\tconst datas = this.get();\n\n\t\tdatas.forEach((group, cursor) => {\n\t\t\tif (startCursor <= cursor && cursor <= endCursor) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tgroup.items.forEach(item => {\n\t\t\t\titem.rect.top = DUMMY_POSITION;\n\t\t\t\titem.rect.left = DUMMY_POSITION;\n\t\t\t});\n\t\t\tgroup.outlines.start = [];\n\t\t\tgroup.outlines.end = [];\n\t\t});\n\t}\n\tpublic getMaxEdgeValue() {\n\t\tconst groups = this.get();\n\t\tconst length = groups.length;\n\n\t\tfor (let i = length - 1; i >= 0; --i) {\n\t\t\tconst end = groups[i].outlines.end;\n\n\t\t\tif (end.length) {\n\t\t\t\tconst pos = Math.max(...end);\n\n\t\t\t\treturn pos;\n\t\t\t}\n\t\t}\n\t\treturn 0;\n\t}\n\tpublic append(layouted: IInfiniteGridGroup) {\n\t\tthis._data.push(layouted);\n\t\treturn layouted.items;\n\t}\n\tpublic prepend(layouted: IInfiniteGridGroup) {\n\t\tthis._data.unshift(layouted);\n\t\treturn layouted.items;\n\t}\n\tpublic clear() {\n\t\tthis._data = [];\n\t}\n\tpublic remove(element: HTMLElement, start: number, end: number) {\n\t\tlet items: IInfiniteGridItem[] = [];\n\t\tlet groups: IInfiniteGridGroup[] = [];\n\t\tconst key = element.getAttribute(GROUPKEY_ATT);\n\t\tconst datas = this.get(start, end)\n\t\t\t.filter(v => String(v.groupKey) === key);\n\n\t\tif (!datas.length) {\n\t\t\treturn { items, groups };\n\t\t}\n\t\tconst data = datas[0];\n\n\t\tconst length = data.items.length;\n\t\tlet idx = -1;\n\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\tif (data.items[i].el === element) {\n\t\t\t\tidx = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (idx >= 0) {\n\t\t\t// remove item information\n\t\t\titems = data.items.splice(idx, 1);\n\n\t\t\tif (!data.items.length) {\n\t\t\t\tthis._data.splice(this.indexOf(data), 1);\n\t\t\t\tgroups = [data];\n\t\t\t} else {\n\t\t\t\tthis.set(data, key);\n\t\t\t}\n\t\t}\n\t\treturn { items, groups };\n\t}\n\tpublic indexOf(data: IInfiniteGridGroup | string | number) {\n\t\tconst groupKey = typeof data === \"object\" ? data.groupKey : data;\n\t\tconst datas = this._data;\n\t\tconst length = datas.length;\n\n\t\tfor (let i = 0; i < length; ++i) {\n\t\t\tif (groupKey === datas[i].groupKey) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\treturn -1;\n\t}\n\tpublic get(start?: number, end?: number) {\n\t\treturn isUndefined(start) ? this._data :\n\t\t\tthis._data.slice(start, (isUndefined(end) ? start : end) + 1);\n\t}\n\tpublic set(data: IInfiniteGridGroup | IInfiniteGridGroup[], key?: string | number) {\n\t\tif (!Array.isArray(data)) {\n\t\t\tif (!isUndefined(key)) {\n\t\t\t\tconst len = this._data.length;\n\t\t\t\tlet idx = -1;\n\n\t\t\t\tfor (let i = 0; i < len; i++) {\n\t\t\t\t\tif (this._data[i].groupKey === key) {\n\t\t\t\t\t\tidx = i;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tidx > 0 && (this._data[idx] = data);\n\t\t\t}\n\t\t} else {\n\t\t\tthis._data = data.concat();\n\t\t}\n\t}\n\tpublic getData(index: number) {\n\t\treturn this._data[index];\n\t}\n}\n","import {\n\tAPPEND,\n\tPREPEND,\n\tDUMMY_POSITION,\n\tMULTI,\n\tGROUPKEY_ATT,\n\tCONTAINER_CLASSNAME,\n\tTRANSITION_NAME,\n\tTRANSITION,\n\tTRANSITION_END,\n\tTRANSFORM,\n} from \"./consts\";\nimport { window, document } from \"./browser\";\nimport {\n\t$,\n\tinnerHeight,\n\tinnerWidth,\n\tgetSize,\n\tgetStyles,\n\taddOnceEvent,\n\tassign,\n} from \"./utils\";\nimport { RectType, IPosition, ISize, IJQuery, IInfiniteGridItem, WindowMockType, IDOMRendererStatus, IDOMRendererSize } from \"./types\";\n\nexport function resetSize(item: IInfiniteGridItem) {\n\titem.orgSize = null;\n\titem.size = null;\n}\nexport interface IDOMRendererOptions {\n\tisEqualSize: boolean;\n\tisConstantSize: boolean;\n\thorizontal: boolean;\n\tcontainer: boolean | HTMLElement;\n}\n\nexport interface IDOMRendererOrgStyle {\n\tposition?: CSSStyleDeclaration[\"position\"];\n\toverflowX?: CSSStyleDeclaration[\"overflowX\"];\n\toverflowY?: CSSStyleDeclaration[\"overflowY\"];\n}\n\nfunction createContainer(element: HTMLElement) {\n\tconst container = document.createElement(\"div\");\n\n\tcontainer.className = CONTAINER_CLASSNAME;\n\tcontainer.style.position = \"relative\";\n\tcontainer.style.height = \"100%\";\n\n\tconst children = element.children;\n\tconst length = children.length;\t// for IE8\n\n\tfor (let i = 0; i < length; i++) {\n\t\tcontainer.appendChild(children[0]);\n\t}\n\telement.appendChild(container);\n\treturn container;\n}\nfunction render(properties: RectType[], rect: IInfiniteGridItem[\"rect\"], styles: HTMLElement[\"style\"]) {\n\tproperties.forEach(p => {\n\t\t(p in rect) && (styles[p] = `${rect[p]}px`);\n\t});\n}\nfunction setTransition(styles: HTMLElement[\"style\"], transitionDuration?: number, pos1?: IPosition, pos2?: IPosition) {\n\tstyles[`${TRANSITION}-property`] = transitionDuration ? `${TRANSFORM},width,height` : \"\";\n\tstyles[`${TRANSITION}-duration`] = transitionDuration ? `${transitionDuration}s` : \"\";\n\tstyles[`${TRANSITION}-delay`] = transitionDuration ? `0s` : \"\";\n\tstyles[TRANSFORM] = transitionDuration ? `translate(${pos1.left - pos2.left}px,${pos1.top - pos2.top}px)` : \"\";\n}\n\nexport default class DOMRenderer {\n\tpublic static renderItem(item: IInfiniteGridItem, rect: IInfiniteGridItem[\"rect\"], transitionDuration?: number) {\n\t\tif (!item.el) {\n\t\t\treturn;\n\t\t}\n\t\tconst { el, prevRect } = item;\n\t\tconst styles = el.style;\n\n\t\t// for debugging\n\t\tel.setAttribute(GROUPKEY_ATT, `${item.groupKey}`);\n\t\tstyles.position = \"absolute\";\n\t\trender([\"width\", \"height\"], rect, styles);\n\t\tif (transitionDuration && TRANSITION && prevRect) {\n\t\t\tsetTransition(styles, transitionDuration, rect as IPosition, prevRect as IPosition);\n\t\t\tif ((el as any)[TRANSITION_NAME]) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tel[TRANSITION_NAME] = true;\n\t\t\taddOnceEvent(el, TRANSITION_END, () => {\n\t\t\t\tconst itemRect = item.rect;\n\n\t\t\t\tsetTransition(styles);\n\t\t\t\trender([\"left\", \"top\"], itemRect, styles);\n\t\t\t\titem.prevRect = itemRect;\n\t\t\t\tel[TRANSITION_NAME] = false;\n\t\t\t});\n\t\t} else {\n\t\t\trender([\"left\", \"top\"], rect, styles);\n\t\t\titem.prevRect = rect;\n\t\t}\n\t}\n\tpublic static renderItems(items: IInfiniteGridItem[], transitionDuration?: number) {\n\t\titems.forEach(item => {\n\t\t\tDOMRenderer.renderItem(item, item.rect, transitionDuration);\n\t\t});\n\t}\n\tpublic static removeItems(items: IInfiniteGridItem[]) {\n\t\titems.forEach(item => {\n\t\t\tif (item.el) {\n\t\t\t\tDOMRenderer.removeElement(item.el);\n\t\t\t\titem.el = null;\n\t\t\t}\n\t\t});\n\t}\n\tpublic static removeElement(element: HTMLElement) {\n\t\tconst parentNode = element && element.parentNode;\n\n\t\tif (!parentNode) {\n\t\t\treturn;\n\t\t}\n\t\tparentNode.removeChild(element);\n\t}\n\tpublic static createElements(items: IInfiniteGridItem[]) {\n\t\tif (!items.length) {\n\t\t\treturn;\n\t\t}\n\t\tconst noElementItems = items.filter(item => !item.el);\n\n\t\tif (!noElementItems.length) {\n\t\t\treturn;\n\t\t}\n\t\tconst elements = $(noElementItems.map(({ content }) =>\n\t\t\tcontent.replace(/^[\\s\\uFEFF]+|[\\s\\uFEFF]+$/g, \"\")).join(\"\"), MULTI);\n\n\t\tnoElementItems.forEach((item, index) => {\n\t\t\titem.el = elements[index];\n\t\t});\n\t}\n\tpublic container: HTMLElement;\n\tpublic view: WindowMockType | HTMLElement;\n\tpublic options: IDOMRendererOptions = {\n\t\tisEqualSize: false,\n\t\tisConstantSize: false,\n\t\thorizontal: false,\n\t\tcontainer: false,\n\t};\n\tpublic _size: IDOMRendererSize = {\n\t\tcontainer: -1,\n\t\tview: -1,\n\t\tviewport: -1,\n\t\titem: null,\n\t};\n\tpublic _orgStyle: IDOMRendererOrgStyle = {};\n\tconstructor(element: string | HTMLElement | IJQuery, options: IDOMRendererOptions) {\n\t\tassign(this.options, options);\n\t\tthis._init(element);\n\t\tthis.resize();\n\t}\n\tpublic getStatus() {\n\t\treturn {\n\t\t\tcssText: this.container.style.cssText,\n\t\t\t_size: assign({}, this._size),\n\t\t};\n\t}\n\tpublic setStatus(status: IDOMRendererStatus) {\n\t\tthis.container.style.cssText = status.cssText;\n\t\tassign(this._size, status._size);\n\t}\n\tpublic updateSize(items: IInfiniteGridItem[]) {\n\t\tconst { isEqualSize, isConstantSize } = this.options;\n\t\tconst size = this._size;\n\n\t\treturn items.map(item => {\n\t\t\tif (!item.el) {\n\t\t\t\treturn item;\n\t\t\t}\n\t\t\tif (isEqualSize && !size.item) {\n\t\t\t\tsize.item = getSize(item.el);\n\t\t\t}\n\t\t\titem.size = (isEqualSize && assign({}, size.item)) ||\n\t\t\t\t(isConstantSize && item.orgSize && assign({}, item.orgSize)) ||\n\t\t\t\tgetSize(item.el);\n\t\t\tif (!item.orgSize) {\n\t\t\t\titem.orgSize = assign({}, item.size);\n\t\t\t}\n\t\t\treturn item;\n\t\t});\n\t}\n\tpublic append(items: IInfiniteGridItem[]) {\n\t\tthis._insert(items, APPEND, {\n\t\t\ttop: DUMMY_POSITION,\n\t\t\tleft: DUMMY_POSITION,\n\t\t});\n\t}\n\tpublic prepend(items: IInfiniteGridItem[]) {\n\t\tthis._insert(items, PREPEND, {\n\t\t\ttop: DUMMY_POSITION,\n\t\t\tleft: DUMMY_POSITION,\n\t\t});\n\t}\n\tpublic createAndInsert(items: IInfiniteGridItem[], isAppend?: boolean) {\n\t\tDOMRenderer.createElements(items);\n\n\t\tDOMRenderer.renderItems(items);\n\t\tthis._insert(items, isAppend);\n\t}\n\tpublic getViewSize() {\n\t\treturn this._size.view;\n\t}\n\tpublic getViewportSize() {\n\t\treturn this._size.viewport;\n\t}\n\tpublic getContainerSize() {\n\t\treturn this._size.container;\n\t}\n\tpublic setContainerSize(size: number) {\n\t\tthis._size.container = size;\n\t\tthis.container.style[this.options.horizontal ? \"width\" : \"height\"] = `${size}px`;\n\t}\n\tpublic resize() {\n\t\tconst horizontal = this.options.horizontal;\n\t\tconst view = this.view;\n\t\tconst size = this._calcSize();\n\n\t\tif (size === 0) {\n\t\t\treturn;\n\t\t}\n\t\tconst isResize = size !== this._size.viewport;\n\n\t\tif (isResize) {\n\t\t\tthis._size = {\n\t\t\t\tviewport: size,\n\t\t\t\titem: null,\n\t\t\t};\n\t\t}\n\t\tthis._size.view = horizontal ? innerWidth(view) : innerHeight(view);\n\t\treturn isResize;\n\t}\n\tpublic isNeededResize() {\n\t\treturn this._calcSize() !== this._size.viewport;\n\t}\n\tpublic clear() {\n\t\tthis.container.innerHTML = \"\";\n\t\tthis.container.style[this.options.horizontal ? \"width\" : \"height\"] = \"\";\n\n\t\tthis._size = {\n\t\t\titem: null,\n\t\t\tviewport: -1,\n\t\t\tcontainer: -1,\n\t\t\tview: -1,\n\t\t};\n\t}\n\tpublic destroy() {\n\t\tthis.clear();\n\t\tconst container = this.options.container;\n\n\t\tfor (const p in this._orgStyle) {\n\t\t\t(this[container ? \"view\" : \"container\"] as HTMLElement).style[p as keyof IDOMRendererOrgStyle] =\n\t\t\t\tthis._orgStyle[p as keyof IDOMRendererOrgStyle];\n\t\t}\n\t\tcontainer && this.container.parentNode.removeChild(this.container);\n\t}\n\tprivate _init(el: HTMLElement | IJQuery | string) {\n\t\tconst element = $(el);\n\t\tconst style = getStyles(element);\n\t\tconst { container, horizontal } = this.options;\n\n\t\tif (style.position === \"static\") {\n\t\t\tthis._orgStyle.position = element.style.position;\n\t\t\telement.style.position = \"relative\";\n\t\t}\n\t\tif (container) {\n\t\t\tconst target = horizontal ? [\"X\", \"Y\"] : [\"Y\", \"X\"];\n\n\t\t\tthis._orgStyle.overflowX = element.style.overflowX;\n\t\t\tthis._orgStyle.overflowY = element.style.overflowY;\n\t\t\telement.style[`overflow${target[0]}` as \"overflowX\" | \"overflowY\"] = \"scroll\";\n\t\t\telement.style[`overflow${target[1]}` as \"overflowX\" | \"overflowY\"] = \"hidden\";\n\t\t\tthis.view = element;\n\t\t\tthis.container = container === true ? createContainer(this.view as HTMLElement) : container;\n\t\t} else {\n\t\t\tthis.view = window;\n\t\t\tthis.container = element;\n\t\t}\n\t}\n\tprivate _insert(items: IInfiniteGridItem[], isAppend?: boolean, styles?: IInfiniteGridItem[\"rect\"]) {\n\t\tconst container = this.container;\n\t\tconst df = document.createDocumentFragment();\n\n\t\titems.forEach(item => {\n\t\t\tstyles && DOMRenderer.renderItem(item, styles);\n\t\t\tisAppend ? df.appendChild(item.el) : df.insertBefore(item.el, df.firstChild);\n\t\t});\n\t\tisAppend ?\n\t\t\tcontainer.appendChild(df) :\n\t\t\tcontainer.insertBefore(df, container.firstChild);\n\t}\n\tprivate _calcSize() {\n\t\treturn this.options.horizontal ?\n\t\t\tinnerHeight(this.container) : innerWidth(this.container);\n\t}\n}\n","import {\n\tIS_IOS,\n} from \"./consts\";\nimport {\n\twindow,\n} from \"./browser\";\nimport {\n\taddEvent,\n\tremoveEvent,\n\tscroll,\n\tscrollTo,\n\tscrollBy,\n\tassign,\n} from \"./utils\";\nimport { WindowMockType, IWatchStatus } from \"./types\";\n\nexport interface IWatcherOptions {\n\tcontainer: HTMLElement;\n\tisOverflowScroll: boolean;\n\thorizontal: boolean;\n\tresize: () => void;\n\tcheck: (e?: {\n\t\tisForward: boolean,\n\t\tscrollPos: number,\n\t\torgScrollPos: number,\n\t\thorizontal: boolean,\n\t}) => void;\n}\n\nexport default class Watcher {\n\tpublic options: IWatcherOptions;\n\tprivate _timer: {\n\t\tresize: any;\n\t};\n\tprivate _containerOffset: number;\n\tprivate _view: WindowMockType | HTMLElement;\n\tprivate _isScrollIssue: boolean;\n\tprivate _prevPos: number;\n\tconstructor(view: WindowMockType | HTMLElement, options: Partial<IWatcherOptions> = {}) {\n\t\tassign(this.options = {\n\t\t\tcontainer: view as HTMLElement,\n\t\t\tresize: () => void 0,\n\t\t\tcheck: () => void 0,\n\t\t\tisOverflowScroll: false,\n\t\t\thorizontal: false,\n\t\t}, options);\n\t\tthis._timer = {\n\t\t\tresize: null,\n\t\t};\n\t\tthis.reset();\n\t\tthis._containerOffset = 0;\n\t\tthis._view = view;\n\t\tthis._isScrollIssue = IS_IOS;\n\t\tthis._onCheck = this._onCheck.bind(this);\n\t\tthis._onResize = this._onResize.bind(this);\n\t\tthis.attachEvent();\n\t\tthis.resize();\n\t\tthis.setScrollPos();\n\t}\n\tpublic getStatus(): IWatchStatus {\n\t\treturn {\n\t\t\t_prevPos: this._prevPos,\n\t\t\tscrollPos: this.getOrgScrollPos(),\n\t\t};\n\t}\n\tpublic setStatus(status: IWatchStatus, applyScrollPos = true) {\n\t\tthis._prevPos = status._prevPos;\n\t\tapplyScrollPos && this.scrollTo(status.scrollPos);\n\t}\n\tpublic scrollBy(pos: number) {\n\t\tconst arrPos = this.options.horizontal ? [pos, 0] : [0, pos];\n\n\t\tscrollBy(this._view, arrPos[0], arrPos[1]);\n\t\tthis.setScrollPos();\n\t}\n\tpublic scrollTo(pos: number) {\n\t\tconst arrPos = this.options.horizontal ? [pos, 0] : [0, pos];\n\n\t\tscrollTo(this._view, arrPos[0], arrPos[1]);\n\t}\n\tpublic getScrollPos() {\n\t\treturn this._prevPos;\n\t}\n\tpublic setScrollPos(pos = this.getOrgScrollPos()) {\n\t\tlet rawPos = pos;\n\n\t\tif (typeof pos === \"undefined\") {\n\t\t\trawPos = this.getOrgScrollPos();\n\t\t}\n\t\tthis._prevPos = rawPos - this.getContainerOffset();\n\t}\n\tpublic attachEvent() {\n\t\taddEvent(this._view, \"scroll\", this._onCheck);\n\t\taddEvent(window, \"resize\", this._onResize);\n\t}\n\tpublic getOrgScrollPos() {\n\t\treturn scroll(this._view, this.options.horizontal);\n\t}\n\tpublic reset() {\n\t\tthis._prevPos = null;\n\t}\n\tpublic getContainerOffset() {\n\t\treturn this._containerOffset;\n\t}\n\tpublic resize() {\n\t\tthis._containerOffset = this.options.isOverflowScroll ? 0 : this._getOffset();\n\t}\n\tpublic detachEvent() {\n\t\tremoveEvent(this._view, \"scroll\", this._onCheck);\n\t\tremoveEvent(window, \"resize\", this._onResize);\n\t}\n\tpublic destroy() {\n\t\tthis.detachEvent();\n\t\tthis.reset();\n\t}\n\tprivate _onCheck() {\n\t\tconst prevPos = this.getScrollPos();\n\t\tconst orgScrollPos = this.getOrgScrollPos();\n\n\t\tthis.setScrollPos(orgScrollPos);\n\t\tconst scrollPos = this.getScrollPos();\n\n\t\tif (prevPos === null || (this._isScrollIssue && orgScrollPos === 0) || prevPos === scrollPos) {\n\t\t\torgScrollPos && (this._isScrollIssue = false);\n\t\t\treturn;\n\t\t}\n\t\tthis._isScrollIssue = false;\n\t\tthis.options.check({\n\t\t\tisForward: prevPos < scrollPos,\n\t\t\tscrollPos,\n\t\t\torgScrollPos,\n\t\t\thorizontal: this.options.horizontal,\n\t\t});\n\t}\n\tprivate _getOffset() {\n\t\tconst { container, horizontal } = this.options;\n\t\tconst rect = container.getBoundingClientRect();\n\n\t\treturn rect[horizontal ? \"left\" : \"top\"] + this.getOrgScrollPos();\n\t}\n\tprivate _onResize() {\n\t\tif (this._timer.resize) {\n\t\t\tclearTimeout(this._timer.resize);\n\t\t}\n\t\tthis._timer.resize = setTimeout(() => {\n\t\t\tthis.resize();\n\t\t\tthis.options.resize();\n\t\t\tthis._timer.resize = null;\n\t\t\tthis.reset();\n\t\t}, 100);\n\t}\n\n}\n","import ItemManager from \"./ItemManager\";\nimport { assign } from \"./utils\";\nimport { CursorType, IInfiniteGridItem, IInfiniteGridGroup, IInfiniteStatus } from \"./types\";\n\nfunction isVisible(group: IInfiniteGridGroup, threshold: number, scrollPos: number, endScrollPos: number) {\n\tconst { items, outlines } = group;\n\tconst start = outlines.start;\n\tconst end = outlines.end;\n\n\tif (start.length === 0 || end.length === 0 || !items.length || !items[0].el) {\n\t\treturn 2;\n\t}\n\tconst min = Math.min(...start);\n\tconst max = Math.max(...end);\n\n\tif ((endScrollPos + threshold < min)) {\n\t\treturn +1;\n\t} else if ((scrollPos - threshold > max)) {\n\t\treturn -1;\n\t}\n\treturn 0;\n}\n\nexport interface IInfiniteOptions {\n\tuseRecycle?: boolean;\n\tthreshold?: number;\n\tappend?: (e?: { cache: IInfiniteGridGroup[] }) => void;\n\tprepend?: (e?: { cache: IInfiniteGridGroup[] }) => void;\n\trecycle?: (e?: { start: number, end: number }) => void;\n}\nclass Infinite {\n\tpublic options: Required<IInfiniteOptions>;\n\tprivate _items: ItemManager;\n\tprivate _status: IInfiniteStatus;\n\tconstructor(itemManger: ItemManager, options: IInfiniteOptions) {\n\t\tthis.options = assign({\n\t\t\tuseRecycle: true,\n\t\t\tthreshold: 100,\n\t\t\tappend: () => void 0,\n\t\t\tprepend: () => void 0,\n\t\t\trecycle: () => void 0,\n\t\t}, options);\n\n\t\tthis._items = itemManger;\n\t\tthis.clear();\n\t}\n\tpublic setSize(size: number) {\n\t\tthis._status.size = size;\n\t}\n\tpublic recycle(scrollPos: number, isForward?: boolean) {\n\t\tif (!this.options.useRecycle) {\n\t\t\treturn;\n\t\t}\n\t\tconst { startCursor, endCursor, size } = this._status;\n\n\t\tif (startCursor === -1 || endCursor === -1) {\n\t\t\treturn;\n\t\t}\n\t\tconst endScrollPos = scrollPos + size;\n\t\tconst { threshold, recycle } = this.options;\n\t\tconst visibles = this._items.get(startCursor, endCursor)\n\t\t\t.map(group => isVisible(group, threshold, scrollPos, endScrollPos));\n\t\tconst length = visibles.length;\n\t\tlet start = isForward ? 0 : visibles.lastIndexOf(0);\n\t\tlet end = isForward ? visibles.indexOf(0) - 1 : visibles.length - 1;\n\n\t\tif (!isForward && start !== -1) {\n\t\t\tstart += 1;\n\t\t}\n\t\tif (start < 0 || end < 0 || start > end || end - start + 1 >= length) {\n\t\t\treturn;\n\t\t}\n\t\tstart = startCursor + start;\n\t\tend = startCursor + end;\n\n\t\trecycle({ start, end });\n\t\tif (isForward) {\n\t\t\tthis.setCursor(\"start\", end + 1);\n\t\t} else {\n\t\t\tthis.setCursor(\"end\", start - 1);\n\t\t}\n\t}\n\tpublic scroll(scrollPos: number) {\n\t\tconst startCursor = this.getCursor(\"start\");\n\t\tconst endCursor = this.getCursor(\"end\");\n\t\tconst items = this._items;\n\n\t\tif (typeof scrollPos !== \"number\" || startCursor === -1 ||\n\t\t\tendCursor === -1 || !items.size()) {\n\t\t\treturn;\n\t\t}\n\t\tconst size = this._status.size;\n\t\tconst { threshold, append, prepend } = this.options;\n\t\tconst datas = items.get();\n\t\tconst endScrollPos = scrollPos + size;\n\t\tconst startEdgePos = Math.max(...datas[startCursor].outlines.start);\n\t\tconst endEdgePos = Math.min(...datas[endCursor].outlines.end);\n\t\tconst visibles = datas.map((group, i) => {\n\t\t\tconst { start, end } = group.outlines;\n\n\t\t\tif (!start.length || !end.length) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tconst startPos = Math.min(...start);\n\t\t\tconst endPos = Math.max(...end);\n\n\t\t\tif (startPos - threshold <= endScrollPos && scrollPos <= endPos + threshold) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t});\n\t\tconst startIndex = visibles.indexOf(true);\n\t\tconst endIndex = visibles.lastIndexOf(true);\n\n\t\tif (~startIndex && startIndex < startCursor) {\n\t\t\tprepend({ cache: datas.slice(startIndex, Math.min(startCursor, endIndex + 1)) });\n\t\t} else if (endCursor < endIndex) {\n\t\t\tappend({ cache: datas.slice(Math.max(startIndex, endCursor + 1), endIndex + 1) });\n\t\t} else if (endScrollPos >= endEdgePos - threshold) {\n\t\t\tappend({ cache: datas.slice(endCursor + 1, endCursor + 2) });\n\t\t} else if (scrollPos <= startEdgePos + threshold) {\n\t\t\tprepend({ cache: datas.slice(startCursor - 1, startCursor) });\n\t\t}\n\t}\n\tpublic setCursor(cursor: CursorType, index: number) {\n\t\tconst status = this._status;\n\t\tconst items = this._items;\n\t\tconst size = items.size();\n\n\t\tif (!this.options.useRecycle) {\n\t\t\tstatus.startCursor = 0;\n\t\t\tif (items.getOutline(size - 1, \"end\").length) {\n\t\t\t\tstatus.endCursor = size - 1;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (cursor !== \"end\") {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tif (cursor === \"start\") {\n\t\t\tstatus.startCursor = index;\n\t\t} else {\n\t\t\tstatus.endCursor = Math.min(size - 1, index);\n\t\t}\n\t\tstatus.startCursor = Math.max(0, status.startCursor);\n\t}\n\tpublic setStatus(status: IInfiniteStatus) {\n\t\tthis._status = assign(this._status, status);\n\t}\n\tpublic getStatus(startKey: string | number, endKey: string | number): IInfiniteStatus {\n\t\tconst { startCursor, endCursor, size } = this._status;\n\t\tconst startIndex = Math.max(this._items.indexOf(startKey), 0);\n\t\tconst endIndex = (this._items.indexOf(endKey) + 1 || this._items.size()) - 1;\n\t\tconst start = Math.max(startCursor - startIndex, ~startCursor ? 0 : -1);\n\t\tconst end = Math.max(Math.min(endCursor - startIndex, endIndex - startIndex), start);\n\n\t\treturn {\n\t\t\tstartCursor: start,\n\t\t\tendCursor: end,\n\t\t\tsize,\n\t\t};\n\t}\n\tpublic getEdgeOutline(cursor: CursorType) {\n\t\tconst { startCursor, endCursor } = this._status;\n\n\t\tif (startCursor === -1 || endCursor === -1) {\n\t\t\treturn [];\n\t\t}\n\t\treturn this._items.getOutline(cursor === \"start\" ? startCursor : endCursor, cursor);\n\t}\n\tpublic getEdgeValue(cursor: CursorType) {\n\t\tconst outlines = this.getEdgeOutline(cursor);\n\n\t\treturn outlines.length ? Math[cursor === \"start\" ? \"min\" : \"max\"](...outlines) : 0;\n\t}\n\tpublic getVisibleItems() {\n\t\treturn this._items.pluck(\"items\", this._status.startCursor, this._status.endCursor);\n\t}\n\tpublic getCursor(cursor: CursorType) {\n\t\treturn this._status[cursor === \"start\" ? \"startCursor\" : \"endCursor\"];\n\t}\n\tpublic getVisibleData() {\n\t\treturn this._items.get(this._status.startCursor, this._status.endCursor);\n\t}\n\tpublic remove(element: HTMLElement): {\n\t\titems: IInfiniteGridItem[],\n\t\tgroups: IInfiniteGridGroup[],\n\t} {\n\t\tconst { startCursor, endCursor } = this._status;\n\t\tconst result =\n\t\t\tthis._items.remove(element, startCursor, endCursor);\n\n\t\tif (result.groups.length) {\n\t\t\tthis.setCursor(\"end\", endCursor - 1);\n\t\t}\n\t\tif (!this._items.size()) {\n\t\t\tthis._status.startCursor = -1;\n\t\t\tthis._status.endCursor = -1;\n\t\t}\n\t\treturn result;\n\t}\n\tpublic clear() {\n\t\tthis._status = {\n\t\t\tstartCursor: -1,\n\t\t\tendCursor: -1,\n\t\t\tsize: -1,\n\t\t};\n\t}\n}\n\nexport default Infinite;\n","import { window } from \"./browser\";\nimport { addEvent, removeEvent, innerWidth, innerHeight } from \"./utils\";\n\nconst elements: HTMLElement[] = [];\n\nfunction onResize() {\n\tAutoSizer.resizeAll();\n}\nexport interface IAutoSizierElemenet extends HTMLElement {\n\t__PREFIX__?: string;\n}\nexport default class AutoSizer {\n\tpublic static add(element: IAutoSizierElemenet, prefix = \"data-\") {\n\t\tif (!elements.length) {\n\t\t\taddEvent(window, \"resize\", onResize);\n\t\t}\n\t\telement.__PREFIX__ = prefix;\n\t\telements.push(element);\n\t\tAutoSizer.resize(element);\n\t}\n\tpublic static remove(element: IAutoSizierElemenet, isFixed = false) {\n\t\tconst fixed = element.getAttribute(`${element.__PREFIX__}fixed`) || \"width\";\n\n\t\tif (!isFixed) {\n\t\t\telement.style[fixed === \"width\" ? \"height\" : \"width\"] = \"\";\n\t\t}\n\t\tconst index = elements.indexOf(element);\n\n\t\tif (index < 0) {\n\t\t\treturn;\n\t\t}\n\t\telements.splice(index, 1);\n\t\tif (!elements.length) {\n\t\t\tremoveEvent(window, \"reisze\", onResize);\n\t\t}\n\t}\n\tpublic static resize(element: IAutoSizierElemenet, prefix = \"data-\") {\n\t\tconst elementPrefix = typeof element.__PREFIX__ === \"string\" ? element.__PREFIX__ : prefix;\n\t\tconst dataWidth = parseInt(element.getAttribute(`${elementPrefix}width`), 10) || 0;\n\t\tconst dataHeight = parseInt(element.getAttribute(`${elementPrefix}height`), 10) || 0;\n\t\tconst fixed = element.getAttribute(`${elementPrefix}fixed`);\n\n\t\tif (fixed === \"height\") {\n\t\t\tconst size = innerHeight(element) || dataHeight;\n\n\t\t\telement.style.width = `${dataWidth / dataHeight * size}px`;\n\t\t} else {\n\t\t\tconst size = innerWidth(element) || dataWidth;\n\n\t\t\telement.style.height = `${dataHeight / dataWidth * size}px`;\n\t\t}\n\t}\n\tpublic static resizeAll() {\n\t\telements.forEach(element => AutoSizer.resize(element));\n\t}\n}\n","import { IS_IE } from \"./consts\";\nimport { addEvent, removeEvent, toArray } from \"./utils\";\nimport AutoSizer from \"./AutoSizer\";\n\nexport const CHECK_ALL: 1 = 1;\nexport const CHECK_ONLY_ERROR: 2 = 2;\n\nexport interface IImageLoadedOptions {\n\tprefix?: string;\n\tlength?: number;\n\ttype?: 1 | 2;\n\tcomplete?: () => void;\n\tend?: () => void;\n\terror?: (e: { target: LoadingImageElement, itemIndex: number }) => void;\n}\nexport interface LoadingImageElement extends HTMLImageElement {\n\t__ITEM_INDEX__?: number;\n}\n\nfunction isDataAttribute(target: HTMLElement, prefix: string) {\n\treturn !!target.getAttribute(`${prefix}width`);\n}\n\nclass ImageLoaded {\n\tpublic static CHECK_ALL = 1;\n\tpublic static CHECK_ONLY_ERROR = 2;\n\tpublic static waitImageLoaded(\n\t\tchecklist: LoadingImageElement[][],\n\t\t{ prefix = \"\", length, type, complete, error, end }: IImageLoadedOptions,\n\t) {\n\t\tlet checkCount = 0;\n\t\tlet endCount = length;\n\n\t\tif (type !== CHECK_ONLY_ERROR) {\n\t\t\tcheckCount = endCount;\n\t\t}\n\t\tconst checkEnd = () => {\n\t\t\tif (--endCount !== 0) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tend && end();\n\t\t};\n\t\tconst checkImage = () => {\n\t\t\tcheckCount--;\n\t\t\tif (checkCount !== 0) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tcomplete && complete();\n\t\t};\n\t\tconst onError = (target: LoadingImageElement, itemIndex = target.__ITEM_INDEX__) => {\n\t\t\terror && error({\n\t\t\t\ttarget,\n\t\t\t\titemIndex,\n\t\t\t});\n\t\t};\n\t\tconst onCheck = (e: Event) => {\n\t\t\tconst target = (e.target || e.srcElement) as LoadingImageElement;\n\n\t\t\tremoveEvent(target, \"error\", onCheck);\n\t\t\tremoveEvent(target, \"load\", onCheck);\n\n\t\t\tif (type === CHECK_ALL && isDataAttribute(target, prefix)) {\n\t\t\t\tAutoSizer.remove(target, e.type === \"error\");\n\t\t\t} else {\n\t\t\t\tcheckImage();\n\t\t\t}\n\t\t\tif (e.type === \"error\") {\n\t\t\t\tonError(target);\n\t\t\t}\n\t\t\tdelete target.__ITEM_INDEX__;\n\t\t\tcheckEnd();\n\t\t};\n\n\t\tchecklist.forEach((images, i) => {\n\t\t\timages.forEach(v => {\n\t\t\t\t// workaround for IE\n\t\t\t\tif (v.complete && (!IS_IE || (IS_IE && v.naturalWidth))) {\n\t\t\t\t\tif (!v.naturalWidth) {\n\t\t\t\t\t\tonError(v, i);\n\t\t\t\t\t}\n\t\t\t\t\tcheckImage();\n\t\t\t\t\tcheckEnd();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tv.__ITEM_INDEX__ = i;\n\t\t\t\tif (type === CHECK_ALL && isDataAttribute(v, prefix)) {\n\t\t\t\t\tAutoSizer.add(v, prefix);\n\t\t\t\t\tcheckImage();\n\t\t\t\t}\n\t\t\t\taddEvent(v, \"load\", onCheck);\n\t\t\t\taddEvent(v, \"error\", onCheck);\n\n\t\t\t\tIS_IE && v.setAttribute(\"src\", v.getAttribute(\"src\"));\n\t\t\t});\n\t\t});\n\t}\n\tpublic static checkImageLoaded(el: HTMLElement) {\n\t\tif (el.tagName === \"IMG\") {\n\t\t\treturn (el as HTMLImageElement).complete ? [] : [(el as HTMLImageElement)];\n\t\t} else {\n\t\t\treturn toArray(el.querySelectorAll(\"img\"));\n\t\t}\n\t}\n\tpublic static check(\n\t\telements: HTMLElement[],\n\t\t{ prefix, type = CHECK_ALL, complete, error, end }: IImageLoadedOptions,\n\t) {\n\t\tconst images = elements.map(element => this.checkImageLoaded(element));\n\t\tconst length = images.reduce((sum, element) => sum + element.length, 0);\n\n\t\tif (type === CHECK_ONLY_ERROR || length === 0) {\n\t\t\t// convert to async\n\t\t\tsetTimeout(() => {\n\t\t\t\tcomplete && complete();\n\t\t\t\tif (length === 0) {\n\t\t\t\t\tend && end();\n\t\t\t\t}\n\t\t\t}, 0);\n\t\t}\n\t\tif (length > 0) {\n\t\t\tsetTimeout(() => {\n\t\t\t\tthis.waitImageLoaded(images, { prefix, length, type, complete, error, end });\n\t\t\t}, 0);\n\t\t}\n\t}\n}\n\nexport default ImageLoaded;\n","import AutoSizer from \"./AutoSizer\";\nimport ImageLoaded, { CHECK_ALL, CHECK_ONLY_ERROR } from \"./ImageLoaded\";\nimport ItemManager from \"./ItemManager\";\nimport { matchHTML, $, assign } from \"./utils\";\nimport { DUMMY_POSITION } from \"./consts\";\nimport DOMRenderer from \"./DOMRenderer\";\nimport { ILayout, ILayoutResult, IInfiniteGridItem, IInfiniteGridGroup, IErrorCallbackOptions } from \"./types\";\n\nfunction hasTarget<T>(target: T[], value: T) {\n\treturn ~target.indexOf(value);\n}\n\nexport interface ILayoutManagerOptions {\n\tattributePrefix?: string;\n\tisEqualSize?: boolean;\n\tisConstantSize?: boolean;\n\thorizontal?: boolean;\n}\n\nexport interface ICompleteCallbackOptions {\n\tgroups?: ILayoutResult[];\n\titems?: IInfiniteGridItem[];\n\tisAppend?: boolean;\n}\nexport interface IEndCallbackOptions {\n\tremove: HTMLElement[];\n\tlayout?: boolean;\n}\nexport interface ILayoutManagerCallbacks {\n\tcomplete: (e: ICompleteCallbackOptions) => void;\n\terror: (e: IErrorCallbackOptions) => void;\n\tend: (e: IEndCallbackOptions) => void;\n}\n\nexport default class LayoutMananger {\n\tpublic options: Required<ILayoutManagerOptions>;\n\tpublic _items: ItemManager;\n\tpublic _renderer: DOMRenderer;\n\tpublic _layout: ILayout;\n\tconstructor(items: ItemManager, renderer: DOMRenderer, options: ILayoutManagerOptions = {}) {\n\t\tassign(this.options = {\n\t\t\tattributePrefix: \"data-\",\n\t\t\tisEqualSize: false,\n\t\t\tisConstantSize: false,\n\t\t\thorizontal: false,\n\t\t}, options);\n\n\t\tthis._items = items;\n\t\tthis._renderer = renderer;\n\t\tthis._layout = null;\n\t}\n\tpublic setLayout(layout: ILayout) {\n\t\tthis._layout = layout;\n\t}\n\tpublic setSize(size: number) {\n\t\tthis._layout.setSize(size);\n\t}\n\tpublic append(\n\t\t{\n\t\t\tgroups,\n\t\t\titems,\n\t\t\tisUpdate,\n\t\t}: {\n\t\t\tgroups: IInfiniteGridGroup[],\n\t\t\titems: IInfiniteGridItem[],\n\t\t\tisUpdate?: boolean,\n\t\t},\n\t\tcallbacks: Partial<ILayoutManagerCallbacks>,\n\t) {\n\t\tthis._insert({ groups, items, isUpdate, isAppend: true }, callbacks);\n\t}\n\tpublic prepend(\n\t\t{\n\t\t\tgroups,\n\t\t\titems,\n\t\t\tisUpdate,\n\t\t}: {\n\t\t\tgroups: IInfiniteGridGroup[],\n\t\t\titems: IInfiniteGridItem[],\n\t\t\tisUpdate?: boolean,\n\t\t},\n\t\tcallbacks: Partial<ILayoutManagerCallbacks>,\n\t) {\n\t\tthis._insert({ groups, items, isUpdate, isAppend: false }, callbacks);\n\t}\n\tpublic layout(isRelayout: boolean, groups: IInfiniteGridGroup[], items: IInfiniteGridItem[]) {\n\t\tconst renderer = this._renderer;\n\t\tconst { isEqualSize, isConstantSize } = renderer.options;\n\t\tconst layoutGroups = groups.filter(group => {\n\t\t\tconst item = group.items[0];\n\n\t\t\treturn item.orgSize && item.rect.top > DUMMY_POSITION / 10;\n\t\t});\n\n\t\tif (!layoutGroups.length) {\n\t\t\treturn [];\n\t\t}\n\t\tlet outline = layoutGroups[0].outlines.start;\n\n\t\tif (isRelayout) {\n\t\t\toutline = [outline.length ? Math.min(...outline) : 0];\n\t\t\tif (!isConstantSize && items.length) {\n\t\t\t\trenderer.updateSize(items);\n\n\t\t\t\t// update invisible items' size\n\t\t\t\tif (isEqualSize && items[0].size) {\n\t\t\t\t\tItemManager.pluck(layoutGroups, \"items\").forEach(item => {\n\t\t\t\t\t\titem.size = assign({}, items[0].size);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis._layout.layout(layoutGroups, outline);\n\t\treturn layoutGroups;\n\t}\n\tpublic destroy() {\n\t\tthis._items = null;\n\t\tthis._renderer = null;\n\t}\n\tprivate _complete(\n\t\tgroups: IInfiniteGridGroup[],\n\t\titems: IInfiniteGridItem[],\n\t\tisAppend: boolean,\n\t\tisUpdate: boolean,\n\t\tcallback: ILayoutManagerCallbacks[\"complete\"],\n\t) {\n\t\tconst itemManager = this._items;\n\t\tconst cursor = isAppend ? \"end\" : \"start\";\n\t\tconst groupIndex = itemManager.indexOf(groups[0]);\n\t\tconst prevGroup = itemManager.getData(groupIndex + (isAppend ? -1 : 1));\n\t\tlet outline = prevGroup ? prevGroup.outlines[cursor] : [0];\n\n\t\tthis._renderer.updateSize(items);\n\n\t\tconst groupInfos = groups.map(group => {\n\t\t\tconst groupOutline = group.outlines[isAppend ? \"start\" : \"end\"];\n\t\t\tconst isRelayout = isUpdate || !outline.length || (outline.length === groupOutline.length ?\n\t\t\t\t!outline.every((v, index) => v === groupOutline[index]) : true);\n\n\t\t\tif (!isRelayout) {\n\t\t\t\toutline = group.outlines[isAppend ? \"end\" : \"start\"];\n\t\t\t\tDOMRenderer.renderItems(group.items);\n\t\t\t\treturn group;\n\t\t\t}\n\t\t\tconst groupItems = group.items;\n\t\t\tconst groupInfo = this._layout[isAppend ? \"append\" : \"prepend\"](groupItems, outline, true);\n\n\t\t\tassign(group, groupInfo);\n\t\t\tDOMRenderer.renderItems(groupInfo.items);\n\t\t\toutline = groupInfo.outlines[isAppend ? \"end\" : \"start\"];\n\n\t\t\treturn groupInfo;\n\t\t});\n\n\t\tcallback({\n\t\t\tgroups: groupInfos,\n\t\t\titems,\n\t\t\tisAppend,\n\t\t});\n\t}\n\tprivate _error(\n\t\tremoveTarget: HTMLElement[],\n\t\treplaceTarget: number[],\n\t\ttarget: HTMLImageElement,\n\t\titems: IInfiniteGridItem[],\n\t\terrorIndex: number,\n\t\tcallback: ILayoutManagerCallbacks[\"error\"],\n\t) {\n\t\tconst item = items[errorIndex];\n\t\tconst element = item.el;\n\t\tconst prefix = this.options.attributePrefix;\n\n\t\t// remove item\n\t\tconst removeItem = () => {\n\t\t\tif (hasTarget(removeTarget, element)) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tremoveTarget.push(element);\n\t\t\tconst index = replaceTarget.indexOf(errorIndex);\n\n\t\t\tindex !== -1 && replaceTarget.splice(index, 1);\n\t\t};\n\t\t// remove image\n\t\tconst remove = () => {\n\t\t\tif (target === element) {\n\t\t\t\tremoveItem();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (hasTarget(removeTarget, element)) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\ttarget.parentNode.removeChild(target);\n\t\t\titem.content = element.outerHTML;\n\t\t\tif (hasTarget(replaceTarget, errorIndex)) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\treplaceTarget.push(errorIndex);\n\t\t};\n\t\t// replace image\n\t\tconst replace = (src: string) => {\n\t\t\tif (hasTarget(removeTarget, element)) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (src) {\n\t\t\t\tif (matchHTML(src) || typeof src === \"object\") {\n\t\t\t\t\tconst parentNode = target.parentNode;\n\n\t\t\t\t\tparentNode.insertBefore($(src), target);\n\t\t\t\t\tparentNode.removeChild(target);\n\t\t\t\t\titem.content = element.outerHTML;\n\t\t\t\t} else {\n\t\t\t\t\ttarget.src = src;\n\t\t\t\t\tif (target.getAttribute(`${prefix}width`)) {\n\t\t\t\t\t\tAutoSizer.remove(target);\n\t\t\t\t\t\ttarget.removeAttribute(`${prefix}width`);\n\t\t\t\t\t\ttarget.removeAttribute(`${prefix}height`);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\titem.content = element.outerHTML;\n\t\t\tif (hasTarget(replaceTarget, errorIndex)) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\treplaceTarget.push(errorIndex);\n\t\t};\n\t\t// replace item\n\t\tconst replaceItem = (content: string) => {\n\t\t\tif (hasTarget(removeTarget, element)) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\telement.innerHTML = content;\n\t\t\titem.content = element.outerHTML;\n\t\t\tif (hasTarget(replaceTarget, errorIndex)) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\treplaceTarget.push(errorIndex);\n\t\t};\n\n\t\tcallback({\n\t\t\ttarget,\n\t\t\telement,\n\t\t\titems,\n\t\t\titem,\n\t\t\titemIndex: errorIndex,\n\t\t\treplace,\n\t\t\treplaceItem,\n\t\t\tremove,\n\t\t\tremoveItem,\n\t\t});\n\t}\n\tprivate _end(\n\t\tremoveTarget: HTMLElement[],\n\t\treplaceTarget: number[],\n\t\titems: IInfiniteGridItem[],\n\t\tcallback: ILayoutManagerCallbacks[\"end\"],\n\t) {\n\t\tconst { attributePrefix } = this.options;\n\n\t\tconst removeTargetLength = removeTarget.length;\n\t\tconst replaceTargetLength = replaceTarget.length;\n\n\t\tif (!removeTargetLength && !replaceTargetLength) {\n\t\t\tcallback({ remove: [] });\n\t\t\treturn;\n\t\t}\n\t\tconst layoutedItems = replaceTarget.map(itemIndex => items[itemIndex]);\n\n\t\tif (!replaceTargetLength) {\n\t\t\tcallback({ remove: removeTarget, layout: true });\n\t\t\treturn;\n\t\t}\n\t\t// wait layoutComplete beacause of error event.\n\t\tImageLoaded.check(layoutedItems.map(v => v.el), {\n\t\t\tprefix: attributePrefix,\n\t\t\tcomplete: () => {\n\t\t\t\tthis._renderer.updateSize(layoutedItems);\n\t\t\t\tcallback({ remove: removeTarget, layout: true });\n\t\t\t},\n\t\t});\n\t}\n\tprivate _insert(\n\t\t{\n\t\t\tgroups,\n\t\t\titems = ItemManager.pluck(groups, \"items\"),\n\t\t\tisAppend,\n\t\t\tisUpdate,\n\t\t}: {\n\t\t\tgroups: IInfiniteGridGroup[],\n\t\t\titems: IInfiniteGridItem[],\n\t\t\tisAppend: boolean,\n\t\t\tisUpdate: boolean,\n\t\t},\n\t\t{\n\t\t\terror = () => void 0,\n\t\t\tcomplete = () => void 0,\n\t\t\tend = () => void 0,\n\t\t}: Partial<ILayoutManagerCallbacks>,\n\t) {\n\t\tif (!groups.length) {\n\t\t\treturn;\n\t\t}\n\t\tconst checkGroups = isAppend ? groups : groups.reverse();\n\t\tconst replaceTarget: number[] = [];\n\t\tconst removeTarget: HTMLElement[] = [];\n\t\tconst elements = items.map(item => item.el);\n\t\tconst type = this.options.isEqualSize && this._renderer._size.item ? CHECK_ONLY_ERROR : CHECK_ALL;\n\t\tconst prefix = this.options.attributePrefix;\n\n\t\tImageLoaded.check(elements, {\n\t\t\tprefix,\n\t\t\ttype,\n\t\t\tcomplete: () => {\n\t\t\t\tif (!this._items) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis._complete(checkGroups, items, isAppend, isUpdate, complete);\n\t\t\t},\n\t\t\terror: ({ target, itemIndex }) => {\n\t\t\t\tif (!this._items) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis._error(removeTarget, replaceTarget, target, items, itemIndex, error);\n\t\t\t},\n\t\t\tend: () => {\n\t\t\t\tif (!this._items) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis._end(removeTarget, replaceTarget, items, end);\n\t\t\t},\n\t\t});\n\t}\n}\n","/**\n * Copyright (c) 2017 NAVER Corp.\n * egjs projects are licensed under the MIT license\n*/\nimport Component from \"@egjs/component\";\nimport ItemManager from \"./ItemManager\";\nimport DOMRenderer, { resetSize } from \"./DOMRenderer\";\nimport Watcher from \"./Watcher\";\nimport {\n\tAPPEND,\n\tPREPEND,\n\tCACHE,\n\tNO_CACHE,\n\tTRUSTED,\n\tNO_TRUSTED,\n\tIS_ANDROID2,\n\tIDLE,\n\tLOADING_APPEND,\n\tLOADING_PREPEND,\n\tPROCESSING,\n\tDEFENSE_BROWSER,\n\tIGNORE_CLASSNAME,\n\tDUMMY_POSITION,\n\tIS_IOS,\n} from \"./consts\";\nimport Infinite from \"./Infinite\";\nimport { toArray, $, outerHeight, outerWidth, assign } from \"./utils\";\nimport LayoutMananger from \"./LayoutManager\";\nimport {\n\tIJQuery, ILayout,\n\tCursorType, StyleType,\n\tIItemManagerStatus, IInfiniteGridItem,\n\tIInfiniteGridGroup, IErrorCallbackOptions, IDOMRendererStatus, IWatchStatus, IInfiniteStatus, IInfiniteGridStatus\n} from \"./types\";\n\n// IE8\n// https://stackoverflow.com/questions/43216659/babel-ie8-inherit-issue-with-object-create\n/* eslint-disable */\n// if (typeof Object.create !== \"function\") {\n//   // tslint:disable\n//   Object.create = (o: any, properties: any) => {\n//     if (typeof o !== \"object\" && typeof o !== \"function\") {\n//       throw new TypeError(\"Object prototype may only be an Object: \" + o);\n//     } else if (o === null) {\n//       throw new Error(\"This browser's implementation of Object.create is a shim and doesn't support 'null' as the first argument.\");\n//     }\n//     function F() { }\n//     F.prototype = o;\n//     return new F();\n//   };\n//   // tslint:enable\n// }\n/* eslint-enable */\n\nexport interface IInfiniteGridOptions {\n\titemSelector: string;\n\tisOverflowScroll: boolean;\n\tthreshold: number;\n\tisEqualSize: boolean;\n\tisConstantSize: boolean;\n\tuseRecycle: boolean;\n\thorizontal: boolean;\n\ttransitionDuration: number;\n\tuseFit: boolean;\n\tattributePrefix: string;\n}\n\n/**\n * A module used to arrange card elements including content infinitely according to layout type. With this module, you can implement various layouts composed of different card elements whose sizes vary. It guarantees performance by maintaining the number of DOMs the module is handling under any circumstance\n * @ko 콘텐츠가 있는 카드 엘리먼트를 레이아웃 타입에 따라 무한으로 배치하는 모듈. 다양한 크기의 카드 엘리먼트를 다양한 레이아웃으로 배치할 수 있다. 카드 엘리먼트의 개수가 계속 늘어나도 모듈이 처리하는 DOM의 개수를 일정하게 유지해 최적의 성능을 보장한다\n * @alias eg.InfiniteGrid\n * @extends eg.Component\n *\n * @example\n```\n<ul id=\"grid\">\n  <li class=\"card\">\n    <div>test1</div>\n  </li>\n  <li class=\"card\">\n    <div>test2</div>\n  </li>\n  <li class=\"card\">\n    <div>test3</div>\n  </li>\n  <li class=\"card\">\n    <div>test4</div>\n  </li>\n  <li class=\"card\">\n    <div>test5</div>\n  </li>\n  <li class=\"card\">\n    <div>test6</div>\n  </li>\n</ul>\n<script>\nvar some = new eg.InfiniteGrid(\"#grid\").on(\"layoutComplete\", function(e) {\n  // ...\n});\n\n// If you already have items in the container, call \"layout\" method.\nsome.layout();\n</script>\n```\n *\n * @support {\"ie\": \"8+\", \"ch\" : \"latest\", \"ff\" : \"latest\",  \"sf\" : \"latest\", \"edge\" : \"latest\", \"ios\" : \"7+\", \"an\" : \"2.1+ (except 3.x)\"}\n **/\nclass InfiniteGrid extends Component {\n\t/**\n\t * Version info string\n\t * @ko 버전정보 문자열\n\t * @name VERSION\n\t * @static\n\t * @type {String}\n\t * @example\n\t * eg.InfiniteGrid.VERSION;  // ex) 3.3.3\n\t * @memberof eg.InfiniteGrid\n\t */\n\tpublic static VERSION = \"#__VERSION__#\";\n\n\tpublic options: IInfiniteGridOptions;\n\tprivate _loadingBar: {\n\t\tappend?: HTMLElement,\n\t\tprepend?: HTMLElement,\n\t};\n\tprivate _items: ItemManager;\n\tprivate _renderer: DOMRenderer;\n\tprivate _manager: LayoutMananger;\n\tprivate _watcher: Watcher;\n\tprivate _infinite: Infinite;\n\tprivate _status: IInfiniteGridStatus[\"_status\"];\n\n\t/**\n\t * @param {HTMLElement|String|jQuery} element A base element for a module <ko>모듈을 적용할 기준 엘리먼트</ko>\n\t * @param {Object} [options] The option object of the eg.InfiniteGrid module <ko>eg.InfiniteGrid 모듈의 옵션 객체</ko>\n\t * @param {String} [options.itemSelector] A selector to select card elements that make up the layout<ko>레이아웃을 구성하는 카드 엘리먼트를 선택할 선택자(selector)</ko>\n\t * @param {Boolean} [options.useRecycle=true] Indicates whether keep the number of DOMs is maintained. If the useRecycle value is 'true', keep the number of DOMs is maintained. If the useRecycle value is 'false', the number of DOMs will increase as card elements are added. <ko>DOM의 수를 유지할지 여부를 나타낸다. useRecycle 값이 'true'이면 DOM 개수를 일정하게 유지한다. useRecycle 값이 'false' 이면 카드 엘리먼트가 추가될수록 DOM 개수가 계속 증가한다.</ko>\n\t * @param {Boolean} [options.isOverflowScroll=false] Indicates whether overflow:scroll is applied<ko>overflow:scroll 적용여부를 결정한다.</ko>\n\t * @param {Boolean} [options.horizontal=false] Direction of the scroll movement (true: horizontal, false: vertical) <ko>스크롤 이동 방향 (true 가로방향, false 세로방향)</ko>\n\t * @param {Boolean} [options.useFit=true] The useFit option scrolls upwards so that no space is visible until an item is added <ko>위로 스크롤할 시 아이템을 추가하는 동안 보이는 빈 공간을 안보이게 한다.</ko>\n\t * @param {Boolean} [options.isEqualSize=false] Indicates whether sizes of all card elements are equal to one another. If sizes of card elements to be arranged are all equal and this option is set to \"true\", the performance of layout arrangement can be improved. <ko>카드 엘리먼트의 크기가 동일한지 여부. 배치될 카드 엘리먼트의 크기가 모두 동일할 때 이 옵션을 'true'로 설정하면 레이아웃 배치 성능을 높일 수 있다</ko>\n\t * @param {Boolean} [options.isConstantSize=false] Indicates whether sizes of all card elements does not change, the performance of layout arrangement can be improved. <ko>모든 카드 엘리먼트의 크기가 불변일 때 이 옵션을 'true'로 설정하면 레이아웃 배치 성능을 높일 수 있다</ko>\n\t * @param {Number} [options.transitionDruation=0] Indicates how many seconds a transition effect takes to complete. <ko>트랜지션 효과를 완료하는데 걸리는 시간을 나타낸다.</ko>\n\t * @param {Number} [options.threshold=100] The threshold size of an event area where card elements are added to a layout.<ko>레이아웃에 카드 엘리먼트를 추가하는 이벤트가 발생하는 기준 영역의 크기.</ko>\n\t * @param {String} [options.attributePrefix=\"data-\"] The prefix to use element's data attribute.<ko>엘리먼트의 데이타 속성에 사용할 접두사.</ko>\n\t */\n\tconstructor(element: HTMLElement | string | IJQuery, options?: Partial<IInfiniteGridOptions>) {\n\t\tsuper();\n\t\tassign(this.options = {\n\t\t\titemSelector: \"*\",\n\t\t\tisOverflowScroll: false,\n\t\t\tthreshold: 100,\n\t\t\tisEqualSize: false,\n\t\t\tisConstantSize: false,\n\t\t\tuseRecycle: true,\n\t\t\thorizontal: false,\n\t\t\ttransitionDuration: 0,\n\t\t\tuseFit: true,\n\t\t\tattributePrefix: \"data-\",\n\t\t}, options);\n\t\tDEFENSE_BROWSER && (this.options.useFit = false);\n\t\tIS_ANDROID2 && (this.options.isOverflowScroll = false);\n\t\tthis._reset();\n\t\tthis._loadingBar = {};\n\n\t\tconst {\n\t\t\tisOverflowScroll,\n\t\t\tisEqualSize,\n\t\t\tisConstantSize,\n\t\t\thorizontal,\n\t\t\tthreshold,\n\t\t\tuseRecycle,\n\t\t} = this.options;\n\n\t\tthis._items = new ItemManager();\n\t\tthis._renderer = new DOMRenderer(element, {\n\t\t\tisEqualSize,\n\t\t\tisConstantSize,\n\t\t\thorizontal,\n\t\t\tcontainer: isOverflowScroll,\n\t\t});\n\t\tthis._watcher = new Watcher(\n\t\t\tthis._renderer.view,\n\t\t\t{\n\t\t\t\tisOverflowScroll,\n\t\t\t\thorizontal,\n\t\t\t\tcontainer: this._renderer.container,\n\t\t\t\tresize: () => this._onResize(),\n\t\t\t\tcheck: param => this._onCheck(param),\n\t\t\t});\n\n\t\tthis._infinite = new Infinite(this._items, {\n\t\t\tuseRecycle,\n\t\t\tthreshold,\n\t\t\tappend: param => this._requestAppend(param),\n\t\t\tprepend: param => this._requestPrepend(param),\n\t\t\trecycle: param => this._recycle(param),\n\t\t});\n\t}\n\t/**\n\t * Adds a card element at the bottom of a layout. This method is available only if the isProcessing() method returns false.\n\t * @ko 카드 엘리먼트를 레이아웃 아래에 추가한다. isProcessing() 메서드의 반환값이 'false'일 때만 이 메서드를 사용할 수 있다\n\t * 이 메소드는 isProcessing()의 반환값이 false일 경우에만 사용 가능하다.\n\t * @param {Array|jQuery} elements Array of the card elements to be added <ko>추가할 카드 엘리먼트의 배열</ko>\n\t * @param {Number|String} [groupKey] The group key to be configured in a card element. It is automatically generated by default.\n\t * <ko>추가할 카드 엘리먼트에 설정할 그룹 키. 생략하면 값이 자동으로 생성된다.</ko>\n\t * @return {eg.InfiniteGrid} An instance of a module itself<ko>모듈 자신의 인스턴스</ko>\n\t * @example\n\t * infinitegrid.append(\"&lt;div class='item'&gt;test1&lt;/div&gt;&lt;div class='item'&gt;test2&lt;/div&gt;\");\n\t * infinitegrid.append([\"&lt;div class='item'&gt;test1&lt;/div&gt;\", \"&lt;div class='item'&gt;test2&lt;/div&gt;\"]);\n\t * infinitegrid.append([HTMLElement1, HTMLElement2]);\n\t * infinitegrid.append(jQuery([\"&lt;div class='item'&gt;test1&lt;/div&gt;\", \"&lt;div class='item'&gt;test2&lt;/div&gt;\"]));\n\t */\n\tpublic append(elements: HTMLElement[] | IJQuery | string[] | string, groupKey?: string | number) {\n\t\tthis._manager && this._insert({\n\t\t\telements,\n\t\t\tisAppend: APPEND,\n\t\t\tgroupKey,\n\t\t});\n\t\treturn this;\n\t}\n\t/**\n\t * Adds a card element at the top of a layout. This method is available only if the isProcessing() method returns false.\n\t * @ko 카드 엘리먼트를 레이아웃의 위에 추가한다. isProcessing() 메서드의 반환값이 'false'일 때만 이 메서드를 사용할 수 있다\n\t * @param {Array|jQuery} elements Array of the card elements to be added <ko>추가할 카드 엘리먼트 배열</ko>\n\t * @param {Number|String} [groupKey] The group key to be configured in a card element. It is automatically generated by default.\n\t * <ko>추가할 카드 엘리먼트에 설정할 그룹 키. 생략하면 값이 자동으로 생성된다.</ko>\n\t * @return {eg.InfiniteGrid} An instance of a module itself<ko>모듈 자신의 인스턴스</ko>\n\t * @example\n\t * infinitegrid.prepend(\"&lt;div class='item'&gt;test1&lt;/div&gt;&lt;div class='item'&gt;test2&lt;/div&gt;\");\n\t * infinitegrid.prepend([\"&lt;div class='item'&gt;test1&lt;/div&gt;\", \"&lt;div class='item'&gt;test2&lt;/div&gt;\"]);\n\t * infinitegrid.prepend([HTMLElement1, HTMLElement2]);\n\t * infinitegrid.prepend(jQuery([\"&lt;div class='item'&gt;test1&lt;/div&gt;\", \"&lt;div class='item'&gt;test2&lt;/div&gt;\"]));\n\t */\n\tpublic prepend(elements: HTMLElement[] | IJQuery | string[] | string, groupKey?: string | number) {\n\t\tthis._manager && this._insert({\n\t\t\telements,\n\t\t\tisAppend: PREPEND,\n\t\t\tgroupKey,\n\t\t});\n\t\treturn this;\n\t}\n\t/**\n\t * Specifies the Layout class to use.\n\t * @ko 사용할 Layout 클래스를 지정한다.\n\t * @param {Class|Object} LayoutKlass The Layout class to use or an instance of a layout moudle<ko>사용할 Layout 클래스 또는 레이아웃 모듈의 인스턴스</ko>\n\t * @param {Object} options Options to apply to the Layout.<ko>Layout에 적용할 옵션</ko>\n\t * @return {eg.InfiniteGrid} An instance of a module itself<ko>모듈 자신의 인스턴스</ko>\n\t * @example\n\t * infinitegrid.setLayout(eg.InfiniteGrid.GridLayout, {\n\t *  margin: 10,\n\t *  align: \"start\"\n\t * });\n\t * infinitegrid.setLayout(eg.InfiniteGrid.JustifiedLayout, {\n\t *  margin: 10,\n\t *  minSize: 100,\n\t *  maxSize: 200\n\t * });\n\t * infinitegrid.setLayout(eg.InfiniteGrid.SquareLayout, {\n\t *  margin: 10,\n\t *  column: 2\n\t * });\n\t * infinitegrid.setLayout(eg.InfiniteGrid.FrameLayout, {\n\t *  margin: 10,\n\t *  frame: [\n\t *   [1, 2],\n\t *   [4, 3],\n\t *  ]\n\t * });\n\t * infinitegrid.setLayout(eg.InfiniteGrid.PackingLayout, {\n\t *  margin: 10,\n\t *  aspectRatio: 1.5\n\t * });\n\t * var layout = new eg.InfiniteGrid.GridLayout({\n\t *   margin: 10,\n\t *  align: \"start\"\n\t * });\n\t * infinitegrid.setLayout(layout);\n\t */\n\tpublic setLayout(LayoutKlass: ILayout | (new (...args: any[]) => ILayout), options = {}) {\n\t\tconst { isEqualSize, isConstantSize, attributePrefix, horizontal } = this.options;\n\n\t\tif (!this._manager) {\n\t\t\tthis._manager = new LayoutMananger(this._items, this._renderer, {\n\t\t\t\tattributePrefix,\n\t\t\t\tisEqualSize,\n\t\t\t\tisConstantSize,\n\t\t\t});\n\t\t}\n\t\tif (typeof LayoutKlass === \"function\") {\n\t\t\tthis._manager.setLayout(new LayoutKlass(assign(options, {\n\t\t\t\thorizontal,\n\t\t\t})));\n\t\t} else {\n\t\t\tLayoutKlass.options.horizontal = horizontal;\n\t\t\tthis._manager.setLayout(LayoutKlass);\n\t\t}\n\t\tthis._renderer.resize();\n\t\tthis._setSize(this._renderer.getViewportSize());\n\t\treturn this;\n\t}\n\t/**\n\t * Returns the layouted items.\n\t * @ko 레이아웃된 아이템들을 반환한다.\n\t * @param {Boolean} includeCached Indicates whether to include the cached items. <ko>캐싱된 아이템을 포함할지 여부를 나타낸다.</ko>\n\t * @returns List of items <ko>아이템의 목록</ko>\n\t */\n\tpublic getItems(includeCached = false): IInfiniteGridItem[] {\n\t\treturn includeCached ? this._items.pluck(\"items\") : this._infinite.getVisibleItems();\n\t}\n\t/**\n\t * Rearranges a layout.\n\t * @ko 레이아웃을 다시 배치한다.\n\t * @param {Boolean} [isRelayout=true] Indicates whether a card element is being relayouted <ko>카드 엘리먼트 재배치 여부</ko>\n\t * @return {eg.InfiniteGrid} An instance of a module itself<ko>모듈 자신의 인스턴스</ko>\n\t */\n\tpublic layout(isRelayout = true) {\n\t\tif (!this._manager) {\n\t\t\treturn this;\n\t\t}\n\t\tconst renderer = this._renderer;\n\t\tconst itemManager = this._items;\n\t\tconst infinite = this._infinite;\n\t\tconst isResize = renderer.resize();\n\t\tconst items = this.getItems();\n\t\tconst { isEqualSize, isConstantSize, transitionDuration } = this.options;\n\t\tconst isLayoutAll = isRelayout && (isEqualSize || isConstantSize);\n\t\tconst size = itemManager.size();\n\n\t\tif (isRelayout) {\n\t\t\tthis._watcher.resize();\n\t\t\tif (isResize) {\n\t\t\t\tthis._setSize(renderer.getViewportSize());\n\t\t\t}\n\t\t}\n\t\t// check childElement\n\t\tif (!size || !items.length) {\n\t\t\tconst children = toArray(renderer.container.children);\n\n\t\t\tif (children.length) {\n\t\t\t\tthis._insert({\n\t\t\t\t\telements: children,\n\t\t\t\t\tisAppend: true,\n\t\t\t\t\tisChildren: true,\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tif (renderer.getContainerSize()) {\n\t\t\t\t\trenderer.setContainerSize(0);\n\t\t\t\t}\n\t\t\t\tthis._requestAppend({});\n\t\t\t}\n\t\t\treturn this;\n\t\t}\n\t\t// layout datas\n\t\tconst startCursor = infinite.getCursor(\"start\");\n\t\tconst endCursor = infinite.getCursor(\"end\");\n\t\tconst data = isLayoutAll || !(isRelayout && isResize) ? itemManager.get() :\n\t\t\titemManager.get(startCursor, endCursor);\n\n\t\t// LayoutManger interface\n\t\tthis._manager.layout(isRelayout, data, isResize ? items : []);\n\t\tif (isLayoutAll) {\n\t\t\tthis._fit();\n\t\t} else if (isRelayout && isResize) {\n\t\t\titemManager.clearOutlines(startCursor, endCursor);\n\t\t}\n\t\tDOMRenderer.renderItems(items, transitionDuration);\n\t\tisRelayout && this._watcher.setScrollPos();\n\t\tthis._onLayoutComplete({\n\t\t\titems,\n\t\t\tisAppend: APPEND,\n\t\t\tfromCache: CACHE,\n\t\t\tisTrusted: NO_TRUSTED,\n\t\t\tuseRecycle: false,\n\t\t\tisLayout: true,\n\t\t});\n\t\treturn this;\n\t}\n\t/**\n\t * Removes a item element on a grid layout.\n\t * @ko 그리드 레이아웃의 카드 엘리먼트를 삭제한다.\n\t * @param {HTMLElement} item element to be removed <ko>삭제될 아이템 엘리먼트</ko>\n\t * @return {Object}  Removed item element <ko>삭제된 아이템 엘리먼트 정보</ko>\n\t */\n\tpublic remove(element: HTMLElement, isLayout = true) {\n\t\tif (element) {\n\t\t\tconst {items, groups} = this._infinite.remove(element);\n\n\t\t\titems && DOMRenderer.removeElement(element);\n\t\t\tisLayout && this.layout(groups.length > 0);\n\t\t\treturn items;\n\t\t}\n\t\treturn null;\n\t}\n\t/**\n\t * Returns the list of group keys which belongs to card elements currently being maintained. You can use the append() or prepend() method to configure group keys so that multiple card elements can be managed at once. If you do not use these methods to configure group keys, groupkey is automatically generated.\n\t * @ko 현재 유지하고 있는 카드 엘리먼트의 그룹 키 목록을 반환한다. 여러 개의 카드 엘리먼트를 묶어서 관리할 수 있도록 append() 메서드나 prepend() 메서드에서 그룹 키를 지정할 수 있다. append() 메서드나 prepend() 메서드에서 그룹 키를 지정하지 않았다면 자동으로 그룹키가 생성된다.\n\t * @param {Boolean} includeCached Indicates whether to include the cached groups. <ko>캐싱된 그룹을 포함할지 여부를 나타낸다.</ko>\n\t * @return {Array} List of group keys <ko>그룹 키의 목록</ko>\n\t */\n\tpublic getGroupKeys(includeCached?: boolean) {\n\t\tconst data = includeCached ?\n\t\t\tthis._items.get() : this._infinite.getVisibleData();\n\n\t\treturn data.map(v => v.groupKey);\n\t}\n\t/**\n\t * Returns the current state of a module such as location information. You can use the setStatus() method to restore the information returned through a call to this method.\n\t * @ko 카드의 위치 정보 등 모듈의 현재 상태 정보를 반환한다. 이 메서드가 반환한 정보를 저장해 두었다가 setStatus() 메서드로 복원할 수 있다\n\t * @return {Object} State object of the eg.InfiniteGrid module<ko>eg.InfiniteGrid 모듈의 상태 객체</ko>\n\t */\n\tpublic getStatus(startKey?: string | number, endKey?: string | number): IInfiniteGridStatus {\n\t\treturn {\n\t\t\t_status: assign({}, this._status),\n\t\t\t_items: this._items.getStatus(startKey, endKey),\n\t\t\t_renderer: this._renderer.getStatus(),\n\t\t\t_watcher: this._watcher.getStatus(),\n\t\t\t_infinite: this._infinite.getStatus(startKey, endKey),\n\t\t};\n\t}\n\t/**\n\t * Sets the state of the eg.InfiniteGrid module with the information returned through a call to the getStatue() method.\n\t * @ko getStatue() 메서드가 저장한 정보로 eg.InfiniteGrid 모듈의 상태를 설정한다.\n\t * @param {Object} status State object of the eg.InfiniteGrid module <ko>eg.InfiniteGrid 모듈의 상태 객체</ko>\n\t * @param {boolean} [applyScrollPos=true] Checks whether to scroll<ko>스크롤의 위치를 복원할지 결정한다.</ko>\n\t * @return {eg.InfiniteGrid} An instance of a module itself<ko>모듈 자신의 인스턴스</ko>\n\t */\n\tpublic setStatus(status: IInfiniteGridStatus, applyScrollPos = true) {\n\t\tif (!status) {\n\t\t\treturn this;\n\t\t}\n\t\tconst { _status, _renderer, _items, _watcher, _infinite } = status;\n\n\t\tif (!_status ||\n\t\t\t!_renderer || !_items || !_watcher || !_infinite) {\n\t\t\treturn this;\n\t\t}\n\t\tconst items = this._items;\n\t\tconst renderer = this._renderer;\n\t\tconst watcher = this._watcher;\n\t\tconst infinite = this._infinite;\n\n\t\twatcher.detachEvent();\n\t\tassign(this._status, _status);\n\t\tthis._status.processingStatus = IDLE;\n\t\titems.setStatus(_items);\n\t\trenderer.setStatus(_renderer);\n\t\tinfinite.setStatus(_infinite);\n\n\t\tconst visibleItems = this.getItems();\n\t\tconst length = visibleItems.length;\n\n\t\trenderer.createAndInsert(visibleItems, true);\n\n\t\tconst isReLayout = renderer.isNeededResize();\n\n\t\twatcher.setStatus(_watcher, applyScrollPos);\n\t\twatcher.attachEvent();\n\n\t\tconst { isConstantSize, isEqualSize } = this.options;\n\n\t\tif (!length) {\n\t\t\tthis._requestAppend({ cache: [] });\n\t\t} else if (isReLayout) {\n\t\t\trenderer.resize();\n\t\t\tthis._setSize(renderer.getViewportSize());\n\n\t\t\tif (isConstantSize) {\n\t\t\t\tthis.layout(true);\n\t\t\t} else {\n\t\t\t\tthis._items.clearOutlines();\n\t\t\t\tthis._postLayout({\n\t\t\t\t\tfromCache: true,\n\t\t\t\t\tgroups: isEqualSize ? items.get() : infinite.getVisibleData(),\n\t\t\t\t\titems: visibleItems,\n\t\t\t\t\tnewItems: visibleItems,\n\t\t\t\t\tisAppend: true,\n\t\t\t\t\tisTrusted: false,\n\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\tthis.layout(false);\n\t\t}\n\t\treturn this;\n\t}\n\t/**\n\t * Clears added card elements and data.\n\t * @ko 추가된 카드 엘리먼트와 데이터를 모두 지운다.\n\t * @return {eg.InfiniteGrid} An instance of a module itself<ko>모듈 자신의 인스턴스</ko>\n\t */\n\tpublic clear() {\n\t\tthis._items.clear();\n\t\tthis._renderer.clear();\n\t\tthis._infinite.clear();\n\t\tthis._reset();\n\t\tthis._appendLoadingBar();\n\t\treturn this;\n\t}\n\t/**\n\t * Specifies the Loading Bar to use for append or prepend items.\n\t * @ko 아이템을 append 또는 prepend 하기 위해 사용할 로딩 바를 지정한다.\n\t * @param {String|Object} [userLoadingBar={}] The loading bar HTML markup or element or element selector <ko> 로딩 바 HTML 또는 element 또는 selector </ko>\n\t * @return {eg.InfiniteGrid} An instance of a module itself<ko>모듈 자신의 인스턴스</ko>\n\t */\n\tpublic setLoadingBar(userLoadingBar: {\n\t\tappend?: string | HTMLElement,\n\t\tprepepnd?: string | HTMLElement,\n\t} | string = {}) {\n\t\tconst loadingBarObj: {\n\t\t\tappend?: string | HTMLElement,\n\t\t\tprepend?: string | HTMLElement,\n\t\t} = typeof userLoadingBar === \"object\" ? userLoadingBar : {\n\t\t\tappend: userLoadingBar,\n\t\t\tprepend: userLoadingBar,\n\t\t};\n\n\t\tthis._status.loadingSize = 0;\n\t\tthis._status.loadingStyle = {};\n\t\tconst loadingBar = this._loadingBar;\n\n\t\tfor (const type in loadingBarObj) {\n\t\t\tloadingBar[type as \"append\" | \"prepend\"] = $(loadingBarObj[type as \"append\" | \"prepend\"]);\n\t\t\tloadingBar[type as \"append\" | \"prepend\"].className += ` ${IGNORE_CLASSNAME}`;\n\t\t}\n\t\tthis._appendLoadingBar();\n\t\treturn this;\n\t}\n\t/**\n\t * Checks whether a card element or data is being added.\n\t * @ko 카드 엘리먼트 추가 또는 데이터 로딩이 진행 중인지 확인한다\n\t * @return {Boolean} Indicates whether a card element or data is being added <ko>카드 엘리먼트 추가 또는 데이터 로딩 진행 중 여부</ko>\n\t */\n\tpublic isProcessing() {\n\t\treturn this._isProcessing() || this._isLoading();\n\t}\n\t/**\n\t * Returns the element of loading bar.\n\t * @ko 로딩 바의 element를 반환한다.\n\t * @param {Boolean} [isAppend=currentLoadingBar|true] Checks whether the card element is added to the append () method. <ko>카드 엘리먼트가 append() 메서드로 추가 할 것인지 확인한다.</ko>\n\t * @return {Element} The element of loading bar. <ko>로딩 바의 element</ko>\n\t */\n\tpublic getLoadingBar(isAppend = this._getLoadingStatus() !== LOADING_PREPEND) {\n\t\treturn this._loadingBar[isAppend ? \"append\" : \"prepend\"];\n\t}\n\t/**\n\t * Start loading for append/prepend during loading data.\n\t * @ko 데이터가 로딩되는 동안 append/prepend하길 위해 로딩을 시작한다.\n\t * @param {Boolean} [isAppend=true] Checks whether the card element is added to the append () method. <ko>카드 엘리먼트가 append() 메서드로 추가 할 것인지 확인한다.</ko>\n\t * @param {Object} [userStyle = {display: \"block\"}] custom style to apply to this loading bar for start. <ko> 로딩 시작을 위한 로딩 바에 적용할 커스텀 스타일 </ko>\n\t * @return {eg.InfiniteGrid} An instance of a module itself<ko>모듈 자신의 인스턴스</ko>\n\t */\n\tpublic startLoading(isAppend?: boolean, userStyle: StyleType = { display: \"block\" }) {\n\t\tif (this._isLoading()) {\n\t\t\treturn this;\n\t\t}\n\t\tconst type = isAppend ? \"append\" : \"prepend\";\n\n\t\tthis._process(isAppend ? LOADING_APPEND : LOADING_PREPEND);\n\t\tif (!this._loadingBar[type]) {\n\t\t\treturn this;\n\t\t}\n\t\tthis._renderLoading(userStyle);\n\t\tthis._status.loadingStyle = userStyle;\n\t\tif (!isAppend) {\n\t\t\tthis._fit();\n\t\t} else {\n\t\t\tthis._setContainerSize(this._getEdgeValue(\"end\") + this._status.loadingSize);\n\t\t}\n\t\treturn this;\n\t}\n\t/**\n\t * End loading after startLoading() for append/prepend\n\t * @ko  append/prepend하길 위해 startLoading() 호출해선 걸었던 로딩을 끝낸다.\n\t * @param {Object} [userStyle = {display: \"none\"}] custom style to apply to this loading bar for end <ko> 로딩 시작을 위한 로딩 바에 적용할 커스텀 스타일 </ko>\n\t * @return {eg.InfiniteGrid} An instance of a module itself<ko>모듈 자신의 인스턴스</ko>\n\t */\n\tpublic endLoading(userStyle: StyleType = { display: \"none\" }) {\n\t\tif (!this._isLoading()) {\n\t\t\treturn this;\n\t\t}\n\t\tconst isAppend = this._getLoadingStatus() === LOADING_APPEND;\n\t\tconst type = isAppend ? \"append\" : \"prepend\";\n\t\tconst el = this._loadingBar[type];\n\t\tconst status = this._status;\n\t\tconst size = status.loadingSize;\n\n\t\tthis._process(LOADING_APPEND | LOADING_PREPEND, false);\n\t\tstatus.loadingSize = 0;\n\t\tstatus.loadingStyle = {};\n\t\tif (el) {\n\t\t\tconst style: StyleType = assign({\n\t\t\t\t[this.options.horizontal ? \"left\" : \"top\"]: `${-size}px`,\n\t\t\t}, userStyle);\n\n\t\t\tfor (const property in style) {\n\t\t\t\tel.style[property as keyof StyleType] = style[property as keyof StyleType];\n\t\t\t}\n\t\t\tif (!isAppend) {\n\t\t\t\tthis._fitItems(size);\n\t\t\t} else {\n\t\t\t\tthis._setContainerSize(this._getEdgeValue(\"end\"));\n\t\t\t}\n\t\t}\n\t\tif (this.options.useRecycle && !this.isProcessing()) {\n\t\t\tthis._infinite.recycle(this._watcher.getScrollPos(), isAppend);\n\t\t}\n\t\treturn this;\n\t}\n\t/**\n\t * Retrieves the item via index or the element.\n\t * @ko index 또는 element를 통해 아이템을 가져온다.\n\t * @param {number | HTMLElement} [groupIndex=0] The element corresponding to item or the index of the group where the item is in position <ko> item에 해당하는 element 또는 해당 item이 있는 group의 index</ko>\n\t * @param {number} [itemIndex] If groupIndex is used, the index of the item in the group <ko> groupIndex를 사용할 경우 해당 group에 있는 Item의 index </ko>\n\t * @return The item containing the content, size and position,etc<ko>content, size, position 등이 담겨있는 item 정보</ko>\n\t * @example\n\n\t ig.getItem(0, 0);\n\t ig.getItem(element);\n\n\t {\n\t  el: HTMLElement,\n\t  content: \"<div>...</div>\",\n\t  size: {width: ..., height: ...},\n\t  rect: {top: ..., left: ..., width: ..., height: ...},\n\t }\n\t */\n\tpublic getItem(groupIndex = 0, itemIndex?: number): IInfiniteGridItem {\n\t\tif (itemIndex == null && typeof groupIndex === \"object\") {\n\t\t\tif (!groupIndex) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\tconst items = this.getItems();\n\t\t\tconst length = items.length;\n\n\t\t\tfor (let i = 0; i < length; ++i) {\n\t\t\t\tif (items[i].el === groupIndex) {\n\t\t\t\t\treturn items[i];\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn undefined;\n\t\t} else {\n\t\t\tconst group = this._items.getData(groupIndex);\n\n\t\t\treturn group && group.items[itemIndex || 0];\n\t\t}\n\t}\n\t/**\n\t * Updates the item via index or the element.\n\t * @ko index 또는 element를 통해 아이템을 업데이트한다.\n\t * @param {number | HTMLElement} [groupIndex=0] The element corresponding to item or the index of the group where the item is in position <ko> item에 해당하는 element 또는 해당 item이 있는 group의 index</ko>\n\t * @param {number} [itemIndex] If groupIndex is used, the index of the item in the group <ko> groupIndex를 사용할 경우 해당 group에 있는 Item의 index </ko>\n\t * @return {eg.InfiniteGrid} An instance of a module itself<ko>모듈 자신의 인스턴스</ko>\n\t * @example\n\telement.innerHTML = \"2\";\n\telement.style.height = \"400px\";\n\tig.updateItem(element);\n\tig.updateItem(0, 0);\n\t */\n\tpublic updateItem(groupIndex?: number, itemIndex?: number) {\n\t\tconst item = this.getItem(groupIndex, itemIndex);\n\n\t\tthis._updateItem(item) && this.layout(false);\n\n\t\treturn this;\n\t}\n\t/**\n\t * Update the currently displayed items.\n\t * @ko 현재보여주는 아이템들을 업데이트한다.\n\t * @return {eg.InfiniteGrid} An instance of a module itself<ko>모듈 자신의 인스턴스</ko>\n\t * @example\n\telement.innerHTML = \"2\";\n\telement.style.height = \"400px\";\n\n\telement2.innerHTML = \"2\";\n\telement2.style.height = \"400px\";\n\n\tig.updateItems();\n\t */\n\tpublic updateItems() {\n\t\tthis.getItems().forEach(item => {\n\t\t\tthis._updateItem(item);\n\t\t});\n\t\tthis.layout(false);\n\t\treturn this;\n\t}\n\t/**\n\t * Move to some group or item position.\n\t * @ko 해당하는 그룹 또는 아이템의 위치로 이동한다.\n\t * @param {Number} [index] group's index <ko> 그룹의 index</ko>\n\t * @param {Number} [itemIndex=-1] item's index <ko> 그룹의 index</ko>\n\t * @return {eg.InfiniteGrid} An instance of a module itself<ko>모듈 자신의 인스턴스</ko>\n\t */\n\tpublic moveTo(index?: number, itemIndex = 0) {\n\t\tif (this.isProcessing()) {\n\t\t\treturn this;\n\t\t}\n\t\tconst data = this._items.getData(index);\n\n\t\tif (!data) {\n\t\t\treturn this;\n\t\t}\n\t\tconst infinite = this._infinite;\n\t\tconst outlines = data.outlines;\n\t\tconst items = data.items;\n\t\tconst item = items[itemIndex];\n\t\tconst isResize = outlines.start && (outlines.start.length === 0);\n\t\tconst startCursor = infinite.getCursor(\"start\");\n\t\tconst endCursor = infinite.getCursor(\"end\");\n\t\tconst isInCursor = startCursor <= index && index <= endCursor;\n\t\tconst { useRecycle, horizontal } = this.options;\n\n\t\tif (isInCursor || !useRecycle || !isResize) {\n\t\t\tlet pos = item ? item.rect[horizontal ? \"left\" : \"top\"] : Math.max(...outlines.start);\n\t\t\tconst fit = Math.min(...outlines.start);\n\n\t\t\tif (fit < 0) {\n\t\t\t\t// base < 0\n\t\t\t\tthis._fitItems(fit, 0);\n\t\t\t\tpos -= fit;\n\t\t\t}\n\t\t\tconst isAppend = index > startCursor;\n\n\t\t\tif (isInCursor || isAppend) {\n\t\t\t\tthis._scrollTo(pos);\n\t\t\t\treturn this;\n\t\t\t}\n\t\t\tthis._postLayout({\n\t\t\t\tfromCache: true,\n\t\t\t\tgroups: [data],\n\t\t\t\titems,\n\t\t\t\tnewItems: [],\n\t\t\t\tisAppend,\n\t\t\t\tisTrusted: false,\n\t\t\t\tmoveCache: true,\n\t\t\t\tmoveItem: itemIndex,\n\t\t\t});\n\t\t\treturn this;\n\t\t} else {\n\t\t\tconst isAppend = index > endCursor || index < startCursor - 1;\n\n\t\t\tthis._postCache({\n\t\t\t\tisAppend,\n\t\t\t\tcache: [data],\n\t\t\t\tisTrusted: false,\n\t\t\t\tmoveItem: itemIndex,\n\t\t\t});\n\t\t}\n\t\treturn this;\n\t}\n\t/**\n   * Destroys elements, properties, and events used on a grid layout.\n   * @ko 그리드 레이아웃에 사용한 엘리먼트와 속성, 이벤트를 해제한다\n   */\n\tpublic destroy() {\n\t\tthis._infinite.clear();\n\t\tthis._watcher.destroy();\n\t\tthis._manager.destroy();\n\t\tthis._reset();\n\t\tthis._items.clear();\n\t\tthis._renderer.destroy();\n\t}\n\tprivate _setContainerSize(size: number) {\n\t\tthis._renderer.setContainerSize(Math.max(this._items.getMaxEdgeValue(), size));\n\t}\n\tprivate _appendLoadingBar() {\n\t\tconst loadingBar = this._loadingBar;\n\t\tconst container = this._renderer.container;\n\n\t\tfor (const type in loadingBar) {\n\t\t\tcontainer.appendChild(loadingBar[type as \"append\" | \"prepend\"]);\n\t\t}\n\t}\n\tprivate _setSize(size: number) {\n\t\tthis._infinite.setSize(this._renderer.getViewSize());\n\t\tthis._manager.setSize(size);\n\t}\n\tprivate _fitItems(base: number, margin = 0) {\n\t\tbase > 0 && this._watcher.scrollBy(-base);\n\t\tthis._items.fit(base, this.options.horizontal);\n\t\tDOMRenderer.renderItems(this.getItems());\n\t\tthis._setContainerSize(this._getEdgeValue(\"end\") || margin);\n\t\tbase < 0 && this._watcher.scrollBy(-base);\n\t}\n\t// called by visible\n\tprivate _fit(useFit = this.options.useFit) {\n\t\tlet base = this._getEdgeValue(\"start\");\n\t\tconst margin = (this._getLoadingStatus() === LOADING_PREPEND && this._status.loadingSize) || 0;\n\t\tconst { isConstantSize, isEqualSize, useRecycle } = this.options;\n\n\t\tif (!useRecycle || !useFit || isConstantSize || isEqualSize) {\n\t\t\tif (base < margin) {\n\t\t\t\tthis._fitItems(base - margin, margin);\n\t\t\t}\n\t\t\tbase = 0;\n\t\t} else if (base !== 0 || margin) {\n\t\t\tthis._fitItems(base - margin, margin);\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t\tthis._isLoading() && this._renderLoading();\n\t\treturn base;\n\t}\n\tprivate _getEdgeValue(cursor: CursorType) {\n\t\treturn this._infinite.getEdgeValue(cursor);\n\t}\n\tprivate _isProcessing() {\n\t\treturn (this._status.processingStatus & PROCESSING) > 0;\n\t}\n\tprivate _isLoading() {\n\t\treturn this._getLoadingStatus() > 0;\n\t}\n\tprivate _getLoadingStatus() {\n\t\treturn this._status.processingStatus & (LOADING_APPEND | LOADING_PREPEND);\n\t}\n\tprivate _process(status: number, isAdd = true) {\n\t\tif (isAdd) {\n\t\t\tthis._status.processingStatus |= status;\n\t\t} else {\n\t\t\tthis._status.processingStatus -= this._status.processingStatus & status;\n\t\t}\n\t}\n\tprivate _insert({\n\t\telements,\n\t\tisAppend,\n\t\tisChildren,\n\t\tgroupKey = new Date().getTime() + Math.floor(Math.random() * 1000),\n\t}: {\n\t\telements: string | string[] | HTMLElement[] | IJQuery,\n\t\tisAppend?: boolean,\n\t\tisChildren?: boolean,\n\t\tgroupKey?: string | number,\n\t}) {\n\t\tif (this._isProcessing() || elements.length === 0) {\n\t\t\treturn;\n\t\t}\n\t\tconst items = ItemManager.from(elements, this.options.itemSelector, {\n\t\t\tgroupKey,\n\t\t});\n\n\t\tif (!items.length) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst group: IInfiniteGridGroup = {\n\t\t\tgroupKey,\n\t\t\titems,\n\t\t\toutlines: { start: [], end: [] },\n\t\t};\n\t\tconst method = isAppend ? \"append\" : \"prepend\";\n\n\t\tthis._items[method](group);\n\n\t\tif (!isAppend) {\n\t\t\tconst infinite = this._infinite;\n\t\t\tconst startCursor = infinite.getCursor(\"start\");\n\t\t\tconst endCursor = infinite.getCursor(\"end\");\n\n\t\t\tinfinite.setCursor(\"start\", startCursor + 1);\n\t\t\tinfinite.setCursor(\"end\", endCursor + 1);\n\t\t}\n\t\tthis._postLayout({\n\t\t\tfromCache: NO_CACHE,\n\t\t\tgroups: [group],\n\t\t\titems,\n\t\t\tnewItems: items,\n\t\t\tisAppend,\n\t\t\tisChildren,\n\t\t\tisTrusted: NO_TRUSTED,\n\t\t});\n\t}\n\t// add items, and remove items for recycling\n\tprivate _recycle({ start, end }: { start: number, end: number }) {\n\t\tif (!this.options.useRecycle) {\n\t\t\treturn;\n\t\t}\n\t\tDOMRenderer.removeItems(this._items.pluck(\"items\", start, end));\n\t}\n\tprivate _renderLoading(userStyle = this._status.loadingStyle) {\n\t\tif (!this._isLoading()) {\n\t\t\treturn;\n\t\t}\n\t\tconst isAppend = this._getLoadingStatus() === LOADING_APPEND;\n\t\tconst el = this._loadingBar[isAppend ? \"append\" : \"prepend\"];\n\n\t\tif (!el) {\n\t\t\treturn;\n\t\t}\n\t\tconst style = assign({\n\t\t\tposition: \"absolute\",\n\t\t}, userStyle);\n\n\t\tfor (const property in style) {\n\t\t\tel.style[property as keyof StyleType] = style[property as keyof StyleType];\n\t\t}\n\t\tthis._status.loadingSize = this.options.horizontal ? outerWidth(el) : outerHeight(el);\n\t\tconst posName = this.options.horizontal ? \"left\" : \"top\";\n\n\t\tif (!(posName in style)) {\n\t\t\tconst pos = isAppend ? this._getEdgeValue(\"end\") : this._getEdgeValue(\"start\") - this._status.loadingSize;\n\n\t\t\tel.style[posName] = `${pos}px`;\n\t\t}\n\t}\n\tprivate _updateItem(item: IInfiniteGridItem) {\n\t\tif (item && item.el) {\n\t\t\titem.content = item.el.outerHTML;\n\n\t\t\t!this.options.isEqualSize && resetSize(item);\n\t\t\tthis._renderer.updateSize([item]);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\tprivate _setScrollPos(pos: number) {\n\t\tthis._watcher.setScrollPos(this._watcher.getContainerOffset() + pos);\n\t}\n\tprivate _scrollTo(pos: number) {\n\t\tthis._watcher.scrollTo(this._watcher.getContainerOffset() + pos);\n\t}\n\tprivate _onImageError(e: IErrorCallbackOptions) {\n\t\t/**\n\t\t * This event is fired when an error occurs in the image.\n\t\t * @ko 이미지 로드에 에러가 날 때 발생하는 이벤트.\n\t\t * @event eg.InfiniteGrid#imageError\n\t\t * @param {eg.InfiniteGrid.IErrorCallbackOptions} e The object of data to be sent to an event <ko>이벤트에 전달되는 데이터 객체</ko>\n\t\t * @example\n\tig.on(\"imageError\", e => {\n\t  e.remove();\n\t  e.removeItem();\n\t  e.replace(\"http://...jpg\");\n\t  e.replace(imageElement);\n\t  e.replaceItem(\"item html\");\n\t});\n\t\t */\n\t\tthis.trigger(\"imageError\", assign(e, { element: e.item.el }));\n\t}\n\tprivate _postCache({\n\t\tcache,\n\t\tisAppend,\n\t\tisTrusted = true,\n\t\tmoveItem = -1,\n\t}: {\n\t\tcache: IInfiniteGridGroup[],\n\t\tisAppend?: boolean,\n\t\tisTrusted?: boolean,\n\t\tmoveItem?: number,\n\t}) {\n\t\tconst { isConstantSize } = this.options;\n\t\tconst items = ItemManager.pluck(cache, \"items\");\n\t\tlet fromCache = true;\n\t\tconst newItems = items.filter(item => {\n\t\t\tif (!item.orgSize) {\n\t\t\t\tfromCache = false;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn !isConstantSize && item.rect.top < DUMMY_POSITION / 10;\n\t\t});\n\n\t\tthis._postLayout({\n\t\t\tfromCache,\n\t\t\tgroups: cache,\n\t\t\titems,\n\t\t\tnewItems,\n\t\t\tisAppend,\n\t\t\tisTrusted,\n\t\t\tmoveItem,\n\t\t});\n\t}\n\tprivate _postLayout({\n\t\tfromCache,\n\t\tgroups,\n\t\titems = ItemManager.pluck(groups, \"items\"),\n\t\tnewItems,\n\t\tisAppend,\n\t\tisChildren,\n\t\tisTrusted,\n\t\tmoveCache,\n\t\tmoveItem = -2,\n\t}: {\n\t\tfromCache: boolean,\n\t\tgroups: IInfiniteGridGroup[],\n\t\titems: IInfiniteGridItem[],\n\t\tnewItems?: IInfiniteGridItem[],\n\t\tisAppend: boolean,\n\t\tisChildren?: boolean,\n\t\tisTrusted?: boolean,\n\t\tmoveCache?: boolean,\n\t\tmoveItem?: number,\n\t}) {\n\t\tthis._process(PROCESSING);\n\t\tconst method = isAppend ? \"append\" : \"prepend\";\n\t\tconst itemManager = this._items;\n\t\tconst horizontal = this.options.horizontal;\n\n\t\t// If container has children, it does not render first.\n\t\tif (!isChildren) {\n\t\t\tDOMRenderer.createElements(items);\n\t\t\tthis._renderer[method](items);\n\t\t}\n\t\tthis._manager[method]({\n\t\t\tgroups,\n\t\t\titems: newItems,\n\t\t}, {\n\t\t\t\tcomplete: () => {\n\t\t\t\t\tconst infinite = this._infinite;\n\t\t\t\t\tconst startCursor = Math.max(infinite.getCursor(\"start\"), 0);\n\t\t\t\t\tconst endCursor = Math.max(infinite.getCursor(\"end\"), 0);\n\t\t\t\t\tlet requestStartCursor = itemManager.indexOf(groups[0].groupKey);\n\t\t\t\t\tlet requestEndCursor = itemManager.indexOf(groups[groups.length - 1].groupKey);\n\t\t\t\t\tlet isInCursor = true;\n\n\t\t\t\t\tif (requestStartCursor > endCursor + 1 || requestEndCursor < startCursor - 1) {\n\t\t\t\t\t\tisInCursor = false;\n\t\t\t\t\t}\n\t\t\t\t\tif (isInCursor) {\n\t\t\t\t\t\tif (isAppend) {\n\t\t\t\t\t\t\trequestStartCursor = startCursor;\n\t\t\t\t\t\t\trequestEndCursor = Math.max(endCursor, requestEndCursor);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\trequestStartCursor = Math.max(Math.min(startCursor, requestStartCursor), 0);\n\t\t\t\t\t\t\trequestEndCursor = endCursor;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t!isInCursor && this._recycle({ start: startCursor, end: endCursor });\n\t\t\t\t\tinfinite.setCursor(\"start\", requestStartCursor);\n\t\t\t\t\tinfinite.setCursor(\"end\", requestEndCursor);\n\n\t\t\t\t\tif (moveItem > -1) {\n\t\t\t\t\t\tconst pos = items[moveItem].rect[horizontal ? \"left\" : \"top\"];\n\n\t\t\t\t\t\tif (!isInCursor && !moveCache) {\n\t\t\t\t\t\t\titemManager.clearOutlines(requestStartCursor, requestEndCursor);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis._scrollTo(pos);\n\t\t\t\t\t\tthis._setScrollPos(pos);\n\t\t\t\t\t}\n\t\t\t\t\tthis._onLayoutComplete({\n\t\t\t\t\t\titems,\n\t\t\t\t\t\tisAppend,\n\t\t\t\t\t\tfromCache,\n\t\t\t\t\t\tisTrusted,\n\t\t\t\t\t\tuseRecycle: false,\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t\terror: e => this._onImageError(e),\n\t\t\t\tend: ({ remove, layout }) => {\n\t\t\t\t\tremove.forEach(el => this.remove(el, false));\n\t\t\t\t\tif (layout) {\n\t\t\t\t\t\tthis.layout(false);\n\t\t\t\t\t} else if (!this.isProcessing() && this.options.useRecycle) {\n\t\t\t\t\t\tconst watcher = this._watcher;\n\t\t\t\t\t\tconst scrollPos = watcher.getScrollPos();\n\n\t\t\t\t\t\tthis._infinite.recycle(scrollPos, isAppend);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t});\n\t\treturn this;\n\t}\n\t// called by visible\n\tprivate _requestAppend({ cache }: { cache?: IInfiniteGridGroup[] }) {\n\t\tif (this._isProcessing()) {\n\t\t\treturn;\n\t\t}\n\t\tif (cache && cache.length) {\n\t\t\tthis._postCache({ cache, isAppend: APPEND });\n\t\t} else {\n\t\t\t/**\n\t\t\t * This event is fired when a card element must be added at the bottom or right of a layout because there is no card to be displayed on screen when a user scrolls near bottom or right.\n\t\t\t * @ko 카드 엘리먼트가 레이아웃의 아래나 오른쪽에 추가돼야 할 때 발생하는 이벤트. 사용자가 아래나 오른쪽으로 스크롤해서 화면에 표시될 카드가 없을 때 발생한다\n\t\t\t * @event eg.InfiniteGrid#append\n\t\t\t * @param {Object} param The object of data to be sent to an event <ko>이벤트에 전달되는 데이터 객체</ko>\n\t\t\t * @param {String|Number} groupKey The group key of the first group visible on the screen <ko>화면에 보여지는 마지막 그룹의 그룹키</ko>\n\t\t\t * @param {Boolean} param.isTrusted Returns true if an event was generated by the user action, or false if it was caused by a script or API call <ko>사용자의 액션에 의해 이벤트가 발생하였으면 true, 스크립트나 API호출에 의해 발생하였을 경우에는 false를 반환한다.</ko>\n\t\t\t * @param {Function} param.startLoading Start loading for append loading data. <ko> 뒷쪽에 추가되는 데이터 로딩을 시작한다. </ko>\n\t\t\t * @param {Object} param.startLoading.userStyle The custom style to apply to this loading bar for start. <ko> 로딩을 시작할 때 로딩 바에 적용될 사용자 스타일 </ko>\n\t\t\t * @param {Function} param.endLoading End loading after startLoading() for append/prepend loading data. <ko>데이터 로딩을 위해 append/prepend startLoading() 호출 이후 로딩을 끝낸다.</ko>\n\t\t\t * @param {Object} param.endLoading.userStyle The custom style to apply to this loading bar for start. <ko> 로딩이 끝날 때 로딩 바에 적용될 사용자 스타일 </ko>\n\t\t\t */\n\t\t\tthis.trigger(\"append\", {\n\t\t\t\tisTrusted: TRUSTED,\n\t\t\t\tgroupKey: this.getGroupKeys().pop() || \"\",\n\t\t\t\tstartLoading: (userStyle: StyleType) => {\n\t\t\t\t\tthis.startLoading(true, userStyle);\n\t\t\t\t},\n\t\t\t\tendLoading: (userStyle: StyleType) => {\n\t\t\t\t\tthis.endLoading(userStyle);\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\t}\n\t// called by visible\n\tprivate _requestPrepend({ cache }: { cache?: IInfiniteGridGroup[] }) {\n\t\tthis._fit(this.options.useFit || !cache.length);\n\t\tif (this._isProcessing()) {\n\t\t\treturn;\n\t\t}\n\t\tif (cache && cache.length) {\n\t\t\tthis._postCache({ cache, isAppend: PREPEND });\n\t\t} else {\n\t\t\t/**\n\t\t\t * This event is fired when a card element must be added at the top or left of a layout because there is no card to be displayed on screen when a user scrolls near top or left.\n\t\t\t * @ko 카드가 레이아웃의 위나 왼쪽에 추가돼야 할 때 발생하는 이벤트. 사용자가 위나 왼쪽으로 스크롤해서 화면에 표시될 카드가 없을 때 발생한다.\n\t\t\t * @event eg.InfiniteGrid#prepend\n\t\t\t * @param {Object} param The object of data to be sent to an event <ko>이벤트에 전달되는 데이터 객체</ko>\n\t\t\t * @param {String|Number} groupKey The group key of the first group visible on the screen <ko>화면에 보여지는 첫번째 그룹의 그룹키</ko>\n\t\t\t * @param {Boolean} param.isTrusted Returns true if an event was generated by the user action, or false if it was caused by a script or API call <ko>사용자의 액션에 의해 이벤트가 발생하였으면 true, 스크립트나 API호출에 의해 발생하였을 경우에는 false를 반환한다.</ko>\n\t\t\t * @param {Function} param.startLoading Start loading for prepend loading data. <ko> 앞쪽에 추가되는 데이터 로딩을 시작한다. </ko>\n\t\t\t * @param {Object} param.startLoading.userStyle The custom style to apply to this loading bar for start. <ko> 로딩을 시작할 때 로딩 바에 적용될 사용자 스타일 </ko>\n\t\t\t * @param {Function} param.endLoading End loading after startLoading() for append/prepend loading data. <ko>데이터 로딩을 위해 append/prepend startLoading() 호출 이후 로딩을 끝낸다.</ko>\n\t\t\t * @param {Object} param.endLoading.userStyle The custom style to apply to this loading bar for start. <ko> 로딩이 끝날 때 로딩 바에 적용될 사용자 스타일 </ko>\n\t\t\t */\n\t\t\tthis.trigger(\"prepend\", {\n\t\t\t\tisTrusted: TRUSTED,\n\t\t\t\tgroupKey: this.getGroupKeys().shift(),\n\t\t\t\tstartLoading: (userStyle: StyleType) => {\n\t\t\t\t\tthis.startLoading(false, userStyle);\n\t\t\t\t},\n\t\t\t\tendLoading: (userStyle: StyleType) => {\n\t\t\t\t\tthis.endLoading(userStyle);\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\t}\n\tprivate _onResize() {\n\t\tthis.layout(true);\n\t}\n\tprivate _onCheck({\n\t\tisForward,\n\t\tscrollPos,\n\t\thorizontal,\n\t\torgScrollPos,\n\t}: {\n\t\tisForward: boolean,\n\t\tscrollPos: number,\n\t\thorizontal: boolean,\n\t\torgScrollPos: number,\n\t}) {\n\t\t/**\n\t\t * This event is fired when the user scrolls.\n\t\t * @ko 사용자가 스크롤 할 경우 발생하는 이벤트.\n\t\t * @event eg.InfiniteGrid#change\n\t\t * @param {Object} param The object of data to be sent to an event <ko>이벤트에 전달되는 데이터 객체</ko>\n\t\t * @param {Boolean} param.isForward Indicates whether the scroll progression direction is forward or backword. <ko>스크롤 진행방향이 앞쪽으로 진행하는 지, 뒤쪽으로 진행하는지를 나타낸다.</ko>\n\t\t * @param {Number} param.scrollPos Current scroll position value relative to the infiniteGrid container element. <ko>infiniteGrid 컨테이너 엘리먼트 기준의 현재 스크롤 위치값</ko>\n\t\t * @param {Boolean} param.orgScrollPos Current position of the scroll <ko>현재 스크롤 위치값</ko>\n\t\t * @param {Boolean} param.isTrusted Returns true if an event was generated by the user action, or false if it was caused by a script or API call <ko>사용자의 액션에 의해 이벤트가 발생하였으면 true, 스크립트나 API호출에 의해 발생하였을 경우에는 false를 반환한다.</ko>\n\t\t * @param {Boolean} options.horizontal Direction of the scroll movement (true: horizontal, false: vertical) <ko>스크롤 이동 방향 (true 가로방향, false 세로방향</ko>\n\t\t */\n\t\tthis.trigger(\"change\", {\n\t\t\tisForward,\n\t\t\thorizontal,\n\t\t\tscrollPos,\n\t\t\torgScrollPos,\n\t\t});\n\t\tthis._infinite.scroll(scrollPos);\n\t}\n\tprivate _onLayoutComplete({\n\t\titems,\n\t\tisAppend,\n\t\tisTrusted = false,\n\t\tuseRecycle = this.options.useRecycle,\n\t\tfromCache = false,\n\t\tisLayout = false,\n\t}: {\n\t\titems: IInfiniteGridItem[],\n\t\tisAppend: boolean,\n\t\tisTrusted: boolean,\n\t\tuseRecycle: boolean,\n\t\tfromCache: boolean,\n\t\tisLayout?: boolean,\n\t}) {\n\t\tconst viewSize = this._renderer.getViewSize();\n\n\t\tif (!isAppend) {\n\t\t\tthis._fit();\n\t\t} else {\n\t\t\tthis._isLoading() && this._renderLoading();\n\t\t}\n\n\t\tconst watcher = this._watcher;\n\t\tconst scrollPos = watcher.getScrollPos();\n\n\t\t// recycle after _fit beacause prepend and append are occured simultaneously by scroll.\n\t\tif (!isLayout && useRecycle && !this._isLoading()) {\n\t\t\tthis._infinite.recycle(scrollPos, isAppend);\n\t\t}\n\n\t\tconst size = this._getEdgeValue(\"end\");\n\n\t\tif (isAppend) {\n\t\t\tthis._setContainerSize(size + this._status.loadingSize || 0);\n\t\t\tif (scrollPos > 0) {\n\t\t\t\t!IS_IOS && this._scrollTo(scrollPos);\n\t\t\t}\n\t\t}\n\t\t!isLayout && this._process(PROCESSING, false);\n\n\t\t/**\n\t\t * This event is fired when layout is successfully arranged through a call to the append(), prepend(), or layout() method.\n\t\t * @ko 레이아웃 배치가 완료됐을 때 발생하는 이벤트. append() 메서드나 prepend() 메서드, layout() 메서드 호출 후 카드의 배치가 완료됐을 때 발생한다\n\t\t * @event eg.InfiniteGrid#layoutComplete\n\t\t *\n\t\t * @param {Object} param The object of data to be sent to an event <ko>이벤트에 전달되는 데이터 객체</ko>\n\t\t * @param {Array} param.target Rearranged card elements<ko>재배치된 카드 엘리먼트들</ko>\n\t\t * @param {Boolean} param.fromCache Check whether these items are cache or not <ko>해당 아이템들이 캐시인지 아닌지 확인한다.</ko>\n\t\t * @param {Boolean} param.isLayout Returns true if this is an event called by resize event or layout method. Returns false if this is an event called by adding an item. <ko>해당 이벤트가 리사이즈 이벤트 또는 layout() 메서드를 통해 호출됐으면 true, 아이템 추가로 호출됐으면 false를 반환한다.</ko>\n\t\t * @param {Boolean} param.isAppend Checks whether the append() method is used to add a card element. It returns true even though the layoutComplete event is fired after the layout() method is called. <ko>카드 엘리먼트가 append() 메서드로 추가됐는지 확인한다. layout() 메서드가 호출된 후 layoutComplete 이벤트가 발생해도 'true'를 반환한다.</ko>\n\t\t * @param {Boolean} param.isScroll Checks whether scrolling has occurred after the append(), prepend(), ..., etc method is called <ko>append, prend 등 호출 후 스크롤이 생겼는지 확인한다.</ko>\n\t\t * @param {Number} param.scrollPos Current scroll position value relative to the infiniteGrid container element. <ko>infiniteGrid 컨테이너 엘리먼트 기준의 현재 스크롤 위치값</ko>\n\t\t * @param {Number} param.orgScrollPos Current position of the scroll <ko>현재 스크롤 위치값</ko>\n\t\t * @param {Number} param.size The size of container element <ko>컨테이너 엘리먼트의 크기</ko>\n\t\t * @param {Boolean} param.isTrusted Returns true if an event was generated by the user action, or false if it was caused by a script or API call <ko>사용자의 액션에 의해 이벤트가 발생하였으면 true, 스크립트나 API호출에 의해 발생하였을 경우에는 false를 반환한다.</ko>\n\t\t * @param {Function} param.endLoading End loading after startLoading() for append/prepend loading data. <ko>데이터 로딩을 위해 append/prepend startLoading() 호출 이후 로딩을 끝낸다.</ko>\n\t\t * @param {Object} param.endLoading.userStyle The custom style to apply to this loading bar for start. <ko> 로딩이 끝날 때 로딩 바에 적용될 사용자 스타일 </ko>\n\t\t */\n\t\tthis.trigger(\"layoutComplete\", {\n\t\t\ttarget: items.concat(),\n\t\t\tisAppend,\n\t\t\tisTrusted,\n\t\t\tfromCache,\n\t\t\tisLayout,\n\t\t\tisScroll: viewSize < watcher.getContainerOffset() + size,\n\t\t\tscrollPos,\n\t\t\torgScrollPos: watcher.getOrgScrollPos(),\n\t\t\tsize,\n\t\t\tendLoading: (userStyle: StyleType) => {\n\t\t\t\tthis.endLoading(userStyle);\n\t\t\t},\n\t\t});\n\t\tthis._infinite.scroll(scrollPos);\n\t}\n\tprivate _reset() {\n\t\tthis._status = {\n\t\t\tprocessingStatus: IDLE,\n\t\t\tloadingSize: 0,\n\t\t\tloadingStyle: {},\n\t\t};\n\t}\n}\n\nexport default InfiniteGrid;\n","import { ALIGN, APPEND, PREPEND } from \"../consts\";\nimport { getStyleNames, assignOptions, fill, cloneItems } from \"../utils\";\nimport { ILayout, IAlign, IRectlProperties, IInfiniteGridItem, IInfiniteGridGroup } from \"../types\";\n\n// ALIGN\nconst { START, CENTER, END, JUSTIFY } = ALIGN;\n\n/**\n * @classdesc The GridLayout is a layout that stacks cards with the same width as a stack of bricks. Adjust the width of all images to the same size, find the lowest height column, and insert a new card.\n * @ko GridLayout는 벽돌을 쌓아 올린 모양처럼 동일한 너비를 가진 카드를 쌓는 레이아웃이다. 모든 이미지의 너비를 동일한 크기로 조정하고, 가장 높이가 낮은 열을 찾아 새로운 이미지를 삽입한다. 따라서 배치된 카드 사이에 빈 공간이 생기지는 않지만 배치된 레이아웃의 아래쪽은 울퉁불퉁해진다.\n * @class eg.InfiniteGrid.GridLayout\n * @param {Object} [options] The option object of eg.InfiniteGrid.GridLayout module <ko>eg.InfiniteGrid.GridLayout 모듈의 옵션 객체</ko>\n * @param {String} [options.margin=0] Margin used to create space around items <ko>아이템들 사이의 공간</ko>\n * @param {Boolean} [options.horizontal=false] Direction of the scroll movement (false: vertical, true: horizontal) <ko>스크롤 이동 방향 (false: 세로방향, true: 가로방향)</ko>\n * @param {Boolean} [options.align=START] Align of the position of the items (START, CENTER, END, JUSTIFY) <ko>아이템들의 위치의 정렬 (START, CENTER, END, JUSTIFY)</ko>\n * @param {Boolean} [options.itemSize=0] The size of the items. If it is 0, it is calculated as the size of the first item in items. <ko> 아이템의 사이즈. 만약 아이템 사이즈가 0이면, 아이템들의 첫번째 아이템의 사이즈로 계산이 된다. </ko>\n * @example\n```\n<script>\nvar ig = new eg.InfiniteGrid(\"#grid\". {\n  horizontal: true,\n});\n\nig.setLayout(eg.InfiniteGrid.GridLayout, {\n  margin: 10,\n  align: \"start\",\n  itemSize: 200\n});\n\n// or\n\nvar layout = new eg.InfiniteGrid.GridLayout({\n  margin: 10,\n  align: \"center\",\n  itemSize: 200,\n  horizontal: true,\n});\n\n</script>\n```\n **/\nclass GridLayout implements ILayout {\n\tpublic options: {\n\t\thorizontal: boolean,\n\t\tmargin: number,\n\t\talign: IAlign[keyof IAlign],\n\t\titemSize: number,\n\t};\n\tprivate _size: number;\n\tprivate _columnSize: number;\n\tprivate _columnLength: number;\n\tprivate _style: IRectlProperties;\n\tconstructor(options: Partial<GridLayout[\"options\"]> = {}) {\n\t\tthis.options = assignOptions({\n\t\t\tmargin: 0,\n\t\t\thorizontal: false,\n\t\t\talign: START,\n\t\t\titemSize: 0,\n\t\t}, options);\n\t\tthis._size = 0;\n\t\tthis._columnSize = 0;\n\t\tthis._columnLength = 0;\n\t\tthis._style = getStyleNames(this.options.horizontal);\n\t}\n\t/**\n\t * Adds items at the bottom of a outline.\n\t * @ko 아이템들을 아웃라인 아래에 추가한다.\n\t * @method eg.InfiniteGrid.GridLayout#append\n\t * @param {Array} items Array of items to be layouted <ko>레이아웃할 아이템들의 배열</ko>\n\t * @param {Array} [outline=[]] Array of outline points to be reference points <ko>기준점이 되는 아웃라인 점들의 배열</ko>\n\t * @return {Object} Layouted items and outline of start and end <ko> 레이아웃이 된 아이템과 시작과 끝의 아웃라인이 담긴 정보</ko>\n\t * @example\n\t * layout.prepend(items, [100, 200, 300, 400]);\n\t */\n\tpublic append(items: IInfiniteGridItem[], outline?: number[], cache?: boolean) {\n\t\treturn this._insert(items, outline, APPEND, cache);\n\t}\n\t/**\n\t * Adds items at the top of a outline.\n\t * @ko 아이템을 아웃라인 위에 추가한다.\n\t * @method eg.InfiniteGrid.GridLayout#prepend\n\t * @param {Array} items Array of items to be layouted <ko>레이아웃할 아이템들의 배열</ko>\n\t * @param {Array} [outline=[]] Array of outline points to be reference points <ko>기준점이 되는 아웃라인 점들의 배열</ko>\n\t * @return {Object} Layouted items and outline of start and end <ko> 레이아웃이 된 아이템과 시작과 끝의 아웃라인이 담긴 정보</ko>\n\t * @example\n\t * layout.prepend(items, [100, 200, 300, 400]);\n\t */\n\tpublic prepend(items: IInfiniteGridItem[], outline?: number[], cache?: boolean) {\n\t\treturn this._insert(items, outline, PREPEND, cache);\n\t}\n\t/**\n\t * Adds items of groups at the bottom of a outline.\n\t * @ko 그룹들의 아이템들을 아웃라인 아래에 추가한다.\n\t * @method eg.InfiniteGrid.GridLayout#layout\n\t * @param {Array} groups Array of groups to be layouted <ko>레이아웃할 그룹들의 배열</ko>\n\t * @param {Array} outline Array of outline points to be reference points <ko>기준점이 되는 아웃라인 점들의 배열</ko>\n\t * @return {eg.InfiniteGrid.GridLayout} An instance of a module itself<ko>모듈 자신의 인스턴스</ko>\n\t * @example\n\t * layout.layout(groups, [100, 200, 300, 400]);\n\t */\n\tpublic layout(groups: IInfiniteGridGroup[] = [], outline: number[] = []) {\n\t\tconst firstItem = (groups.length && groups[0].items.length && groups[0].items[0]);\n\n\t\tthis.checkColumn(firstItem);\n\n\t\t// if outlines' length and columns' length are now same, re-caculate outlines.\n\t\tlet startOutline: number[];\n\n\t\tif (outline.length !== this._columnLength) {\n\t\t\tconst pos = outline.length === 0 ? 0 : Math.min(...outline);\n\n\t\t\t// re-layout items.\n\t\t\tstartOutline = fill(new Array(this._columnLength), pos);\n\t\t} else {\n\t\t\tstartOutline = outline.slice();\n\t\t}\n\t\tgroups.forEach(group => {\n\t\t\tconst items = group.items;\n\t\t\tconst result = this._layout(items, startOutline, APPEND);\n\n\t\t\tgroup.outlines = result;\n\t\t\tstartOutline = result.end;\n\t\t});\n\n\t\treturn this;\n\t}\n\t/**\n\t * Set the viewport size of the layout.\n\t * @ko 레이아웃의 가시 사이즈를 설정한다.\n\t * @method eg.InfiniteGrid.GridLayout#setSize\n\t * @param {Number} size The viewport size of container area where items are added to a layout <ko>레이아웃에 아이템을 추가하는 컨테이너 영역의 가시 사이즈</ko>\n\t * @return {eg.InfiniteGrid.GridLayout} An instance of a module itself<ko>모듈 자신의 인스턴스</ko>\n\t * @example\n\t * layout.setSize(800);\n\t */\n\tpublic setSize(size: number) {\n\t\tthis._size = size;\n\t\treturn this;\n\t}\n\tprivate checkColumn(item: IInfiniteGridItem) {\n\t\tconst { itemSize, margin, horizontal } = this.options;\n\t\tconst sizeName = horizontal ? \"height\" : \"width\";\n\t\tconst columnSize = Math.floor(itemSize || (item && item.size[sizeName]) || 0) || 0;\n\n\t\tthis._columnSize = columnSize;\n\t\tif (!columnSize) {\n\t\t\tthis._columnLength = 1;\n\t\t\treturn;\n\t\t}\n\t\tthis._columnLength = Math.max(Math.floor((this._size + margin) / (columnSize + margin)), 1);\n\t}\n\tprivate _layout(items: IInfiniteGridItem[], outline: number[], isAppend?: boolean) {\n\t\tconst length = items.length;\n\t\tconst margin = this.options.margin;\n\t\tconst align = this.options.align;\n\t\tconst style = this._style;\n\n\t\tconst size1Name = style.size1;\n\t\tconst size2Name = style.size2;\n\t\tconst pos1Name = style.startPos1;\n\t\tconst pos2Name = style.startPos2;\n\t\tconst columnSize = this._columnSize;\n\t\tconst columnLength = this._columnLength;\n\n\t\tconst size = this._size;\n\t\tconst viewDist = (size - (columnSize + margin) * columnLength + margin);\n\n\t\tconst pointCaculateName = isAppend ? \"min\" : \"max\";\n\t\tconst startOutline = outline.slice();\n\t\tconst endOutline = outline.slice();\n\n\t\tfor (let i = 0; i < length; ++i) {\n\t\t\tconst point = Math[pointCaculateName](...endOutline) || 0;\n\t\t\tlet index = endOutline.indexOf(point);\n\t\t\tconst item = items[isAppend ? i : length - 1 - i];\n\t\t\tconst size1 = item.size[size1Name];\n\t\t\tconst size2 = item.size[size2Name];\n\t\t\tconst pos1 = isAppend ? point : point - margin - size1;\n\t\t\tconst endPos1 = pos1 + size1 + margin;\n\n\t\t\tif (index === -1) {\n\t\t\t\tindex = 0;\n\t\t\t}\n\t\t\tlet pos2 = (columnSize + margin) * index;\n\n\t\t\t// ALIGN\n\t\t\tif (align === CENTER) {\n\t\t\t\tpos2 += viewDist / 2;\n\t\t\t} else if (align === END) {\n\t\t\t\tpos2 += viewDist + columnSize - size2;\n\t\t\t} else if (align === JUSTIFY) {\n\t\t\t\tif (columnLength <= 1) {\n\t\t\t\t\tpos2 += viewDist / 2;\n\t\t\t\t} else {\n\t\t\t\t\tpos2 = (size - columnSize) / (columnLength - 1) * index;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// tetris\n\t\t\titem.rect = {\n\t\t\t\t[pos1Name as \"top\"]: pos1,\n\t\t\t\t[pos2Name as \"left\"]: pos2,\n\t\t\t};\n\t\t\titem.column = index;\n\t\t\tendOutline[index] = isAppend ? endPos1 : pos1;\n\t\t}\n\t\tif (!isAppend) {\n\t\t\titems.sort((a, b) => {\n\t\t\t\tconst item1pos1 = a.rect[pos1Name];\n\t\t\t\tconst item1pos2 = a.rect[pos2Name];\n\t\t\t\tconst item2pos1 = b.rect[pos1Name];\n\t\t\t\tconst item2pos2 = b.rect[pos2Name];\n\n\t\t\t\tif (item1pos1 - item2pos1) {\n\t\t\t\t\treturn item1pos1 - item2pos1;\n\t\t\t\t}\n\t\t\t\treturn item1pos2 - item2pos2;\n\t\t\t});\n\t\t}\n\t\t// if append items, startOutline is low, endOutline is high\n\t\t// if prepend items, startOutline is high, endOutline is low\n\t\treturn {\n\t\t\tstart: isAppend ? startOutline : endOutline,\n\t\t\tend: isAppend ? endOutline : startOutline,\n\t\t};\n\t}\n\tprivate _insert(\n\t\titems: IInfiniteGridItem[] = [],\n\t\toutline: number[] = [],\n\t\tisAppend?: boolean,\n\t\tcache?: boolean,\n\t) {\n\t\tconst clone = cache ? items : cloneItems(items);\n\n\t\tlet startOutline = outline;\n\n\t\tif (!this._columnLength) {\n\t\t\tthis.checkColumn(items[0]);\n\t\t}\n\t\tif (outline.length !== this._columnLength) {\n\t\t\tstartOutline = fill(new Array(this._columnLength), outline.length ? (Math[isAppend ? \"min\" : \"max\"](...outline) || 0) : 0);\n\t\t}\n\n\t\tconst result = this._layout(clone, startOutline, isAppend);\n\n\t\treturn {\n\t\t\titems: clone,\n\t\t\toutlines: result,\n\t\t};\n\t}\n}\n\nexport default GridLayout;\n","import { APPEND, PREPEND, DUMMY_POSITION } from \"../consts\";\nimport { getStyleNames, assignOptions, fill, cloneItems } from \"../utils\";\nimport { ILayout, IRectlProperties, ISize, IInfiniteGridGroup, IInfiniteGridItem } from \"../types\";\n\nexport type FrameType = number[][];\nexport interface IFrameShape {\n\tleft?: number;\n\ttop?: number;\n\ttype: any;\n\twidth: number;\n\theight: number;\n\tindex?: number;\n}\nexport interface IFrameLayoutInterface {\n\thorizontal: boolean;\n\tmargin: number;\n\tframe: FrameType;\n\tframeFill: boolean;\n\titemSize: number | ISize;\n\t[key: string]: any;\n}\n/*\nFrame\n[\n[1, 1, 1, 1, 1],\n[0, 0, 2, 2, 2],\n[0, 0, 2, 2, 2],\n[3, 4, 5, 5, 5],\n]\n*/\nfunction disableFrame(\n\tframe: FrameType,\n\ttype: number,\n\ttop: number,\n\tleft: number,\n\twidth: number,\n\theight: number,\n) {\n\tfor (let i = top; i < top + height; ++i) {\n\t\tfor (let j = left; j < left + width; ++j) {\n\t\t\tif (type !== frame[i][j]) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tframe[i][j] = 0;\n\t\t}\n\t}\n}\nfunction searchShapeInFrame(\n\tframe: FrameType,\n\ttype: number,\n\ttop: number,\n\tleft: number,\n\twidth: number,\n\theight: number,\n) {\n\tconst size: IFrameShape = {\n\t\tleft,\n\t\ttop,\n\t\ttype,\n\t\twidth: 1,\n\t\theight: 1,\n\t};\n\n\tfor (let i = left; i < width; ++i) {\n\t\tif (frame[top][i] === type) {\n\t\t\tsize.width = i - left + 1;\n\t\t\tcontinue;\n\t\t}\n\t\tbreak;\n\t}\n\tfor (let i = top; i < height; ++i) {\n\t\tif (frame[i][left] === type) {\n\t\t\tsize.height = i - top + 1;\n\t\t\tcontinue;\n\t\t}\n\t\tbreak;\n\t}\n\t// After finding the shape, it will not find again.\n\tdisableFrame(frame, type, top, left, size.width, size.height);\n\treturn size;\n}\nfunction getShapes(frame: FrameType) {\n\tconst height = frame.length;\n\tconst width = height ? frame[0].length : 0;\n\tconst shapes: IFrameShape[] = [];\n\n\tfor (let i = 0; i < height; ++i) {\n\t\tfor (let j = 0; j < width; ++j) {\n\t\t\tconst type = frame[i][j];\n\n\t\t\tif (!type) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t// Separate shapes with other numbers.\n\t\t\tshapes.push(searchShapeInFrame(frame, type, i, j, width, height));\n\t\t}\n\t}\n\tshapes.sort((a, b) => (a.type < b.type ? -1 : 1));\n\treturn {\n\t\tshapes,\n\t\twidth,\n\t\theight,\n\t};\n}\n/**\n * @classdesc FrameLayout is a layout that allows you to place cards in a given frame. It is a layout that corresponds to a level intermediate between the placement of the image directly by the designer and the layout using the algorithm.\n * @ko FrameLayout은 주어진 프레임에 맞춰 카드를 배치하는 레이아웃입니다. 디자이너가 직접 이미지를 배치하는 것과 알고리즘을 사용한 배치의 중간 정도 수준에 해당하는 레이아웃이다.\n * @class eg.InfiniteGrid.FrameLayout\n * @param {Object} [options] The option object of eg.InfiniteGrid.FrameLayout module <ko>eg.InfiniteGrid.FrameLayout 모듈의 옵션 객체</ko>\n * @param {String} [options.margin=0] Margin used to create space around items <ko>아이템들 사이의 공간</ko>\n * @param {Boolean} [options.horizontal=false] Direction of the scroll movement (false: vertical, true: horizontal) <ko>스크롤 이동 방향 (false: 세로방향, true: 가로방향)</ko>\n * @param {Boolean} [options.itemSize=0] The size of the items. If it is 0, it is calculated as the size of the first item in items. <ko> 아이템의 사이즈. 만약 아이템 사이즈가 0이면, 아이템들의 첫번째 아이템의 사이즈로 계산이 된다. </ko>\n * @param {Boolean} [options.frame=[]] The size of the items. If it is 0, it is calculated as the size of the first item in items. <ko> 아이템의 사이즈. 만약 아이템 사이즈가 0이면, 아이템들의 첫번째 아이템의 사이즈로 계산이 된다. </ko>\n * @param {Boolean} [options.frameFill=true] Make sure that the frame can be attached after the previous frame. <ko> 다음 프레임이 전 프레임에 이어 붙일 수 있는지 있는지 확인한다. </ko>\n * @example\n```\n<script>\nvar ig = new eg.InfiniteGrid(\"#grid\". {\n  horizontal: true,\n});\n\nig.setLayout(eg.InfiniteGrid.FrameLayout, {\n  margin: 10,\n  itemSize: 200,\n  frame: [\n    [1, 1, 1, 1, 1],\n    [0, 0, 2, 2, 2],\n    [0, 0, 2, 2, 2],\n    [3, 4, 5, 5, 5],\n  ],\n});\n\n// or\n\nvar layout = new eg.InfiniteGrid.FrameLayout({\n  margin: 10,\n  itemSize: 200,\n  horizontal: true,\n  frame: [\n    [1, 1, 1, 1, 1],\n    [0, 0, 2, 2, 2],\n    [0, 0, 2, 2, 2],\n    [3, 4, 5, 5, 5],\n  ],\n});\n\n</script>\n```\n **/\nclass FrameLayout implements ILayout {\n\tpublic options: IFrameLayoutInterface;\n\tprotected _itemSize: number | ISize;\n\tprotected _shapes: {\n\t\tshapes: IFrameShape[],\n\t\twidth?: number,\n\t\theight?: number,\n\t};\n\tprotected _size: number;\n\tprotected _style: IRectlProperties;\n\n\tconstructor(options: Partial<IFrameLayoutInterface> = {}) {\n\t\tthis.options = assignOptions({\n\t\t\tmargin: 0,\n\t\t\thorizontal: false,\n\t\t\titemSize: 0,\n\t\t\tframe: [],\n\t\t\tframeFill: true,\n\t\t}, options);\n\t\tconst frame = this.options.frame.map(row => row.slice());\n\n\t\tthis._itemSize = this.options.itemSize || 0;\n\t\t// divide frame into shapes.\n\t\tthis._shapes = getShapes(frame);\n\t\tthis._size = 0;\n\t\tthis._style = getStyleNames(this.options.horizontal);\n\t}\n\t/**\n\t * Adds items of groups at the bottom of a outline.\n\t * @ko 그룹들의 아이템들을 아웃라인 아래에 추가한다.\n\t * @method eg.InfiniteGrid.FrameLayout#layout\n\t * @param {Array} groups Array of groups to be layouted <ko>레이아웃할 그룹들의 배열</ko>\n\t * @param {Array} outline Array of outline points to be reference points <ko>기준점이 되는 아웃라인 점들의 배열</ko>\n\t * @return {eg.InfiniteGrid.FrameLayout} An instance of a module itself<ko>모듈 자신의 인스턴스</ko>\n\t * @example\n\t * layout.layout(groups, [100, 200, 300, 400]);\n\t */\n\tpublic layout(groups: IInfiniteGridGroup[] = [], outline: number[] = []) {\n\t\tconst length = groups.length;\n\t\tlet point = outline;\n\n\t\tfor (let i = 0; i < length; ++i) {\n\t\t\tconst group = groups[i];\n\t\t\tconst outlines = this._layout(group.items, point, APPEND);\n\n\t\t\tgroup.outlines = outlines;\n\t\t\tpoint = outlines.end;\n\t\t}\n\t\treturn this;\n\t}\n\t/**\n\t * Set the viewport size of the layout.\n\t * @ko 레이아웃의 가시 사이즈를 설정한다.\n\t * @method eg.InfiniteGrid.FrameLayout#setSize\n\t * @param {Number} size The viewport size of container area where items are added to a layout <ko>레이아웃에 아이템을 추가하는 컨테이너 영역의 가시 사이즈</ko>\n\t * @return {eg.InfiniteGrid.FrameLayout} An instance of a module itself<ko>모듈 자신의 인스턴스</ko>\n\t * @example\n\t * layout.setSize(800);\n\t */\n\tpublic setSize(size: number) {\n\t\tthis._size = size;\n\t\treturn this;\n\t}\n\t/**\n\t * Adds items at the bottom of a outline.\n\t * @ko 아이템들을 아웃라인 아래에 추가한다.\n\t * @method eg.InfiniteGrid.FrameLayout#append\n\t * @param {Array} items Array of items to be layouted <ko>레이아웃할 아이템들의 배열</ko>\n\t * @param {Array} [outline=[]] Array of outline points to be reference points <ko>기준점이 되는 아웃라인 점들의 배열</ko>\n\t * @return {Object} Layouted items and outline of start and end <ko> 레이아웃이 된 아이템과 시작과 끝의 아웃라인이 담긴 정보</ko>\n\t * @example\n\t * layout.prepend(items, [100]);\n\t */\n\tpublic append(items: IInfiniteGridItem[], outline?: number[], cache?: boolean) {\n\t\treturn this._insert(items, outline, APPEND, cache);\n\t}\n\t/**\n\t * Adds items at the top of a outline.\n\t * @ko 아이템을 아웃라인 위에 추가한다.\n\t * @method eg.InfiniteGrid.FrameLayout#prepend\n\t * @param {Array} items Array of items to be layouted <ko>레이아웃할 아이템들의 배열</ko>\n\t * @param {Array} [outline=[]] Array of outline points to be reference points <ko>기준점이 되는 아웃라인 점들의 배열</ko>\n\t * @return {Object} Layouted items and outline of start and end <ko> 레이아웃이 된 아이템과 시작과 끝의 아웃라인이 담긴 정보</ko>\n\t * @example\n\t * layout.prepend(items, [100]);\n\t */\n\tpublic prepend(items: IInfiniteGridItem[], outline?: number[], cache?: boolean) {\n\t\treturn this._insert(items, outline, PREPEND, cache);\n\t}\n\tprotected _getItemSize() {\n\t\tthis._checkItemSize();\n\n\t\treturn this._itemSize;\n\t}\n\tprotected _checkItemSize() {\n\t\tif (this.options.itemSize) {\n\t\t\tthis._itemSize = this.options.itemSize;\n\t\t\treturn;\n\t\t}\n\t\tconst style = this._style;\n\t\tconst size = style.size2;\n\t\tconst margin = this.options.margin;\n\n\t\t// if itemSize is not in options, caculate itemSize from size.\n\t\tthis._itemSize = (this._size + margin) / this._shapes[size] - margin;\n\t}\n\tprotected _layout(items: IInfiniteGridItem[], outline: number[] = [], isAppend?: boolean) {\n\t\tconst length = items.length;\n\t\tconst style = this._style;\n\t\tconst { margin, frameFill } = this.options;\n\t\tconst size1Name = style.size1;\n\t\tconst size2Name = style.size2;\n\t\tconst pos1Name = style.startPos1;\n\t\tconst pos2Name = style.startPos2;\n\t\tconst itemSize = this._getItemSize();\n\t\tconst isItemObject = typeof itemSize === \"object\";\n\t\tconst itemSize2 = isItemObject ? (itemSize as ISize)[size2Name] : itemSize as number;\n\t\tconst itemSize1 = isItemObject ? (itemSize as ISize)[size1Name] : itemSize as number;\n\t\tconst shapesSize = this._shapes[size2Name];\n\t\tconst shapes = this._shapes.shapes;\n\t\tconst shapesLength = shapes.length;\n\t\tconst startOutline = fill(new Array(shapesSize), DUMMY_POSITION);\n\t\tconst endOutline = fill(new Array(shapesSize), DUMMY_POSITION);\n\t\tlet dist = 0;\n\t\tlet end = 0;\n\n\t\tif (!shapesLength) {\n\t\t\treturn { start: outline, end: outline };\n\t\t}\n\t\tfor (let i = 0; i < length; i += shapesLength) {\n\t\t\tfor (let j = 0; j < shapesLength && i + j < length; ++j) {\n\t\t\t\tconst item = items[i + j];\n\t\t\t\tconst shape = shapes[j];\n\t\t\t\tconst shapePos1 = shape[pos1Name];\n\t\t\t\tconst shapePos2 = shape[pos2Name];\n\t\t\t\tconst shapeSize1 = shape[size1Name];\n\t\t\t\tconst shapeSize2 = shape[size2Name];\n\t\t\t\tconst pos1 = end - dist + shapePos1 * (itemSize1 + margin);\n\t\t\t\tconst pos2 = shapePos2 * (itemSize2 + margin);\n\t\t\t\tconst size1 = shapeSize1 * (itemSize1 + margin) - margin;\n\t\t\t\tconst size2 = shapeSize2 * (itemSize2 + margin) - margin;\n\n\t\t\t\tfor (let k = shapePos2; k < shapePos2 + shapeSize2 && k < shapesSize; ++k) {\n\t\t\t\t\tif (startOutline[k] === DUMMY_POSITION) {\n\t\t\t\t\t\tstartOutline[k] = pos1;\n\t\t\t\t\t}\n\t\t\t\t\tstartOutline[k] = Math.min(startOutline[k], pos1);\n\t\t\t\t\tendOutline[k] = Math.max(endOutline[k], pos1 + size1 + margin);\n\t\t\t\t}\n\t\t\t\titem.rect = {\n\t\t\t\t\t[pos1Name]: pos1,\n\t\t\t\t\t[pos2Name]: pos2,\n\t\t\t\t\t[size1Name]: size1,\n\t\t\t\t\t[size2Name]: size2,\n\t\t\t\t};\n\t\t\t}\n\t\t\tend = Math.max(...endOutline);\n\t\t\t// check dist once\n\t\t\tif (i !== 0) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t// find & fill empty block\n\t\t\tif (!frameFill) {\n\t\t\t\tdist = 0;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tdist = end;\n\n\t\t\tfor (let j = 0; j < shapesSize; ++j) {\n\t\t\t\tif (startOutline[j] === DUMMY_POSITION) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\t// the dist between frame's end outline and next frame's start outline\n\t\t\t\t// expect that next frame's start outline is startOutline[j] + end\n\t\t\t\tdist = Math.min(startOutline[j] + end - endOutline[j], dist);\n\t\t\t}\n\t\t}\n\t\tfor (let i = 0; i < shapesSize; ++i) {\n\t\t\tif (startOutline[i] !== DUMMY_POSITION) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tstartOutline[i] = Math.max(...startOutline);\n\t\t\tendOutline[i] = startOutline[i];\n\t\t}\n\t\t// The target outline is start outline when type is APPENDING\n\t\tconst targetOutline = isAppend ? startOutline : endOutline;\n\t\tconst prevOutlineEnd = outline.length === 0 ? 0 : Math[isAppend ? \"max\" : \"min\"](...outline);\n\t\tlet prevOutlineDist = isAppend ? 0 : end;\n\n\t\tif (frameFill && outline.length === shapesSize) {\n\t\t\tprevOutlineDist = -DUMMY_POSITION;\n\t\t\tfor (let i = 0; i < shapesSize; ++i) {\n\t\t\t\tif (startOutline[i] === endOutline[i]) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\t// if appending type is PREPEND, subtract dist from appending group's height.\n\n\t\t\t\tprevOutlineDist = Math.min(targetOutline[i] + prevOutlineEnd - outline[i], prevOutlineDist);\n\t\t\t}\n\t\t}\n\t\tfor (let i = 0; i < shapesSize; ++i) {\n\t\t\tstartOutline[i] += prevOutlineEnd - prevOutlineDist;\n\t\t\tendOutline[i] += prevOutlineEnd - prevOutlineDist;\n\t\t}\n\t\titems.forEach(item => {\n\t\t\titem.rect[pos1Name] += prevOutlineEnd - prevOutlineDist;\n\t\t});\n\t\treturn {\n\t\t\tstart: startOutline.map(point => parseInt(point, 10)),\n\t\t\tend: endOutline.map(point => parseInt(point, 10)),\n\t\t};\n\t}\n\tprivate _insert(items: IInfiniteGridItem[] = [], outline: number[] = [], isAppend?: boolean, cache?: boolean) {\n\t\t// this only needs the size of the item.\n\t\tconst clone = cache ? items : cloneItems(items);\n\n\t\treturn {\n\t\t\titems: clone,\n\t\t\toutlines: this._layout(clone, outline, isAppend),\n\t\t};\n\t}\n}\n\nexport default FrameLayout;\n","import FrameLayout, { IFrameLayoutInterface, IFrameShape } from \"./FrameLayout\";\nimport { fill } from \"../utils\";\nimport { IInfiniteGridItem } from \"../types\";\n\nfunction makeShapeOutline(\n\toutline: number[],\n\titemSize: number,\n\tcolumnLength: number,\n\tisAppend: boolean,\n) {\n\tconst point = Math[isAppend ? \"min\" : \"max\"](...outline) || 0;\n\n\tif (outline.length !== columnLength) {\n\t\treturn fill(new Array(columnLength), 0);\n\t}\n\treturn outline.map(l => Math.floor((l - point) / itemSize));\n}\nfunction getColumn(item: IInfiniteGridItem) {\n\tif (item.column) {\n\t\treturn item.column;\n\t}\n\tlet column = 0;\n\n\tif (item.el) {\n\t\tconst dataset = item.el.dataset;\n\n\t\tif (dataset) {\n\t\t\tcolumn = parseInt(dataset.column, 10) || 1;\n\t\t} else {\n\t\t\tcolumn = parseInt(item.el.getAttribute(\"column\"), 10) || 1;\n\t\t}\n\t} else {\n\t\tcolumn = 1;\n\t}\n\titem.column = column;\n\treturn column;\n}\nexport interface ISquareLayoutOptions extends IFrameLayoutInterface {\n\tcolumn: number;\n}\n/**\n * @classdesc SquareLayout is a layout that places all cards like squares on a checkerboard, and important cards are n times larger. The main card can be enlarged, and then a small card can be placed to naturally show the relationship of the card.\n * @ko SquareLayout은 바둑판처럼 모든 카드를 정사각형으로 배치하고 중요한 카드는 크기를 N배로 키워서 보여주는 레이아웃이다. 주요 카드를 크게 표시하고, 그 다음에 작은 카드를 배치해 자연스럽게 카드의 관계를 나타낼 수 있습니다.\n * @class eg.InfiniteGrid.SquareLayout\n * @extends eg.InfiniteGrid.FrameLayout\n * @param {Object} [options] The option object of eg.InfiniteGrid.SquareLayout module <ko>eg.InfiniteGrid.SquareLayout 모듈의 옵션 객체</ko>\n * @param {String} [options.margin=0] Margin used to create space around items <ko>아이템들 사이의 공간</ko>\n * @param {Boolean} [options.horizontal=false] Direction of the scroll movement (false: vertical, true: horizontal) <ko>스크롤 이동 방향 (false: 세로방향, true: 가로방향)</ko>\n * @param {Boolean} [options.itemSize=0] The size of the items. If it is 0, it is calculated as the size of the first item in items. <ko> 아이템의 사이즈. 만약 아이템 사이즈가 0이면, 아이템들의 첫번째 아이템의 사이즈로 계산이 된다. </ko>\n * @example\n```\n<script>\nvar ig = new eg.InfiniteGrid(\"#grid\". {\n\thorizontal: true,\n});\n\nig.setLayout(eg.InfiniteGrid.SquareLayout, {\n\tmargin: 10,\n\titemSize: 200,\n});\n\n// or\n\nvar layout = new eg.InfiniteGrid.SquareLayout({\n\tmargin: 10,\n\titemSize: 200,\n\thorizontal: true,\n});\n\nvar item1 = '<div data-column=\"2\"></div>';\nvar item2 = \"<div></div>\"\nlayout.append([item1, item2]);\n</script>\n```\n **/\nexport default class SquareLayout extends FrameLayout {\n\tpublic options: ISquareLayoutOptions;\n\n\tconstructor(options: Partial<ISquareLayoutOptions> = {}) {\n\t\tsuper(options);\n\t}\n\tprotected _checkItemSize() {\n\t\tconst column = this.options.column;\n\n\t\tif (!column) {\n\t\t\tsuper._checkItemSize();\n\t\t\treturn;\n\t\t}\n\t\tconst margin = this.options.margin;\n\n\t\t// if itemSize is not in options, caculate itemSize from size.\n\t\tthis._itemSize = (this._size + margin) / column - margin;\n\t}\n\tprotected _layout(\n\t\titems: IInfiniteGridItem[],\n\t\toutline: number[] = [],\n\t\tisAppend?: boolean,\n\t) {\n\t\tconst itemSize = this._getItemSize() as number;\n\t\tconst margin = this.options.margin;\n\t\tconst columnLength = this.options.column ||\n\t\t\tMath.floor((this._size + margin) / (itemSize + margin)) || 1;\n\t\tconst length = items.length;\n\t\tconst endOutline = makeShapeOutline(outline, itemSize, columnLength, isAppend);\n\t\tconst pointCaculateName = isAppend ? \"min\" : \"max\";\n\t\tconst shapes: IFrameShape[] = [];\n\t\tconst sign = isAppend ? 1 : -1;\n\t\tconst style = this._style;\n\t\tconst pos1Name = style.startPos1;\n\t\tconst pos2Name = style.startPos2;\n\n\t\tfor (let i = 0; i < length; ++i) {\n\t\t\tconst point = Math[pointCaculateName](...endOutline);\n\t\t\tlet index = endOutline[isAppend ? \"indexOf\" : \"lastIndexOf\"](point);\n\t\t\tconst item = items[i];\n\t\t\tconst columnWidth = item.columnWidth;\n\t\t\tconst column = (columnWidth && columnWidth[0] === columnLength &&\n\t\t\t\tcolumnWidth[1]) || getColumn(item);\n\t\t\tlet columnCount = 1;\n\n\t\t\tif (column > 1) {\n\t\t\t\tfor (let j = 1; j < column &&\n\t\t\t\t\t((isAppend && index + j < columnLength) || (!isAppend && index - j >= 0)); ++j) {\n\t\t\t\t\tif ((isAppend && endOutline[index + sign * j] <= point) ||\n\t\t\t\t\t\t(!isAppend && endOutline[index + sign * j] >= point)) {\n\t\t\t\t\t\t++columnCount;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif (!isAppend) {\n\t\t\t\t\tindex -= columnCount - 1;\n\t\t\t\t}\n\t\t\t}\n\t\t\titem.columnWidth = [columnLength, columnCount];\n\t\t\tshapes.push({\n\t\t\t\twidth: columnCount,\n\t\t\t\theight: columnCount,\n\t\t\t\t[pos1Name]: point - (!isAppend ? columnCount : 0),\n\t\t\t\t[pos2Name]: index,\n\t\t\t\ttype: i + 1,\n\t\t\t\tindex: i,\n\t\t\t});\n\t\t\tfor (let j = 0; j < columnCount; ++j) {\n\t\t\t\tendOutline[index + j] = point + sign * columnCount;\n\t\t\t}\n\t\t}\n\t\tthis._shapes = {\n\t\t\tshapes,\n\t\t\t[style.size2]: columnLength,\n\t\t};\n\n\t\tconst result = super._layout(items, outline, isAppend);\n\n\t\tif (!isAppend) {\n\t\t\tshapes.sort((shape1, shape2) => {\n\t\t\t\tconst item1pos1 = shape1[pos1Name];\n\t\t\t\tconst item1pos2 = shape1[pos2Name];\n\t\t\t\tconst item2pos1 = shape2[pos1Name];\n\t\t\t\tconst item2pos2 = shape2[pos2Name];\n\n\t\t\t\tif (item1pos1 - item2pos1) {\n\t\t\t\t\treturn item1pos1 - item2pos1;\n\t\t\t\t}\n\t\t\t\treturn item1pos2 - item2pos2;\n\t\t\t});\n\t\t\titems.sort((a, b) => {\n\t\t\t\tconst item1pos1 = a.rect[pos1Name];\n\t\t\t\tconst item1pos2 = a.rect[pos2Name];\n\t\t\t\tconst item2pos1 = b.rect[pos1Name];\n\t\t\t\tconst item2pos2 = b.rect[pos2Name];\n\n\t\t\t\tif (item1pos1 - item2pos1) {\n\t\t\t\t\treturn item1pos1 - item2pos1;\n\t\t\t\t}\n\t\t\t\treturn item1pos2 - item2pos2;\n\t\t\t});\n\t\t}\n\t\treturn result;\n\t}\n}\n","import { assign } from \"../../utils\";\n\nexport interface IBoxModel {\n\toriginWidth: number;\n\toriginHeight: number;\n\twidth: number;\n\theight: number;\n\tleft: number;\n\ttop: number;\n\titems: BoxModel[];\n}\n\nexport default class BoxModel implements IBoxModel {\n\tpublic originWidth: number;\n\tpublic originHeight: number;\n\tpublic width: number;\n\tpublic height: number;\n\tpublic left: number;\n\tpublic top: number;\n\tpublic items: BoxModel[];\n\tconstructor(options: Partial<IBoxModel>) {\n\t\tassign(this, {\n\t\t\toriginWidth: 0,\n\t\t\toriginHeight: 0,\n\t\t\twidth: 0,\n\t\t\theight: 0,\n\t\t\tleft: 0,\n\t\t\ttop: 0,\n\t\t\titems: [],\n\t\t}, options);\n\t}\n\tpublic scaleTo(width: number, height: number) {\n\t\tconst scaleX = this.width ? width / this.width : 0;\n\t\tconst scaleY = this.height ? height / this.height : 0;\n\n\t\tthis.items.forEach(v => {\n\t\t\tif (scaleX !== 0) {\n\t\t\t\tv.left *= scaleX;\n\t\t\t\tv.width *= scaleX;\n\t\t\t}\n\t\t\tif (scaleY !== 0) {\n\t\t\t\tv.top *= scaleY;\n\t\t\t\tv.height *= scaleY;\n\t\t\t}\n\t\t});\n\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t}\n\tpublic push(item: BoxModel) {\n\t\tthis.items.push(item);\n\t}\n\tpublic getOriginSize() {\n\t\treturn this.originWidth * this.originHeight;\n\t}\n\tpublic getSize() {\n\t\treturn this.width * this.height;\n\t}\n\tpublic getOriginRatio() {\n\t\treturn (this.originHeight === 0) ? 0 : this.originWidth / this.originHeight;\n\t}\n\tpublic getRatio() {\n\t\treturn (this.height === 0) ? 0 : this.width / this.height;\n\t}\n}\n","import BoxModel from \"./lib/BoxModel\";\nimport { APPEND, PREPEND } from \"../consts\";\nimport { getStyleNames, assignOptions, toZeroArray, cloneItems } from \"../utils\";\nimport { ILayout, IRectlProperties, ISize, IInfiniteGridItem, IInfiniteGridGroup } from \"../types\";\n\nfunction getCost(originLength: number, length: number) {\n\tlet cost = originLength / length;\n\n\tif (cost < 1) {\n\t\tcost = 1 / cost;\n\t}\n\n\treturn cost - 1;\n}\nfunction fitArea(\n\titem: BoxModel,\n\tbestFitArea: BoxModel,\n\titemFitSize: ISize,\n\tcontainerFitSize: ISize,\n\tlayoutVertical: boolean,\n) {\n\titem.height = itemFitSize.height;\n\titem.width = itemFitSize.width;\n\tbestFitArea.height = containerFitSize.height;\n\tbestFitArea.width = containerFitSize.width;\n\n\tif (layoutVertical) {\n\t\titem.top = bestFitArea.top + bestFitArea.height;\n\t\titem.left = bestFitArea.left;\n\t} else {\n\t\titem.left = bestFitArea.left + bestFitArea.width;\n\t\titem.top = bestFitArea.top;\n\t}\n}\n\n/**\n * @classdesc The PackingLayout is a layout that shows the important cards bigger without sacrificing the weight of the cards. Rows and columns are separated so that cards are dynamically placed within the horizontal and vertical space rather than arranged in an orderly fashion.\n * @ko PackingLayout은 카드의 본래 크기에 따른 비중을 해치지 않으면서 중요한 카드는 더 크게 보여 주는 레이아웃이다. 행과 열이 구분돼 이미지를 정돈되게 배치하는 대신 가로세로 일정 공간 내에서 동적으로 카드를 배치한다.\n * @class eg.InfiniteGrid.PackingLayout\n * @param {Object} [options] The option object of eg.InfiniteGrid.PackingLayout module <ko>eg.InfiniteGrid.PackingLayout 모듈의 옵션 객체</ko>\n * @param {String} [options.margin=0] Margin used to create space around items <ko>아이템들 사이의 공간</ko>\n * @param {Boolean} [options.horizontal=false] Direction of the scroll movement (false: vertical, true: horizontal) <ko>스크롤 이동 방향 (false: 세로방향, true: 가로방향)</ko>\n * @param {Boolean} [options.aspectRatio=1] The aspect ratio of the group <ko> 그룹의 가로 세로 비 </ko>\n * @param {Boolean} [options.sizeWeight=1] The size weight when placing an image <ko> 이미지를 배치할 때 사이즈 가중치 </ko>\n * @param {Boolean} [options.ratioWeight=1] The ratio weight when placing an image <ko> 이미지를 배치할 때 비율 가중치 </ko>\n * @example\n```\n<script>\nvar ig = new eg.InfiniteGrid(\"#grid\". {\n  horizontal: true,\n});\n\nig.setLayout(eg.InfiniteGrid.PackingLayout, {\n  margin: 10,\n  aspectRatio: 1,\n  sizeWeight: 1,\n  ratioWeight: 2,\n});\n\n// or\n\nvar layout = new eg.InfiniteGrid.PackingLayout({\n  horizontal: true,\n  margin: 10,\n  aspectRatio: 1,\n  sizeWeight: 1,\n  ratioWeight: 2,\n});\n\n</script>\n```\n **/\nclass PackingLayout implements ILayout {\n\tpublic options: {\n\t\thorizontal: boolean,\n\t\tmargin: number,\n\t\taspectRatio: number,\n\t\tsizeWeight: number,\n\t\tratioWeight: number,\n\t};\n\tprivate _size: number;\n\tprivate _style: IRectlProperties;\n\tconstructor(options: Partial<PackingLayout[\"options\"]> = {}) {\n\t\tthis.options = assignOptions({\n\t\t\tmargin: 0,\n\t\t\thorizontal: false,\n\t\t\taspectRatio: 1,\n\t\t\tsizeWeight: 1,\n\t\t\tratioWeight: 1,\n\t\t}, options);\n\t\tthis._size = 0;\n\t\tthis._style = getStyleNames(this.options.horizontal);\n\t}\n\t/**\n\t * Adds items at the bottom of a outline.\n\t * @ko 아이템들을 아웃라인 아래에 추가한다.\n\t * @method eg.InfiniteGrid.PackingLayout#append\n\t * @param {Array} items Array of items to be layouted <ko>레이아웃할 아이템들의 배열</ko>\n\t * @param {Array} [outline=[]] Array of outline points to be reference points <ko>기준점이 되는 아웃라인 점들의 배열</ko>\n\t * @return {Object} Layouted items and outline of start and end <ko> 레이아웃이 된 아이템과 시작과 끝의 아웃라인이 담긴 정보</ko>\n\t * @example\n\t * layout.prepend(items, [100]);\n\t */\n\tpublic append(items: IInfiniteGridItem[], outline?: number[], cache?: boolean) {\n\t\treturn this._insert(items, outline, APPEND, cache);\n\t}\n\t/**\n\t * Adds items at the top of a outline.\n\t * @ko 아이템을 아웃라인 위에 추가한다.\n\t * @method eg.InfiniteGrid.PackingLayout#prepend\n\t * @param {Array} items Array of items to be layouted <ko>레이아웃할 아이템들의 배열</ko>\n\t * @param {Array} [outline=[]] Array of outline points to be reference points <ko>기준점이 되는 아웃라인 점들의 배열</ko>\n\t * @return {Object} Layouted items and outline of start and end <ko> 레이아웃이 된 아이템과 시작과 끝의 아웃라인이 담긴 정보</ko>\n\t * @example\n\t * layout.prepend(items, [100]);\n\t */\n\tpublic prepend(items: IInfiniteGridItem[], outline?: number[], cache?: boolean) {\n\t\treturn this._insert(items, outline, PREPEND, cache);\n\t}\n\t/**\n\t * Adds items of groups at the bottom of a outline.\n\t * @ko 그룹들의 아이템들을 아웃라인 아래에 추가한다.\n\t * @method eg.InfiniteGrid.PackingLayout#layout\n\t * @param {Array} groups Array of groups to be layouted <ko>레이아웃할 그룹들의 배열</ko>\n\t * @param {Array} outline Array of outline points to be reference points <ko>기준점이 되는 아웃라인 점들의 배열</ko>\n\t * @return {eg.InfiniteGrid.PackingLayout} An instance of a module itself<ko>모듈 자신의 인스턴스</ko>\n\t * @example\n\t * layout.layout(groups, [100, 200, 300, 400]);\n\t */\n\tpublic layout(groups: IInfiniteGridGroup[] = [], outline: number[] = []) {\n\t\tconst length = groups.length;\n\t\tlet point = outline;\n\n\t\tfor (let i = 0; i < length; ++i) {\n\t\t\tconst group = groups[i];\n\t\t\tconst outlines = this._layout(group.items, point, APPEND);\n\n\t\t\tgroup.outlines = outlines;\n\t\t\tpoint = outlines.end;\n\t\t}\n\t\treturn this;\n\t}\n\t/**\n\t * Set the viewport size of the layout.\n\t * @ko 레이아웃의 가시 사이즈를 설정한다.\n\t * @method eg.InfiniteGrid.PackingLayout#setSize\n\t * @param {Number} size The viewport size of container area where items are added to a layout <ko>레이아웃에 아이템을 추가하는 컨테이너 영역의 가시 사이즈</ko>\n\t * @return {eg.InfiniteGrid.PackingLayout} An instance of a module itself<ko>모듈 자신의 인스턴스</ko>\n\t * @example\n\t * layout.setSize(800);\n\t */\n\tpublic setSize(size: number) {\n\t\tthis._size = size;\n\t\treturn this;\n\t}\n\tprivate _findBestFitArea(container: BoxModel, item: BoxModel) {\n\t\tif (container.getRatio() === 0) { // 아이템 최초 삽입시 전체영역 지정\n\t\t\tcontainer.originWidth = item.width;\n\t\t\tcontainer.originHeight = item.height;\n\t\t\tcontainer.width = item.width;\n\t\t\tcontainer.height = item.height;\n\t\t\treturn;\n\t\t}\n\n\t\tlet bestFitArea = null;\n\t\tlet minCost = 10000000;\n\t\tlet layoutVertical = false;\n\t\tconst itemFitSize: ISize = {\n\t\t\twidth: 0,\n\t\t\theight: 0,\n\t\t};\n\t\tconst containerFitSize: ISize = {\n\t\t\twidth: 0,\n\t\t\theight: 0,\n\t\t};\n\t\tconst { sizeWeight, ratioWeight } = this.options;\n\n\t\tcontainer.items.forEach(v => {\n\t\t\tconst containerSizeCost = getCost(v.getOriginSize(), v.getSize()) * sizeWeight;\n\t\t\tconst containerRatioCost = getCost(v.getOriginRatio(), v.getRatio()) * ratioWeight;\n\t\t\tconst width = v.width;\n\t\t\tconst height = v.height;\n\t\t\tlet cost;\n\n\t\t\tfor (let i = 0; i < 2; ++i) {\n\t\t\t\tlet itemWidth;\n\t\t\t\tlet itemHeight;\n\t\t\t\tlet containerWidth;\n\t\t\t\tlet containerHeight;\n\n\t\t\t\tif (i === 0) {\n\t\t\t\t\t// 상하에 아이템 추가\n\t\t\t\t\titemWidth = width;\n\t\t\t\t\titemHeight = height * (item.height / (v.originHeight + item.height));\n\t\t\t\t\tcontainerWidth = width;\n\t\t\t\t\tcontainerHeight = height - itemHeight;\n\t\t\t\t} else {\n\t\t\t\t\t// 좌우에 아이템 추가\n\t\t\t\t\titemHeight = height;\n\t\t\t\t\titemWidth = width * (item.width / (v.originWidth + item.width));\n\t\t\t\t\tcontainerHeight = height;\n\t\t\t\t\tcontainerWidth = width - itemWidth;\n\t\t\t\t}\n\n\t\t\t\tconst itemSize = itemWidth * itemHeight;\n\t\t\t\tconst itemRatio = itemWidth / itemHeight;\n\t\t\t\tconst containerSize = containerWidth * containerHeight;\n\t\t\t\tconst containerRatio = containerHeight / containerHeight;\n\n\t\t\t\tcost = getCost(item.getSize(), itemSize) * sizeWeight;\n\t\t\t\tcost += getCost(item.getRatio(), itemRatio) * ratioWeight;\n\t\t\t\tcost += getCost(v.getOriginSize(), containerSize) * sizeWeight - containerSizeCost;\n\t\t\t\tcost += getCost(v.getOriginRatio(), containerRatio) * ratioWeight - containerRatioCost;\n\n\t\t\t\tif (cost === Math.min(cost, minCost)) {\n\t\t\t\t\tminCost = cost;\n\t\t\t\t\tbestFitArea = v;\n\t\t\t\t\tlayoutVertical = (i === 0);\n\t\t\t\t\titemFitSize.width = itemWidth;\n\t\t\t\t\titemFitSize.height = itemHeight;\n\t\t\t\t\tcontainerFitSize.width = containerWidth;\n\t\t\t\t\tcontainerFitSize.height = containerHeight;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tfitArea(item, bestFitArea, itemFitSize, containerFitSize, layoutVertical);\n\t}\n\tprivate _layout(items: IInfiniteGridItem[], outline: number[] = [], isAppend?: boolean) {\n\t\tconst style = this._style;\n\t\tconst { horizontal, aspectRatio, margin } = this.options;\n\t\tconst pos1Name = style.startPos1;\n\t\tconst containerWidth = this._size * (horizontal ? aspectRatio : 1);\n\t\tconst containerHeight = this._size / (horizontal ? 1 : aspectRatio);\n\t\tconst containerSize1 = horizontal ? containerWidth : containerHeight;\n\t\tconst prevOutline = toZeroArray(outline);\n\t\tconst start = isAppend ? Math.max(...prevOutline) :\n\t\t\tMath.min(...prevOutline) - containerSize1 - margin;\n\t\tconst end = start + containerSize1 + margin;\n\t\tconst container = new BoxModel({});\n\n\t\titems.forEach(item => {\n\t\t\tconst { width, height } = item.orgSize;\n\t\t\tconst model = new BoxModel({\n\t\t\t\twidth,\n\t\t\t\theight,\n\t\t\t\toriginWidth: width,\n\t\t\t\toriginHeight: height,\n\t\t\t});\n\n\t\t\tthis._findBestFitArea(container, model);\n\t\t\tcontainer.push(model);\n\t\t\tcontainer.scaleTo(containerWidth + margin, containerHeight + margin);\n\t\t});\n\t\titems.forEach((item, i) => {\n\t\t\tconst boxItem = container.items[i];\n\t\t\tconst width = boxItem.width;\n\t\t\tconst height = boxItem.height;\n\t\t\tconst top = boxItem.top;\n\t\t\tconst left = boxItem.left;\n\n\t\t\titem.rect = { top, left, width: width - margin, height: height - margin };\n\t\t\titem.rect[pos1Name] += start;\n\t\t});\n\n\t\treturn {\n\t\t\tstart: [start],\n\t\t\tend: [end],\n\t\t};\n\t}\n\tprivate _insert(items: IInfiniteGridItem[] = [], outline: number[] = [], isAppend?: boolean, cache?: boolean) {\n\t\t// this only needs the size of the item.\n\t\tconst clone = cache ? items : cloneItems(items);\n\n\t\treturn {\n\t\t\titems: clone,\n\t\t\toutlines: this._layout(clone, outline, isAppend),\n\t\t};\n\t}\n}\n\nexport default PackingLayout;\n","/* eslint-disable */\n/******************************************************************************\n * Created 2008-08-19.\n *\n * Dijkstra path-finding functions. Adapted from the Dijkstar Python project.\n *\n * Copyright (C) 2008\n *   Wyatt Baldwin <self@wyattbaldwin.com>\n *   All rights reserved\n *\n * Licensed under the MIT license.\n *\n *   http://www.opensource.org/licenses/mit-license.php\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n *****************************************************************************/\nfunction single_source_shortest_paths(\n\tgraph: (x: string) => ({ [key: string]: number }),\n\ts: string,\n\td: string,\n) {\n\t// Predecessor map for each node that has been encountered.\n\t// node ID => predecessor node ID\n\tconst predecessors: { [key: string]: string } = {};\n\t// Costs of shortest paths from s to all nodes encountered.\n\t// node ID => cost\n\tconst costs: { [key: string]: number } = {};\n\tcosts[s] = 0;\n\n\t// Costs of shortest paths from s to all nodes encountered; differs from\n\t// `costs` in that it provides easy access to the node that currently has\n\t// the known shortest path from s.\n\t// XXX: Do we actually need both `costs` and `open`?\n\tconst open = new BinaryHeap<{ value: string, cost: number }>(x => x.cost);\n\topen.push({ value: s, cost: 0 });\n\n\tlet closest;\n\tlet u;\n\tlet cost_of_s_to_u;\n\tlet adjacent_nodes;\n\tlet cost_of_e;\n\tlet cost_of_s_to_u_plus_cost_of_e;\n\tlet cost_of_s_to_v;\n\tlet first_visit: boolean;\n\n\twhile (open.size()) {\n\t\t// In the nodes remaining in graph that have a known cost from s,\n\t\t// find the node, u, that currently has the shortest path from s.\n\t\tclosest = open.pop();\n\t\tu = closest.value;\n\t\tcost_of_s_to_u = closest.cost;\n\n\t\t// Get nodes adjacent to u...\n\t\tadjacent_nodes = graph(u) || {};\n\n\t\t// ...and explore the edges that connect u to those nodes, updating\n\t\t// the cost of the shortest paths to any or all of those nodes as\n\t\t// necessary. v is the node across the current edge from u.\n\t\tfor (const v in adjacent_nodes) {\n\t\t\t// Get the cost of the edge running from u to v.\n\t\t\tcost_of_e = adjacent_nodes[v];\n\n\t\t\t// Cost of s to u plus the cost of u to v across e--this is *a*\n\t\t\t// cost from s to v that may or may not be less than the current\n\t\t\t// known cost to v.\n\t\t\tcost_of_s_to_u_plus_cost_of_e = cost_of_s_to_u + cost_of_e;\n\n\t\t\t// If we haven't visited v yet OR if the current known cost from s to\n\t\t\t// v is greater than the new cost we just found (cost of s to u plus\n\t\t\t// cost of u to v across e), update v's cost in the cost list and\n\t\t\t// update v's predecessor in the predecessor list (it's now u).\n\t\t\tcost_of_s_to_v = costs[v];\n\t\t\tfirst_visit = (typeof costs[v] === \"undefined\");\n\t\t\tif (first_visit || cost_of_s_to_v > cost_of_s_to_u_plus_cost_of_e) {\n\t\t\t\tcosts[v] = cost_of_s_to_u_plus_cost_of_e;\n\t\t\t\topen.push({ value: v, cost: cost_of_s_to_u_plus_cost_of_e });\n\t\t\t\tpredecessors[v] = u;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (typeof costs[d] === \"undefined\") {\n\t\tconst msg = [\"Could not find a path from \", s, \" to \", d, \".\"].join(\"\");\n\t\tthrow new Error(msg);\n\t}\n\n\treturn predecessors;\n}\nfunction extract_shortest_path_from_predecessor_list(\n\tpredecessors: { [key: string]: string },\n\td: string,\n) {\n\tconst nodes: string[] = [];\n\tlet u = d;\n\n\twhile (u) {\n\t\tnodes.push(u);\n\t\tu = predecessors[u];\n\t}\n\tnodes.reverse();\n\treturn nodes;\n}\nfunction find_path(\n\tgraph: (x: string) => ({ [key: string]: number }),\n\ts: string,\n\td: string,\n) {\n\tconst predecessors = single_source_shortest_paths(graph, s, d);\n\n\treturn extract_shortest_path_from_predecessor_list(predecessors, d);\n}\n\nclass BinaryHeap<T> {\n\tprivate content: T[];\n\tprivate scoreFunction: (x: T) => number;\n\n\tconstructor(scoreFunction: (x: T) => number) {\n\t\tthis.content = [];\n\t\tthis.scoreFunction = scoreFunction;\n\t}\n\tpublic push(element: T) {\n\t\t// Add the new element to the end of the array.\n\t\tthis.content.push(element);\n\t\t// Allow it to bubble up.\n\t\tthis.bubbleUp(this.content.length - 1);\n\t}\n\tpublic pop() {\n\t\t// Store the first element so we can return it later.\n\t\tconst result = this.content[0];\n\t\t// Get the element at the end of the array.\n\t\tconst end = this.content.pop();\n\t\t// If there are any elements left, put the end element at the\n\t\t// start, and let it sink down.\n\t\tif (this.content.length > 0) {\n\t\t\tthis.content[0] = end;\n\t\t\tthis.sinkDown(0);\n\t\t}\n\t\treturn result;\n\t}\n\tpublic size() {\n\t\treturn this.content.length;\n\t}\n\tpublic bubbleUp(_n: number) {\n\t\tlet n = _n;\n\t\t// Fetch the element that has to be moved.\n\t\tconst element = this.content[n];\n\t\t// When at 0, an element can not go up any further.\n\t\twhile (n > 0) {\n\t\t\t// Compute the parent element's index, and fetch it.\n\t\t\tconst parentN = Math.floor((n + 1) / 2) - 1;\n\t\t\tconst parent = this.content[parentN];\n\n\t\t\t// Swap the elements if the parent is greater.\n\t\t\tif (this.scoreFunction(element) < this.scoreFunction(parent)) {\n\t\t\t\tthis.content[parentN] = element;\n\t\t\t\tthis.content[n] = parent;\n\t\t\t\t// Update 'n' to continue at the new position.\n\t\t\t\tn = parentN;\n\t\t\t} else {\n\t\t\t\t// Found a parent that is less, no need to move it further.\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tpublic sinkDown(n: number) {\n\t\t// Look up the target element and its score.\n\t\tconst length = this.content.length;\n\t\tconst element = this.content[n];\n\t\tconst elemScore = this.scoreFunction(element);\n\t\tlet child1Score;\n\n\t\twhile (true) {\n\t\t\t// Compute the indices of the child elements.\n\t\t\tconst child2N = (n + 1) * 2;\n\t\t\tconst child1N = child2N - 1;\n\t\t\t// This is used to store the new position of the element,\n\t\t\t// if any.\n\t\t\tlet swap = null;\n\t\t\t// If the first child exists (is inside the array)...\n\t\t\tif (child1N < length) {\n\t\t\t\t// Look it up and compute its score.\n\t\t\t\tconst child1 = this.content[child1N];\n\t\t\t\tchild1Score = this.scoreFunction(child1);\n\t\t\t\t// If the score is less than our element's, we need to swap.\n\t\t\t\tif (child1Score < elemScore) {\n\t\t\t\t\tswap = child1N;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Do the same checks for the other child.\n\t\t\tif (child2N < length) {\n\t\t\t\tconst child2 = this.content[child2N];\n\t\t\t\tconst child2Score = this.scoreFunction(child2);\n\n\t\t\t\tif (child2Score < (swap == null ? elemScore : child1Score)) {\n\t\t\t\t\tswap = child2N;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// If the element needs to be moved, swap it, and continue.\n\t\t\tif (swap !== null) {\n\t\t\t\tthis.content[n] = this.content[swap];\n\t\t\t\tthis.content[swap] = element;\n\t\t\t\tn = swap;\n\t\t\t} else {\n\t\t\t\t// Otherwise, we are done.\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport { find_path };\n","import { find_path } from \"./lib/dijkstra\";\nimport { APPEND, PREPEND } from \"../consts\";\nimport { getStyleNames, assignOptions, cloneItems } from \"../utils\";\nimport { ILayout, IRectlProperties, SizeType, IInfiniteGridItem, IInfiniteGridGroup } from \"../types\";\n\n/**\n * @classdesc 'justified' is a printing term with the meaning that 'it fits in one row wide'. JustifiedLayout is a layout that the card is filled up on the basis of a line given a size.\n * @ko 'justified'는 '1행의 너비에 맞게 꼭 들어찬'이라는 의미를 가진 인쇄 용어다. 용어의 의미대로 너비가 주어진 사이즈를 기준으로 카드가 가득 차도록 배치하는 레이아웃이다.\n * @class eg.InfiniteGrid.JustifiedLayout\n * @param {Object} [options] The option object of eg.InfiniteGrid.JustifiedLayout module <ko>eg.InfiniteGrid.JustifiedLayout 모듈의 옵션 객체</ko>\n * @param {String} [options.margin=0] Margin used to create space around items <ko>아이템들 사이의 공간</ko>\n * @param {Boolean} [options.horizontal=false] Direction of the scroll movement (false: vertical, true: horizontal) <ko>스크롤 이동 방향 (false: 세로방향, true: 가로방향)</ko>\n * @param {Number} [options.minSize=0] Minimum size of item to be resized <ko> 아이템이 조정되는 최소 크기 </ko>\n * @param {Number} [options.maxSize=0] Maximum size of item to be resized <ko> 아이템이 조정되는 최대 크기 </ko>\n * @param {Array|Number} [options.column=[1, 8]] The number of items in a line <ko> 한 줄에 들어가는 아이템의 개수 </ko>\n * @example\n```\n<script>\nvar ig = new eg.InfiniteGrid(\"#grid\". {\n  horizontal: true,\n});\n\nig.setLayout(eg.InfiniteGrid.JustifiedLayout, {\n  margin: 10,\n  minSize: 100,\n  maxSize: 300,\n});\n\n// or\n\nvar layout = new eg.InfiniteGrid.JustifiedLayout({\n  margin: 10,\n  minSize: 100,\n  maxSize: 300,\n  column: 5,\n  horizontal: true,\n});\n\n</script>\n```\n **/\nclass JustifiedLayout implements ILayout {\n\tpublic options: {\n\t\tmargin: number;\n\t\tminSize: number;\n\t\tmaxSize: number;\n\t\tcolumn: number | number[];\n\t\thorizontal: boolean;\n\t};\n\tprivate _style: IRectlProperties;\n\tprivate _size: number;\n\n\tconstructor(options: Partial<JustifiedLayout[\"options\"]> = {}) {\n\t\tthis.options = assignOptions({\n\t\t\tmargin: 0,\n\t\t\thorizontal: false,\n\t\t\tminSize: 0,\n\t\t\tmaxSize: 0,\n\t\t\tcolumn: [1, 8],\n\t\t}, options);\n\n\t\tthis._style = getStyleNames(this.options.horizontal);\n\t\tthis._size = 0;\n\t}\n\t/**\n\t * Set the viewport size of the layout.\n\t * @ko 레이아웃의 가시 사이즈를 설정한다.\n\t * @method eg.InfiniteGrid.JustifiedLayout#setSize\n\t * @param {Number} size The viewport size of container area where items are added to a layout <ko>레이아웃에 아이템을 추가하는 컨테이너 영역의 가시 사이즈</ko>\n\t * @return {eg.InfiniteGrid.JustifiedLayout} An instance of a module itself<ko>모듈 자신의 인스턴스</ko>\n\t * @example\n\t * layout.setSize(800);\n\t */\n\tpublic setSize(size: number) {\n\t\tthis._size = size;\n\t\treturn this;\n\t}\n\t/**\n\t * Adds items at the bottom of a outline.\n\t * @ko 아이템들을 아웃라인 아래에 추가한다.\n\t * @method eg.InfiniteGrid.JustifiedLayout#append\n\t * @param {Array} items Array of items to be layouted <ko>레이아웃할 아이템들의 배열</ko>\n\t * @param {Array} [outline=[]] Array of outline points to be reference points <ko>기준점이 되는 아웃라인 점들의 배열</ko>\n\t * @return {Object} Layouted items and outline of start and end <ko> 레이아웃이 된 아이템과 시작과 끝의 아웃라인이 담긴 정보</ko>\n\t * @example\n\t * layout.prepend(items, [100]);\n\t */\n\tpublic append(items: IInfiniteGridItem[], outline?: number[], cache?: boolean) {\n\t\treturn this._insert(items, outline, APPEND, cache);\n\t}\n\t/**\n\t * Adds items at the top of a outline.\n\t * @ko 아이템을 아웃라인 위에 추가한다.\n\t * @method eg.InfiniteGrid.JustifiedLayout#prepend\n\t * @param {Array} items Array of items to be layouted <ko>레이아웃할 아이템들의 배열</ko>\n\t * @param {Array} [outline=[]] Array of outline points to be reference points <ko>기준점이 되는 아웃라인 점들의 배열</ko>\n\t * @return {Object} Layouted items and outline of start and end <ko> 레이아웃이 된 아이템과 시작과 끝의 아웃라인이 담긴 정보</ko>\n\t * @example\n\t * layout.prepend(items, [100]);\n\t */\n\tpublic prepend(items: IInfiniteGridItem[], outline?: number[], cache?: boolean) {\n\t\treturn this._insert(items, outline, PREPEND, cache);\n\t}\n\t/**\n\t * Adds items of groups at the bottom of a outline.\n\t * @ko 그룹들의 아이템들을 아웃라인 아래에 추가한다.\n\t * @method eg.InfiniteGrid.JustifiedLayout#layout\n\t * @param {Array} groups Array of groups to be layouted <ko>레이아웃할 그룹들의 배열</ko>\n\t * @param {Array} outline Array of outline points to be reference points <ko>기준점이 되는 아웃라인 점들의 배열</ko>\n\t * @return {eg.InfiniteGrid.JustifiedLayout} An instance of a module itself<ko>모듈 자신의 인스턴스</ko>\n\t * @example\n\t * layout.layout(groups, [100]);\n\t */\n\tpublic layout(groups: IInfiniteGridGroup[] = [], outline: number[] = []) {\n\t\tconst length = groups.length;\n\t\tlet point = outline;\n\n\t\tfor (let i = 0; i < length; ++i) {\n\t\t\tconst group = groups[i];\n\t\t\tconst outlines = this._layout(group.items, point, APPEND);\n\n\t\t\tgroup.outlines = outlines;\n\t\t\tpoint = outlines.end;\n\t\t}\n\t\treturn this;\n\t}\n\tprivate _layout(items: IInfiniteGridItem[], outline: number[], isAppend?: boolean) {\n\t\tconst style = this._style;\n\t\tconst size1Name = style.size1;\n\t\tconst size2Name = style.size2;\n\t\tconst startIndex = 0;\n\t\tconst endIndex = items.length;\n\t\tconst column = this.options.column;\n\t\tconst columns: number[] = (typeof column === \"object\") ? column : [column, column];\n\n\t\tconst graph = (_start: string) => {\n\t\t\tconst results: { [key: string]: number } = {};\n\t\t\tconst start = +_start.replace(/[^0-9]/g, \"\");\n\t\t\tconst length = endIndex + 1;\n\n\t\t\tfor (let i = Math.min(start + columns[0], length - 1); i < length; ++i) {\n\t\t\t\tif (i - start > columns[1]) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tlet cost = this._getCost(items, start, i, size1Name, size2Name);\n\n\t\t\t\tif (cost === null) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (cost < 0 && i === length - 1) {\n\t\t\t\t\tcost = 0;\n\t\t\t\t}\n\t\t\t\tresults[`${i}`] = Math.pow(cost, 2);\n\t\t\t}\n\t\t\treturn results;\n\t\t};\n\t\t// shortest path for items' total height.\n\t\tconst path = find_path(graph, `${startIndex}`, `${endIndex}`);\n\n\t\treturn this._setStyle(items, path, outline, isAppend);\n\t}\n\tprivate _getSize(items: IInfiniteGridItem[], size1Name: SizeType, size2Name: SizeType) {\n\t\tconst margin = this.options.margin;\n\t\tconst size = items.reduce((sum, item) => sum +\n\t\t\t(item.orgSize[size2Name]) / item.orgSize[size1Name], 0);\n\n\t\treturn (this._size - margin * (items.length - 1)) / size;\n\t}\n\tprivate _getCost(\n\t\titems: IInfiniteGridItem[],\n\t\ti: number,\n\t\tj: number,\n\t\tsize1Name: SizeType,\n\t\tsize2Name: SizeType,\n\t) {\n\t\tconst size = this._getSize(items.slice(i, j), size1Name, size2Name);\n\t\tconst min = this.options.minSize || 0;\n\t\tconst max = this.options.maxSize || Infinity;\n\n\t\tif (isFinite(max)) {\n\t\t\t// if this size is not in range, the cost increases sharply.\n\t\t\tif (size < min) {\n\t\t\t\treturn Math.pow(size - min, 2) + Math.pow(max, 2);\n\t\t\t} else if (size > max) {\n\t\t\t\treturn Math.pow(size - max, 2) + Math.pow(max, 2);\n\t\t\t} else {\n\t\t\t\t// if this size in range, the cost is negative or low.\n\t\t\t\treturn Math.min(size - max, min - size);\n\t\t\t}\n\t\t}\n\t\t// if max is infinite type, caculate cost only with \"min\".\n\t\tif (size < min) {\n\t\t\treturn Math.max(Math.pow(min, 2), Math.pow(size, 2));\n\t\t}\n\t\treturn size - min;\n\t}\n\tprivate _setStyle(\n\t\titems: IInfiniteGridItem[],\n\t\tpath: string[],\n\t\toutline: number[] = [],\n\t\tisAppend?: boolean,\n\t) {\n\t\tconst style = this._style;\n\t\t// if direction is vertical\n\t\t// startPos1 : top, endPos1 : bottom\n\t\t// size1 : height\n\t\t// startPos2 : left, endPos2 : right\n\t\t// size2 : width\n\n\t\t// if direction is horizontal\n\t\t// startPos1 : left, endPos1 : right\n\t\t// size1 : width\n\t\t// startPos2 : top, endPos2 : bottom\n\t\t// size2 : height\n\t\tconst pos1Name = style.startPos1;\n\t\tconst size1Name = style.size1;\n\t\tconst pos2Name = style.startPos2;\n\t\tconst size2Name = style.size2;\n\t\tconst length = path.length;\n\t\tconst margin = this.options.margin;\n\t\tconst startPoint = outline[0] || 0;\n\t\tlet endPoint = startPoint;\n\t\tlet height = 0;\n\n\t\tfor (let i = 0; i < length - 1; ++i) {\n\t\t\tconst path1 = parseInt(path[i], 10);\n\t\t\tconst path2 = parseInt(path[i + 1], 10);\n\t\t\t// pathItems(path1 to path2) are in 1 line.\n\t\t\tconst pathItems = items.slice(path1, path2);\n\t\t\tconst pathItemsLength = pathItems.length;\n\t\t\tconst size1 = this._getSize(pathItems, size1Name, size2Name);\n\t\t\tconst pos1 = endPoint;\n\n\t\t\tfor (let j = 0; j < pathItemsLength; ++j) {\n\t\t\t\tconst item = pathItems[j];\n\t\t\t\tconst size2 = item.orgSize[size2Name] / item.orgSize[size1Name] * size1;\n\t\t\t\t// item has margin bottom and right.\n\t\t\t\t// first item has not margin.\n\t\t\t\tconst prevItemRect = j === 0 ? 0 : pathItems[j - 1].rect;\n\t\t\t\tconst pos2 = (prevItemRect ? prevItemRect[pos2Name] + prevItemRect[size2Name] + margin : 0);\n\n\t\t\t\titem.rect = {\n\t\t\t\t\t[pos1Name]: pos1,\n\t\t\t\t\t[pos2Name]: pos2,\n\t\t\t\t\t[size1Name]: size1,\n\t\t\t\t\t[size2Name]: size2,\n\t\t\t\t};\n\t\t\t}\n\t\t\theight += margin + size1;\n\t\t\tendPoint = startPoint + height;\n\t\t}\n\t\tconst itemsLength = items.length;\n\n\t\tif (isAppend) {\n\t\t\t// previous group's end outline is current group's start outline\n\t\t\treturn {\n\t\t\t\tstart: [startPoint],\n\t\t\t\tend: [endPoint],\n\t\t\t};\n\t\t}\n\t\t// for prepend, only substract height from position.\n\t\t// always start is lower than end.\n\n\t\tfor (let i = 0; i < itemsLength; ++i) {\n\t\t\tconst item = items[i];\n\n\t\t\t// move items as long as height for prepend\n\t\t\titem.rect[pos1Name] -= height;\n\t\t}\n\t\treturn {\n\t\t\tstart: [startPoint - height],\n\t\t\tend: [startPoint], // endPoint - height = startPoint\n\t\t};\n\t}\n\tprivate _insert(items: IInfiniteGridItem[] = [], outline: number[] = [], isAppend?: boolean, cache?: boolean) {\n\t\t// this only needs the size of the item.\n\t\tconst clone = cache ? items : cloneItems(items);\n\n\t\treturn {\n\t\t\titems: clone,\n\t\t\toutlines: this._layout(clone, outline, isAppend),\n\t\t};\n\t}\n}\n\nexport default JustifiedLayout;\n","/**\n * Copyright (c) NAVER Corp.\n * egjs-infinitegrid projects are licensed under the MIT license\n */\nimport InfiniteGrid from \"./InfiniteGrid\";\nimport GridLayout from \"./layouts/GridLayout\";\nimport FrameLayout from \"./layouts/FrameLayout\";\nimport SquareLayout from \"./layouts/SquareLayout\";\nimport PackingLayout from \"./layouts/PackingLayout\";\nimport JustifiedLayout from \"./layouts/JustifiedLayout\";\nimport ImageLoaded from \"./ImageLoaded\";\nimport AutoSizer from \"./AutoSizer\";\nimport DOMRenderer from \"./DOMRenderer\";\nimport Watcher from \"./Watcher\";\nimport ItemManager from \"./ItemManager\";\nimport Infinite from \"./Infinite\";\nimport LayoutManager from \"./LayoutManager\";\n\n// fix for IE8\n(InfiniteGrid as any).GridLayout = GridLayout;\n(InfiniteGrid as any).FrameLayout = FrameLayout;\n(InfiniteGrid as any).SquareLayout = SquareLayout;\n(InfiniteGrid as any).PackingLayout = PackingLayout;\n(InfiniteGrid as any).JustifiedLayout = JustifiedLayout;\n(InfiniteGrid as any).AutoSizer = AutoSizer;\n(InfiniteGrid as any).ImageLoaded = ImageLoaded;\n(InfiniteGrid as any).Watcher = Watcher;\n(InfiniteGrid as any).ItemManager = ItemManager;\n(InfiniteGrid as any).Infinite = Infinite;\n(InfiniteGrid as any).LayoutManager = LayoutManager;\n(InfiniteGrid as any).DOMRenderer = DOMRenderer;\n(InfiniteGrid as any).default = InfiniteGrid;\n\nexport default InfiniteGrid;\n"],"names":["win","window","document","navigator","userAgent","ua","SUPPORT_COMPUTEDSTYLE","SUPPORT_ADDEVENTLISTENER","SUPPORT_PASSIVE","supportsPassiveOption","Object","defineProperty","addEventListener","get","e","IS_IE","test","IS_IOS","IS_ANDROID2","CONTAINER_CLASSNAME","IGNORE_CLASSNAME","TRANSITION_NAME","APPEND","PREPEND","VERTICAL","HORIZONTAL","CACHE","NO_CACHE","TRUSTED","NO_TRUSTED","MULTI","DUMMY_POSITION","GROUPKEY_ATT","DEFAULT_OPTIONS","horizontal","margin","agent","toLowerCase","isMobile","ALIGN","START","CENTER","END","JUSTIFY","IDLE","LOADING_APPEND","LOADING_PREPEND","PROCESSING","webkit","exec","WEBKIT_VERSION","parseInt","DEFENSE_BROWSER","TRANSFORM","TRANSITION","TRANSITION_END","nodes","array","i","len","length","push","html","match","param","multi","el","matchHTML","dummy","createElement","innerHTML","childNodes","querySelectorAll","toArray","isWindow","isJQuery","$","Array","isArray","map","v","undefined","nodeName","nodeType","element","type","handler","eventListenerOptions","options","attachEvent","removeEventListener","detachEvent","callback","removeEvent","addEvent","prop","body","documentElement","x","y","scroll","scrollLeft","scrollTop","scrollBy","getComputedStyle","currentStyle","name","isOffset","isDocument","doc","Math","max","size","clientRect","getBoundingClientRect","right","left","bottom","top","cssSize","getStyles","indexOf","parseFloat","_getSize","width","outerWidth","height","outerHeight","STYLE","vertical","startPos1","endPos1","size1","startPos2","endPos2","size2","isHorizontal","target","_i","sources","forEach","source","key","defaultOptions","assign","outline","items","item","jQuery","constructor","prototype","jquery","arr","value","clear","ItemManager","elements","selector","_a","groupKey","filted","selectItems","content","outerHTML","rect","filter","classNames","className","split","some","c","data","property","reduce","acc","concat","startKey","endKey","datas","_data","startIndex","endIndex","slice","item2","data2","status","set","base","outlines","start","end","isUndefined","pluck","index","cursor","targetValue","Infinity","getOutline","getEdgeIndex","startCursor","endCursor","group","groups","pos","layouted","unshift","getAttribute","String","idx","splice","orgSize","container","style","position","children","appendChild","properties","styles","p","transitionDuration","pos1","pos2","isEqualSize","isConstantSize","view","viewport","_init","resize","DOMRenderer","prevRect","setAttribute","render","setTransition","addOnceEvent","itemRect","renderItem","removeElement","parentNode","removeChild","noElementItems","replace","join","cssText","_size","getSize","_insert","isAppend","createElements","renderItems","_calcSize","isResize","innerWidth","innerHeight","_orgStyle","overflowX","overflowY","createContainer","df","createDocumentFragment","insertBefore","firstChild","check","isOverflowScroll","_timer","reset","_containerOffset","_view","_isScrollIssue","_onCheck","bind","_onResize","setScrollPos","_prevPos","scrollPos","getOrgScrollPos","applyScrollPos","scrollTo","arrPos","rawPos","getContainerOffset","_getOffset","prevPos","getScrollPos","orgScrollPos","isForward","clearTimeout","setTimeout","_this","threshold","endScrollPos","min","itemManger","useRecycle","append","prepend","recycle","_items","_status","_b","visibles","isVisible","lastIndexOf","setCursor","getCursor","startEdgePos","endEdgePos","startPos","endPos","cache","getEdgeOutline","result","remove","AutoSizer","resizeAll","prefix","onResize","__PREFIX__","isFixed","fixed","elementPrefix","dataWidth","dataHeight","CHECK_ALL","CHECK_ONLY_ERROR","ImageLoaded","checklist","complete","error","checkCount","endCount","checkEnd","checkImage","onError","itemIndex","__ITEM_INDEX__","onCheck","srcElement","isDataAttribute","images","naturalWidth","add","tagName","checkImageLoaded","sum","waitImageLoaded","renderer","attributePrefix","_renderer","_layout","layout","setSize","callbacks","isUpdate","isRelayout","layoutGroups","updateSize","itemManager","groupIndex","prevGroup","getData","groupInfos","groupOutline","every","groupItems","groupInfo","removeTarget","replaceTarget","errorIndex","removeItem","hasTarget","src","removeAttribute","replaceItem","removeTargetLength","replaceTargetLength","layoutedItems","_c","_d","_e","_f","checkGroups","reverse","_complete","_error","_end","tslib_1","_super","itemSelector","useFit","_reset","_loadingBar","_watcher","Watcher","_infinite","Infinite","_requestAppend","_requestPrepend","_recycle","_manager","LayoutKlass","LayoutMananger","setLayout","_setSize","getViewportSize","includeCached","getVisibleItems","infinite","getItems","isLayoutAll","isChildren","getContainerSize","setContainerSize","_fit","clearOutlines","_onLayoutComplete","fromCache","isTrusted","isLayout","getVisibleData","getStatus","watcher","processingStatus","setStatus","visibleItems","createAndInsert","isReLayout","isNeededResize","_postLayout","newItems","_appendLoadingBar","userLoadingBar","loadingBarObj","loadingSize","loadingStyle","loadingBar","_isProcessing","_isLoading","_getLoadingStatus","userStyle","display","_process","_renderLoading","_setContainerSize","_getEdgeValue","_fitItems","isProcessing","getItem","_updateItem","isInCursor","fit","_scrollTo","moveCache","moveItem","_postCache","destroy","getMaxEdgeValue","getViewSize","getEdgeValue","isAdd","from","method","removeItems","posName","resetSize","trigger","requestStartCursor","requestEndCursor","_setScrollPos","_onImageError","getGroupKeys","pop","startLoading","endLoading","shift","viewSize","isScroll","InfiniteGrid","Component","assignOptions","align","itemSize","_columnSize","_columnLength","_style","getStyleNames","firstItem","checkColumn","startOutline","fill","sizeName","columnSize","floor","size1Name","size2Name","pos1Name","pos2Name","columnLength","viewDist","pointCaculateName","endOutline","point","column","sort","a","b","item1pos1","item1pos2","item2pos1","item2pos2","clone","cloneItems","frame","j","disableFrame","shapes","searchShapeInFrame","frameFill","row","_itemSize","_shapes","getShapes","_checkItemSize","_getItemSize","isItemObject","itemSize2","itemSize1","shapesSize","shapesLength","dist","shape","shapePos1","shapePos2","shapeSize1","shapeSize2","k","targetOutline","prevOutlineEnd","prevOutlineDist","l","dataset","makeShapeOutline","sign","columnWidth","getColumn","columnCount","shape1","shape2","FrameLayout","originWidth","originHeight","scaleX","scaleY","originLength","cost","bestFitArea","itemFitSize","containerFitSize","layoutVertical","aspectRatio","sizeWeight","ratioWeight","getRatio","minCost","containerSizeCost","getCost","getOriginSize","containerRatioCost","getOriginRatio","itemWidth","itemHeight","containerWidth","containerHeight","itemRatio","containerSize","containerRatio","fitArea","containerSize1","prevOutline","toZeroArray","BoxModel","model","_findBestFitArea","scaleTo","boxItem","graph","s","d","predecessors","costs","open","BinaryHeap","closest","u","cost_of_s_to_u","adjacent_nodes","cost_of_e","cost_of_s_to_u_plus_cost_of_e","cost_of_s_to_v","first_visit","msg","Error","single_source_shortest_paths","extract_shortest_path_from_predecessor_list","scoreFunction","bubbleUp","sinkDown","_n","n","parentN","parent","elemScore","child1Score","child2N","child1N","swap","child1","child2","child2Score","minSize","maxSize","columns","_start","results","_getCost","pow","path","find_path","_setStyle","isFinite","startPoint","endPoint","path1","path2","pathItems","pathItemsLength","prevItemRect","itemsLength","GridLayout","SquareLayout","PackingLayout","JustifiedLayout","LayoutManager","default"],"mappings":"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"}