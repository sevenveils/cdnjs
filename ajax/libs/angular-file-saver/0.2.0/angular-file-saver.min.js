!function r(n,e,t){function o(i,a){if(!e[i]){if(!n[i]){var f="function"==typeof require&&require;if(!a&&f)return f(i,!0);if(u)return u(i,!0);var s=new Error("Cannot find module '"+i+"'");throw s.code="MODULE_NOT_FOUND",s}var c=e[i]={exports:{}};n[i][0].call(c.exports,function(r){var e=n[i][1][r];return o(e?e:r)},c,c.exports,r,n,e,t)}return e[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}({1:[function(r,n,e){"use strict";function t(r){throw new Error(r)}function o(r){return"[object Array]"===Object.prototype.toString.call(r)}function u(r){return"string"==typeof r||r instanceof String}function i(r){return"undefined"==typeof r}function a(r){function n(r){return r instanceof f}function e(r,n){try{a(r,n)}catch(e){t(e.message)}}var a=r.saveAs,f=r.Blob;return i(a)&&t("saveAs is not supported. Please include saveAs polyfill"),i(f)&&t("Blob is not supported. Please include blob polyfill"),{download:function(r,i,a){if(a=a||{},o(r)||n(r)||t("Data argument should be represented as an array or Blob instance"),u(i)||t("Filename argument should be a string"),n(r))return e(r,i);var s=new f(r,a);return e(s,i)}}}angular.module("fileSaver",[]).factory("SaveAs",["$window",a])},{}]},{},[1]);