{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap c7561deda4957978c937","webpack:///./~/tslib/tslib.es6.js","webpack:///./src/utils/index.ts","webpack:///external \"d3\"","webpack:///./src/plots/plot.ts","webpack:///./src/scales/index.ts","webpack:///./~/typesettable/build/src/index.js","webpack:///./src/components/component.ts","webpack:///./src/core/formatters.ts","webpack:///./src/drawers/drawer.ts","webpack:///./src/animators/index.ts","webpack:///./src/drawers/svgDrawer.ts","webpack:///./src/utils/makeEnum.ts","webpack:///./src/scales/quantitativeScale.ts","webpack:///./src/utils/coerceD3.ts","webpack:///./src/dispatchers/index.ts","webpack:///./src/drawers/index.ts","webpack:///./src/interactions/interaction.ts","webpack:///./src/plots/xyPlot.ts","webpack:///./src/scales/scale.ts","webpack:///./src/drawers/canvasDrawer.ts","webpack:///./src/plots/index.ts","webpack:///./src/memoize/index.ts","webpack:///./~/typesettable/build/src/utils/index.js","webpack:///./src/axes/axis.ts","webpack:///./src/core/config.ts","webpack:///./src/dispatchers/dispatcher.ts","webpack:///./src/interactions/index.ts","webpack:///./src/interactions/panZoomConstraints.ts","webpack:///./src/plots/barPlot.ts","webpack:///./~/typesettable/build/src/writers/index.js","webpack:///./src/axes/timeAxis.ts","webpack:///./src/components/componentContainer.ts","webpack:///./src/core/renderController.ts","webpack:///./src/core/symbolFactories.ts","webpack:///./src/components/dragBoxLayer.ts","webpack:///./src/drawers/lineDrawer.ts","webpack:///./src/drawers/rectangleDrawer.ts","webpack:///./src/utils/windowUtils.ts","webpack:///./~/typesettable/build/src/measurers/abstractMeasurer.js","webpack:///./src/components/index.ts","webpack:///./src/core/dataset.ts","webpack:///./src/core/renderPolicy.ts","webpack:///./src/interactions/keyInteraction.ts","webpack:///./src/components/group.ts","webpack:///./src/components/guideLineLayer.ts","webpack:///./src/components/label.ts","webpack:///./src/components/selectionBoxLayer.ts","webpack:///./src/drawers/arcDrawer.ts","webpack:///./src/drawers/arcOutlineDrawer.ts","webpack:///./src/drawers/areaDrawer.ts","webpack:///./src/drawers/segmentDrawer.ts","webpack:///./src/drawers/symbolDrawer.ts","webpack:///./src/memoize/signature.ts","webpack:///./src/plots/areaPlot.ts","webpack:///./src/plots/commons.ts","webpack:///./src/plots/deferredRenderer.ts","webpack:///./src/plots/linePlot.ts","webpack:///./src/scales/categoryScale.ts","webpack:///./src/utils/domUtils.ts","webpack:///./src/utils/mathUtils.ts","webpack:///./src/utils/rTree.ts","webpack:///./src/utils/set.ts","webpack:///./~/lodash/lodash.js","webpack:///./~/typesettable/build/src/contexts/html.js","webpack:///./~/typesettable/build/src/contexts/index.js","webpack:///./~/typesettable/build/src/measurers/cacheCharacterMeasurer.js","webpack:///./~/typesettable/build/src/measurers/characterMeasurer.js","webpack:///./~/typesettable/build/src/measurers/index.js","webpack:///./~/typesettable/build/src/measurers/measurer.js","webpack:///./~/typesettable/build/src/wrappers/index.js","webpack:///./~/typesettable/build/src/wrappers/wrapper.js","webpack:///./src/axes/index.ts","webpack:///./src/core/version.ts","webpack:///./src/utils/addD3SelectionMulti.ts","webpack:///./src/animators/easingAnimator.ts","webpack:///./src/animators/nullAnimator.ts","webpack:///./src/axes/categoryAxis.ts","webpack:///./src/axes/numericAxis.ts","webpack:///./src/components/dragLineLayer.ts","webpack:///./src/components/gridlines.ts","webpack:///./src/components/interpolatedColorLegend.ts","webpack:///./src/components/legend.ts","webpack:///./src/components/plotGroup.ts","webpack:///./src/components/table.ts","webpack:///./src/components/wrappedLabel.ts","webpack:///./src/components/xDragBoxLayer.ts","webpack:///./src/components/yDragBoxLayer.ts","webpack:///./src/dispatchers/keyDispatcher.ts","webpack:///./src/dispatchers/mouseDispatcher.ts","webpack:///./src/dispatchers/touchDispatcher.ts","webpack:///./src/drawers/canvasBuffer.ts","webpack:///./src/index.ts","webpack:///./src/interactions/clickInteraction.ts","webpack:///./src/interactions/dragInteraction.ts","webpack:///./src/interactions/panZoomInteraction.ts","webpack:///./src/interactions/pointerInteraction.ts","webpack:///./src/memoize/memThunk.ts","webpack:///./src/memoize/memoize.ts","webpack:///./src/memoize/memoizeProjectors.ts","webpack:///./src/plots/clusteredBarPlot.ts","webpack:///./src/plots/piePlot.ts","webpack:///./src/plots/rectanglePlot.ts","webpack:///./src/plots/scatterPlot.ts","webpack:///./src/plots/segmentPlot.ts","webpack:///./src/plots/stackedAreaPlot.ts","webpack:///./src/plots/stackedBarPlot.ts","webpack:///./src/plots/waterfallPlot.ts","webpack:///./src/scales/colorScale.ts","webpack:///./src/scales/interpolatedColorScale.ts","webpack:///./src/scales/linearScale.ts","webpack:///./src/scales/logScale.ts","webpack:///./src/scales/modifiedLogScale.ts","webpack:///./src/scales/tickGenerators.ts","webpack:///./src/scales/timeScale.ts","webpack:///./src/utils/arrayUtils.ts","webpack:///./src/utils/bucket.ts","webpack:///./src/utils/callbackSet.ts","webpack:///./src/utils/colorUtils.ts","webpack:///./src/utils/entityStore.ts","webpack:///./src/utils/map.ts","webpack:///./src/utils/objectUtils.ts","webpack:///./src/utils/rTreeSplitStrategies.ts","webpack:///./src/utils/stackingUtils.ts","webpack:///./src/utils/transformAwareTranslator.ts","webpack:///./~/d3-ease/index.js","webpack:///./~/d3-ease/src/back.js","webpack:///./~/d3-ease/src/bounce.js","webpack:///./~/d3-ease/src/circle.js","webpack:///./~/d3-ease/src/cubic.js","webpack:///./~/d3-ease/src/elastic.js","webpack:///./~/d3-ease/src/exp.js","webpack:///./~/d3-ease/src/linear.js","webpack:///./~/d3-ease/src/poly.js","webpack:///./~/d3-ease/src/quad.js","webpack:///./~/d3-ease/src/sin.js","webpack:///./~/is-plain-object/index.js","webpack:///./~/isobject/index.js","webpack:///./~/typesettable/build/src/contexts/canvas.js","webpack:///./~/typesettable/build/src/contexts/svg.js","webpack:///./~/typesettable/build/src/measurers/cacheMeasurer.js","webpack:///./~/typesettable/build/src/typesetter.js","webpack:///./~/typesettable/build/src/utils/cache.js","webpack:///./~/typesettable/build/src/utils/methods.js","webpack:///./~/typesettable/build/src/utils/stringMethods.js","webpack:///./~/typesettable/build/src/utils/tokenizer.js","webpack:///./~/typesettable/build/src/wrappers/singleLineWrapper.js","webpack:///./~/typesettable/build/src/writers/writer.js","webpack:///(webpack)/buildin/global.js","webpack:///(webpack)/buildin/module.js"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA,mDAA2C,cAAc;;AAEzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;AChEA;AAAA;AACA;AACA,+DAA+D;AAC/D;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,MAAM,gBAAgB,sCAAsC,iBAAiB,EAAE;AAC/E,qBAAqB,uDAAuD;;AAE5E;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;;AAEA;AACA,4CAA4C,OAAO;AACnD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,4DAA4D,cAAc;AAC1E;AACA;AACA;;AAEA;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;;AAEA;AACA,mCAAmC,oCAAoC;AACvE;;AAEA;AACA;AACA;;AAEA;AACA;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,iEAAiE,uBAAuB,EAAE,4BAA4B;AACrJ;AACA,KAAK;AACL;;AAEA;AACA,aAAa,6BAA6B,0BAA0B,aAAa,EAAE,qBAAqB;AACxG,gBAAgB,qDAAqD,oEAAoE,aAAa,EAAE;AACxJ,sBAAsB,sBAAsB,qBAAqB,GAAG;AACpE;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC,kCAAkC,SAAS;AAC3C,kCAAkC,WAAW,UAAU;AACvD,yCAAyC,cAAc;AACvD;AACA,6GAA6G,OAAO,UAAU;AAC9H,gFAAgF,iBAAiB,OAAO;AACxG,wDAAwD,gBAAgB,QAAQ,OAAO;AACvF,8CAA8C,gBAAgB,gBAAgB,OAAO;AACrF;AACA,iCAAiC;AACjC;AACA;AACA,SAAS,YAAY,aAAa,OAAO,EAAE,UAAU,WAAW;AAChE,mCAAmC,SAAS;AAC5C;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,MAAM,gBAAgB;AACzC;AACA;AACA;AACA;AACA,iBAAiB,sBAAsB;AACvC;AACA;AACA;;AAEA;AACA,4BAA4B,sBAAsB;AAClD;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,sFAAsF,aAAa,EAAE;AACtH,sBAAsB,gCAAgC,qCAAqC,0CAA0C,EAAE,EAAE,GAAG;AAC5I,2BAA2B,MAAM,eAAe,EAAE,YAAY,oBAAoB,EAAE;AACpF,sBAAsB,oGAAoG;AAC1H,6BAA6B,uBAAuB;AACpD,4BAA4B,wBAAwB;AACpD,2BAA2B,yDAAyD;AACpF;;AAEA;AACA;AACA,iBAAiB,4CAA4C,SAAS,EAAE,qDAAqD,aAAa,EAAE;AAC5I,yBAAyB,gCAAgC,oBAAoB,gDAAgD,gBAAgB,GAAG;AAChJ;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,gCAAgC,uCAAuC,aAAa,EAAE,EAAE,OAAO,kBAAkB;AACjH;AACA;;;;;;;;ACrKA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC5BA,+C;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,uBAAuB;AACpE,sDAAsD,iCAAiC;AACvF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,wDAAwD,EAAE;AACrH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,qDAAqD;AAClG,aAAa;AACb;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,8CAA8C,EAAE;AACpG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,+CAA+C,EAAE;AAClG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,8CAA8C,EAAE,kBAAkB,0DAA0D,EAAE,EAAE,EAAE;AACvL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA,kFAAkF,kBAAkB;AACpG,8CAA8C,yDAAyD;AACvG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kFAAkF,kBAAkB;AACpG,sCAAsC,mCAAmC;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,uEAAuE,EAAE;AAC1H;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,yBAAyB,EAAE,eAAe,sCAAsC,EAAE;AAC1I;AACA;AACA;AACA,wDAAwD,sDAAsD,EAAE;AAChH,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,yBAAyB,EAAE,eAAe,8CAA8C,EAAE,eAAe,2CAA2C,EAAE;AAC9M;AACA;AACA;AACA,wDAAwD,wDAAwD,EAAE;AAClH,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB,iBAAiB,KAAK;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB,iBAAiB,KAAK;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE,sCAAsC,EAAE;AAC1G;AACA;AACA;AACA,oDAAoD,sCAAsC,EAAE;AAC5F,6CAA6C,mCAAmC,EAAE;AAClF;AACA;AACA;AACA;AACA,iBAAiB,8EAA8E;AAC/F;AACA;AACA;AACA;AACA;AACA,gDAAgD,wBAAwB;AACxE;AACA,eAAe,UAAU;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,oCAAoC,sBAAsB;AAC1D;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,oDAAoD,gDAAgD,EAAE;AACtG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D,4CAA4C,EAAE;AAC5G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,0DAA0D,6DAA6D,EAAE;AACzH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,UAAU;AACzB;AACA,iBAAiB;AACjB;AACA;AACA;AACA,kCAAkC,4BAA4B;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,UAAU;AACzB;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gFAAgF,yDAAyD,EAAE;AAC3I;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,yDAAyD,EAAE;AAC/F;AACA;AACA;AACA;AACA,eAAe,UAAU;AACzB;AACA;AACA;AACA;AACA,qDAAqD,oCAAoC;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,sBAAsB,aAAa;AACnC,0BAA0B,oCAAoC;AAC9D;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB,iBAAiB,aAAa;AAC9B;AACA;AACA;AACA;AACA;AACA,oBAAoB,iBAAiB;AACrC,2BAA2B,iBAAiB;AAC5C;AACA,eAAe,MAAM;AACrB,iBAAiB,iBAAiB,6CAA6C,iBAAiB;AAChG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,yDAAyD,EAAE;AACvG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,yDAAyD,EAAE;AACvG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,yDAAyD,EAAE;AACvG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,wCAAwC;AACzE;AACA;AACA,iCAAiC,qDAAqD;AACtF;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,8BAA8B,EAAE;AAC5E;AACA,2CAA2C,gCAAgC;AAC3E;AACA;AACA;;;;;;;;ACnyBA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC7BA;AACA;AACA;AACA,kDAAkD;AAClD;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA,iC;;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,aAAa;AAC5B,iBAAiB,UAAU;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,kBAAkB;AACjC,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,kBAAkB;AACjC,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,iBAAiB,UAAU;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB;AACA;AACA,iCAAiC,aAAa;AAC9C,iCAAiC,aAAa;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,iCAAiC,+BAA+B;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,UAAU;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,eAAe;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,UAAU;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,oBAAoB;AACnC,iBAAiB,UAAU;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6FAA6F;AAC7F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB,UAAU;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB,UAAU;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,kBAAkB;AACjC,gBAAgB,UAAU;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,kBAAkB;AACjC,gBAAgB,UAAU;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,aAAa;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,aAAa;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;ACjkBA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB;AACA,aAAa,UAAU;AACvB;AACA;AACA,+BAA+B,eAAe;AAC9C,4BAA4B,cAAc;AAC1C,4BAA4B,eAAe;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA,aAAa,UAAU;AACvB;AACA;AACA,+BAA+B,eAAe;AAC9C;AACA,yBAAyB,6BAA6B;AACtD;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA,aAAa,UAAU;AACvB;AACA;AACA,8CAA8C,8BAA8B;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,UAAU;AACvB;AACA;AACA,yBAAyB,kBAAkB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA,aAAa,UAAU;AACvB;AACA;AACA,+BAA+B,eAAe;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA,aAAa,UAAU;AACvB;AACA;AACA,gDAAgD,gCAAgC;AAChF;AACA,yBAAyB,6DAA6D;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,UAAU;AACvB;AACA;AACA,+BAA+B,eAAe;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,kCAAkC,EAAE;AACzE,SAAS;AACT;AACA;AACA,qCAAqC,6BAA6B,EAAE;AACpE,SAAS;AACT;AACA;AACA,qCAAqC,6BAA6B,EAAE;AACpE,SAAS;AACT;AACA;AACA,qCAAqC,2BAA2B,EAAE;AAClE,SAAS;AACT;AACA;AACA,qCAAqC,8CAA8C,EAAE;AACrF,SAAS;AACT;AACA;AACA,qCAAqC,0BAA0B,EAAE;AACjE,SAAS;AACT;AACA;AACA,qCAAqC,2BAA2B,EAAE;AAClE,SAAS;AACT;AACA;AACA,8EAA8E,+BAA+B,EAAE;AAC/G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB;AACA,aAAa,UAAU;AACvB;AACA;AACA,4BAA4B,0BAA0B;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACpPA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;ACjEA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;;;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,kCAAkC,EAAE;AACrF;AACA;AACA,uBAAuB,gBAAgB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,qBAAqB,aAAa,QAAQ,EAAE;AAC/F;AACA;AACA;AACA;AACA,2DAA2D,kBAAkB,EAAE;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,gBAAgB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;ACjIA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA,KAAK,IAAI;AACT;AACA;;;;;;;;ACZA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,6BAA6B;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,2BAA2B;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,mCAAmC;AAClD,iBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,mCAAmC;AAClD,iBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB,EAAE;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D,yCAAyC,EAAE;AAC1G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,2FAA2F;AACjJ;AACA;AACA;AACA;AACA,wDAAwD,mDAAmD;AAC3G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,iEAAiE;AAC7G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;AC/QA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC7BA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;;;;;;;;ACTA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA,qDAAqD,iCAAiC;AACtF;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,UAAU;AACzB,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB,gBAAgB,MAAM;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB,gBAAgB,QAAQ;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;ACpGA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB,eAAe,MAAM;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE,4CAA4C;AAClH,sEAAsE,4CAA4C;AAClH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uFAAuF,uBAAuB,EAAE;AAChiBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oFAAoF,uCAAuC,EAAE;AAC7H,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;ACjRA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,IAAI;AACnB,iBAAiB,IAAI;AACrB;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,2CAA2C,2BAA2B;AACtE;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA,eAAe,cAAc;AAC7B,iBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,cAAc;AAC7B,iBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,iBAAiB,EAAE;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,8BAA8B;AAC7C,iBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,8BAA8B;AAC7C,iBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;ACvKA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD;AAClD;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,wBAAwB;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D,wBAAwB,EAAE;AACvF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC1IA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AClBA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACXA;AACA;AACA;AACA,kDAAkD;AAClD;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA,iC;;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB,eAAe,gBAAgB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,yBAAyB;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gEAAgE;AAChsCAAsC,8BAA8B;AACpE,wCAAwC,wDAAwD;AAChG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,kCAAkC,EAAE,iBAAiB,mCAAmC,EAAE;AAC1I,iDAAiD,mCAAmC,EAAE,iBAAiB,kCAAkC,EAAE;AAC3I;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD;AACxD;AACA;AACA;AACA,aAAa,EAAE;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,uBAAuB;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,8BAA8B;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjlqBA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACbA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,uBAAuB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,iBAAiB;AACtC,+CAA+C,iBAAiB;AAChE;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;ACpFA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACbA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACvJA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA,qCAAqC,0BAA0B;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,mCAAmC,EAAE;AAC7F;AACA,oDAAoD,gCAAgC;AACpF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,sEAAsE,EAAE,kBAAkB,+CAA+C,EAAE;AAChM;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,2DAA2D;AACnG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB,iBAAiB,WAAW;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB,iBAAiB;AACjB;AACA;AACA;AACA,kCAAkC,8CAA8C;AAChF;AACA;AACA;AACA;AACA,kCAAkC,mEAAmE;AACrG;AACA;AACA;AACA;AACA,kCAAkC,oEAAoE;AACtG;AACA;AACA;AACA;AACA,kCAAkC,oEAAoE;AACtG;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,iBAAiB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oEAAoE,uDAAuD,EAAE;AAC7H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,0EAA0E,EAAE;AAChI;AACA,iDAAiD,4BAA4B,EAAE;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD;AACjD;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA,wDAAwD,0EAA0E,EAAE;AACpI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D,yBAAyB;AACrF,+DAA+D,UAAU;AACzE,4BAA4B,2FAA2F;AACvH;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,2DAA2D,mCAAmC,EAAE;AAChG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,4BAA4B;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,0CAA0C,EAAE;AACnG,sCAAsC,kBAAkB,EAAE;AAC1D,mCAAmC,oBAAoB,EAAE;AACzD,SAAS,mCAAmC,eAAe,EAAE;AAC7D,oDAAoD,cAAc,EAAE;AACpE,qEAAqE,mCAAmC,EAAE;AAC1G;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;;;;;;;AC9tBA;AACA;AACA;AACA,kDAAkD;AAClD;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA,iC;;;;;;;ACXA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,YAAY;AAC3B,eAAe,gBAAgB;AAC/B,eAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,0EAA0E,EAAE;AAChI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,sBAAsB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oGAAoG,sBAAsB,EAAE;AAC5H;AACA;AACA;AACA;AACA;AACA,uBAAuB,oBAAoB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oEAAoE;AACpE;AACA;AACA;AACA;AACA,uBAAuB,oBAAoB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,oBAAoB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mHAAmH,2DAA2D,EAAE;AAChL;AACA;AACA,2BAA2B,0CAA0C;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,oBAAoB,EAAE,EAAE;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,oHAAoH,4BAA4B,EAAE;AAClJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,qDAAqD,EAAE;AAC1G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4FAA4F,2BAA2B,EAAE;AACzH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA,uBAAuB,qCAAqC;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,wBAAwB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,iFAAiF,qCAAqC,EAAE;AACxH;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,2CAA2C;AACzF;AACA;AACA,iBAAiB,sFAAsF;AACvG,iBAAiB,iFAAiF;AAClG;AACA;AACA,iBAAiB,sFAAsF;AACvG,iBAAiB,iFAAiF;AAClG;AACA;AACA,iBAAiB,uFAAuF;AACxG,iBAAiB,iFAAiF;AAClG;AACA;AACA,iBAAiB,uFAAuF;AACxG,iBAAiB,iFAAiF;AAClG;AACA;AACA,iBAAiB,uFAAuF;AACxG,iBAAiB,iFAAiF;AAClG;AACA;AACA,iBAAiB,mFAAmF;AACpG,iBAAiB,iFAAiF;AAClG;AACA;AACA,iBAAiB,mFAAmF;AACpG,iBAAiB,iFAAiF;AAClG;AACA;AACA,iBAAiB,oFAAoF;AACrG,iBAAiB,iFAAiF;AAClG;AACA;AACA,iBAAiB,oFAAoF;AACrG,iBAAiB,iFAAiF;AAClG;AACA;AACA,iBAAiB,oFAAoF;AACrG,iBAAiB,iFAAiF;AAClG;AACA;AACA,iBAAiB,8EAA8E;AAC/F,iBAAiB,iFAAiF;AAClG;AACA;AACA,iBAAiB,8EAA8E;AAC/F,iBAAiB,iFAAiF;AAClG;AACA;AACA,iBAAiB,8EAA8E;AAC/F,iBAAiB,iFAAiF;AAClG;AACA;AACA,iBAAiB,+EAA+E;AAChG,iBAAiB,iFAAiF;AAClG;AACA;AACA,iBAAiB,6EAA6E;AAC9F,iBAAiB,+EAA+E;AAChG;AACA;AACA,iBAAiB,0EAA0E;AAC3F,iBAAiB,+EAA+E;AAChG;AACA;AACA,iBAAiB,4EAA4E;AAC7F,iBAAiB,2EAA2E;AAC5F;AACA;AACA,iBAAiB,4EAA4E;AAC7F,iBAAiB,2EAA2E;AAC5F;AACA;AACA,iBAAiB,4EAA4E;AAC7F,iBAAiB,2EAA2E;AAC5F;AACA;AACA,iBAAiB,4EAA4E;AAC7F,iBAAiB,2EAA2E;AAC5F;AACA;AACA,iBAAiB,2EAA2E;AAC5F;AACA;AACA,iBAAiB,2EAA2E;AAC5F;AACA;AACA,iBAAiB,2EAA2E;AAC5F;AACA;AACA,iBAAiB,4EAA4E;AAC7F;AACA;AACA,iBAAiB,4EAA4E;AAC7F;AACA;AACA,iBAAiB,6EAA6E;AAC9F;AACA;AACA,iBAAiB,6EAA6E;AAC9F;AACA;AACA,iBAAiB,6EAA6E;AAC9F;AACA;AACA,iBAAiB,8EAA8E;AAC/F;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;;;;;;;;ACtiBA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,gCAAgC;AACtF;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,kCAAkC,EAAE;AACxE;AACA;AACA;AACA,oCAAoC,mBAAmB,EAAE;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,QAAQ;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB,EAAE;AAC1D;AACA;AACA,oCAAoC,4BAA4B,EAAE;AAClE;AACA;AACA,CAAC;AACD;;;;;;;;ACnFA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE,kCAAkC,EAAE;AAC1G,4BAA4B;AAC5B,+DAA+D,2BAA2B,EAAE;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC3HA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACpDA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA,SAAS,EAAE;AACX;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA;AACA,aAAa,EAAE;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,+CAA+C,yCAAyC;AACxF,+CAA+C,yCAAyC;AACxF,+CAA+C,yCAAyC;AACxF,+CAA+C,yCAAyC;AACxF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,gBAAgB;AAC/B,iBAAiB,aAAa;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,gBAAgB;AAC/B,iBAAiB,aAAa;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,gBAAgB;AAC/B,iBAAiB,aAAa;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,gBAAgB;AAC/B,iBAAiB,aAAa;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,gBAAgB;AAC/B,iBAAiB,aAAa;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,gBAAgB;AAC/B,iBAAiB,aAAa;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D,8CAA8C,EAAE;AAC9G,yDAAyD,8CAA8C,EAAE;AACzG,4DAA4D,iDAAiD,EAAE;AAC/G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,aAAa;AACnC,0BAA0B,aAAa;AACvC,SAAS;AACT;AACA;AACA,CAAC;AACD;;;;;;;;ACvXA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC1CA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,qBAAqB;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,uBAAuB,iBAAiB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;AC5CA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,EAAE;AACb,WAAW,IAAI;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB;AACA;AACA,6BAA6B,cAAc;AAC3C;AACA;AACA;AACA;;;;;;;;ACrFA;AACA;AACA;AACA,kDAAkD;AAClD;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,qCAAqC;AACnE;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4C;;;;;;;AChCA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACpBA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB,eAAe,IAAI,aAAa;AAChC;AACA;AACA,8BAA8B,WAAW;AACzC,kCAAkC,eAAe;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,gBAAgB;AAC/B,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,gBAAgB;AAC/B,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;AC1EA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;AChDA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,cAAc,GAAG;AACtE;AACA,4DAA4D,kDAAkD;AAC9G,mDAAmD,yCAAyC;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,YAAY;AAC3B,iBAAiB,iBAAiB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,YAAY;AAC3B,iBAAiB,iBAAiB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,YAAY;AAC3B,iBAAiB,iBAAiB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,YAAY;AAC3B,iBAAiB,iBAAiB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;ACnHA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,YAAY;AAC3B;AACA;AACA,oCAAoC,iBAAiB;AACrD;AACA;AACA;AACA,yCAAyC,wBAAwB,EAAE;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,sDAAsD,EAAE;AAClH;AACA,mEAAmE,yBAAyB,EAAE;AAC9F,oEAAoE,0BAA0B,EAAE;AAChG;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,aAAa;AAClD,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,uBAAuB,EAAE;AAC7E;AACA;AACA,oDAAoD,wBAAwB,EAAE;AAC9E;AACA;AACA,gBAAgB,YAAY;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;AC7FA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,oCAAoC;AACrjJA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB;AACA;AACA,qCAAqC,kBAAkB;AACveAAe,OAAO;AACtB,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;AC9JA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,mEAAmE;AACpE;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,aAAa;AACnC,0BAA0B,aAAa;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACbcAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;AClBA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;AClBA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD;AACvD;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,qBAAqB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,qBAAqB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACvFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,sBAAsB,EAAE;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,uBAAuB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,sBAAsB;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;AC/LA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4EAA4E,yCAAyC,EAAE,kBAAkB;AACzI;AACA;AACA;AACA,SAAS,GAAG,EAAE;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,sFAAsF;AAClH;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,yCAAyC,EAAE;AAChG;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,sFAAsF;AAClH;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D,2BAA2B;AAC1F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,4BAA4B;AAC9D;AACA;AACA;AACA;AACA,2DAA2D,wCAAwC,EAAE;AACrG,uCAAuC,uBAAuB,EAAE;AAChE,2CAA2C,0EAA0E,EAAE;AACvH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,oDAAoD,EAAE;AACxG,mDAAmD,oDAAoD,EAAE;AACzG,mDAAmD,qDAAqD,EAAE;AAC1G;AACA,wDAAwD,0DAA0D,EAAE;AACpH;AACA;AACA;AACA;AACA;AACA,kDAAkD,oDAAoD,EAAE;AACxG,kDAAkD,oDAAoD,EAAE;AACxG;AACA,wDAAwD,0DAA0D,EAAE;AACpH;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;ACvOA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA,CAAC,uDAAuD;;;;;;;;ACVxD;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;AC7FA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAcqDAAqD,yCAAyC,EAAE,kBAAkB,uFAAuF,sCAAsC,EAAE,GAAG,EAAE;AACtP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oHAAoH,gBAAgB,EAAE;AACtI;AACA;AACA,oHAAoH,gBAAgB,EAAE;AACtI;AACA,8CAA8C,sDAAsD,EAAE;AACtG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,iBAAiB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,yBAAyB;AAClE;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,sFAAsF;AAClH;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB,iBAAiB,WAAW;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,eAAe;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,oCAAoC,oDAAoD;AACxF,oCAAoC,oDAAoD;AACxF;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,oDAAoD,EAAE;AACxG,kDAAkD,oDAAoD,EAAE;AACxG;AACA,wDAAwD,0DAA0D,EAAE;AACpH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,aAAa;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,wBAAwB;AACnD;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,oBAAoB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,wBAAwB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,6CAA6C;AAC7E,gCAAgC,6CAA6C;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,qBAAqB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;ACzjBA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,+BAA+B,sBAAsB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,0CAA0C,EAAE;AACpG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;AClMA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,WAAW;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,WAAW;AACtB,WAAW,WAAW;AACtB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,WAAW;AACtB,WAAW,WAAW;AACtB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B,WAAW,eAAe;AAC1B,WAAW,QAAQ;AACnB,WAAW,OAAO;AAClB;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA,+BAA+B,iBAAiB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,IAAI;AACf;AACA,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wEAAwE,sBAAsB,EAAE;AAChG;AACA;AACA;AACA;AACA;;;;;;;;AC/SA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,UAAU;AACpC;AACA;AACA;AACA;AACA;AACA,mBAAmB,YAAY;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,qBAAqcAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,2FAA2F;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,6CAA6C;AACtF,uCAAuC,wCAAwC;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,uBAAuB,EAAE;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,mBAAmB,EAAE;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,mBAAmB,EAAE;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,mBAAmB,EAAE;AAC/D;AACA;AACA,wCAAwC,qDAAqD,EAAE;AAC/F;AACA;AACA,wCAAwC,gDAAgD,EAAE;AAC1F;AACA;AACA,wCAAwC,gDAAgD,EAAE;AAC1F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,8BAA8B;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,8BAA8B;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0FAA0F,iBAAiB,EAAE;AAC7G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,yBAAyB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,qBAAqB,EAAE,0BAA0B,uBAAuB,EAAE;AAC5H;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,YAAY,EAAE;AACxD,0CAA0C,YAAY,EAAE;AACxD,0DAA0D,uBAAuB,EAAE,8BAA8B,uBAAuB,EAAE,8BAA8B,uBAAuB,EAAE,8BAA8B,uBAAuB,EAAE;AACxP;AACA;AACA;AACA;AACA;AACA,6CAA6C,kBAAkB,EAAE;AACjE;AACA;AACA;AACA,gDAAgD,kCAAkC,EAAE;AACpF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;ACzeA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D,qDAAqD;AACjH;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;AACD;;;;;;;sDCjEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,2CAA2C;AAC3C;AACA,2DAA2D;;AAE3D;AACA,+CAA+C;AAC/C;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,sCAAsC;AACtC;;AAEA;AACA;AACA;AACA;;AAEA;AACA,yBAAyB;AACzB,yBAAyB;AACzB;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,0BAA0B,MAAM,aAAa,OAAO;;AAEpD;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,EAAE;AACnD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,2CAA2C,GAAG;;AAE9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe;AACf,cAAc;AACd,cAAc;AACd,gBAAgB;AAChB,eAAe;AACf;;AAEA;AACA;AACA,UAAU;AACV,SAAS;AACT,SAAS;AACT,WAAW;AACX,UAAU;AACV;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,SAAS;AACtB,aAAa,EAAE;AACf,aAAa,MAAM;AACnB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,MAAM;AACnB,aAAa,SAAS;AACtB,aAAa,SAAS;AACtB,aAAa,OAAO;AACpB,eAAe,SAAS;AACxB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,MAAM;AACnB,aAAa,SAAS;AACtB,eAAe,MAAM;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,MAAM;AACnB,aAAa,SAAS;AACtB,eAAe,MAAM;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,MAAM;AACnB,aAAa,SAAS;AACtB,eAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,MAAM;AACnB,aAAa,SAAS;AACtB,eAAe,MAAM;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,MAAM;AACnB,aAAa,EAAE;AACf,eAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,MAAM;AACnB,aAAa,EAAE;AACf,aAAa,SAAS;AACtB,eAAe,QAAQ;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,MAAM;AACnB,aAAa,SAAS;AACtB,eAAe,MAAM;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,MAAM;AACnB,aAAa,MAAM;AACnB,eAAe,MAAM;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,MAAM;AACnB,aAAa,SAAS;AACtB,aAAa,EAAE;AACf,aAAa,QAAQ;AACrB;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,MAAM;AACnB,aAAa,SAAS;AACtB,aAAa,EAAE;AACf,aAAa,QAAQ;AACrB;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,MAAM;AACnB,aAAa,SAAS;AACtB,eAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,eAAe,OAAO;AACtB;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,eAAe,MAAM;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,eAAe,MAAM;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,aAAa;AAC1B,aAAa,SAAS;AACtB,aAAa,SAAS;AACtB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,MAAM;AACnB,aAAa,SAAS;AACtB,aAAa,OAAO;AACpB,aAAa,QAAQ;AACrB,eAAe,OAAO;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,MAAM;AACnB,aAAa,EAAE;AACf,aAAa,OAAO;AACpB,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,MAAM;AACnB,aAAa,EAAE;AACf,aAAa,OAAO;AACpB,aAAa,SAAS;AACtB,eAAe,OAAO;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,EAAE;AACf,eAAe,QAAQ;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,MAAM;AACnB,aAAa,SAAS;AACtB,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,eAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,eAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,aAAa;AAC1B,aAAa,SAAS;AACtB,aAAa,EAAE;AACf,aAAa,QAAQ;AACrB;AACA,aAAa,SAAS;AACtB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,MAAM;AACnB,aAAa,SAAS;AACtB,eAAe,MAAM;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,MAAM;AACnB,aAAa,SAAS;AACtB,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,SAAS;AACtB,eAAe,MAAM;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,MAAM;AACnB,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,aAAa,SAAS;AACtB,eAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,MAAM;AACnB,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,eAAe,QAAQ;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,MAAM;AACnB,aAAa,MAAM;AACnB,eAAe,OAAO;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,MAAM;AACnB,aAAa,MAAM;AACnB,eAAe,OAAO;AACtB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,MAAM;AACnB,aAAa,EAAE;AACf,eAAe,OAAO;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,eAAe,OAAO;AACtB;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,eAAe,OAAO;AACtB;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,eAAe,OAAO;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,eAAe,EAAE;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,eAAe,QAAQ;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,eAAe,QAAQ;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,eAAe,MAAM;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,eAAe,MAAM;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,SAAS;AACtB,aAAa,SAAS;AACtB,eAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,MAAM;AACnB,aAAa,EAAE;AACf,eAAe,MAAM;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,eAAe,MAAM;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,eAAe,MAAM;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,MAAM;AACnB,aAAa,EAAE;AACf,aAAa,OAAO;AACpB,eAAe,OAAO;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,MAAM;AACnB,aAAa,EAAE;AACf,aAAa,OAAO;AACpB,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,eAAe,MAAM;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,eAAe,OAAO;AACtB;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,eAAe,MAAM;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,eAAe,MAAM;AACrB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,eAAe,SAAS;AACxB;AACA;AACA,cAAc,2BAA2B;AACzC;AACA;AACA,mBAAmB,gCAAgC;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,6BAA6B;AAC9D;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe,QAAQ;AACvB;AACA,OAAO;AACP,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,EAAE;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW;AACX;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB,EAAE;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,EAAE;AACjB,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB,EAAE;AACnB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,EAAE;AACjB,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB,EAAE;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,EAAE;AACjB,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB,EAAE;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,EAAE;AACjB,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,QAAQ;AACvB,iBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB,iBAAiB,EAAE;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB,eAAe,OAAO;AACtB,iBAAiB,MAAM;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB,iBAAiB,MAAM;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB,eAAe,EAAE;AACjB,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe,aAAa;AAC5B,eAAe,SAAS;AACxB,eAAe,SAAS;AACxB,eAAe,OAAO;AACtB,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,SAAS;AACxB,iBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,QAAQ;AACvB;AACA;AACA;AACA,eAAe,SAAS;AACxB,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,iBAAiB,EAAE;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB,eAAe,OAAO;AACtB,eAAe,MAAM;AACrB,iBAAiB,cAAc;AAC/B;AACA;AACA;AACA;AACA;AACA,oCAAoC,6BAA6B,EAAE;AACnE;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB,eAAe,MAAM;AACrB,eAAe,SAAS;AACxB,eAAe,SAAS;AACxB,iBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,aAAa;AAC5B,eAAe,SAAS;AACxB,iBAAiB,aAAa;AAC9B;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,aAAa;AAC5B,eAAe,SAAS;AACxB,iBAAiB,aAAa;AAC9B;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,aAAa;AAC5B,eAAe,SAAS;AACxB,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB,eAAe,SAAS;AACxB,eAAe,SAAS;AACxB,iBAAiB,EAAE;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB,eAAe,EAAE;AACjB,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,iBAAiB,MAAM;AACvB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,aAAa;AAC5B,eAAe,SAAS;AACxB,iBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB,eAAe,OAAO;AACtB,eAAe,QAAQ;AACvB,eAAe,QAAQ;AACvB,eAAe,MAAM;AACrB,iBAAiB,MAAM;AACvB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,SAAS;AACxB,eAAe,SAAS;AACxB,iBAAiB,OAAO;AACxB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,SAAS;AACxB,eAAe,SAAS;AACxB,iBAAiB,OAAO;AACxB;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,SAAS;AACxB,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,SAAS;AACxB,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,MAAM;AACrB,iBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,aAAa;AAC5B,iBAAiB,EAAE;AACnB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,SAAS;AACxB,eAAe,SAAS;AACxB,iBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,aAAa;AAC5B,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,aAAa;AAC5B,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB,eAAe,SAAS;AACxB,eAAe,SAAS;AACxB,iBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,SAAS;AACxB,eAAe,SAAS;AACxB,eAAe,OAAO;AACtB,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,aAAa;AAC5B,eAAe,MAAM;AACrB,iBAAiB,EAAE;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,QAAQ;AACvB;AACA;AACA,eAAe,SAAS;AACxB,eAAe,OAAO;AACtB,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,SAAS;AACxB,eAAe,SAAS;AACxB,eAAe,OAAO;AACtB,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,MAAM;AACrB,eAAe,SAAS;AACxB,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,aAAa;AAC5B,eAAe,SAAS;AACxB,iBAAiB,MAAM;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,EAAE;AACjB,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,SAAS;AACxB,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,SAAS;AACxB,eAAe,SAAS;AACxB,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB,eAAe,OAAO;AACtB,iBAAiB,EAAE;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,aAAa;AAC5B,eAAe,6BAA6B;AAC5C,eAAe,SAAS;AACxB,iBAAiB,MAAM;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT,gBAAgB;AAChB,OAAO;;AAEP;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,SAAS;AACxB,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,SAAS;AACxB,eAAe,SAAS;AACxB,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,aAAa;AAC5B,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB,eAAe,MAAM;AACrB,eAAe,SAAS;AACxB,eAAe,SAAS;AACxB,iBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB,eAAe,SAAS;AACxB,iBAAiB,MAAM;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,QAAQ;AACvB,iBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB,eAAe,OAAO;AACtB,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,aAAa;AAC5B,iBAAiB,EAAE;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,aAAa;AAC5B,eAAe,OAAO;AACtB,iBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,aAAa;AAC5B,eAAe,EAAE;AACjB,eAAe,SAAS;AACxB,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB,eAAe,EAAE;AACjB,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB,eAAe,SAAS;AACxB,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA,eAAe,aAAa;AAC5B,iBAAiB,MAAM;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,iBAAiB,MAAM;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,aAAa;AAC5B,eAAe,SAAS;AACxB,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB,eAAe,EAAE;AACjB,eAAe,QAAQ;AACvB,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,qEAAqE;AACrE;AACA;AACA,eAAe,MAAM;AACrB,eAAe,EAAE;AACjB,eAAe,SAAS;AACxB,eAAe,QAAQ;AACvB,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB,eAAe,SAAS;AACxB,iBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB,eAAe,SAAS;AACxB,eAAe,SAAS;AACxB,iBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,aAAa;AAC5B,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,aAAa;AAC5B,eAAe,SAAS;AACxB,eAAe,SAAS;AACxB,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB,eAAe,SAAS;AACxB,eAAe,QAAQ;AACvB,eAAe,QAAQ;AACvB,iBAAiB,MAAM;AACvB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,MAAM;AACrB,iBAAiB,EAAE;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB,eAAe,SAAS;AACxB,eAAe,SAAS;AACxB,iBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB,eAAe,MAAM;AACrB,eAAe,SAAS;AACxB,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,iBAAiB,aAAa;AAC9B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,OAAO;AACtB,iBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd,eAAe,SAAS;AACxB,iBAAiB,SAAS;AAC1B;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,iBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,cAAc;AAC7B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,QAAQ;AACvB,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,YAAY;AAC3B,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,QAAQ;AACvB,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,QAAQ;AACvB,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,mBAAmB;AAClC,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB,eAAe,MAAM;AACrB,eAAe,MAAM;AACrB,gBAAgB,QAAQ;AACxB,iBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB,eAAe,MAAM;AACrB,eAAe,MAAM;AACrB,gBAAgB,QAAQ;AACxB,iBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB,eAAe,MAAM;AACrB,iBAAiB,MAAM;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,MAAM;AACrB,eAAe,OAAO,WAAW;AACjC,eAAe,SAAS;AACxB,iBAAiB,OAAO;AACxB;AACA;AACA;AACA,4BAA4B;;AAE5B;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO,WAAW;AACjC,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO,WAAW;AACjC,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB,eAAe,SAAS;AACxB,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB,eAAe,QAAQ;AACvB,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB,eAAe,OAAO;AACtB,eAAe,EAAE;AACjB,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,iBAAiB,SAAS;AAC1B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,+CAA+C;AACpF;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe,gBAAgB;AAC/B,eAAe,OAAO;AACtB,eAAe,EAAE;AACjB,eAAe,MAAM;AACrB;AACA,eAAe,MAAM;AACrB,eAAe,MAAM;AACrB;AACA,eAAe,MAAM;AACrB,eAAe,MAAM;AACrB,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB,eAAe,SAAS;AACxB,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA,oEAAoE;AACpE;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB,eAAe,OAAO;AACtB,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,SAAS;AACT,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,iBAAiB,OAAO;AACxB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB,eAAe,OAAO;AACtB,eAAe,EAAE;AACjB,eAAe,MAAM;AACrB;AACA,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB,eAAe,OAAO;AACtB,eAAe,SAAS;AACxB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,MAAM;AACrB;AACA,eAAe,MAAM;AACrB,eAAe,MAAM;AACrB,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe,gBAAgB;AAC/B,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,MAAM;AACrB,eAAe,MAAM;AACrB,eAAe,MAAM;AACrB,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,iBAAiB,EAAE;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB;AACA,iBAAiB,EAAE;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,OAAO;AACtB,iBAAiB,EAAE;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB,eAAe,MAAM;AACrB,eAAe,OAAO;AACtB,eAAe,SAAS;AACxB,eAAe,SAAS;AACxB,eAAe,OAAO;AACtB,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,SAAS;AACxB,eAAe,SAAS;AACxB,eAAe,OAAO;AACtB,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,SAAS;AACxB,eAAe,SAAS;AACxB,eAAe,OAAO;AACtB,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB,MAAM;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB,MAAM;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB,iBAAiB,EAAE;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB,iBAAiB,EAAE;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,OAAO;AACtB,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,iBAAiB,EAAE;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB,MAAM;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,iBAAiB,EAAE;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,iBAAiB,OAAO;AACxB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,MAAM;AACrB,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,0CAA0C;AAC1C,wCAAwC;AACxC,+DAA+D;AAC/D,iEAAiE;AACjE;AACA;AACA,cAAc;AACd;;AAEA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,aAAa;AAC5B,eAAe,SAAS;AACxB,iBAAiB,QAAQ;AACzB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB,iBAAiB,MAAM;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,QAAQ;AACvB,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB,MAAM;AACvB,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C;;AAEA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,OAAO;AACtB,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,OAAO;AACtB,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,iBAAiB,QAAQ;AACzB;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,EAAE;AACjB,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB,eAAe,MAAM;AACrB,iBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB,eAAe,OAAO;AACtB,eAAe,SAAS;AACxB,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,MAAM;AACrB,iBAAiB,EAAE;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB,eAAe,MAAM;AACrB,iBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB,eAAe,EAAE;AACjB,iBAAiB,SAAS;AAC1B;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB,eAAe,OAAO;AACtB,iBAAiB,cAAc;AAC/B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB,eAAe,SAAS;AACxB,iBAAiB,SAAS;AAC1B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB,eAAe,SAAS;AACxB,eAAe,OAAO;AACtB,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB,eAAe,OAAO;AACtB,iBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,iBAAiB,cAAc;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB,MAAM;AACvB,eAAe,OAAO;AACtB,iBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB,eAAe,OAAO;AACtB,gBAAgB,OAAO;AACvB,iBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB,iBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB,eAAe,KAAK;AACpB,iBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB,eAAe,SAAS;AACxB,iBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB,eAAe,SAAS;AACxB,eAAe,SAAS;AACxB,iBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,SAAS,GAAG,SAAS,KAAK,SAAS;AAC3D,eAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB,eAAe,SAAS;AACxB,eAAe,SAAS;AACxB,iBAAiB,MAAM;AACvB;AACA;AACA,uBAAuB,iBAAiB,GAAG,iBAAiB;AAC5D;AACA,mCAAmC,iBAAiB;AACpD,eAAe,iBAAiB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB,eAAe,OAAO;AACtB,gBAAgB,OAAO;AACvB,iBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB,eAAe,OAAO;AACtB,gBAAgB,OAAO;AACvB,iBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB,eAAe,SAAS;AACxB,iBAAiB,MAAM;AACvB;AACA;AACA;AACA,UAAU,oCAAoC;AAC9C,UAAU,qCAAqC;AAC/C,UAAU;AACV;AACA;AACA,4CAA4C,kBAAkB,EAAE;AAChE;AACA;AACA;AACA,gCAAgC,qCAAqC;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB,eAAe,SAAS;AACxB,iBAAiB,MAAM;AACvB;AACA;AACA;AACA,UAAU,qCAAqC;AAC/C,UAAU,qCAAqC;AAC/C,UAAU;AACV;AACA;AACA,uCAAuC,kBAAkB,EAAE;AAC3D;AACA;AACA;AACA,2BAA2B,oCAAoC;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB,eAAe,EAAE;AACjB,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,iBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB,eAAe,SAAS;AACxB,eAAe,OAAO;AACtB,iBAAiB,OAAO;AACxB;AACA;AACA;AACA,UAAU,qCAAqC;AAC/C,UAAU,qCAAqC;AAC/C,UAAU;AACV;AACA;AACA,uCAAuC,2BAA2B,EAAE;AACpE;AACA;AACA;AACA,2BAA2B,kCAAkC;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB,eAAe,SAAS;AACxB,eAAe,OAAO;AACtB,iBAAiB,OAAO;AACxB;AACA;AACA;AACA,UAAU,oCAAoC;AAC9C,UAAU,qCAAqC;AAC/C,UAAU;AACV;AACA;AACA,2CAA2C,4BAA4B,EAAE;AACzE;AACA;AACA;AACA,+BAA+B,mCAAmC;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB,iBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB,iBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB,eAAe,OAAO;AACtB,iBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB,iBAAiB,OAAO;AACxB;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB,iBAAiB,EAAE;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB,eAAe,EAAE;AACjB,eAAe,OAAO;AACtB,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB,iBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB,iBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB,eAAe,SAAS;AACxB,iBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,SAAS,KAAK,SAAS,GAAG,SAAS;AAC7D,eAAe,SAAS;AACxB;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB,eAAe,SAAS;AACxB,iBAAiB,MAAM;AACvB;AACA;AACA,uBAAuB,iBAAiB,GAAG,iBAAiB;AAC5D,sBAAsB,iBAAiB,GAAG,iBAAiB;AAC3D;AACA;AACA,eAAe,iBAAiB;AAChC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB,eAAe,OAAO;AACtB,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB,iBAAiB,EAAE;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB,eAAe,EAAE;AACjB,eAAe,OAAO;AACtB,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB,eAAe,OAAO;AACtB,iBAAiB,EAAE;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB,eAAe,KAAK;AACpB,iBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB,eAAe,MAAM;AACrB,iBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB,eAAe,MAAM;AACrB,eAAe,SAAS;AACxB,iBAAiB,MAAM;AACvB;AACA;AACA,qBAAqB,SAAS,GAAG,SAAS,GAAG,SAAS,GAAG,SAAS;AAClE;AACA,4BAA4B,SAAS,GAAG,SAAS;AACjD;AACA,eAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB,eAAe,MAAM;AACrB,eAAe,SAAS;AACxB,iBAAiB,MAAM;AACvB;AACA;AACA,qBAAqB,iBAAiB,GAAG,iBAAiB,GAAG,iBAAiB;AAC9E;AACA,8BAA8B,iBAAiB;AAC/C;AACA,eAAe,iBAAiB,GAAG,iBAAiB;AACpD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB,eAAe,qBAAqB;AACpC,iBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;;AAEP;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB,eAAe,SAAS;AACxB,iBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB,iBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,iBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB,eAAe,EAAE;AACjB,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB,eAAe,EAAE;AACjB,eAAe,SAAS;AACxB,iBAAiB,OAAO;AACxB;AACA;AACA;AACA,uBAAuB,SAAS,GAAG,SAAS;AAC5C;AACA,iCAAiC,SAAS,eAAe,YAAY,EAAE;AACvE;AACA;AACA;AACA,iCAAiC,SAAS;AAC1C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB,eAAe,EAAE;AACjB,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB,eAAe,EAAE;AACjB,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB,eAAe,EAAE;AACjB,eAAe,SAAS;AACxB,iBAAiB,OAAO;AACxB;AACA;AACA;AACA,uBAAuB,SAAS,GAAG,SAAS;AAC5C;AACA,qCAAqC,SAAS,eAAe,YAAY,EAAE;AAC3E;AACA;AACA;AACA,qCAAqC,SAAS;AAC9C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB,eAAe,EAAE;AACjB,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB,iBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB,eAAe,SAAS;AACxB,iBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB,iBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB,eAAe,OAAO;AACtB,gBAAgB,OAAO;AACvB,iBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB,eAAe,OAAO;AACtB,gBAAgB,OAAO;AACvB,iBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB,eAAe,SAAS;AACxB,iBAAiB,MAAM;AACvB;AACA;AACA;AACA,UAAU,oCAAoC;AAC9C,UAAU,qCAAqC;AAC/C,UAAU;AACV;AACA;AACA,4CAA4C,kBAAkB,EAAE;AAChE;AACA;AACA;AACA,gCAAgC,qCAAqC;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB,eAAe,SAAS;AACxB,iBAAiB,MAAM;AACvB;AACA;AACA;AACA,UAAU,qCAAqC;AAC/C,UAAU,qCAAqC;AAC/C,UAAU;AACV;AACA;AACA,uCAAuC,kBAAkB,EAAE;AAC3D;AACA;AACA;AACA,2BAA2B,oCAAoC;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB,iBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB,eAAe,SAAS;AACxB,iBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,SAAS,KAAK,SAAS,GAAG,SAAS;AACtD,eAAe,SAAS,GAAG,SAAS;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB,eAAe,SAAS;AACxB,iBAAiB,MAAM;AACvB;AACA;AACA,uBAAuB,iBAAiB,GAAG,iBAAiB;AAC5D,sBAAsB,iBAAiB,GAAG,iBAAiB;AAC3D;AACA;AACA,eAAe,iBAAiB,GAAG,iBAAiB,GAAG,iBAAiB;AACxE;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB,iBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB,eAAe,SAAS;AACxB,iBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,SAAS,GAAG,SAAS,GAAG,SAAS;AACnD,eAAe,SAAS,GAAG,SAAS;AACpC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB,eAAe,SAAS;AACxB,iBAAiB,MAAM;AACvB;AACA;AACA,uBAAuB,iBAAiB,GAAG,iBAAiB,GAAG,iBAAiB;AAChF;AACA;AACA,eAAe,iBAAiB,GAAG,iBAAiB;AACpD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB,iBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB,eAAe,SAAS;AACxB;AACA,iBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB,eAAe,KAAK;AACpB,iBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB,iBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB,eAAe,SAAS;AACxB,iBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,SAAS,KAAK,SAAS,GAAG,SAAS;AACpD,eAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB,eAAe,SAAS;AACxB,iBAAiB,MAAM;AACvB;AACA;AACA,uBAAuB,iBAAiB,GAAG,iBAAiB;AAC5D,sBAAsB,iBAAiB,GAAG,iBAAiB;AAC3D;AACA;AACA,eAAe,iBAAiB,GAAG,iBAAiB;AACpD;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB,iBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB,eAAe,MAAM;AACrB,iBAAiB,OAAO;AACxB;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB,eAAe,MAAM;AACrB,iBAAiB,OAAO;AACxB;AACA;AACA;AACA,cAAc,OAAO,QAAQ,SAAS,GAAG,SAAS,GAAG;AACrD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB,eAAe,SAAS;AACxB;AACA,iBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,iBAAiB,OAAO;AACxB;AACA;AACA;AACA,UAAU,+BAA+B;AACzC,UAAU,+BAA+B;AACzC,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,SAAS;AACxB,iBAAiB,EAAE;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,SAAS;AACxB,iBAAiB,EAAE;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,qBAAqB;AACpC,iBAAiB,OAAO;AACxB;AACA;AACA,qBAAqB,QAAQ,OAAO,SAAS,EAAE;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,8BAA8B;;AAExE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA,UAAU,8BAA8B;AACxC,UAAU;AACV;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,cAAc;AACd;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc;AACd;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,EAAE;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,aAAa;AAC5B,eAAe,SAAS;AACxB,iBAAiB,OAAO;AACxB;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,aAAa;AAC5B,eAAe,SAAS;AACxB,gBAAgB,OAAO;AACvB,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,+CAA+C;AACzD,UAAU;AACV;AACA;AACA;AACA,uBAAuB,oCAAoC;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,aAAa;AAC5B,eAAe,SAAS;AACxB,iBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA,UAAU,8CAA8C;AACxD,UAAU;AACV;AACA;AACA,oCAAoC,kBAAkB,EAAE;AACxD;AACA;AACA;AACA,wBAAwB,4BAA4B;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,aAAa;AAC5B,eAAe,SAAS;AACxB,eAAe,OAAO;AACtB,iBAAiB,EAAE;AACnB;AACA;AACA;AACA,UAAU,+CAA+C;AACzD,UAAU,gDAAgD;AAC1D,UAAU;AACV;AACA;AACA,kCAAkC,mBAAmB,EAAE;AACvD;AACA;AACA;AACA,sBAAsB,2BAA2B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,aAAa;AAC5B,eAAe,SAAS;AACxB,eAAe,OAAO;AACtB,iBAAiB,EAAE;AACnB;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,aAAa;AAC5B,eAAe,SAAS;AACxB,iBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,aAAa;AAC5B,eAAe,SAAS;AACxB,iBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,aAAa;AAC5B,eAAe,SAAS;AACxB,eAAe,OAAO;AACtB,iBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,aAAa;AAC5B,eAAe,SAAS;AACxB,iBAAiB,aAAa;AAC9B;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,kBAAkB,iBAAiB;AACnC;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,aAAa;AAC5B,eAAe,SAAS;AACxB,iBAAiB,aAAa;AAC9B;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,aAAa;AAC5B,eAAe,SAAS;AACxB,iBAAiB,OAAO;AACxB;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,oBAAoB;AACnC,eAAe,EAAE;AACjB,eAAe,OAAO;AACtB,gBAAgB,OAAO;AACvB,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,aAAa;AAC5B,eAAe,sBAAsB;AACrC;AACA,eAAe,KAAK;AACpB,iBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,aAAa;AAC5B,eAAe,SAAS;AACxB,iBAAiB,OAAO;AACxB;AACA;AACA;AACA,UAAU,4BAA4B;AACtC,UAAU;AACV;AACA;AACA;AACA;AACA,QAAQ;AACR,cAAc,OAAO,4BAA4B,QAAQ,8BAA8B;AACvF;AACA;AACA,cAAc,UAAU,4BAA4B,YAAY,8BAA8B;AAC9F;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,aAAa;AAC5B,eAAe,SAAS;AACxB,iBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,iBAAiB;AAC/B;AACA;AACA;AACA,UAAU,mBAAmB;AAC7B,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,aAAa;AAC5B,eAAe,qCAAqC;AACpD;AACA,eAAe,SAAS;AACxB,gBAAgB,OAAO;AACvB,iBAAiB,MAAM;AACvB;AACA;AACA;AACA,UAAU,8BAA8B;AACxC,UAAU,8BAA8B;AACxC,UAAU,8BAA8B;AACxC,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,aAAa;AAC5B,eAAe,SAAS;AACxB,iBAAiB,MAAM;AACvB;AACA;AACA;AACA,UAAU,gDAAgD;AAC1D,UAAU,+CAA+C;AACzD,UAAU;AACV;AACA;AACA,uCAAuC,iBAAiB,EAAE;AAC1D;AACA;AACA;AACA,2BAA2B,4BAA4B;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,cAAc,iBAAiB,EAAE;;AAEtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,aAAa;AAC5B,eAAe,SAAS;AACxB,eAAe,EAAE;AACjB,iBAAiB,EAAE;AACnB;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,iBAAiB,yBAAyB;AAC1C;AACA;AACA,QAAQ,IAAI;AACZ,cAAc,8BAA8B;AAC5C;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,aAAa;AAC5B,eAAe,SAAS;AACxB,eAAe,EAAE;AACjB,iBAAiB,EAAE;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,aAAa;AAC5B,eAAe,SAAS;AACxB,iBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA,UAAU,+CAA+C;AACzD,UAAU;AACV;AACA;AACA,oCAAoC,kBAAkB,EAAE;AACxD;AACA;AACA;AACA,wBAAwB,4BAA4B;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,aAAa;AAC5B,iBAAiB,EAAE;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,aAAa;AAC5B,eAAe,OAAO;AACtB,gBAAgB,OAAO;AACvB,iBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,aAAa;AAC5B,iBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,oBAAoB;AACnC,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA,eAAe,iBAAiB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,aAAa;AAC5B,eAAe,SAAS;AACxB,gBAAgB,OAAO;AACvB,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,mCAAmC;AAC7C,UAAU;AACV;AACA;AACA;AACA,sBAAsB,oCAAoC;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,aAAa;AAC5B,eAAe,yBAAyB;AACxC;AACA,iBAAiB,MAAM;AACvB;AACA;AACA;AACA,UAAU,8BAA8B;AACxC,UAAU,8BAA8B;AACxC,UAAU,8BAA8B;AACxC,UAAU;AACV;AACA;AACA,qCAAqC,eAAe,EAAE;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,SAAS;AACxB,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,oBAAoB,iCAAiC;AACrD,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB,eAAe,OAAO;AACtB,gBAAgB,OAAO;AACvB,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,SAAS;AACxB,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB,eAAe,EAAE;AACjB,eAAe,KAAK;AACpB,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,KAAK;AACpB,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB,eAAe,OAAO;AACtB,gBAAgB,OAAO;AACvB,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB,eAAe,OAAO;AACtB,gBAAgB,OAAO;AACvB,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB,eAAe,OAAO;AACtB,eAAe,OAAO,YAAY;AAClC,eAAe,QAAQ;AACvB;AACA,eAAe,OAAO;AACtB;AACA,eAAe,QAAQ;AACvB;AACA,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,kDAAkD,kBAAkB;AACpeAAe,SAAS;AACxB,eAAe,KAAK;AACpB,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB,eAAe,OAAO;AACtB,eAAe,KAAK;AACpB,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB,eAAe,SAAS;AACxB,iBAAiB,SAAS;AAC1B;AACA;AACA,qBAAqB;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB,eAAe,yBAAyB;AACxC;AACA,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB,eAAe,KAAK;AACpB,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB,eAAe,KAAK;AACpB,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB,eAAe,qBAAqB;AACpC,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB,eAAe,OAAO;AACtB,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB,eAAe,OAAO;AACtB,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB,eAAe,OAAO;AACtB,eAAe,OAAO,YAAY;AAClC,eAAe,QAAQ;AACvB;AACA,eAAe,QAAQ;AACvB;AACA,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,oBAAoB;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,SAAS;AACxB,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,iBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA,oBAAoB,SAAS;AAC7B,eAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,iBAAiB,EAAE;AACnB;AACA;AACA;AACA,uBAAuB,SAAS,GAAG,SAAS;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,SAAS;AACxB,iBAAiB,EAAE;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,iBAAiB,EAAE;AACnB;AACA;AACA;AACA,uBAAuB,SAAS,GAAG,SAAS;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,SAAS;AACxB,iBAAiB,EAAE;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,iBAAiB,QAAQ;AACzB;AACA;AACA,qBAAqB;AACrB;AACA,6BAA6B,mBAAmB,cAAc,EAAE,EAAE;AAClE;AACA;AACA,6BAA6B,mBAAmB,cAAc,EAAE,EAAE;AAClE;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,iBAAiB,QAAQ;AACzB;AACA;AACA,qBAAqB;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA,iCAAiC,kBAAkB,EAAE;AACrD;AACA;AACA;AACA;AACA;AACA,kDAAkD,kBAAkB,EAAE;AACtE;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,SAAS;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,iBAAiB,QAAQ;AACzB;AACA;AACA,qBAAqB;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,SAAS;AACxB,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,iBAAiB,QAAQ;AACzB;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,iBAAiB,QAAQ;AACzB;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,iBAAiB,QAAQ;AACzB;AACA;AACA,qBAAqB;AACrB;AACA,0BAA0B,SAAS;AACnC;AACA;AACA,0BAA0B,SAAS;AACnC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,SAAS;AACxB,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,iBAAiB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,iBAAiB,MAAM;AACvB;AACA;AACA,kBAAkB,iBAAiB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,SAAS;AAC1B,cAAc;AACd;AACA,iBAAiB,SAAS;AAC1B,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,UAAU;AACzB,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,SAAS;AAC1B,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,UAAU;AACzB,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,SAAS;AAC5B,cAAc;AACd;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,UAAU;AACzB,eAAe,SAAS;AACxB,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,SAAS,GAAG,SAAS,GAAG,SAAS;AAClD,cAAc;AACd;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,UAAU;AACzB,eAAe,SAAS;AACxB,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,SAAS,GAAG,SAAS,GAAG,SAAS;AAClD,cAAc;AACd;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,qBAAqB;AACpC,iBAAiB,MAAM;AACvB;AACA;AACA,qBAAqB,QAAQ,OAAO,SAAS,EAAE;AAC/C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,UAAU;AACzB,iBAAiB,OAAO;AACxB;AACA;AACA;AACA,mBAAmB,SAAS,GAAG,SAAS,GAAG,SAAS;AACpD,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,UAAU;AACzB,iBAAiB,OAAO;AACxB;AACA;AACA;AACA,uBAAuB,OAAO,SAAS,EAAE,GAAG,OAAO,iBAAiB,EAAE;AACtE,cAAc,OAAO,iBAAiB;AACtC;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,SAAS;AACxB,iBAAiB,iBAAiB;AAClC;AACA;AACA;AACA;AACA,qBAAqB,4BAA4B;AACjD,qBAAqB,6BAA6B;AAClD,qBAAqB;AACrB;AACA;AACA,qCAAqC,mBAAmB,EAAE;AAC1D;AACA;AACA;AACA,yBAAyB,2BAA2B;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,SAAS;AACxB,iBAAiB,iBAAiB;AAClC;AACA;AACA;AACA;AACA,qBAAqB,4BAA4B;AACjD,qBAAqB,6BAA6B;AAClD,qBAAqB;AACrB;AACA;AACA,yCAAyC,mBAAmB,EAAE;AAC9D;AACA;AACA;AACA,6BAA6B,4BAA4B;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,SAAS;AACxB,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,SAAS;AACxB,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,SAAS;AACxB,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,SAAS;AACxB,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,aAAa;AAC5B,eAAe,EAAE;AACjB,iBAAiB,EAAE;AACnB;AACA;AACA,qBAAqB,QAAQ,OAAO,SAAS,EAAE;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,aAAa;AAC5B,iBAAiB,QAAQ;AACzB;AACA;AACA,qBAAqB,OAAO,SAAS;AACrC,6BAA6B,gBAAgB,SAAS,GAAG;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,aAAa;AAC5B,iBAAiB,QAAQ;AACzB;AACA;AACA,8BAA8B,gBAAgB,SAAS,GAAG;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB,OAAO;AACxB;AACA;AACA,qBAAqB;AACrB;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,SAAS;AACxB,iBAAiB,OAAO;AACxB;AACA;AACA,qBAAqB;AACrB;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,QAAQ;AACR,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,aAAa;AAC5B,eAAe,KAAK;AACpB,iBAAiB,EAAE;AACnB;AACA;AACA,qBAAqB,QAAQ,OAAO,oBAAoB,EAAE;AAC1D;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,SAAS;AACxB,iBAAiB,OAAO;AACxB;AACA;AACA;AACA,kBAAkB,iBAAiB;AACnC;AACA,QAAQ;AACR,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,SAAS;AACxB,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA,qBAAqB,+BAA+B;AACpD,qBAAqB;AACrB;AACA;AACA,uCAAuC,cAAc,EAAE;AACvD,cAAc,2BAA2B;AACzC;AACA;AACA;AACA,cAAc,2BAA2B;AACzC;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,UAAU;AACzB,iBAAiB,OAAO;AACxB;AACA;AACA;AACA,gBAAgB,SAAS,GAAG,SAAS;AACrC;AACA;AACA;AACA,gBAAgB,SAAS,GAAG,SAAS;AACrC;AACA;AACA;AACA,cAAc,QAAQ,iBAAiB,GAAG,iBAAiB;AAC3D;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,UAAU;AACzB,eAAe,SAAS;AACxB,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,oBAAoB;AACpB;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,KAAK;;AAEL;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,qBAAqB;AACpC,iBAAiB,OAAO;AACxB;AACA;AACA,qBAAqB;AACrB;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,SAAS;AACxB,iBAAiB,OAAO;AACxB;AACA;AACA,qBAAqB;AACrB;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,qBAAqB;AACpC,iBAAiB,OAAO;AACxB;AACA;AACA,qBAAqB;AACrB;AACA;AACA,cAAc;AACd;AACA;AACA,gCAAgC;AAChC,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,SAAS;AACxB,iBAAiB,OAAO;AACxB;AACA;AACA,qBAAqB;AACrB;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,aAAa;AAC5B,eAAe,EAAE;AACjB,iBAAiB,EAAE;AACnB;AACA;AACA,qBAAqB,QAAQ,OAAO,+BAA+B,EAAE;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,aAAa;AAC5B,eAAe,EAAE;AACjB,iBAAiB,OAAO;AACxB;AACA;AACA,qBAAqB,QAAQ,OAAO,SAAS,EAAE;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,aAAa;AAC5B,eAAe,EAAE;AACjB,eAAe,SAAS;AACxB,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA,cAAc,OAAO,WAAW;AAChC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,SAAS;AACxB,eAAe,EAAE;AACjB,iBAAiB,EAAE;AACnB;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,oBAAoB,yBAAyB;AAC7C;AACA,QAAQ,IAAI;AACZ,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,aAAa;AAC5B,iBAAiB,QAAQ;AACzB;AACA;AACA,qBAAqB,QAAQ,OAAO,SAAS,EAAE;AAC/C;AACA;AACA;AACA;AACA,cAAc,QAAQ,QAAQ,EAAE;AAChC;AACA;AACA;AACA;AACA;AACA,cAAc,QAAQ,QAAQ,EAAE;AAChC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,aAAa;AAC5B,eAAe,SAAS;AACxB,iBAAiB,OAAO;AACxB;AACA;AACA,qBAAqB,QAAQ,OAAO,SAAS,EAAE;AAC/C;AACA,iDAAiD,cAAc,EAAE;AACjE;AACA;AACA;AACA,iDAAiD,sBAAsB,EAAE;AACzE;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,aAAa;AAC5B,eAAe,SAAS;AACxB,eAAe,SAAS;AACxB,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA,cAAc,OAAO,WAAW;AAChC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,QAAQ;AACvB,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB,OAAO;AACxB;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,kCAAkC,KAAK;AACvC;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,gBAAgB,OAAO;AACvB,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,gBAAgB,OAAO;AACvB,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,cAAc;AAC7B,eAAe,gBAAgB;AAC/B,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,cAAc;AAC7B,eAAe,OAAO;AACtB,iBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO,YAAY;AAClC,eAAe,OAAO;AACtB;AACA,eAAe,OAAO;AACtB;AACA,eAAe,OAAO;AACtB;AACA,eAAe,OAAO;AACtB;AACA,eAAe,OAAO;AACtB;AACA,eAAe,OAAO;AACtB;AACA,gBAAgB,OAAO;AACvB,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA,iBAAiB,iBAAiB;AAClC;AACA;AACA;AACA;AACA,iBAAiB,sBAAsB;AACvC,qBAAqB,UAAU;AAC/B;AACA;AACA,sEAAsE,2BAA2B,EAAE;AACnG,iBAAiB,8BAA8B;AAC/C;AACA;AACA;AACA,4DAA4D;AAC5D,iBAAiB,mBAAmB;AACpC;AACA;AACA;AACA;AACA,0CAA0C,OAAO;AACjD,iBAAiB,oBAAoB;AACrC;AACA;AACA;AACA;AACA,iBAAiB,qBAAqB;AACtC;AACA;AACA;AACA,qDAAqD,2BAA2B,EAAE;AAClF,wCAAwC,aAAa,eAAe,EAAE;AACtE,iBAAiB,8BAA8B;AAC/C;AACA;AACA;AACA,wDAAwD,qCAAqC;AAC7F;AACA;AACA;AACA;AACA,0DAA0D,qBAAqB;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,YAAY;AACvD,0CAA0C,QAAQ;AAClD,iBAAiB,qBAAqB;AACtC;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,+BAA+B;;AAE/B,mCAAmC;AACnC;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,wBAAwB;AAC/C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;;AAEP,mBAAmB;;AAEnB;AACA;AACA;AACA;AACA,8BAA8B,mBAAmB;AACjD;AACA;AACA;AACA;AACA,4CAA4C;;AAE5C;AACA,uDAAuD;AACvD;AACA;AACA,6BAA6B,EAAE;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C,+BAA+B,iCAAiC;AAChE,cAAc;AACd;AACA;AACA,sBAAsB;;AAEtB;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,gBAAgB,OAAO;AACvB,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,gBAAgB,OAAO;AACvB,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,gBAAgB,OAAO;AACvB,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO,YAAY;AAClC,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,cAAc;AAC7B,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iCAAiC;AACjC,aAAa,QAAQ,QAAQ,UAAU,aAAa;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB,OAAO;AACxB;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,cAAc;AAC7B,gBAAgB,OAAO;AACvB,iBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB,eAAe,KAAK;AACpB,iBAAiB,EAAE;AACnB;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,qBAAqB;AACpC,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA,qBAAqB,SAAS;AAC9B,sBAAsB,kBAAkB;AACxC;AACA;AACA;AACA,aAAa,iBAAiB;AAC9B;AACA;AACA,aAAa,iBAAiB;AAC9B;AACA;AACA,aAAa,qBAAqB;AAClC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA,UAAU,iBAAiB;AAC3B,UAAU;AACV;AACA;AACA,qCAAqC,mBAAmB,cAAc,EAAE,EAAE;AAC1E,eAAe,iBAAiB;AAChC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,iBAAiB,SAAS;AAC1B;AACA;AACA,4CAA4C,SAAS;AACrD;AACA;AACA,eAAe,SAAS,GAAG,SAAS;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,iBAAiB,EAAE;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,yBAAyB;AACxC,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,yBAAyB;AACxC,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,iBAAiB,EAAE;AACnB;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA,UAAU,8CAA8C;AACxD,UAAU;AACV;AACA;AACA;AACA,mCAAmC,mCAAmC;AACtE,eAAe,8CAA8C;AAC7D;AACA;AACA;AACA,eAAe,4BAA4B;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA,UAAU,yBAAyB;AACnC,UAAU;AACV;AACA;AACA,oCAAoC,iBAAiB;AACrD,eAAe,yBAAyB;AACxC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,aAAa;AAC5B,eAAe,EAAE;AACjB,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA,UAAU,yBAAyB;AACnC,UAAU;AACV;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,aAAa;AAC5B,eAAe,KAAK;AACpB,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA,UAAU,OAAO,qBAAqB,EAAE;AACxC,UAAU,OAAO,qBAAqB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,KAAK;AACpB,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,gBAAgB;AAC/B,eAAe,OAAO;AACtB,eAAe,OAAO,YAAY;AAClC,eAAe,QAAQ;AACvB,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,gBAAgB,mBAAmB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,mBAAmB,GAAG,iBAAiB;AACvD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,4BAA4B,qDAAqD;AACjF;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,yBAAyB;AACxC;AACA,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,yBAAyB;AACxC;AACA,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,yBAAyB;AACxC;AACA,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,aAAa;AAC5B,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA,UAAU,OAAO,SAAS,EAAE;AAC5B,UAAU,OAAO,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,iBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,iBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA,gBAAgB,IAAI;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,kEAAkE;AAClE;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,SAAS;AACxB,iBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,iBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB,iBAAiB,EAAE;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB,eAAe,SAAS;AACxB,iBAAiB,EAAE;AACnB;AACA;AACA,uBAAuB,SAAS,GAAG,SAAS;AAC5C;AACA,qCAAqC,YAAY,EAAE;AACnD,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB,eAAe,SAAS;AACxB,iBAAiB,OAAO;AACxB;AACA;AACA,uBAAuB,SAAS,GAAG,SAAS,GAAG,SAAS,GAAG,SAAS;AACpE;AACA,sCAAsC,YAAY,EAAE;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB,iBAAiB,EAAE;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB,eAAe,SAAS;AACxB,iBAAiB,EAAE;AACnB;AACA;AACA,uBAAuB,SAAS,GAAG,SAAS;AAC5C;AACA,qCAAqC,YAAY,EAAE;AACnD,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB,eAAe,SAAS;AACxB,iBAAiB,OAAO;AACxB;AACA;AACA,uBAAuB,SAAS,GAAG,SAAS,GAAG,SAAS,GAAG,SAAS;AACpE;AACA,qCAAqC,YAAY,EAAE;AACniBAAiB;;AAE5B;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mCAAmC,4DAA4D;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA,oBAAoB,yCAAyC;AAC7D;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AAAA;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;AChthBD;AACA;AACA;AACA,kDAAkD;AAClD;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA,qDAAqD,kBAAkB,EAAE;AACzE;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,kBAAkB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,CAAC;AACD;AACA,gC;;;;;;;AC9IA;AACA;AACA;AACA,kDAAkD;AAClD;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA,iC;;;;;;;ACbA;AACA;AACA;AACA,kDAAkD;AAClD;AACA;AACA;AACA;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,kD;;;;;;;ACzCA;AACA;AACA;AACA,kDAAkD;AAClD;AACA;AACA;AACA;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oEAAoE,mCAAmC,EAAE;AACzG;AACA,qEAAqE,kCAAkC,EAAE;AACzG,oEAAoE,wBAAwB,EAAE;AAC9F;AACA;AACA;AACA,CAAC;AACD;AACA,6C;;;;;;;ACtCA;AACA;AACA;AACA,kDAAkD;AAClD;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA,iC;;;;;;;ACfA;AACA;AACA;AACA,kDAAkD;AAClD;AACA;AACA;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA,mCAAmC,mBAAmB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,qBAAqB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,wDAAwD;AACtF;AACA,oBAAoB;AACpB;AACA,2EAA2E,iCAAiC,EAAE;AAC9G;AACA,gEAAgE,yBAAyB,EAAE;AAC3F,+DAA+D,iCAAiC,EAAE;AAClG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,oC;;;;;;;AC3DA;AACA;AACA;AACA,kDAAkD;AAClD;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA,iC;;;;;;;ACZA;AACA;AACA;AACA,kDAAkD;AAClD;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,mBAAmB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE,oEAAoE,EAAE;AACxI,8FAA8F,2CAA2C,EAAE;AAC3I;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,6CAA6C;AACxF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,mC;;;;;;;AC3NA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;;;;;;;;ACTA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC5FA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAcoCAAoC,wDAAwD,EAAE;AAC9F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;AClNA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,gBAAgB;AAC/B,eAAe,gBAAgB;AAC/B;AACA;AACA,qCAAqC,wBAAwB;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,gBAAgB;AAC/B,gBAAgB,eAAe;AAC/B;AACA;AACA,+BAA+B,qBAAqB;AACpD,gCAAgC,8BAA8B;AAC9D;AACA;AACA;AACA;AACA;AACA,mDAAmD,kCAAkC,EAAE;AACvF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,0BAA0B;AACzC,eAAe,aAAa;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B,0BAA0B;AAC1B;AACA;AACA,0BAA0B;AAC1B,0BAA0B;AAC1B;AACA;AACA,0BAA0B;AAC1B,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,0BAA0B;AACzC,eAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D;AAC1D;AACA,8BAA8B;AAC9B;AACA,+DAA+D;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,+DAA+D,qDAAqD,EAAE;AACtH,iEAAiE,sDAAsD,EAAE;AACzH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;AC7VA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,kBAAkB;AACjC,eAAe,gBAAgB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,6BAA6B,EAAE;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,6BAA6B,EAAE;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,oFAAoF,sCAAsC,EAAE;AAC5H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,4CAA4C,EAAE;AACxG,uBAAuB,wCAAwC;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;AC7RA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAceAAe,oBAAoB;AACnC,iBAAiB,iBAAiB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,oBAAoB;AACnC,iBAAiB,iBAAiB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,oBAAoB;AACnC,iBAAiB,iBAAiB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,oBAAoB;AACnC,iBAAiB,iBAAiB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,oBAAoB;AACnC,iBAAiB,iBAAiB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,oBAAoB;AACnC,iBAAiB,iBAAiB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D,mDAAmD,EAAE;AACnH,yDAAyD,8CAA8C,EAAE;AACzG,4DAA4D,iDAAiD,EAAE;AAC/G;AACA;AACA;AACA,CAAC;AACD;;;;;;;;AClLA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,yBAAyB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB,eAAe,MAAM;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,uBAAuB;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,gBAAgB,EAAE;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,gBAAgB,EAAE;AACrE;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;AC/IA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,yBAAyB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,uBAAuB;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,6DAA6D;AAClG;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,iBAAiB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,2DAA2D,EAAE;AAChH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,iCAAiC;AACxE;AACA;AACA;AACA;AACA;AACA,2CAA2C,uDAAuD;AAClG;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,gBAAgB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,qDAAqD;AAC5F,uCAAuC,gBAAgB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD;AAChD,kCAAkC;AAClC;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,8BAA8B,EAAE;AACnE;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,qDAAqD,4BAA4B,EAAE;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;ACzPA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,oBAAoB;AACnC;AACA;AACA;AACA;AACA,eAAe,cAAc;AAC7B;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA,iCAAiC,cAAc;AAC/C,uCAAuC,mBAAmB;AAC1D,kCAAkC,qBAAqB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,kBAAkB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA,uBAAuB,iBAAiB;AACxC;AACA;AACA;AACA,sBAAsB,yBAAyB;AAC/C;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,qBAAqB;AACvD,mCAAmC,sBAAsB;AACzD,iCAAiC,aAAa;AAC9C,8BAA8B,WAAW;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB;AACjB;AACA;AACA;AACA;AACA,uBAAuB,cAAc;AACrC;AACA;AACA;AACA,sBAAsB,+BAA+B;AACrD;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA,8DAA8D,8BAA8B,EAAE;AAC9F;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA,qEAAqE,uBAAuB,EAAE;AAC9F;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,YAAY;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,uBAAuB;AACzE;AACA;AACA;AACA;AACA;AACA,qFAAqF,4BAA4B,EAAE;AACnH;AACA,SAAS;AACT,oDAAoD,iCAAiC;AACrF,oDAAoD,UAAU;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iFAAiF,oEAAoE,EAAE;AACvJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,+CAA+C,6BAA6B;AAC5G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,wDAAwD,2BAA2B;AACjH;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gEAAgE,KAAK;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA,yBAAyB;AACzB;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,2BAA2B,wBAAwB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,0DAA0D,6DAA6D,EAAE;AACzH;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,sBAAsB;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;ACtfA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;AC9CA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,+BAA+B;AAC9C;AACA;AACA;AACA,8BAA8B,WAAW;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,uBAAuB,iBAAiB;AACxC,2BAA2B,iBAAiB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,iBAAiB;AACxC,2BAA2B,iBAAiB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,iBAAiB,UAAU;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,UAAU;AACzB,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,iBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,iBAAiB;AACxC,2BAA2B,iBAAiB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,sBAAsB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2FAA2F,uCAAuC,EAAE;AACpI,8FAA8F,sCAAsC,EAAE;AACtI;AACA;AACA,+DAA+D,0BAA0B,EAAE;AAC3F,+DAA+D,0BAA0B,EAAE;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qEAAqE,UAAU,EAAE;AACjF,uEAAuE,UAAU,EAAE;AACnF;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE,oBAAoB,EAAE;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uEAAuE,oBAAoB,EAAE;AAC7F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,sBAAsB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,mCAAmC;AAChF;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,sCAAsC,EAAE;AAC7F;AACA;AACA,2DAA2D,uCAAuC,EAAE;AACpG;AACA;AACA,uBAAuB,WAAW;AAClC;AACA;AACA;AACA;AACA,2BAA2B,WAAW;AACtC;AACA;AACA;AACA;AACA;AACA,uBAAuB,WAAW;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D,eAAe,EAAE;AAC7E;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,kCAAkC,EAAE;AACjF;AACA;AACA;AACA,oCAAoC,sCAAsC,eAAe,EAAE,QAAQ;AACnG,kDAAkD,4CAA4C;AAC9F;AACA;AACA;AACA,CAAC;AACD;;;;;;;;ACpYA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;ACvCA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,+BAA+B;AACrD,0BAA0B,+CAA+C;AACzE,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;ACxDA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,+BAA+B;AACrD,0BAA0B,8CAA8C;AACxE,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;ACxDA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kFAAkF,iCAAiC;AACnH,gFAAgF,+BAA+B;AAC/G;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,YAAY;AAC3B,gBAAgB,gBAAgB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,YAAY;AAC3B,gBAAgB,gBAAgB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,YAAY;AAC3B,gBAAgB,gBAAgB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,YAAY;AAC3B,gBAAgB,gBAAgB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;ACrFA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA,gDAAgD,qFAAqF;AACrI;AACA;AACA;AACA;AACA,0BAA0B,6EAA6E;AACvG;AACA,0BAA0B,mFAAmF;AAC7G;AACA,0BAA0B,yEAAyE;AACnG;AACA,0BAA0B,4EAA4E;AACtG;AACA;AACA;AACA;AACA,gEAAgE;AAChE;AACA,eAAe,WAAW;AAC1B,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,cAAc;AAC7B,gBAAgB,kBAAkB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,cAAc;AAC7B,gBAAgB,kBAAkB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,cAAc;AAC7B,gBAAgB,kBAAkB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,cAAc;AAC7B,gBAAgB,kBAAkB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,cAAc;AAC7B,gBAAgB,kBAAkB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,cAAc;AAC7B,gBAAgB,kBAAkB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,cAAc;AAC7B,gBAAgB,kBAAkB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,cAAc;AAC7B,gBAAgB,kBAAkB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,cAAc;AAC7B,gBAAgB,kBAAkB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,cAAc;AAC7B,gBAAgB,kBAAkB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,mBAAmB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;AC1LA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,WAAW;AAC1B;AACA;AACA;AACA;AACA;AACA,0BAA0B,sFAAsF;AAChH;AACA,0BAA0B,qFAAqF;AAC/G;AACA,0BAA0B,oFAAoF;AAC9G;AACA,0BAA0B,uFAAuF;AACjH;AACA;AACA;AACA;AACA,kDAAkD;AAClD;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,cAAc;AAC7B,gBAAgB,kBAAkB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,cAAc;AAC7B,gBAAgB,kBAAkB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,cAAc;AAC7B,gBAAgB,kBAAkB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,cAAc;AAC7B,gBAAgB,kBAAkB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,cAAc;AAC7B,gBAAgB,kBAAkB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,cAAc;AAC7B,gBAAgB,kBAAkB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,cAAc;AAC7B,gBAAgB,kBAAkB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,cAAc;AAC7B,gBAAgB,kBAAkB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,mBAAmB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,oBAAoB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;ACpKA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA,0CAA0C,4CAA4C;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,OAAO;AAClC,2BAA2B,OAAO;AAClC;AACA;AACA;AACA,2BAA2B,OAAO;AAClC,2BAA2B,OAAO;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,gBAAgB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;ACpFA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AClDA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,yCAAyC;AACjG,sDAAsD,uCAAuC;AAC7F,uDAAuD,wCAAwC;AAC/F,sEAAsE,yDAAyD;AAC/H,oEAAoE,uDAAuD;AAC3H,gEAAgE,mCAAmC;AACnG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,sCAAsC,EAAE;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,cAAc;AAC7B,gBAAgB,mBAAmB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,cAAc;AAC7B,gBAAgB,mBAAmB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,cAAc;AAC7B,gBAAgB,mBAAmB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,cAAc;AAC7B,gBAAgB,mBAAmB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;AC3HA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,+BAA+B;AACnF,oDAAoD,4BAA4B;AAChF,kDAAkD,6BAA6B;AAC/E,kEAAkE,+CAA+C;AACjH,iEAAiE,4CAA4C;AAC7G,gEAAgE,6CAA6C;AAC7G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,aAAa;AAC5B,iBAAiB,KAAK;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,aAAa;AAC5B,iBAAiB,KAAK;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,aAAa;AAC5B,iBAAiB,KAAK;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,aAAa;AAC5B,iBAAiB,KAAK;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,aAAa;AAC5B,iBAAiB,KAAK;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,aAAa;AAC5B,iBAAiB,KAAK;AACtB;AACA;AACA;AACA;AACA;AACA,mDAAmD,2BAA2B;AAC9E;AACA,CAAC;AACD;;;;;;;;ACzKA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,mBAAmB;AAClC,eAAe,mBAAmB;AAClC;AACA;AACA;AACA,2CAA2C,aAAa;AACxD,gDAAgD,sCAAsC;AACtF,kEAAkE,mDAAmD;AACrH,iEAAiE,8CAA8C;AAC/G,gEAAgE,iDAAiD;AACjH,mEAAmE,iDAAiD;AACpH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,gBAAgB;AAC/B;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA,eAAe,gBAAgB;AAC/B;AACA,eAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA,qCAAqC,oBAAoB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,gBAAgB,uCAAuC,qCAAqC;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,6CAA6C;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,6BAA6B,EAAE;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,qDAAqD,+CAA+C,EAAE;AACtG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,eAAe,mBAAmB;AAClC,iBAAiB,qBAAqB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,mBAAmB;AAClC,iBAAiB,qBAAqB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,mBAAmB;AAClC,iBAAiB,qBAAqB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,mBAAmB;AAClC,iBAAiB,qBAAqB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,YAAY;AAC3B,iBAAiB,KAAK;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,YAAY;AAC3B,iBAAiB,KAAK;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,aAAa;AAC5B,iBAAiB,KAAK;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,aAAa;AAC5B,iBAAiB,KAAK;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,sBAAsB;AACrC,iBAAiB,KAAK;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,sBAAsB;AACrC,iBAAiB,KAAK;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;AC5dA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,sCAAsC;AAC1F,kEAAkE,sDAAsD;AACxH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,gBAAgB;AAC/B,gBAAgB,qBAAqB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,gBAAgB;AAC/B,gBAAgB,qBAAqB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,gBAAgB;AAC/B,gBAAgB,qBAAqB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,gBAAgB;AAC/B,gBAAgB,qBAAqB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,gBAAgB;AAC/B,gBAAgB,qBAAqB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,gBAAgB;AAC/B,gBAAgB,qBAAqB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;ACxHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,6BAA6B,EAAE;AACtF;AACA;AACA;AACA;AACA;;;;;;;;ACpCA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,YAAY;AACzC;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC7EA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,gCAAgC;AAC3F;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;;;;;;;AC5EA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA,qCAAqC,0BAA0B;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,+BAA+B;AAC1E;AACA;AACA;AACA;AACA;AACA,iCAAiC,wDAAwD,EAAE;AAC3F,iCAAiC,wBAAwB;AACzD;AACA,iCAAiC,wBAAwB,EAAE;AAC3D,iCAAiC,wDAAwD;AACzF;AACA;AACA;AACA;AACA;AACA,iDAAiD,+FAA+F,EAAE;AAClJ;AACA;AACA;AACA,+DAA+D,kBAAkB,EAAE;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;AC/DA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,4CAA4C,kBAAkB,EAAE;AAChE;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,sCAAsC,EAAE;AAC1F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,4BAA4B;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,uCAAuC,EAAE;AAC9F;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,kCAAkC,4BAA4B;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB,eAAe;AACf;AACA;AACA,sBAAsB;AACtB,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,2CAA2C,EAAE;AACjF,sDAAsD,yBAAyB,EAAE;AACjF,oDAAoD,uBAAuwDAAwD,wDAAwD,EAAE;AAClH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,iDAAiD,4BAA4B,EAAE;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,iBAAiB,mEAAmE;AACpF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,8BAA8B;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,aAAa;AAC9B,iBAAiB,kCAAkC;AACnD,iBAAiB,iCAAiC;AAClD,iBAAiB,sDAAsD;AACvE;AACA;AACA;AACA,aAAa;AACb;AACA,kEAAkE,0CAA0C,EAAE;AAC9G,iEAAiE,6BAA6B,EAAE;AAChG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,gCAAgC,sBAAsB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;AClfA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,YAAY;AAC3B,eAAe,YAAY;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,mDAAmD,EAAE,kBAAkB,+CAA+C,EAAE;AAC7K;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAiE,+DAA+D;AAChI,6DAA6D,8DAA8D;AAC3H;AACA;AACA,iEAAiE,sCAAsC;AACvG,6DAA6D,6EAA6E;AAC1I;AACA;AACA,kEAAkE,+DAA+D;AACjI;AACA;AACA;AACA;AACA;AACA,kEAAkE,sCAAsC;AACxG,6DAA6D,8EAA8E;AAC3I;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,yFAAyF;AAC1G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB,iBAAiB,aAAa;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,4CAA4C,EAAE;AACzG,aAAa,mCAAmC,eAAe,EAAE;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,4BAA4B,EAAE;AAC/E;AACA;AACA;AACA;AACA;AACA,uDAAuD,iDAAiD,EAAE;AAC1G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,yBAAyB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,qBAAqB;AACvD;AACA;AACA;AACA,mEAAmE,aAAa;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;AC/UA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,4BAA4B,EAAE;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,qDAAqD,6CAA6C,EAAE;AACpG,+GAA+G,oDAAoD,EAAE,eAAe,kDAAkD,EAAE;AACxO,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,mBAAmB;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qEAAqE,0DAA0D;AAC/H,4BAA4B,sFAAsF;AAClH;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,2DAA2D;AACnG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,0EAA0E,EAAE;AAChI;AACA,iDAAiD,4BAA4B,EAAE;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,iBAAiB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;ACnPA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,+CAA+C,EAAE;AACtG;AACA;AACA,SAAS;AACT;AACA;AACA,iBAAiB,8EAA8E;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,iBAAiB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B,wBAAwB;AACxB;AACA,aAAa,+BAA+B;AAC5C,aAAa,+BAA+B;AAC5C,aAAa,+BAA+B;AAC5C,aAAa,+BAA+B;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;ACzLA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D,yBAAyB,EAAE,eAAe,2BAA2B,EAAE,eAAe,2BAA2B,EAAE,eAAe,6BAA6B,EAAE;AAC/N;AACA,SAAS;AACT,oFAAoF,2BAA2B,EAAE,eAAe,sCAAsC,EAAE;AACxK;AACA,SAAS;AACT;AACA;AACA;AACA,oDAAoD,+BAA+B;AACnkEAAkE,oEAAoE,EAAE;AACxI,SAAS;AACT;AACA,4CAA4C,4CAA4C,EAAE;AAC1F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,UAAU;AACzB,eAAe,cAAc;AAC7B,gBAAgB,SAAS;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,iBAAiB;AAChD;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,CAAC;AACD;;;;;;;;AC5NA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB,eAAe,MAAM;AACrB,eAAe,OAAO;AACtB;AACA;AACA,qCAAqC,0BAA0B;AAC/D;AACA;AACA,gEAAgE,yBAAyB,EAAE,eAAe,kCAAkC,EAAE,eAAe,gCAAgC,EAAE,eAAe,6BAA6B,EAAE;AAC7O;AACA,SAAS;AACT,sFAAsF,kCAAkC,EAAE,eAAe,gEAAgE,EAAE;AAC3M;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,qBAAqB;AACrB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,0CAA0C,UAAU,EAAE;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;ACzNA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,gCAAgC,EAAE;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,iBAAiB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,4BAA4B;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,oCAAoC;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;AC3MA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;ACvKA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA,mCAAmC,sBAAsB;AACzcAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;AC3EA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,WAAW;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;AC9EA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA,8BAA8B,WAAW;AACzC;AACA;AACA;AACA;AACA;AACA,6CAA6C,wCAAwC,cAAc,EAAE,KAAK;AAC1G;AACA;AACA;AACA;AACA;AACA;AACA,qGAAqG,WAAW,EAAE;AAClwCAAwC,yCAAyC,EAAE,EAAE,EAAE;AACtI;AACA,sDAAsD,iCAAiC,EAAE;AACzF,oDAAoD,cAAc,EAAE;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;AC7NA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0EAA0E,iCAAiC,EAAE;AAC7G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,uDAAuD,yEAAyE,EAAE;AAClI;AACA;AACA;;;;;;;;AC3CA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,QAAQ;AACvB,gBAAgB;AAChB;AACA;AACA,8BAA8B,UAAU;AACxC,gCAAgC,gBAAgB;AAChvIA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;AACA,sCAAsC,4BAA4B,EAAE;AACpE;AACA;AACA;AACA;AACA,gEAAgE;AAChE;AACA,WAAW,IAAI;AACf,YAAY,IAAI;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,YAAY,IAAI;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,4BAA4B;AACvC,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;AACA;AACA,mBAAmB,WAAW;AAC9B;AACA;AACA;AACA;AACA;;;;;;;;AC/DA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,qCAAqC,EAAE;AACrF;AACA;AACA,CAAC;AACD;;;;;;;;ACxCA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,CAAC;AACD;;;;;;;;AC/BA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,mBAAmB;AAC9B,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AChFA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA,sBAAsB,aAAa;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,qBAAqB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,qBAAqB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;AChEA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,gCAAgC;AACvD;AACA;AACA;AACA;AACA;AACA,kCAAkC,yBAAyB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,gCAAgC;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,gCAAgC;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,oDAAoD;AAC7G;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,uBAAuB,gCAAgC;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;ACpFA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA,mCAAmC,oBAAoB;AACvD;AACA;AACA,uCAAuC,oBAAoB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACzBA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,SAAS;AAChC;AACA;AACA,yBAAyB,oBAAoB;AAC7C;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,wBAAwB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,oBAAoB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;ACnGA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,cAAc;AACzB,WAAW,iBAAiB;AAC5B,WAAW,eAAe;AAC1B,YAAY,eAAe;AAC3B;AACA;AACA,mCAAmC,4BAA4B;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,wBAAwB;AACnE;AACA;AACA;AACA;AACA,2BAA2B,iBAAiB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,sBAAsB;AACjC,YAAY,EAAE,6EAA6E,EAAE;AAC7F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,kEAAkE;AAC3G;AACA;AACA,yCAAyC,kEAAkE;AAC3G;AACA;AACA,yCAAyC,kEAAkE;AAC3G;AACA;AACA,yCAAyC,kEAAkE;AAC3G;AACA,SAAS;AACT,KAAK;AACL,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B,WAAW,cAAc;AACzB,WAAW,kBAAkB;AAC7B,YAAY,iBAAiB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,iBAAiB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,IAAI;AACf,YAAY,OAAO;AACnB;AACA;AACA;AACA,CAAC;;;;;;;;AC3ID;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzDC;;AAOA;;AAOA;;AAOA;;AAOA;;AAOA;;AAOA;;AAOA;;AAOA;;AAOA;;;;;;;;;;ACjED;AAAA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,CAAC;;AAED;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,CAAC;;AAED;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,CAAC;;;;;;;;;;ACpCD;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;ACrBA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;ACVA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;ACVA;AAAA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,qCAAqC,2BAA2B;AAChE,kCAAkC,qBAAqB;;AAEvD;AACA,CAAC;;AAED;AACA;;AAEA;AACA;AACA;;AAEA,sCAAsC,2BAA2B;AACjE,mCAAmC,qBAAqB;;AAExD;AACA,CAAC;;AAED;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,wCAAwC,2BAA2B;AACnE,qCAAqC,qBAAqB;;AAE1D;AACA,CAAC;;;;;;;;;;;AC3CD;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;ACVA;AACA;AACA;;;;;;;;;;ACFA;AAAA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,CAAC;;AAED;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,CAAC;;AAED;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,CAAC;;;;;;;;;;;ACpCD;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;ACVA;AAAA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;ACbA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;ACpCA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;;;;;;;ACXA;AACA;AACA;AACA,kDAAkD;AAClD;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,iBAAiB;AACrD,+BAA+B,YAAY;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,CAAC;AACD;AACA,kC;;;;;;;ACtEA;AACA;AACA;AACA,kDAAkD;AAClD;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,yBAAyB;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,+B;;;;;;;ACrKA;AACA;AACA;AACA,kDAAkD;AAClD;AACA;AACA;AACA;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,qDAAqD;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,yC;;;;;;;AC5CA;AACA;AACA;AACA,kDAAkD;AAClD;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,sC;;;;;;;ACnDA;AACA;AACA;AACA,kDAAkD;AAClD;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,gBAAgB,EAAE,6BAA6B;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,SAAS;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,iC;;;;;;;AC1CA;AACA;AACA;AACA,kDAAkD;AAClD;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,cAAc;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,IAAI;AACnB,eAAe,IAAI;AACnB;AACA,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,aAAa,EAAE;AAC7D,8CAA8C,aAAa,EAAE;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,CAAC;AACD;AACA,mC;;;;;;;AC3EA;AACA;AACA;AACA,kDAAkD;AAClD;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,+DAA+D;AACrH;AACA,6CAA6C,0CAA0C,EAAE;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,yC;;;;;;;ACzCA;AACA;AACA;AACA,kDAAkD;AAClD;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,qC;;;;;;;AC1CA;AACA;AACA;AACA,kDAAkD;AAClD;AACA;AACA;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,mBAAmB;AACnD;AACA;AACA;AACA;AACA,mCAAmC,qEAAqE;AACxG;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,0DAA0D;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,6C;;;;;;;ACzDA;AACA;AACA;AACA,kDAAkD;AAClD;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,cAAc;AAC/C;AACA,6CAA6C;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,uCAAuC;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kC;;;;;;ACxHA;;AAEA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;;AAEA;AACA;AACA,4CAA4C;;AAE5C;;;;;;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA","file":"plottable.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"d3\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"d3\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Plottable\"] = factory(require(\"d3\"));\n\telse\n\t\troot[\"Plottable\"] = factory(root[\"d3\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_2__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 91);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap c7561deda4957978c937","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator];\r\n    return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/tslib/tslib.es6.js\n// module id = 0\n// module chunks = 0","\"use strict\";\r\n/**\r\n * Copyright 2014-present Palantir Technologies\r\n * @license MIT\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\nvar Array = require(\"./arrayUtils\");\r\nexports.Array = Array;\r\nvar Color = require(\"./colorUtils\");\r\nexports.Color = Color;\r\nvar DOM = require(\"./domUtils\");\r\nexports.DOM = DOM;\r\nvar Math = require(\"./mathUtils\");\r\nexports.Math = Math;\r\nvar RTree = require(\"./rTree\");\r\nexports.RTree = RTree;\r\nvar Stacking = require(\"./stackingUtils\");\r\nexports.Stacking = Stacking;\r\nvar Window = require(\"./windowUtils\");\r\nexports.Window = Window;\r\ntslib_1.__exportStar(require(\"./bucket\"), exports);\r\ntslib_1.__exportStar(require(\"./callbackSet\"), exports);\r\ntslib_1.__exportStar(require(\"./coerceD3\"), exports);\r\ntslib_1.__exportStar(require(\"./entityStore\"), exports);\r\ntslib_1.__exportStar(require(\"./map\"), exports);\r\ntslib_1.__exportStar(require(\"./objectUtils\"), exports);\r\ntslib_1.__exportStar(require(\"./set\"), exports);\r\ntslib_1.__exportStar(require(\"./transformAwareTranslator\"), exports);\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/utils/index.ts\n// module id = 1\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"d3\"\n// module id = 2\n// module chunks = 0","\"use strict\";\r\n/**\r\n * Copyright 2014-present Palantir Technologies\r\n * @license MIT\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\nvar d3 = require(\"d3\");\r\nvar Animators = require(\"../animators\");\r\nvar Utils = require(\"../utils\");\r\nvar Plots = require(\"./commons\");\r\nvar memoize_1 = require(\"../memoize\");\r\nvar component_1 = require(\"../components/component\");\r\nvar canvasDrawer_1 = require(\"../drawers/canvasDrawer\");\r\nvar drawer_1 = require(\"../drawers/drawer\");\r\nvar svgDrawer_1 = require(\"../drawers/svgDrawer\");\r\nvar coerceD3_1 = require(\"../utils/coerceD3\");\r\nvar makeEnum_1 = require(\"../utils/makeEnum\");\r\nvar deferredRenderer_1 = require(\"./deferredRenderer\");\r\nexports.Renderer = makeEnum_1.makeEnum([\"svg\", \"canvas\"]);\r\nvar Plot = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Plot, _super);\r\n    /**\r\n     * A Plot draws some visualization of the inputted Datasets.\r\n     *\r\n     * @constructor\r\n     */\r\n    function Plot() {\r\n        var _this = _super.call(this) || this;\r\n        /**\r\n         * Whether the backing datasets have changed since this plot's last render.\r\n         */\r\n        _this._dataChanged = false;\r\n        /**\r\n         * Mapping from attribute names to the extents ([min, max]) values that that attribute takes on.\r\n         */\r\n        _this._attrExtents = {};\r\n        _this._animate = false;\r\n        /**\r\n         * The Animators for this plot. Each plot exposes a set of \"animator key\" strings that\r\n         * define how different parts of that particular Plot animates. For instance, Rectangle\r\n         * Plots have a \"rectangles\" animator key which controls how the <rect>s are animated.\r\n         * @see animator()\r\n         *\r\n         * There are two common animators that most Plots respect: \"main\" and \"reset\". In general,\r\n         * Plots draw in two steps: first they \"reset\" their visual elements (e.g. scatter plots set\r\n         * all the dots to size 0), and then they do the \"main\" animation into the correct visualization\r\n         * (e.g. scatter plot dots grow to their specified size).\r\n         */\r\n        _this._animators = {};\r\n        /**\r\n         * Mapping from property names to the extents ([min, max]) values that that\r\n         * property takes on.\r\n         */\r\n        _this._propertyExtents = {};\r\n        _this._resetEntityStore = function () {\r\n            _this._cachedEntityStore = undefined;\r\n        };\r\n        _this._overflowHidden = true;\r\n        _this.addClass(\"plot\");\r\n        _this._datasetToDrawer = new Utils.Map();\r\n        _this._attrBindings = d3.map();\r\n        _this._includedValuesProvider = function (scale, ignoreAnchorState) {\r\n            return _this._includedValuesForScale(scale, ignoreAnchorState);\r\n        };\r\n        _this._renderCallback = function () { return _this.render(); };\r\n        _this._onDatasetUpdateCallback = function () { return _this._onDatasetUpdate(); };\r\n        _this._propertyBindings = d3.map();\r\n        var mainAnimator = new Animators.Easing().maxTotalDuration(Plot._ANIMATION_MAX_DURATION);\r\n        _this.animator(Plots.Animator.MAIN, mainAnimator);\r\n        _this.animator(Plots.Animator.RESET, new Animators.Null());\r\n        _this._deferredResetEntityStore = Utils.Window.debounce(deferredRenderer_1.DeferredRenderer.DEFERRED_RENDERING_DELAY, _this._resetEntityStore);\r\n        return _this;\r\n    }\r\n    Plot.getTotalDrawTime = function (data, drawSteps) {\r\n        return drawSteps.reduce(function (time, drawStep) { return time + drawStep.animator.totalTime(data.length); }, 0);\r\n    };\r\n    Plot.applyDrawSteps = function (drawSteps, dataset) {\r\n        var appliedDrawSteps = drawSteps.map(function (drawStep) {\r\n            var attrToProjector = drawStep.attrToProjector;\r\n            var attrToAppliedProjector = {};\r\n            Object.keys(attrToProjector).forEach(function (attr) {\r\n                attrToAppliedProjector[attr] =\r\n                    function (datum, index) { return attrToProjector[attr](datum, index, dataset); };\r\n            });\r\n            return {\r\n                attrToAppliedProjector: attrToAppliedProjector,\r\n                animator: drawStep.animator,\r\n            };\r\n        });\r\n        return appliedDrawSteps;\r\n    };\r\n    Plot.prototype.anchor = function (selection) {\r\n        selection = coerceD3_1.coerceExternalD3(selection);\r\n        _super.prototype.anchor.call(this, selection);\r\n        this._dataChanged = true;\r\n        this._resetEntityStore();\r\n        this._updateExtents();\r\n        return this;\r\n    };\r\n    Plot.prototype._setup = function () {\r\n        var _this = this;\r\n        if (this._isSetup) {\r\n            return;\r\n        }\r\n        _super.prototype._setup.call(this);\r\n        if (this._canvas != null) {\r\n            this._appendCanvasNode();\r\n        }\r\n        this._renderArea = this.content().append(\"g\").classed(\"render-area\", true);\r\n        this.datasets().forEach(function (dataset) { return _this._createNodesForDataset(dataset); });\r\n    };\r\n    Plot.prototype._appendCanvasNode = function () {\r\n        var canvasContainer = this.element().select(\".plot-canvas-container\");\r\n        if (canvasContainer.empty()) {\r\n            canvasContainer = this.element().append(\"div\").classed(\"plot-canvas-container\", true);\r\n            canvasContainer.node().appendChild(this._canvas.node());\r\n        }\r\n    };\r\n    Plot.prototype.setBounds = function (width, height, originX, originY) {\r\n        _super.prototype.setBounds.call(this, width, height, originX, originY);\r\n        this._resetEntityStore();\r\n        if (this._canvas != null) {\r\n            if (this._bufferCanvas && !this._bufferCanvasValid) {\r\n                // copy current canvas to buffer 1:1\r\n                //\r\n                // Why use a buffer canvas?\r\n                // As soon as we change the size of a canvas with css or attributes, it\r\n                // clears the contents. Without a buffer canvas, this requires\r\n                // drag-resizable charts to immediately do a full redraw while you\r\n                // drag-resize, which can cause jank. To avoid that, this buffer canvas\r\n                // stores the current canvas contents when the resize starts and redraws\r\n                // it into the resized canvas. Eventually, the deferred rendering\r\n                // callback will trigger and do a full-rez redraw. If deferred rendering\r\n                // is disabled, the buffer copy will be overwritten immediately by a\r\n                // full redraw.\r\n                this._bufferCanvas.attr(\"width\", this._canvas.attr(\"width\"));\r\n                this._bufferCanvas.attr(\"height\", this._canvas.attr(\"height\"));\r\n                var btx = this._bufferCanvas.node().getContext(\"2d\");\r\n                // for headless test compat (jest)\r\n                if (btx) {\r\n                    var originalCanvas = this._canvas.node();\r\n                    if (originalCanvas.width > 0 && originalCanvas.height > 0) {\r\n                        if (btx.canvas.width > 0 && btx.canvas.height > 0) {\r\n                            btx.drawImage(originalCanvas, 0, 0);\r\n                        }\r\n                    }\r\n                    else {\r\n                        console.warn(\"Failed to fill buffer canvas with with 0x0 canvas\");\r\n                    }\r\n                }\r\n                this._bufferCanvasValid = true;\r\n            }\r\n            // update canvas size\r\n            var ratio = (window.devicePixelRatio != null) ? window.devicePixelRatio : 1;\r\n            // update canvas width/height taking into account retina displays.\r\n            // This will also clear the canvas of any drawn elements so we should\r\n            // be sure not to computeLayout() without a render() in the future.\r\n            this._canvas.attr(\"width\", width * ratio);\r\n            this._canvas.attr(\"height\", height * ratio);\r\n            // reset the transform then set the scale factor\r\n            var ctx = this._canvas.node().getContext(\"2d\");\r\n            // null check for headless test compat (jest)\r\n            if (ctx) {\r\n                ctx.setTransform(ratio, 0, 0, ratio, 0, 0);\r\n                if (this._bufferCanvas) {\r\n                    var bufferCanvas = this._bufferCanvas.node();\r\n                    if (bufferCanvas.width > 0 && bufferCanvas.height > 0) {\r\n                        if (ctx.canvas.width > 0 && ctx.canvas.height > 0) {\r\n                            // draw buffer to current canvas at new size\r\n                            ctx.drawImage(bufferCanvas, 0, 0, width, height);\r\n                        }\r\n                    }\r\n                    else {\r\n                        console.warn(\"Failed to fill canvas with 0x0 buffer canvas\");\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return this;\r\n    };\r\n    Plot.prototype.destroy = function () {\r\n        var _this = this;\r\n        _super.prototype.destroy.call(this);\r\n        this._scales().forEach(function (scale) { return scale.offUpdate(_this._renderCallback); });\r\n        this.datasets([]);\r\n    };\r\n    /**\r\n     * Setup the DOM nodes for the given dataset. This is a separate\r\n     * step from \"creating the Drawer\" since the element may not be setup yet\r\n     * (in which case the _renderArea is null because the .element() and .content()\r\n     * are null). Also because subclasses may do more than just configure one\r\n     * single drawer (e.g. adding text drawing capabilities).\r\n     */\r\n    Plot.prototype._createNodesForDataset = function (dataset) {\r\n        var drawer = this._datasetToDrawer.get(dataset);\r\n        if (this.renderer() === \"svg\") {\r\n            drawer.useSVG(this._renderArea);\r\n        }\r\n        else {\r\n            drawer.useCanvas(this._canvas);\r\n        }\r\n        return drawer;\r\n    };\r\n    /**\r\n     * Create a new Drawer. Subclasses should override this to return\r\n     * a Drawer that draws the correct shapes for this plot.\r\n     */\r\n    Plot.prototype._createDrawer = function (dataset) {\r\n        return new drawer_1.ProxyDrawer(function () { return new svgDrawer_1.SVGDrawer(\"path\", \"\"); }, function (ctx) { return new canvasDrawer_1.CanvasDrawer(ctx, function () { }); });\r\n    };\r\n    Plot.prototype._getAnimator = function (key) {\r\n        if (this._animateOnNextRender()) {\r\n            return this._animators[key] || new Animators.Null();\r\n        }\r\n        else {\r\n            return new Animators.Null();\r\n        }\r\n    };\r\n    Plot.prototype._onDatasetUpdate = function () {\r\n        this._updateExtents();\r\n        this._dataChanged = true;\r\n        this._resetEntityStore();\r\n        this.renderLowPriority();\r\n    };\r\n    Plot.prototype.attr = function (attr, attrValue, scale) {\r\n        if (attrValue == null) {\r\n            return this._attrBindings.get(attr);\r\n        }\r\n        this._bindAttr(attr, attrValue, scale);\r\n        this.render(); // queue a re-render upon changing projector\r\n        return this;\r\n    };\r\n    Plot.prototype._bindProperty = function (property, valueOrFn, scale, postScale) {\r\n        var binding = this._propertyBindings.get(property);\r\n        var oldScale = binding != null ? binding.scale : null;\r\n        var accessor = typeof valueOrFn === \"function\" ? valueOrFn : function () { return valueOrFn; };\r\n        this._propertyBindings.set(property, { accessor: accessor, scale: scale, postScale: postScale });\r\n        if (oldScale != null) {\r\n            this._uninstallScaleForKey(oldScale, property);\r\n        }\r\n        if (scale != null) {\r\n            this._installScaleForKey(scale, property);\r\n        }\r\n        this._clearAttrToProjectorCache();\r\n    };\r\n    Plot.prototype._bindAttr = function (attr, valueOrFn, scale) {\r\n        var binding = this._attrBindings.get(attr);\r\n        var oldScale = binding != null ? binding.scale : null;\r\n        var accessor = typeof valueOrFn === \"function\" ? valueOrFn : function () { return valueOrFn; };\r\n        this._attrBindings.set(attr, { accessor: accessor, scale: scale });\r\n        if (oldScale != null) {\r\n            this._uninstallScaleForKey(oldScale, attr);\r\n        }\r\n        if (scale != null) {\r\n            this._installScaleForKey(scale, attr);\r\n        }\r\n        this._clearAttrToProjectorCache();\r\n    };\r\n    Plot.prototype._clearAttrToProjectorCache = function () {\r\n        delete this._cachedAttrToProjector;\r\n    };\r\n    Plot.prototype._getAttrToProjector = function () {\r\n        if (this._cachedAttrToProjector == null) {\r\n            var projectors = this._generateAttrToProjector();\r\n            if (Plot.OPTIMIZE_MEMOIZE_PROJECTORS) {\r\n                projectors = memoize_1.memoizeProjectors(projectors);\r\n            }\r\n            this._cachedAttrToProjector = projectors;\r\n        }\r\n        // return shallow clone of cached projector\r\n        return Utils.assign({}, this._cachedAttrToProjector);\r\n    };\r\n    Plot.prototype._generateAttrToProjector = function () {\r\n        var h = {};\r\n        this._attrBindings.each(function (binding, attr) {\r\n            h[attr] = Plot._scaledAccessor(binding);\r\n        });\r\n        var propertyProjectors = this._propertyProjectors();\r\n        Object.keys(propertyProjectors).forEach(function (key) {\r\n            if (h[key] == null) {\r\n                h[key] = propertyProjectors[key];\r\n            }\r\n        });\r\n        return h;\r\n    };\r\n    Plot.prototype.renderImmediately = function () {\r\n        _super.prototype.renderImmediately.call(this);\r\n        if (this._isAnchored) {\r\n            this._paint();\r\n            this._dataChanged = false;\r\n        }\r\n        return this;\r\n    };\r\n    Plot.prototype.renderLowPriority = function () {\r\n        this._renderCallback();\r\n        return this;\r\n    };\r\n    Plot.prototype.animated = function (willAnimate) {\r\n        if (willAnimate == null) {\r\n            return this._animate;\r\n        }\r\n        this._animate = willAnimate;\r\n        return this;\r\n    };\r\n    Plot.prototype.detach = function () {\r\n        _super.prototype.detach.call(this);\r\n        // make the domain resize\r\n        this._updateExtents();\r\n        return this;\r\n    };\r\n    /**\r\n     * @returns {Scale[]} A unique array of all scales currently used by the Plot.\r\n     */\r\n    Plot.prototype._scales = function () {\r\n        var scales = [];\r\n        this._attrBindings.each(function (binding, attr) {\r\n            var scale = binding.scale;\r\n            if (scale != null && scales.indexOf(scale) === -1) {\r\n                scales.push(scale);\r\n            }\r\n        });\r\n        this._propertyBindings.each(function (binding, property) {\r\n            var scale = binding.scale;\r\n            if (scale != null && scales.indexOf(scale) === -1) {\r\n                scales.push(scale);\r\n            }\r\n        });\r\n        return scales;\r\n    };\r\n    /**\r\n     * Updates the extents associated with each attribute, then autodomains all scales the Plot uses.\r\n     */\r\n    Plot.prototype._updateExtents = function () {\r\n        var _this = this;\r\n        this._resetEntityStore();\r\n        this._scales().forEach(function (scale) { return scale.addIncludedValuesProvider(_this._includedValuesProvider); });\r\n    };\r\n    Plot.prototype._filterForProperty = function (property) {\r\n        return null;\r\n    };\r\n    Plot.prototype.getExtentsForAttr = function (attr) {\r\n        var _this = this;\r\n        if (this._attrExtents[attr] == null) {\r\n            var thunk = memoize_1.memThunk(function () { return _this.datasets(); }, function () { return _this._attrBindings.get(attr); }, function (datasets, accScaleBinding) {\r\n                if (accScaleBinding == null || accScaleBinding.accessor == null) {\r\n                    return null;\r\n                }\r\n                return datasets.map(function (dataset) { return computeExtent(dataset, accScaleBinding, null); });\r\n            });\r\n            this._attrExtents[attr] = thunk;\r\n        }\r\n        return this._attrExtents[attr]();\r\n    };\r\n    /**\r\n     * Override in subclass to add special extents, such as included values\r\n     */\r\n    Plot.prototype.getExtentsForProperty = function (property) {\r\n        var _this = this;\r\n        if (this._propertyExtents[property] == null) {\r\n            var thunk = memoize_1.memThunk(function () { return _this.datasets(); }, function () { return _this._propertyBindings.get(property); }, function () { return _this._filterForProperty(property); }, function (datasets, accScaleBinding, filter) {\r\n                if (accScaleBinding == null || accScaleBinding.accessor == null) {\r\n                    return null;\r\n                }\r\n                return datasets.map(function (dataset) { return computeExtent(dataset, accScaleBinding, filter); });\r\n            });\r\n            this._propertyExtents[property] = thunk;\r\n        }\r\n        return this._propertyExtents[property]();\r\n    };\r\n    Plot.prototype._includedValuesForScale = function (scale, ignoreAttachState) {\r\n        var _this = this;\r\n        if (!this._isAnchored && !ignoreAttachState) {\r\n            return [];\r\n        }\r\n        var includedValues = [];\r\n        this._attrBindings.each(function (binding, attr) {\r\n            if (binding.scale === scale) {\r\n                var extents = _this.getExtentsForAttr(attr);\r\n                if (extents != null) {\r\n                    includedValues = includedValues.concat(d3.merge(extents));\r\n                }\r\n            }\r\n        });\r\n        this._propertyBindings.each(function (binding, property) {\r\n            if (binding.scale === scale) {\r\n                var extents = _this.getExtentsForProperty(property);\r\n                if (extents != null) {\r\n                    includedValues = includedValues.concat(d3.merge(extents));\r\n                }\r\n            }\r\n        });\r\n        return includedValues;\r\n    };\r\n    Plot.prototype.animator = function (animatorKey, animator) {\r\n        if (animator === undefined) {\r\n            return this._animators[animatorKey];\r\n        }\r\n        else {\r\n            this._animators[animatorKey] = animator;\r\n            return this;\r\n        }\r\n    };\r\n    Plot.prototype.renderer = function (renderer) {\r\n        var _this = this;\r\n        if (renderer === undefined) {\r\n            return this._canvas == null ? \"svg\" : \"canvas\";\r\n        }\r\n        else {\r\n            if (this._canvas == null && renderer === \"canvas\") {\r\n                // construct the canvas, remove drawer's renderAreas, set drawer's canvas\r\n                this._canvas = d3.select(document.createElement(\"canvas\")).classed(\"plot-canvas\", true);\r\n                this._bufferCanvas = d3.select(document.createElement(\"canvas\"));\r\n                if (this.element() != null) {\r\n                    this._appendCanvasNode();\r\n                }\r\n                this._datasetToDrawer.forEach(function (drawer) {\r\n                    drawer.useCanvas(_this._canvas);\r\n                });\r\n                this.render();\r\n            }\r\n            else if (this._canvas != null && renderer == \"svg\") {\r\n                this._canvas.remove();\r\n                this._canvas = null;\r\n                this._bufferCanvas = null;\r\n                this._datasetToDrawer.forEach(function (drawer) {\r\n                    drawer.useSVG(_this._renderArea);\r\n                });\r\n                this.render();\r\n            }\r\n            return this;\r\n        }\r\n    };\r\n    /**\r\n     * Adds a Dataset to the Plot.\r\n     *\r\n     * @param {Dataset} dataset\r\n     * @returns {Plot} The calling Plot.\r\n     */\r\n    Plot.prototype.addDataset = function (dataset) {\r\n        this._addDataset(dataset);\r\n        this._onDatasetUpdate();\r\n        return this;\r\n    };\r\n    Plot.prototype._addDataset = function (dataset) {\r\n        this._removeDataset(dataset);\r\n        var drawer = this._createDrawer(dataset);\r\n        this._datasetToDrawer.set(dataset, drawer);\r\n        if (this._isSetup) {\r\n            this._createNodesForDataset(dataset);\r\n        }\r\n        dataset.onUpdate(this._onDatasetUpdateCallback);\r\n        return this;\r\n    };\r\n    /**\r\n     * Removes a Dataset from the Plot.\r\n     *\r\n     * @param {Dataset} dataset\r\n     * @returns {Plot} The calling Plot.\r\n     */\r\n    Plot.prototype.removeDataset = function (dataset) {\r\n        this._removeDataset(dataset);\r\n        this._onDatasetUpdate();\r\n        return this;\r\n    };\r\n    Plot.prototype._removeDataset = function (dataset) {\r\n        if (this.datasets().indexOf(dataset) === -1) {\r\n            return this;\r\n        }\r\n        this._removeDatasetNodes(dataset);\r\n        dataset.offUpdate(this._onDatasetUpdateCallback);\r\n        this._datasetToDrawer.delete(dataset);\r\n        return this;\r\n    };\r\n    Plot.prototype._removeDatasetNodes = function (dataset) {\r\n        var drawer = this._datasetToDrawer.get(dataset);\r\n        drawer.remove();\r\n    };\r\n    Plot.prototype.datasets = function (datasets) {\r\n        var _this = this;\r\n        var currentDatasets = [];\r\n        this._datasetToDrawer.forEach(function (drawer, dataset) { return currentDatasets.push(dataset); });\r\n        if (datasets == null) {\r\n            return currentDatasets;\r\n        }\r\n        currentDatasets.forEach(function (dataset) { return _this._removeDataset(dataset); });\r\n        datasets.forEach(function (dataset) { return _this._addDataset(dataset); });\r\n        this._onDatasetUpdate();\r\n        return this;\r\n    };\r\n    Plot.prototype._generateDrawSteps = function () {\r\n        return [{ attrToProjector: this._getAttrToProjector(), animator: new Animators.Null() }];\r\n    };\r\n    Plot.prototype._additionalPaint = function (time) {\r\n        // no-op\r\n    };\r\n    /**\r\n     * _buildLightweightPlotEntities constucts {LightweightPlotEntity[]} from\r\n     * all the entities in the plot\r\n     * @param {Dataset[]} [datasets] - datasets comprising this plot\r\n     */\r\n    Plot.prototype._buildLightweightPlotEntities = function (datasets) {\r\n        var _this = this;\r\n        var lightweightPlotEntities = [];\r\n        datasets.forEach(function (dataset, datasetIndex) {\r\n            var drawer = _this._datasetToDrawer.get(dataset);\r\n            var validDatumIndex = 0;\r\n            var data = dataset.data();\r\n            var dataLen = data.length;\r\n            var _loop_1 = function (datumIndex) {\r\n                var datum = data[datumIndex];\r\n                var position = _this._pixelPoint(datum, datumIndex, dataset);\r\n                if (Utils.Math.isNaN(position.x) || Utils.Math.isNaN(position.y)) {\r\n                    return \"continue\";\r\n                }\r\n                var plot = _this;\r\n                lightweightPlotEntities.push({\r\n                    datum: datum,\r\n                    get position() {\r\n                        // only calculate position when needing to improve pan zoom performance #3159\r\n                        return plot._pixelPoint.call(plot, datum, datumIndex, dataset);\r\n                    },\r\n                    index: datumIndex,\r\n                    dataset: dataset,\r\n                    datasetIndex: datasetIndex,\r\n                    component: _this,\r\n                    drawer: drawer,\r\n                    validDatumIndex: validDatumIndex,\r\n                });\r\n                validDatumIndex++;\r\n            };\r\n            for (var datumIndex = 0; datumIndex < dataLen; datumIndex++) {\r\n                _loop_1(datumIndex);\r\n            }\r\n        });\r\n        return lightweightPlotEntities;\r\n    };\r\n    Plot.prototype._getDataToDraw = function () {\r\n        var dataToDraw = new Utils.Map();\r\n        this.datasets().forEach(function (dataset) { return dataToDraw.set(dataset, dataset.data()); });\r\n        return dataToDraw;\r\n    };\r\n    Plot.prototype._paint = function () {\r\n        var _this = this;\r\n        delete this._cachedAttrToProjector;\r\n        var drawSteps = this._generateDrawSteps();\r\n        var dataToDraw = this._getDataToDraw();\r\n        var drawers = this.datasets().map(function (dataset) { return _this._datasetToDrawer.get(dataset); });\r\n        if (this.renderer() === \"canvas\") {\r\n            var canvas = this._canvas.node();\r\n            var context_1 = canvas.getContext(\"2d\");\r\n            context_1.clearRect(0, 0, canvas.clientWidth, canvas.clientHeight);\r\n            this._bufferCanvasValid = false;\r\n        }\r\n        this.datasets().forEach(function (ds, i) {\r\n            var appliedDrawSteps = Plot.applyDrawSteps(drawSteps, ds);\r\n            drawers[i].draw(dataToDraw.get(ds), appliedDrawSteps);\r\n        });\r\n        var times = this.datasets().map(function (ds, i) { return Plot.getTotalDrawTime(dataToDraw.get(ds), drawSteps); });\r\n        var maxTime = Utils.Math.max(times, 0);\r\n        this._additionalPaint(maxTime);\r\n    };\r\n    /**\r\n     * Retrieves the drawn visual elements for the specified Datasets as a d3 Selection.\r\n     * Not supported on canvas renderer.\r\n     *\r\n     * @param {Dataset[]} [datasets] The Datasets to retrieve the Selections for.\r\n     *   If not provided, Selections will be retrieved for all Datasets on the Plot.\r\n     * @returns {d3.Selection}\r\n     */\r\n    Plot.prototype.selections = function (datasets) {\r\n        var _this = this;\r\n        if (datasets === void 0) { datasets = this.datasets(); }\r\n        if (this.renderer() === \"canvas\") {\r\n            // return empty selection\r\n            return d3.selectAll();\r\n        }\r\n        else {\r\n            var selections_1 = [];\r\n            datasets.forEach(function (dataset) {\r\n                var drawer = _this._datasetToDrawer.get(dataset);\r\n                if (drawer == null) {\r\n                    return;\r\n                }\r\n                var visualPrimitives = drawer.getVisualPrimitives();\r\n                selections_1.push.apply(selections_1, visualPrimitives);\r\n            });\r\n            return d3.selectAll(selections_1);\r\n        }\r\n    };\r\n    /**\r\n     * Gets the Entities associated with the specified Datasets.\r\n     *\r\n     * @param {Dataset[]} datasets The Datasets to retrieve the Entities for.\r\n     *   If not provided, returns defaults to all Datasets on the Plot.\r\n     * @return {Plots.PlotEntity[]}\r\n     */\r\n    Plot.prototype.entities = function (datasets) {\r\n        var _this = this;\r\n        return this._getEntityStore(datasets).entities().map(function (entity) { return _this._lightweightPlotEntityToPlotEntity(entity); });\r\n    };\r\n    /**\r\n     * Gets the `Plots.PlotEntity`s in the plot, whereby the\r\n     * `Plots.ILightweightPlotEntity`s are filtered by the provided predicate.\r\n     * Since `_lightweightPlotEntityToPlotEntity` can be expensive, this method\r\n     * can be useful for performance optimization.\r\n     *\r\n     * @param where A filter predicate that is applied to lightweight entities\r\n     * before upconverting them to full plot entities\r\n     * @return {Plots.PlotEntity[]}\r\n     */\r\n    Plot.prototype.filterEntities = function (where) {\r\n        var _this = this;\r\n        return this._getEntityStore()\r\n            .entities()\r\n            .filter(where)\r\n            .map(function (entity) { return _this._lightweightPlotEntityToPlotEntity(entity); });\r\n    };\r\n    /**\r\n     * _getEntityStore returns the store of all Entities associated with the specified dataset\r\n     *\r\n     * @param {Dataset[]} [datasets] - The datasets with which to construct the store. If no datasets\r\n     * are specified all datasets will be used.\r\n     */\r\n    Plot.prototype._getEntityStore = function (datasets) {\r\n        var _this = this;\r\n        var entityBoundsFactory = function (entity) { return _this._entityBounds(entity); };\r\n        if (datasets !== undefined) {\r\n            var entityStore = new Utils.EntityStore();\r\n            entityStore.addAll(this._buildLightweightPlotEntities(datasets), entityBoundsFactory, this._localOriginBounds());\r\n            return entityStore;\r\n        }\r\n        else if (this._cachedEntityStore === undefined) {\r\n            var entityStore = new Utils.EntityStore();\r\n            entityStore.addAll(this._buildLightweightPlotEntities(this.datasets()), entityBoundsFactory, this._localOriginBounds());\r\n            this._cachedEntityStore = entityStore;\r\n        }\r\n        return this._cachedEntityStore;\r\n    };\r\n    /**\r\n     * _localOriginBounds returns bounds of the plot from its own origin, rather than from parent origin (as provided by `this.bounds()`)\r\n     *\r\n     * @return {Bounds}\r\n     */\r\n    Plot.prototype._localOriginBounds = function () {\r\n        return {\r\n            topLeft: { x: 0, y: 0 },\r\n            bottomRight: { x: this.width(), y: this.height() },\r\n        };\r\n    };\r\n    Plot.prototype._entityBounds = function (entity) {\r\n        var datum = entity.datum, index = entity.index, dataset = entity.dataset;\r\n        var _a = this._pixelPoint(datum, index, dataset), x = _a.x, y = _a.y;\r\n        return { x: x, y: y, width: 0, height: 0 };\r\n    };\r\n    Plot.prototype._lightweightPlotEntityToPlotEntity = function (entity) {\r\n        var plotEntity = {\r\n            bounds: this._entityBounds(entity),\r\n            component: entity.component,\r\n            dataset: entity.dataset,\r\n            datasetIndex: entity.datasetIndex,\r\n            datum: entity.datum,\r\n            index: entity.index,\r\n            position: entity.position,\r\n            selection: d3.select(entity.drawer.getVisualPrimitiveAtIndex(entity.validDatumIndex)),\r\n        };\r\n        return plotEntity;\r\n    };\r\n    /**\r\n     * Gets the PlotEntities at a particular Point.\r\n     *\r\n     * Each plot type determines how to locate entities at or near the query\r\n     * point. For example, line and area charts will return the nearest entity,\r\n     * but bar charts will only return the entities that fully contain the query\r\n     * point.\r\n     *\r\n     * @param {Point} point The point to query.\r\n     * @returns {PlotEntity[]} The PlotEntities at the particular point\r\n     */\r\n    Plot.prototype.entitiesAt = function (point) {\r\n        throw new Error(\"plots must implement entitiesAt\");\r\n    };\r\n    /**\r\n     * Returns the {Plots.PlotEntity} nearest to the query point,\r\n     * or undefined if no {Plots.PlotEntity} can be found.\r\n     *\r\n     * @param {Point} queryPoint\r\n     * @returns {Plots.PlotEntity} The nearest PlotEntity, or undefined if no {Plots.PlotEntity} can be found.\r\n     */\r\n    Plot.prototype.entityNearest = function (queryPoint) {\r\n        var nearest = this._getEntityStore().entityNearest(queryPoint);\r\n        return nearest === undefined ? undefined : this._lightweightPlotEntityToPlotEntity(nearest);\r\n    };\r\n    Plot.prototype.entitiesIn = function (xRangeOrBounds, yRange) {\r\n        var queryBounds;\r\n        if (yRange == null) {\r\n            var bounds = xRangeOrBounds;\r\n            queryBounds = {\r\n                x: bounds.topLeft.x,\r\n                y: bounds.topLeft.y,\r\n                width: bounds.bottomRight.x - bounds.topLeft.x,\r\n                height: bounds.bottomRight.y - bounds.topLeft.y,\r\n            };\r\n        }\r\n        else {\r\n            var xRange = xRangeOrBounds;\r\n            queryBounds = {\r\n                x: xRange.min,\r\n                y: yRange.min,\r\n                width: xRange.max - xRange.min,\r\n                height: yRange.max - yRange.min,\r\n            };\r\n        }\r\n        return this.entitiesInBounds(queryBounds);\r\n    };\r\n    /**\r\n     * Returns the entites whose bounding boxes overlap the parameter.\r\n     *\r\n     * `queryBounds` are in pixel space, measured from the origin of this plot.\r\n     */\r\n    Plot.prototype.entitiesInBounds = function (queryBounds) {\r\n        var _this = this;\r\n        var found = this._getEntityStore().entitiesInBounds(queryBounds);\r\n        if (!found) {\r\n            return undefined;\r\n        }\r\n        return found.map(function (entity) { return _this._lightweightPlotEntityToPlotEntity(entity); });\r\n    };\r\n    /**\r\n     * Returns the entites whose bounding boxes overlap the `queryBounds`\r\n     * parameter on the x-axis.\r\n     *\r\n     * `queryBounds` are in pixel space, measured from the origin of this plot.\r\n     */\r\n    Plot.prototype.entitiesInXBounds = function (queryBounds) {\r\n        var _this = this;\r\n        var found = this._getEntityStore().entitiesInXBounds(queryBounds);\r\n        if (!found) {\r\n            return undefined;\r\n        }\r\n        return found.map(function (entity) { return _this._lightweightPlotEntityToPlotEntity(entity); });\r\n    };\r\n    /**\r\n     * Returns the entites whose bounding boxes overlap the `queryBounds`\r\n     * parameter on the y-axis.\r\n     *\r\n     * `queryBounds` are in pixel space, measured from the origin of this plot.\r\n     */\r\n    Plot.prototype.entitiesInYBounds = function (queryBounds) {\r\n        var _this = this;\r\n        var found = this._getEntityStore().entitiesInYBounds(queryBounds);\r\n        if (!found) {\r\n            return undefined;\r\n        }\r\n        return found.map(function (entity) { return _this._lightweightPlotEntityToPlotEntity(entity); });\r\n    };\r\n    Plot.prototype._uninstallScaleForKey = function (scale, key) {\r\n        scale.offUpdate(this._renderCallback);\r\n        scale.offUpdate(this._deferredResetEntityStore);\r\n        scale.removeIncludedValuesProvider(this._includedValuesProvider);\r\n    };\r\n    Plot.prototype._installScaleForKey = function (scale, key) {\r\n        scale.onUpdate(this._renderCallback);\r\n        scale.onUpdate(this._deferredResetEntityStore);\r\n        scale.addIncludedValuesProvider(this._includedValuesProvider);\r\n    };\r\n    Plot.prototype._propertyProjectors = function () {\r\n        return {};\r\n    };\r\n    Plot._scaledAccessor = function (binding) {\r\n        var scale = binding.scale, accessor = binding.accessor, postScale = binding.postScale;\r\n        // if provided, apply scale\r\n        var scaledAccesor = scale == null ? accessor :\r\n            function (d, i, ds) { return scale.scale(accessor(d, i, ds)); };\r\n        // if provided, apply post scale\r\n        var postScaledAccesor = postScale == null ? scaledAccesor :\r\n            function (d, i, ds) { return postScale(scaledAccesor(d, i, ds), d, i, ds); };\r\n        return postScaledAccesor;\r\n    };\r\n    Plot.prototype._pixelPoint = function (datum, index, dataset) {\r\n        return { x: 0, y: 0 };\r\n    };\r\n    Plot.prototype._animateOnNextRender = function () {\r\n        return this._animate && this._dataChanged;\r\n    };\r\n    Plot.OPTIMIZE_MEMOIZE_PROJECTORS = false;\r\n    Plot._ANIMATION_MAX_DURATION = 600;\r\n    return Plot;\r\n}(component_1.Component));\r\nexports.Plot = Plot;\r\nfunction computeExtent(dataset, accScaleBinding, filter) {\r\n    var accessor = accScaleBinding.accessor;\r\n    var scale = accScaleBinding.scale;\r\n    if (scale == null) {\r\n        return [];\r\n    }\r\n    var data = dataset.data();\r\n    if (filter != null) {\r\n        data = data.filter(function (d, i) { return filter(d, i, dataset); });\r\n    }\r\n    var appliedAccessor = function (d, i) { return accessor(d, i, dataset); };\r\n    var mappedData = data.map(appliedAccessor);\r\n    return scale.extentOfValues(mappedData);\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/plots/plot.ts\n// module id = 3\n// module chunks = 0","\"use strict\";\r\n/**\r\n * Copyright 2014-present Palantir Technologies\r\n * @license MIT\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\nvar TickGenerators = require(\"./tickGenerators\");\r\nexports.TickGenerators = TickGenerators;\r\ntslib_1.__exportStar(require(\"./categoryScale\"), exports);\r\ntslib_1.__exportStar(require(\"./colorScale\"), exports);\r\ntslib_1.__exportStar(require(\"./interpolatedColorScale\"), exports);\r\ntslib_1.__exportStar(require(\"./linearScale\"), exports);\r\ntslib_1.__exportStar(require(\"./logScale\"), exports);\r\ntslib_1.__exportStar(require(\"./modifiedLogScale\"), exports);\r\ntslib_1.__exportStar(require(\"./timeScale\"), exports);\r\n// ---------------------------------------------------------\r\nvar categoryScale_1 = require(\"./categoryScale\");\r\nvar quantitativeScale_1 = require(\"./quantitativeScale\");\r\n/**\r\n * Type guarded function to check if the scale implements the\r\n * `TransformableScale` interface. Unfortunately, there is no way to do\r\n * runtime interface typechecking, so we have to explicitly list all classes\r\n * that implement the interface.\r\n */\r\nfunction isTransformable(scale) {\r\n    return (scale instanceof quantitativeScale_1.QuantitativeScale ||\r\n        scale instanceof categoryScale_1.Category);\r\n}\r\nexports.isTransformable = isTransformable;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/scales/index.ts\n// module id = 4\n// module chunks = 0","\"use strict\";\n/**\n * Copyright 2017-present Palantir Technologies, Inc. All rights reserved.\n * Licensed under the MIT License (the \"License\"); you may obtain a copy of the\n * license at https://github.com/palantir/typesettable/blob/develop/LICENSE\n */\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./contexts\"));\n__export(require(\"./measurers\"));\n__export(require(\"./typesetter\"));\n__export(require(\"./utils\"));\n__export(require(\"./wrappers\"));\n__export(require(\"./writers\"));\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/typesettable/build/src/index.js\n// module id = 5\n// module chunks = 0","\"use strict\";\r\n/**\r\n * Copyright 2014-present Palantir Technologies\r\n * @license MIT\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar d3 = require(\"d3\");\r\nvar RenderController = require(\"../core/renderController\");\r\nvar Utils = require(\"../utils\");\r\nvar coerceD3_1 = require(\"../utils/coerceD3\");\r\nvar makeEnum_1 = require(\"../utils/makeEnum\");\r\nexports.XAlignment = makeEnum_1.makeEnum([\"left\", \"center\", \"right\"]);\r\nexports.YAlignment = makeEnum_1.makeEnum([\"top\", \"center\", \"bottom\"]);\r\n/**\r\n * Components are the core logical units that build Plottable visualizations.\r\n *\r\n * This class deals with Component lifecycle (anchoring, getting a size, and rendering\r\n * infrastructure), as well as building the framework of DOM elements for all Components.\r\n */\r\nvar Component = /** @class */ (function () {\r\n    function Component() {\r\n        /**\r\n         * Subclasses should set this to true in their constructor to prevent content from overflowing.\r\n         */\r\n        this._overflowHidden = false;\r\n        /**\r\n         * Origin of this Component relative to its parent.\r\n         */\r\n        this._origin = { x: 0, y: 0 };\r\n        this._xAlignment = \"left\";\r\n        this._yAlignment = \"top\";\r\n        this._isSetup = false;\r\n        this._isAnchored = false;\r\n        this._cssClasses = new Utils.Set();\r\n        /**\r\n         * If .destroy() has been called on this Component.\r\n         */\r\n        this._destroyed = false;\r\n        this._onAnchorCallbacks = new Utils.CallbackSet();\r\n        this._onDetachCallbacks = new Utils.CallbackSet();\r\n        this._cssClasses.add(\"component\");\r\n    }\r\n    /**\r\n     * Attaches the Component as a child of a given d3 Selection.\r\n     *\r\n     * @param {d3.Selection} selection.\r\n     * @returns {Component} The calling Component.\r\n     */\r\n    Component.prototype.anchor = function (selection) {\r\n        selection = coerceD3_1.coerceExternalD3(selection);\r\n        if (this._destroyed) {\r\n            throw new Error(\"Can't reuse destroy()-ed Components!\");\r\n        }\r\n        if (this.isRoot()) {\r\n            this._rootElement = selection;\r\n            // rootElement gets the \"plottable\" CSS class\r\n            this._rootElement.classed(\"plottable\", true);\r\n        }\r\n        if (this._element != null) {\r\n            // reattach existing element\r\n            selection.node().appendChild(this._element.node());\r\n        }\r\n        else {\r\n            this._element = selection.append(\"div\");\r\n            this._setup();\r\n        }\r\n        this._isAnchored = true;\r\n        this._onAnchorCallbacks.callCallbacks(this);\r\n        return this;\r\n    };\r\n    /**\r\n     * Adds a callback to be called on anchoring the Component to the DOM.\r\n     * If the Component is already anchored, the callback is called immediately.\r\n     *\r\n     * @param {ComponentCallback} callback\r\n     * @return {Component}\r\n     */\r\n    Component.prototype.onAnchor = function (callback) {\r\n        if (this._isAnchored) {\r\n            callback(this);\r\n        }\r\n        this._onAnchorCallbacks.add(callback);\r\n        return this;\r\n    };\r\n    /**\r\n     * Removes a callback that would be called on anchoring the Component to the DOM.\r\n     * The callback is identified by reference equality.\r\n     *\r\n     * @param {ComponentCallback} callback\r\n     * @return {Component}\r\n     */\r\n    Component.prototype.offAnchor = function (callback) {\r\n        this._onAnchorCallbacks.delete(callback);\r\n        return this;\r\n    };\r\n    /**\r\n     * Creates additional elements as necessary for the Component to function.\r\n     * Called during anchor() if the Component's element has not been created yet.\r\n     * Override in subclasses to provide additional functionality.\r\n     */\r\n    Component.prototype._setup = function () {\r\n        var _this = this;\r\n        if (this._isSetup) {\r\n            return;\r\n        }\r\n        this._cssClasses.forEach(function (cssClass) {\r\n            _this._element.classed(cssClass, true);\r\n        });\r\n        this._cssClasses = new Utils.Set();\r\n        this._backgroundContainer = this._element.append(\"svg\").classed(\"background-container\", true);\r\n        this._content = this._element.append(\"svg\").classed(\"content\", true);\r\n        this._foregroundContainer = this._element.append(\"svg\").classed(\"foreground-container\", true);\r\n        if (this._overflowHidden) {\r\n            this._content.classed(\"component-overflow-hidden\", true);\r\n        }\r\n        else {\r\n            this._content.classed(\"component-overflow-visible\", true);\r\n        }\r\n        this._isSetup = true;\r\n    };\r\n    /**\r\n     * Given available space in pixels, returns the minimum width and height this Component will need.\r\n     *\r\n     * @param {number} availableWidth\r\n     * @param {number} availableHeight\r\n     * @returns {SpaceRequest}\r\n     */\r\n    Component.prototype.requestedSpace = function (availableWidth, availableHeight) {\r\n        return {\r\n            minWidth: 0,\r\n            minHeight: 0,\r\n        };\r\n    };\r\n    /**\r\n     * Computes and sets the size, position, and alignment of the Component from the specified values.\r\n     * If no parameters are supplied and the Component is a root node,\r\n     * they are inferred from the size of the Component's element.\r\n     *\r\n     * @param {Point} [origin] Origin of the space offered to the Component.\r\n     * @param {number} [availableWidth] Available width in pixels.\r\n     * @param {number} [availableHeight] Available height in pixels.\r\n     * @returns {Component} The calling Component.\r\n     */\r\n    Component.prototype.computeLayout = function (origin, availableWidth, availableHeight) {\r\n        if (origin == null || availableWidth == null || availableHeight == null) {\r\n            if (this._element == null) {\r\n                throw new Error(\"anchor() must be called before computeLayout()\");\r\n            }\r\n            else if (this._rootElement != null) {\r\n                // retrieve height/width from rootElement\r\n                origin = { x: 0, y: 0 };\r\n                var elem = this._rootElement.node();\r\n                availableWidth = Utils.DOM.elementWidth(elem);\r\n                availableHeight = Utils.DOM.elementHeight(elem);\r\n            }\r\n            else {\r\n                throw new Error(\"null arguments cannot be passed to computeLayout() on a non-root, unanchored node\");\r\n            }\r\n        }\r\n        var _a = this._sizeFromOffer(availableWidth, availableHeight), height = _a.height, width = _a.width;\r\n        var xAlignProportion = Component._xAlignToProportion[this._xAlignment];\r\n        var yAlignProportion = Component._yAlignToProportion[this._yAlignment];\r\n        var originX = origin.x + (availableWidth - width) * xAlignProportion;\r\n        var originY = origin.y + (availableHeight - height) * yAlignProportion;\r\n        this.setBounds(width, height, originX, originY);\r\n        return this;\r\n    };\r\n    /**\r\n     * Directly sets component size and, optionally, its origin.\r\n     *\r\n     * Preferably, layout is accomplished by placing components in a table.\r\n     * However, if you need to directly override the component size, you may call\r\n     * this method.\r\n     *\r\n     * Note that this method styles the anchored element, so this is usually only\r\n     * useful after the component has been anchored. If the component has not been\r\n     * anchored to an element, the internal properties will be set but no styles\r\n     * will be applied.\r\n     *\r\n     * @param {number} [width] width in pixels\r\n     * @param {number} [height] height in pixels\r\n     * @param {number} [originX] left offset in pixels\r\n     * @param {number} [originY] top offset in pixels\r\n     */\r\n    Component.prototype.setBounds = function (width, height, originX, originY) {\r\n        if (originX === void 0) { originX = 0; }\r\n        if (originY === void 0) { originY = 0; }\r\n        this._width = width;\r\n        this._height = height;\r\n        this._origin = {\r\n            x: originX,\r\n            y: originY,\r\n        };\r\n        if (this._element != null) {\r\n            this._element.styles({\r\n                left: originX + \"px\",\r\n                height: height + \"px\",\r\n                top: originY + \"px\",\r\n                width: width + \"px\",\r\n            });\r\n        }\r\n        if (this._resizeHandler != null) {\r\n            this._resizeHandler({ width: width, height: height });\r\n        }\r\n        return this;\r\n    };\r\n    Component.prototype._sizeFromOffer = function (availableWidth, availableHeight) {\r\n        var requestedSpace = this.requestedSpace(availableWidth, availableHeight);\r\n        return {\r\n            width: this.fixedWidth() ? Math.min(availableWidth, requestedSpace.minWidth) : availableWidth,\r\n            height: this.fixedHeight() ? Math.min(availableHeight, requestedSpace.minHeight) : availableHeight,\r\n        };\r\n    };\r\n    /**\r\n     * Queues the Component for rendering.\r\n     *\r\n     * @returns {Component} The calling Component.\r\n     */\r\n    Component.prototype.render = function () {\r\n        if (this._isAnchored && this._isSetup && this.width() >= 0 && this.height() >= 0) {\r\n            RenderController.registerToRender(this);\r\n        }\r\n        return this;\r\n    };\r\n    Component.prototype.renderLowPriority = function () {\r\n        return this.render();\r\n    };\r\n    Component.prototype._scheduleComputeLayout = function () {\r\n        if (this._isAnchored && this._isSetup) {\r\n            RenderController.registerToComputeLayoutAndRender(this);\r\n        }\r\n    };\r\n    /**\r\n     * Sets a callback that gets called when the component resizes. The size change\r\n     * is not guaranteed to be reflected by the DOM at the time the callback is fired.\r\n     *\r\n     * @param {IResizeHandler} [resizeHandler] Callback to be called when component resizes\r\n     */\r\n    Component.prototype.onResize = function (resizeHandler) {\r\n        this._resizeHandler = resizeHandler;\r\n        return this;\r\n    };\r\n    /**\r\n     * Renders the Component without waiting for the next frame. This method is a no-op on\r\n     * Component, Table, and Group; render them immediately with .renderTo() instead.\r\n     */\r\n    Component.prototype.renderImmediately = function () {\r\n        return this;\r\n    };\r\n    /**\r\n     * Causes the Component to re-layout and render.\r\n     *\r\n     * @returns {Component} The calling Component.\r\n     */\r\n    Component.prototype.redraw = function () {\r\n        if (this._isAnchored && this._isSetup) {\r\n            if (this.isRoot()) {\r\n                this._scheduleComputeLayout();\r\n            }\r\n            else {\r\n                this.parent().redraw();\r\n            }\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Tell this component to invalidate any caching. This function should be\r\n     * called when a CSS change has occurred that could influence the layout\r\n     * of the Component, such as changing the font size.\r\n     *\r\n     * Subclasses should override.\r\n     */\r\n    Component.prototype.invalidateCache = function () {\r\n        // Core component has no caching.\r\n    };\r\n    /**\r\n     * Renders the Component to a given HTML Element.\r\n     *\r\n     * @param {String|d3.Selection} element The element, a selector string for the element, or a d3.Selection for the element.\r\n     * @returns {Component} The calling Component.\r\n     */\r\n    Component.prototype.renderTo = function (element) {\r\n        this.detach();\r\n        if (element != null) {\r\n            var selection = void 0;\r\n            if (typeof (element) === \"string\") {\r\n                selection = d3.select(element);\r\n            }\r\n            else if (element instanceof Element) {\r\n                selection = d3.select(element);\r\n            }\r\n            else {\r\n                selection = coerceD3_1.coerceExternalD3(element);\r\n            }\r\n            if (!selection.node() || selection.node().nodeName == null) {\r\n                throw new Error(\"Plottable requires a valid Element to renderTo\");\r\n            }\r\n            if (selection.node().nodeName === \"svg\") {\r\n                throw new Error(\"Plottable 3.x and later can only renderTo an HTML component; pass a div instead!\");\r\n            }\r\n            this.anchor(selection);\r\n        }\r\n        if (this._element == null) {\r\n            throw new Error(\"If a Component has never been rendered before, then renderTo must be given a node to render to, \" +\r\n                \"or a d3.Selection, or a selector string\");\r\n        }\r\n        RenderController.registerToComputeLayoutAndRender(this);\r\n        // flush so that consumers can immediately attach to stuff we create in the DOM\r\n        RenderController.flush();\r\n        return this;\r\n    };\r\n    Component.prototype.xAlignment = function (xAlignment) {\r\n        if (xAlignment == null) {\r\n            return this._xAlignment;\r\n        }\r\n        xAlignment = xAlignment.toLowerCase();\r\n        if (Component._xAlignToProportion[xAlignment] == null) {\r\n            throw new Error(\"Unsupported alignment: \" + xAlignment);\r\n        }\r\n        this._xAlignment = xAlignment;\r\n        this.redraw();\r\n        return this;\r\n    };\r\n    Component.prototype.yAlignment = function (yAlignment) {\r\n        if (yAlignment == null) {\r\n            return this._yAlignment;\r\n        }\r\n        yAlignment = yAlignment.toLowerCase();\r\n        if (Component._yAlignToProportion[yAlignment] == null) {\r\n            throw new Error(\"Unsupported alignment: \" + yAlignment);\r\n        }\r\n        this._yAlignment = yAlignment;\r\n        this.redraw();\r\n        return this;\r\n    };\r\n    /**\r\n     * Checks if the Component has a given CSS class.\r\n     *\r\n     * @param {string} cssClass The CSS class to check for.\r\n     */\r\n    Component.prototype.hasClass = function (cssClass) {\r\n        if (cssClass == null) {\r\n            return false;\r\n        }\r\n        if (this._element == null) {\r\n            return this._cssClasses.has(cssClass);\r\n        }\r\n        else {\r\n            return this._element.classed(cssClass);\r\n        }\r\n    };\r\n    /**\r\n     * Adds a given CSS class to the Component.\r\n     *\r\n     * @param {string} cssClass The CSS class to add.\r\n     * @returns {Component} The calling Component.\r\n     */\r\n    Component.prototype.addClass = function (cssClass) {\r\n        if (cssClass == null) {\r\n            return this;\r\n        }\r\n        if (this._element == null) {\r\n            this._cssClasses.add(cssClass);\r\n        }\r\n        else {\r\n            this._element.classed(cssClass, true);\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Removes a given CSS class from the Component.\r\n     *\r\n     * @param {string} cssClass The CSS class to remove.\r\n     * @returns {Component} The calling Component.\r\n     */\r\n    Component.prototype.removeClass = function (cssClass) {\r\n        if (cssClass == null) {\r\n            return this;\r\n        }\r\n        if (this._element == null) {\r\n            this._cssClasses.delete(cssClass);\r\n        }\r\n        else {\r\n            this._element.classed(cssClass, false);\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Checks if the Component has a fixed width or if it grows to fill available space.\r\n     * Returns false by default on the base Component class.\r\n     */\r\n    Component.prototype.fixedWidth = function () {\r\n        return false;\r\n    };\r\n    /**\r\n     * Checks if the Component has a fixed height or if it grows to fill available space.\r\n     * Returns false by default on the base Component class.\r\n     */\r\n    Component.prototype.fixedHeight = function () {\r\n        return false;\r\n    };\r\n    /**\r\n     * Detaches a Component from the DOM. The Component can be reused.\r\n     *\r\n     * This should only be used if you plan on reusing the calling Component. Otherwise, use destroy().\r\n     *\r\n     * @returns The calling Component.\r\n     */\r\n    Component.prototype.detach = function () {\r\n        this.parent(null);\r\n        if (this._isAnchored) {\r\n            this._element.remove();\r\n        }\r\n        this._isAnchored = false;\r\n        this._onDetachCallbacks.callCallbacks(this);\r\n        return this;\r\n    };\r\n    /**\r\n     * Adds a callback to be called when the Component is detach()-ed.\r\n     *\r\n     * @param {ComponentCallback} callback\r\n     * @return {Component} The calling Component.\r\n     */\r\n    Component.prototype.onDetach = function (callback) {\r\n        this._onDetachCallbacks.add(callback);\r\n        return this;\r\n    };\r\n    /**\r\n     * Removes a callback to be called when the Component is detach()-ed.\r\n     * The callback is identified by reference equality.\r\n     *\r\n     * @param {ComponentCallback} callback\r\n     * @return {Component} The calling Component.\r\n     */\r\n    Component.prototype.offDetach = function (callback) {\r\n        this._onDetachCallbacks.delete(callback);\r\n        return this;\r\n    };\r\n    Component.prototype.parent = function (parent) {\r\n        if (parent === undefined) {\r\n            return this._parent;\r\n        }\r\n        if (parent !== null && !parent.has(this)) {\r\n            throw new Error(\"Passed invalid parent\");\r\n        }\r\n        this._parent = parent;\r\n        return this;\r\n    };\r\n    /**\r\n     * @returns {Bounds} for the component in pixel space, where the topLeft\r\n     * represents the component's minimum x and y values and the bottomRight represents\r\n     * the component's maximum x and y values.\r\n     */\r\n    Component.prototype.bounds = function () {\r\n        var topLeft = this.origin();\r\n        return {\r\n            topLeft: topLeft,\r\n            bottomRight: {\r\n                x: topLeft.x + this.width(),\r\n                y: topLeft.y + this.height(),\r\n            },\r\n        };\r\n    };\r\n    /**\r\n     * Removes a Component from the DOM and disconnects all listeners.\r\n     */\r\n    Component.prototype.destroy = function () {\r\n        this._destroyed = true;\r\n        this.detach();\r\n    };\r\n    /**\r\n     * Gets the width of the Component in pixels.\r\n     */\r\n    Component.prototype.width = function () {\r\n        return this._width;\r\n    };\r\n    /**\r\n     * Gets the height of the Component in pixels.\r\n     */\r\n    Component.prototype.height = function () {\r\n        return this._height;\r\n    };\r\n    /**\r\n     * Gets the origin of the Component relative to its parent.\r\n     *\r\n     * @return {Point}\r\n     */\r\n    Component.prototype.origin = function () {\r\n        return {\r\n            x: this._origin.x,\r\n            y: this._origin.y,\r\n        };\r\n    };\r\n    /**\r\n     * Gets the origin of the Component relative to the root Component.\r\n     *\r\n     * @return {Point}\r\n     */\r\n    Component.prototype.originToRoot = function () {\r\n        var origin = this.origin();\r\n        var ancestor = this.parent();\r\n        while (ancestor != null) {\r\n            var ancestorOrigin = ancestor.origin();\r\n            origin.x += ancestorOrigin.x;\r\n            origin.y += ancestorOrigin.y;\r\n            ancestor = ancestor.parent();\r\n        }\r\n        return origin;\r\n    };\r\n    /**\r\n     * Gets the root component of the hierarchy. If the provided\r\n     * component is the root, that component will be returned.\r\n     */\r\n    Component.prototype.root = function () {\r\n        var component = this;\r\n        while (!component.isRoot()) {\r\n            component = component.parent();\r\n        }\r\n        return component;\r\n    };\r\n    Component.prototype.isRoot = function () {\r\n        return this.parent() == null;\r\n    };\r\n    /**\r\n     * Gets the Selection containing the <g> in front of the visual elements of the Component.\r\n     *\r\n     * Will return undefined if the Component has not been anchored.\r\n     *\r\n     * @return {d3.Selection}\r\n     */\r\n    Component.prototype.foreground = function () {\r\n        return this._foregroundContainer;\r\n    };\r\n    /**\r\n     * Gets the SVG that holds the visual elements of the Component.\r\n     *\r\n     * Will return undefined if the Component has not been anchored.\r\n     *\r\n     * @return {d3.Selection} content selection for the Component\r\n     */\r\n    Component.prototype.content = function () {\r\n        return this._content;\r\n    };\r\n    /**\r\n     * Returns the HTML Element at the root of this component's DOM tree.\r\n     */\r\n    Component.prototype.element = function () {\r\n        return this._element;\r\n    };\r\n    /**\r\n     * Returns the top-level user supplied element that roots the tree that this Component lives in.\r\n     */\r\n    Component.prototype.rootElement = function () {\r\n        return this.root()._rootElement;\r\n    };\r\n    /**\r\n     * Gets the Selection containing the <g> behind the visual elements of the Component.\r\n     *\r\n     * Will return undefined if the Component has not been anchored.\r\n     *\r\n     * @return {d3.Selection} background selection for the Component\r\n     */\r\n    Component.prototype.background = function () {\r\n        return this._backgroundContainer;\r\n    };\r\n    Component._xAlignToProportion = {\r\n        left: 0,\r\n        center: 0.5,\r\n        right: 1,\r\n    };\r\n    Component._yAlignToProportion = {\r\n        top: 0,\r\n        center: 0.5,\r\n        bottom: 1,\r\n    };\r\n    return Component;\r\n}());\r\nexports.Component = Component;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/component.ts\n// module id = 6\n// module chunks = 0","\"use strict\";\r\n/**\r\n * Copyright 2014-present Palantir Technologies\r\n * @license MIT\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar d3 = require(\"d3\");\r\n// Do not use utc by default\r\nvar DEFAULT_USE_UTC = false;\r\n/**\r\n * Creates a formatter for currency values.\r\n *\r\n * @param {number} [precision] The number of decimal places to show (default 2).\r\n * @param {string} [symbol] The currency symbol to use (default \"$\").\r\n * @param {boolean} [prefix] Whether to prepend or append the currency symbol (default true).\r\n *\r\n * @returns {Formatter} A formatter for currency values.\r\n */\r\nfunction currency(precision, symbol, prefix) {\r\n    if (precision === void 0) { precision = 2; }\r\n    if (symbol === void 0) { symbol = \"$\"; }\r\n    if (prefix === void 0) { prefix = true; }\r\n    var fixedFormatter = fixed(precision);\r\n    return function (d) {\r\n        var formattedValue = fixedFormatter(Math.abs(d));\r\n        if (formattedValue !== \"\") {\r\n            if (prefix) {\r\n                formattedValue = symbol + formattedValue;\r\n            }\r\n            else {\r\n                formattedValue += symbol;\r\n            }\r\n            if (d < 0) {\r\n                formattedValue = \"-\" + formattedValue;\r\n            }\r\n        }\r\n        return formattedValue;\r\n    };\r\n}\r\nexports.currency = currency;\r\n/**\r\n * Creates a formatter that displays exactly [precision] decimal places.\r\n *\r\n * @param {number} [precision] The number of decimal places to show (default 3).\r\n *\r\n * @returns {Formatter} A formatter that displays exactly [precision] decimal places.\r\n */\r\nfunction fixed(precision) {\r\n    if (precision === void 0) { precision = 3; }\r\n    verifyPrecision(precision);\r\n    return function (d) { return d.toFixed(precision); };\r\n}\r\nexports.fixed = fixed;\r\n/**\r\n * Creates a formatter that formats numbers to show no more than\r\n * [maxNumberOfDecimalPlaces] decimal places. All other values are stringified.\r\n *\r\n * @param {number} [maxNumberOfDecimalPlaces] The number of decimal places to show (default 3).\r\n *\r\n * @returns {Formatter} A formatter for general values.\r\n */\r\nfunction general(maxNumberOfDecimalPlaces) {\r\n    if (maxNumberOfDecimalPlaces === void 0) { maxNumberOfDecimalPlaces = 3; }\r\n    verifyPrecision(maxNumberOfDecimalPlaces);\r\n    return function (d) {\r\n        if (typeof d === \"number\") {\r\n            var multiplier = Math.pow(10, maxNumberOfDecimalPlaces);\r\n            return String(Math.round(d * multiplier) / multiplier);\r\n        }\r\n        else {\r\n            return String(d);\r\n        }\r\n    };\r\n}\r\nexports.general = general;\r\n/**\r\n * Creates a formatter that stringifies its input.\r\n *\r\n * @returns {Formatter} A formatter that stringifies its input.\r\n */\r\nfunction identity() {\r\n    return function (d) { return String(d); };\r\n}\r\nexports.identity = identity;\r\n/**\r\n * Creates a formatter for percentage values.\r\n * Multiplies the input by 100 and appends \"%\".\r\n *\r\n * @param {number} [precision] The number of decimal places to show (default 0).\r\n *\r\n * @returns {Formatter} A formatter for percentage values.\r\n */\r\nfunction percentage(precision) {\r\n    if (precision === void 0) { precision = 0; }\r\n    var fixedFormatter = fixed(precision);\r\n    return function (d) {\r\n        var valToFormat = d * 100;\r\n        // Account for float imprecision\r\n        var valString = d.toString();\r\n        var integerPowerTen = Math.pow(10, valString.length - (valString.indexOf(\".\") + 1));\r\n        valToFormat = parseInt((valToFormat * integerPowerTen).toString(), 10) / integerPowerTen;\r\n        return fixedFormatter(valToFormat) + \"%\";\r\n    };\r\n}\r\nexports.percentage = percentage;\r\n/**\r\n * Creates a formatter for values that displays [numberOfSignificantFigures] significant figures\r\n * and puts SI notation.\r\n *\r\n * @param {number} [numberOfSignificantFigures] The number of significant figures to show (default 3).\r\n *\r\n * @returns {Formatter} A formatter for SI values.\r\n */\r\nfunction siSuffix(numberOfSignificantFigures) {\r\n    if (numberOfSignificantFigures === void 0) { numberOfSignificantFigures = 3; }\r\n    verifyPrecision(numberOfSignificantFigures);\r\n    return function (d) { return d3.format(\".\" + numberOfSignificantFigures + \"s\")(d); };\r\n}\r\nexports.siSuffix = siSuffix;\r\n/**\r\n * Creates a formatter for values that displays abbreviated values\r\n * and uses standard short scale suffixes\r\n * - K - thousands - 10 ^ 3\r\n * - M - millions - 10 ^ 6\r\n * - B - billions - 10 ^ 9\r\n * - T - trillions - 10 ^ 12\r\n * - Q - quadrillions - 10 ^ 15\r\n *\r\n * Numbers with a magnitude outside of (10 ^ (-precision), 10 ^ 15) are shown using\r\n * scientific notation to avoid creating extremely long decimal strings.\r\n *\r\n * @param {number} [precision] the number of decimal places to show (default 3)\r\n * @returns {Formatter} A formatter with short scale formatting\r\n */\r\nfunction shortScale(precision) {\r\n    if (precision === void 0) { precision = 3; }\r\n    verifyPrecision(precision);\r\n    var suffixes = \"KMBTQ\";\r\n    var exponentFormatter = d3.format(\".\" + precision + \"e\");\r\n    var fixedFormatter = d3.format(\".\" + precision + \"f\");\r\n    var max = Math.pow(10, (3 * (suffixes.length + 1)));\r\n    var min = Math.pow(10, -precision);\r\n    return function (num) {\r\n        var absNum = Math.abs(num);\r\n        if ((absNum < min || absNum >= max) && absNum !== 0) {\r\n            return exponentFormatter(num);\r\n        }\r\n        var idx = -1;\r\n        while (absNum >= Math.pow(1000, idx + 2) && idx < (suffixes.length - 1)) {\r\n            idx++;\r\n        }\r\n        var output = \"\";\r\n        if (idx === -1) {\r\n            output = fixedFormatter(num);\r\n        }\r\n        else {\r\n            output = fixedFormatter(num / Math.pow(1000, idx + 1)) + suffixes[idx];\r\n        }\r\n        // catch rounding by the underlying d3 formatter\r\n        if ((num > 0 && output.substr(0, 4) === \"1000\") || (num < 0 && output.substr(0, 5) === \"-1000\")) {\r\n            if (idx < suffixes.length - 1) {\r\n                idx++;\r\n                output = fixedFormatter(num / Math.pow(1000, idx + 1)) + suffixes[idx];\r\n            }\r\n            else {\r\n                output = exponentFormatter(num);\r\n            }\r\n        }\r\n        return output;\r\n    };\r\n}\r\nexports.shortScale = shortScale;\r\n/**\r\n * Creates a multi time formatter that displays dates.\r\n *\r\n * @returns {Formatter} A formatter for time/date values.\r\n */\r\nfunction multiTime() {\r\n    // Formatter tiers going from shortest time scale to largest - these were taken from d3\r\n    // https://github.com/mbostock/d3/wiki/Time-Formatting#format_multi\r\n    var candidateFormats = [\r\n        {\r\n            specifier: \".%L\",\r\n            predicate: function (d) { return d.getMilliseconds() !== 0; },\r\n        },\r\n        {\r\n            specifier: \":%S\",\r\n            predicate: function (d) { return d.getSeconds() !== 0; },\r\n        },\r\n        {\r\n            specifier: \"%I:%M\",\r\n            predicate: function (d) { return d.getMinutes() !== 0; },\r\n        },\r\n        {\r\n            specifier: \"%I %p\",\r\n            predicate: function (d) { return d.getHours() !== 0; },\r\n        },\r\n        {\r\n            specifier: \"%a %d\",\r\n            predicate: function (d) { return d.getDay() !== 0 && d.getDate() !== 1; },\r\n        },\r\n        {\r\n            specifier: \"%b %d\",\r\n            predicate: function (d) { return d.getDate() !== 1; },\r\n        },\r\n        {\r\n            specifier: \"%b\",\r\n            predicate: function (d) { return d.getMonth() !== 0; },\r\n        },\r\n    ];\r\n    return function (d) {\r\n        var acceptableFormats = candidateFormats.filter(function (candidate) { return candidate.predicate(d); });\r\n        var specifier = acceptableFormats.length > 0\r\n            ? acceptableFormats[0].specifier\r\n            : \"%Y\";\r\n        return d3.timeFormat(specifier)(d);\r\n    };\r\n}\r\nexports.multiTime = multiTime;\r\n/**\r\n * Creates a time formatter that displays time/date using given specifier.\r\n *\r\n * List of directives can be found on: https://github.com/mbostock/d3/wiki/Time-Formatting#format\r\n *\r\n * @param {string} [specifier] The specifier for the formatter.\r\n * @param {boolean} [useUTC] Displays time in UTC if true, local time if false. Defaults to false.\r\n *\r\n * @returns {Formatter} A formatter for time/date values.\r\n */\r\nfunction time(specifier, useUTC) {\r\n    if (useUTC === void 0) { useUTC = DEFAULT_USE_UTC; }\r\n    if (useUTC) {\r\n        return d3.utcFormat(specifier);\r\n    }\r\n    return d3.timeFormat(specifier);\r\n}\r\nexports.time = time;\r\nfunction verifyPrecision(precision) {\r\n    if (precision < 0 || precision > 20) {\r\n        throw new RangeError(\"Formatter precision must be between 0 and 20\");\r\n    }\r\n    if (precision !== Math.floor(precision)) {\r\n        throw new RangeError(\"Formatter precision must be an integer\");\r\n    }\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/core/formatters.ts\n// module id = 7\n// module chunks = 0","\"use strict\";\r\n/**\r\n * Copyright 2014-present Palantir Technologies\r\n * @license MIT\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * A Drawer is a stateful class that holds one SVGDrawer and one CanvasDrawer, and can switch between\r\n * the two.\r\n */\r\nvar ProxyDrawer = /** @class */ (function () {\r\n    /**\r\n     * A Drawer draws svg elements based on the input Dataset.\r\n     *\r\n     * @constructor\r\n     * @param _svgDrawerFactory A factory that will be invoked to create an SVGDrawer whenever useSVG is called\r\n     * @param _canvasDrawStep The DrawStep to be fed into a new CanvasDrawer whenever useCanvas is called\r\n     */\r\n    function ProxyDrawer(_svgDrawerFactory, _canvasDrawerFactory) {\r\n        this._svgDrawerFactory = _svgDrawerFactory;\r\n        this._canvasDrawerFactory = _canvasDrawerFactory;\r\n    }\r\n    /**\r\n     * Remove the old drawer and use SVG rendering from now on.\r\n     */\r\n    ProxyDrawer.prototype.useSVG = function (parent) {\r\n        if (this._currentDrawer != null) {\r\n            this._currentDrawer.remove();\r\n        }\r\n        var svgDrawer = this._svgDrawerFactory();\r\n        svgDrawer.attachTo(parent);\r\n        this._currentDrawer = svgDrawer;\r\n    };\r\n    /**\r\n     * Remove the old drawer and use Canvas rendering from now on.\r\n     */\r\n    ProxyDrawer.prototype.useCanvas = function (canvas) {\r\n        if (this._currentDrawer != null) {\r\n            this._currentDrawer.remove();\r\n        }\r\n        this._currentDrawer = this._canvasDrawerFactory(canvas.node().getContext(\"2d\"));\r\n    };\r\n    // public for testing\r\n    ProxyDrawer.prototype.getDrawer = function () {\r\n        return this._currentDrawer;\r\n    };\r\n    /**\r\n     * Removes this Drawer's renderArea\r\n     */\r\n    ProxyDrawer.prototype.remove = function () {\r\n        if (this._currentDrawer != null) {\r\n            this._currentDrawer.remove();\r\n        }\r\n    };\r\n    ProxyDrawer.prototype.draw = function (data, drawSteps) {\r\n        this._currentDrawer.draw(data, drawSteps);\r\n    };\r\n    ProxyDrawer.prototype.getVisualPrimitives = function () {\r\n        return this._currentDrawer.getVisualPrimitives();\r\n    };\r\n    ProxyDrawer.prototype.getVisualPrimitiveAtIndex = function (index) {\r\n        return this._currentDrawer.getVisualPrimitiveAtIndex(index);\r\n    };\r\n    return ProxyDrawer;\r\n}());\r\nexports.ProxyDrawer = ProxyDrawer;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/drawers/drawer.ts\n// module id = 8\n// module chunks = 0","\"use strict\";\r\n/**\r\n * Copyright 2014-present Palantir Technologies\r\n * @license MIT\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\ntslib_1.__exportStar(require(\"./easingAnimator\"), exports);\r\ntslib_1.__exportStar(require(\"./nullAnimator\"), exports);\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/animators/index.ts\n// module id = 9\n// module chunks = 0","\"use strict\";\r\n/**\r\n * Copyright 2014-present Palantir Technologies\r\n * @license MIT\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar d3 = require(\"d3\");\r\nvar Utils = require(\"../utils\");\r\n/**\r\n * An SVGDrawer draws data by creating DOM elements and setting specific attributes on them\r\n * to accurately reflect the data being passed in.\r\n *\r\n * This class is immutable (but has internal state).\r\n */\r\nvar SVGDrawer = /** @class */ (function () {\r\n    /**\r\n     * @param svgElementName an HTML/SVG tag name to be created, one per datum.\r\n     * @param className CSS classes to be applied to the drawn primitives.\r\n     * @param applyDefaultAttributes\r\n     */\r\n    function SVGDrawer(svgElementName, className) {\r\n        this._root = d3.select(document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\"));\r\n        this._className = className;\r\n        this._svgElementName = svgElementName;\r\n    }\r\n    SVGDrawer.prototype.draw = function (data, appliedDrawSteps) {\r\n        var _this = this;\r\n        /*\r\n         * Draw to the DOM by clearing old DOM elements, adding new DOM elements,\r\n         * and then passing those DOM elements to the animator, which will set the\r\n         * appropriate attributes on the DOM.\r\n         */\r\n        this._createAndDestroyDOMElements(data);\r\n        var delay = 0;\r\n        var drawLength = appliedDrawSteps.length;\r\n        var _loop_1 = function (i) {\r\n            var drawStep = appliedDrawSteps[i];\r\n            Utils.Window.setTimeout(function () { return _this._drawStep(drawStep); }, delay);\r\n            delay += drawStep.animator.totalTime(data.length);\r\n        };\r\n        for (var i = 0; i < drawLength; i++) {\r\n            _loop_1(i);\r\n        }\r\n    };\r\n    SVGDrawer.prototype.getVisualPrimitives = function () {\r\n        if (this._cachedVisualPrimitivesNodes == null) {\r\n            this._cachedVisualPrimitivesNodes = this._selection.nodes();\r\n        }\r\n        return this._cachedVisualPrimitivesNodes;\r\n    };\r\n    SVGDrawer.prototype.getVisualPrimitiveAtIndex = function (index) {\r\n        if (this._cachedVisualPrimitivesNodeMap == null) {\r\n            return null;\r\n        }\r\n        return this._cachedVisualPrimitivesNodeMap.get(index);\r\n    };\r\n    SVGDrawer.prototype.remove = function () {\r\n        this._root.remove();\r\n    };\r\n    SVGDrawer.prototype.attachTo = function (parent) {\r\n        parent.node().appendChild(this._root.node());\r\n    };\r\n    // public for testing\r\n    SVGDrawer.prototype.getRoot = function () {\r\n        return this._root;\r\n    };\r\n    /**\r\n     * Returns the CSS selector for this Drawer's visual elements.\r\n     */\r\n    SVGDrawer.prototype.selector = function () {\r\n        return this._svgElementName;\r\n    };\r\n    SVGDrawer.prototype._applyDefaultAttributes = function (selection) {\r\n        // subclasses may override\r\n    };\r\n    SVGDrawer.prototype._createAndDestroyDOMElements = function (data) {\r\n        // first store source data index before any filtering takes place\r\n        var mappedData = data.map(function (d, i) { return d != null ? { d: d, i: i } : null; });\r\n        // Whereas canvas renders can cope with null data values, svg renderer\r\n        // attribute accessors assume non-null data values, so we must filter them\r\n        // out. Unfortunately, this means the index passed to each accessor will\r\n        // not necessarily match the index of the datum in the dataset.\r\n        var filteredData = mappedData.filter(function (d) { return d != null; });\r\n        var dataElementsUpdate = this._root.selectAll(this.selector()).data(filteredData);\r\n        this._selection = dataElementsUpdate\r\n            .enter()\r\n            .append(this._svgElementName)\r\n            .merge(dataElementsUpdate);\r\n        dataElementsUpdate.exit().remove();\r\n        // build map of source data index to Element\r\n        var newMap = new Utils.Map();\r\n        this._selection.each(function (dataAndIndex) {\r\n            // TODO optionally attach data attributes to Element\r\n            // this.setAttribute(\"data-source-data\", dataAndIndex.d);\r\n            // this.setAttribute(\"data-source-index\", dataAndIndex.i);\r\n            newMap.set(dataAndIndex.i, this);\r\n        });\r\n        this._cachedVisualPrimitivesNodeMap = newMap;\r\n        this._cachedVisualPrimitivesNodes = null;\r\n        // unwrap data now that elements match their original data index\r\n        this._selection.data(this._selection.data().map(function (_a) {\r\n            var d = _a.d;\r\n            return d;\r\n        }));\r\n        if (this._className != null) {\r\n            this._selection.classed(this._className, true);\r\n        }\r\n        this._applyDefaultAttributes(this._selection);\r\n    };\r\n    /**\r\n     * Draws data using one step\r\n     *\r\n     * @param{AppliedDrawStep} step The step, how data should be drawn.\r\n     */\r\n    SVGDrawer.prototype._drawStep = function (step) {\r\n        var _this = this;\r\n        var colorAttributes = [\"fill\", \"stroke\"];\r\n        colorAttributes.forEach(function (colorAttribute) {\r\n            if (step.attrToAppliedProjector[colorAttribute] != null) {\r\n                _this._selection.attr(colorAttribute, step.attrToAppliedProjector[colorAttribute]);\r\n            }\r\n        });\r\n        step.animator.animate(this._selection, step.attrToAppliedProjector);\r\n        if (this._className != null) {\r\n            this._selection.classed(this._className, true);\r\n        }\r\n    };\r\n    return SVGDrawer;\r\n}());\r\nexports.SVGDrawer = SVGDrawer;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/drawers/svgDrawer.ts\n// module id = 10\n// module chunks = 0","\"use strict\";\r\n/**\r\n * Copyright 2014-present Palantir Technologies\r\n * @license MIT\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nfunction makeEnum(values) {\r\n    return values.reduce(function (obj, v) {\r\n        obj[v] = v;\r\n        return obj;\r\n    }, {});\r\n}\r\nexports.makeEnum = makeEnum;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/utils/makeEnum.ts\n// module id = 11\n// module chunks = 0","\"use strict\";\r\n/**\r\n * Copyright 2014-present Palantir Technologies\r\n * @license MIT\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\nvar d3 = require(\"d3\");\r\nvar panZoomConstraints_1 = require(\"../interactions/panZoomConstraints\");\r\nvar Utils = require(\"../utils\");\r\nvar scale_1 = require(\"./scale\");\r\nvar QuantitativeScale = /** @class */ (function (_super) {\r\n    tslib_1.__extends(QuantitativeScale, _super);\r\n    /**\r\n     * A QuantitativeScale is a Scale that maps number-like values to numbers.\r\n     * It is invertible and continuous.\r\n     *\r\n     * @constructor\r\n     */\r\n    function QuantitativeScale() {\r\n        var _this = _super.call(this) || this;\r\n        _this._tickGenerator = function (scale) { return scale.defaultTicks(); };\r\n        _this._padProportion = 0.05;\r\n        _this._snappingDomainEnabled = true;\r\n        _this._paddingExceptionsProviders = new Utils.Set();\r\n        return _this;\r\n    }\r\n    QuantitativeScale.prototype.autoDomain = function () {\r\n        this._domainMin = null;\r\n        this._domainMax = null;\r\n        _super.prototype.autoDomain.call(this);\r\n        return this;\r\n    };\r\n    QuantitativeScale.prototype.autoDomainIfAutomaticMode = function () {\r\n        if (this._domainMin != null && this._domainMax != null) {\r\n            this._setDomain([this._domainMin, this._domainMax]);\r\n            return;\r\n        }\r\n        var computedExtent = this._getExtent();\r\n        if (this._domainMin != null) {\r\n            var maxValue = computedExtent[1];\r\n            if (this._domainMin >= maxValue) {\r\n                maxValue = this._expandSingleValueDomain([this._domainMin, this._domainMin])[1];\r\n            }\r\n            this._setDomain([this._domainMin, maxValue]);\r\n            return;\r\n        }\r\n        if (this._domainMax != null) {\r\n            var minValue = computedExtent[0];\r\n            if (this._domainMax <= minValue) {\r\n                minValue = this._expandSingleValueDomain([this._domainMax, this._domainMax])[0];\r\n            }\r\n            this._setDomain([minValue, this._domainMax]);\r\n            return;\r\n        }\r\n        _super.prototype.autoDomainIfAutomaticMode.call(this);\r\n    };\r\n    QuantitativeScale.prototype._getUnboundedExtent = function (ignoreAttachState) {\r\n        if (ignoreAttachState === void 0) { ignoreAttachState = false; }\r\n        var includedValues = this._getAllIncludedValues(ignoreAttachState);\r\n        var extent = this._defaultExtent();\r\n        if (includedValues.length !== 0) {\r\n            var combinedExtent = [\r\n                Utils.Math.min(includedValues, extent[0]),\r\n                Utils.Math.max(includedValues, extent[1]),\r\n            ];\r\n            extent = this._padDomain(combinedExtent);\r\n        }\r\n        return extent;\r\n    };\r\n    QuantitativeScale.prototype._getExtent = function () {\r\n        var extent = this._getUnboundedExtent();\r\n        if (this._domainMin != null) {\r\n            extent[0] = this._domainMin;\r\n        }\r\n        if (this._domainMax != null) {\r\n            extent[1] = this._domainMax;\r\n        }\r\n        return extent;\r\n    };\r\n    /**\r\n     * Adds a padding exception provider.\r\n     * If one end of the domain is set to an excepted value as a result of autoDomain()-ing,\r\n     * that end of the domain will not be padded.\r\n     *\r\n     * @param {Scales.PaddingExceptionProvider<D>} provider The provider function.\r\n     * @returns {QuantitativeScale} The calling QuantitativeScale.\r\n     */\r\n    QuantitativeScale.prototype.addPaddingExceptionsProvider = function (provider) {\r\n        this._paddingExceptionsProviders.add(provider);\r\n        this.autoDomainIfAutomaticMode();\r\n        return this;\r\n    };\r\n    /**\r\n     * Removes the padding exception provider.\r\n     *\r\n     * @param {Scales.PaddingExceptionProvider<D>} provider The provider function.\r\n     * @returns {QuantitativeScale} The calling QuantitativeScale.\r\n     */\r\n    QuantitativeScale.prototype.removePaddingExceptionsProvider = function (provider) {\r\n        this._paddingExceptionsProviders.delete(provider);\r\n        this.autoDomainIfAutomaticMode();\r\n        return this;\r\n    };\r\n    QuantitativeScale.prototype.padProportion = function (padProportion) {\r\n        if (padProportion == null) {\r\n            return this._padProportion;\r\n        }\r\n        if (padProportion < 0) {\r\n            throw new Error(\"padProportion must be non-negative\");\r\n        }\r\n        this._padProportion = padProportion;\r\n        this.autoDomainIfAutomaticMode();\r\n        return this;\r\n    };\r\n    QuantitativeScale.prototype._padDomain = function (domain) {\r\n        var _this = this;\r\n        if (domain[0].valueOf() === domain[1].valueOf()) {\r\n            return this._expandSingleValueDomain(domain);\r\n        }\r\n        if (this._padProportion === 0) {\r\n            return domain;\r\n        }\r\n        var p = this._padProportion / 2;\r\n        var min = domain[0];\r\n        var max = domain[1];\r\n        var minExistsInExceptions = false;\r\n        var maxExistsInExceptions = false;\r\n        this._paddingExceptionsProviders.forEach(function (provider) {\r\n            var values = provider(_this);\r\n            values.forEach(function (value) {\r\n                if (value.valueOf() === min.valueOf()) {\r\n                    minExistsInExceptions = true;\r\n                }\r\n                if (value.valueOf() === max.valueOf()) {\r\n                    maxExistsInExceptions = true;\r\n                }\r\n            });\r\n        });\r\n        var originalDomain = this._backingScaleDomain();\r\n        this._backingScaleDomain(domain);\r\n        var newMin = minExistsInExceptions ? min : this.invert(this.scale(min) - (this.scale(max) - this.scale(min)) * p);\r\n        var newMax = maxExistsInExceptions ? max : this.invert(this.scale(max) + (this.scale(max) - this.scale(min)) * p);\r\n        this._backingScaleDomain(originalDomain);\r\n        if (this._snappingDomainEnabled) {\r\n            return this._niceDomain([newMin, newMax]);\r\n        }\r\n        return ([newMin, newMax]);\r\n    };\r\n    QuantitativeScale.prototype.snappingDomainEnabled = function (snappingDomainEnabled) {\r\n        if (snappingDomainEnabled == null) {\r\n            return this._snappingDomainEnabled;\r\n        }\r\n        this._snappingDomainEnabled = snappingDomainEnabled;\r\n        this.autoDomainIfAutomaticMode();\r\n        return this;\r\n    };\r\n    QuantitativeScale.prototype._expandSingleValueDomain = function (singleValueDomain) {\r\n        return singleValueDomain;\r\n    };\r\n    /**\r\n     * Computes the domain value corresponding to a supplied range value.\r\n     *\r\n     * @param {number} value: A value from the Scale's range.\r\n     * @returns {D} The domain value corresponding to the supplied range value.\r\n     */\r\n    QuantitativeScale.prototype.invert = function (value) {\r\n        throw new Error(\"Subclasses should override invert\");\r\n    };\r\n    QuantitativeScale.prototype.domain = function (values) {\r\n        if (values != null) {\r\n            this._domainMin = values[0];\r\n            this._domainMax = values[1];\r\n        }\r\n        return _super.prototype.domain.call(this, values);\r\n    };\r\n    QuantitativeScale.prototype.domainMin = function (domainMin) {\r\n        if (domainMin == null) {\r\n            return this.domain()[0];\r\n        }\r\n        this._domainMin = domainMin;\r\n        this.autoDomainIfAutomaticMode();\r\n        return this;\r\n    };\r\n    QuantitativeScale.prototype.domainMax = function (domainMax) {\r\n        if (domainMax == null) {\r\n            return this.domain()[1];\r\n        }\r\n        this._domainMax = domainMax;\r\n        this.autoDomainIfAutomaticMode();\r\n        return this;\r\n    };\r\n    QuantitativeScale.prototype.extentOfValues = function (values) {\r\n        // HACKHACK: TS1.4 doesn't consider numbers to be Number-like (valueOf() returning number), so D can't be typed correctly\r\n        var extent = d3.extent(values.filter(function (value) { return Utils.Math.isValidNumber(+value); }));\r\n        if (extent[0] == null || extent[1] == null) {\r\n            return [];\r\n        }\r\n        else {\r\n            return extent;\r\n        }\r\n    };\r\n    QuantitativeScale.prototype.zoom = function (magnifyAmount, centerValue) {\r\n        var _this = this;\r\n        var magnifyTransform = function (rangeValue) { return _this.invert(panZoomConstraints_1.zoomOut(rangeValue, magnifyAmount, centerValue)); };\r\n        this.domain(this.range().map(magnifyTransform));\r\n    };\r\n    QuantitativeScale.prototype.pan = function (translateAmount) {\r\n        var _this = this;\r\n        var translateTransform = function (rangeValue) { return _this.invert(rangeValue + translateAmount); };\r\n        this.domain(this.range().map(translateTransform));\r\n    };\r\n    QuantitativeScale.prototype.scaleTransformation = function (value) {\r\n        throw new Error(\"Subclasses should override scaleTransformation\");\r\n    };\r\n    QuantitativeScale.prototype.invertedTransformation = function (value) {\r\n        throw new Error(\"Subclasses should override invertedTransformation\");\r\n    };\r\n    QuantitativeScale.prototype.getTransformationExtent = function () {\r\n        throw new Error(\"Subclasses should override getTransformationExtent\");\r\n    };\r\n    QuantitativeScale.prototype.getTransformationDomain = function () {\r\n        throw new Error(\"Subclasses should override getTransformationDomain\");\r\n    };\r\n    QuantitativeScale.prototype.setTransformationDomain = function (domain) {\r\n        throw new Error(\"Subclasses should override setTransformationDomain\");\r\n    };\r\n    QuantitativeScale.prototype._setDomain = function (values) {\r\n        var isNaNOrInfinity = function (x) { return Utils.Math.isNaN(x) || x === Infinity || x === -Infinity; };\r\n        if (isNaNOrInfinity(values[0]) || isNaNOrInfinity(values[1])) {\r\n            Utils.Window.warn(\"Warning: QuantitativeScales cannot take NaN or Infinity as a domain value. Ignoring.\");\r\n            return;\r\n        }\r\n        _super.prototype._setDomain.call(this, values);\r\n    };\r\n    /**\r\n     * Gets the array of tick values generated by the default algorithm.\r\n     */\r\n    QuantitativeScale.prototype.defaultTicks = function () {\r\n        throw new Error(\"Subclasses should override _getDefaultTicks\");\r\n    };\r\n    /**\r\n     * Gets an array of tick values spanning the domain.\r\n     *\r\n     * @returns {D[]}\r\n     */\r\n    QuantitativeScale.prototype.ticks = function () {\r\n        return this._tickGenerator(this);\r\n    };\r\n    /**\r\n     * Given a domain, expands its domain onto \"nice\" values, e.g. whole\r\n     * numbers.\r\n     */\r\n    QuantitativeScale.prototype._niceDomain = function (domain, count) {\r\n        throw new Error(\"Subclasses should override _niceDomain\");\r\n    };\r\n    QuantitativeScale.prototype._defaultExtent = function () {\r\n        throw new Error(\"Subclasses should override _defaultExtent\");\r\n    };\r\n    QuantitativeScale.prototype.tickGenerator = function (generator) {\r\n        if (generator == null) {\r\n            return this._tickGenerator;\r\n        }\r\n        else {\r\n            this._tickGenerator = generator;\r\n            return this;\r\n        }\r\n    };\r\n    QuantitativeScale._DEFAULT_NUM_TICKS = 10;\r\n    return QuantitativeScale;\r\n}(scale_1.Scale));\r\nexports.QuantitativeScale = QuantitativeScale;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/scales/quantitativeScale.ts\n// module id = 12\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar d3 = require(\"d3\");\r\n/**\r\n * Coerce possibly external d3 instance into our own instance of d3 so we can use d3-selection-multi.\r\n * See https://github.com/d3/d3-selection-multi/issues/11 for why we have to do this.\r\n *\r\n * Any public facing API that accepts a d3 selection should first pass that user-supplied selection\r\n * through here - this ensures all selection objects that go through the Plottable codebase are \"vetted\".\r\n */\r\nfunction coerceExternalD3(externalD3Selection) {\r\n    // if .attrs isn't defined; convert the selection\r\n    if (externalD3Selection.attrs == null) {\r\n        if (externalD3Selection.nodes == null) {\r\n            // nodes isn't defined; this is probably a d3v3 selection. handle it accordingly\r\n            var nodes_1 = [];\r\n            externalD3Selection.each(function () {\r\n                nodes_1.push(this);\r\n            });\r\n            return d3.selectAll(nodes_1);\r\n        }\r\n        else {\r\n            return d3.selectAll(externalD3Selection.nodes());\r\n        }\r\n    }\r\n    else {\r\n        return externalD3Selection;\r\n    }\r\n}\r\nexports.coerceExternalD3 = coerceExternalD3;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/utils/coerceD3.ts\n// module id = 13\n// module chunks = 0","\"use strict\";\r\n/**\r\n * Copyright 2014-present Palantir Technologies\r\n * @license MIT\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\ntslib_1.__exportStar(require(\"./keyDispatcher\"), exports);\r\ntslib_1.__exportStar(require(\"./mouseDispatcher\"), exports);\r\ntslib_1.__exportStar(require(\"./touchDispatcher\"), exports);\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/dispatchers/index.ts\n// module id = 14\n// module chunks = 0","\"use strict\";\r\n/**\r\n * Copyright 2014-present Palantir Technologies\r\n * @license MIT\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\ntslib_1.__exportStar(require(\"./arcDrawer\"), exports);\r\ntslib_1.__exportStar(require(\"./arcOutlineDrawer\"), exports);\r\ntslib_1.__exportStar(require(\"./areaDrawer\"), exports);\r\ntslib_1.__exportStar(require(\"./canvasDrawer\"), exports);\r\ntslib_1.__exportStar(require(\"./drawer\"), exports);\r\ntslib_1.__exportStar(require(\"./lineDrawer\"), exports);\r\ntslib_1.__exportStar(require(\"./rectangleDrawer\"), exports);\r\ntslib_1.__exportStar(require(\"./segmentDrawer\"), exports);\r\ntslib_1.__exportStar(require(\"./svgDrawer\"), exports);\r\ntslib_1.__exportStar(require(\"./symbolDrawer\"), exports);\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/drawers/index.ts\n// module id = 15\n// module chunks = 0","\"use strict\";\r\n/**\r\n * Copyright 2014-present Palantir Technologies\r\n * @license MIT\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Interaction = /** @class */ (function () {\r\n    function Interaction() {\r\n        var _this = this;\r\n        this._anchorCallback = function (component) { return _this._anchor(component); };\r\n        this._enabled = true;\r\n    }\r\n    /**\r\n     * Attaches this Interaction to a Component.\r\n     * If the Interaction was already attached to a Component, it first detaches itself from the old Component.\r\n     *\r\n     * @param {Component} component\r\n     * @returns {Interaction} The calling Interaction.\r\n     */\r\n    Interaction.prototype.attachTo = function (component) {\r\n        this._disconnect();\r\n        this._componentAttachedTo = component;\r\n        this._connect();\r\n        return this;\r\n    };\r\n    /**\r\n     * @deprecated renamed to .detach().\r\n     */\r\n    Interaction.prototype.detachFrom = function (_component) {\r\n        return this.detach();\r\n    };\r\n    /**\r\n     * Detaches this Interaction from whatever component it was attached to.\r\n     * This Interaction can be reused.\r\n     *\r\n     * @returns {Interaction} The calling Interaction.\r\n     */\r\n    Interaction.prototype.detach = function () {\r\n        this._disconnect();\r\n        this._componentAttachedTo = null;\r\n        return this;\r\n    };\r\n    Interaction.prototype.enabled = function (enabled) {\r\n        if (enabled == null) {\r\n            return this._enabled;\r\n        }\r\n        this._enabled = enabled;\r\n        if (this._enabled) {\r\n            this._connect();\r\n        }\r\n        else {\r\n            this._disconnect();\r\n        }\r\n        return this;\r\n    };\r\n    Interaction.prototype._anchor = function (component) {\r\n        this._isAnchored = true;\r\n    };\r\n    Interaction.prototype._unanchor = function () {\r\n        this._isAnchored = false;\r\n    };\r\n    /**\r\n     * Translates an <svg>-coordinate-space point to Component-space coordinates.\r\n     *\r\n     * @param {Point} p A Point in <svg>-space coordinates.\r\n     * @return {Point} The same location in Component-space coordinates.\r\n     */\r\n    Interaction.prototype._translateToComponentSpace = function (p) {\r\n        var origin = this._componentAttachedTo.originToRoot();\r\n        return {\r\n            x: p.x - origin.x,\r\n            y: p.y - origin.y,\r\n        };\r\n    };\r\n    /**\r\n     * Checks whether a Component-coordinate-space Point is inside the Component.\r\n     *\r\n     * @param {Point} p A Point in Compoennt-space coordinates.\r\n     * @return {boolean} Whether or not the point is inside the Component.\r\n     */\r\n    Interaction.prototype._isInsideComponent = function (p) {\r\n        return 0 <= p.x && 0 <= p.y\r\n            && p.x <= this._componentAttachedTo.width()\r\n            && p.y <= this._componentAttachedTo.height();\r\n    };\r\n    Interaction.prototype._connect = function () {\r\n        if (this.enabled() && this._componentAttachedTo != null && !this._isAnchored) {\r\n            this._componentAttachedTo.onAnchor(this._anchorCallback);\r\n        }\r\n    };\r\n    Interaction.prototype._disconnect = function () {\r\n        if (this._isAnchored) {\r\n            this._unanchor();\r\n        }\r\n        if (this._componentAttachedTo != null) {\r\n            this._componentAttachedTo.offAnchor(this._anchorCallback);\r\n        }\r\n    };\r\n    return Interaction;\r\n}());\r\nexports.Interaction = Interaction;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/interactions/interaction.ts\n// module id = 16\n// module chunks = 0","\"use strict\";\r\n/**\r\n * Copyright 2014-present Palantir Technologies\r\n * @license MIT\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\nvar Scales = require(\"../scales\");\r\nvar Utils = require(\"../utils\");\r\nvar deferredRenderer_1 = require(\"./deferredRenderer\");\r\nvar plot_1 = require(\"./plot\");\r\nvar XYPlot = /** @class */ (function (_super) {\r\n    tslib_1.__extends(XYPlot, _super);\r\n    /**\r\n     * An XYPlot is a Plot that displays data along two primary directions, X and Y.\r\n     *\r\n     * @constructor\r\n     * @param {Scale} xScale The x scale to use.\r\n     * @param {Scale} yScale The y scale to use.\r\n     */\r\n    function XYPlot() {\r\n        var _this = _super.call(this) || this;\r\n        _this._autoAdjustXScaleDomain = false;\r\n        _this._autoAdjustYScaleDomain = false;\r\n        _this._deferredRendering = false;\r\n        _this._applyDeferredRenderingTransform = function (tx, ty, sx, sy) {\r\n            if (!_this._isAnchored) {\r\n                return;\r\n            }\r\n            if (_this._renderArea != null) {\r\n                _this._renderArea.attr(\"transform\", \"translate(\" + tx + \", \" + ty + \") scale(\" + sx + \", \" + sy + \")\");\r\n            }\r\n            if (_this._canvas != null) {\r\n                _this._canvas.style(\"transform\", \"translate(\" + tx + \"px, \" + ty + \"px) scale(\" + sx + \", \" + sy + \")\");\r\n            }\r\n        };\r\n        _this.addClass(\"xy-plot\");\r\n        _this._adjustYDomainOnChangeFromXCallback = function (scale) { return _this._adjustYDomainOnChangeFromX(); };\r\n        _this._adjustXDomainOnChangeFromYCallback = function (scale) { return _this._adjustXDomainOnChangeFromY(); };\r\n        _this._renderCallback = function () {\r\n            if (_this.deferredRendering()) {\r\n                var scaleX = _this.x() && _this.x().scale;\r\n                var scaleY = _this.y() && _this.y().scale;\r\n                _this._deferredRenderer.updateDomains(scaleX, scaleY);\r\n            }\r\n            else {\r\n                _this.render();\r\n            }\r\n        };\r\n        _this._deferredRenderer = new deferredRenderer_1.DeferredRenderer(function () { return _this.render(); }, _this._applyDeferredRenderingTransform);\r\n        return _this;\r\n    }\r\n    XYPlot.prototype.render = function () {\r\n        if (this.deferredRendering()) {\r\n            this._deferredRenderer.resetTransforms();\r\n        }\r\n        return _super.prototype.render.call(this);\r\n    };\r\n    XYPlot.prototype.deferredRendering = function (deferredRendering) {\r\n        if (deferredRendering == null) {\r\n            return this._deferredRendering;\r\n        }\r\n        if (deferredRendering) {\r\n            var scaleX = this.x() && this.x().scale;\r\n            var scaleY = this.y() && this.y().scale;\r\n            this._deferredRenderer.setDomains(scaleX, scaleY);\r\n        }\r\n        this._deferredRendering = deferredRendering;\r\n        return this;\r\n    };\r\n    XYPlot.prototype.x = function (x, xScale, postScale) {\r\n        if (x == null) {\r\n            return this._propertyBindings.get(XYPlot._X_KEY);\r\n        }\r\n        this._bindProperty(XYPlot._X_KEY, x, xScale, postScale);\r\n        var width = this.width();\r\n        if (xScale != null && width != null) {\r\n            xScale.range([0, width]);\r\n        }\r\n        if (this._autoAdjustYScaleDomain) {\r\n            this._updateYExtentsAndAutodomain();\r\n        }\r\n        this.render();\r\n        return this;\r\n    };\r\n    XYPlot.prototype.y = function (y, yScale, postScale) {\r\n        if (y == null) {\r\n            return this._propertyBindings.get(XYPlot._Y_KEY);\r\n        }\r\n        this._bindProperty(XYPlot._Y_KEY, y, yScale, postScale);\r\n        var height = this.height();\r\n        if (yScale != null && height != null) {\r\n            if (yScale instanceof Scales.Category) {\r\n                yScale.range([0, height]);\r\n            }\r\n            else {\r\n                yScale.range([height, 0]);\r\n            }\r\n        }\r\n        if (this._autoAdjustXScaleDomain) {\r\n            this._updateXExtentsAndAutodomain();\r\n        }\r\n        this.render();\r\n        return this;\r\n    };\r\n    XYPlot.prototype._filterForProperty = function (property) {\r\n        if (property === \"x\" && this._autoAdjustXScaleDomain) {\r\n            return this._makeFilterByProperty(\"y\");\r\n        }\r\n        else if ((property === \"y\" || property === \"y0\") && this._autoAdjustYScaleDomain) {\r\n            return this._makeFilterByProperty(\"x\");\r\n        }\r\n        return null;\r\n    };\r\n    XYPlot.prototype._makeFilterByProperty = function (property) {\r\n        var binding = this._propertyBindings.get(property);\r\n        if (binding != null) {\r\n            var accessor_1 = binding.accessor;\r\n            var scale_1 = binding.scale;\r\n            if (scale_1 != null) {\r\n                return function (datum, index, dataset) {\r\n                    var range = scale_1.range();\r\n                    return Utils.Math.inRange(scale_1.scale(accessor_1(datum, index, dataset)), range[0], range[1]);\r\n                };\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    XYPlot.prototype._uninstallScaleForKey = function (scale, key) {\r\n        _super.prototype._uninstallScaleForKey.call(this, scale, key);\r\n        var adjustCallback = key === XYPlot._X_KEY ? this._adjustYDomainOnChangeFromXCallback\r\n            : this._adjustXDomainOnChangeFromYCallback;\r\n        scale.offUpdate(adjustCallback);\r\n    };\r\n    XYPlot.prototype._installScaleForKey = function (scale, key) {\r\n        _super.prototype._installScaleForKey.call(this, scale, key);\r\n        var adjustCallback = key === XYPlot._X_KEY ? this._adjustYDomainOnChangeFromXCallback\r\n            : this._adjustXDomainOnChangeFromYCallback;\r\n        scale.onUpdate(adjustCallback);\r\n    };\r\n    XYPlot.prototype.destroy = function () {\r\n        _super.prototype.destroy.call(this);\r\n        if (this.x().scale) {\r\n            this.x().scale.offUpdate(this._adjustYDomainOnChangeFromXCallback);\r\n        }\r\n        if (this.y().scale) {\r\n            this.y().scale.offUpdate(this._adjustXDomainOnChangeFromYCallback);\r\n        }\r\n        return this;\r\n    };\r\n    XYPlot.prototype.autorangeMode = function (autorangeMode) {\r\n        if (autorangeMode == null) {\r\n            if (this._autoAdjustXScaleDomain) {\r\n                return \"x\";\r\n            }\r\n            if (this._autoAdjustYScaleDomain) {\r\n                return \"y\";\r\n            }\r\n            return \"none\";\r\n        }\r\n        switch (autorangeMode) {\r\n            case \"x\":\r\n                this._autoAdjustXScaleDomain = true;\r\n                this._autoAdjustYScaleDomain = false;\r\n                this._adjustXDomainOnChangeFromY();\r\n                break;\r\n            case \"y\":\r\n                this._autoAdjustXScaleDomain = false;\r\n                this._autoAdjustYScaleDomain = true;\r\n                this._adjustYDomainOnChangeFromX();\r\n                break;\r\n            case \"none\":\r\n                this._autoAdjustXScaleDomain = false;\r\n                this._autoAdjustYScaleDomain = false;\r\n                break;\r\n            default:\r\n                throw new Error(\"Invalid scale name '\" + autorangeMode + \"', must be 'x', 'y' or 'none'\");\r\n        }\r\n        return this;\r\n    };\r\n    XYPlot.prototype.computeLayout = function (origin, availableWidth, availableHeight) {\r\n        _super.prototype.computeLayout.call(this, origin, availableWidth, availableHeight);\r\n        var xBinding = this.x();\r\n        var xScale = xBinding && xBinding.scale;\r\n        if (xScale != null) {\r\n            xScale.range([0, this.width()]);\r\n        }\r\n        var yBinding = this.y();\r\n        var yScale = yBinding && yBinding.scale;\r\n        if (yScale != null) {\r\n            if (yScale instanceof Scales.Category) {\r\n                yScale.range([0, this.height()]);\r\n            }\r\n            else {\r\n                yScale.range([this.height(), 0]);\r\n            }\r\n        }\r\n        return this;\r\n    };\r\n    XYPlot.prototype._updateXExtentsAndAutodomain = function () {\r\n        var xScale = this.x().scale;\r\n        if (xScale != null) {\r\n            xScale.autoDomain();\r\n        }\r\n    };\r\n    XYPlot.prototype._updateYExtentsAndAutodomain = function () {\r\n        var yScale = this.y().scale;\r\n        if (yScale != null) {\r\n            yScale.autoDomain();\r\n        }\r\n    };\r\n    /**\r\n     * Adjusts the domains of both X and Y scales to show all data.\r\n     * This call does not override the autorange() behavior.\r\n     *\r\n     * @returns {XYPlot} The calling XYPlot.\r\n     */\r\n    XYPlot.prototype.showAllData = function () {\r\n        this._updateXExtentsAndAutodomain();\r\n        this._updateYExtentsAndAutodomain();\r\n        return this;\r\n    };\r\n    XYPlot.prototype._adjustYDomainOnChangeFromX = function () {\r\n        if (!this._projectorsReady()) {\r\n            return;\r\n        }\r\n        if (this._autoAdjustYScaleDomain) {\r\n            this._updateYExtentsAndAutodomain();\r\n        }\r\n    };\r\n    XYPlot.prototype._adjustXDomainOnChangeFromY = function () {\r\n        if (!this._projectorsReady()) {\r\n            return;\r\n        }\r\n        if (this._autoAdjustXScaleDomain) {\r\n            this._updateXExtentsAndAutodomain();\r\n        }\r\n    };\r\n    XYPlot.prototype._projectorsReady = function () {\r\n        var xBinding = this.x();\r\n        var yBinding = this.y();\r\n        return xBinding != null &&\r\n            xBinding.accessor != null &&\r\n            yBinding != null &&\r\n            yBinding.accessor != null;\r\n    };\r\n    XYPlot.prototype._pixelPoint = function (datum, index, dataset) {\r\n        var xProjector = plot_1.Plot._scaledAccessor(this.x());\r\n        var yProjector = plot_1.Plot._scaledAccessor(this.y());\r\n        return { x: xProjector(datum, index, dataset), y: yProjector(datum, index, dataset) };\r\n    };\r\n    XYPlot.prototype._getDataToDraw = function () {\r\n        var _this = this;\r\n        var dataToDraw = _super.prototype._getDataToDraw.call(this);\r\n        var definedAttr = this.attr(\"defined\");\r\n        var definedFunction = function (d, i, dataset) {\r\n            var positionX = plot_1.Plot._scaledAccessor(_this.x())(d, i, dataset);\r\n            var positionY = plot_1.Plot._scaledAccessor(_this.y())(d, i, dataset);\r\n            if (definedAttr && definedAttr.accessor(d, i, dataset) === false) {\r\n                return false;\r\n            }\r\n            return Utils.Math.isValidNumber(positionX) &&\r\n                Utils.Math.isValidNumber(positionY);\r\n        };\r\n        this.datasets().forEach(function (dataset) {\r\n            dataToDraw.set(dataset, dataToDraw.get(dataset).filter(function (d, i) { return definedFunction(d, i, dataset); }));\r\n        });\r\n        return dataToDraw;\r\n    };\r\n    XYPlot._X_KEY = \"x\";\r\n    XYPlot._Y_KEY = \"y\";\r\n    return XYPlot;\r\n}(plot_1.Plot));\r\nexports.XYPlot = XYPlot;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/plots/xyPlot.ts\n// module id = 17\n// module chunks = 0","\"use strict\";\r\n/**\r\n * Copyright 2014-present Palantir Technologies\r\n * @license MIT\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Utils = require(\"../utils\");\r\nvar Scale = /** @class */ (function () {\r\n    /**\r\n     * A Scale is a function (in the mathematical sense) that maps values from a domain to a range.\r\n     *\r\n     * @constructor\r\n     */\r\n    function Scale() {\r\n        this._autoDomainAutomatically = true;\r\n        this._domainModificationInProgress = false;\r\n        this._updateId = 0;\r\n        this._callbacks = new Utils.CallbackSet();\r\n        this._includedValuesProviders = new Utils.Set();\r\n    }\r\n    /**\r\n     * Given an array of potential domain values, computes the extent of those values.\r\n     *\r\n     * @param {D[]} values\r\n     * @returns {D[]} The extent of the input values.\r\n     */\r\n    Scale.prototype.extentOfValues = function (values) {\r\n        return []; // this should be overwritten\r\n    };\r\n    Scale.prototype._getAllIncludedValues = function (ignoreAttachState) {\r\n        var _this = this;\r\n        if (ignoreAttachState === void 0) { ignoreAttachState = false; }\r\n        var providerArray = [];\r\n        this._includedValuesProviders.forEach(function (provider) {\r\n            var extents = provider(_this, ignoreAttachState);\r\n            providerArray = providerArray.concat(extents);\r\n        });\r\n        return providerArray;\r\n    };\r\n    Scale.prototype._getExtent = function () {\r\n        return []; // this should be overwritten\r\n    };\r\n    /**\r\n     * Adds a callback to be called when the Scale updates.\r\n     *\r\n     * @param {ScaleCallback} callback.\r\n     * @returns {Scale} The calling Scale.\r\n     */\r\n    Scale.prototype.onUpdate = function (callback) {\r\n        this._callbacks.add(callback);\r\n        return this;\r\n    };\r\n    /**\r\n     * Removes a callback that would be called when the Scale updates.\r\n     *\r\n     * @param {ScaleCallback} callback.\r\n     * @returns {Scale} The calling Scale.\r\n     */\r\n    Scale.prototype.offUpdate = function (callback) {\r\n        this._callbacks.delete(callback);\r\n        return this;\r\n    };\r\n    Scale.prototype._dispatchUpdate = function () {\r\n        this._updateId++;\r\n        this._callbacks.callCallbacks(this);\r\n    };\r\n    /**\r\n     * Sets the Scale's domain so that it spans the Extents of all its ExtentsProviders.\r\n     *\r\n     * @returns {Scale} The calling Scale.\r\n     */\r\n    Scale.prototype.autoDomain = function () {\r\n        this._autoDomainAutomatically = true;\r\n        this._setDomain(this._getExtent());\r\n        return this;\r\n    };\r\n    /**\r\n     * Triggers `.autoDomain()` if the domain is not explicitly set.\r\n     */\r\n    Scale.prototype.autoDomainIfAutomaticMode = function () {\r\n        if (this._autoDomainAutomatically) {\r\n            this.autoDomain();\r\n        }\r\n    };\r\n    /**\r\n     * Computes the range value corresponding to a given domain value.\r\n     *\r\n     * @param {D} value\r\n     * @returns {R} The range value corresponding to the supplied domain value.\r\n     */\r\n    Scale.prototype.scale = function (value) {\r\n        throw new Error(\"Subclasses should override scale\");\r\n    };\r\n    /**\r\n     * Gets an array of tick values spanning the domain.\r\n     *\r\n     * @returns {D[]}\r\n     */\r\n    Scale.prototype.ticks = function () {\r\n        return this.domain();\r\n    };\r\n    Scale.prototype.domain = function (values) {\r\n        if (values == null) {\r\n            return this._getDomain();\r\n        }\r\n        else {\r\n            this._autoDomainAutomatically = false;\r\n            this._setDomain(values);\r\n            return this;\r\n        }\r\n    };\r\n    Scale.prototype._getDomain = function () {\r\n        throw new Error(\"Subclasses should override _getDomain\");\r\n    };\r\n    Scale.prototype._setDomain = function (values) {\r\n        if (!this._domainModificationInProgress) {\r\n            this._domainModificationInProgress = true;\r\n            this._backingScaleDomain(values);\r\n            this._dispatchUpdate();\r\n            this._domainModificationInProgress = false;\r\n        }\r\n    };\r\n    Scale.prototype._backingScaleDomain = function (values) {\r\n        throw new Error(\"Subclasses should override _backingDomain\");\r\n    };\r\n    Scale.prototype.range = function (values) {\r\n        if (values == null) {\r\n            return this._getRange();\r\n        }\r\n        else {\r\n            this._setRange(values);\r\n            return this;\r\n        }\r\n    };\r\n    Scale.prototype._getRange = function () {\r\n        throw new Error(\"Subclasses should override _getRange\");\r\n    };\r\n    Scale.prototype._setRange = function (values) {\r\n        throw new Error(\"Subclasses should override _setRange\");\r\n    };\r\n    /**\r\n     * Adds an IncludedValuesProvider to the Scale.\r\n     *\r\n     * @param {Scales.IncludedValuesProvider} provider\r\n     * @returns {Scale} The calling Scale.\r\n     */\r\n    Scale.prototype.addIncludedValuesProvider = function (provider) {\r\n        this._includedValuesProviders.add(provider);\r\n        this.autoDomainIfAutomaticMode();\r\n        return this;\r\n    };\r\n    /**\r\n     * Removes the IncludedValuesProvider from the Scale.\r\n     *\r\n     * @param {Scales.IncludedValuesProvider} provider\r\n     * @returns {Scale} The calling Scale.\r\n     */\r\n    Scale.prototype.removeIncludedValuesProvider = function (provider) {\r\n        this._includedValuesProviders.delete(provider);\r\n        this.autoDomainIfAutomaticMode();\r\n        return this;\r\n    };\r\n    Scale.prototype.updateId = function () {\r\n        return this._updateId;\r\n    };\r\n    return Scale;\r\n}());\r\nexports.Scale = Scale;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/scales/scale.ts\n// module id = 18\n// module chunks = 0","\"use strict\";\r\n/**\r\n * Copyright 2014-present Palantir Technologies\r\n * @license MIT\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar d3 = require(\"d3\");\r\n/**\r\n * A CanvasDrawer draws data onto a supplied Canvas Context.\r\n *\r\n * This class is immutable (but has internal state) and shouldn't be extended.\r\n */\r\nvar CanvasDrawer = /** @class */ (function () {\r\n    /**\r\n     * @param _context The context for a canvas that this drawer will draw to.\r\n     * @param _drawStep The draw step logic that actually draws.\r\n     */\r\n    function CanvasDrawer(_context, _drawStep) {\r\n        this._context = _context;\r\n        this._drawStep = _drawStep;\r\n    }\r\n    // public for testing\r\n    CanvasDrawer.prototype.getDrawStep = function () {\r\n        return this._drawStep;\r\n    };\r\n    CanvasDrawer.prototype.draw = function (data, appliedDrawSteps) {\r\n        var projector = appliedDrawSteps[appliedDrawSteps.length - 1].attrToAppliedProjector;\r\n        // don't support animations for now; just draw the last draw step immediately\r\n        this._context.save();\r\n        this._drawStep(this._context, data, projector);\r\n        this._context.restore();\r\n    };\r\n    CanvasDrawer.prototype.getVisualPrimitives = function () {\r\n        return [];\r\n    };\r\n    CanvasDrawer.prototype.getVisualPrimitiveAtIndex = function (index) {\r\n        return null;\r\n    };\r\n    CanvasDrawer.prototype.remove = function () {\r\n        // NO op - canvas element owns the canvas; context is free\r\n    };\r\n    return CanvasDrawer;\r\n}());\r\nexports.CanvasDrawer = CanvasDrawer;\r\nexports.ContextStyleAttrs = [\r\n    \"fill-opacity\",\r\n    \"fill\",\r\n    \"opacity\",\r\n    \"stroke-opacity\",\r\n    \"stroke-width\",\r\n    \"stroke\",\r\n    \"stroke-dasharray\",\r\n];\r\n/**\r\n * DEPRECATED. Precompute the concatted array and use `resolveAttributes`\r\n * instead of using this in the inner loop.\r\n */\r\nfunction resolveAttributesSubsetWithStyles(projector, extraKeys, datum, index) {\r\n    var attrKeys = exports.ContextStyleAttrs.concat(extraKeys);\r\n    return resolveAttributes(projector, attrKeys, datum, index);\r\n}\r\nexports.resolveAttributesSubsetWithStyles = resolveAttributesSubsetWithStyles;\r\nfunction resolveAttributes(projector, attrKeys, datum, index) {\r\n    var attrs = {};\r\n    for (var _i = 0, attrKeys_1 = attrKeys; _i < attrKeys_1.length; _i++) {\r\n        var attrKey = attrKeys_1[_i];\r\n        if (projector.hasOwnProperty(attrKey)) {\r\n            attrs[attrKey] = projector[attrKey](datum, index);\r\n        }\r\n    }\r\n    return attrs;\r\n}\r\nexports.resolveAttributes = resolveAttributes;\r\nfunction getStrokeOpacity(style) {\r\n    var baseOpacity = style[\"opacity\"] != null ? parseFloat(style[\"opacity\"]) : 1;\r\n    var strokeOpacity = style[\"stroke-opacity\"] != null ? parseFloat(style[\"stroke-opacity\"]) : 1;\r\n    return strokeOpacity * baseOpacity;\r\n}\r\nfunction getFillOpacity(style) {\r\n    var baseOpacity = style[\"opacity\"] != null ? parseFloat(style[\"opacity\"]) : 1;\r\n    var fillOpacity = style[\"fill-opacity\"] != null ? parseFloat(style[\"fill-opacity\"]) : 1;\r\n    return fillOpacity * baseOpacity;\r\n}\r\nfunction getStrokeWidth(style) {\r\n    return style[\"stroke-width\"] != null ? parseFloat(style[\"stroke-width\"]) : 1;\r\n}\r\nexports.getStrokeWidth = getStrokeWidth;\r\nfunction getStrokeDashArray(style) {\r\n    var rawValue = style[\"stroke-dasharray\"];\r\n    if (rawValue != null) {\r\n        try {\r\n            return rawValue.split(/[ ,]+/).map(function (x) { return parseInt(x, 10); });\r\n        }\r\n        catch (e) {\r\n            console.error(\"getStrokeDashArray failed with: \" + e);\r\n            return [];\r\n        }\r\n    }\r\n    return [];\r\n}\r\nexports.getStrokeDashArray = getStrokeDashArray;\r\nfunction renderArea(context, d3Area, data, style) {\r\n    context.save();\r\n    context.beginPath();\r\n    d3Area.context(context);\r\n    d3Area(data);\r\n    context.lineJoin = \"round\";\r\n    renderPathWithStyle(context, style);\r\n    context.restore();\r\n}\r\nexports.renderArea = renderArea;\r\nfunction renderLine(context, d3Line, data, style) {\r\n    context.save();\r\n    context.beginPath();\r\n    d3Line.context(context);\r\n    d3Line(data);\r\n    context.lineJoin = \"round\";\r\n    renderPathWithStyle(context, style);\r\n    context.restore();\r\n}\r\nexports.renderLine = renderLine;\r\nfunction renderPathWithStyle(context, style) {\r\n    if (style[\"stroke\"]) {\r\n        context.lineWidth = getStrokeWidth(style);\r\n        var strokeColor = d3.color(style[\"stroke\"]);\r\n        var strokeDashArray = getStrokeDashArray(style);\r\n        context.setLineDash(strokeDashArray);\r\n        strokeColor.opacity *= getStrokeOpacity(style);\r\n        context.strokeStyle = strokeColor.toString();\r\n        context.stroke();\r\n    }\r\n    if (style[\"fill\"]) {\r\n        var fillColor = d3.color(style[\"fill\"]);\r\n        fillColor.opacity *= getFillOpacity(style);\r\n        context.fillStyle = fillColor.toString();\r\n        context.fill();\r\n    }\r\n}\r\nexports.renderPathWithStyle = renderPathWithStyle;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/drawers/canvasDrawer.ts\n// module id = 19\n// module chunks = 0","\"use strict\";\r\n/**\r\n * Copyright 2014-present Palantir Technologies\r\n * @license MIT\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\ntslib_1.__exportStar(require(\"./areaPlot\"), exports);\r\ntslib_1.__exportStar(require(\"./barPlot\"), exports);\r\ntslib_1.__exportStar(require(\"./commons\"), exports);\r\ntslib_1.__exportStar(require(\"./clusteredBarPlot\"), exports);\r\ntslib_1.__exportStar(require(\"./linePlot\"), exports);\r\ntslib_1.__exportStar(require(\"./piePlot\"), exports);\r\ntslib_1.__exportStar(require(\"./rectanglePlot\"), exports);\r\ntslib_1.__exportStar(require(\"./scatterPlot\"), exports);\r\ntslib_1.__exportStar(require(\"./segmentPlot\"), exports);\r\ntslib_1.__exportStar(require(\"./stackedAreaPlot\"), exports);\r\ntslib_1.__exportStar(require(\"./stackedBarPlot\"), exports);\r\ntslib_1.__exportStar(require(\"./waterfallPlot\"), exports);\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/plots/index.ts\n// module id = 20\n// module chunks = 0","\"use strict\";\r\n/**\r\n * Copyright 2014-present Palantir Technologies\r\n * @license MIT\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\ntslib_1.__exportStar(require(\"./memoize\"), exports);\r\ntslib_1.__exportStar(require(\"./memoizeProjectors\"), exports);\r\ntslib_1.__exportStar(require(\"./memThunk\"), exports);\r\nvar signature_1 = require(\"./signature\");\r\nexports.sign = signature_1.sign;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/memoize/index.ts\n// module id = 21\n// module chunks = 0","\"use strict\";\n/**\n * Copyright 2017-present Palantir Technologies, Inc. All rights reserved.\n * Licensed under the MIT License (the \"License\"); you may obtain a copy of the\n * license at https://github.com/palantir/typesettable/blob/develop/LICENSE\n */\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./cache\"));\n__export(require(\"./methods\"));\n__export(require(\"./stringMethods\"));\n__export(require(\"./tokenizer\"));\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/typesettable/build/src/utils/index.js\n// module id = 22\n// module chunks = 0","\"use strict\";\r\n/**\r\n * Copyright 2014-present Palantir Technologies\r\n * @license MIT\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\nvar d3 = require(\"d3\");\r\nvar Typesettable = require(\"typesettable\");\r\nvar component_1 = require(\"../components/component\");\r\nvar Formatters = require(\"../core/formatters\");\r\nvar Utils = require(\"../utils\");\r\nvar makeEnum_1 = require(\"../utils/makeEnum\");\r\nexports.AxisOrientation = makeEnum_1.makeEnum([\"bottom\", \"left\", \"right\", \"top\"]);\r\nvar Axis = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Axis, _super);\r\n    /**\r\n     * Constructs an Axis.\r\n     * An Axis is a visual representation of a Scale.\r\n     *\r\n     * @constructor\r\n     * @param {Scale} scale\r\n     * @param {AxisOrientation} orientation Orientation of this Axis.\r\n     */\r\n    function Axis(scale, orientation) {\r\n        var _this = _super.call(this) || this;\r\n        _this._endTickLength = 5;\r\n        _this._innerTickLength = 5;\r\n        _this._tickLabelPadding = 10;\r\n        _this._margin = 15;\r\n        _this._showEndTickLabels = false;\r\n        _this._annotationsEnabled = false;\r\n        _this._annotationTierCount = 1;\r\n        if (scale == null || orientation == null) {\r\n            throw new Error(\"Axis requires a scale and orientation\");\r\n        }\r\n        _this._scale = scale;\r\n        _this.orientation(orientation);\r\n        _this._setDefaultAlignment();\r\n        _this.addClass(\"axis\");\r\n        if (_this.isHorizontal()) {\r\n            _this.addClass(\"x-axis\");\r\n        }\r\n        else {\r\n            _this.addClass(\"y-axis\");\r\n        }\r\n        _this.formatter(Formatters.identity());\r\n        _this._rescaleCallback = function (newScale) { return _this._rescale(); };\r\n        _this._scale.onUpdate(_this._rescaleCallback);\r\n        _this._annotatedTicks = [];\r\n        _this._annotationFormatter = Formatters.identity();\r\n        return _this;\r\n    }\r\n    Axis.prototype.destroy = function () {\r\n        _super.prototype.destroy.call(this);\r\n        this._scale.offUpdate(this._rescaleCallback);\r\n    };\r\n    /**\r\n     * Gets the tick label data on a element. Element in argument must be a descendent of a tick label element.\r\n     *\r\n     * @param {Element} element\r\n     */\r\n    Axis.prototype.tickLabelDataOnElement = function (element) {\r\n        if (element == null) {\r\n            return undefined;\r\n        }\r\n        var tickLabel;\r\n        // go up DOM tree to find tick label element in ancestor elements\r\n        while ((element != null) && (element.classList) && (tickLabel === undefined)) {\r\n            if (element.classList.contains(Axis.TICK_LABEL_CLASS)) {\r\n                tickLabel = element;\r\n            }\r\n            else {\r\n                element = element.parentNode;\r\n            }\r\n        }\r\n        return element === undefined ? undefined : d3.select(element).datum();\r\n    };\r\n    Axis.prototype._computeWidth = function () {\r\n        // to be overridden by subclass logic\r\n        return this._maxLabelTickLength();\r\n    };\r\n    Axis.prototype._computeHeight = function () {\r\n        // to be overridden by subclass logic\r\n        return this._maxLabelTickLength();\r\n    };\r\n    Axis.prototype.requestedSpace = function (offeredWidth, offeredHeight) {\r\n        var requestedWidth = 0;\r\n        var requestedHeight = 0;\r\n        if (this.isHorizontal()) {\r\n            requestedHeight = this._computeHeight() + this._margin;\r\n            if (this.annotationsEnabled()) {\r\n                var tierHeight = this._annotationMeasurer.measure().height + 2 * Axis._ANNOTATION_LABEL_PADDING;\r\n                requestedHeight += tierHeight * this.annotationTierCount();\r\n            }\r\n        }\r\n        else {\r\n            requestedWidth = this._computeWidth() + this._margin;\r\n            if (this.annotationsEnabled()) {\r\n                var tierHeight = this._annotationMeasurer.measure().height + 2 * Axis._ANNOTATION_LABEL_PADDING;\r\n                requestedWidth += tierHeight * this.annotationTierCount();\r\n            }\r\n        }\r\n        return {\r\n            minWidth: requestedWidth,\r\n            minHeight: requestedHeight,\r\n        };\r\n    };\r\n    Axis.prototype.fixedHeight = function () {\r\n        return this.isHorizontal();\r\n    };\r\n    Axis.prototype.fixedWidth = function () {\r\n        return !this.isHorizontal();\r\n    };\r\n    Axis.prototype._rescale = function () {\r\n        // default implementation; subclasses may call redraw() here\r\n        this.render();\r\n    };\r\n    Axis.prototype.computeLayout = function (origin, availableWidth, availableHeight) {\r\n        _super.prototype.computeLayout.call(this, origin, availableWidth, availableHeight);\r\n        if (this.isHorizontal()) {\r\n            this._scale.range([0, this.width()]);\r\n        }\r\n        else {\r\n            this._scale.range([this.height(), 0]);\r\n        }\r\n        return this;\r\n    };\r\n    Axis.prototype._sizeFromOffer = function (availableWidth, availableHeight) {\r\n        var requestedSpace = this.requestedSpace(availableWidth, availableHeight);\r\n        if (this.isHorizontal()) {\r\n            return {\r\n                width: availableWidth,\r\n                // always keep the height to be what we request; Axes tell the outside what height they are.\r\n                // this allows blueprint-chart to put the Axis in document flow by removing absolute positioning\r\n                height: requestedSpace.minHeight,\r\n            };\r\n        }\r\n        else {\r\n            return {\r\n                height: availableHeight,\r\n                width: requestedSpace.minWidth,\r\n            };\r\n        }\r\n    };\r\n    Axis.prototype._setup = function () {\r\n        _super.prototype._setup.call(this);\r\n        this._tickMarkContainer = this.content().append(\"g\")\r\n            .classed(Axis.TICK_MARK_CLASS + \"-container\", true);\r\n        this._tickLabelContainer = this.content().append(\"g\")\r\n            .classed(Axis.TICK_LABEL_CLASS + \"-container\", true);\r\n        this._baseline = this.content().append(\"line\").classed(\"baseline\", true);\r\n        this._annotationContainer = this.content().append(\"g\")\r\n            .classed(\"annotation-container\", true);\r\n        this._annotationContainer.append(\"g\").classed(\"annotation-line-container\", true);\r\n        this._annotationContainer.append(\"g\").classed(\"annotation-circle-container\", true);\r\n        this._annotationContainer.append(\"g\").classed(\"annotation-rect-container\", true);\r\n        var annotationLabelContainer = this._annotationContainer.append(\"g\").classed(\"annotation-label-container\", true);\r\n        var typesetterContext = new Typesettable.SvgContext(annotationLabelContainer.node());\r\n        this._annotationMeasurer = new Typesettable.CacheMeasurer(typesetterContext);\r\n        this._annotationWriter = new Typesettable.Writer(this._annotationMeasurer, typesetterContext);\r\n    };\r\n    /*\r\n     * Function for generating tick values in data-space (as opposed to pixel values).\r\n     * To be implemented by subclasses.\r\n     */\r\n    Axis.prototype._getTickValues = function () {\r\n        return [];\r\n    };\r\n    /**\r\n     * Render tick marks, baseline, and annotations. Should be super called by subclasses and then overridden to draw\r\n     * other relevant aspects of this Axis.\r\n     */\r\n    Axis.prototype.renderImmediately = function () {\r\n        var tickMarkValues = this._getTickValues();\r\n        var tickMarksUpdate = this._tickMarkContainer.selectAll(\".\" + Axis.TICK_MARK_CLASS).data(tickMarkValues);\r\n        var tickMarks = tickMarksUpdate\r\n            .enter()\r\n            .append(\"line\")\r\n            .classed(Axis.TICK_MARK_CLASS, true)\r\n            .merge(tickMarksUpdate);\r\n        tickMarks.attrs(this._generateTickMarkAttrHash());\r\n        d3.select(tickMarks.nodes()[0]).classed(Axis.END_TICK_MARK_CLASS, true)\r\n            .attrs(this._generateTickMarkAttrHash(true));\r\n        d3.select(tickMarks.nodes()[tickMarkValues.length - 1]).classed(Axis.END_TICK_MARK_CLASS, true)\r\n            .attrs(this._generateTickMarkAttrHash(true));\r\n        tickMarksUpdate.exit().remove();\r\n        this._baseline.attrs(this._generateBaselineAttrHash());\r\n        if (this.annotationsEnabled()) {\r\n            this._drawAnnotations();\r\n        }\r\n        else {\r\n            this._removeAnnotations();\r\n        }\r\n        return this;\r\n    };\r\n    Axis.prototype.annotatedTicks = function (annotatedTicks) {\r\n        if (annotatedTicks == null) {\r\n            return this._annotatedTicks;\r\n        }\r\n        this._annotatedTicks = annotatedTicks;\r\n        this.render();\r\n        return this;\r\n    };\r\n    Axis.prototype.annotationFormatter = function (annotationFormatter) {\r\n        if (annotationFormatter == null) {\r\n            return this._annotationFormatter;\r\n        }\r\n        this._annotationFormatter = annotationFormatter;\r\n        this.render();\r\n        return this;\r\n    };\r\n    Axis.prototype.annotationsEnabled = function (annotationsEnabled) {\r\n        if (annotationsEnabled == null) {\r\n            return this._annotationsEnabled;\r\n        }\r\n        this._annotationsEnabled = annotationsEnabled;\r\n        this.redraw();\r\n        return this;\r\n    };\r\n    Axis.prototype.annotationTierCount = function (annotationTierCount) {\r\n        if (annotationTierCount == null) {\r\n            return this._annotationTierCount;\r\n        }\r\n        if (annotationTierCount < 0) {\r\n            throw new Error(\"annotationTierCount cannot be negative\");\r\n        }\r\n        this._annotationTierCount = annotationTierCount;\r\n        this.redraw();\r\n        return this;\r\n    };\r\n    Axis.prototype._drawAnnotations = function () {\r\n        var _this = this;\r\n        var labelPadding = Axis._ANNOTATION_LABEL_PADDING;\r\n        var measurements = new Utils.Map();\r\n        var annotatedTicks = this._annotatedTicksToRender();\r\n        annotatedTicks.forEach(function (annotatedTick) {\r\n            var measurement = _this._annotationMeasurer.measure(_this.annotationFormatter()(annotatedTick));\r\n            var paddedMeasurement = {\r\n                width: measurement.width + 2 * labelPadding,\r\n                height: measurement.height + 2 * labelPadding,\r\n            };\r\n            measurements.set(annotatedTick, paddedMeasurement);\r\n        });\r\n        var tierHeight = this._annotationMeasurer.measure().height + 2 * labelPadding;\r\n        var annotationToTier = this._annotationToTier(measurements);\r\n        var hiddenAnnotations = new Utils.Set();\r\n        var axisHeight = this.isHorizontal() ? this.height() : this.width();\r\n        var axisHeightWithoutMarginAndAnnotations = this._coreSize();\r\n        var numTiers = Math.min(this.annotationTierCount(), Math.floor((axisHeight - axisHeightWithoutMarginAndAnnotations) / tierHeight));\r\n        annotationToTier.forEach(function (tier, annotation) {\r\n            if (tier === -1 || tier >= numTiers) {\r\n                hiddenAnnotations.add(annotation);\r\n            }\r\n        });\r\n        var bindElements = function (selection, elementName, className) {\r\n            var elementsUpdate = selection.selectAll(\".\" + className).data(annotatedTicks);\r\n            var elements = elementsUpdate\r\n                .enter()\r\n                .append(elementName)\r\n                .classed(className, true)\r\n                .merge(elementsUpdate);\r\n            elementsUpdate.exit().remove();\r\n            return elements;\r\n        };\r\n        var offsetF = function (d) {\r\n            switch (_this.orientation()) {\r\n                case \"bottom\":\r\n                case \"right\":\r\n                    return annotationToTier.get(d) * tierHeight + axisHeightWithoutMarginAndAnnotations;\r\n                case \"top\":\r\n                case \"left\":\r\n                    return axisHeight - axisHeightWithoutMarginAndAnnotations - annotationToTier.get(d) * tierHeight;\r\n            }\r\n        };\r\n        var positionF = function (d) { return _this._scale.scale(d); };\r\n        var visibilityF = function (d) { return hiddenAnnotations.has(d) ? \"hidden\" : \"visible\"; };\r\n        var secondaryPosition;\r\n        switch (this.orientation()) {\r\n            case \"bottom\":\r\n            case \"right\":\r\n                secondaryPosition = 0;\r\n                break;\r\n            case \"top\":\r\n                secondaryPosition = this.height();\r\n                break;\r\n            case \"left\":\r\n                secondaryPosition = this.width();\r\n                break;\r\n        }\r\n        var isHorizontal = this.isHorizontal();\r\n        bindElements(this._annotationContainer.select(\".annotation-line-container\"), \"line\", Axis.ANNOTATION_LINE_CLASS)\r\n            .attrs({\r\n            \"x1\": isHorizontal ? positionF : secondaryPosition,\r\n            \"x2\": isHorizontal ? positionF : offsetF,\r\n            \"y1\": isHorizontal ? secondaryPosition : positionF,\r\n            \"y2\": isHorizontal ? offsetF : positionF,\r\n            visibility: visibilityF,\r\n        });\r\n        bindElements(this._annotationContainer.select(\".annotation-circle-container\"), \"circle\", Axis.ANNOTATION_CIRCLE_CLASS)\r\n            .attrs({\r\n            cx: isHorizontal ? positionF : secondaryPosition,\r\n            cy: isHorizontal ? secondaryPosition : positionF,\r\n            r: 3,\r\n        });\r\n        var rectangleOffsetF = function (d) {\r\n            switch (_this.orientation()) {\r\n                case \"bottom\":\r\n                case \"right\":\r\n                    return offsetF(d);\r\n                case \"top\":\r\n                case \"left\":\r\n                    return offsetF(d) - measurements.get(d).height;\r\n            }\r\n        };\r\n        bindElements(this._annotationContainer.select(\".annotation-rect-container\"), \"rect\", Axis.ANNOTATION_RECT_CLASS)\r\n            .attrs({\r\n            x: isHorizontal ? positionF : rectangleOffsetF,\r\n            y: isHorizontal ? rectangleOffsetF : positionF,\r\n            width: isHorizontal ? function (d) { return measurements.get(d).width; } : function (d) { return measurements.get(d).height; },\r\n            height: isHorizontal ? function (d) { return measurements.get(d).height; } : function (d) { return measurements.get(d).width; },\r\n            visibility: visibilityF,\r\n        });\r\n        var annotationWriter = this._annotationWriter;\r\n        var annotationFormatter = this.annotationFormatter();\r\n        var annotationLabels = bindElements(this._annotationContainer.select(\".annotation-label-container\"), \"g\", Axis.ANNOTATION_LABEL_CLASS);\r\n        annotationLabels.selectAll(\".text-container\").remove();\r\n        annotationLabels.attrs({\r\n            transform: function (d) {\r\n                var xTranslate = isHorizontal ? positionF(d) : rectangleOffsetF(d);\r\n                var yTranslate = isHorizontal ? rectangleOffsetF(d) : positionF(d);\r\n                return \"translate(\" + xTranslate + \",\" + yTranslate + \")\";\r\n            },\r\n            visibility: visibilityF,\r\n        })\r\n            .each(function (annotationLabel) {\r\n            annotationWriter.write(annotationFormatter(annotationLabel), isHorizontal ? measurements.get(annotationLabel).width : measurements.get(annotationLabel).height, isHorizontal ? measurements.get(annotationLabel).height : measurements.get(annotationLabel).width, {\r\n                xAlign: \"center\",\r\n                yAlign: \"center\",\r\n                textRotation: isHorizontal ? 0 : 90,\r\n            }, d3.select(this).node());\r\n        });\r\n    };\r\n    Axis.prototype._annotatedTicksToRender = function () {\r\n        var _this = this;\r\n        var scaleRange = this._scale.range();\r\n        return Utils.Array.uniq(this.annotatedTicks().filter(function (tick) {\r\n            if (tick == null) {\r\n                return false;\r\n            }\r\n            return Utils.Math.inRange(_this._scale.scale(tick), scaleRange[0], scaleRange[1]);\r\n        }));\r\n    };\r\n    /**\r\n     * Retrieves the size of the core pieces.\r\n     *\r\n     * The core pieces include the labels, the end tick marks, the inner tick marks, and the tick label padding.\r\n     */\r\n    Axis.prototype._coreSize = function () {\r\n        var relevantDimension = this.isHorizontal() ? this.height() : this.width();\r\n        var axisHeightWithoutMargin = this.isHorizontal() ? this._computeHeight() : this._computeWidth();\r\n        return Math.min(axisHeightWithoutMargin, relevantDimension);\r\n    };\r\n    Axis.prototype._annotationTierHeight = function () {\r\n        return this._annotationMeasurer.measure().height + 2 * Axis._ANNOTATION_LABEL_PADDING;\r\n    };\r\n    Axis.prototype._annotationToTier = function (measurements) {\r\n        var _this = this;\r\n        var annotationTiers = [[]];\r\n        var annotationToTier = new Utils.Map();\r\n        var dimension = this.isHorizontal() ? this.width() : this.height();\r\n        this._annotatedTicksToRender().forEach(function (annotatedTick) {\r\n            var position = _this._scale.scale(annotatedTick);\r\n            var length = measurements.get(annotatedTick).width;\r\n            if (position < 0 || position + length > dimension) {\r\n                annotationToTier.set(annotatedTick, -1);\r\n                return;\r\n            }\r\n            var tierHasCollision = function (testTier) { return annotationTiers[testTier].some(function (testTick) {\r\n                var testPosition = _this._scale.scale(testTick);\r\n                var testLength = measurements.get(testTick).width;\r\n                return position + length >= testPosition && position <= testPosition + testLength;\r\n            }); };\r\n            var tier = 0;\r\n            while (tierHasCollision(tier)) {\r\n                tier++;\r\n                if (annotationTiers.length === tier) {\r\n                    annotationTiers.push([]);\r\n                }\r\n            }\r\n            annotationTiers[tier].push(annotatedTick);\r\n            annotationToTier.set(annotatedTick, tier);\r\n        });\r\n        return annotationToTier;\r\n    };\r\n    Axis.prototype._removeAnnotations = function () {\r\n        this._annotationContainer.selectAll(\".annotation-line\").remove();\r\n        this._annotationContainer.selectAll(\".annotation-circle\").remove();\r\n        this._annotationContainer.selectAll(\".annotation-rect\").remove();\r\n        this._annotationContainer.selectAll(\".annotation-label\").remove();\r\n    };\r\n    Axis.prototype._generateBaselineAttrHash = function () {\r\n        var baselineAttrHash = {\r\n            \"x1\": 0,\r\n            \"y1\": 0,\r\n            \"x2\": 0,\r\n            \"y2\": 0,\r\n        };\r\n        switch (this._orientation) {\r\n            case \"bottom\":\r\n                baselineAttrHash[\"x2\"] = this.width();\r\n                break;\r\n            case \"top\":\r\n                baselineAttrHash[\"x2\"] = this.width();\r\n                baselineAttrHash[\"y1\"] = this.height();\r\n                baselineAttrHash[\"y2\"] = this.height();\r\n                break;\r\n            case \"left\":\r\n                baselineAttrHash[\"x1\"] = this.width();\r\n                baselineAttrHash[\"x2\"] = this.width();\r\n                baselineAttrHash[\"y2\"] = this.height();\r\n                break;\r\n            case \"right\":\r\n                baselineAttrHash[\"y2\"] = this.height();\r\n                break;\r\n        }\r\n        return baselineAttrHash;\r\n    };\r\n    Axis.prototype._generateTickMarkAttrHash = function (isEndTickMark) {\r\n        var _this = this;\r\n        if (isEndTickMark === void 0) { isEndTickMark = false; }\r\n        var tickMarkAttrHash = {\r\n            \"x1\": 0,\r\n            \"y1\": 0,\r\n            \"x2\": 0,\r\n            \"y2\": 0,\r\n        };\r\n        var scalingFunction = function (d) { return _this._scale.scale(d); };\r\n        if (this.isHorizontal()) {\r\n            tickMarkAttrHash[\"x1\"] = scalingFunction;\r\n            tickMarkAttrHash[\"x2\"] = scalingFunction;\r\n        }\r\n        else {\r\n            tickMarkAttrHash[\"y1\"] = scalingFunction;\r\n            tickMarkAttrHash[\"y2\"] = scalingFunction;\r\n        }\r\n        var tickLength = isEndTickMark ? this._endTickLength : this._innerTickLength;\r\n        switch (this._orientation) {\r\n            case \"bottom\":\r\n                tickMarkAttrHash[\"y2\"] = tickLength;\r\n                break;\r\n            case \"top\":\r\n                tickMarkAttrHash[\"y1\"] = this.height();\r\n                tickMarkAttrHash[\"y2\"] = this.height() - tickLength;\r\n                break;\r\n            case \"left\":\r\n                tickMarkAttrHash[\"x1\"] = this.width();\r\n                tickMarkAttrHash[\"x2\"] = this.width() - tickLength;\r\n                break;\r\n            case \"right\":\r\n                tickMarkAttrHash[\"x2\"] = tickLength;\r\n                break;\r\n        }\r\n        return tickMarkAttrHash;\r\n    };\r\n    Axis.prototype._setDefaultAlignment = function () {\r\n        switch (this._orientation) {\r\n            case \"bottom\":\r\n                this.yAlignment(\"top\");\r\n                break;\r\n            case \"top\":\r\n                this.yAlignment(\"bottom\");\r\n                break;\r\n            case \"left\":\r\n                this.xAlignment(\"right\");\r\n                break;\r\n            case \"right\":\r\n                this.xAlignment(\"left\");\r\n                break;\r\n        }\r\n    };\r\n    /**\r\n     * Get whether this axis is horizontal (orientation is \"top\" or \"bottom\") or vertical.\r\n     * @returns {boolean} - true for horizontal, false for vertical.\r\n     */\r\n    Axis.prototype.isHorizontal = function () {\r\n        return this._orientation === \"top\" || this._orientation === \"bottom\";\r\n    };\r\n    /**\r\n     * Get the scale that this axis is associated with.\r\n     * @returns {Scale<D, number>}\r\n     */\r\n    Axis.prototype.getScale = function () {\r\n        return this._scale;\r\n    };\r\n    Axis.prototype.formatter = function (formatter) {\r\n        if (formatter == null) {\r\n            return this._formatter;\r\n        }\r\n        this._formatter = formatter;\r\n        this.redraw();\r\n        return this;\r\n    };\r\n    Axis.prototype.innerTickLength = function (length) {\r\n        if (length == null) {\r\n            return this._innerTickLength;\r\n        }\r\n        else {\r\n            if (length < 0) {\r\n                throw new Error(\"inner tick length must be positive\");\r\n            }\r\n            this._innerTickLength = length;\r\n            this.redraw();\r\n            return this;\r\n        }\r\n    };\r\n    Axis.prototype.endTickLength = function (length) {\r\n        if (length == null) {\r\n            return this._endTickLength;\r\n        }\r\n        else {\r\n            if (length < 0) {\r\n                throw new Error(\"end tick length must be positive\");\r\n            }\r\n            this._endTickLength = length;\r\n            this.redraw();\r\n            return this;\r\n        }\r\n    };\r\n    /**\r\n     * Gets the maximum pixel length over all ticks on this axis.\r\n     * @returns {number}\r\n     */\r\n    Axis.prototype._maxLabelTickLength = function () {\r\n        if (this.showEndTickLabels()) {\r\n            return Math.max(this.innerTickLength(), this.endTickLength());\r\n        }\r\n        else {\r\n            return this.innerTickLength();\r\n        }\r\n    };\r\n    Axis.prototype.tickLabelPadding = function (padding) {\r\n        if (padding == null) {\r\n            return this._tickLabelPadding;\r\n        }\r\n        else {\r\n            if (padding < 0) {\r\n                throw new Error(\"tick label padding must be positive\");\r\n            }\r\n            this._tickLabelPadding = padding;\r\n            this.redraw();\r\n            return this;\r\n        }\r\n    };\r\n    Axis.prototype.margin = function (size) {\r\n        if (size == null) {\r\n            return this._margin;\r\n        }\r\n        else {\r\n            if (size < 0) {\r\n                throw new Error(\"margin size must be positive\");\r\n            }\r\n            this._margin = size;\r\n            this.redraw();\r\n            return this;\r\n        }\r\n    };\r\n    Axis.prototype.orientation = function (orientation) {\r\n        if (orientation == null) {\r\n            return this._orientation;\r\n        }\r\n        else {\r\n            // ensure backwards compatibility for older versions that supply orientation in different cases\r\n            var newOrientationLC = orientation.toLowerCase();\r\n            if (newOrientationLC !== \"top\" &&\r\n                newOrientationLC !== \"bottom\" &&\r\n                newOrientationLC !== \"left\" &&\r\n                newOrientationLC !== \"right\") {\r\n                throw new Error(\"unsupported orientation\");\r\n            }\r\n            this._orientation = newOrientationLC;\r\n            this.redraw();\r\n            return this;\r\n        }\r\n    };\r\n    Axis.prototype.showEndTickLabels = function (show) {\r\n        if (show == null) {\r\n            return this._showEndTickLabels;\r\n        }\r\n        this._showEndTickLabels = show;\r\n        this.render();\r\n        return this;\r\n    };\r\n    Axis.prototype._showAllTickMarks = function () {\r\n        this._tickMarkContainer.selectAll(\".\" + Axis.TICK_MARK_CLASS)\r\n            .each(function () {\r\n            d3.select(this).style(\"visibility\", \"inherit\");\r\n        });\r\n    };\r\n    Axis.prototype._showAllTickLabels = function () {\r\n        this._tickLabelContainer.selectAll(\".\" + Axis.TICK_LABEL_CLASS)\r\n            .each(function () {\r\n            d3.select(this).style(\"visibility\", \"inherit\");\r\n        });\r\n    };\r\n    /**\r\n     * Responsible for hiding any tick labels that break out of the bounding\r\n     * container.\r\n     */\r\n    Axis.prototype._hideOverflowingTickLabels = function () {\r\n        var boundingBox = this.element().node().getBoundingClientRect();\r\n        var tickLabels = this._tickLabelContainer.selectAll(\".\" + Axis.TICK_LABEL_CLASS);\r\n        if (tickLabels.empty()) {\r\n            return;\r\n        }\r\n        tickLabels.each(function (d, i) {\r\n            if (!Utils.DOM.clientRectInside(this.getBoundingClientRect(), boundingBox)) {\r\n                d3.select(this).style(\"visibility\", \"hidden\");\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Hides the Tick Marks which have no corresponding Tick Labels\r\n     */\r\n    Axis.prototype._hideTickMarksWithoutLabel = function () {\r\n        var visibleTickMarks = this._tickMarkContainer.selectAll(\".\" + Axis.TICK_MARK_CLASS);\r\n        var visibleTickLabels = this._tickLabelContainer\r\n            .selectAll(\".\" + Axis.TICK_LABEL_CLASS)\r\n            .filter(function (d, i) {\r\n            var visibility = d3.select(this).style(\"visibility\");\r\n            return (visibility === \"inherit\") || (visibility === \"visible\");\r\n        });\r\n        var labelNumbersShown = visibleTickLabels.data();\r\n        visibleTickMarks.each(function (e, i) {\r\n            if (labelNumbersShown.indexOf(e) === -1) {\r\n                d3.select(this).style(\"visibility\", \"hidden\");\r\n            }\r\n        });\r\n    };\r\n    Axis.prototype.invalidateCache = function () {\r\n        _super.prototype.invalidateCache.call(this);\r\n        this._annotationMeasurer.reset();\r\n    };\r\n    /**\r\n     * The css class applied to each end tick mark (the line on the end tick).\r\n     */\r\n    Axis.END_TICK_MARK_CLASS = \"end-tick-mark\";\r\n    /**\r\n     * The css class applied to each tick mark (the line on the tick).\r\n     */\r\n    Axis.TICK_MARK_CLASS = \"tick-mark\";\r\n    /**\r\n     * The css class applied to each tick label (the text associated with the tick).\r\n     */\r\n    Axis.TICK_LABEL_CLASS = \"tick-label\";\r\n    /**\r\n     * The css class applied to each annotation line, which extends from the axis to the rect.\r\n     */\r\n    Axis.ANNOTATION_LINE_CLASS = \"annotation-line\";\r\n    /**\r\n     * The css class applied to each annotation rect, which surrounds the annotation label.\r\n     */\r\n    Axis.ANNOTATION_RECT_CLASS = \"annotation-rect\";\r\n    /**\r\n     * The css class applied to each annotation circle, which denotes which tick is being annotated.\r\n     */\r\n    Axis.ANNOTATION_CIRCLE_CLASS = \"annotation-circle\";\r\n    /**\r\n     * The css class applied to each annotation label, which shows the formatted annotation text.\r\n     */\r\n    Axis.ANNOTATION_LABEL_CLASS = \"annotation-label\";\r\n    Axis._ANNOTATION_LABEL_PADDING = 4;\r\n    return Axis;\r\n}(component_1.Component));\r\nexports.Axis = Axis;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/axes/axis.ts\n// module id = 23\n// module chunks = 0","\"use strict\";\r\n/**\r\n * Copyright 2014-present Palantir Technologies\r\n * @license MIT\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * Specifies if Plottable should show warnings.\r\n */\r\nexports.SHOW_WARNINGS = true;\r\n/**\r\n * Specifies if Plottable should add <title> elements to text.\r\n */\r\nexports.ADD_TITLE_ELEMENTS = true;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/core/config.ts\n// module id = 24\n// module chunks = 0","\"use strict\";\r\n/**\r\n * Copyright 2014-present Palantir Technologies\r\n * @license MIT\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Utils = require(\"../utils\");\r\nvar Dispatcher = /** @class */ (function () {\r\n    function Dispatcher() {\r\n        /**\r\n         * Subclasses set these in constructor. Then, these get attached to the event\r\n         * target in _connect\r\n         *\r\n         * eventname is a DOM event name like \"mouseup\", \"touchstart\", etc. The\r\n         * callback is simply registered to the event callback with bubbling.\r\n         */\r\n        this._eventToProcessingFunction = {};\r\n        /**\r\n         * All listeners are registered to this `EventTarget` and events are then\r\n         * dispatched to callbacks from `_eventNameToCallbackSet` manually.\r\n         *\r\n         * Subclasses set their own event target instead of `document`.\r\n         */\r\n        this._eventTarget = document;\r\n        this._eventNameToCallbackSet = {};\r\n        this._connected = false;\r\n    }\r\n    Dispatcher.prototype._hasNoCallbacks = function () {\r\n        var eventNames = Object.keys(this._eventNameToCallbackSet);\r\n        for (var i = 0; i < eventNames.length; i++) {\r\n            if (this._eventNameToCallbackSet[eventNames[i]].size !== 0) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    Dispatcher.prototype._connect = function () {\r\n        var _this = this;\r\n        if (this._connected) {\r\n            return;\r\n        }\r\n        Object.keys(this._eventToProcessingFunction).forEach(function (event) {\r\n            var processingFunction = _this._eventToProcessingFunction[event];\r\n            // Add `{ passive: false }` option because Chrome 73 broke this.\r\n            var options = event === \"wheel\" ? { passive: false } : undefined;\r\n            _this._eventTarget.addEventListener(event, processingFunction, options);\r\n        });\r\n        this._connected = true;\r\n    };\r\n    Dispatcher.prototype._disconnect = function () {\r\n        var _this = this;\r\n        if (this._connected && this._hasNoCallbacks()) {\r\n            Object.keys(this._eventToProcessingFunction).forEach(function (event) {\r\n                var processingFunction = _this._eventToProcessingFunction[event];\r\n                _this._eventTarget.removeEventListener(event, processingFunction);\r\n            });\r\n            this._connected = false;\r\n        }\r\n    };\r\n    Dispatcher.prototype._addCallbackForEvent = function (eventName, callback) {\r\n        if (this._eventNameToCallbackSet[eventName] == null) {\r\n            this._eventNameToCallbackSet[eventName] = new Utils.CallbackSet();\r\n        }\r\n        this._eventNameToCallbackSet[eventName].add(callback);\r\n        this._connect();\r\n    };\r\n    Dispatcher.prototype._removeCallbackForEvent = function (eventName, callback) {\r\n        if (this._eventNameToCallbackSet[eventName] != null) {\r\n            this._eventNameToCallbackSet[eventName].delete(callback);\r\n        }\r\n        this._disconnect();\r\n    };\r\n    Dispatcher.prototype._callCallbacksForEvent = function (eventName) {\r\n        var args = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            args[_i - 1] = arguments[_i];\r\n        }\r\n        var callbackSet = this._eventNameToCallbackSet[eventName];\r\n        if (callbackSet != null) {\r\n            callbackSet.callCallbacks.apply(callbackSet, args);\r\n        }\r\n    };\r\n    return Dispatcher;\r\n}());\r\nexports.Dispatcher = Dispatcher;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/dispatchers/dispatcher.ts\n// module id = 25\n// module chunks = 0","\"use strict\";\r\n/**\r\n * Copyright 2014-present Palantir Technologies\r\n * @license MIT\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\ntslib_1.__exportStar(require(\"./clickInteraction\"), exports);\r\ntslib_1.__exportStar(require(\"./dragInteraction\"), exports);\r\ntslib_1.__exportStar(require(\"./keyInteraction\"), exports);\r\ntslib_1.__exportStar(require(\"./panZoomInteraction\"), exports);\r\ntslib_1.__exportStar(require(\"./pointerInteraction\"), exports);\r\nvar panZoomConstraints_1 = require(\"./panZoomConstraints\");\r\nexports.zoomOut = panZoomConstraints_1.zoomOut;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/interactions/index.ts\n// module id = 26\n// module chunks = 0","\"use strict\";\r\n/**\r\n * Copyright 2017-present Palantir Technologies\r\n * @license MIT\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * Return `value` if its distance to `center` was scaled by `zoom`.\r\n *\r\n * e.g. zoomOut(100, 2, 50) -> 150\r\n * e.g. zoomOut(0, 2, 50) -> -50\r\n * e.g. zoomOut(100, 0.5, 50) -> 75\r\n * e.g. zoomOut(0, 0.5, 50) -> 25\r\n */\r\nfunction zoomOut(value, zoom, center) {\r\n    return center - (center - value) * zoom;\r\n}\r\nexports.zoomOut = zoomOut;\r\n/**\r\n * This is the zoomOut method algebra-ed to solve for the `center` value\r\n * given the other three. The \"target\" is the return value of zoomOut.\r\n */\r\nfunction getZoomOutCenter(value, zoom, target) {\r\n    return (value * zoom - target) / (zoom - 1);\r\n}\r\n/**\r\n * Return possibly different zoomAmount and centerPoint values such that applying the zoom\r\n * to the scale respects the given min/max extents and values.\r\n */\r\nfunction constrainedZoom(scale, zoomAmount, centerPoint, minDomainExtent, maxDomainExtent, minDomainValue, maxDomainValue) {\r\n    zoomAmount = constrainZoomExtents(scale, zoomAmount, minDomainExtent, maxDomainExtent);\r\n    return constrainZoomValues(scale, zoomAmount, centerPoint, minDomainValue, maxDomainValue);\r\n}\r\nexports.constrainedZoom = constrainedZoom;\r\nfunction constrainZoomExtents(scale, zoomAmount, minDomainExtent, maxDomainExtent) {\r\n    var extentIncreasing = zoomAmount > 1;\r\n    var boundingDomainExtent = extentIncreasing ? maxDomainExtent : minDomainExtent;\r\n    if (boundingDomainExtent == null) {\r\n        return zoomAmount;\r\n    }\r\n    var _a = scale.getTransformationDomain(), scaleDomainMin = _a[0], scaleDomainMax = _a[1];\r\n    var domainExtent = Math.abs(scaleDomainMax - scaleDomainMin);\r\n    var compareF = extentIncreasing ? Math.min : Math.max;\r\n    return compareF(zoomAmount, boundingDomainExtent / domainExtent);\r\n}\r\nexports.constrainZoomExtents = constrainZoomExtents;\r\n/**\r\n * Modify zoomAmount and centerPoint such that a panzoom will stay inside\r\n * the bounds defined by minDomainValue and maxDomainValue.\r\n */\r\nfunction constrainZoomValues(scale, zoomAmount, centerPoint, minDomainValue, maxDomainValue) {\r\n    // when zooming in, we don't have to worry about overflowing domain\r\n    if (zoomAmount <= 1) {\r\n        return { centerPoint: centerPoint, zoomAmount: zoomAmount };\r\n    }\r\n    // if no constraints set, we're done\r\n    if (minDomainValue == null && maxDomainValue == null) {\r\n        return { centerPoint: centerPoint, zoomAmount: zoomAmount };\r\n    }\r\n    var rangeReversed = isRangeReversed(scale);\r\n    var domainReversed = isDomainReversed(scale);\r\n    var defaultDomainMin = domainReversed ? Infinity : -Infinity;\r\n    var defaultDomainMax = domainReversed ? -Infinity : Infinity;\r\n    minDomainValue = minDomainValue == null ? defaultDomainMin : minDomainValue;\r\n    maxDomainValue = maxDomainValue == null ? defaultDomainMax : maxDomainValue;\r\n    var _a = scale.getTransformationDomain(), scaleDomainMin = _a[0], scaleDomainMax = _a[1];\r\n    var maxRange = scale.scaleTransformation(maxDomainValue);\r\n    var currentMaxRange = scale.scaleTransformation(scaleDomainMax);\r\n    var newMaxRange = zoomOut(currentMaxRange, zoomAmount, centerPoint);\r\n    var minRange = scale.scaleTransformation(minDomainValue);\r\n    var currentMinRange = scale.scaleTransformation(scaleDomainMin);\r\n    var newMinRange = zoomOut(currentMinRange, zoomAmount, centerPoint);\r\n    var minMaxLength = Math.abs(maxRange - minRange);\r\n    var newRangeLength = Math.abs(newMaxRange - newMinRange);\r\n    if (newRangeLength > minMaxLength) {\r\n        // The new zoom simply won't fit. Instead just set the zoom amount to a full zoom out.\r\n        var wantedZoomAmount = (maxRange - minRange) / (currentMaxRange - currentMinRange);\r\n        if (wantedZoomAmount !== 1) {\r\n            // only solve for centerPoint if wantedZoomAmount isn't 1 to prevent NaN.\r\n            var wantedCenterPoint = getZoomOutCenter(currentMaxRange, wantedZoomAmount, maxRange);\r\n            return {\r\n                centerPoint: wantedCenterPoint,\r\n                zoomAmount: wantedZoomAmount,\r\n            };\r\n        }\r\n        else {\r\n            // the centerPoint doesn't matter at all here but we must include it\r\n            return {\r\n                centerPoint: centerPoint,\r\n                zoomAmount: wantedZoomAmount,\r\n            };\r\n        }\r\n    }\r\n    else {\r\n        // the zoom does fit, but one end is outside. In this case just nudge the edge in\r\n        if (newMaxRange > maxRange != rangeReversed) {\r\n            // prevent out of bounds on max edge.\r\n            return {\r\n                centerPoint: getZoomOutCenter(currentMaxRange, zoomAmount, maxRange),\r\n                zoomAmount: zoomAmount,\r\n            };\r\n        }\r\n        else if (newMinRange < minRange != rangeReversed) {\r\n            // prevent out of bounds on min edge.\r\n            return {\r\n                centerPoint: getZoomOutCenter(currentMinRange, zoomAmount, minRange),\r\n                zoomAmount: zoomAmount,\r\n            };\r\n        }\r\n        else {\r\n            return { centerPoint: centerPoint, zoomAmount: zoomAmount };\r\n        }\r\n    }\r\n}\r\nexports.constrainZoomValues = constrainZoomValues;\r\n/**\r\n * Returns a new translation value that respects domain min/max value\r\n * constraints.\r\n */\r\nfunction constrainedTranslation(scale, translation, minDomainValue, maxDomainValue) {\r\n    var _a = scale.getTransformationDomain(), scaleDomainMin = _a[0], scaleDomainMax = _a[1];\r\n    var reversed = isRangeReversed(scale);\r\n    if (translation > 0 !== reversed) {\r\n        var bound = maxDomainValue;\r\n        if (bound != null) {\r\n            var currentMaxRange = scale.scaleTransformation(scaleDomainMax);\r\n            var maxRange = scale.scaleTransformation(bound);\r\n            translation = (reversed ? Math.max : Math.min)(currentMaxRange + translation, maxRange) - currentMaxRange;\r\n        }\r\n    }\r\n    else {\r\n        var bound = minDomainValue;\r\n        if (bound != null) {\r\n            var currentMinRange = scale.scaleTransformation(scaleDomainMin);\r\n            var minRange = scale.scaleTransformation(bound);\r\n            translation = (reversed ? Math.min : Math.max)(currentMinRange + translation, minRange) - currentMinRange;\r\n        }\r\n    }\r\n    return translation;\r\n}\r\nexports.constrainedTranslation = constrainedTranslation;\r\n/**\r\n * Returns true iff the scale.range[1] < scale.range[0].\r\n */\r\nfunction isRangeReversed(scale) {\r\n    var range = scale.range();\r\n    return range[1] < range[0];\r\n}\r\nfunction isDomainReversed(scale) {\r\n    var domain = scale.getTransformationDomain();\r\n    return domain[1] < domain[0];\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/interactions/panZoomConstraints.ts\n// module id = 27\n// module chunks = 0","\"use strict\";\r\n/**\r\n * Copyright 2014-present Palantir Technologies\r\n * @license MIT\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\nvar d3 = require(\"d3\");\r\nvar Typesettable = require(\"typesettable\");\r\nvar Animators = require(\"../animators\");\r\nvar Formatters = require(\"../core/formatters\");\r\nvar Drawers = require(\"../drawers\");\r\nvar drawer_1 = require(\"../drawers/drawer\");\r\nvar rectangleDrawer_1 = require(\"../drawers/rectangleDrawer\");\r\nvar memoize_1 = require(\"../memoize\");\r\nvar Scales = require(\"../scales\");\r\nvar quantitativeScale_1 = require(\"../scales/quantitativeScale\");\r\nvar Utils = require(\"../utils\");\r\nvar makeEnum_1 = require(\"../utils/makeEnum\");\r\nvar Plots = require(\"./\");\r\nvar plot_1 = require(\"./plot\");\r\nvar xyPlot_1 = require(\"./xyPlot\");\r\nexports.BarOrientation = makeEnum_1.makeEnum([\"vertical\", \"horizontal\"]);\r\nexports.LabelsPosition = makeEnum_1.makeEnum([\"start\", \"middle\", \"end\", \"outside\"]);\r\nexports.BarAlignment = makeEnum_1.makeEnum([\"start\", \"middle\", \"end\"]);\r\nvar Bar = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Bar, _super);\r\n    /**\r\n     * A Bar Plot draws bars growing out from a baseline to some value\r\n     *\r\n     * @constructor\r\n     * @param {string} [orientation=\"vertical\"] One of \"vertical\"/\"horizontal\".\r\n     */\r\n    function Bar(orientation) {\r\n        if (orientation === void 0) { orientation = \"vertical\"; }\r\n        var _this = _super.call(this) || this;\r\n        _this._labelFormatter = Formatters.identity();\r\n        _this._labelsEnabled = false;\r\n        _this._labelsPosition = exports.LabelsPosition.end;\r\n        _this._hideBarsIfAnyAreTooWide = true;\r\n        _this._barAlignment = \"middle\";\r\n        _this._computeBarPixelThickness = memoize_1.memoize(computeBarPixelThickness);\r\n        /**\r\n         * Whether all the bars in this barPlot have the same pixel thickness.\r\n         * If so, use the _barPixelThickness property to access the thickness.\r\n         */\r\n        _this._fixedBarPixelThickness = true;\r\n        _this.addClass(\"bar-plot\");\r\n        if (orientation !== \"vertical\" && orientation !== \"horizontal\") {\r\n            throw new Error(orientation + \" is not a valid orientation for Plots.Bar\");\r\n        }\r\n        _this._isVertical = orientation === \"vertical\";\r\n        _this.animator(\"baseline\", new Animators.Null());\r\n        _this.attr(\"fill\", new Scales.Color().range()[0]);\r\n        _this.attr(Bar._BAR_THICKNESS_KEY, function () { return _this._barPixelThickness(); });\r\n        _this._labelConfig = new Utils.Map();\r\n        _this._baselineValueProvider = function () { return [_this.baselineValue()]; };\r\n        return _this;\r\n    }\r\n    Bar.prototype.computeLayout = function (origin, availableWidth, availableHeight) {\r\n        _super.prototype.computeLayout.call(this, origin, availableWidth, availableHeight);\r\n        this._updateExtents();\r\n        return this;\r\n    };\r\n    Bar.prototype.x = function (x, xScale) {\r\n        if (x == null) {\r\n            return _super.prototype.x.call(this);\r\n        }\r\n        if (xScale == null) {\r\n            _super.prototype.x.call(this, x);\r\n        }\r\n        else {\r\n            _super.prototype.x.call(this, x, xScale);\r\n        }\r\n        this._updateThicknessAttr();\r\n        this._updateLengthScale();\r\n        return this;\r\n    };\r\n    Bar.prototype.y = function (y, yScale) {\r\n        if (y == null) {\r\n            return _super.prototype.y.call(this);\r\n        }\r\n        if (yScale == null) {\r\n            _super.prototype.y.call(this, y);\r\n        }\r\n        else {\r\n            _super.prototype.y.call(this, y, yScale);\r\n        }\r\n        this._updateLengthScale();\r\n        return this;\r\n    };\r\n    /**\r\n     * The binding associated with bar length. Length is the count or value the bar is trying to show.\r\n     * This is the .y() for a vertical plot and .x() for a horizontal plot.\r\n     */\r\n    Bar.prototype.length = function () {\r\n        return this._isVertical ? this.y() : this.x();\r\n    };\r\n    /**\r\n     * The binding associated with bar position. Position separates the different bar categories.\r\n     * This is the .x() for a vertical plot and .y() for a horizontal plot.\r\n     */\r\n    Bar.prototype.position = function () {\r\n        return this._isVertical ? this.x() : this.y();\r\n    };\r\n    Bar.prototype.barEnd = function (end) {\r\n        if (end == null) {\r\n            return this._propertyBindings.get(Bar._BAR_END_KEY);\r\n        }\r\n        var binding = this.position();\r\n        var scale = binding && binding.scale;\r\n        this._bindProperty(Bar._BAR_END_KEY, end, scale);\r\n        this._updateThicknessAttr();\r\n        this._updateLengthScale();\r\n        this.render();\r\n        return this;\r\n    };\r\n    Bar.prototype.barAlignment = function (align) {\r\n        if (align == null) {\r\n            return this._barAlignment;\r\n        }\r\n        this._barAlignment = align;\r\n        this._clearAttrToProjectorCache();\r\n        this.render();\r\n        return this;\r\n    };\r\n    /**\r\n     * Gets the orientation of the plot\r\n     *\r\n     * @return \"vertical\" | \"horizontal\"\r\n     */\r\n    Bar.prototype.orientation = function () {\r\n        return this._isVertical ? \"vertical\" : \"horizontal\";\r\n    };\r\n    Bar.prototype._createDrawer = function () {\r\n        return new drawer_1.ProxyDrawer(function () { return new rectangleDrawer_1.RectangleSVGDrawer(Bar._BAR_AREA_CLASS); }, function (ctx) { return new Drawers.RectangleCanvasDrawer(ctx); });\r\n    };\r\n    Bar.prototype._setup = function () {\r\n        _super.prototype._setup.call(this);\r\n        this._baseline = this._renderArea.append(\"line\").classed(\"baseline\", true);\r\n    };\r\n    Bar.prototype.baselineValue = function (value) {\r\n        if (value == null) {\r\n            if (this._baselineValue != null) {\r\n                return this._baselineValue;\r\n            }\r\n            if (!this._projectorsReady()) {\r\n                return 0;\r\n            }\r\n            var lengthScale = this.length().scale;\r\n            if (!lengthScale) {\r\n                return 0;\r\n            }\r\n            if (lengthScale instanceof Scales.Time) {\r\n                return new Date(0);\r\n            }\r\n            return 0;\r\n        }\r\n        this._baselineValue = value;\r\n        this._updateLengthScale();\r\n        this._clearAttrToProjectorCache();\r\n        this.render();\r\n        return this;\r\n    };\r\n    Bar.prototype.addDataset = function (dataset) {\r\n        _super.prototype.addDataset.call(this, dataset);\r\n        return this;\r\n    };\r\n    Bar.prototype._addDataset = function (dataset) {\r\n        _super.prototype._addDataset.call(this, dataset);\r\n        return this;\r\n    };\r\n    Bar.prototype.removeDataset = function (dataset) {\r\n        _super.prototype.removeDataset.call(this, dataset);\r\n        return this;\r\n    };\r\n    Bar.prototype._removeDataset = function (dataset) {\r\n        _super.prototype._removeDataset.call(this, dataset);\r\n        return this;\r\n    };\r\n    Bar.prototype.datasets = function (datasets) {\r\n        if (datasets == null) {\r\n            return _super.prototype.datasets.call(this);\r\n        }\r\n        _super.prototype.datasets.call(this, datasets);\r\n        return this;\r\n    };\r\n    Bar.prototype.labelsEnabled = function (enabled, labelsPosition) {\r\n        if (enabled == null) {\r\n            return this._labelsEnabled;\r\n        }\r\n        else {\r\n            this._labelsEnabled = enabled;\r\n            if (labelsPosition != null) {\r\n                this._labelsPosition = labelsPosition;\r\n            }\r\n            this._clearAttrToProjectorCache();\r\n            this.render();\r\n            return this;\r\n        }\r\n    };\r\n    Bar.prototype.labelFormatter = function (formatter) {\r\n        if (formatter == null) {\r\n            return this._labelFormatter;\r\n        }\r\n        else {\r\n            this._labelFormatter = formatter;\r\n            this._clearAttrToProjectorCache();\r\n            this.render();\r\n            return this;\r\n        }\r\n    };\r\n    Bar.prototype._createNodesForDataset = function (dataset) {\r\n        var drawer = _super.prototype._createNodesForDataset.call(this, dataset);\r\n        var labelArea = this._renderArea.append(\"g\").classed(Bar._LABEL_AREA_CLASS, true);\r\n        var context = new Typesettable.SvgContext(labelArea.node());\r\n        var measurer = new Typesettable.CacheMeasurer(context);\r\n        var writer = new Typesettable.Writer(measurer, context);\r\n        this._labelConfig.set(dataset, { labelArea: labelArea, measurer: measurer, writer: writer });\r\n        return drawer;\r\n    };\r\n    Bar.prototype._removeDatasetNodes = function (dataset) {\r\n        _super.prototype._removeDatasetNodes.call(this, dataset);\r\n        var labelConfig = this._labelConfig.get(dataset);\r\n        if (labelConfig != null) {\r\n            labelConfig.labelArea.remove();\r\n            this._labelConfig.delete(dataset);\r\n        }\r\n    };\r\n    /**\r\n     * Returns the PlotEntity nearest to the query point according to the following algorithm:\r\n     *   - If the query point is inside a bar, returns the PlotEntity for that bar.\r\n     *   - Otherwise, gets the nearest PlotEntity by the positional direction (X for vertical, Y for horizontal),\r\n     *     breaking ties with the secondary direction.\r\n     * Returns undefined if no PlotEntity can be found.\r\n     *\r\n     * @param {Point} queryPoint\r\n     * @returns {PlotEntity} The nearest PlotEntity, or undefined if no PlotEntity can be found.\r\n     */\r\n    Bar.prototype.entityNearest = function (queryPoint) {\r\n        var _this = this;\r\n        var worker = function () {\r\n            var nearest = _this._isVertical ?\r\n                _this._getEntityStore().entityNearestX(queryPoint) :\r\n                _this._getEntityStore().entityNearestY(queryPoint);\r\n            return nearest === undefined ? undefined : _this._lightweightPlotEntityToPlotEntity(nearest);\r\n        };\r\n        return this._fixedBarPixelThickness ? this._computeBarPixelThickness.doLocked(worker) : worker();\r\n    };\r\n    /**\r\n     * Gets the Entities at a particular Point.\r\n     *\r\n     * @param {Point} p\r\n     * @returns {PlotEntity[]}\r\n     */\r\n    Bar.prototype.entitiesAt = function (p) {\r\n        var _this = this;\r\n        var worker = function () { return _this._entitiesIntersecting(p.x, p.y); };\r\n        return this._fixedBarPixelThickness ? this._computeBarPixelThickness.doLocked(worker) : worker();\r\n    };\r\n    Bar.prototype.entitiesInBounds = function (queryBounds) {\r\n        var _this = this;\r\n        var worker = function () { return _super.prototype.entitiesInBounds.call(_this, queryBounds); };\r\n        return this._fixedBarPixelThickness ? this._computeBarPixelThickness.doLocked(worker) : worker();\r\n    };\r\n    Bar.prototype.entitiesInXBounds = function (queryBounds) {\r\n        var _this = this;\r\n        var worker = function () { return _super.prototype.entitiesInXBounds.call(_this, queryBounds); };\r\n        return this._fixedBarPixelThickness ? this._computeBarPixelThickness.doLocked(worker) : worker();\r\n    };\r\n    Bar.prototype.entitiesInYBounds = function (queryBounds) {\r\n        var _this = this;\r\n        var worker = function () { return _super.prototype.entitiesInYBounds.call(_this, queryBounds); };\r\n        return this._fixedBarPixelThickness ? this._computeBarPixelThickness.doLocked(worker) : worker();\r\n    };\r\n    Bar.prototype._entitiesIntersecting = function (xValOrRange, yValOrRange) {\r\n        var intersected = [];\r\n        var entities = this._getEntityStore().entities();\r\n        var entitiesLen = entities.length;\r\n        for (var i = 0; i < entitiesLen; i++) {\r\n            var entity = entities[i];\r\n            if (Utils.DOM.intersectsBBox(xValOrRange, yValOrRange, this._entityBounds(entity))) {\r\n                intersected.push(this._lightweightPlotEntityToPlotEntity(entity));\r\n            }\r\n        }\r\n        return intersected;\r\n    };\r\n    Bar.prototype._updateLengthScale = function () {\r\n        if (!this._projectorsReady()) {\r\n            return;\r\n        }\r\n        var lengthScale = this.length().scale;\r\n        if (lengthScale instanceof quantitativeScale_1.QuantitativeScale) {\r\n            lengthScale.addPaddingExceptionsProvider(this._baselineValueProvider);\r\n            lengthScale.addIncludedValuesProvider(this._baselineValueProvider);\r\n        }\r\n    };\r\n    Bar.prototype.renderImmediately = function () {\r\n        var _this = this;\r\n        // HACK update bar pixel thickness\r\n        this._barPixelThickness();\r\n        return this._computeBarPixelThickness.doLocked(function () { return _super.prototype.renderImmediately.call(_this); });\r\n    };\r\n    Bar.prototype._additionalPaint = function (time) {\r\n        var _this = this;\r\n        var lengthScale = this.length().scale;\r\n        var scaledBaseline = lengthScale.scale(this.baselineValue());\r\n        var baselineAttr = {\r\n            \"x1\": this._isVertical ? 0 : scaledBaseline,\r\n            \"y1\": this._isVertical ? scaledBaseline : 0,\r\n            \"x2\": this._isVertical ? this.width() : scaledBaseline,\r\n            \"y2\": this._isVertical ? scaledBaseline : this.height(),\r\n        };\r\n        this._getAnimator(\"baseline\").animate(this._baseline, baselineAttr);\r\n        this.datasets().forEach(function (dataset) { return _this._labelConfig.get(dataset).labelArea.selectAll(\"g\").remove(); });\r\n        if (this._labelsEnabled) {\r\n            Utils.Window.setTimeout(function () { return _this._drawLabels(); }, time);\r\n        }\r\n    };\r\n    /**\r\n     * Makes sure the extent takes into account the widths of the bars\r\n     */\r\n    Bar.prototype.getExtentsForProperty = function (property) {\r\n        var _this = this;\r\n        var extents = _super.prototype.getExtentsForProperty.call(this, property);\r\n        var accScaleBinding;\r\n        if (property === \"x\" && this._isVertical) {\r\n            accScaleBinding = this.x();\r\n        }\r\n        else if (property === \"y\" && !this._isVertical) {\r\n            accScaleBinding = this.y();\r\n        }\r\n        else {\r\n            return extents;\r\n        }\r\n        if (!(accScaleBinding && accScaleBinding.scale && accScaleBinding.scale instanceof quantitativeScale_1.QuantitativeScale)) {\r\n            return extents;\r\n        }\r\n        var scale = accScaleBinding.scale;\r\n        var width = this._barPixelThickness();\r\n        // To account for inverted domains\r\n        extents = extents.map(function (extent) { return d3.extent([\r\n            scale.invert(_this._getPositionAttr(scale.scale(extent[0]), width)),\r\n            scale.invert(_this._getPositionAttr(scale.scale(extent[0]), width) + width),\r\n            scale.invert(_this._getPositionAttr(scale.scale(extent[1]), width)),\r\n            scale.invert(_this._getPositionAttr(scale.scale(extent[1]), width) + width),\r\n        ]); });\r\n        return extents;\r\n    };\r\n    /**\r\n     * Return the <rect>'s x or y attr value given the position and thickness of\r\n     * that bar. This method is responsible for account for barAlignment, in particular.\r\n     */\r\n    Bar.prototype._getPositionAttr = function (position, thickness) {\r\n        // account for flipped vertical axis\r\n        if (!this._isVertical) {\r\n            position -= thickness;\r\n            thickness *= -1;\r\n        }\r\n        switch (this._barAlignment) {\r\n            case \"start\":\r\n                return position;\r\n            case \"end\":\r\n                return position - thickness;\r\n            case \"middle\":\r\n            default:\r\n                return position - thickness / 2;\r\n        }\r\n    };\r\n    Bar.prototype._drawLabels = function () {\r\n        var _this = this;\r\n        var dataToDraw = this._getDataToDraw();\r\n        var attrToProjector = this._getAttrToProjector();\r\n        var anyLabelTooWide = this.datasets().some(function (dataset) {\r\n            return dataToDraw.get(dataset).some(function (datum, index) {\r\n                if (datum == null) {\r\n                    return false;\r\n                }\r\n                return _this._drawLabel(datum, index, dataset, attrToProjector);\r\n            });\r\n        });\r\n        if (this._hideBarsIfAnyAreTooWide && anyLabelTooWide) {\r\n            this.datasets().forEach(function (dataset) { return _this._labelConfig.get(dataset).labelArea.selectAll(\"g\").remove(); });\r\n        }\r\n    };\r\n    Bar.prototype._drawLabel = function (datum, index, dataset, attrToProjector) {\r\n        var _a = this._labelConfig.get(dataset), labelArea = _a.labelArea, measurer = _a.measurer, writer = _a.writer;\r\n        var lengthAccessor = this.length().accessor;\r\n        var length = lengthAccessor(datum, index, dataset);\r\n        var lengthScale = this.length().scale;\r\n        var scaledLength = lengthScale != null ? lengthScale.scale(length) : length;\r\n        var scaledBaseline = lengthScale != null ? lengthScale.scale(this.baselineValue()) : this.baselineValue();\r\n        var barCoordinates = { x: attrToProjector[\"x\"](datum, index, dataset), y: attrToProjector[\"y\"](datum, index, dataset) };\r\n        var barDimensions = { width: attrToProjector[\"width\"](datum, index, dataset), height: attrToProjector[\"height\"](datum, index, dataset) };\r\n        var text = this._labelFormatter(length, datum, index, dataset);\r\n        var measurement = measurer.measure(text);\r\n        var showLabelOnBar = this._shouldShowLabelOnBar(barCoordinates, barDimensions, measurement);\r\n        // show label on right when value === baseline for horizontal plots\r\n        var aboveOrLeftOfBaseline = this._isVertical ? scaledLength <= scaledBaseline : scaledLength < scaledBaseline;\r\n        var _b = this._calculateLabelProperties(barCoordinates, barDimensions, measurement, showLabelOnBar, aboveOrLeftOfBaseline), containerDimensions = _b.containerDimensions, labelContainerOrigin = _b.labelContainerOrigin, labelOrigin = _b.labelOrigin, alignment = _b.alignment;\r\n        var color = attrToProjector[\"fill\"](datum, index, dataset);\r\n        var labelContainer = this._createLabelContainer(labelArea, labelContainerOrigin, labelOrigin, measurement, showLabelOnBar, color);\r\n        var writeOptions = { xAlign: alignment.x, yAlign: alignment.y };\r\n        writer.write(text, containerDimensions.width, containerDimensions.height, writeOptions, labelContainer.node());\r\n        var tooWide = this._isVertical\r\n            ? barDimensions.width < (measurement.width)\r\n            : barDimensions.height < (measurement.height);\r\n        return tooWide;\r\n    };\r\n    /**\r\n     * Labels are \"on-bar\" by default, but if the bar is not long enough to fit the text,\r\n     * we can try putting the label \"off-bar\", if there's enough space outside of the bar\r\n     * to fit it.\r\n     */\r\n    Bar.prototype._shouldShowLabelOnBar = function (barCoordinates, barDimensions, labelDimensions) {\r\n        if (this._labelsPosition === exports.LabelsPosition.outside) {\r\n            return false;\r\n        }\r\n        var barStart = this._isVertical ? barCoordinates.y : barCoordinates.x;\r\n        var barLength = this._isVertical ? barDimensions.height : barDimensions.width;\r\n        var totalLength = this._isVertical ? this.height() : this.width();\r\n        var labelLength = this._isVertical ? labelDimensions.height : labelDimensions.width;\r\n        var barEnd = barStart + barLength;\r\n        var barLengthVisibleOnScreen = barLength;\r\n        if (barEnd > totalLength) {\r\n            barLengthVisibleOnScreen = totalLength - barStart;\r\n        }\r\n        else if (barStart < 0) {\r\n            barLengthVisibleOnScreen = barEnd;\r\n        }\r\n        return (labelLength + Bar._LABEL_MARGIN_INSIDE_BAR <= barLengthVisibleOnScreen);\r\n    };\r\n    Bar.prototype._calculateLabelProperties = function (barCoordinates, barDimensions, measurement, showLabelOnBar, aboveOrLeftOfBaseline) {\r\n        var _this = this;\r\n        var barCoordinate = this._isVertical ? barCoordinates.y : barCoordinates.x;\r\n        var barDimension = this._isVertical ? barDimensions.height : barDimensions.width;\r\n        var measurementDimension = this._isVertical ? measurement.height : measurement.width;\r\n        var alignmentDimension = \"center\";\r\n        var containerDimension = barDimension;\r\n        var labelContainerOriginCoordinate = barCoordinate;\r\n        var labelOriginCoordinate = barCoordinate;\r\n        var updateCoordinates = function (position) {\r\n            switch (position) {\r\n                case \"topLeft\":\r\n                    alignmentDimension = _this._isVertical ? \"top\" : \"left\";\r\n                    labelContainerOriginCoordinate += Bar._LABEL_MARGIN_INSIDE_BAR;\r\n                    labelOriginCoordinate += Bar._LABEL_MARGIN_INSIDE_BAR;\r\n                    return;\r\n                case \"center\":\r\n                    labelOriginCoordinate += (barDimension + measurementDimension) / 2;\r\n                    return;\r\n                case \"bottomRight\":\r\n                    alignmentDimension = _this._isVertical ? \"bottom\" : \"right\";\r\n                    labelContainerOriginCoordinate -= Bar._LABEL_MARGIN_INSIDE_BAR;\r\n                    labelOriginCoordinate += containerDimension - Bar._LABEL_MARGIN_INSIDE_BAR - measurementDimension;\r\n                    return;\r\n            }\r\n        };\r\n        if (showLabelOnBar) {\r\n            switch (this._labelsPosition) {\r\n                case exports.LabelsPosition.start:\r\n                    aboveOrLeftOfBaseline ? updateCoordinates(\"bottomRight\") : updateCoordinates(\"topLeft\");\r\n                    break;\r\n                case exports.LabelsPosition.middle:\r\n                    updateCoordinates(\"center\");\r\n                    break;\r\n                case exports.LabelsPosition.end:\r\n                    aboveOrLeftOfBaseline ? updateCoordinates(\"topLeft\") : updateCoordinates(\"bottomRight\");\r\n                    break;\r\n            }\r\n        }\r\n        else {\r\n            if (aboveOrLeftOfBaseline) {\r\n                alignmentDimension = this._isVertical ? \"top\" : \"left\";\r\n                containerDimension = barDimension + Bar._LABEL_MARGIN_INSIDE_BAR + measurementDimension;\r\n                labelContainerOriginCoordinate -= Bar._LABEL_MARGIN_INSIDE_BAR + measurementDimension;\r\n                labelOriginCoordinate -= Bar._LABEL_MARGIN_INSIDE_BAR + measurementDimension;\r\n            }\r\n            else {\r\n                alignmentDimension = this._isVertical ? \"bottom\" : \"right\";\r\n                containerDimension = barDimension + Bar._LABEL_MARGIN_INSIDE_BAR + measurementDimension;\r\n                labelOriginCoordinate += barDimension + Bar._LABEL_MARGIN_INSIDE_BAR;\r\n            }\r\n        }\r\n        return {\r\n            containerDimensions: {\r\n                width: this._isVertical ? barDimensions.width : containerDimension,\r\n                height: this._isVertical ? containerDimension : barDimensions.height,\r\n            },\r\n            labelContainerOrigin: {\r\n                x: this._isVertical ? barCoordinates.x : labelContainerOriginCoordinate,\r\n                y: this._isVertical ? labelContainerOriginCoordinate : barCoordinates.y,\r\n            },\r\n            labelOrigin: {\r\n                x: this._isVertical ? (barCoordinates.x + barDimensions.width / 2 - measurement.width / 2) : labelOriginCoordinate,\r\n                y: this._isVertical ? labelOriginCoordinate : (barCoordinates.y + barDimensions.height / 2 - measurement.height / 2),\r\n            },\r\n            alignment: {\r\n                x: this._isVertical ? \"center\" : alignmentDimension,\r\n                y: this._isVertical ? alignmentDimension : \"center\",\r\n            },\r\n        };\r\n    };\r\n    Bar.prototype._createLabelContainer = function (labelArea, labelContainerOrigin, labelOrigin, measurement, showLabelOnBar, color) {\r\n        var labelContainer = labelArea.append(\"g\").attr(\"transform\", \"translate(\" + labelContainerOrigin.x + \", \" + labelContainerOrigin.y + \")\");\r\n        if (showLabelOnBar) {\r\n            labelContainer.classed(\"on-bar-label\", true);\r\n            var dark = Utils.Color.contrast(\"white\", color) * 1.6 < Utils.Color.contrast(\"black\", color);\r\n            labelContainer.classed(dark ? \"dark-label\" : \"light-label\", true);\r\n        }\r\n        else {\r\n            labelContainer.classed(\"off-bar-label\", true);\r\n        }\r\n        return labelContainer;\r\n    };\r\n    Bar.prototype._generateDrawSteps = function () {\r\n        var drawSteps = [];\r\n        if (this._animateOnNextRender()) {\r\n            var resetAttrToProjector = this._getAttrToProjector();\r\n            var lengthScale = this.length().scale;\r\n            var scaledBaseline_1 = lengthScale.scale(this.baselineValue());\r\n            var lengthAttr = this._isVertical ? \"y\" : \"x\";\r\n            var thicknessAttr = this._isVertical ? \"height\" : \"width\";\r\n            resetAttrToProjector[lengthAttr] = function () { return scaledBaseline_1; };\r\n            resetAttrToProjector[thicknessAttr] = function () { return 0; };\r\n            drawSteps.push({ attrToProjector: resetAttrToProjector, animator: this._getAnimator(Plots.Animator.RESET) });\r\n        }\r\n        drawSteps.push({\r\n            attrToProjector: this._getAttrToProjector(),\r\n            animator: this._getAnimator(Plots.Animator.MAIN),\r\n        });\r\n        return drawSteps;\r\n    };\r\n    Bar.prototype._generateAttrToProjector = function () {\r\n        var _this = this;\r\n        var attrToProjector = _super.prototype._generateAttrToProjector.call(this);\r\n        var lengthScale = this.length().scale;\r\n        var scaledBaseline = lengthScale.scale(this.baselineValue());\r\n        var lengthAttr = this._isVertical ? \"y\" : \"x\";\r\n        var positionAttr = this._isVertical ? \"x\" : \"y\";\r\n        var positionF = plot_1.Plot._scaledAccessor(this.position());\r\n        var originalLengthFn = plot_1.Plot._scaledAccessor(this.length());\r\n        var lengthFn = function (d, i, dataset) {\r\n            return Math.abs(scaledBaseline - originalLengthFn(d, i, dataset));\r\n        };\r\n        var thicknessF = attrToProjector[Bar._BAR_THICKNESS_KEY];\r\n        var gapF = attrToProjector[\"gap\"];\r\n        var thicknessMinusGap = gapF == null ? thicknessF : function (d, i, dataset) {\r\n            var thick = thicknessF(d, i, dataset);\r\n            // only subtract gap if bars are at least 2 pixels wide, otherwise canvas\r\n            // interpolation can cause bars to become invisible due to subpixel\r\n            // sampling\r\n            return thick < Bar._BAR_GAPLESS_THRESHOLD_PX ? thick : thick - gapF(d, i, dataset);\r\n        };\r\n        // re-interpret \"width\" attr from representing \"thickness\" to actually meaning\r\n        // width (that is, x-direction specific) again\r\n        attrToProjector[\"width\"] = this._isVertical ? thicknessMinusGap : lengthFn;\r\n        attrToProjector[\"height\"] = this._isVertical ? lengthFn : thicknessMinusGap;\r\n        attrToProjector[lengthAttr] = function (d, i, dataset) {\r\n            var originalLength = originalLengthFn(d, i, dataset);\r\n            // If it is past the baseline, it should start at the baseline then width/height\r\n            // carries it over. If it's not past the baseline, leave it at original position and\r\n            // then width/height carries it to baseline\r\n            return (originalLength > scaledBaseline) ? scaledBaseline : originalLength;\r\n        };\r\n        attrToProjector[positionAttr] = function (d, i, dataset) {\r\n            return _this._getPositionAttr(positionF(d, i, dataset), thicknessF(d, i, dataset));\r\n        };\r\n        return attrToProjector;\r\n    };\r\n    Bar.prototype._updateThicknessAttr = function () {\r\n        var _this = this;\r\n        var startProj = this.position();\r\n        var endProj = this.barEnd();\r\n        if (startProj != null && endProj != null) {\r\n            this._fixedBarPixelThickness = false;\r\n            this.attr(Bar._BAR_THICKNESS_KEY, function (d, i, data) {\r\n                var v1 = startProj.accessor(d, i, data);\r\n                var v2 = endProj.accessor(d, i, data);\r\n                v1 = startProj.scale ? startProj.scale.scale(v1) : v1;\r\n                v2 = endProj.scale ? endProj.scale.scale(v2) : v2;\r\n                return Math.abs(v2 - v1);\r\n            });\r\n        }\r\n        else {\r\n            this._fixedBarPixelThickness = true;\r\n            this.attr(Bar._BAR_THICKNESS_KEY, function () { return _this._barPixelThickness(); });\r\n        }\r\n    };\r\n    Bar.prototype._barPixelThickness = function () {\r\n        if (this._fixedBarPixelThickness) {\r\n            if (this._projectorsReady()) {\r\n                return this._computeBarPixelThickness(this.position(), this.datasets(), this._isVertical ? this.width() : this.height());\r\n            }\r\n            else {\r\n                return 0;\r\n            }\r\n        }\r\n        else {\r\n            return 0;\r\n        }\r\n    };\r\n    Bar.prototype.entities = function (datasets) {\r\n        if (datasets === void 0) { datasets = this.datasets(); }\r\n        if (!this._projectorsReady()) {\r\n            return [];\r\n        }\r\n        var entities = _super.prototype.entities.call(this, datasets);\r\n        return entities;\r\n    };\r\n    Bar.prototype._entityBounds = function (entity) {\r\n        var datum = entity.datum, index = entity.index, dataset = entity.dataset;\r\n        return this._pixelBounds(datum, index, dataset);\r\n    };\r\n    /**\r\n     * The rectangular bounds of a bar. Note that the x/y coordinates are not the\r\n     * same as the \"pixel point\" because they are always at the top/left of the\r\n     * bar.\r\n     */\r\n    Bar.prototype._pixelBounds = function (datum, index, dataset) {\r\n        var attrToProjector = this._getAttrToProjector();\r\n        return {\r\n            x: attrToProjector[\"x\"](datum, index, dataset),\r\n            y: attrToProjector[\"y\"](datum, index, dataset),\r\n            width: attrToProjector[\"width\"](datum, index, dataset),\r\n            height: attrToProjector[\"height\"](datum, index, dataset),\r\n        };\r\n    };\r\n    /**\r\n     * The \"pixel point\" of a bar is the farthest point from the baseline.\r\n     *\r\n     * For example, in a vertical bar chart with positive bar values, the pixel\r\n     * point will be at the top of the bar. For negative bar values, the pixel\r\n     * point will be at the bottom of the bar.\r\n     */\r\n    Bar.prototype._pixelPoint = function (datum, index, dataset) {\r\n        var rect = this._pixelBounds(datum, index, dataset);\r\n        var originalPosition = (this._isVertical ? plot_1.Plot._scaledAccessor(this.y()) : plot_1.Plot._scaledAccessor(this.x()))(datum, index, dataset);\r\n        var scaledBaseline = (this._isVertical ? this.y().scale : this.x().scale).scale(this.baselineValue());\r\n        return this._pixelPointBar(originalPosition, scaledBaseline, rect);\r\n    };\r\n    Bar.prototype._pixelPointBar = function (originalPosition, scaledBaseline, rect) {\r\n        var x, y;\r\n        if (this._isVertical) {\r\n            x = rect.x + rect.width / 2;\r\n            y = originalPosition <= scaledBaseline ? rect.y : rect.y + rect.height;\r\n        }\r\n        else {\r\n            x = originalPosition >= scaledBaseline ? rect.x + rect.width : rect.x;\r\n            y = rect.y + rect.height / 2;\r\n        }\r\n        return { x: x, y: y };\r\n    };\r\n    Bar.prototype._uninstallScaleForKey = function (scale, key) {\r\n        _super.prototype._uninstallScaleForKey.call(this, scale, key);\r\n    };\r\n    Bar.prototype._getDataToDraw = function () {\r\n        var _this = this;\r\n        var dataToDraw = new Utils.Map();\r\n        var attrToProjector = this._getAttrToProjector();\r\n        var plotWidth = this.width();\r\n        var plotHeight = this.height();\r\n        this.datasets().forEach(function (dataset) {\r\n            var data = dataset.data().map(function (d, i) {\r\n                var isValid = _this._isDatumOnScreen(attrToProjector, plotWidth, plotHeight, d, i, dataset);\r\n                return isValid ? d : null;\r\n            });\r\n            dataToDraw.set(dataset, data);\r\n        });\r\n        return dataToDraw;\r\n    };\r\n    Bar.prototype._isDatumOnScreen = function (attrToProjector, plotWidth, plotHeight, d, i, dataset) {\r\n        var pixelX = attrToProjector[\"x\"](d, i, dataset);\r\n        var pixelY = attrToProjector[\"y\"](d, i, dataset);\r\n        var pixelWidth = attrToProjector[\"width\"](d, i, dataset);\r\n        var pixelHeight = attrToProjector[\"height\"](d, i, dataset);\r\n        var isValid = Utils.Math.isValidNumber(pixelX) &&\r\n            Utils.Math.isValidNumber(pixelY) &&\r\n            Utils.Math.isValidNumber(pixelWidth) &&\r\n            Utils.Math.isValidNumber(pixelHeight);\r\n        if (!isValid) {\r\n            return false;\r\n        }\r\n        return Utils.Math.boundsIntersects(pixelX, pixelY, pixelWidth, pixelHeight, 0, 0, plotWidth, plotHeight);\r\n    };\r\n    Bar._BAR_THICKNESS_RATIO = 0.95;\r\n    Bar._BAR_GAPLESS_THRESHOLD_PX = 3;\r\n    Bar._SINGLE_BAR_DIMENSION_RATIO = 0.4;\r\n    Bar._BAR_AREA_CLASS = \"bar-area\";\r\n    Bar._BAR_END_KEY = \"barEnd\";\r\n    // we special case the \"width\" property to represent the bar thickness\r\n    // (aka the distance between adjacent bar positions); in _generateAttrToProjector\r\n    // we re-assign \"width\" to specifically refer to <rect>'s width attribute\r\n    Bar._BAR_THICKNESS_KEY = \"width\";\r\n    Bar._LABEL_AREA_CLASS = \"bar-label-text-area\";\r\n    /**\r\n     * In the case of \"start\" or \"end\" LabelPositions, put the label this many px away\r\n     * from the bar's length distance edge\r\n     */\r\n    Bar._LABEL_MARGIN_INSIDE_BAR = 10;\r\n    return Bar;\r\n}(xyPlot_1.XYPlot));\r\nexports.Bar = Bar;\r\n/**\r\n * Computes the barPixelThickness of all the bars in the plot.\r\n *\r\n * If the position scale of the plot is a CategoryScale and in bands mode, then the rangeBands function will be used.\r\n * If the position scale of the plot is a QuantitativeScale, then the bar thickness is equal to the smallest distance between\r\n * two adjacent data points, padded for visualisation.\r\n *\r\n * This is ignored when explicitly setting the barEnd.\r\n */\r\nfunction computeBarPixelThickness(positionBinding, datasets, plotPositionDimensionLength) {\r\n    var barPixelThickness;\r\n    var positionScale = positionBinding.scale;\r\n    if (positionScale instanceof Scales.Category) {\r\n        barPixelThickness = positionScale.rangeBand();\r\n    }\r\n    else {\r\n        var positionAccessor_1 = positionBinding.accessor;\r\n        var numberBarAccessorData = d3.set(Utils.Array.flatten(datasets.map(function (dataset) {\r\n            return dataset.data().map(function (d, i) { return positionAccessor_1(d, i, dataset); })\r\n                .filter(function (d) { return d != null; })\r\n                .map(function (d) { return d.valueOf(); });\r\n        }))).values().map(function (value) { return +value; });\r\n        numberBarAccessorData.sort(function (a, b) { return a - b; });\r\n        var scaledData = numberBarAccessorData.map(function (datum) { return positionScale.scale(datum); });\r\n        var barAccessorDataPairs = d3.pairs(scaledData);\r\n        barPixelThickness = Utils.Math.min(barAccessorDataPairs, function (pair, i) {\r\n            return Math.abs(pair[1] - pair[0]);\r\n        }, plotPositionDimensionLength * Bar._SINGLE_BAR_DIMENSION_RATIO);\r\n        barPixelThickness *= Bar._BAR_THICKNESS_RATIO;\r\n    }\r\n    return barPixelThickness;\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/plots/barPlot.ts\n// module id = 28\n// module chunks = 0","\"use strict\";\n/**\n * Copyright 2017-present Palantir Technologies, Inc. All rights reserved.\n * Licensed under the MIT License (the \"License\"); you may obtain a copy of the\n * license at https://github.com/palantir/typesettable/blob/develop/LICENSE\n */\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./writer\"));\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/typesettable/build/src/writers/index.js\n// module id = 29\n// module chunks = 0","\"use strict\";\r\n/**\r\n * Copyright 2014-present Palantir Technologies\r\n * @license MIT\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\nvar d3 = require(\"d3\");\r\nvar Typesettable = require(\"typesettable\");\r\nvar Formatters = require(\"../core/formatters\");\r\nvar Scales = require(\"../scales\");\r\nvar Utils = require(\"../utils\");\r\nvar makeEnum_1 = require(\"../utils/makeEnum\");\r\nvar axis_1 = require(\"./axis\");\r\nexports.TimeInterval = makeEnum_1.makeEnum([\r\n    \"second\",\r\n    \"minute\",\r\n    \"hour\",\r\n    \"day\",\r\n    \"week\",\r\n    \"month\",\r\n    \"year\",\r\n]);\r\n/**\r\n * Possible orientations for a Time Axis.\r\n */\r\nexports.TimeAxisOrientation = makeEnum_1.makeEnum([\"top\", \"bottom\"]);\r\nexports.TierLabelPosition = makeEnum_1.makeEnum([\"between\", \"center\"]);\r\nvar Time = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Time, _super);\r\n    /**\r\n     * Constructs a Time Axis.\r\n     *\r\n     * A Time Axis is a visual representation of a Time Scale.\r\n     *\r\n     * @constructor\r\n     * @param {Scales.Time} scale\r\n     * @param {AxisOrientation} orientation Orientation of this Time Axis. Time Axes can only have \"top\" or \"bottom\"\r\n     * @param {boolean} useUTC Displays date object in UTC if true, local time if false. Defaults to false.\r\n     * orientations.\r\n     */\r\n    function Time(scale, orientation, useUTC) {\r\n        var _this = _super.call(this, scale, orientation) || this;\r\n        _this._maxTimeIntervalPrecision = null;\r\n        _this._tierLabelPositions = [];\r\n        _this._useUTC = useUTC;\r\n        _this.addClass(\"time-axis\");\r\n        _this.tickLabelPadding(5);\r\n        _this.axisConfigurations(Time._DEFAULT_TIME_AXIS_CONFIGURATIONS(_this._useUTC));\r\n        _this.annotationFormatter(Formatters.time(\"%a %b %d, %Y\", _this._useUTC));\r\n        return _this;\r\n    }\r\n    Time.prototype.tierLabelPositions = function (newPositions) {\r\n        if (newPositions == null) {\r\n            return this._tierLabelPositions;\r\n        }\r\n        else {\r\n            if (!newPositions.every(function (pos) { return pos.toLowerCase() === \"between\" || pos.toLowerCase() === \"center\"; })) {\r\n                throw new Error(\"Unsupported position for tier labels\");\r\n            }\r\n            this._tierLabelPositions = newPositions;\r\n            this.redraw();\r\n            return this;\r\n        }\r\n    };\r\n    Time.prototype.maxTimeIntervalPrecision = function (newPrecision) {\r\n        if (newPrecision == null) {\r\n            return this._maxTimeIntervalPrecision;\r\n        }\r\n        else {\r\n            this._maxTimeIntervalPrecision = newPrecision;\r\n            this.redraw();\r\n            return this;\r\n        }\r\n    };\r\n    /**\r\n     * Returns the current `TimeAxisConfiguration` used to render the axes.\r\n     *\r\n     * Note that this is only valid after the axis had been rendered and the\r\n     * most precise valid configuration is determined from the available space\r\n     * and maximum precision constraints.\r\n     *\r\n     * @returns {TimeAxisConfiguration} The currently used `TimeAxisConfiguration` or `undefined`.\r\n     */\r\n    Time.prototype.currentAxisConfiguration = function () {\r\n        return this._possibleTimeAxisConfigurations[this._mostPreciseConfigIndex];\r\n    };\r\n    Time.prototype.axisConfigurations = function (configurations) {\r\n        if (configurations == null) {\r\n            return this._possibleTimeAxisConfigurations;\r\n        }\r\n        this._possibleTimeAxisConfigurations = configurations;\r\n        this._numTiers = Utils.Math.max(this._possibleTimeAxisConfigurations.map(function (config) { return config.length; }), 0);\r\n        if (this._isAnchored) {\r\n            this._setupDomElements();\r\n        }\r\n        var oldLabelPositions = this.tierLabelPositions();\r\n        var newLabelPositions = [];\r\n        for (var i = 0; i < this._numTiers; i++) {\r\n            newLabelPositions.push(oldLabelPositions[i] || \"between\");\r\n        }\r\n        this.tierLabelPositions(newLabelPositions);\r\n        this.redraw();\r\n        return this;\r\n    };\r\n    /**\r\n     * Gets the index of the most precise TimeAxisConfiguration that will fit in the current width.\r\n     */\r\n    Time.prototype._getMostPreciseConfigurationIndex = function () {\r\n        var _this = this;\r\n        var mostPreciseIndex = this._possibleTimeAxisConfigurations.length;\r\n        this._possibleTimeAxisConfigurations.forEach(function (interval, index) {\r\n            if (index < mostPreciseIndex && interval.every(function (tier) {\r\n                return _this._checkTimeAxisTierConfiguration(tier);\r\n            })) {\r\n                mostPreciseIndex = index;\r\n            }\r\n        });\r\n        if (mostPreciseIndex === this._possibleTimeAxisConfigurations.length) {\r\n            Utils.Window.warn(\"zoomed out too far: could not find suitable interval to display labels\");\r\n            --mostPreciseIndex;\r\n        }\r\n        return mostPreciseIndex;\r\n    };\r\n    Time.prototype.orientation = function (orientation) {\r\n        if (orientation && (orientation.toLowerCase() === \"right\" || orientation.toLowerCase() === \"left\")) {\r\n            throw new Error(orientation + \" is not a supported orientation for TimeAxis - only horizontal orientations are supported\");\r\n        }\r\n        return _super.prototype.orientation.call(this, orientation); // maintains getter-setter functionality\r\n    };\r\n    Time.prototype._computeHeight = function () {\r\n        var textHeight = this._measurer.measure().height;\r\n        this._tierHeights = [];\r\n        for (var i = 0; i < this._numTiers; i++) {\r\n            this._tierHeights.push(textHeight + this.tickLabelPadding() +\r\n                ((this._tierLabelPositions[i]) === \"between\" ? 0 : this._maxLabelTickLength()));\r\n        }\r\n        return d3.sum(this._tierHeights);\r\n    };\r\n    Time.prototype._getIntervalLength = function (config) {\r\n        var startDate = this._scale.domain()[0];\r\n        var d3Interval = Scales.Time.timeIntervalToD3Time(config.interval, this._useUTC);\r\n        var endDate = d3Interval.offset(startDate, config.step);\r\n        if (endDate > this._scale.domain()[1]) {\r\n            // this offset is too large, so just return available width\r\n            return this.width();\r\n        }\r\n        // measure how much space one date can get\r\n        var stepLength = Math.abs(this._scale.scale(endDate) - this._scale.scale(startDate));\r\n        return stepLength;\r\n    };\r\n    Time.prototype._maxWidthForInterval = function (config) {\r\n        return this._measurer.measure(config.formatter(Time._LONG_DATE)).width;\r\n    };\r\n    /**\r\n     * Check if tier configuration fits in the current width and satisfied the\r\n     * max TimeInterval precision limit.\r\n     */\r\n    Time.prototype._checkTimeAxisTierConfiguration = function (config) {\r\n        // Use the sorted index to determine if the teir configuration contains a\r\n        // time interval that is too precise for the maxTimeIntervalPrecision\r\n        // setting (if set).\r\n        if (this._maxTimeIntervalPrecision != null) {\r\n            var precisionLimit = Time._SORTED_TIME_INTERVAL_INDEX[this._maxTimeIntervalPrecision];\r\n            var configPrecision = Time._SORTED_TIME_INTERVAL_INDEX[config.interval];\r\n            if (precisionLimit != null && configPrecision != null && configPrecision < precisionLimit) {\r\n                return false;\r\n            }\r\n        }\r\n        var worstWidth = this._maxWidthForInterval(config) + 2 * this.tickLabelPadding();\r\n        return Math.min(this._getIntervalLength(config), this.width()) >= worstWidth;\r\n    };\r\n    Time.prototype._sizeFromOffer = function (availableWidth, availableHeight) {\r\n        // Makes sure that the size it requires is a multiple of tier sizes, such that\r\n        // we have no leftover tiers\r\n        var size = _super.prototype._sizeFromOffer.call(this, availableWidth, availableHeight);\r\n        var tierHeights = this._tierHeights.reduce(function (prevValue, currValue, index, arr) {\r\n            return (prevValue + currValue > size.height) ? prevValue : (prevValue + currValue);\r\n        });\r\n        var nonCoreHeight = this.margin() + (this.annotationsEnabled() ? this.annotationTierCount() * this._annotationTierHeight() : 0);\r\n        size.height = Math.min(size.height, tierHeights + nonCoreHeight);\r\n        return size;\r\n    };\r\n    Time.prototype._setup = function () {\r\n        _super.prototype._setup.call(this);\r\n        this._setupDomElements();\r\n    };\r\n    Time.prototype._setupDomElements = function () {\r\n        this.content().selectAll(\".\" + Time.TIME_AXIS_TIER_CLASS).remove();\r\n        this._tierLabelContainers = [];\r\n        this._tierMarkContainers = [];\r\n        this._tierBaselines = [];\r\n        this._tickLabelContainer.remove();\r\n        this._baseline.remove();\r\n        for (var i = 0; i < this._numTiers; ++i) {\r\n            var tierContainer = this.content().append(\"g\").classed(Time.TIME_AXIS_TIER_CLASS, true);\r\n            this._tierLabelContainers.push(tierContainer.append(\"g\").classed(axis_1.Axis.TICK_LABEL_CLASS + \"-container\", true));\r\n            this._tierMarkContainers.push(tierContainer.append(\"g\").classed(axis_1.Axis.TICK_MARK_CLASS + \"-container\", true));\r\n            this._tierBaselines.push(tierContainer.append(\"line\").classed(\"baseline\", true));\r\n        }\r\n        var context = new Typesettable.SvgContext(this._tierLabelContainers[0].node());\r\n        this._measurer = new Typesettable.CacheMeasurer(context);\r\n    };\r\n    Time.prototype._getTickIntervalValues = function (config) {\r\n        return this._scale.tickInterval(config.interval, config.step, this._useUTC);\r\n    };\r\n    Time.prototype._getTickValues = function () {\r\n        var _this = this;\r\n        return this._possibleTimeAxisConfigurations[this._mostPreciseConfigIndex].reduce(function (ticks, config) { return ticks.concat(_this._getTickIntervalValues(config)); }, []);\r\n    };\r\n    Time.prototype._cleanTiers = function () {\r\n        for (var index = 0; index < this._tierLabelContainers.length; index++) {\r\n            this._tierLabelContainers[index].selectAll(\".\" + axis_1.Axis.TICK_LABEL_CLASS).remove();\r\n            this._tierMarkContainers[index].selectAll(\".\" + axis_1.Axis.TICK_MARK_CLASS).remove();\r\n            this._tierBaselines[index].style(\"visibility\", \"hidden\");\r\n        }\r\n    };\r\n    Time.prototype._getTickValuesForConfiguration = function (config) {\r\n        var tickPos = this._scale.tickInterval(config.interval, config.step, this._useUTC);\r\n        var domain = this._scale.domain();\r\n        var tickPosValues = tickPos.map(function (d) { return d.valueOf(); }); // can't indexOf with objects\r\n        if (tickPosValues.indexOf(domain[0].valueOf()) === -1) {\r\n            tickPos.unshift(domain[0]);\r\n        }\r\n        if (tickPosValues.indexOf(domain[1].valueOf()) === -1) {\r\n            tickPos.push(domain[1]);\r\n        }\r\n        return tickPos;\r\n    };\r\n    Time.prototype._renderTierLabels = function (container, config, index) {\r\n        var _this = this;\r\n        var tickPos = this._getTickValuesForConfiguration(config);\r\n        var labelPos = [];\r\n        if (this._tierLabelPositions[index] === \"between\" && config.step === 1) {\r\n            tickPos.map(function (datum, i) {\r\n                if (i + 1 >= tickPos.length) {\r\n                    return;\r\n                }\r\n                labelPos.push(new Date((tickPos[i + 1].valueOf() - tickPos[i].valueOf()) / 2 + tickPos[i].valueOf()));\r\n            });\r\n        }\r\n        else {\r\n            labelPos = tickPos;\r\n        }\r\n        var tickLabelsUpdate = container.selectAll(\".\" + axis_1.Axis.TICK_LABEL_CLASS).data(labelPos, function (d) { return String(d.valueOf()); });\r\n        var tickLabelsEnter = tickLabelsUpdate\r\n            .enter()\r\n            .append(\"g\")\r\n            .classed(axis_1.Axis.TICK_LABEL_CLASS, true);\r\n        tickLabelsEnter.append(\"text\");\r\n        var xTranslate = (this._tierLabelPositions[index] === \"center\" || config.step === 1) ? 0 : this.tickLabelPadding();\r\n        var yTranslate;\r\n        if (this.orientation() === \"bottom\") {\r\n            yTranslate = d3.sum(this._tierHeights.slice(0, index + 1)) - this.tickLabelPadding();\r\n        }\r\n        else {\r\n            if (this._tierLabelPositions[index] === \"center\") {\r\n                yTranslate = this.height() - d3.sum(this._tierHeights.slice(0, index)) - this.tickLabelPadding() - this._maxLabelTickLength();\r\n            }\r\n            else {\r\n                yTranslate = this.height() - d3.sum(this._tierHeights.slice(0, index)) - this.tickLabelPadding();\r\n            }\r\n        }\r\n        var tickLabels = tickLabelsUpdate.merge(tickLabelsEnter);\r\n        var textSelection = tickLabels.selectAll(\"text\");\r\n        if (textSelection.size() > 0) {\r\n            textSelection.attr(\"transform\", \"translate(\" + xTranslate + \",\" + yTranslate + \")\");\r\n        }\r\n        tickLabelsUpdate.exit().remove();\r\n        tickLabels.attr(\"transform\", function (d) { return \"translate(\" + _this._scale.scale(d) + \",0)\"; });\r\n        var anchor = (this._tierLabelPositions[index] === \"center\" || config.step === 1) ? \"middle\" : \"start\";\r\n        tickLabels.selectAll(\"text\").text(config.formatter).style(\"text-anchor\", anchor);\r\n    };\r\n    Time.prototype._renderTickMarks = function (tickValues, index) {\r\n        var tickMarksUpdate = this._tierMarkContainers[index].selectAll(\".\" + axis_1.Axis.TICK_MARK_CLASS).data(tickValues);\r\n        var tickMarks = tickMarksUpdate\r\n            .enter()\r\n            .append(\"line\")\r\n            .classed(axis_1.Axis.TICK_MARK_CLASS, true)\r\n            .merge(tickMarksUpdate);\r\n        var attr = this._generateTickMarkAttrHash();\r\n        var offset = this._tierHeights.slice(0, index).reduce(function (translate, height) { return translate + height; }, 0);\r\n        if (this.orientation() === \"bottom\") {\r\n            attr[\"y1\"] = offset;\r\n            attr[\"y2\"] = offset + (this._tierLabelPositions[index] === \"center\" ? this.innerTickLength() : this._tierHeights[index]);\r\n        }\r\n        else {\r\n            attr[\"y1\"] = this.height() - offset;\r\n            attr[\"y2\"] = this.height() - (offset + (this._tierLabelPositions[index] === \"center\" ?\r\n                this.innerTickLength() : this._tierHeights[index]));\r\n        }\r\n        tickMarks.attrs(attr);\r\n        if (this.orientation() === \"bottom\") {\r\n            attr[\"y1\"] = offset;\r\n            attr[\"y2\"] = offset + (this._tierLabelPositions[index] === \"center\" ? this.endTickLength() : this._tierHeights[index]);\r\n        }\r\n        else {\r\n            attr[\"y1\"] = this.height() - offset;\r\n            attr[\"y2\"] = this.height() - (offset + (this._tierLabelPositions[index] === \"center\" ?\r\n                this.endTickLength() : this._tierHeights[index]));\r\n        }\r\n        d3.select(tickMarks.nodes()[0]).attrs(attr);\r\n        d3.select(tickMarks.nodes()[tickMarks.size() - 1]).attrs(attr);\r\n        // Add end-tick classes to first and last tick for CSS customization purposes\r\n        d3.select(tickMarks.nodes()[0]).classed(axis_1.Axis.END_TICK_MARK_CLASS, true);\r\n        d3.select(tickMarks.nodes()[tickMarks.size() - 1]).classed(axis_1.Axis.END_TICK_MARK_CLASS, true);\r\n        tickMarksUpdate.exit().remove();\r\n    };\r\n    Time.prototype._renderLabellessTickMarks = function (tickValues) {\r\n        var tickMarksUpdate = this._tickMarkContainer.selectAll(\".\" + axis_1.Axis.TICK_MARK_CLASS).data(tickValues);\r\n        var tickMarks = tickMarksUpdate\r\n            .enter()\r\n            .append(\"line\")\r\n            .classed(axis_1.Axis.TICK_MARK_CLASS, true)\r\n            .merge(tickMarksUpdate);\r\n        var attr = this._generateTickMarkAttrHash();\r\n        attr[\"y2\"] = (this.orientation() === \"bottom\") ? this.tickLabelPadding() : this.height() - this.tickLabelPadding();\r\n        tickMarks.attrs(attr);\r\n        tickMarksUpdate.exit().remove();\r\n    };\r\n    Time.prototype._generateLabellessTicks = function () {\r\n        if (this._mostPreciseConfigIndex < 1) {\r\n            return [];\r\n        }\r\n        return this._getTickIntervalValues(this._possibleTimeAxisConfigurations[this._mostPreciseConfigIndex - 1][0]);\r\n    };\r\n    Time.prototype.renderImmediately = function () {\r\n        var _this = this;\r\n        this._mostPreciseConfigIndex = this._getMostPreciseConfigurationIndex();\r\n        var tierConfigs = this._possibleTimeAxisConfigurations[this._mostPreciseConfigIndex];\r\n        this._cleanTiers();\r\n        tierConfigs.forEach(function (config, i) {\r\n            return _this._renderTierLabels(_this._tierLabelContainers[i], config, i);\r\n        });\r\n        var tierTicks = tierConfigs.map(function (config, i) {\r\n            return _this._getTickValuesForConfiguration(config);\r\n        });\r\n        var baselineOffset = 0;\r\n        for (var i = 0; i < Math.max(tierConfigs.length, 1); ++i) {\r\n            var attr = this._generateBaselineAttrHash();\r\n            attr[\"y1\"] += (this.orientation() === \"bottom\") ? baselineOffset : -baselineOffset;\r\n            attr[\"y2\"] = attr[\"y1\"];\r\n            this._tierBaselines[i].attrs(attr).style(\"visibility\", \"inherit\");\r\n            baselineOffset += this._tierHeights[i];\r\n        }\r\n        var labelLessTicks = [];\r\n        var domain = this._scale.domain();\r\n        var totalLength = this._scale.scale(domain[1]) - this._scale.scale(domain[0]);\r\n        if (this._getIntervalLength(tierConfigs[0]) * 1.5 >= totalLength) {\r\n            labelLessTicks = this._generateLabellessTicks();\r\n        }\r\n        this._renderLabellessTickMarks(labelLessTicks);\r\n        this._hideOverflowingTiers();\r\n        for (var i = 0; i < tierConfigs.length; ++i) {\r\n            this._renderTickMarks(tierTicks[i], i);\r\n            this._hideOverlappingAndCutOffLabels(i);\r\n        }\r\n        if (this.annotationsEnabled()) {\r\n            this._drawAnnotations();\r\n        }\r\n        else {\r\n            this._removeAnnotations();\r\n        }\r\n        return this;\r\n    };\r\n    Time.prototype._hideOverflowingTiers = function () {\r\n        var _this = this;\r\n        var availableHeight = this.height();\r\n        var usedHeight = 0;\r\n        this.content()\r\n            .selectAll(\".\" + Time.TIME_AXIS_TIER_CLASS)\r\n            .attr(\"visibility\", function (d, i) {\r\n            usedHeight += _this._tierHeights[i];\r\n            return usedHeight <= availableHeight ? \"inherit\" : \"hidden\";\r\n        });\r\n    };\r\n    Time.prototype._hideOverlappingAndCutOffLabels = function (index) {\r\n        var _this = this;\r\n        var boundingBox = this.element().node().getBoundingClientRect();\r\n        var isInsideBBox = function (tickBox) {\r\n            return (Math.floor(boundingBox.left) <= Math.ceil(tickBox.left) &&\r\n                Math.floor(boundingBox.top) <= Math.ceil(tickBox.top) &&\r\n                Math.floor(tickBox.right) <= Math.ceil(boundingBox.left + _this.width()) &&\r\n                Math.floor(tickBox.bottom) <= Math.ceil(boundingBox.top + _this.height()));\r\n        };\r\n        var visibleTickMarks = this._tierMarkContainers[index]\r\n            .selectAll(\".\" + axis_1.Axis.TICK_MARK_CLASS)\r\n            .filter(function (d, i) {\r\n            var visibility = d3.select(this).style(\"visibility\");\r\n            return visibility === \"visible\" || visibility === \"inherit\";\r\n        });\r\n        // We use the ClientRects because x1/x2 attributes are not comparable to ClientRects of labels\r\n        var visibleTickMarkRects = visibleTickMarks.nodes().map(function (mark) { return mark.getBoundingClientRect(); });\r\n        var visibleTickLabels = this._tierLabelContainers[index]\r\n            .selectAll(\".\" + axis_1.Axis.TICK_LABEL_CLASS)\r\n            .filter(function (d, i) {\r\n            var visibility = d3.select(this).style(\"visibility\");\r\n            return visibility === \"visible\" || visibility === \"inherit\";\r\n        });\r\n        var lastLabelClientRect;\r\n        visibleTickLabels.each(function (d, i) {\r\n            var clientRect = this.getBoundingClientRect();\r\n            var tickLabel = d3.select(this);\r\n            var leadingTickMark = visibleTickMarkRects[i];\r\n            var trailingTickMark = visibleTickMarkRects[i + 1];\r\n            var isOverlappingLastLabel = (lastLabelClientRect != null && Utils.DOM.clientRectsOverlap(clientRect, lastLabelClientRect));\r\n            var isOverlappingLeadingTickMark = (leadingTickMark != null && Utils.DOM.clientRectsOverlap(clientRect, leadingTickMark));\r\n            var isOverlappingTrailingTickMark = (trailingTickMark != null && Utils.DOM.clientRectsOverlap(clientRect, trailingTickMark));\r\n            if (!isInsideBBox(clientRect) || isOverlappingLastLabel || isOverlappingLeadingTickMark || isOverlappingTrailingTickMark) {\r\n                tickLabel.style(\"visibility\", \"hidden\");\r\n            }\r\n            else {\r\n                lastLabelClientRect = clientRect;\r\n                tickLabel.style(\"visibility\", \"inherit\");\r\n            }\r\n        });\r\n    };\r\n    Time.prototype.invalidateCache = function () {\r\n        _super.prototype.invalidateCache.call(this);\r\n        this._measurer.reset();\r\n    };\r\n    /**\r\n     * The CSS class applied to each Time Axis tier\r\n     */\r\n    Time.TIME_AXIS_TIER_CLASS = \"time-axis-tier\";\r\n    Time._SORTED_TIME_INTERVAL_INDEX = (_a = {},\r\n        _a[exports.TimeInterval.second] = 0,\r\n        _a[exports.TimeInterval.minute] = 1,\r\n        _a[exports.TimeInterval.hour] = 2,\r\n        _a[exports.TimeInterval.day] = 3,\r\n        _a[exports.TimeInterval.week] = 4,\r\n        _a[exports.TimeInterval.month] = 5,\r\n        _a[exports.TimeInterval.year] = 6,\r\n        _a);\r\n    Time._DEFAULT_TIME_AXIS_CONFIGURATIONS = function (useUTC) {\r\n        var formatter = function (specifier) { return Formatters.time(specifier, useUTC); };\r\n        return [\r\n            [\r\n                { interval: exports.TimeInterval.second, step: 1, formatter: formatter(\"%I:%M:%S %p\") },\r\n                { interval: exports.TimeInterval.day, step: 1, formatter: formatter(\"%B %e, %Y\") },\r\n            ],\r\n            [\r\n                { interval: exports.TimeInterval.second, step: 5, formatter: formatter(\"%I:%M:%S %p\") },\r\n                { interval: exports.TimeInterval.day, step: 1, formatter: formatter(\"%B %e, %Y\") },\r\n            ],\r\n            [\r\n                { interval: exports.TimeInterval.second, step: 10, formatter: formatter(\"%I:%M:%S %p\") },\r\n                { interval: exports.TimeInterval.day, step: 1, formatter: formatter(\"%B %e, %Y\") },\r\n            ],\r\n            [\r\n                { interval: exports.TimeInterval.second, step: 15, formatter: formatter(\"%I:%M:%S %p\") },\r\n                { interval: exports.TimeInterval.day, step: 1, formatter: formatter(\"%B %e, %Y\") },\r\n            ],\r\n            [\r\n                { interval: exports.TimeInterval.second, step: 30, formatter: formatter(\"%I:%M:%S %p\") },\r\n                { interval: exports.TimeInterval.day, step: 1, formatter: formatter(\"%B %e, %Y\") },\r\n            ],\r\n            [\r\n                { interval: exports.TimeInterval.minute, step: 1, formatter: formatter(\"%I:%M %p\") },\r\n                { interval: exports.TimeInterval.day, step: 1, formatter: formatter(\"%B %e, %Y\") },\r\n            ],\r\n            [\r\n                { interval: exports.TimeInterval.minute, step: 5, formatter: formatter(\"%I:%M %p\") },\r\n                { interval: exports.TimeInterval.day, step: 1, formatter: formatter(\"%B %e, %Y\") },\r\n            ],\r\n            [\r\n                { interval: exports.TimeInterval.minute, step: 10, formatter: formatter(\"%I:%M %p\") },\r\n                { interval: exports.TimeInterval.day, step: 1, formatter: formatter(\"%B %e, %Y\") },\r\n            ],\r\n            [\r\n                { interval: exports.TimeInterval.minute, step: 15, formatter: formatter(\"%I:%M %p\") },\r\n                { interval: exports.TimeInterval.day, step: 1, formatter: formatter(\"%B %e, %Y\") },\r\n            ],\r\n            [\r\n                { interval: exports.TimeInterval.minute, step: 30, formatter: formatter(\"%I:%M %p\") },\r\n                { interval: exports.TimeInterval.day, step: 1, formatter: formatter(\"%B %e, %Y\") },\r\n            ],\r\n            [\r\n                { interval: exports.TimeInterval.hour, step: 1, formatter: formatter(\"%I %p\") },\r\n                { interval: exports.TimeInterval.day, step: 1, formatter: formatter(\"%B %e, %Y\") },\r\n            ],\r\n            [\r\n                { interval: exports.TimeInterval.hour, step: 3, formatter: formatter(\"%I %p\") },\r\n                { interval: exports.TimeInterval.day, step: 1, formatter: formatter(\"%B %e, %Y\") },\r\n            ],\r\n            [\r\n                { interval: exports.TimeInterval.hour, step: 6, formatter: formatter(\"%I %p\") },\r\n                { interval: exports.TimeInterval.day, step: 1, formatter: formatter(\"%B %e, %Y\") },\r\n            ],\r\n            [\r\n                { interval: exports.TimeInterval.hour, step: 12, formatter: formatter(\"%I %p\") },\r\n                { interval: exports.TimeInterval.day, step: 1, formatter: formatter(\"%B %e, %Y\") },\r\n            ],\r\n            [\r\n                { interval: exports.TimeInterval.day, step: 1, formatter: formatter(\"%a %e\") },\r\n                { interval: exports.TimeInterval.month, step: 1, formatter: formatter(\"%B %Y\") },\r\n            ],\r\n            [\r\n                { interval: exports.TimeInterval.day, step: 1, formatter: formatter(\"%e\") },\r\n                { interval: exports.TimeInterval.month, step: 1, formatter: formatter(\"%B %Y\") },\r\n            ],\r\n            [\r\n                { interval: exports.TimeInterval.month, step: 1, formatter: formatter(\"%B\") },\r\n                { interval: exports.TimeInterval.year, step: 1, formatter: formatter(\"%Y\") },\r\n            ],\r\n            [\r\n                { interval: exports.TimeInterval.month, step: 1, formatter: formatter(\"%b\") },\r\n                { interval: exports.TimeInterval.year, step: 1, formatter: formatter(\"%Y\") },\r\n            ],\r\n            [\r\n                { interval: exports.TimeInterval.month, step: 3, formatter: formatter(\"%b\") },\r\n                { interval: exports.TimeInterval.year, step: 1, formatter: formatter(\"%Y\") },\r\n            ],\r\n            [\r\n                { interval: exports.TimeInterval.month, step: 6, formatter: formatter(\"%b\") },\r\n                { interval: exports.TimeInterval.year, step: 1, formatter: formatter(\"%Y\") },\r\n            ],\r\n            [\r\n                { interval: exports.TimeInterval.year, step: 1, formatter: formatter(\"%Y\") },\r\n            ],\r\n            [\r\n                { interval: exports.TimeInterval.year, step: 1, formatter: formatter(\"%y\") },\r\n            ],\r\n            [\r\n                { interval: exports.TimeInterval.year, step: 5, formatter: formatter(\"%Y\") },\r\n            ],\r\n            [\r\n                { interval: exports.TimeInterval.year, step: 25, formatter: formatter(\"%Y\") },\r\n            ],\r\n            [\r\n                { interval: exports.TimeInterval.year, step: 50, formatter: formatter(\"%Y\") },\r\n            ],\r\n            [\r\n                { interval: exports.TimeInterval.year, step: 100, formatter: formatter(\"%Y\") },\r\n            ],\r\n            [\r\n                { interval: exports.TimeInterval.year, step: 200, formatter: formatter(\"%Y\") },\r\n            ],\r\n            [\r\n                { interval: exports.TimeInterval.year, step: 500, formatter: formatter(\"%Y\") },\r\n            ],\r\n            [\r\n                { interval: exports.TimeInterval.year, step: 1000, formatter: formatter(\"%Y\") },\r\n            ],\r\n        ];\r\n    };\r\n    Time._LONG_DATE = new Date(9999, 8, 29, 12, 59, 9999);\r\n    return Time;\r\n}(axis_1.Axis));\r\nexports.Time = Time;\r\nvar _a;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/axes/timeAxis.ts\n// module id = 30\n// module chunks = 0","\"use strict\";\r\n/**\r\n * Copyright 2014-present Palantir Technologies\r\n * @license MIT\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\nvar coerceD3_1 = require(\"../utils/coerceD3\");\r\nvar component_1 = require(\"./component\");\r\n/*\r\n * ComponentContainer class encapsulates Table and ComponentGroup's shared functionality.\r\n * It will not do anything if instantiated directly.\r\n */\r\nvar ComponentContainer = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ComponentContainer, _super);\r\n    function ComponentContainer() {\r\n        var _this = _super.call(this) || this;\r\n        _this._detachCallback = function (component) { return _this.remove(component); };\r\n        return _this;\r\n    }\r\n    ComponentContainer.prototype.anchor = function (selection) {\r\n        var _this = this;\r\n        selection = coerceD3_1.coerceExternalD3(selection);\r\n        _super.prototype.anchor.call(this, selection);\r\n        this._forEach(function (c) { return c.anchor(_this.element()); });\r\n        return this;\r\n    };\r\n    ComponentContainer.prototype.render = function () {\r\n        this._forEach(function (c) { return c.render(); });\r\n        return this;\r\n    };\r\n    /**\r\n     * Checks whether the specified Component is in the ComponentContainer.\r\n     */\r\n    ComponentContainer.prototype.has = function (component) {\r\n        throw new Error(\"has() is not implemented on ComponentContainer\");\r\n    };\r\n    ComponentContainer.prototype._adoptAndAnchor = function (component) {\r\n        component.parent(this);\r\n        component.onDetach(this._detachCallback);\r\n        if (this._isAnchored) {\r\n            component.anchor(this.element());\r\n        }\r\n    };\r\n    /**\r\n     * Removes the specified Component from the ComponentContainer.\r\n     */\r\n    ComponentContainer.prototype.remove = function (component) {\r\n        if (this.has(component)) {\r\n            component.offDetach(this._detachCallback);\r\n            this._remove(component);\r\n            component.detach();\r\n            this.redraw();\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Carry out the actual removal of a Component.\r\n     * Implementation dependent on the type of container.\r\n     *\r\n     * @return {boolean} true if the Component was successfully removed, false otherwise.\r\n     */\r\n    ComponentContainer.prototype._remove = function (component) {\r\n        return false;\r\n    };\r\n    /**\r\n     * Invokes a callback on each Component in the ComponentContainer.\r\n     */\r\n    ComponentContainer.prototype._forEach = function (callback) {\r\n        throw new Error(\"_forEach() is not implemented on ComponentContainer\");\r\n    };\r\n    /**\r\n     * Destroys the ComponentContainer and all Components within it.\r\n     */\r\n    ComponentContainer.prototype.destroy = function () {\r\n        _super.prototype.destroy.call(this);\r\n        this._forEach(function (c) { return c.destroy(); });\r\n    };\r\n    ComponentContainer.prototype.invalidateCache = function () {\r\n        this._forEach(function (c) { return c.invalidateCache(); });\r\n    };\r\n    return ComponentContainer;\r\n}(component_1.Component));\r\nexports.ComponentContainer = ComponentContainer;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/componentContainer.ts\n// module id = 31\n// module chunks = 0","\"use strict\";\r\n/**\r\n * Copyright 2014-present Palantir Technologies\r\n * @license MIT\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Utils = require(\"../utils\");\r\nvar makeEnum_1 = require(\"../utils/makeEnum\");\r\nvar RenderPolicies = require(\"./renderPolicy\");\r\n/**\r\n * The RenderController is responsible for enqueueing and synchronizing\r\n * layout and render calls for Components.\r\n *\r\n * Layout and render calls occur inside an animation callback\r\n * (window.requestAnimationFrame if available).\r\n *\r\n * RenderController.flush() immediately lays out and renders all Components currently enqueued.\r\n *\r\n * To always have immediate rendering (useful for debugging), call\r\n * ```typescript\r\n * Plottable.RenderController.setRenderPolicy(\r\n *   new Plottable.RenderPolicies.Immediate()\r\n * );\r\n * ```\r\n */\r\nvar _componentsNeedingRender = new Utils.Set();\r\nvar _componentsNeedingComputeLayout = new Utils.Set();\r\nvar _animationRequested = false;\r\nvar _isCurrentlyFlushing = false;\r\nexports.Policy = makeEnum_1.makeEnum([\"immediate\", \"animationFrame\", \"timeout\"]);\r\nvar _renderPolicy = new RenderPolicies.AnimationFrame();\r\nfunction renderPolicy(renderPolicy) {\r\n    if (renderPolicy == null) {\r\n        return _renderPolicy;\r\n    }\r\n    switch (renderPolicy) {\r\n        case exports.Policy.immediate:\r\n            _renderPolicy = new RenderPolicies.Immediate();\r\n            break;\r\n        case exports.Policy.animationFrame:\r\n            _renderPolicy = new RenderPolicies.AnimationFrame();\r\n            break;\r\n        case exports.Policy.timeout:\r\n            _renderPolicy = new RenderPolicies.Timeout();\r\n            break;\r\n        default:\r\n            Utils.Window.warn(\"Unrecognized renderPolicy: \" + renderPolicy);\r\n    }\r\n}\r\nexports.renderPolicy = renderPolicy;\r\n/**\r\n * Enqueues the Component for rendering.\r\n *\r\n * @param {Component} component\r\n */\r\nfunction registerToRender(component) {\r\n    if (_isCurrentlyFlushing) {\r\n        Utils.Window.warn(\"Registered to render while other components are flushing: request may be ignored\");\r\n    }\r\n    _componentsNeedingRender.add(component);\r\n    requestRender();\r\n}\r\nexports.registerToRender = registerToRender;\r\n/**\r\n * Enqueues the Component for layout and rendering.\r\n *\r\n * @param {Component} component\r\n */\r\nfunction registerToComputeLayoutAndRender(component) {\r\n    _componentsNeedingComputeLayout.add(component);\r\n    _componentsNeedingRender.add(component);\r\n    requestRender();\r\n}\r\nexports.registerToComputeLayoutAndRender = registerToComputeLayoutAndRender;\r\n/**\r\n * Enqueues the Component for layout and rendering.\r\n *\r\n * @param {Component} component\r\n * @deprecated This method has been renamed to `RenderController.registerToComputeLayoutAndRender()`.\r\n */\r\nfunction registerToComputeLayout(component) {\r\n    registerToComputeLayoutAndRender(component);\r\n}\r\nexports.registerToComputeLayout = registerToComputeLayout;\r\nfunction requestRender() {\r\n    // Only run or enqueue flush on first request.\r\n    if (!_animationRequested) {\r\n        _animationRequested = true;\r\n        _renderPolicy.render();\r\n    }\r\n}\r\n/**\r\n * Renders all Components waiting to be rendered immediately\r\n * instead of waiting until the next frame. Flush is idempotent (given there are no intermediate registrations).\r\n *\r\n * Useful to call when debugging.\r\n */\r\nfunction flush() {\r\n    if (_animationRequested) {\r\n        // Layout\r\n        _componentsNeedingComputeLayout.forEach(function (component) { return component.computeLayout(); });\r\n        // Top level render; Containers will put their children in the toRender queue\r\n        _componentsNeedingRender.forEach(function (component) { return component.render(); });\r\n        _isCurrentlyFlushing = true;\r\n        var failed_1 = new Utils.Set();\r\n        _componentsNeedingRender.forEach(function (component) {\r\n            try {\r\n                component.renderImmediately();\r\n            }\r\n            catch (err) {\r\n                // throw error with timeout to avoid interrupting further renders\r\n                window.setTimeout(function () {\r\n                    throw err;\r\n                }, 0);\r\n                failed_1.add(component);\r\n            }\r\n        });\r\n        _componentsNeedingComputeLayout = new Utils.Set();\r\n        _componentsNeedingRender = failed_1;\r\n        _animationRequested = false;\r\n        _isCurrentlyFlushing = false;\r\n    }\r\n}\r\nexports.flush = flush;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/core/renderController.ts\n// module id = 32\n// module chunks = 0","\"use strict\";\r\n/**\r\n * Copyright 2014-present Palantir Technologies\r\n * @license MIT\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar d3 = require(\"d3\");\r\nfunction circle() {\r\n    return function (symbolSize) {\r\n        return d3.symbol().type(d3.symbolCircle).size(Math.PI * Math.pow(symbolSize / 2, 2));\r\n    };\r\n}\r\nexports.circle = circle;\r\nfunction square() {\r\n    return function (symbolSize) {\r\n        return d3.symbol().type(d3.symbolSquare).size(Math.pow(symbolSize, 2));\r\n    };\r\n}\r\nexports.square = square;\r\nfunction cross() {\r\n    return function (symbolSize) {\r\n        return d3.symbol().type(d3.symbolCross).size((5 / 9) * Math.pow(symbolSize, 2));\r\n    };\r\n}\r\nexports.cross = cross;\r\nfunction diamond() {\r\n    return function (symbolSize) {\r\n        return d3.symbol().type(d3.symbolDiamond).size(Math.tan(Math.PI / 6) * Math.pow(symbolSize, 2) / 2);\r\n    };\r\n}\r\nexports.diamond = diamond;\r\nfunction triangle() {\r\n    return function (symbolSize) {\r\n        return d3.symbol().type(d3.symbolTriangle).size(Math.sqrt(3) * Math.pow(symbolSize / 2, 2));\r\n    };\r\n}\r\nexports.triangle = triangle;\r\n// copied from https://github.com/d3/d3-shape/blob/e2e57722004acba754ed9edff020282682450c5c/src/symbol/star.js#L3\r\nvar ka = 0.89081309152928522810;\r\nfunction star() {\r\n    return function (symbolSize) {\r\n        return d3.symbol().type(d3.symbolStar).size(ka * Math.pow(symbolSize / 2, 2));\r\n    };\r\n}\r\nexports.star = star;\r\n// copied from https://github.com/d3/d3-shape/blob/c35b2303eb4836aba3171642f01c2653e4228b9c/src/symbol/wye.js#L2\r\nvar a = ((1 / Math.sqrt(12)) / 2 + 1) * 3;\r\nfunction wye() {\r\n    return function (symbolSize) {\r\n        return d3.symbol().type(d3.symbolWye).size(a * Math.pow(symbolSize / 2.4, 2));\r\n    };\r\n}\r\nexports.wye = wye;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/core/symbolFactories.ts\n// module id = 33\n// module chunks = 0","\"use strict\";\r\n/**\r\n * Copyright 2014-present Palantir Technologies\r\n * @license MIT\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\nvar Interactions = require(\"../interactions\");\r\nvar Utils = require(\"../utils\");\r\nvar coerceD3_1 = require(\"../utils/coerceD3\");\r\nvar _1 = require(\"./\");\r\nvar selectionBoxLayer_1 = require(\"./selectionBoxLayer\");\r\nvar DragBoxLayer = /** @class */ (function (_super) {\r\n    tslib_1.__extends(DragBoxLayer, _super);\r\n    /**\r\n     * Constructs a DragBoxLayer.\r\n     *\r\n     * A DragBoxLayer is a SelectionBoxLayer with a built-in Drag Interaction.\r\n     * A drag gesture will set the Bounds of the box.\r\n     * If resizing is enabled using resizable(true), the edges of box can be repositioned.\r\n     *\r\n     * @constructor\r\n     */\r\n    function DragBoxLayer() {\r\n        var _this = _super.call(this) || this;\r\n        _this._detectionRadius = 3;\r\n        _this._resizable = false;\r\n        _this._movable = false;\r\n        _this._hasCorners = true;\r\n        _this.addClass(\"drag-box-layer\");\r\n        _this._dragInteraction = new Interactions.Drag();\r\n        _this._setUpCallbacks();\r\n        _this._dragInteraction.attachTo(_this);\r\n        _this._dragStartCallbacks = new Utils.CallbackSet();\r\n        _this._dragCallbacks = new Utils.CallbackSet();\r\n        _this._dragEndCallbacks = new Utils.CallbackSet();\r\n        return _this;\r\n    }\r\n    DragBoxLayer.prototype._setUpCallbacks = function () {\r\n        var _this = this;\r\n        var resizingEdges;\r\n        var topLeft;\r\n        var bottomRight;\r\n        var lastEndPoint;\r\n        var DRAG_MODES = {\r\n            newBox: 0,\r\n            resize: 1,\r\n            move: 2,\r\n        };\r\n        var mode = DRAG_MODES.newBox;\r\n        var onDragStartCallback = function (startPoint) {\r\n            resizingEdges = _this._getResizingEdges(startPoint);\r\n            var bounds = _this.bounds();\r\n            var isInsideBox = bounds.topLeft.x <= startPoint.x && startPoint.x <= bounds.bottomRight.x &&\r\n                bounds.topLeft.y <= startPoint.y && startPoint.y <= bounds.bottomRight.y;\r\n            if (_this.boxVisible() && (resizingEdges.top || resizingEdges.bottom || resizingEdges.left || resizingEdges.right)) {\r\n                mode = DRAG_MODES.resize;\r\n            }\r\n            else if (_this.boxVisible() && _this.movable() && isInsideBox) {\r\n                mode = DRAG_MODES.move;\r\n            }\r\n            else {\r\n                mode = DRAG_MODES.newBox;\r\n                _this._setBounds({\r\n                    topLeft: startPoint,\r\n                    bottomRight: startPoint,\r\n                });\r\n                if (_this._xBoundsMode === _1.PropertyMode.VALUE && _this.xScale() != null) {\r\n                    _this._setXExtent([_this.xScale().invert(startPoint.x), _this.xScale().invert(startPoint.x)]);\r\n                }\r\n                if (_this._yBoundsMode === _1.PropertyMode.VALUE && _this.yScale() != null) {\r\n                    _this._setYExtent([_this.yScale().invert(startPoint.y), _this.yScale().invert(startPoint.y)]);\r\n                }\r\n                _this.render();\r\n            }\r\n            _this.boxVisible(true);\r\n            bounds = _this.bounds();\r\n            // copy points so changes to topLeft and bottomRight don't mutate bounds\r\n            topLeft = { x: bounds.topLeft.x, y: bounds.topLeft.y };\r\n            bottomRight = { x: bounds.bottomRight.x, y: bounds.bottomRight.y };\r\n            lastEndPoint = startPoint;\r\n            _this._dragStartCallbacks.callCallbacks(bounds);\r\n        };\r\n        var onDragCallback = function (startPoint, endPoint) {\r\n            switch (mode) {\r\n                case DRAG_MODES.newBox:\r\n                    bottomRight.x = endPoint.x;\r\n                    bottomRight.y = endPoint.y;\r\n                    break;\r\n                case DRAG_MODES.resize:\r\n                    if (resizingEdges.bottom) {\r\n                        bottomRight.y = endPoint.y;\r\n                    }\r\n                    else if (resizingEdges.top) {\r\n                        topLeft.y = endPoint.y;\r\n                    }\r\n                    if (resizingEdges.right) {\r\n                        bottomRight.x = endPoint.x;\r\n                    }\r\n                    else if (resizingEdges.left) {\r\n                        topLeft.x = endPoint.x;\r\n                    }\r\n                    break;\r\n                case DRAG_MODES.move:\r\n                    var dx = endPoint.x - lastEndPoint.x;\r\n                    var dy = endPoint.y - lastEndPoint.y;\r\n                    topLeft.x += dx;\r\n                    topLeft.y += dy;\r\n                    bottomRight.x += dx;\r\n                    bottomRight.y += dy;\r\n                    lastEndPoint = endPoint;\r\n                    break;\r\n            }\r\n            _this._setBounds({\r\n                topLeft: topLeft,\r\n                bottomRight: bottomRight,\r\n            });\r\n            if (_this._xBoundsMode === _1.PropertyMode.VALUE && _this.xScale() != null) {\r\n                _this._setXExtent([_this.xScale().invert(topLeft.x), _this.xScale().invert(bottomRight.x)]);\r\n            }\r\n            if (_this._yBoundsMode === _1.PropertyMode.VALUE && _this.yScale() != null) {\r\n                _this._setYExtent([_this.yScale().invert(topLeft.y), _this.yScale().invert(bottomRight.y)]);\r\n            }\r\n            _this.render();\r\n            _this._dragCallbacks.callCallbacks(_this.bounds());\r\n        };\r\n        var onDragEndCallback = function (startPoint, endPoint) {\r\n            if (mode === DRAG_MODES.newBox && startPoint.x === endPoint.x && startPoint.y === endPoint.y) {\r\n                _this.boxVisible(false);\r\n            }\r\n            _this._dragEndCallbacks.callCallbacks(_this.bounds());\r\n        };\r\n        this._dragInteraction.onDragStart(onDragStartCallback);\r\n        this._dragInteraction.onDrag(onDragCallback);\r\n        this._dragInteraction.onDragEnd(onDragEndCallback);\r\n        this._disconnectInteraction = function () {\r\n            _this._dragInteraction.offDragStart(onDragStartCallback);\r\n            _this._dragInteraction.offDrag(onDragCallback);\r\n            _this._dragInteraction.offDragEnd(onDragEndCallback);\r\n            _this._dragInteraction.detach();\r\n        };\r\n    };\r\n    DragBoxLayer.prototype._setup = function () {\r\n        var _this = this;\r\n        _super.prototype._setup.call(this);\r\n        var createLine = function () { return _this._box.append(\"line\").styles({\r\n            opacity: 0,\r\n            stroke: \"pink\",\r\n            \"pointer-events\": \"visibleStroke\",\r\n        }); };\r\n        this._detectionEdgeT = createLine().classed(\"drag-edge-tb\", true);\r\n        this._detectionEdgeB = createLine().classed(\"drag-edge-tb\", true);\r\n        this._detectionEdgeL = createLine().classed(\"drag-edge-lr\", true);\r\n        this._detectionEdgeR = createLine().classed(\"drag-edge-lr\", true);\r\n        if (this._hasCorners) {\r\n            var createCorner = function () { return _this._box.append(\"circle\")\r\n                .styles({\r\n                opacity: 0,\r\n                fill: \"pink\",\r\n                \"pointer-events\": \"visibleFill\",\r\n            }); };\r\n            this._detectionCornerTL = createCorner().classed(\"drag-corner-tl\", true);\r\n            this._detectionCornerTR = createCorner().classed(\"drag-corner-tr\", true);\r\n            this._detectionCornerBL = createCorner().classed(\"drag-corner-bl\", true);\r\n            this._detectionCornerBR = createCorner().classed(\"drag-corner-br\", true);\r\n        }\r\n    };\r\n    DragBoxLayer.prototype._getResizingEdges = function (p) {\r\n        var edges = {\r\n            top: false,\r\n            bottom: false,\r\n            left: false,\r\n            right: false,\r\n        };\r\n        if (!this.resizable()) {\r\n            return edges;\r\n        }\r\n        var bounds = this.bounds();\r\n        var t = bounds.topLeft.y;\r\n        var b = bounds.bottomRight.y;\r\n        var l = bounds.topLeft.x;\r\n        var r = bounds.bottomRight.x;\r\n        var rad = this._detectionRadius;\r\n        if (l - rad <= p.x && p.x <= r + rad) {\r\n            edges.top = (t - rad <= p.y && p.y <= t + rad);\r\n            edges.bottom = (b - rad <= p.y && p.y <= b + rad);\r\n        }\r\n        if (t - rad <= p.y && p.y <= b + rad) {\r\n            edges.left = (l - rad <= p.x && p.x <= l + rad);\r\n            edges.right = (r - rad <= p.x && p.x <= r + rad);\r\n        }\r\n        return edges;\r\n    };\r\n    DragBoxLayer.prototype.renderImmediately = function () {\r\n        _super.prototype.renderImmediately.call(this);\r\n        if (this.boxVisible()) {\r\n            var bounds = this.bounds();\r\n            var t = bounds.topLeft.y;\r\n            var b = bounds.bottomRight.y;\r\n            var l = bounds.topLeft.x;\r\n            var r = bounds.bottomRight.x;\r\n            this._detectionEdgeT.attrs({\r\n                \"x1\": l, \"y1\": t, \"x2\": r, \"y2\": t,\r\n                \"stroke-width\": this._detectionRadius * 2,\r\n            });\r\n            this._detectionEdgeB.attrs({\r\n                \"x1\": l, \"y1\": b, \"x2\": r, \"y2\": b,\r\n                \"stroke-width\": this._detectionRadius * 2,\r\n            });\r\n            this._detectionEdgeL.attrs({\r\n                \"x1\": l, \"y1\": t, \"x2\": l, \"y2\": b,\r\n                \"stroke-width\": this._detectionRadius * 2,\r\n            });\r\n            this._detectionEdgeR.attrs({\r\n                \"x1\": r, \"y1\": t, \"x2\": r, \"y2\": b,\r\n                \"stroke-width\": this._detectionRadius * 2,\r\n            });\r\n            if (this._hasCorners) {\r\n                this._detectionCornerTL.attrs({ cx: l, cy: t, r: this._detectionRadius });\r\n                this._detectionCornerTR.attrs({ cx: r, cy: t, r: this._detectionRadius });\r\n                this._detectionCornerBL.attrs({ cx: l, cy: b, r: this._detectionRadius });\r\n                this._detectionCornerBR.attrs({ cx: r, cy: b, r: this._detectionRadius });\r\n            }\r\n        }\r\n        return this;\r\n    };\r\n    DragBoxLayer.prototype.detectionRadius = function (r) {\r\n        if (r == null) {\r\n            return this._detectionRadius;\r\n        }\r\n        if (r < 0) {\r\n            throw new Error(\"detection radius cannot be negative.\");\r\n        }\r\n        this._detectionRadius = r;\r\n        this.render();\r\n        return this;\r\n    };\r\n    DragBoxLayer.prototype.resizable = function (canResize) {\r\n        if (canResize == null) {\r\n            return this._resizable;\r\n        }\r\n        this._resizable = canResize;\r\n        this._setResizableClasses(canResize);\r\n        return this;\r\n    };\r\n    // Sets resizable classes. Overridden by subclasses that only resize in one dimension.\r\n    DragBoxLayer.prototype._setResizableClasses = function (canResize) {\r\n        if (canResize && this.enabled()) {\r\n            this.addClass(\"x-resizable\");\r\n            this.addClass(\"y-resizable\");\r\n        }\r\n        else {\r\n            this.removeClass(\"x-resizable\");\r\n            this.removeClass(\"y-resizable\");\r\n        }\r\n    };\r\n    DragBoxLayer.prototype.movable = function (movable) {\r\n        if (movable == null) {\r\n            return this._movable;\r\n        }\r\n        this._movable = movable;\r\n        this._setMovableClass();\r\n        return this;\r\n    };\r\n    DragBoxLayer.prototype._setMovableClass = function () {\r\n        if (this.movable() && this.enabled()) {\r\n            this.addClass(\"movable\");\r\n        }\r\n        else {\r\n            this.removeClass(\"movable\");\r\n        }\r\n    };\r\n    /**\r\n     * Sets the callback to be called when dragging starts.\r\n     *\r\n     * @param {DragBoxCallback} callback\r\n     * @returns {DragBoxLayer} The calling DragBoxLayer.\r\n     */\r\n    DragBoxLayer.prototype.onDragStart = function (callback) {\r\n        this._dragStartCallbacks.add(callback);\r\n        return this;\r\n    };\r\n    /**\r\n     * Removes a callback to be called when dragging starts.\r\n     *\r\n     * @param {DragBoxCallback} callback\r\n     * @returns {DragBoxLayer} The calling DragBoxLayer.\r\n     */\r\n    DragBoxLayer.prototype.offDragStart = function (callback) {\r\n        this._dragStartCallbacks.delete(callback);\r\n        return this;\r\n    };\r\n    /**\r\n     * Sets a callback to be called during dragging.\r\n     *\r\n     * @param {DragBoxCallback} callback\r\n     * @returns {DragBoxLayer} The calling DragBoxLayer.\r\n     */\r\n    DragBoxLayer.prototype.onDrag = function (callback) {\r\n        this._dragCallbacks.add(callback);\r\n        return this;\r\n    };\r\n    /**\r\n     * Removes a callback to be called during dragging.\r\n     *\r\n     * @param {DragBoxCallback} callback\r\n     * @returns {DragBoxLayer} The calling DragBoxLayer.\r\n     */\r\n    DragBoxLayer.prototype.offDrag = function (callback) {\r\n        this._dragCallbacks.delete(callback);\r\n        return this;\r\n    };\r\n    /**\r\n     * Sets a callback to be called when dragging ends.\r\n     *\r\n     * @param {DragBoxCallback} callback\r\n     * @returns {DragBoxLayer} The calling DragBoxLayer.\r\n     */\r\n    DragBoxLayer.prototype.onDragEnd = function (callback) {\r\n        this._dragEndCallbacks.add(callback);\r\n        return this;\r\n    };\r\n    /**\r\n     * Removes a callback to be called when dragging ends.\r\n     *\r\n     * @param {DragBoxCallback} callback\r\n     * @returns {DragBoxLayer} The calling DragBoxLayer.\r\n     */\r\n    DragBoxLayer.prototype.offDragEnd = function (callback) {\r\n        this._dragEndCallbacks.delete(callback);\r\n        return this;\r\n    };\r\n    /**\r\n     * Gets the internal Interactions.Drag of the DragBoxLayer.\r\n     */\r\n    DragBoxLayer.prototype.dragInteraction = function () {\r\n        return this._dragInteraction;\r\n    };\r\n    DragBoxLayer.prototype.enabled = function (enabled) {\r\n        if (enabled == null) {\r\n            return this._dragInteraction.enabled();\r\n        }\r\n        this._dragInteraction.enabled(enabled);\r\n        this._setResizableClasses(this.resizable());\r\n        this._setMovableClass();\r\n        return this;\r\n    };\r\n    DragBoxLayer.prototype.destroy = function () {\r\n        var _this = this;\r\n        _super.prototype.destroy.call(this);\r\n        this._dragStartCallbacks.forEach(function (callback) { return _this._dragCallbacks.delete(callback); });\r\n        this._dragCallbacks.forEach(function (callback) { return _this._dragCallbacks.delete(callback); });\r\n        this._dragEndCallbacks.forEach(function (callback) { return _this._dragEndCallbacks.delete(callback); });\r\n        this._disconnectInteraction();\r\n    };\r\n    DragBoxLayer.prototype.detach = function () {\r\n        this._resetState();\r\n        this._dragInteraction.detach();\r\n        _super.prototype.detach.call(this);\r\n        return this;\r\n    };\r\n    DragBoxLayer.prototype.anchor = function (selection) {\r\n        selection = coerceD3_1.coerceExternalD3(selection);\r\n        this._dragInteraction.attachTo(this);\r\n        _super.prototype.anchor.call(this, selection);\r\n        return this;\r\n    };\r\n    DragBoxLayer.prototype._resetState = function () {\r\n        this.bounds({\r\n            topLeft: { x: 0, y: 0 },\r\n            bottomRight: { x: 0, y: 0 },\r\n        });\r\n    };\r\n    return DragBoxLayer;\r\n}(selectionBoxLayer_1.SelectionBoxLayer));\r\nexports.DragBoxLayer = DragBoxLayer;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/dragBoxLayer.ts\n// module id = 34\n// module chunks = 0","\"use strict\";\r\n/**\r\n * Copyright 2014-present Palantir Technologies\r\n * @license MIT\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\nvar canvasDrawer_1 = require(\"./canvasDrawer\");\r\nvar svgDrawer_1 = require(\"./svgDrawer\");\r\nvar LineSVGDrawer = /** @class */ (function (_super) {\r\n    tslib_1.__extends(LineSVGDrawer, _super);\r\n    function LineSVGDrawer() {\r\n        return _super.call(this, \"path\", \"line\") || this;\r\n    }\r\n    LineSVGDrawer.prototype._applyDefaultAttributes = function (selection) {\r\n        selection.style(\"fill\", \"none\");\r\n    };\r\n    LineSVGDrawer.prototype.getVisualPrimitiveAtIndex = function (index) {\r\n        return _super.prototype.getVisualPrimitiveAtIndex.call(this, 0);\r\n    };\r\n    return LineSVGDrawer;\r\n}(svgDrawer_1.SVGDrawer));\r\nexports.LineSVGDrawer = LineSVGDrawer;\r\nvar LINE_ATTRIBUTES = [\r\n    \"opacity\",\r\n    \"stroke-opacity\",\r\n    \"stroke-width\",\r\n    \"stroke\",\r\n    \"stroke-dasharray\",\r\n];\r\n/**\r\n * @param d3LineFactory A callback that gives this Line Drawer a d3.Line object which will be\r\n * used to draw with.\r\n *\r\n * TODO put the d3.Line into the attrToAppliedProjector directly\r\n */\r\nfunction makeLineCanvasDrawStep(d3LineFactory) {\r\n    return function (context, data, attrToAppliedProjector) {\r\n        var lineStyle = canvasDrawer_1.resolveAttributes(attrToAppliedProjector, LINE_ATTRIBUTES, data[0], 0);\r\n        canvasDrawer_1.renderLine(context, d3LineFactory(), data[0], lineStyle);\r\n    };\r\n}\r\nexports.makeLineCanvasDrawStep = makeLineCanvasDrawStep;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/drawers/lineDrawer.ts\n// module id = 35\n// module chunks = 0","\"use strict\";\r\n/**\r\n * Copyright 2014-present Palantir Technologies\r\n * @license MIT\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\nvar canvasDrawer_1 = require(\"./canvasDrawer\");\r\nvar svgDrawer_1 = require(\"./svgDrawer\");\r\nvar RectangleSVGDrawer = /** @class */ (function (_super) {\r\n    tslib_1.__extends(RectangleSVGDrawer, _super);\r\n    function RectangleSVGDrawer(_rootClassName) {\r\n        if (_rootClassName === void 0) { _rootClassName = \"\"; }\r\n        var _this = _super.call(this, \"rect\", \"\") || this;\r\n        _this._rootClassName = _rootClassName;\r\n        _this._root.classed(_this._rootClassName, true);\r\n        return _this;\r\n    }\r\n    return RectangleSVGDrawer;\r\n}(svgDrawer_1.SVGDrawer));\r\nexports.RectangleSVGDrawer = RectangleSVGDrawer;\r\nvar RECT_ATTRS = canvasDrawer_1.ContextStyleAttrs.concat([\"x\", \"y\", \"width\", \"height\"]);\r\nexports.RectangleCanvasDrawStep = function (context, data, projector) {\r\n    context.save();\r\n    var dataLen = data.length;\r\n    for (var index = 0; index < dataLen; index++) {\r\n        var datum = data[index];\r\n        if (datum == null) {\r\n            continue;\r\n        }\r\n        var attrs = canvasDrawer_1.resolveAttributes(projector, RECT_ATTRS, datum, index);\r\n        context.beginPath();\r\n        context.rect(attrs[\"x\"], attrs[\"y\"], attrs[\"width\"], attrs[\"height\"]);\r\n        canvasDrawer_1.renderPathWithStyle(context, attrs);\r\n    }\r\n    context.restore();\r\n};\r\nvar RectangleCanvasDrawer = /** @class */ (function (_super) {\r\n    tslib_1.__extends(RectangleCanvasDrawer, _super);\r\n    function RectangleCanvasDrawer(ctx) {\r\n        return _super.call(this, ctx, exports.RectangleCanvasDrawStep) || this;\r\n    }\r\n    return RectangleCanvasDrawer;\r\n}(canvasDrawer_1.CanvasDrawer));\r\nexports.RectangleCanvasDrawer = RectangleCanvasDrawer;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/drawers/rectangleDrawer.ts\n// module id = 36\n// module chunks = 0","\"use strict\";\r\n/**\r\n * Copyright 2014-present Palantir Technologies\r\n * @license MIT\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Configs = require(\"../core/config\");\r\n/**\r\n * Print a warning message to the console, if it is available.\r\n *\r\n * @param {string} The warnings to print\r\n */\r\nfunction warn(warning) {\r\n    if (!Configs.SHOW_WARNINGS) {\r\n        return;\r\n    }\r\n    // tslint:disable-next-line:no-console\r\n    console.warn(warning);\r\n}\r\nexports.warn = warn;\r\n/**\r\n * Is like setTimeout, but activates synchronously if time=0\r\n * We special case 0 because of an observed issue where calling setTimeout causes visible flickering.\r\n * We believe this is because when requestAnimationFrame calls into the paint function, as soon as that function finishes\r\n * evaluating, the results are painted to the screen. As a result, if we want something to occur immediately but call setTimeout\r\n * with time=0, then it is pushed to the call stack and rendered in the next frame, so the component that was rendered via\r\n * setTimeout appears out-of-sync with the rest of the plot.\r\n */\r\nfunction setTimeout(f, time) {\r\n    var args = [];\r\n    for (var _i = 2; _i < arguments.length; _i++) {\r\n        args[_i - 2] = arguments[_i];\r\n    }\r\n    if (time === 0) {\r\n        f(args);\r\n        return -1;\r\n    }\r\n    else {\r\n        return window.setTimeout(f, time, args);\r\n    }\r\n}\r\nexports.setTimeout = setTimeout;\r\n/**\r\n * Debounces the supplied callback and returns a function with the same\r\n * arguments.\r\n *\r\n * The callback is schedule for invocation every time the returned function is\r\n * invoked. If the returned function is called within the debounce time, the\r\n * previously scheduled call is canceled and the callback is schedule again.\r\n *\r\n * If debounced, the callback will be called with the most recent arguments.\r\n *\r\n * @param {number} msec - the debounce time in milliseconds\r\n * @param {T} callback - the callback invoked after the debounce time\r\n * @param {any} context  - the `this` argument used to invoke the callback\r\n */\r\nfunction debounce(msec, callback, context) {\r\n    var timeoutToken = null;\r\n    var args = [];\r\n    var deferredCallback = function () {\r\n        callback.apply(context, args);\r\n    };\r\n    // coerce to T\r\n    return function () {\r\n        args = Array.prototype.slice.call(arguments);\r\n        clearTimeout(timeoutToken);\r\n        timeoutToken = setTimeout(deferredCallback, msec);\r\n    };\r\n}\r\nexports.debounce = debounce;\r\n/**\r\n * Sends a deprecation warning to the console. The warning includes the name of the deprecated method,\r\n * version number of the deprecation, and an optional message.\r\n *\r\n * To be used in the first line of a deprecated method.\r\n *\r\n * @param {string} callingMethod The name of the method being deprecated\r\n * @param {string} version The version when the tagged method became obsolete\r\n * @param {string?} message Optional message to be shown with the warning\r\n */\r\nfunction deprecated(callingMethod, version, message) {\r\n    if (message === void 0) { message = \"\"; }\r\n    warn(\"Method \" + callingMethod + \" has been deprecated in version \" + version +\r\n        \". Please refer to the release notes. \" + message);\r\n}\r\nexports.deprecated = deprecated;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/utils/windowUtils.ts\n// module id = 37\n// module chunks = 0","\"use strict\";\n/**\n * Copyright 2017-present Palantir Technologies, Inc. All rights reserved.\n * Licensed under the MIT License (the \"License\"); you may obtain a copy of the\n * license at https://github.com/palantir/typesettable/blob/develop/LICENSE\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n;\nvar AbstractMeasurer = (function () {\n    function AbstractMeasurer(ruler) {\n        if (ruler.createRuler != null) {\n            this.ruler = ruler.createRuler();\n        }\n        else {\n            this.ruler = ruler;\n        }\n    }\n    AbstractMeasurer.prototype.measure = function (text) {\n        if (text === void 0) { text = AbstractMeasurer.HEIGHT_TEXT; }\n        return this.ruler(text);\n    };\n    return AbstractMeasurer;\n}());\n/**\n * A string representing the full ascender/descender range of your text.\n *\n * Note that this is really only applicable to western alphabets. If you are\n * using a different locale language such as arabic or chinese, you may want\n * to override this.\n */\nAbstractMeasurer.HEIGHT_TEXT = \"bdpql\";\nexports.AbstractMeasurer = AbstractMeasurer;\n//# sourceMappingURL=abstractMeasurer.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/typesettable/build/src/measurers/abstractMeasurer.js\n// module id = 38\n// module chunks = 0","\"use strict\";\r\n/**\r\n * Copyright 2014-present Palantir Technologies\r\n * @license MIT\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\ntslib_1.__exportStar(require(\"./dragBoxLayer\"), exports);\r\ntslib_1.__exportStar(require(\"./dragLineLayer\"), exports);\r\ntslib_1.__exportStar(require(\"./gridlines\"), exports);\r\ntslib_1.__exportStar(require(\"./group\"), exports);\r\ntslib_1.__exportStar(require(\"./guideLineLayer\"), exports);\r\ntslib_1.__exportStar(require(\"./interpolatedColorLegend\"), exports);\r\ntslib_1.__exportStar(require(\"./label\"), exports);\r\ntslib_1.__exportStar(require(\"./legend\"), exports);\r\ntslib_1.__exportStar(require(\"./plotGroup\"), exports);\r\ntslib_1.__exportStar(require(\"./selectionBoxLayer\"), exports);\r\ntslib_1.__exportStar(require(\"./table\"), exports);\r\ntslib_1.__exportStar(require(\"./wrappedLabel\"), exports);\r\ntslib_1.__exportStar(require(\"./xDragBoxLayer\"), exports);\r\ntslib_1.__exportStar(require(\"./yDragBoxLayer\"), exports);\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/index.ts\n// module id = 39\n// module chunks = 0","\"use strict\";\r\n/**\r\n * Copyright 2014-present Palantir Technologies\r\n * @license MIT\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Utils = require(\"../utils\");\r\nvar UPDATE_MONOTONIC = 0;\r\nvar Dataset = /** @class */ (function () {\r\n    /**\r\n     * A Dataset contains an array of data and some metadata.\r\n     * Changes to the data or metadata will cause anything subscribed to the Dataset to update.\r\n     *\r\n     * @constructor\r\n     * @param {any[]} [data=[]] The data for this Dataset.\r\n     * @param {any} [metadata={}] An object containing additional information.\r\n     */\r\n    function Dataset(data, metadata) {\r\n        if (data === void 0) { data = []; }\r\n        if (metadata === void 0) { metadata = {}; }\r\n        this._updateId = UPDATE_MONOTONIC++;\r\n        this._data = data;\r\n        this._metadata = metadata;\r\n        this._callbacks = new Utils.CallbackSet();\r\n    }\r\n    /**\r\n     * Adds a callback to be called when the Dataset updates.\r\n     *\r\n     * @param {DatasetCallback} callback.\r\n     * @returns {Dataset} The calling Dataset.\r\n     */\r\n    Dataset.prototype.onUpdate = function (callback) {\r\n        this._callbacks.add(callback);\r\n        return this;\r\n    };\r\n    /**\r\n     * Removes a callback that would be called when the Dataset updates.\r\n     *\r\n     * @param {DatasetCallback} callback\r\n     * @returns {Dataset} The calling Dataset.\r\n     */\r\n    Dataset.prototype.offUpdate = function (callback) {\r\n        this._callbacks.delete(callback);\r\n        return this;\r\n    };\r\n    Dataset.prototype.data = function (data) {\r\n        if (data == null) {\r\n            return this._data;\r\n        }\r\n        else {\r\n            this._data = data;\r\n            this._dispatchUpdate();\r\n            return this;\r\n        }\r\n    };\r\n    Dataset.prototype.metadata = function (metadata) {\r\n        if (metadata == null) {\r\n            return this._metadata;\r\n        }\r\n        else {\r\n            this._metadata = metadata;\r\n            this._dispatchUpdate();\r\n            return this;\r\n        }\r\n    };\r\n    Dataset.prototype.updateId = function () {\r\n        return this._updateId;\r\n    };\r\n    Dataset.prototype._dispatchUpdate = function () {\r\n        this._updateId = UPDATE_MONOTONIC++;\r\n        this._callbacks.callCallbacks(this);\r\n    };\r\n    return Dataset;\r\n}());\r\nexports.Dataset = Dataset;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/core/dataset.ts\n// module id = 40\n// module chunks = 0","\"use strict\";\r\n/**\r\n * Copyright 2014-present Palantir Technologies\r\n * @license MIT\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Utils = require(\"../utils\");\r\nvar RenderController = require(\"./renderController\");\r\n/**\r\n * Renders Components immediately after they are enqueued.\r\n * Useful for debugging, horrible for performance.\r\n */\r\nvar Immediate = /** @class */ (function () {\r\n    function Immediate() {\r\n    }\r\n    Immediate.prototype.render = function () {\r\n        RenderController.flush();\r\n    };\r\n    return Immediate;\r\n}());\r\nexports.Immediate = Immediate;\r\n/**\r\n * The default way to render, which only tries to render every frame\r\n * (usually, 1/60th of a second).\r\n */\r\nvar AnimationFrame = /** @class */ (function () {\r\n    function AnimationFrame() {\r\n    }\r\n    AnimationFrame.prototype.render = function () {\r\n        Utils.DOM.requestAnimationFramePolyfill(RenderController.flush);\r\n    };\r\n    return AnimationFrame;\r\n}());\r\nexports.AnimationFrame = AnimationFrame;\r\n/**\r\n * Renders with `setTimeout()`.\r\n * Generally an inferior way to render compared to `requestAnimationFrame`,\r\n * but useful for browsers that don't suppoort `requestAnimationFrame`.\r\n */\r\nvar Timeout = /** @class */ (function () {\r\n    function Timeout() {\r\n        this._timeoutMsec = Utils.DOM.SCREEN_REFRESH_RATE_MILLISECONDS;\r\n    }\r\n    Timeout.prototype.render = function () {\r\n        setTimeout(RenderController.flush, this._timeoutMsec);\r\n    };\r\n    return Timeout;\r\n}());\r\nexports.Timeout = Timeout;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/core/renderPolicy.ts\n// module id = 41\n// module chunks = 0","\"use strict\";\r\n/**\r\n * Copyright 2014-present Palantir Technologies\r\n * @license MIT\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\nvar Dispatchers = require(\"../dispatchers\");\r\nvar Utils = require(\"../utils\");\r\nvar interaction_1 = require(\"./interaction\");\r\nvar Key = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Key, _super);\r\n    function Key() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this._keyPressCallbacks = {};\r\n        _this._keyReleaseCallbacks = {};\r\n        _this._mouseMoveCallback = function (point) { return false; }; // HACKHACK: registering a listener\r\n        _this._downedKeys = new Utils.Set();\r\n        _this._keyDownCallback = function (keyCode, event) { return _this._handleKeyDownEvent(keyCode, event); };\r\n        _this._keyUpCallback = function (keyCode) { return _this._handleKeyUpEvent(keyCode); };\r\n        return _this;\r\n    }\r\n    Key.prototype._anchor = function (component) {\r\n        _super.prototype._anchor.call(this, component);\r\n        this._positionDispatcher = Dispatchers.Mouse.getDispatcher(this._componentAttachedTo);\r\n        this._positionDispatcher.onMouseMove(this._mouseMoveCallback);\r\n        this._keyDispatcher = Dispatchers.Key.getDispatcher();\r\n        this._keyDispatcher.onKeyDown(this._keyDownCallback);\r\n        this._keyDispatcher.onKeyUp(this._keyUpCallback);\r\n    };\r\n    Key.prototype._unanchor = function () {\r\n        _super.prototype._unanchor.call(this);\r\n        this._positionDispatcher.offMouseMove(this._mouseMoveCallback);\r\n        this._positionDispatcher = null;\r\n        this._keyDispatcher.offKeyDown(this._keyDownCallback);\r\n        this._keyDispatcher.offKeyUp(this._keyUpCallback);\r\n        this._keyDispatcher = null;\r\n    };\r\n    Key.prototype._handleKeyDownEvent = function (keyCode, event) {\r\n        var p = this._translateToComponentSpace(this._positionDispatcher.lastMousePosition());\r\n        if (this._isInsideComponent(p) && !event.repeat) {\r\n            if (this._keyPressCallbacks[keyCode]) {\r\n                this._keyPressCallbacks[keyCode].callCallbacks(keyCode);\r\n            }\r\n            this._downedKeys.add(keyCode);\r\n        }\r\n    };\r\n    Key.prototype._handleKeyUpEvent = function (keyCode) {\r\n        if (this._downedKeys.has(keyCode) && this._keyReleaseCallbacks[keyCode]) {\r\n            this._keyReleaseCallbacks[keyCode].callCallbacks(keyCode);\r\n        }\r\n        this._downedKeys.delete(keyCode);\r\n    };\r\n    /**\r\n     * Adds a callback to be called when the key with the given keyCode is\r\n     * pressed and the user is moused over the Component.\r\n     *\r\n     * @param {number} keyCode\r\n     * @param {KeyCallback} callback\r\n     * @returns {Interactions.Key} The calling Key Interaction.\r\n     */\r\n    Key.prototype.onKeyPress = function (keyCode, callback) {\r\n        if (!this._keyPressCallbacks[keyCode]) {\r\n            this._keyPressCallbacks[keyCode] = new Utils.CallbackSet();\r\n        }\r\n        this._keyPressCallbacks[keyCode].add(callback);\r\n        return this;\r\n    };\r\n    /**\r\n     * Removes a callback that would be called when the key with the given keyCode is\r\n     * pressed and the user is moused over the Component.\r\n     *\r\n     * @param {number} keyCode\r\n     * @param {KeyCallback} callback\r\n     * @returns {Interactions.Key} The calling Key Interaction.\r\n     */\r\n    Key.prototype.offKeyPress = function (keyCode, callback) {\r\n        this._keyPressCallbacks[keyCode].delete(callback);\r\n        if (this._keyPressCallbacks[keyCode].size === 0) {\r\n            delete this._keyPressCallbacks[keyCode];\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Adds a callback to be called when the key with the given keyCode is\r\n     * released if the key was pressed with the mouse inside of the Component.\r\n     *\r\n     * @param {number} keyCode\r\n     * @param {KeyCallback} callback\r\n     * @returns {Interactions.Key} The calling Key Interaction.\r\n     */\r\n    Key.prototype.onKeyRelease = function (keyCode, callback) {\r\n        if (!this._keyReleaseCallbacks[keyCode]) {\r\n            this._keyReleaseCallbacks[keyCode] = new Utils.CallbackSet();\r\n        }\r\n        this._keyReleaseCallbacks[keyCode].add(callback);\r\n        return this;\r\n    };\r\n    /**\r\n     * Removes a callback that would be called when the key with the given keyCode is\r\n     * released if the key was pressed with the mouse inside of the Component.\r\n     *\r\n     * @param {number} keyCode\r\n     * @param {KeyCallback} callback\r\n     * @returns {Interactions.Key} The calling Key Interaction.\r\n     */\r\n    Key.prototype.offKeyRelease = function (keyCode, callback) {\r\n        this._keyReleaseCallbacks[keyCode].delete(callback);\r\n        if (this._keyReleaseCallbacks[keyCode].size === 0) {\r\n            delete this._keyReleaseCallbacks[keyCode];\r\n        }\r\n        return this;\r\n    };\r\n    return Key;\r\n}(interaction_1.Interaction));\r\nexports.Key = Key;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/interactions/keyInteraction.ts\n// module id = 42\n// module chunks = 0","\"use strict\";\r\n/**\r\n * Copyright 2014-present Palantir Technologies\r\n * @license MIT\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\nvar Utils = require(\"../utils\");\r\nvar componentContainer_1 = require(\"./componentContainer\");\r\nvar Group = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Group, _super);\r\n    /**\r\n     * Constructs a Group.\r\n     *\r\n     * A Group contains Components that will be rendered on top of each other.\r\n     * Components added later will be rendered above Components already in the Group.\r\n     *\r\n     * @constructor\r\n     * @param {Component[]} [components=[]] Components to be added to the Group.\r\n     */\r\n    function Group(components) {\r\n        if (components === void 0) { components = []; }\r\n        var _this = _super.call(this) || this;\r\n        _this._components = [];\r\n        _this.addClass(\"component-group\");\r\n        components.forEach(function (c) { return _this.append(c); });\r\n        return _this;\r\n    }\r\n    Group.prototype._forEach = function (callback) {\r\n        this.components().forEach(callback);\r\n    };\r\n    /**\r\n     * Checks whether the specified Component is in the Group.\r\n     */\r\n    Group.prototype.has = function (component) {\r\n        return this._components.indexOf(component) >= 0;\r\n    };\r\n    Group.prototype.requestedSpace = function (offeredWidth, offeredHeight) {\r\n        var requests = this._components.map(function (c) { return c.requestedSpace(offeredWidth, offeredHeight); });\r\n        return {\r\n            minWidth: Utils.Math.max(requests, function (request) { return request.minWidth; }, 0),\r\n            minHeight: Utils.Math.max(requests, function (request) { return request.minHeight; }, 0),\r\n        };\r\n    };\r\n    Group.prototype.computeLayout = function (origin, availableWidth, availableHeight) {\r\n        var _this = this;\r\n        _super.prototype.computeLayout.call(this, origin, availableWidth, availableHeight);\r\n        this._forEach(function (component) {\r\n            component.computeLayout({ x: 0, y: 0 }, _this.width(), _this.height());\r\n        });\r\n        return this;\r\n    };\r\n    Group.prototype._sizeFromOffer = function (availableWidth, availableHeight) {\r\n        return {\r\n            width: availableWidth,\r\n            height: availableHeight,\r\n        };\r\n    };\r\n    Group.prototype.fixedWidth = function () {\r\n        return this._components.every(function (c) { return c.fixedWidth(); });\r\n    };\r\n    Group.prototype.fixedHeight = function () {\r\n        return this._components.every(function (c) { return c.fixedHeight(); });\r\n    };\r\n    /**\r\n     * @return {Component[]} The Components in this Group.\r\n     */\r\n    Group.prototype.components = function () {\r\n        return this._components.slice();\r\n    };\r\n    /**\r\n     * Adds a Component to this Group.\r\n     * The added Component will be rendered above Components already in the Group.\r\n     */\r\n    Group.prototype.append = function (component) {\r\n        if (component != null && !this.has(component)) {\r\n            component.detach();\r\n            this._components.push(component);\r\n            this._adoptAndAnchor(component);\r\n            this.redraw();\r\n        }\r\n        return this;\r\n    };\r\n    Group.prototype._remove = function (component) {\r\n        var removeIndex = this._components.indexOf(component);\r\n        if (removeIndex >= 0) {\r\n            this._components.splice(removeIndex, 1);\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    return Group;\r\n}(componentContainer_1.ComponentContainer));\r\nexports.Group = Group;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/group.ts\n// module id = 43\n// module chunks = 0","\"use strict\";\r\n/**\r\n * Copyright 2014-present Palantir Technologies\r\n * @license MIT\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\nvar Utils = require(\"../utils\");\r\nvar component_1 = require(\"./component\");\r\nvar PropertyMode;\r\n(function (PropertyMode) {\r\n    PropertyMode[PropertyMode[\"VALUE\"] = 0] = \"VALUE\";\r\n    PropertyMode[PropertyMode[\"PIXEL\"] = 1] = \"PIXEL\";\r\n})(PropertyMode || (PropertyMode = {}));\r\nvar GuideLineLayer = /** @class */ (function (_super) {\r\n    tslib_1.__extends(GuideLineLayer, _super);\r\n    function GuideLineLayer(orientation) {\r\n        var _this = _super.call(this) || this;\r\n        _this._mode = PropertyMode.VALUE;\r\n        if (orientation !== GuideLineLayer.ORIENTATION_VERTICAL && orientation !== GuideLineLayer.ORIENTATION_HORIZONTAL) {\r\n            throw new Error(orientation + \" is not a valid orientation for GuideLineLayer\");\r\n        }\r\n        _this._orientation = orientation;\r\n        _this._overflowHidden = true;\r\n        _this.addClass(\"guide-line-layer\");\r\n        if (_this._isVertical()) {\r\n            _this.addClass(\"vertical\");\r\n        }\r\n        else {\r\n            _this.addClass(\"horizontal\");\r\n        }\r\n        _this._scaleUpdateCallback = function () {\r\n            _this._syncPixelPositionAndValue();\r\n            _this.render();\r\n        };\r\n        return _this;\r\n    }\r\n    GuideLineLayer.prototype._setup = function () {\r\n        _super.prototype._setup.call(this);\r\n        this._guideLine = this.content().append(\"line\").classed(\"guide-line\", true);\r\n    };\r\n    GuideLineLayer.prototype._sizeFromOffer = function (availableWidth, availableHeight) {\r\n        return {\r\n            width: availableWidth,\r\n            height: availableHeight,\r\n        };\r\n    };\r\n    GuideLineLayer.prototype._isVertical = function () {\r\n        return this._orientation === GuideLineLayer.ORIENTATION_VERTICAL;\r\n    };\r\n    GuideLineLayer.prototype.fixedWidth = function () {\r\n        return true;\r\n    };\r\n    GuideLineLayer.prototype.fixedHeight = function () {\r\n        return true;\r\n    };\r\n    GuideLineLayer.prototype.computeLayout = function (origin, availableWidth, availableHeight) {\r\n        _super.prototype.computeLayout.call(this, origin, availableWidth, availableHeight);\r\n        if (this.scale() != null) {\r\n            if (this._isVertical()) {\r\n                this.scale().range([0, this.width()]);\r\n            }\r\n            else {\r\n                this.scale().range([this.height(), 0]);\r\n            }\r\n        }\r\n        return this;\r\n    };\r\n    GuideLineLayer.prototype.renderImmediately = function () {\r\n        _super.prototype.renderImmediately.call(this);\r\n        this._syncPixelPositionAndValue();\r\n        this._guideLine.attrs({\r\n            \"x1\": this._isVertical() ? this.pixelPosition() : 0,\r\n            \"y1\": this._isVertical() ? 0 : this.pixelPosition(),\r\n            \"x2\": this._isVertical() ? this.pixelPosition() : this.width(),\r\n            \"y2\": this._isVertical() ? this.height() : this.pixelPosition(),\r\n        });\r\n        return this;\r\n    };\r\n    // sets pixelPosition() or value() based on the other, depending on which was the last one set\r\n    GuideLineLayer.prototype._syncPixelPositionAndValue = function () {\r\n        if (this.scale() == null) {\r\n            return;\r\n        }\r\n        if (this._mode === PropertyMode.VALUE && this.value() != null) {\r\n            this._pixelPosition = this.scale().scale(this.value());\r\n        }\r\n        else if (this._mode === PropertyMode.PIXEL && this.pixelPosition() != null) {\r\n            this._value = this.scale().invert(this.pixelPosition());\r\n        }\r\n    };\r\n    GuideLineLayer.prototype._setPixelPositionWithoutChangingMode = function (pixelPosition) {\r\n        this._pixelPosition = pixelPosition;\r\n        if (this.scale() != null) {\r\n            this._value = this.scale().invert(this.pixelPosition());\r\n        }\r\n        this.render();\r\n    };\r\n    GuideLineLayer.prototype.scale = function (scale) {\r\n        if (scale == null) {\r\n            return this._scale;\r\n        }\r\n        var previousScale = this._scale;\r\n        if (previousScale != null) {\r\n            previousScale.offUpdate(this._scaleUpdateCallback);\r\n        }\r\n        this._scale = scale;\r\n        this._scale.onUpdate(this._scaleUpdateCallback);\r\n        this._syncPixelPositionAndValue();\r\n        this.redraw();\r\n        return this;\r\n    };\r\n    GuideLineLayer.prototype.value = function (value) {\r\n        if (value == null) {\r\n            return this._value;\r\n        }\r\n        this._value = value;\r\n        this._mode = PropertyMode.VALUE;\r\n        this._syncPixelPositionAndValue();\r\n        this.render();\r\n        return this;\r\n    };\r\n    GuideLineLayer.prototype.pixelPosition = function (pixelPosition) {\r\n        if (pixelPosition == null) {\r\n            return this._pixelPosition;\r\n        }\r\n        if (!Utils.Math.isValidNumber(pixelPosition)) {\r\n            throw new Error(\"pixelPosition must be a finite number\");\r\n        }\r\n        this._pixelPosition = pixelPosition;\r\n        this._mode = PropertyMode.PIXEL;\r\n        this._syncPixelPositionAndValue();\r\n        this.render();\r\n        return this;\r\n    };\r\n    GuideLineLayer.prototype.destroy = function () {\r\n        _super.prototype.destroy.call(this);\r\n        if (this.scale() != null) {\r\n            this.scale().offUpdate(this._scaleUpdateCallback);\r\n        }\r\n    };\r\n    GuideLineLayer.ORIENTATION_VERTICAL = \"vertical\";\r\n    GuideLineLayer.ORIENTATION_HORIZONTAL = \"horizontal\";\r\n    return GuideLineLayer;\r\n}(component_1.Component));\r\nexports.GuideLineLayer = GuideLineLayer;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/guideLineLayer.ts\n// module id = 44\n// module chunks = 0","\"use strict\";\r\n/**\r\n * Copyright 2014-present Palantir Technologies\r\n * @license MIT\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\nvar Typesettable = require(\"typesettable\");\r\nvar component_1 = require(\"./component\");\r\nvar Label = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Label, _super);\r\n    /**\r\n     * A Label is a Component that displays a single line of text.\r\n     *\r\n     * @constructor\r\n     * @param {string} [displayText=\"\"] The text of the Label.\r\n     * @param {number} [angle=0] The angle of the Label in degrees (-90/0/90). 0 is horizontal.\r\n     */\r\n    function Label(displayText, angle) {\r\n        if (displayText === void 0) { displayText = \"\"; }\r\n        if (angle === void 0) { angle = 0; }\r\n        var _this = _super.call(this) || this;\r\n        _this.addClass(\"label\");\r\n        _this.text(displayText);\r\n        _this.angle(angle);\r\n        _this.xAlignment(\"center\").yAlignment(\"center\");\r\n        _this._padding = 0;\r\n        return _this;\r\n    }\r\n    Label.prototype.requestedSpace = function (offeredWidth, offeredHeight) {\r\n        var desiredWH = this._measurer.measure(this._text);\r\n        var desiredWidth = (this.angle() === 0 ? desiredWH.width : desiredWH.height) + 2 * this.padding();\r\n        var desiredHeight = (this.angle() === 0 ? desiredWH.height : desiredWH.width) + 2 * this.padding();\r\n        return {\r\n            minWidth: desiredWidth,\r\n            minHeight: desiredHeight,\r\n        };\r\n    };\r\n    Label.prototype._setup = function () {\r\n        _super.prototype._setup.call(this);\r\n        this._textContainer = this.content().append(\"g\");\r\n        var context = new Typesettable.SvgContext(this._textContainer.node());\r\n        this._measurer = new Typesettable.CacheMeasurer(context);\r\n        this._wrapper = new Typesettable.Wrapper();\r\n        this._writer = new Typesettable.Writer(this._measurer, context, this._wrapper);\r\n        this.text(this._text);\r\n    };\r\n    Label.prototype.text = function (displayText) {\r\n        if (displayText == null) {\r\n            return this._text;\r\n        }\r\n        else {\r\n            if (typeof displayText !== \"string\") {\r\n                throw new Error(\"Label.text() only takes strings as input\");\r\n            }\r\n            this._text = displayText;\r\n            this.redraw();\r\n            return this;\r\n        }\r\n    };\r\n    Label.prototype.angle = function (angle) {\r\n        if (angle == null) {\r\n            return this._angle;\r\n        }\r\n        else {\r\n            angle %= 360;\r\n            if (angle > 180) {\r\n                angle -= 360;\r\n            }\r\n            else if (angle < -180) {\r\n                angle += 360;\r\n            }\r\n            if (angle === -90 || angle === 0 || angle === 90) {\r\n                this._angle = angle;\r\n            }\r\n            else {\r\n                throw new Error(angle + \" is not a valid angle for Label\");\r\n            }\r\n            this.redraw();\r\n            return this;\r\n        }\r\n    };\r\n    Label.prototype.padding = function (padAmount) {\r\n        if (padAmount == null) {\r\n            return this._padding;\r\n        }\r\n        else {\r\n            padAmount = +padAmount;\r\n            if (padAmount < 0) {\r\n                throw new Error(padAmount + \" is not a valid padding value. Cannot be less than 0.\");\r\n            }\r\n            this._padding = padAmount;\r\n            this.redraw();\r\n            return this;\r\n        }\r\n    };\r\n    Label.prototype.fixedWidth = function () {\r\n        return true;\r\n    };\r\n    Label.prototype.fixedHeight = function () {\r\n        return true;\r\n    };\r\n    Label.prototype.renderImmediately = function () {\r\n        _super.prototype.renderImmediately.call(this);\r\n        // HACKHACK Typesettable.remove existing content - #21 on Typesettable.\r\n        this._textContainer.selectAll(\"g\").remove();\r\n        var textMeasurement = this._measurer.measure(this._text);\r\n        var heightPadding = Math.max(Math.min((this.height() - textMeasurement.height) / 2, this.padding()), 0);\r\n        var widthPadding = Math.max(Math.min((this.width() - textMeasurement.width) / 2, this.padding()), 0);\r\n        this._textContainer.attr(\"transform\", \"translate(\" + widthPadding + \",\" + heightPadding + \")\");\r\n        var writeWidth = this.width() - 2 * widthPadding;\r\n        var writeHeight = this.height() - 2 * heightPadding;\r\n        var writeOptions = {\r\n            xAlign: this.xAlignment(),\r\n            yAlign: this.yAlignment(),\r\n            textRotation: this.angle(),\r\n        };\r\n        this._writer.write(this._text, writeWidth, writeHeight, writeOptions);\r\n        return this;\r\n    };\r\n    Label.prototype.invalidateCache = function () {\r\n        _super.prototype.invalidateCache.call(this);\r\n        this._measurer.reset();\r\n    };\r\n    return Label;\r\n}(component_1.Component));\r\nexports.Label = Label;\r\nvar TitleLabel = /** @class */ (function (_super) {\r\n    tslib_1.__extends(TitleLabel, _super);\r\n    /**\r\n     * @constructor\r\n     * @param {string} [text]\r\n     * @param {number} [angle] One of -90/0/90. 0 is horizontal.\r\n     */\r\n    function TitleLabel(text, angle) {\r\n        var _this = _super.call(this, text, angle) || this;\r\n        _this.addClass(TitleLabel.TITLE_LABEL_CLASS);\r\n        return _this;\r\n    }\r\n    TitleLabel.TITLE_LABEL_CLASS = \"title-label\";\r\n    return TitleLabel;\r\n}(Label));\r\nexports.TitleLabel = TitleLabel;\r\nvar AxisLabel = /** @class */ (function (_super) {\r\n    tslib_1.__extends(AxisLabel, _super);\r\n    /**\r\n     * @constructor\r\n     * @param {string} [text]\r\n     * @param {number} [angle] One of -90/0/90. 0 is horizontal.\r\n     */\r\n    function AxisLabel(text, angle) {\r\n        var _this = _super.call(this, text, angle) || this;\r\n        _this.addClass(AxisLabel.AXIS_LABEL_CLASS);\r\n        return _this;\r\n    }\r\n    AxisLabel.AXIS_LABEL_CLASS = \"axis-label\";\r\n    return AxisLabel;\r\n}(Label));\r\nexports.AxisLabel = AxisLabel;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/label.ts\n// module id = 45\n// module chunks = 0","\"use strict\";\r\n/**\r\n * Copyright 2014-present Palantir Technologies\r\n * @license MIT\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\nvar Utils = require(\"../utils\");\r\nvar component_1 = require(\"./component\");\r\nvar PropertyMode;\r\n(function (PropertyMode) {\r\n    PropertyMode[PropertyMode[\"VALUE\"] = 0] = \"VALUE\";\r\n    PropertyMode[PropertyMode[\"PIXEL\"] = 1] = \"PIXEL\";\r\n})(PropertyMode = exports.PropertyMode || (exports.PropertyMode = {}));\r\nvar SelectionBoxLayer = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SelectionBoxLayer, _super);\r\n    function SelectionBoxLayer() {\r\n        var _this = _super.call(this) || this;\r\n        _this._boxVisible = false;\r\n        _this._boxBounds = {\r\n            topLeft: { x: 0, y: 0 },\r\n            bottomRight: { x: 0, y: 0 },\r\n        };\r\n        _this._xBoundsMode = PropertyMode.PIXEL;\r\n        _this._yBoundsMode = PropertyMode.PIXEL;\r\n        _this.addClass(\"selection-box-layer\");\r\n        _this._adjustBoundsCallback = function () {\r\n            _this.render();\r\n        };\r\n        _this._overflowHidden = true;\r\n        _this._xExtent = [undefined, undefined];\r\n        _this._yExtent = [undefined, undefined];\r\n        return _this;\r\n    }\r\n    SelectionBoxLayer.prototype._setup = function () {\r\n        _super.prototype._setup.call(this);\r\n        this._box = this.content().append(\"g\").classed(\"selection-box\", true).remove();\r\n        this._boxArea = this._box.append(\"rect\").classed(\"selection-area\", true);\r\n    };\r\n    SelectionBoxLayer.prototype._sizeFromOffer = function (availableWidth, availableHeight) {\r\n        return {\r\n            width: availableWidth,\r\n            height: availableHeight,\r\n        };\r\n    };\r\n    SelectionBoxLayer.prototype.bounds = function (newBounds) {\r\n        if (newBounds == null) {\r\n            return this._getBounds();\r\n        }\r\n        this._setBounds(newBounds);\r\n        this._xBoundsMode = PropertyMode.PIXEL;\r\n        this._yBoundsMode = PropertyMode.PIXEL;\r\n        this.render();\r\n        return this;\r\n    };\r\n    SelectionBoxLayer.prototype._setBounds = function (newBounds) {\r\n        var topLeft = {\r\n            x: Math.min(newBounds.topLeft.x, newBounds.bottomRight.x),\r\n            y: Math.min(newBounds.topLeft.y, newBounds.bottomRight.y),\r\n        };\r\n        var bottomRight = {\r\n            x: Math.max(newBounds.topLeft.x, newBounds.bottomRight.x),\r\n            y: Math.max(newBounds.topLeft.y, newBounds.bottomRight.y),\r\n        };\r\n        this._boxBounds = {\r\n            topLeft: topLeft,\r\n            bottomRight: bottomRight,\r\n        };\r\n    };\r\n    SelectionBoxLayer.prototype._getBounds = function () {\r\n        return {\r\n            topLeft: {\r\n                x: this._xBoundsMode === PropertyMode.PIXEL ?\r\n                    this._boxBounds.topLeft.x :\r\n                    (this._xScale == null ?\r\n                        0 :\r\n                        Math.min(this.xScale().scale(this.xExtent()[0]), this.xScale().scale(this.xExtent()[1]))),\r\n                y: this._yBoundsMode === PropertyMode.PIXEL ?\r\n                    this._boxBounds.topLeft.y :\r\n                    (this._yScale == null ?\r\n                        0 :\r\n                        Math.min(this.yScale().scale(this.yExtent()[0]), this.yScale().scale(this.yExtent()[1]))),\r\n            },\r\n            bottomRight: {\r\n                x: this._xBoundsMode === PropertyMode.PIXEL ?\r\n                    this._boxBounds.bottomRight.x :\r\n                    (this._xScale == null ?\r\n                        0 :\r\n                        Math.max(this.xScale().scale(this.xExtent()[0]), this.xScale().scale(this.xExtent()[1]))),\r\n                y: this._yBoundsMode === PropertyMode.PIXEL ?\r\n                    this._boxBounds.bottomRight.y :\r\n                    (this._yScale == null ?\r\n                        0 :\r\n                        Math.max(this.yScale().scale(this.yExtent()[0]), this.yScale().scale(this.yExtent()[1]))),\r\n            },\r\n        };\r\n    };\r\n    SelectionBoxLayer.prototype.renderImmediately = function () {\r\n        _super.prototype.renderImmediately.call(this);\r\n        if (this._boxVisible) {\r\n            var bounds = this.bounds();\r\n            var t = bounds.topLeft.y;\r\n            var b = bounds.bottomRight.y;\r\n            var l = bounds.topLeft.x;\r\n            var r = bounds.bottomRight.x;\r\n            if (!(Utils.Math.isValidNumber(t) &&\r\n                Utils.Math.isValidNumber(b) &&\r\n                Utils.Math.isValidNumber(l) &&\r\n                Utils.Math.isValidNumber(r))) {\r\n                throw new Error(\"bounds have not been properly set\");\r\n            }\r\n            this._boxArea.attrs({\r\n                x: l, y: t, width: r - l, height: b - t,\r\n            });\r\n            this.content().node().appendChild(this._box.node());\r\n        }\r\n        else {\r\n            this._box.remove();\r\n        }\r\n        return this;\r\n    };\r\n    SelectionBoxLayer.prototype.boxVisible = function (show) {\r\n        if (show == null) {\r\n            return this._boxVisible;\r\n        }\r\n        this._boxVisible = show;\r\n        this.render();\r\n        return this;\r\n    };\r\n    SelectionBoxLayer.prototype.fixedWidth = function () {\r\n        return true;\r\n    };\r\n    SelectionBoxLayer.prototype.fixedHeight = function () {\r\n        return true;\r\n    };\r\n    SelectionBoxLayer.prototype.xScale = function (xScale) {\r\n        if (xScale == null) {\r\n            return this._xScale;\r\n        }\r\n        if (this._xScale != null) {\r\n            this._xScale.offUpdate(this._adjustBoundsCallback);\r\n        }\r\n        this._xScale = xScale;\r\n        this._xBoundsMode = PropertyMode.VALUE;\r\n        this._xScale.onUpdate(this._adjustBoundsCallback);\r\n        this.render();\r\n        return this;\r\n    };\r\n    SelectionBoxLayer.prototype.yScale = function (yScale) {\r\n        if (yScale == null) {\r\n            return this._yScale;\r\n        }\r\n        if (this._yScale != null) {\r\n            this._yScale.offUpdate(this._adjustBoundsCallback);\r\n        }\r\n        this._yScale = yScale;\r\n        this._yBoundsMode = PropertyMode.VALUE;\r\n        this._yScale.onUpdate(this._adjustBoundsCallback);\r\n        this.render();\r\n        return this;\r\n    };\r\n    SelectionBoxLayer.prototype.xExtent = function (xExtent) {\r\n        // Explicit typing for Typescript 1.4\r\n        if (xExtent == null) {\r\n            return this._getXExtent();\r\n        }\r\n        this._setXExtent(xExtent);\r\n        this._xBoundsMode = PropertyMode.VALUE;\r\n        this.render();\r\n        return this;\r\n    };\r\n    SelectionBoxLayer.prototype._getXExtent = function () {\r\n        return this._xBoundsMode === PropertyMode.VALUE ?\r\n            this._xExtent :\r\n            (this._xScale == null ?\r\n                [undefined, undefined] :\r\n                [\r\n                    this._xScale.invert(this._boxBounds.topLeft.x),\r\n                    this._xScale.invert(this._boxBounds.bottomRight.x),\r\n                ]);\r\n    };\r\n    SelectionBoxLayer.prototype._setXExtent = function (xExtent) {\r\n        this._xExtent = xExtent;\r\n    };\r\n    SelectionBoxLayer.prototype.yExtent = function (yExtent) {\r\n        // Explicit typing for Typescript 1.4\r\n        if (yExtent == null) {\r\n            return this._getYExtent();\r\n        }\r\n        this._setYExtent(yExtent);\r\n        this._yBoundsMode = PropertyMode.VALUE;\r\n        this.render();\r\n        return this;\r\n    };\r\n    SelectionBoxLayer.prototype._getYExtent = function () {\r\n        return this._yBoundsMode === PropertyMode.VALUE ?\r\n            this._yExtent :\r\n            (this._yScale == null ?\r\n                [undefined, undefined] :\r\n                [\r\n                    this._yScale.invert(this._boxBounds.topLeft.y),\r\n                    this._yScale.invert(this._boxBounds.bottomRight.y),\r\n                ]);\r\n    };\r\n    SelectionBoxLayer.prototype._setYExtent = function (yExtent) {\r\n        this._yExtent = yExtent;\r\n    };\r\n    SelectionBoxLayer.prototype.destroy = function () {\r\n        _super.prototype.destroy.call(this);\r\n        if (this._xScale != null) {\r\n            this.xScale().offUpdate(this._adjustBoundsCallback);\r\n        }\r\n        if (this._yScale != null) {\r\n            this.yScale().offUpdate(this._adjustBoundsCallback);\r\n        }\r\n    };\r\n    return SelectionBoxLayer;\r\n}(component_1.Component));\r\nexports.SelectionBoxLayer = SelectionBoxLayer;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/selectionBoxLayer.ts\n// module id = 46\n// module chunks = 0","\"use strict\";\r\n/**\r\n * Copyright 2014-present Palantir Technologies\r\n * @license MIT\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\nvar svgDrawer_1 = require(\"./svgDrawer\");\r\nvar ArcSVGDrawer = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ArcSVGDrawer, _super);\r\n    function ArcSVGDrawer() {\r\n        return _super.call(this, \"path\", \"arc fill\") || this;\r\n    }\r\n    ArcSVGDrawer.prototype._applyDefaultAttributes = function (selection) {\r\n        selection.style(\"stroke\", \"none\");\r\n    };\r\n    return ArcSVGDrawer;\r\n}(svgDrawer_1.SVGDrawer));\r\nexports.ArcSVGDrawer = ArcSVGDrawer;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/drawers/arcDrawer.ts\n// module id = 47\n// module chunks = 0","\"use strict\";\r\n/**\r\n * Copyright 2014-present Palantir Technologies\r\n * @license MIT\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\nvar svgDrawer_1 = require(\"./svgDrawer\");\r\nvar ArcOutlineSVGDrawer = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ArcOutlineSVGDrawer, _super);\r\n    function ArcOutlineSVGDrawer() {\r\n        return _super.call(this, \"path\", \"arc outline\") || this;\r\n    }\r\n    ArcOutlineSVGDrawer.prototype._applyDefaultAttributes = function (selection) {\r\n        selection.style(\"fill\", \"none\");\r\n    };\r\n    return ArcOutlineSVGDrawer;\r\n}(svgDrawer_1.SVGDrawer));\r\nexports.ArcOutlineSVGDrawer = ArcOutlineSVGDrawer;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/drawers/arcOutlineDrawer.ts\n// module id = 48\n// module chunks = 0","\"use strict\";\r\n/**\r\n * Copyright 2014-present Palantir Technologies\r\n * @license MIT\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\nvar canvasDrawer_1 = require(\"./canvasDrawer\");\r\nvar svgDrawer_1 = require(\"./svgDrawer\");\r\nvar AreaSVGDrawer = /** @class */ (function (_super) {\r\n    tslib_1.__extends(AreaSVGDrawer, _super);\r\n    function AreaSVGDrawer() {\r\n        return _super.call(this, \"path\", \"area\") || this;\r\n    }\r\n    AreaSVGDrawer.prototype._applyDefaultAttributes = function (selection) {\r\n        selection.style(\"stroke\", \"none\");\r\n    };\r\n    AreaSVGDrawer.prototype.getVisualPrimitiveAtIndex = function (index) {\r\n        // areas are represented by one single element; always get that element\r\n        // regardless of the data index.\r\n        return _super.prototype.getVisualPrimitiveAtIndex.call(this, 0);\r\n    };\r\n    return AreaSVGDrawer;\r\n}(svgDrawer_1.SVGDrawer));\r\nexports.AreaSVGDrawer = AreaSVGDrawer;\r\nvar AREA_FILL_ATTRS = [\"opacity\", \"fill\", \"fill-opacity\"];\r\nvar AREA_STROKE_ATTRS = [\"opacity\", \"stroke\", \"stroke-width\"];\r\nfunction makeAreaCanvasDrawStep(d3AreaFactory, d3LineFactory) {\r\n    return function (context, data, projector) {\r\n        var fillAttrs = canvasDrawer_1.resolveAttributes(projector, AREA_FILL_ATTRS, data[0], 0);\r\n        canvasDrawer_1.renderArea(context, d3AreaFactory(), data[0], fillAttrs);\r\n        var strokeAttrs = canvasDrawer_1.resolveAttributes(projector, AREA_STROKE_ATTRS, data[0], 0);\r\n        canvasDrawer_1.renderLine(context, d3LineFactory(), data[0], strokeAttrs);\r\n    };\r\n}\r\nexports.makeAreaCanvasDrawStep = makeAreaCanvasDrawStep;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/drawers/areaDrawer.ts\n// module id = 49\n// module chunks = 0","\"use strict\";\r\n/**\r\n * Copyright 2014-present Palantir Technologies\r\n * @license MIT\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\nvar svgDrawer_1 = require(\"./svgDrawer\");\r\nvar SegmentSVGDrawer = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SegmentSVGDrawer, _super);\r\n    function SegmentSVGDrawer() {\r\n        return _super.call(this, \"line\", \"\") || this;\r\n    }\r\n    return SegmentSVGDrawer;\r\n}(svgDrawer_1.SVGDrawer));\r\nexports.SegmentSVGDrawer = SegmentSVGDrawer;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/drawers/segmentDrawer.ts\n// module id = 50\n// module chunks = 0","\"use strict\";\r\n/**\r\n * Copyright 2014-present Palantir Technologies\r\n * @license MIT\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\nvar canvasDrawer_1 = require(\"./canvasDrawer\");\r\nvar canvasBuffer_1 = require(\"./canvasBuffer\");\r\nvar svgDrawer_1 = require(\"./svgDrawer\");\r\nvar SymbolSVGDrawer = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SymbolSVGDrawer, _super);\r\n    function SymbolSVGDrawer() {\r\n        return _super.call(this, \"path\", \"symbol\") || this;\r\n    }\r\n    return SymbolSVGDrawer;\r\n}(svgDrawer_1.SVGDrawer));\r\nexports.SymbolSVGDrawer = SymbolSVGDrawer;\r\nvar SYMBOL_ATTRS = canvasDrawer_1.ContextStyleAttrs.concat([\"x\", \"y\"]);\r\nfunction makeSymbolCanvasDrawStep(dataset, symbolProjector, sizeProjector, stepBuffer) {\r\n    var _this = this;\r\n    return function (context, data, attrToAppliedProjector) {\r\n        var _a = context.canvas, clientWidth = _a.clientWidth, clientHeight = _a.clientHeight;\r\n        var buffer = (stepBuffer === undefined) ? new canvasBuffer_1.CanvasBuffer(0, 0) : stepBuffer;\r\n        var symbolAccessor = symbolProjector();\r\n        var sizeAccessor = sizeProjector();\r\n        var prevAttrs = null;\r\n        var prevSymbolGenerator = null;\r\n        var prevSymbolSize = null;\r\n        for (var index = 0; index < data.length; index++) {\r\n            var datum = data[index];\r\n            if (datum == null) {\r\n                continue;\r\n            }\r\n            // check symbol is in viewport\r\n            var attrs = canvasDrawer_1.resolveAttributes(attrToAppliedProjector, SYMBOL_ATTRS, datum, index);\r\n            var symbolSize = sizeAccessor(datum, index, dataset);\r\n            if (!squareOverlapsBounds(clientWidth, clientHeight, attrs[\"x\"], attrs[\"y\"], symbolSize)) {\r\n                continue;\r\n            }\r\n            // check attributes and symbol type\r\n            var attrsSame = isAttributeValuesEqual(prevAttrs, attrs, canvasDrawer_1.ContextStyleAttrs);\r\n            var symbolGenerator = symbolAccessor(datum, index, _this._dataset);\r\n            if (attrsSame && prevSymbolSize == symbolSize && prevSymbolGenerator == symbolGenerator) {\r\n                // no-op;\r\n            }\r\n            else {\r\n                // make room for bigger symbol if needed\r\n                var strokeWidth = canvasDrawer_1.getStrokeWidth(attrs);\r\n                // +1 to account for subpixel aliasing\r\n                var wantedBufferSize = symbolSize + strokeWidth + 1;\r\n                if (wantedBufferSize > buffer.screenWidth || wantedBufferSize > buffer.screenHeight) {\r\n                    buffer.resize(wantedBufferSize, wantedBufferSize, true);\r\n                }\r\n                // draw actual symbol into buffer\r\n                buffer.clear();\r\n                var bufferCtx = buffer.ctx;\r\n                bufferCtx.beginPath();\r\n                symbolGenerator(symbolSize).context(bufferCtx)(null);\r\n                bufferCtx.closePath();\r\n                canvasDrawer_1.renderPathWithStyle(bufferCtx, attrs);\r\n                // save the values that are in the buffer\r\n                prevSymbolGenerator = symbolGenerator;\r\n                prevSymbolSize = symbolSize;\r\n                prevAttrs = attrs;\r\n            }\r\n            // blit the buffer to the canvas\r\n            buffer.blitCenter(context, attrs[\"x\"], attrs[\"y\"]);\r\n        }\r\n    };\r\n}\r\nexports.makeSymbolCanvasDrawStep = makeSymbolCanvasDrawStep;\r\nfunction squareOverlapsBounds(width, height, x, y, size) {\r\n    return (x + size >= 0 && x - size <= width &&\r\n        y + size >= 0 && y - size <= height);\r\n}\r\nfunction isAttributeValuesEqual(prevAttrs, attrs, attrKeys) {\r\n    if (prevAttrs == null) {\r\n        return false;\r\n    }\r\n    for (var i = 0; i < attrKeys.length; i++) {\r\n        var attrKey = attrKeys[i];\r\n        if (prevAttrs[attrKey] != attrs[attrKey]) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/drawers/symbolDrawer.ts\n// module id = 51\n// module chunks = 0","\"use strict\";\r\n/**\r\n * Copyright 2014-present Palantir Technologies\r\n * @license MIT\r\n * @fileoverview Implements the Signature API to help in comparing when two\r\n * Plottable objects have \"changed\".\r\n *\r\n * Memoization in Plottable is complicated by mutable scales and datasets. We cannot simply\r\n * reference compare two e.g. scales since it may have internally mutated. To resolve this,\r\n * we write a recursive Signature interface that holds an immutable snapshot of whatever\r\n * state the scale/data was in at the time. Then on memoized function invocation we sign the\r\n * new inputs and compare the signatures to decide if we should recompute.\r\n *\r\n * We must hand-write a signature for each custom class we wish to support.\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\nvar isPlainObject = require(\"is-plain-object\");\r\nvar dataset_1 = require(\"../core/dataset\");\r\nvar scale_1 = require(\"../scales/scale\");\r\n/**\r\n * Generic signature factory - pass any value and get a signature for it.\r\n *\r\n * Datasets and Scales are handled specially - see their respective signing methods.\r\n *\r\n * If the input is already a signature, simply return it.\r\n *\r\n * @param a\r\n * @returns {Signature}\r\n */\r\nfunction sign(a) {\r\n    if (a instanceof Signature) {\r\n        return a;\r\n    }\r\n    else if (a instanceof Date) {\r\n        return signRef(a.valueOf());\r\n    }\r\n    else if (a instanceof scale_1.Scale) {\r\n        return signScale(a);\r\n    }\r\n    else if (a instanceof dataset_1.Dataset) {\r\n        return signDataset(a);\r\n    }\r\n    else if (isPlainObject(a)) {\r\n        return signObj(a);\r\n    }\r\n    else if (Array.isArray(a)) {\r\n        return signArray(a);\r\n    }\r\n    else {\r\n        return signRef(a);\r\n    }\r\n}\r\nexports.sign = sign;\r\nfunction signScale(scale) {\r\n    var scaleObj = {\r\n        // required in case the domain has changed without the updateId changing\r\n        domain: scale.domain(),\r\n        // required in case the range has changed without the updateId changing\r\n        range: scale.range(),\r\n        // generic catch-all for scale updates (existing code doesn't fully catch all\r\n        // updates, but it's good for something)\r\n        updateId: scale.updateId(),\r\n        // keep a ref to the scale in case the ref changes\r\n        ref: signRef(scale),\r\n    };\r\n    return signObj(scaleObj);\r\n}\r\nexports.signScale = signScale;\r\nfunction signDataset(dataset) {\r\n    var datasetObj = {\r\n        ref: signRef(dataset),\r\n        // only sign updateId since only data() and metadata() exist as properties\r\n        // and both update updateId\r\n        updateId: dataset.updateId(),\r\n    };\r\n    return signObj(datasetObj);\r\n}\r\nexports.signDataset = signDataset;\r\nfunction signRef(a) {\r\n    return new ReferenceSignature(a);\r\n}\r\nexports.signRef = signRef;\r\nfunction signArray(a) {\r\n    return new ArraySignature(a.map(function (element) { return sign(element); }));\r\n}\r\nexports.signArray = signArray;\r\nfunction signObj(obj) {\r\n    var signatureRecord = {};\r\n    for (var key in obj) {\r\n        if (obj.hasOwnProperty(key)) {\r\n            signatureRecord[key] = sign(obj[key]);\r\n        }\r\n    }\r\n    return new ObjectSignature(signatureRecord);\r\n}\r\nexports.signObj = signObj;\r\n/**\r\n * Base signature. Subclasses should implement isSignatureDifferent. All classes\r\n * should be immutable.\r\n *\r\n * Users should only call `isDifferent`, not `isSignatureDifferent`.\r\n */\r\nvar Signature = /** @class */ (function () {\r\n    function Signature() {\r\n    }\r\n    Signature.prototype.isDifferent = function (other) {\r\n        if (other instanceof this.constructor) {\r\n            return this.isSignatureDifferent(other);\r\n        }\r\n        else {\r\n            return true;\r\n        }\r\n    };\r\n    return Signature;\r\n}());\r\nexports.Signature = Signature;\r\n/**\r\n * A signature for an array.\r\n */\r\nvar ArraySignature = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ArraySignature, _super);\r\n    function ArraySignature(array) {\r\n        var _this = _super.call(this) || this;\r\n        _this.array = array;\r\n        return _this;\r\n    }\r\n    /**\r\n     * An array of signatures is different if any of the elements isDifferent.\r\n     */\r\n    ArraySignature.prototype.isSignatureDifferent = function (other) {\r\n        if (other.array.length !== this.array.length) {\r\n            return true;\r\n        }\r\n        else {\r\n            for (var i = 0; i < this.array.length; i++) {\r\n                if (this.array[i].isDifferent(other.array[i])) {\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        }\r\n    };\r\n    return ArraySignature;\r\n}(Signature));\r\nexports.ArraySignature = ArraySignature;\r\nvar ReferenceSignature = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ReferenceSignature, _super);\r\n    function ReferenceSignature(ref) {\r\n        var _this = _super.call(this) || this;\r\n        _this.ref = ref;\r\n        return _this;\r\n    }\r\n    ReferenceSignature.prototype.isSignatureDifferent = function (other) {\r\n        return this.ref !== other.ref;\r\n    };\r\n    return ReferenceSignature;\r\n}(Signature));\r\nexports.ReferenceSignature = ReferenceSignature;\r\n/**\r\n * A signature for a plain js object.\r\n */\r\nvar ObjectSignature = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ObjectSignature, _super);\r\n    function ObjectSignature(obj) {\r\n        var _this = _super.call(this) || this;\r\n        _this.obj = obj;\r\n        return _this;\r\n    }\r\n    /**\r\n     * An object signature is different if any of the elements isDifferent.\r\n     */\r\n    ObjectSignature.prototype.isSignatureDifferent = function (other) {\r\n        var myKeys = Object.keys(this.obj);\r\n        var otherKeys = Object.keys(other.obj);\r\n        if (myKeys.length !== otherKeys.length) {\r\n            return true;\r\n        }\r\n        for (var _i = 0, myKeys_1 = myKeys; _i < myKeys_1.length; _i++) {\r\n            var key = myKeys_1[_i];\r\n            if (!other.obj.hasOwnProperty(key)) {\r\n                return true;\r\n            }\r\n            if (this.obj[key].isDifferent(other.obj[key])) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    return ObjectSignature;\r\n}(Signature));\r\nexports.ObjectSignature = ObjectSignature;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/memoize/signature.ts\n// module id = 52\n// module chunks = 0","\"use strict\";\r\n/**\r\n * Copyright 2014-present Palantir Technologies\r\n * @license MIT\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\nvar d3 = require(\"d3\");\r\nvar Scales = require(\"../scales\");\r\nvar Utils = require(\"../utils\");\r\nvar Drawers = require(\"../drawers\");\r\nvar areaDrawer_1 = require(\"../drawers/areaDrawer\");\r\nvar drawer_1 = require(\"../drawers/drawer\");\r\nvar lineDrawer_1 = require(\"../drawers/lineDrawer\");\r\nvar Plots = require(\"./\");\r\nvar linePlot_1 = require(\"./linePlot\");\r\nvar plot_1 = require(\"./plot\");\r\nvar Area = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Area, _super);\r\n    /**\r\n     * An Area Plot draws a filled region (area) between Y and Y0.\r\n     *\r\n     * @constructor\r\n     */\r\n    function Area() {\r\n        var _this = _super.call(this) || this;\r\n        _this.addClass(\"area-plot\");\r\n        _this.y0(0); // default\r\n        _this.attr(\"fill-opacity\", 0.25);\r\n        _this.attr(\"fill\", new Scales.Color().range()[0]);\r\n        _this._lineDrawers = new Utils.Map();\r\n        return _this;\r\n    }\r\n    Area.prototype.y = function (y, yScale) {\r\n        if (y == null) {\r\n            return _super.prototype.y.call(this);\r\n        }\r\n        if (yScale == null) {\r\n            _super.prototype.y.call(this, y);\r\n        }\r\n        else {\r\n            _super.prototype.y.call(this, y, yScale);\r\n        }\r\n        if (yScale != null) {\r\n            var y0 = this.y0().accessor;\r\n            if (y0 != null) {\r\n                this._bindProperty(Area._Y0_KEY, y0, yScale);\r\n            }\r\n            this._updateYScale();\r\n        }\r\n        return this;\r\n    };\r\n    Area.prototype.y0 = function (y0) {\r\n        if (y0 == null) {\r\n            return this._propertyBindings.get(Area._Y0_KEY);\r\n        }\r\n        var yBinding = this.y();\r\n        var yScale = yBinding && yBinding.scale;\r\n        this._bindProperty(Area._Y0_KEY, y0, yScale);\r\n        this._updateYScale();\r\n        this.render();\r\n        return this;\r\n    };\r\n    Area.prototype._onDatasetUpdate = function () {\r\n        _super.prototype._onDatasetUpdate.call(this);\r\n        this._updateYScale();\r\n    };\r\n    Area.prototype._addDataset = function (dataset) {\r\n        var _this = this;\r\n        this._lineDrawers.set(dataset, new Drawers.ProxyDrawer(function () { return new lineDrawer_1.LineSVGDrawer(); }, function (ctx) { return new Drawers.CanvasDrawer(ctx, lineDrawer_1.makeLineCanvasDrawStep(function () {\r\n            var xProjector = plot_1.Plot._scaledAccessor(_this.x());\r\n            var yProjector = plot_1.Plot._scaledAccessor(_this.y());\r\n            return _this._d3LineFactory(dataset, xProjector, yProjector);\r\n        })); }));\r\n        _super.prototype._addDataset.call(this, dataset);\r\n        return this;\r\n    };\r\n    Area.prototype._createNodesForDataset = function (dataset) {\r\n        _super.prototype._createNodesForDataset.call(this, dataset);\r\n        var drawer = this._lineDrawers.get(dataset);\r\n        if (this.renderer() === \"svg\") {\r\n            drawer.useSVG(this._renderArea);\r\n        }\r\n        else {\r\n            drawer.useCanvas(this._canvas);\r\n        }\r\n        return drawer;\r\n    };\r\n    Area.prototype._removeDatasetNodes = function (dataset) {\r\n        _super.prototype._removeDatasetNodes.call(this, dataset);\r\n        this._lineDrawers.get(dataset).remove();\r\n    };\r\n    Area.prototype._additionalPaint = function () {\r\n        var _this = this;\r\n        var drawSteps = this._generateLineDrawSteps();\r\n        var dataToDraw = this._getDataToDraw();\r\n        this.datasets().forEach(function (dataset) {\r\n            var appliedDrawSteps = plot_1.Plot.applyDrawSteps(drawSteps, dataset);\r\n            _this._lineDrawers.get(dataset).draw(dataToDraw.get(dataset), appliedDrawSteps);\r\n        });\r\n    };\r\n    Area.prototype._generateLineDrawSteps = function () {\r\n        var drawSteps = [];\r\n        if (this._animateOnNextRender()) {\r\n            var attrToProjector = this._generateLineAttrToProjector();\r\n            attrToProjector[\"d\"] = this._constructLineProjector(plot_1.Plot._scaledAccessor(this.x()), this._getResetYFunction());\r\n            drawSteps.push({ attrToProjector: attrToProjector, animator: this._getAnimator(Plots.Animator.RESET) });\r\n        }\r\n        drawSteps.push({\r\n            attrToProjector: this._generateLineAttrToProjector(),\r\n            animator: this._getAnimator(Plots.Animator.MAIN),\r\n        });\r\n        return drawSteps;\r\n    };\r\n    Area.prototype._generateLineAttrToProjector = function () {\r\n        var lineAttrToProjector = this._getAttrToProjector();\r\n        lineAttrToProjector[\"d\"] = this._constructLineProjector(plot_1.Plot._scaledAccessor(this.x()), plot_1.Plot._scaledAccessor(this.y()));\r\n        return lineAttrToProjector;\r\n    };\r\n    Area.prototype._createDrawer = function (dataset) {\r\n        var _this = this;\r\n        return new drawer_1.ProxyDrawer(function () { return new areaDrawer_1.AreaSVGDrawer(); }, function (ctx) {\r\n            return new Drawers.CanvasDrawer(ctx, areaDrawer_1.makeAreaCanvasDrawStep(function () {\r\n                var _a = _this._coordinateProjectors(), xProjector = _a[0], yProjector = _a[1], y0Projector = _a[2];\r\n                var definedProjector = _this._createDefinedProjector(xProjector, yProjector);\r\n                return _this._createAreaGenerator(xProjector, yProjector, y0Projector, definedProjector, dataset);\r\n            }, function () {\r\n                var _a = _this._coordinateProjectors(), xProjector = _a[0], yProjector = _a[1];\r\n                var definedProjector = _this._createDefinedProjector(xProjector, yProjector);\r\n                return _this._createTopLineGenerator(xProjector, yProjector, definedProjector, dataset);\r\n            }));\r\n        });\r\n    };\r\n    Area.prototype._generateDrawSteps = function () {\r\n        var drawSteps = [];\r\n        if (this._animateOnNextRender()) {\r\n            var attrToProjector = this._getAttrToProjector();\r\n            attrToProjector[\"d\"] = this._constructAreaProjector(plot_1.Plot._scaledAccessor(this.x()), this._getResetYFunction(), plot_1.Plot._scaledAccessor(this.y0()));\r\n            drawSteps.push({ attrToProjector: attrToProjector, animator: this._getAnimator(Plots.Animator.RESET) });\r\n        }\r\n        drawSteps.push({\r\n            attrToProjector: this._getAttrToProjector(),\r\n            animator: this._getAnimator(Plots.Animator.MAIN),\r\n        });\r\n        return drawSteps;\r\n    };\r\n    Area.prototype._updateYScale = function () {\r\n        var extents = this.getExtentsForProperty(\"y0\");\r\n        var extent = Utils.Array.flatten(extents);\r\n        var uniqExtentVals = Utils.Array.uniq(extent);\r\n        var constantBaseline = uniqExtentVals.length === 1 ? uniqExtentVals[0] : null;\r\n        var yBinding = this.y();\r\n        var yScale = (yBinding && yBinding.scale);\r\n        if (yScale == null) {\r\n            return;\r\n        }\r\n        if (this._constantBaselineValueProvider != null) {\r\n            yScale.removePaddingExceptionsProvider(this._constantBaselineValueProvider);\r\n            this._constantBaselineValueProvider = null;\r\n        }\r\n        if (constantBaseline != null) {\r\n            this._constantBaselineValueProvider = function () { return [constantBaseline]; };\r\n            yScale.addPaddingExceptionsProvider(this._constantBaselineValueProvider);\r\n        }\r\n    };\r\n    Area.prototype._getResetYFunction = function () {\r\n        return plot_1.Plot._scaledAccessor(this.y0());\r\n    };\r\n    Area.prototype._coordinateProjectors = function () {\r\n        return [\r\n            plot_1.Plot._scaledAccessor(this.x()),\r\n            plot_1.Plot._scaledAccessor(this.y()),\r\n            plot_1.Plot._scaledAccessor(this.y0()),\r\n        ];\r\n    };\r\n    Area.prototype._propertyProjectors = function () {\r\n        var propertyToProjectors = _super.prototype._propertyProjectors.call(this);\r\n        var _a = this._coordinateProjectors(), xProject = _a[0], yProjector = _a[1], y0Projector = _a[2];\r\n        propertyToProjectors[\"d\"] = this._constructAreaProjector(xProject, yProjector, y0Projector);\r\n        return propertyToProjectors;\r\n    };\r\n    Area.prototype.selections = function (datasets) {\r\n        var _this = this;\r\n        if (datasets === void 0) { datasets = this.datasets(); }\r\n        if (this.renderer() === \"canvas\") {\r\n            return d3.selectAll();\r\n        }\r\n        var allSelections = _super.prototype.selections.call(this, datasets).nodes();\r\n        var lineDrawers = datasets.map(function (dataset) { return _this._lineDrawers.get(dataset); })\r\n            .filter(function (drawer) { return drawer != null; });\r\n        lineDrawers.forEach(function (ld) { return allSelections.push.apply(allSelections, ld.getVisualPrimitives()); });\r\n        return d3.selectAll(allSelections);\r\n    };\r\n    Area.prototype._constructAreaProjector = function (xProjector, yProjector, y0Projector) {\r\n        var _this = this;\r\n        var definedProjector = this._createDefinedProjector(plot_1.Plot._scaledAccessor(this.x()), plot_1.Plot._scaledAccessor(this.y()));\r\n        return function (datum, index, dataset) {\r\n            var areaGenerator = _this._createAreaGenerator(xProjector, yProjector, y0Projector, definedProjector, dataset);\r\n            return areaGenerator(datum);\r\n        };\r\n    };\r\n    Area.prototype._createDefinedProjector = function (xProjector, yProjector) {\r\n        return function (d, i, dataset) {\r\n            var positionX = xProjector(d, i, dataset);\r\n            var positionY = yProjector(d, i, dataset);\r\n            return Utils.Math.isValidNumber(positionX) && Utils.Math.isValidNumber(positionY);\r\n        };\r\n    };\r\n    Area.prototype._createAreaGenerator = function (xProjector, yProjector, y0Projector, definedProjector, dataset) {\r\n        // just runtime error if user passes curveBundle to area plot\r\n        var curveFactory = this._getCurveFactory();\r\n        var areaGenerator = d3.area()\r\n            .x(function (innerDatum, innerIndex) { return xProjector(innerDatum, innerIndex, dataset); })\r\n            .y1(function (innerDatum, innerIndex) { return yProjector(innerDatum, innerIndex, dataset); })\r\n            .y0(function (innerDatum, innerIndex) { return y0Projector(innerDatum, innerIndex, dataset); })\r\n            .curve(curveFactory)\r\n            .defined(function (innerDatum, innerIndex) { return definedProjector(innerDatum, innerIndex, dataset); });\r\n        return areaGenerator;\r\n    };\r\n    Area.prototype._createTopLineGenerator = function (xProjector, yProjector, definedProjector, dataset) {\r\n        var curveFactory = this._getCurveFactory();\r\n        var areaGenerator = d3.line()\r\n            .x(function (innerDatum, innerIndex) { return xProjector(innerDatum, innerIndex, dataset); })\r\n            .y(function (innerDatum, innerIndex) { return yProjector(innerDatum, innerIndex, dataset); })\r\n            .curve(curveFactory)\r\n            .defined(function (innerDatum, innerIndex) { return definedProjector(innerDatum, innerIndex, dataset); });\r\n        return areaGenerator;\r\n    };\r\n    Area._Y0_KEY = \"y0\";\r\n    return Area;\r\n}(linePlot_1.Line));\r\nexports.Area = Area;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/plots/areaPlot.ts\n// module id = 53\n// module chunks = 0","\"use strict\";\r\n/**\r\n * Copyright 2014-present Palantir Technologies\r\n * @license MIT\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Animator;\r\n(function (Animator) {\r\n    Animator.MAIN = \"main\";\r\n    Animator.RESET = \"reset\";\r\n})(Animator = exports.Animator || (exports.Animator = {}));\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/plots/commons.ts\n// module id = 54\n// module chunks = 0","\"use strict\";\r\n/**\r\n * Copyright 2017-present Palantir Technologies\r\n * @license MIT\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * Stores the deferred transformation state for a single scale.\r\n */\r\nvar DomainTransform = /** @class */ (function () {\r\n    function DomainTransform() {\r\n        var _this = this;\r\n        this.scale = 0;\r\n        this.translate = 0;\r\n        this.cachedDomain = [null, null];\r\n        this.lastSeenDomain = [null, null];\r\n        this.updateDomain = function (scale) {\r\n            _this.lastSeenDomain = scale.getTransformationDomain();\r\n            var cachedLength = scale.scaleTransformation(_this.cachedDomain[1]) - scale.scaleTransformation(_this.cachedDomain[0]);\r\n            var lastSeenLength = scale.scaleTransformation(_this.lastSeenDomain[1]) - scale.scaleTransformation(_this.lastSeenDomain[0]);\r\n            _this.scale = (cachedLength / lastSeenLength) || 1;\r\n            _this.translate = scale.scaleTransformation(_this.cachedDomain[0]) - scale.scaleTransformation(_this.lastSeenDomain[0]) * _this.scale || 0;\r\n        };\r\n    }\r\n    DomainTransform.prototype.reset = function () {\r\n        this.scale = 1;\r\n        this.translate = 0;\r\n        this.cachedDomain = this.lastSeenDomain;\r\n    };\r\n    DomainTransform.prototype.setDomain = function (scale) {\r\n        this.cachedDomain = scale.getTransformationDomain();\r\n    };\r\n    return DomainTransform;\r\n}());\r\n/**\r\n * Manages deferred rendering callbacks.\r\n *\r\n * Call `setDomains` when deferred rendering is initially enabled to fix the\r\n * current domain values.\r\n *\r\n * Call `updateDomains` when scale domains change, which uses the domain to\r\n * compute CSS-tyle transform parameters passed to `applyTransformCallback`,\r\n * mimicking the result of a full re-render. After a deferred timeout, invoke\r\n * `applyTransformCallback` again with an identity transform and finally invoke\r\n * `renderCallback`, which should actually redraw the plot.\r\n *\r\n * Call `resetTransforms` just prior to re-rendering into the canvas. This\r\n * ensures that the canvas is at 1:1 scaling.\r\n */\r\nvar DeferredRenderer = /** @class */ (function () {\r\n    function DeferredRenderer(renderCallback, applyTransformCallback) {\r\n        var _this = this;\r\n        this.renderCallback = renderCallback;\r\n        this.applyTransformCallback = applyTransformCallback;\r\n        this.domainTransformX = new DomainTransform();\r\n        this.domainTransformY = new DomainTransform();\r\n        this.renderDeferred = function () {\r\n            _this.applyTransform();\r\n            clearTimeout(_this.timeoutToken);\r\n            _this.timeoutToken = setTimeout(function () {\r\n                _this.renderCallback();\r\n            }, DeferredRenderer.DEFERRED_RENDERING_DELAY);\r\n        };\r\n    }\r\n    DeferredRenderer.prototype.setDomains = function (scaleX, scaleY) {\r\n        if (scaleX) {\r\n            this.domainTransformX.setDomain(scaleX);\r\n        }\r\n        if (scaleY) {\r\n            this.domainTransformY.setDomain(scaleY);\r\n        }\r\n        this.renderDeferred();\r\n    };\r\n    DeferredRenderer.prototype.updateDomains = function (scaleX, scaleY) {\r\n        if (scaleX) {\r\n            this.domainTransformX.updateDomain(scaleX);\r\n        }\r\n        if (scaleY) {\r\n            this.domainTransformY.updateDomain(scaleY);\r\n        }\r\n        this.renderDeferred();\r\n    };\r\n    DeferredRenderer.prototype.resetTransforms = function () {\r\n        this.domainTransformX.reset();\r\n        this.domainTransformY.reset();\r\n        this.applyTransform();\r\n    };\r\n    DeferredRenderer.prototype.applyTransform = function () {\r\n        this.applyTransformCallback(this.domainTransformX.translate, this.domainTransformY.translate, this.domainTransformX.scale, this.domainTransformY.scale);\r\n    };\r\n    DeferredRenderer.DEFERRED_RENDERING_DELAY = 200;\r\n    return DeferredRenderer;\r\n}());\r\nexports.DeferredRenderer = DeferredRenderer;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/plots/deferredRenderer.ts\n// module id = 55\n// module chunks = 0","\"use strict\";\r\n/**\r\n * Copyright 2014-present Palantir Technologies\r\n * @license MIT\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\nvar d3 = require(\"d3\");\r\nvar Animators = require(\"../animators\");\r\nvar Drawers = require(\"../drawers\");\r\nvar drawer_1 = require(\"../drawers/drawer\");\r\nvar lineDrawer_1 = require(\"../drawers/lineDrawer\");\r\nvar Scales = require(\"../scales\");\r\nvar quantitativeScale_1 = require(\"../scales/quantitativeScale\");\r\nvar Utils = require(\"../utils\");\r\nvar makeEnum_1 = require(\"../utils/makeEnum\");\r\nvar Plots = require(\"./\");\r\nvar plot_1 = require(\"./plot\");\r\nvar xyPlot_1 = require(\"./xyPlot\");\r\nvar CURVE_NAME_MAPPING = {\r\n    linear: d3.curveLinear,\r\n    linearClosed: d3.curveLinearClosed,\r\n    step: d3.curveStep,\r\n    stepBefore: d3.curveStepBefore,\r\n    stepAfter: d3.curveStepAfter,\r\n    basis: d3.curveBasis,\r\n    basisOpen: d3.curveBasisOpen,\r\n    basisClosed: d3.curveBasisClosed,\r\n    bundle: d3.curveBundle,\r\n    cardinal: d3.curveCardinal,\r\n    cardinalOpen: d3.curveCardinalOpen,\r\n    cardinalClosed: d3.curveCardinalClosed,\r\n    monotone: d3.curveMonotoneX,\r\n};\r\n/**\r\n * Known curve types that line and area plot's .curve() methods understand\r\n */\r\nexports.CurveName = makeEnum_1.makeEnum([\r\n    \"linear\",\r\n    \"linearClosed\",\r\n    \"step\",\r\n    \"stepBefore\",\r\n    \"stepAfter\",\r\n    \"basis\",\r\n    \"basisOpen\",\r\n    \"basisClosed\",\r\n    \"bundle\",\r\n    \"cardinal\",\r\n    \"cardinalOpen\",\r\n    \"cardinalClosed\",\r\n    \"monotone\",\r\n]);\r\nvar Line = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Line, _super);\r\n    /**\r\n     * A Line Plot draws line segments starting from the first data point to the next.\r\n     *\r\n     * @constructor\r\n     */\r\n    function Line() {\r\n        var _this = _super.call(this) || this;\r\n        _this._curve = \"linear\";\r\n        _this._autorangeSmooth = false;\r\n        _this._croppedRenderingEnabled = true;\r\n        _this._collapseDenseVerticalLinesEnabled = false;\r\n        _this._downsamplingEnabled = false;\r\n        _this.addClass(\"line-plot\");\r\n        var animator = new Animators.Easing();\r\n        animator.stepDuration(plot_1.Plot._ANIMATION_MAX_DURATION);\r\n        animator.easingMode(\"expInOut\");\r\n        animator.maxTotalDuration(plot_1.Plot._ANIMATION_MAX_DURATION);\r\n        _this.animator(Plots.Animator.MAIN, animator);\r\n        _this.attr(\"stroke\", new Scales.Color().range()[0]);\r\n        _this.attr(\"stroke-width\", \"2px\");\r\n        return _this;\r\n    }\r\n    Line.prototype.x = function (x, xScale, postScale) {\r\n        if (x == null) {\r\n            return _super.prototype.x.call(this);\r\n        }\r\n        else {\r\n            _super.prototype.x.call(this, x, xScale, postScale);\r\n            this._setScaleSnapping();\r\n            return this;\r\n        }\r\n    };\r\n    Line.prototype.y = function (y, yScale, postScale) {\r\n        if (y == null) {\r\n            return _super.prototype.y.call(this);\r\n        }\r\n        else {\r\n            _super.prototype.y.call(this, y, yScale, postScale);\r\n            this._setScaleSnapping();\r\n            return this;\r\n        }\r\n    };\r\n    Line.prototype.autorangeMode = function (autorangeMode) {\r\n        if (autorangeMode == null) {\r\n            return _super.prototype.autorangeMode.call(this);\r\n        }\r\n        _super.prototype.autorangeMode.call(this, autorangeMode);\r\n        this._setScaleSnapping();\r\n        return this;\r\n    };\r\n    Line.prototype.autorangeSmooth = function (autorangeSmooth) {\r\n        if (autorangeSmooth == null) {\r\n            return this._autorangeSmooth;\r\n        }\r\n        this._autorangeSmooth = autorangeSmooth;\r\n        this._setScaleSnapping();\r\n        return this;\r\n    };\r\n    Line.prototype._setScaleSnapping = function () {\r\n        if (this.autorangeMode() === \"x\" && this.x() && this.x().scale && this.x().scale instanceof quantitativeScale_1.QuantitativeScale) {\r\n            this.x().scale.snappingDomainEnabled(!this.autorangeSmooth());\r\n        }\r\n        if (this.autorangeMode() === \"y\" && this.y() && this.y().scale && this.y().scale instanceof quantitativeScale_1.QuantitativeScale) {\r\n            this.y().scale.snappingDomainEnabled(!this.autorangeSmooth());\r\n        }\r\n    };\r\n    Line.prototype.curve = function (curve) {\r\n        if (curve == null) {\r\n            return this._curve;\r\n        }\r\n        this._curve = curve;\r\n        this.render();\r\n        return this;\r\n    };\r\n    Line.prototype.downsamplingEnabled = function (downsampling) {\r\n        if (downsampling == null) {\r\n            return this._downsamplingEnabled;\r\n        }\r\n        this._downsamplingEnabled = downsampling;\r\n        return this;\r\n    };\r\n    Line.prototype.croppedRenderingEnabled = function (croppedRendering) {\r\n        if (croppedRendering == null) {\r\n            return this._croppedRenderingEnabled;\r\n        }\r\n        this._croppedRenderingEnabled = croppedRendering;\r\n        this.render();\r\n        return this;\r\n    };\r\n    Line.prototype.collapseDenseLinesEnabled = function (collapseDenseLines) {\r\n        if (collapseDenseLines == null) {\r\n            return this._collapseDenseVerticalLinesEnabled;\r\n        }\r\n        this._collapseDenseVerticalLinesEnabled = collapseDenseLines;\r\n        this.render();\r\n        return this;\r\n    };\r\n    Line.prototype._createDrawer = function (dataset) {\r\n        var _this = this;\r\n        return new drawer_1.ProxyDrawer(function () { return new lineDrawer_1.LineSVGDrawer(); }, function (ctx) { return new Drawers.CanvasDrawer(ctx, lineDrawer_1.makeLineCanvasDrawStep(function () { return _this._d3LineFactory(dataset); })); });\r\n    };\r\n    Line.prototype.getExtentsForProperty = function (property) {\r\n        var extents = _super.prototype.getExtentsForProperty.call(this, property);\r\n        if (!this._autorangeSmooth) {\r\n            return extents;\r\n        }\r\n        if (this.autorangeMode() !== property) {\r\n            return extents;\r\n        }\r\n        if (this.autorangeMode() !== \"x\" && this.autorangeMode() !== \"y\") {\r\n            return extents;\r\n        }\r\n        var edgeIntersectionPoints = this._getEdgeIntersectionPoints();\r\n        var includedValues;\r\n        if (this.autorangeMode() === \"y\") {\r\n            includedValues = edgeIntersectionPoints.left.concat(edgeIntersectionPoints.right).map(function (point) { return point.y; });\r\n        }\r\n        else {\r\n            includedValues = edgeIntersectionPoints.top.concat(edgeIntersectionPoints.bottom).map(function (point) { return point.x; });\r\n        }\r\n        return extents.map(function (extent) { return d3.extent(d3.merge([extent, includedValues])); });\r\n    };\r\n    Line.prototype._getEdgeIntersectionPoints = function () {\r\n        var _this = this;\r\n        if (!(this.y().scale instanceof quantitativeScale_1.QuantitativeScale && this.x().scale instanceof quantitativeScale_1.QuantitativeScale)) {\r\n            return {\r\n                left: [],\r\n                right: [],\r\n                top: [],\r\n                bottom: [],\r\n            };\r\n        }\r\n        var yScale = this.y().scale;\r\n        var xScale = this.x().scale;\r\n        var intersectionPoints = {\r\n            left: [],\r\n            right: [],\r\n            top: [],\r\n            bottom: [],\r\n        };\r\n        var leftX = xScale.scale(xScale.domain()[0]);\r\n        var rightX = xScale.scale(xScale.domain()[1]);\r\n        var bottomY = yScale.scale(yScale.domain()[0]);\r\n        var topY = yScale.scale(yScale.domain()[1]);\r\n        this.datasets().forEach(function (dataset) {\r\n            var data = dataset.data();\r\n            var x1, x2, y1, y2;\r\n            var prevX, prevY, currX, currY;\r\n            for (var i = 1; i < data.length; i++) {\r\n                prevX = currX || xScale.scale(_this.x().accessor(data[i - 1], i - 1, dataset));\r\n                prevY = currY || yScale.scale(_this.y().accessor(data[i - 1], i - 1, dataset));\r\n                currX = xScale.scale(_this.x().accessor(data[i], i, dataset));\r\n                currY = yScale.scale(_this.y().accessor(data[i], i, dataset));\r\n                // If values crossed left edge\r\n                if ((prevX < leftX) === (leftX <= currX)) {\r\n                    x1 = leftX - prevX;\r\n                    x2 = currX - prevX;\r\n                    y2 = currY - prevY;\r\n                    y1 = x1 * y2 / x2;\r\n                    intersectionPoints.left.push({\r\n                        x: leftX,\r\n                        y: yScale.invert(prevY + y1),\r\n                    });\r\n                }\r\n                // If values crossed right edge\r\n                if ((prevX < rightX) === (rightX <= currX)) {\r\n                    x1 = rightX - prevX;\r\n                    x2 = currX - prevX;\r\n                    y2 = currY - prevY;\r\n                    y1 = x1 * y2 / x2;\r\n                    intersectionPoints.right.push({\r\n                        x: rightX,\r\n                        y: yScale.invert(prevY + y1),\r\n                    });\r\n                }\r\n                // If values crossed upper edge\r\n                if ((prevY < topY) === (topY <= currY)) {\r\n                    x2 = currX - prevX;\r\n                    y1 = topY - prevY;\r\n                    y2 = currY - prevY;\r\n                    x1 = y1 * x2 / y2;\r\n                    intersectionPoints.top.push({\r\n                        x: xScale.invert(prevX + x1),\r\n                        y: topY,\r\n                    });\r\n                }\r\n                // If values crossed lower edge\r\n                if ((prevY < bottomY) === (bottomY <= currY)) {\r\n                    x2 = currX - prevX;\r\n                    y1 = bottomY - prevY;\r\n                    y2 = currY - prevY;\r\n                    x1 = y1 * x2 / y2;\r\n                    intersectionPoints.bottom.push({\r\n                        x: xScale.invert(prevX + x1),\r\n                        y: bottomY,\r\n                    });\r\n                }\r\n            }\r\n        });\r\n        return intersectionPoints;\r\n    };\r\n    Line.prototype._getResetYFunction = function () {\r\n        // gets the y-value generator for the animation start point\r\n        var yDomain = this.y().scale.domain();\r\n        var domainMax = Math.max(yDomain[0], yDomain[1]);\r\n        var domainMin = Math.min(yDomain[0], yDomain[1]);\r\n        // start from zero, or the closest domain value to zero\r\n        // avoids lines zooming on from offscreen.\r\n        var startValue = (domainMax < 0 && domainMax) || (domainMin > 0 && domainMin) || 0;\r\n        var scaledStartValue = this.y().scale.scale(startValue);\r\n        return function (d, i, dataset) { return scaledStartValue; };\r\n    };\r\n    Line.prototype._generateDrawSteps = function () {\r\n        var drawSteps = [];\r\n        if (this._animateOnNextRender()) {\r\n            var attrToProjector = this._getAttrToProjector();\r\n            attrToProjector[\"d\"] = this._constructLineProjector(plot_1.Plot._scaledAccessor(this.x()), this._getResetYFunction());\r\n            drawSteps.push({ attrToProjector: attrToProjector, animator: this._getAnimator(Plots.Animator.RESET) });\r\n        }\r\n        drawSteps.push({\r\n            attrToProjector: this._getAttrToProjector(),\r\n            animator: this._getAnimator(Plots.Animator.MAIN),\r\n        });\r\n        return drawSteps;\r\n    };\r\n    Line.prototype._generateAttrToProjector = function () {\r\n        var attrToProjector = _super.prototype._generateAttrToProjector.call(this);\r\n        Object.keys(attrToProjector).forEach(function (attribute) {\r\n            if (attribute === \"d\") {\r\n                return;\r\n            }\r\n            var projector = attrToProjector[attribute];\r\n            attrToProjector[attribute] = function (data, i, dataset) {\r\n                return data.length > 0 ? projector(data[0], i, dataset) : null;\r\n            };\r\n        });\r\n        return attrToProjector;\r\n    };\r\n    Line.prototype.entitiesAt = function (point) {\r\n        var entity = this.entityNearestByXThenY(point);\r\n        if (entity != null) {\r\n            return [entity];\r\n        }\r\n        else {\r\n            return [];\r\n        }\r\n    };\r\n    /**\r\n     * Returns the PlotEntity nearest to the query point by X then by Y, or undefined if no PlotEntity can be found.\r\n     *\r\n     * @param {Point} queryPoint\r\n     * @returns {PlotEntity} The nearest PlotEntity, or undefined if no PlotEntity can be found.\r\n     */\r\n    Line.prototype.entityNearestByXThenY = function (queryPoint) {\r\n        var minXDist = Infinity;\r\n        var minYDist = Infinity;\r\n        var closest;\r\n        var chartBounds = this.bounds();\r\n        var entities = this.entities();\r\n        var entityLen = entities.length;\r\n        for (var i = 0; i < entityLen; i++) {\r\n            var entity = entities[i];\r\n            if (!Utils.Math.within(entity.position, chartBounds)) {\r\n                continue;\r\n            }\r\n            var xDist = Math.abs(queryPoint.x - entity.position.x);\r\n            var yDist = Math.abs(queryPoint.y - entity.position.y);\r\n            if (xDist < minXDist || xDist === minXDist && yDist < minYDist) {\r\n                closest = entity;\r\n                minXDist = xDist;\r\n                minYDist = yDist;\r\n            }\r\n        }\r\n        return closest;\r\n    };\r\n    Line.prototype._propertyProjectors = function () {\r\n        var propertyToProjectors = _super.prototype._propertyProjectors.call(this);\r\n        propertyToProjectors[\"d\"] = this._constructLineProjector(plot_1.Plot._scaledAccessor(this.x()), plot_1.Plot._scaledAccessor(this.y()));\r\n        return propertyToProjectors;\r\n    };\r\n    Line.prototype._constructLineProjector = function (xProjector, yProjector) {\r\n        var _this = this;\r\n        return function (datum, index, dataset) {\r\n            return _this._d3LineFactory(dataset, xProjector, yProjector)(datum);\r\n        };\r\n    };\r\n    /**\r\n     * Return a d3.Line whose .x, .y, and .defined accessors are hooked up to the xProjector and yProjector\r\n     * after they've been fed the dataset, and whose curve is configured to this plot's curve.\r\n     * @param dataset\r\n     * @param xProjector\r\n     * @param yProjector\r\n     * @returns {Line<[number,number]>}\r\n     * @private\r\n     */\r\n    Line.prototype._d3LineFactory = function (dataset, xProjector, yProjector) {\r\n        if (xProjector === void 0) { xProjector = plot_1.Plot._scaledAccessor(this.x()); }\r\n        if (yProjector === void 0) { yProjector = plot_1.Plot._scaledAccessor(this.y()); }\r\n        var definedProjector = function (d, i, dataset) {\r\n            var positionX = xProjector(d, i, dataset);\r\n            var positionY = yProjector(d, i, dataset);\r\n            return Utils.Math.isValidNumber(positionX) && Utils.Math.isValidNumber(positionY);\r\n        };\r\n        return d3.line()\r\n            .x(function (innerDatum, innerIndex) { return xProjector(innerDatum, innerIndex, dataset); })\r\n            .y(function (innerDatum, innerIndex) { return yProjector(innerDatum, innerIndex, dataset); })\r\n            .curve(this._getCurveFactory())\r\n            .defined(function (innerDatum, innerIndex) { return definedProjector(innerDatum, innerIndex, dataset); });\r\n    };\r\n    ;\r\n    Line.prototype._getCurveFactory = function () {\r\n        var curve = this.curve();\r\n        if (typeof curve === \"string\") {\r\n            var maybeCurveFunction = CURVE_NAME_MAPPING[curve];\r\n            if (maybeCurveFunction == null) {\r\n                // oops; name is wrong - default to linear instead\r\n                return CURVE_NAME_MAPPING[\"linear\"];\r\n            }\r\n            else {\r\n                return maybeCurveFunction;\r\n            }\r\n        }\r\n        else {\r\n            return curve;\r\n        }\r\n    };\r\n    /**\r\n     * Line plots represent each dataset with a single <path> element, so we wrap the dataset data in a single element array.\r\n     * @returns {Map<Dataset, any[]>}\r\n     * @private\r\n     */\r\n    Line.prototype._getDataToDraw = function () {\r\n        var _this = this;\r\n        var dataToDraw = new Utils.Map();\r\n        this.datasets().forEach(function (dataset) {\r\n            var data = dataset.data();\r\n            if (!_this._croppedRenderingEnabled && !_this._downsamplingEnabled) {\r\n                dataToDraw.set(dataset, [data]);\r\n                return;\r\n            }\r\n            var filteredDataIndices = [];\r\n            var dataLen = data.length;\r\n            for (var i = 0; i < dataLen; i++) {\r\n                filteredDataIndices[i] = i;\r\n            }\r\n            if (_this._croppedRenderingEnabled) {\r\n                filteredDataIndices = _this._filterCroppedRendering(dataset, filteredDataIndices);\r\n            }\r\n            if (_this._downsamplingEnabled) {\r\n                filteredDataIndices = _this._filterDownsampling(dataset, filteredDataIndices);\r\n            }\r\n            if (_this._collapseDenseVerticalLinesEnabled) {\r\n                filteredDataIndices = _this._filterDenseLines(dataset, filteredDataIndices);\r\n            }\r\n            var filteredData = [];\r\n            var filteredIndicesLen = filteredDataIndices.length;\r\n            for (var i = 0; i < filteredIndicesLen; i++) {\r\n                var index = filteredDataIndices[i];\r\n                filteredData[i] = data[index];\r\n            }\r\n            dataToDraw.set(dataset, [filteredData]);\r\n        });\r\n        return dataToDraw;\r\n    };\r\n    Line.prototype._filterCroppedRendering = function (dataset, indices) {\r\n        var _this = this;\r\n        var xProjector = plot_1.Plot._scaledAccessor(this.x());\r\n        var yProjector = plot_1.Plot._scaledAccessor(this.y());\r\n        var data = dataset.data();\r\n        var filteredDataIndices = [];\r\n        var pointInViewport = function (x, y) {\r\n            return Utils.Math.inRange(x, 0, _this.width()) &&\r\n                Utils.Math.inRange(y, 0, _this.height());\r\n        };\r\n        for (var i = 0; i < indices.length; i++) {\r\n            var currXPoint = xProjector(data[indices[i]], indices[i], dataset);\r\n            var currYPoint = yProjector(data[indices[i]], indices[i], dataset);\r\n            var shouldShow = pointInViewport(currXPoint, currYPoint);\r\n            if (!shouldShow && indices[i - 1] != null && data[indices[i - 1]] != null) {\r\n                var prevXPoint = xProjector(data[indices[i - 1]], indices[i - 1], dataset);\r\n                var prevYPoint = yProjector(data[indices[i - 1]], indices[i - 1], dataset);\r\n                shouldShow = shouldShow || pointInViewport(prevXPoint, prevYPoint);\r\n            }\r\n            if (!shouldShow && indices[i + 1] != null && data[indices[i + 1]] != null) {\r\n                var nextXPoint = xProjector(data[indices[i + 1]], indices[i + 1], dataset);\r\n                var nextYPoint = yProjector(data[indices[i + 1]], indices[i + 1], dataset);\r\n                shouldShow = shouldShow || pointInViewport(nextXPoint, nextYPoint);\r\n            }\r\n            if (shouldShow) {\r\n                filteredDataIndices.push(indices[i]);\r\n            }\r\n        }\r\n        return filteredDataIndices;\r\n    };\r\n    Line.prototype._filterDownsampling = function (dataset, indices) {\r\n        if (indices.length === 0) {\r\n            return [];\r\n        }\r\n        var data = dataset.data();\r\n        var scaledXAccessor = plot_1.Plot._scaledAccessor(this.x());\r\n        var scaledYAccessor = plot_1.Plot._scaledAccessor(this.y());\r\n        var filteredIndices = [indices[0]];\r\n        var indexOnCurrentSlope = function (i, currentSlope) {\r\n            var p1x = scaledXAccessor(data[indices[i]], indices[i], dataset);\r\n            var p1y = scaledYAccessor(data[indices[i]], indices[i], dataset);\r\n            var p2x = scaledXAccessor(data[indices[i + 1]], indices[i + 1], dataset);\r\n            var p2y = scaledYAccessor(data[indices[i + 1]], indices[i + 1], dataset);\r\n            if (currentSlope === Infinity) {\r\n                return Math.floor(p1x) === Math.floor(p2x);\r\n            }\r\n            else {\r\n                var expectedP2y = p1y + (p2x - p1x) * currentSlope;\r\n                return Math.floor(p2y) === Math.floor(expectedP2y);\r\n            }\r\n        };\r\n        for (var i = 0; i < indices.length - 1;) {\r\n            var indexFirst = indices[i];\r\n            var p1x = scaledXAccessor(data[indices[i]], indices[i], dataset);\r\n            var p1y = scaledYAccessor(data[indices[i]], indices[i], dataset);\r\n            var p2x = scaledXAccessor(data[indices[i + 1]], indices[i + 1], dataset);\r\n            var p2y = scaledYAccessor(data[indices[i + 1]], indices[i + 1], dataset);\r\n            var currentSlope = (Math.floor(p1x) === Math.floor(p2x)) ? Infinity : (p2y - p1y) / (p2x - p1x);\r\n            var indexMin = indices[i];\r\n            var minScaledValue = (currentSlope === Infinity) ? p1y : p1x;\r\n            var indexMax = indexMin;\r\n            var maxScaledValue = minScaledValue;\r\n            var firstIndexOnCurrentSlope = true;\r\n            while (i < indices.length - 1 && (firstIndexOnCurrentSlope || indexOnCurrentSlope(i, currentSlope))) {\r\n                i++;\r\n                firstIndexOnCurrentSlope = false;\r\n                var currScaledValue = currentSlope === Infinity ? scaledYAccessor(data[indices[i]], indices[i], dataset) :\r\n                    scaledXAccessor(data[indices[i]], indices[i], dataset);\r\n                if (currScaledValue > maxScaledValue) {\r\n                    maxScaledValue = currScaledValue;\r\n                    indexMax = indices[i];\r\n                }\r\n                if (currScaledValue < minScaledValue) {\r\n                    minScaledValue = currScaledValue;\r\n                    indexMin = indices[i];\r\n                }\r\n            }\r\n            var indexLast = indices[i];\r\n            if (indexMin !== indexFirst) {\r\n                filteredIndices.push(indexMin);\r\n            }\r\n            if (indexMax !== indexMin && indexMax !== indexFirst) {\r\n                filteredIndices.push(indexMax);\r\n            }\r\n            if (indexLast !== indexFirst && indexLast !== indexMin && indexLast !== indexMax) {\r\n                filteredIndices.push(indexLast);\r\n            }\r\n        }\r\n        return filteredIndices;\r\n    };\r\n    /**\r\n     * Collapse line geometry\r\n     *\r\n     * Assuming that there are many points that are drawn on the same coordinate,\r\n     * we can save a lot of render time by just drawing one line from the min to\r\n     * max y-coordinate of all those points.\r\n     */\r\n    Line.prototype._filterDenseLines = function (dataset, indices) {\r\n        if (indices.length === 0) {\r\n            return [];\r\n        }\r\n        var data = dataset.data();\r\n        var scaledXAccessor = plot_1.Plot._scaledAccessor(this.x());\r\n        var scaledYAccessor = plot_1.Plot._scaledAccessor(this.y());\r\n        var xFn = function (i) { return scaledXAccessor(data[i], i, dataset); };\r\n        var yFn = function (i) { return scaledYAccessor(data[i], i, dataset); };\r\n        // TODO determine if we should collapse x or y or not collapse at all.\r\n        // For now, we assume line charts are always a function of x\r\n        return this._bucketByX(dataset, indices, xFn, yFn);\r\n    };\r\n    /**\r\n     * Iterates over the line points collapsing points that fall on the same\r\n     * floored x coordinate.\r\n     *\r\n     * Once all the points with the same x coordinate are detected, we draw a\r\n     * single line from the min to max y coorindate.\r\n     *\r\n     * The \"entrance\" and \"exit\" lines to/from this collapsed vertical line are\r\n     * also drawn. This allows lines with no collapsed segments to render\r\n     * correctly.\r\n     */\r\n    Line.prototype._bucketByX = function (dataset, indices, xFn, yFn) {\r\n        var filteredIndices = [];\r\n        var data = dataset.data();\r\n        var bucket = null;\r\n        var indicesLength = indices.length;\r\n        for (var ii = 0; ii <= indicesLength; ++ii) {\r\n            var i = indices[ii];\r\n            if (data[i] == null) {\r\n                continue;\r\n            }\r\n            var x = Math.floor(xFn(i));\r\n            var y = yFn(i);\r\n            if (bucket == null) {\r\n                bucket = new Utils.Bucket(i, x, y);\r\n            }\r\n            else if (bucket.isInBucket(x)) {\r\n                bucket.addToBucket(y, i);\r\n            }\r\n            else {\r\n                filteredIndices.push.apply(filteredIndices, bucket.getUniqueIndices());\r\n                bucket = new Utils.Bucket(i, x, y);\r\n            }\r\n        }\r\n        if (bucket != null) {\r\n            filteredIndices.push.apply(filteredIndices, bucket.getUniqueIndices());\r\n        }\r\n        return filteredIndices;\r\n    };\r\n    return Line;\r\n}(xyPlot_1.XYPlot));\r\nexports.Line = Line;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/plots/linePlot.ts\n// module id = 56\n// module chunks = 0","\"use strict\";\r\n/**\r\n * Copyright 2014-present Palantir Technologies\r\n * @license MIT\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\nvar d3 = require(\"d3\");\r\nvar panZoomConstraints_1 = require(\"../interactions/panZoomConstraints\");\r\nvar Utils = require(\"../utils\");\r\nvar scale_1 = require(\"./scale\");\r\nvar TRANSFORMATION_SPACE = [0, 1];\r\nvar Category = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Category, _super);\r\n    /**\r\n     * A Category Scale maps strings to numbers.\r\n     *\r\n     * @constructor\r\n     */\r\n    function Category() {\r\n        var _this = _super.call(this) || this;\r\n        _this._range = [0, 1];\r\n        _this._d3Scale = d3.scaleBand();\r\n        _this._d3Scale.range(TRANSFORMATION_SPACE);\r\n        _this._d3TransformationScale = d3.scaleLinear();\r\n        _this._d3TransformationScale.domain(TRANSFORMATION_SPACE);\r\n        var d3InnerPadding = 0.3;\r\n        _this._innerPadding = Category._convertToPlottableInnerPadding(d3InnerPadding);\r\n        _this._outerPadding = Category._convertToPlottableOuterPadding(0.5, d3InnerPadding);\r\n        return _this;\r\n    }\r\n    /**\r\n     * Return a clone of this category scale that holds the same pan/zoom, padding, domain and range, but\r\n     * without any included values providers.\r\n     */\r\n    Category.prototype.cloneWithoutProviders = function () {\r\n        var scale = new Category()\r\n            .domain(this.domain())\r\n            .range(this.range())\r\n            .innerPadding(this.innerPadding())\r\n            .outerPadding(this.outerPadding());\r\n        scale._d3TransformationScale.domain(this._d3TransformationScale.domain());\r\n        return scale;\r\n    };\r\n    Category.prototype.extentOfValues = function (values) {\r\n        return Utils.Array.uniq(values);\r\n    };\r\n    Category.prototype._getExtent = function () {\r\n        return Utils.Array.uniq(this._getAllIncludedValues());\r\n    };\r\n    Category.prototype.domain = function (values) {\r\n        return _super.prototype.domain.call(this, values);\r\n    };\r\n    /**\r\n     * Returns domain values that lie inside the given range.\r\n     * @param range\r\n     * @returns {string[]}\r\n     */\r\n    Category.prototype.invertRange = function (range) {\r\n        var _this = this;\r\n        if (range === void 0) { range = this.range(); }\r\n        var rangeBand = this._d3Scale.bandwidth();\r\n        var domainStartNormalized = this.invertedTransformation(range[0]);\r\n        var domainEndNormalized = this.invertedTransformation(range[1]);\r\n        var domain = this._d3Scale.domain();\r\n        // map [\"a\", \"b\", \"c\"] to the normalized center position (e.g. [0.25, .5, 0.75]). We add\r\n        // half the rangeBand to consider the center of the bars\r\n        var normalizedDomain = domain.map(function (d) { return _this._d3Scale(d) + rangeBand / 2; });\r\n        var domainStart = d3.bisect(normalizedDomain, domainStartNormalized);\r\n        var domainEnd = d3.bisect(normalizedDomain, domainEndNormalized);\r\n        return domain.slice(domainStart, domainEnd);\r\n    };\r\n    Category.prototype.range = function (values) {\r\n        return _super.prototype.range.call(this, values);\r\n    };\r\n    Category._convertToPlottableInnerPadding = function (d3InnerPadding) {\r\n        return 1 / (1 - d3InnerPadding) - 1;\r\n    };\r\n    Category._convertToPlottableOuterPadding = function (d3OuterPadding, d3InnerPadding) {\r\n        return d3OuterPadding / (1 - d3InnerPadding);\r\n    };\r\n    Category.prototype._setBands = function () {\r\n        var d3InnerPadding = 1 - 1 / (1 + this.innerPadding());\r\n        var d3OuterPadding = this.outerPadding() / (1 + this.innerPadding());\r\n        this._d3Scale.paddingInner(d3InnerPadding);\r\n        this._d3Scale.paddingOuter(d3OuterPadding);\r\n    };\r\n    /**\r\n     * Returns the width of the range band.\r\n     *\r\n     * @returns {number} The range band width\r\n     */\r\n    Category.prototype.rangeBand = function () {\r\n        return this._rescaleBand(this._d3Scale.bandwidth());\r\n    };\r\n    /**\r\n     * Returns the step width of the scale.\r\n     *\r\n     * The step width is the pixel distance between adjacent values in the domain.\r\n     *\r\n     * @returns {number}\r\n     */\r\n    Category.prototype.stepWidth = function () {\r\n        // todo consider replacing this with _d3Scale.step()\r\n        return this._rescaleBand(this._d3Scale.bandwidth() * (1 + this.innerPadding()));\r\n    };\r\n    Category.prototype.ticks = function () {\r\n        return this.domain();\r\n    };\r\n    Category.prototype.innerPadding = function (innerPadding) {\r\n        if (innerPadding == null) {\r\n            return this._innerPadding;\r\n        }\r\n        this._innerPadding = innerPadding;\r\n        this.range(this.range());\r\n        this._dispatchUpdate();\r\n        return this;\r\n    };\r\n    Category.prototype.outerPadding = function (outerPadding) {\r\n        if (outerPadding == null) {\r\n            return this._outerPadding;\r\n        }\r\n        this._outerPadding = outerPadding;\r\n        this.range(this.range());\r\n        this._dispatchUpdate();\r\n        return this;\r\n    };\r\n    Category.prototype.scale = function (value) {\r\n        // Determine the middle of the range band for the value\r\n        var untransformed = this._d3Scale(value) + this._d3Scale.bandwidth() / 2;\r\n        // Convert to screen space\r\n        return this._d3TransformationScale(untransformed);\r\n    };\r\n    Category.prototype.zoom = function (magnifyAmount, centerValue) {\r\n        var _this = this;\r\n        var magnifyTransform = function (rangeValue) {\r\n            return _this._d3TransformationScale.invert(panZoomConstraints_1.zoomOut(rangeValue, magnifyAmount, centerValue));\r\n        };\r\n        this._d3TransformationScale.domain(this._d3TransformationScale.range().map(magnifyTransform));\r\n        this._dispatchUpdate();\r\n    };\r\n    Category.prototype.pan = function (translateAmount) {\r\n        var _this = this;\r\n        var translateTransform = function (rangeValue) {\r\n            return _this._d3TransformationScale.invert(rangeValue + translateAmount);\r\n        };\r\n        this._d3TransformationScale.domain(this._d3TransformationScale.range().map(translateTransform));\r\n        this._dispatchUpdate();\r\n    };\r\n    Category.prototype.scaleTransformation = function (value) {\r\n        return this._d3TransformationScale(value);\r\n    };\r\n    Category.prototype.invertedTransformation = function (value) {\r\n        return this._d3TransformationScale.invert(value);\r\n    };\r\n    Category.prototype.getTransformationExtent = function () {\r\n        return TRANSFORMATION_SPACE;\r\n    };\r\n    Category.prototype.getTransformationDomain = function () {\r\n        return this._d3TransformationScale.domain();\r\n    };\r\n    Category.prototype.setTransformationDomain = function (domain) {\r\n        this._d3TransformationScale.domain(domain);\r\n        this._dispatchUpdate();\r\n    };\r\n    Category.prototype._getDomain = function () {\r\n        return this._backingScaleDomain();\r\n    };\r\n    Category.prototype._backingScaleDomain = function (values) {\r\n        if (values == null) {\r\n            return this._d3Scale.domain();\r\n        }\r\n        else {\r\n            this._d3Scale.domain(values);\r\n            this._setBands();\r\n            return this;\r\n        }\r\n    };\r\n    Category.prototype._getRange = function () {\r\n        return this._range;\r\n    };\r\n    Category.prototype._setRange = function (values) {\r\n        this._range = values;\r\n        this._d3TransformationScale.range(values);\r\n        this._setBands();\r\n    };\r\n    /**\r\n     * Converts a width or height in *Transformation Space* into *Screen Space*.\r\n     */\r\n    Category.prototype._rescaleBand = function (band) {\r\n        return Math.abs(this._d3TransformationScale(band) - this._d3TransformationScale(0));\r\n    };\r\n    return Category;\r\n}(scale_1.Scale));\r\nexports.Category = Category;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/scales/categoryScale.ts\n// module id = 57\n// module chunks = 0","\"use strict\";\r\n/**\r\n * Copyright 2014-present Palantir Technologies\r\n * @license MIT\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar d3 = require(\"d3\");\r\nvar nativeMath = window.Math;\r\n/**\r\n * Returns whether the child is in fact a child of the parent\r\n */\r\nfunction contains(parent, child) {\r\n    var maybeParent = child;\r\n    while (maybeParent != null && maybeParent !== parent) {\r\n        maybeParent = maybeParent.parentNode;\r\n    }\r\n    return maybeParent === parent;\r\n}\r\nexports.contains = contains;\r\n/**\r\n * Gets the bounding box of an element.\r\n * @param {d3.Selection} element\r\n * @returns {SVGRed} The bounding box.\r\n */\r\nfunction elementBBox(element) {\r\n    var bbox;\r\n    // HACKHACK: Firefox won't correctly measure nodes with style \"display: none\" or their descendents (FF Bug 612118).\r\n    try {\r\n        bbox = element.node().getBBox();\r\n    }\r\n    catch (err) {\r\n        bbox = { x: 0, y: 0, width: 0, height: 0 };\r\n    }\r\n    return bbox;\r\n}\r\nexports.elementBBox = elementBBox;\r\nfunction entityBounds(element) {\r\n    if (element instanceof SVGElement) {\r\n        return elementBBox(d3.select(element));\r\n    }\r\n    else if (element instanceof HTMLElement) {\r\n        var rect = element.getBoundingClientRect();\r\n        return { x: rect.left, y: rect.top, width: rect.width, height: rect.height };\r\n    }\r\n    else {\r\n        return { x: 0, y: 0, width: 0, height: 0 };\r\n    }\r\n}\r\nexports.entityBounds = entityBounds;\r\n/**\r\n * Screen refresh rate which is assumed to be 60fps\r\n */\r\nexports.SCREEN_REFRESH_RATE_MILLISECONDS = 1000 / 60;\r\n/**\r\n * Polyfill for `window.requestAnimationFrame`.\r\n * If the function exists, then we use the function directly.\r\n * Otherwise, we set a timeout on `SCREEN_REFRESH_RATE_MILLISECONDS` and then perform the function.\r\n *\r\n * @param {() => void} callback The callback to call in the next animation frame\r\n */\r\nfunction requestAnimationFramePolyfill(callback) {\r\n    if (window.requestAnimationFrame != null) {\r\n        window.requestAnimationFrame(callback);\r\n    }\r\n    else {\r\n        setTimeout(callback, exports.SCREEN_REFRESH_RATE_MILLISECONDS);\r\n    }\r\n}\r\nexports.requestAnimationFramePolyfill = requestAnimationFramePolyfill;\r\n/**\r\n * Calculates the width of the element.\r\n * The width includes the padding and the border on the element's left and right sides.\r\n *\r\n * @param {Element} element The element to query\r\n * @returns {number} The width of the element.\r\n */\r\nfunction elementWidth(elementOrSelection) {\r\n    var element = elementOrSelection instanceof d3.selection\r\n        ? elementOrSelection.node()\r\n        : elementOrSelection;\r\n    var style = window.getComputedStyle(element);\r\n    return _parseStyleValue(style, \"width\")\r\n        + _parseStyleValue(style, \"padding-left\")\r\n        + _parseStyleValue(style, \"padding-right\")\r\n        + _parseStyleValue(style, \"border-left-width\")\r\n        + _parseStyleValue(style, \"border-right-width\");\r\n}\r\nexports.elementWidth = elementWidth;\r\n/**\r\n * Calculates the height of the element.\r\n * The height includes the padding the and the border on the element's top and bottom sides.\r\n *\r\n * @param {Element} element The element to query\r\n * @returns {number} The height of the element\r\n */\r\nfunction elementHeight(elementOrSelection) {\r\n    var element = elementOrSelection instanceof d3.selection\r\n        ? elementOrSelection.node()\r\n        : elementOrSelection;\r\n    var style = window.getComputedStyle(element);\r\n    return _parseStyleValue(style, \"height\")\r\n        + _parseStyleValue(style, \"padding-top\")\r\n        + _parseStyleValue(style, \"padding-bottom\")\r\n        + _parseStyleValue(style, \"border-top-width\")\r\n        + _parseStyleValue(style, \"border-bottom-width\");\r\n}\r\nexports.elementHeight = elementHeight;\r\n// taken from the BNF at https://www.w3.org/TR/SVG/coords.html\r\nvar WSP = \"\\\\s\";\r\nvar NUMBER = \"(?:[-+]?[0-9]*\\\\.?[0-9]+)\";\r\nvar COMMA_WSP = \"(?:(?:\" + WSP + \"+,?\" + WSP + \"*)|(?:,\" + WSP + \"*))\";\r\nvar TRANSLATE_REGEX = new RegExp(\"translate\" + WSP + \"*\\\\(\" + WSP + \"*(\" + NUMBER + \")(?:\" + COMMA_WSP + \"(\" + NUMBER + \"))?\" + WSP + \"*\\\\)\");\r\nvar ROTATE_REGEX = new RegExp(\"rotate\" + WSP + \"*\\\\(\" + WSP + \"*(\" + NUMBER + \")\" + WSP + \"*\\\\)\");\r\nvar SCALE_REGEX = new RegExp(\"scale\" + WSP + \"*\\\\(\" + WSP + \"*(\" + NUMBER + \")(?:\" + COMMA_WSP + \"(\" + NUMBER + \"))?\" + WSP + \"*\\\\)\");\r\n/**\r\n * Accepts selections whose .transform contain a \"translate(a, b)\" and extracts the a and b\r\n */\r\nfunction getTranslateValues(el) {\r\n    var match = TRANSLATE_REGEX.exec(el.attr(\"transform\"));\r\n    if (match != null) {\r\n        var translateX = match[1], _a = match[2], translateY = _a === void 0 ? 0 : _a;\r\n        return [+translateX, +translateY];\r\n    }\r\n    else {\r\n        return [0, 0];\r\n    }\r\n}\r\nexports.getTranslateValues = getTranslateValues;\r\n/**\r\n * Accepts selections whose .transform contain a \"rotate(angle)\" and returns the angle\r\n */\r\nfunction getRotate(el) {\r\n    var match = ROTATE_REGEX.exec(el.attr(\"transform\"));\r\n    if (match != null) {\r\n        var rotation = match[1];\r\n        return +rotation;\r\n    }\r\n    else {\r\n        return 0;\r\n    }\r\n}\r\nexports.getRotate = getRotate;\r\nfunction getScaleValues(el) {\r\n    var match = SCALE_REGEX.exec(el.attr(\"transform\"));\r\n    if (match != null) {\r\n        var scaleX = match[1], scaleY = match[2];\r\n        return [+scaleX, scaleY == null ? +scaleX : +scaleY];\r\n    }\r\n    else {\r\n        return [0, 0];\r\n    }\r\n}\r\nexports.getScaleValues = getScaleValues;\r\n/**\r\n * Checks if the first ClientRect overlaps the second.\r\n *\r\n * @param {ClientRect} clientRectA The first ClientRect\r\n * @param {ClientRect} clientRectB The second ClientRect\r\n * @returns {boolean} If the ClientRects overlap each other.\r\n */\r\nfunction clientRectsOverlap(clientRectA, clientRectB) {\r\n    if (nativeMath.floor(clientRectA.right) <= nativeMath.ceil(clientRectB.left)) {\r\n        return false;\r\n    }\r\n    if (nativeMath.ceil(clientRectA.left) >= nativeMath.floor(clientRectB.right)) {\r\n        return false;\r\n    }\r\n    if (nativeMath.floor(clientRectA.bottom) <= nativeMath.ceil(clientRectB.top)) {\r\n        return false;\r\n    }\r\n    if (nativeMath.ceil(clientRectA.top) >= nativeMath.floor(clientRectB.bottom)) {\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\nexports.clientRectsOverlap = clientRectsOverlap;\r\n/**\r\n * Return a new ClientRect that is the old ClientRect expanded by amount in all directions.\r\n * @param rect\r\n * @param amount\r\n */\r\nfunction expandRect(rect, amount) {\r\n    return {\r\n        left: rect.left - amount,\r\n        top: rect.top - amount,\r\n        right: rect.right + amount,\r\n        bottom: rect.bottom + amount,\r\n        width: rect.width + amount * 2,\r\n        height: rect.height + amount * 2,\r\n    };\r\n}\r\nexports.expandRect = expandRect;\r\n/**\r\n * Returns true if and only if innerClientRect is inside outerClientRect.\r\n *\r\n * @param {ClientRect} innerClientRect The first ClientRect\r\n * @param {ClientRect} outerClientRect The second ClientRect\r\n * @returns {boolean} If and only if the innerClientRect is inside outerClientRect.\r\n */\r\nfunction clientRectInside(innerClientRect, outerClientRect) {\r\n    return (nativeMath.floor(outerClientRect.left) <= nativeMath.ceil(innerClientRect.left) &&\r\n        nativeMath.floor(outerClientRect.top) <= nativeMath.ceil(innerClientRect.top) &&\r\n        nativeMath.floor(innerClientRect.right) <= nativeMath.ceil(outerClientRect.right) &&\r\n        nativeMath.floor(innerClientRect.bottom) <= nativeMath.ceil(outerClientRect.bottom));\r\n}\r\nexports.clientRectInside = clientRectInside;\r\n/**\r\n * Returns true if the supplied coordinates or Ranges intersect or are contained by bbox.\r\n *\r\n * @param {number | Range} xValOrRange The x coordinate or Range to test\r\n * @param {number | Range} yValOrRange The y coordinate or Range to test\r\n * @param {SVGRect} bbox The bbox\r\n * @param {number} tolerance Amount by which to expand bbox, in each dimension, before\r\n * testing intersection\r\n *\r\n * @returns {boolean} True if the supplied coordinates or Ranges intersect or are\r\n * contained by bbox, false otherwise.\r\n */\r\nfunction intersectsBBox(xValOrRange, yValOrRange, bbox, tolerance) {\r\n    if (tolerance === void 0) { tolerance = 0.5; }\r\n    var xRange = _parseRange(xValOrRange);\r\n    var yRange = _parseRange(yValOrRange);\r\n    // SVGRects are positioned with sub-pixel accuracy (the default unit\r\n    // for the x, y, height & width attributes), but user selections (e.g. via\r\n    // mouse events) usually have pixel accuracy. A tolerance of half-a-pixel\r\n    // seems appropriate.\r\n    return bbox.x + bbox.width >= xRange.min - tolerance &&\r\n        bbox.x <= xRange.max + tolerance &&\r\n        bbox.y + bbox.height >= yRange.min - tolerance &&\r\n        bbox.y <= yRange.max + tolerance;\r\n}\r\nexports.intersectsBBox = intersectsBBox;\r\n/**\r\n * Create a Range from a number or an object with \"min\" and \"max\" defined.\r\n *\r\n * @param {any} input The object to parse\r\n *\r\n * @returns {Range} The generated Range\r\n */\r\nfunction _parseRange(input) {\r\n    if (typeof (input) === \"number\") {\r\n        var value = input;\r\n        return { min: value, max: value };\r\n    }\r\n    var range = input;\r\n    if (range instanceof Object && \"min\" in range && \"max\" in range) {\r\n        return range;\r\n    }\r\n    throw new Error(\"input '\" + input + \"' can't be parsed as an Range\");\r\n}\r\nfunction _parseStyleValue(style, property) {\r\n    var value = style.getPropertyValue(property);\r\n    var parsedValue = parseFloat(value);\r\n    return parsedValue || 0;\r\n}\r\n/**\r\n * Returns an array containing all ancestor `HTMLElement`s, starting at the\r\n * provided element and usually ending with the `<body>` element.\r\n */\r\nfunction getHtmlElementAncestors(elem) {\r\n    var elems = [];\r\n    while (elem && elem instanceof HTMLElement) {\r\n        elems.push(elem);\r\n        elem = elem.parentElement;\r\n    }\r\n    return elems;\r\n}\r\nexports.getHtmlElementAncestors = getHtmlElementAncestors;\r\n/**\r\n * Returns the `ICssTransformMatrix` of an element, if defined in its computed\r\n * style. Returns `null` if there is no transform on the element.\r\n */\r\nfunction getElementTransform(elem) {\r\n    var style = window.getComputedStyle(elem, null);\r\n    var transform = style.getPropertyValue(\"-webkit-transform\") ||\r\n        style.getPropertyValue(\"-moz-transform\") ||\r\n        style.getPropertyValue(\"-ms-transform\") ||\r\n        style.getPropertyValue(\"-o-transform\") ||\r\n        style.getPropertyValue(\"transform\");\r\n    return parseTransformMatrix(transform);\r\n}\r\nexports.getElementTransform = getElementTransform;\r\nvar _MATRIX_REGEX = /^matrix\\(([^)]+)\\)$/;\r\nvar _SPLIT_REGEX = /[, ]+/;\r\n/**\r\n * Attempts to parse a string such as `\"matrix(1, 0, 1, 1, 100, 0)\"` into an\r\n * array such as `[1, 0, 1, 1, 100, 0]`.\r\n *\r\n * If unable to do so, `null` is returned.\r\n */\r\nfunction parseTransformMatrix(transform) {\r\n    if (transform == null || transform === \"none\") {\r\n        return null;\r\n    }\r\n    var matrixStrings = transform.match(_MATRIX_REGEX);\r\n    if (matrixStrings == null || matrixStrings.length < 2) {\r\n        return null;\r\n    }\r\n    var matrix = matrixStrings[1].split(_SPLIT_REGEX).map(function (v) { return parseFloat(v); });\r\n    if (matrix.length != 6) {\r\n        return null;\r\n    }\r\n    return matrix;\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/utils/domUtils.ts\n// module id = 58\n// module chunks = 0","\"use strict\";\r\n/**\r\n * Copyright 2014-present Palantir Technologies\r\n * @license MIT\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar d3 = require(\"d3\");\r\nvar domUtils_1 = require(\"./domUtils\");\r\nvar nativeMath = window.Math;\r\nvar _IDENTITY_TRANSFORM = [1, 0, 0, 1, 0, 0];\r\n/**\r\n * Checks if x is between a and b.\r\n *\r\n * @param {number} x The value to test if in range\r\n * @param {number} a The beginning of the (inclusive) range\r\n * @param {number} b The ending of the (inclusive) range\r\n * @return {boolean} Whether x is in [a, b]\r\n */\r\nfunction inRange(x, a, b) {\r\n    return (nativeMath.min(a, b) <= x && x <= nativeMath.max(a, b));\r\n}\r\nexports.inRange = inRange;\r\n/**\r\n * Clamps x to the range [min, max].\r\n *\r\n * @param {number} x The value to be clamped.\r\n * @param {number} min The minimum value.\r\n * @param {number} max The maximum value.\r\n * @return {number} A clamped value in the range [min, max].\r\n */\r\nfunction clamp(x, min, max) {\r\n    return nativeMath.min(nativeMath.max(min, x), max);\r\n}\r\nexports.clamp = clamp;\r\nfunction max(array, firstArg, secondArg) {\r\n    var accessor = typeof (firstArg) === \"function\" ? firstArg : null;\r\n    var defaultValue = accessor == null ? firstArg : secondArg;\r\n    var maxValue = accessor == null ? d3.max(array) : d3.max(array, accessor);\r\n    return maxValue !== undefined ? maxValue : defaultValue;\r\n}\r\nexports.max = max;\r\nfunction min(array, firstArg, secondArg) {\r\n    var accessor = typeof (firstArg) === \"function\" ? firstArg : null;\r\n    var defaultValue = accessor == null ? firstArg : secondArg;\r\n    var minValue = accessor == null ? d3.min(array) : d3.min(array, accessor);\r\n    return minValue !== undefined ? minValue : defaultValue;\r\n}\r\nexports.min = min;\r\n/**\r\n * Returns true **only** if x is NaN\r\n */\r\nfunction isNaN(n) {\r\n    return n !== n;\r\n}\r\nexports.isNaN = isNaN;\r\n/**\r\n * Returns true if the argument is a number, which is not NaN\r\n * Numbers represented as strings do not pass this function\r\n */\r\nfunction isValidNumber(n) {\r\n    return typeof n === \"number\" && n - n < 1;\r\n}\r\nexports.isValidNumber = isValidNumber;\r\n/**\r\n * Generates an array of consecutive, strictly increasing numbers\r\n * in the range [start, stop) separeted by step\r\n */\r\nfunction range(start, stop, step) {\r\n    if (step === void 0) { step = 1; }\r\n    if (step === 0) {\r\n        throw new Error(\"step cannot be 0\");\r\n    }\r\n    var length = nativeMath.max(nativeMath.ceil((stop - start) / step), 0);\r\n    var range = [];\r\n    for (var i = 0; i < length; ++i) {\r\n        range[i] = start + step * i;\r\n    }\r\n    return range;\r\n}\r\nexports.range = range;\r\n/**\r\n * Returns the square of the distance between two points\r\n *\r\n * @param {Point} p1\r\n * @param {Point} p2\r\n * @return {number} dist(p1, p2)^2\r\n */\r\nfunction distanceSquared(p1, p2) {\r\n    return nativeMath.pow(p2.y - p1.y, 2) + nativeMath.pow(p2.x - p1.x, 2);\r\n}\r\nexports.distanceSquared = distanceSquared;\r\nfunction degreesToRadians(degree) {\r\n    return degree / 360 * nativeMath.PI * 2;\r\n}\r\nexports.degreesToRadians = degreesToRadians;\r\n/**\r\n * Returns if the point is within the bounds. Points along\r\n * the bounds are considered \"within\" as well.\r\n * @param {Point} p Point in considerations.\r\n * @param {Bounds} bounds Bounds within which to check for inclusion.\r\n */\r\nfunction within(p, bounds) {\r\n    return bounds.topLeft.x <= p.x\r\n        && bounds.bottomRight.x >= p.x\r\n        && bounds.topLeft.y <= p.y\r\n        && bounds.bottomRight.y >= p.y;\r\n}\r\nexports.within = within;\r\n/**\r\n * Returns whether the first bounds intersects the second bounds.\r\n * Pass primitive numbers directly for performance.\r\n *\r\n * Assumes width and heights are positive.\r\n */\r\nfunction boundsIntersects(aX, aY, aWidth, aHeight, bX, bY, bWidth, bHeight) {\r\n    return aX <= bX + bWidth &&\r\n        bX <= aX + aWidth &&\r\n        aY <= bY + bHeight &&\r\n        bY <= aY + aHeight;\r\n}\r\nexports.boundsIntersects = boundsIntersects;\r\n/**\r\n * Returns a `ICssTransformMatrix` representing the cumulative transformation of\r\n * the element and all its parents. This transform converts from top-level\r\n * clientX/clientY coordinates (such as document mouse events) to internal\r\n * component offsetX/offsetY coordinates.\r\n *\r\n * Use `applyTransform` to convert from client coordinates to element\r\n * coordinates, accounting for all CSS transforms applied to that element.\r\n *\r\n * Note that this handles css `transform` but does not handle css\r\n * `transform-origin` values other than default (\"50% 50%\").\r\n */\r\nfunction getCumulativeTransform(element) {\r\n    var elems = domUtils_1.getHtmlElementAncestors(element);\r\n    var transform = _IDENTITY_TRANSFORM;\r\n    var offsetParent = null;\r\n    for (var _i = 0, elems_1 = elems; _i < elems_1.length; _i++) {\r\n        var elem = elems_1[_i];\r\n        // apply css transform from any ancestor element\r\n        var elementTransform = domUtils_1.getElementTransform(elem);\r\n        if (elementTransform != null) {\r\n            var midX = elem.clientWidth / 2;\r\n            var midY = elem.clientHeight / 2;\r\n            transform = multiplyTranslate(transform, [midX, midY]);\r\n            transform = multiplyMatrix(transform, invertMatrix(elementTransform));\r\n            transform = multiplyTranslate(transform, [-midX, -midY]);\r\n        }\r\n        // apply scroll offsets from any ancestor element\r\n        var offsetX = elem.scrollLeft;\r\n        var offsetY = elem.scrollTop;\r\n        // apply client+offset from only acenstor \"offsetParent\"\r\n        if (offsetParent === null || elem === offsetParent) {\r\n            offsetX -= elem.offsetLeft + elem.clientLeft;\r\n            offsetY -= elem.offsetTop + elem.clientTop;\r\n            offsetParent = elem.offsetParent;\r\n        }\r\n        transform = multiplyTranslate(transform, [offsetX, offsetY]);\r\n    }\r\n    return transform;\r\n}\r\nexports.getCumulativeTransform = getCumulativeTransform;\r\n/**\r\n * Straightforward matrix multiplication of homogenized css transform matrices.\r\n */\r\nfunction multiplyMatrix(a, b) {\r\n    return [\r\n        a[0] * b[0] + a[2] * b[1],\r\n        a[1] * b[0] + a[3] * b[1],\r\n        a[0] * b[2] + a[2] * b[3],\r\n        a[1] * b[2] + a[3] * b[3],\r\n        a[0] * b[4] + a[2] * b[5] + a[4],\r\n        a[1] * b[4] + a[3] * b[5] + a[5],\r\n    ];\r\n}\r\nexports.multiplyMatrix = multiplyMatrix;\r\n/**\r\n * Prepends translation to transformation matrix.\r\n *\r\n * Equivalent to `multiplyMatrix([1, 0, 0, 1, ...v], b)`\r\n */\r\nfunction premultiplyTranslate(v, b) {\r\n    return [\r\n        b[0], b[1], b[2], b[3],\r\n        b[4] + v[0],\r\n        b[5] + v[1],\r\n    ];\r\n}\r\nexports.premultiplyTranslate = premultiplyTranslate;\r\n/**\r\n * Appends translation to transformation matrix.\r\n *\r\n * Equivalent to `multiplyMatrix(a, [1, 0, 0, 1, ...v])`\r\n */\r\nfunction multiplyTranslate(a, v) {\r\n    return [\r\n        a[0], a[1], a[2], a[3],\r\n        a[0] * v[0] + a[2] * v[1] + a[4],\r\n        a[1] * v[0] + a[3] * v[1] + a[5],\r\n    ];\r\n}\r\nexports.multiplyTranslate = multiplyTranslate;\r\n/**\r\n * Analytical inverse of a `ICssTransformMatrix` analogous to a non-singular\r\n * homogenous 3x3 matrix.\r\n *\r\n * http://mathworld.wolfram.com/MatrixInverse.html\r\n * https://stackoverflow.com/questions/2624422/efficient-4x4-matrix-inverse-affine-transform\r\n */\r\nfunction invertMatrix(a) {\r\n    var determinant = a[0] * a[3] - a[1] * a[2];\r\n    if (determinant === 0) {\r\n        throw new Error(\"singular matrix\");\r\n    }\r\n    var inverseDeterminant = 1 / determinant;\r\n    return [\r\n        inverseDeterminant * a[3],\r\n        inverseDeterminant * -a[1],\r\n        inverseDeterminant * -a[2],\r\n        inverseDeterminant * a[0],\r\n        inverseDeterminant * (-a[3] * a[4] + a[2] * a[5]),\r\n        inverseDeterminant * (a[1] * a[4] + -a[0] * a[5]),\r\n    ];\r\n}\r\nexports.invertMatrix = invertMatrix;\r\n/**\r\n * Applies the `ICssTransformMatrix` to the `Point`.\r\n *\r\n * Returns a new `Point`.\r\n */\r\nfunction applyTransform(a, p) {\r\n    return {\r\n        x: a[0] * p.x + a[2] * p.y + a[4],\r\n        y: a[1] * p.x + a[3] * p.y + a[5],\r\n    };\r\n}\r\nexports.applyTransform = applyTransform;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/utils/mathUtils.ts\n// module id = 59\n// module chunks = 0","\"use strict\";\r\n/**\r\n * Copyright 2017-present Palantir Technologies\r\n * @license MIT\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar rTreeSplitStrategies_1 = require(\"./rTreeSplitStrategies\");\r\n/**\r\n * The maximum number of children in an r-tree node before we attempt to split.\r\n * This must be >= 2.\r\n */\r\nvar DEFAULT_MAX_NODE_CHILDREN = 5;\r\n/**\r\n * There are several strategies for splitting nodes that contain overlapping\r\n * regions. By default we use `SplitStrategyLinear` which minimizes the change\r\n * in node bounding box area.\r\n */\r\nvar DEFAULT_SPLIT_STRATEGY = new rTreeSplitStrategies_1.SplitStrategyLinear();\r\n/**\r\n * The return result of predicates used with `RTree.queryNodes`.\r\n *\r\n * The `PASS_AND_OVERWRITE` value will overwrite previous results\r\n * when the predicate finds a more optimal result.\r\n */\r\nvar QueryPredicateResult;\r\n(function (QueryPredicateResult) {\r\n    QueryPredicateResult[QueryPredicateResult[\"PASS\"] = 0] = \"PASS\";\r\n    QueryPredicateResult[QueryPredicateResult[\"FAIL\"] = 1] = \"FAIL\";\r\n    QueryPredicateResult[QueryPredicateResult[\"PASS_AND_OVERWRITE\"] = 2] = \"PASS_AND_OVERWRITE\";\r\n})(QueryPredicateResult = exports.QueryPredicateResult || (exports.QueryPredicateResult = {}));\r\n/**\r\n * Creates a node predicate for use with `RTree.queryNodes`\r\n *\r\n * @param point - the query point\r\n * @param nearFn - an `IDistanceFunction` from the query point to the nearest\r\n * point on the node bounds\r\n * @param farFn - an `IDistanceFunction` from the query point to the farthest\r\n * point on the node bounds\r\n */\r\nfunction createMinimizingNodePredicate(point, nearFn, farFn) {\r\n    var nearestLeafDistance = Infinity;\r\n    var nearestBranchDistance = Infinity;\r\n    var farthestBranchDistance = Infinity;\r\n    return function (node) {\r\n        var near = nearFn(node.bounds, point);\r\n        var far = farFn(node.bounds, point);\r\n        // assumption: node.value indicates that parent is a leaf\r\n        if (node.value != null) {\r\n            if (near < nearestLeafDistance) {\r\n                nearestLeafDistance = near;\r\n                nearestBranchDistance = near;\r\n                farthestBranchDistance = far;\r\n                return QueryPredicateResult.PASS_AND_OVERWRITE;\r\n            }\r\n            else if (near === nearestLeafDistance) {\r\n                return QueryPredicateResult.PASS;\r\n            }\r\n            else {\r\n                return QueryPredicateResult.FAIL;\r\n            }\r\n        }\r\n        else {\r\n            if (near > farthestBranchDistance) {\r\n                return QueryPredicateResult.FAIL;\r\n            }\r\n            else {\r\n                nearestBranchDistance = Math.min(near, nearestBranchDistance);\r\n                farthestBranchDistance = Math.max(far, farthestBranchDistance);\r\n                return QueryPredicateResult.PASS;\r\n            }\r\n        }\r\n    };\r\n}\r\nexports.createMinimizingNodePredicate = createMinimizingNodePredicate;\r\n/**\r\n * Create a `Array.sort` function from a query point and a distance function.\r\n */\r\nfunction createNodeSort(point, distanceFn) {\r\n    return function (a, b) {\r\n        return distanceFn(b.bounds, point) - distanceFn(a.bounds, point);\r\n    };\r\n}\r\nexports.createNodeSort = createNodeSort;\r\n/**\r\n * R-Tree is a multidimensional spatial region tree. It stores entries that have\r\n * arbitrarily overlapping bounding boxes and supports efficient point and\r\n * bounding box overlap queries.\r\n *\r\n * Average search time complexity is O(log_M(N)) where M = max children per node\r\n * and N is number of values stored in tree.\r\n *\r\n * It is similar in purpose to a quadtree except quadtrees can only store a\r\n * single point per entry. Also, the space-partitioning structure of quadtrees\r\n * provides guarantees that any given value has no neighbors closer than its\r\n * node's bounds, whereas r-trees provide no such guarantees.\r\n */\r\nvar RTree = /** @class */ (function () {\r\n    function RTree(maxNodeChildren, splitStrategy) {\r\n        if (maxNodeChildren === void 0) { maxNodeChildren = DEFAULT_MAX_NODE_CHILDREN; }\r\n        if (splitStrategy === void 0) { splitStrategy = DEFAULT_SPLIT_STRATEGY; }\r\n        this.maxNodeChildren = maxNodeChildren;\r\n        this.splitStrategy = splitStrategy;\r\n        this.root = new RTreeNode(true);\r\n        this.size = 0;\r\n    }\r\n    RTree.prototype.getRoot = function () {\r\n        return this.root;\r\n    };\r\n    RTree.prototype.clear = function () {\r\n        this.root = new RTreeNode(true);\r\n        this.size = 0;\r\n    };\r\n    RTree.prototype.insert = function (bounds, value) {\r\n        var node = this.root;\r\n        // Choose subtree until we find a leaf\r\n        while (!node.leaf) {\r\n            node = node.subtree(bounds);\r\n        }\r\n        // Insert new value node into leaf node\r\n        var valueNode = RTreeNode.valueNode(bounds, value);\r\n        node.insert(valueNode);\r\n        this.size += 1;\r\n        // While node overflows, split and walk up\r\n        while (node.overflow(this.maxNodeChildren)) {\r\n            node = node.split(this.splitStrategy);\r\n            if (node.parent == null) {\r\n                this.root = node;\r\n            }\r\n        }\r\n        return valueNode;\r\n    };\r\n    RTree.prototype.locate = function (xy) {\r\n        return this.query(function (b) { return b.contains(xy); });\r\n    };\r\n    /**\r\n     * Returns an array of `T` values that are the \"nearest\" to the query point.\r\n     *\r\n     * Nearness is measured as the absolute distance from the query point to the\r\n     * nearest edge of the node bounds. If the node bounds contains the query\r\n     * point, the distance is 0.\r\n     */\r\n    RTree.prototype.locateNearest = function (xy) {\r\n        var predicate = createMinimizingNodePredicate(xy, RTreeBounds.distanceSquaredToNearEdge, RTreeBounds.distanceSquaredToFarEdge);\r\n        var nodes = this.queryNodes(predicate);\r\n        return nodes.map(function (node) { return node.value; });\r\n    };\r\n    /**\r\n     * Returns an array of `T` values that are the \"nearest\" to the query point.\r\n     *\r\n     * Nearness is measured as the 1-dimensional absolute distance from the\r\n     * query's x point to the nearest edge of the node bounds. If the node\r\n     * bounds contains the query point, the distance is 0.\r\n     *\r\n     * The results are sorted by y-coordinate nearness.\r\n     */\r\n    RTree.prototype.locateNearestX = function (xy) {\r\n        var predicate = createMinimizingNodePredicate(xy, RTreeBounds.absoluteDistanceToNearEdgeX, RTreeBounds.absoluteDistanceToFarEdgeX);\r\n        var nodes = this.queryNodes(predicate);\r\n        nodes.sort(createNodeSort(xy, RTreeBounds.absoluteDistanceToNearEdgeY));\r\n        return nodes.map(function (node) { return node.value; });\r\n    };\r\n    /**\r\n     * Returns an array of `T` values that are the \"nearest\" to the query point.\r\n     *\r\n     * Nearness is measured as the 1-dimensional absolute distance from the\r\n     * query's y point to the nearest edge of the node bounds. If the node\r\n     * bounds contains the query point, the distance is 0.\r\n     *\r\n     * The results are sorted by x-coordinate nearness.\r\n     */\r\n    RTree.prototype.locateNearestY = function (xy) {\r\n        var predicate = createMinimizingNodePredicate(xy, RTreeBounds.absoluteDistanceToNearEdgeY, RTreeBounds.absoluteDistanceToFarEdgeY);\r\n        var nodes = this.queryNodes(predicate);\r\n        nodes.sort(createNodeSort(xy, RTreeBounds.absoluteDistanceToNearEdgeX));\r\n        return nodes.map(function (node) { return node.value; });\r\n    };\r\n    RTree.prototype.intersect = function (bounds) {\r\n        return this.query(function (b) { return RTreeBounds.isBoundsOverlapBounds(b, bounds); });\r\n    };\r\n    RTree.prototype.intersectX = function (bounds) {\r\n        return this.query(function (b) { return RTreeBounds.isBoundsOverlapX(b, bounds); });\r\n    };\r\n    RTree.prototype.intersectY = function (bounds) {\r\n        return this.query(function (b) { return RTreeBounds.isBoundsOverlapY(b, bounds); });\r\n    };\r\n    RTree.prototype.query = function (predicate) {\r\n        var results = [];\r\n        if (this.root.bounds != null && !predicate(this.root.bounds)) {\r\n            return results;\r\n        }\r\n        var candidates = [this.root];\r\n        while (candidates.length > 0) {\r\n            var candidate = candidates.shift();\r\n            for (var i = 0; i < candidate.entries.length; i++) {\r\n                var entry = candidate.entries[i];\r\n                if (predicate(entry.bounds)) {\r\n                    if (candidate.leaf) {\r\n                        results.push(entry.value);\r\n                    }\r\n                    else {\r\n                        candidates.push(entry);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return results;\r\n    };\r\n    RTree.prototype.queryNodes = function (predicate) {\r\n        var results = [];\r\n        if (this.root.bounds != null && predicate(this.root) === QueryPredicateResult.FAIL) {\r\n            return results;\r\n        }\r\n        var candidates = [this.root];\r\n        while (candidates.length > 0) {\r\n            var candidate = candidates.shift();\r\n            for (var i = 0; i < candidate.entries.length; i++) {\r\n                var entry = candidate.entries[i];\r\n                var p = predicate(entry);\r\n                if (p === QueryPredicateResult.PASS_AND_OVERWRITE) {\r\n                    results = [];\r\n                }\r\n                if (p === QueryPredicateResult.PASS || p === QueryPredicateResult.PASS_AND_OVERWRITE) {\r\n                    if (candidate.leaf) {\r\n                        results.push(entry);\r\n                    }\r\n                    else {\r\n                        candidates.push(entry);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return results;\r\n    };\r\n    return RTree;\r\n}());\r\nexports.RTree = RTree;\r\nvar RTreeNode = /** @class */ (function () {\r\n    function RTreeNode(leaf) {\r\n        this.leaf = leaf;\r\n        this.bounds = null;\r\n        this.entries = [];\r\n        this.parent = null;\r\n        this.value = null;\r\n    }\r\n    RTreeNode.valueNode = function (bounds, value) {\r\n        var node = new RTreeNode(true);\r\n        node.bounds = bounds;\r\n        node.value = value;\r\n        return node;\r\n    };\r\n    /**\r\n     * Returns `true` iff this node has more children than the `maxNodeChildren`\r\n     * parameter.\r\n     */\r\n    RTreeNode.prototype.overflow = function (maxNodeChildren) {\r\n        return this.entries.length > maxNodeChildren;\r\n    };\r\n    /**\r\n     * Inserts a child node and updates the ancestry bounds.\r\n     */\r\n    RTreeNode.prototype.insert = function (node) {\r\n        this.entries.push(node);\r\n        node.parent = this;\r\n        // Update ancestor bounds\r\n        var ancestor = this;\r\n        while (ancestor != null) {\r\n            ancestor.bounds = RTreeBounds.unionAll([ancestor.bounds, node.bounds]);\r\n            ancestor = ancestor.parent;\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Removes a child node and updates the ancestry bounds.\r\n     *\r\n     * If the node argument is not a child, do nothing.\r\n     */\r\n    RTreeNode.prototype.remove = function (node) {\r\n        var i = this.entries.indexOf(node);\r\n        if (i >= 0) {\r\n            this.entries.splice(i, 1);\r\n            // Update ancestor bounds\r\n            var ancestor = this;\r\n            while (ancestor != null) {\r\n                ancestor.bounds = RTreeBounds.unionAll(ancestor.entries.map(function (e) { return e.bounds; }));\r\n                ancestor = ancestor.parent;\r\n            }\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Chooses an node from then entries that minimizes the area difference that\r\n     * adding the bounds the each entry would cause.\r\n     */\r\n    RTreeNode.prototype.subtree = function (bounds) {\r\n        var minDiff = Infinity;\r\n        var minEntry = null;\r\n        // choose entry for which the addition least increases the entry's area\r\n        for (var i = 0; i < this.entries.length; i++) {\r\n            var entry = this.entries[i];\r\n            var diffArea = entry.unionAreaDifference(bounds);\r\n            if (diffArea < minDiff || (\r\n            // break ties to node with fewest children\r\n            diffArea === minDiff &&\r\n                minEntry != null &&\r\n                entry.entries.length < minEntry.entries.length)) {\r\n                minEntry = entry;\r\n            }\r\n        }\r\n        return minEntry;\r\n    };\r\n    /**\r\n     * Splits this node by creating two new nodes and dividing the this node's\r\n     * children between them. This node is removed from its parent and the two\r\n     * new nodes are added.\r\n     *\r\n     * If this node is the root, a new parent node is created.\r\n     *\r\n     * Returns the parent node.\r\n     */\r\n    RTreeNode.prototype.split = function (strategy) {\r\n        // Remove self from parent.\r\n        if (this.parent != null) {\r\n            this.parent.remove(this);\r\n        }\r\n        // Create children from split\r\n        var children = [\r\n            new RTreeNode(this.leaf),\r\n            new RTreeNode(this.leaf),\r\n        ];\r\n        strategy.split(this.entries, children);\r\n        // Add new nodes to parent\r\n        // If root, create new non-leaf node as parent.\r\n        var parent = this.parent != null ? this.parent : new RTreeNode(false);\r\n        parent.insert(children[0]);\r\n        parent.insert(children[1]);\r\n        // Always make the parent a non-leaf after split\r\n        parent.leaf = false;\r\n        return parent;\r\n    };\r\n    /**\r\n     * Returns the difference in area that adding an entry `bounds` to the node\r\n     * would cause.\r\n     */\r\n    RTreeNode.prototype.unionAreaDifference = function (bounds) {\r\n        return Math.abs(RTreeBounds.union(this.bounds, bounds).area() - this.bounds.area());\r\n    };\r\n    /**\r\n     * Returns the depth from this node to the deepest leaf descendant.\r\n     */\r\n    RTreeNode.prototype.maxDepth = function () {\r\n        if (this.leaf)\r\n            return 1;\r\n        return 1 + this.entries.map(function (e) { return e.maxDepth(); }).reduce(function (a, b) { return Math.max(a, b); });\r\n    };\r\n    return RTreeNode;\r\n}());\r\nexports.RTreeNode = RTreeNode;\r\nvar RTreeBounds = /** @class */ (function () {\r\n    function RTreeBounds(xl, yl, xh, yh) {\r\n        this.xl = xl;\r\n        this.yl = yl;\r\n        this.xh = xh;\r\n        this.yh = yh;\r\n        this.width = this.xh - this.xl;\r\n        this.height = this.yh - this.yl;\r\n    }\r\n    RTreeBounds.xywh = function (x, y, w, h) {\r\n        return new RTreeBounds(x, y, x + w, y + h);\r\n    };\r\n    RTreeBounds.entityBounds = function (bounds) {\r\n        return new RTreeBounds(bounds.x, bounds.y, bounds.x + bounds.width, bounds.y + bounds.height);\r\n    };\r\n    RTreeBounds.bounds = function (bounds) {\r\n        return RTreeBounds.pointPair(bounds.topLeft, bounds.bottomRight);\r\n    };\r\n    RTreeBounds.pointPair = function (p0, p1) {\r\n        return new RTreeBounds(Math.min(p0.x, p1.x), Math.min(p0.y, p1.y), Math.max(p0.x, p1.x), Math.max(p0.y, p1.y));\r\n    };\r\n    RTreeBounds.points = function (points) {\r\n        if (points.length < 2) {\r\n            throw new Error(\"need at least 2 points to create bounds\");\r\n        }\r\n        var xs = points.map(function (p) { return p.x; });\r\n        var ys = points.map(function (p) { return p.y; });\r\n        return new RTreeBounds(xs.reduce(function (a, b) { return Math.min(a, b); }), ys.reduce(function (a, b) { return Math.min(a, b); }), xs.reduce(function (a, b) { return Math.max(a, b); }), ys.reduce(function (a, b) { return Math.max(a, b); }));\r\n    };\r\n    RTreeBounds.union = function (b0, b1) {\r\n        return new RTreeBounds(Math.min(b0.xl, b1.xl), Math.min(b0.yl, b1.yl), Math.max(b0.xh, b1.xh), Math.max(b0.yh, b1.yh));\r\n    };\r\n    RTreeBounds.unionAll = function (bounds) {\r\n        bounds = bounds.filter(function (b) { return b != null; });\r\n        if (bounds.length === 0) {\r\n            return null;\r\n        }\r\n        return bounds.reduce(function (b0, b1) { return RTreeBounds.union(b0, b1); });\r\n    };\r\n    /**\r\n     * Returns true if `a` overlaps `b` in the x and y axes.\r\n     *\r\n     * Touching counts as overlap.\r\n     */\r\n    RTreeBounds.isBoundsOverlapBounds = function (a, b) {\r\n        return RTreeBounds.isBoundsOverlapX(a, b) && RTreeBounds.isBoundsOverlapY(a, b);\r\n    };\r\n    /**\r\n     * Returns true if `a` overlaps `b` in the x axis only.\r\n     *\r\n     * Touching counts as overlap.\r\n     */\r\n    RTreeBounds.isBoundsOverlapX = function (a, b) {\r\n        return !(a.xh < b.xl) && !(a.xl > b.xh);\r\n    };\r\n    /**\r\n     * Returns true if `a` overlaps `b` in the y axis only.\r\n     *\r\n     * Touching counts as overlap.\r\n     */\r\n    RTreeBounds.isBoundsOverlapY = function (a, b) {\r\n        return !(a.yh < b.yl) && !(a.yl > b.yh);\r\n    };\r\n    /**\r\n     * Returns the orthogonal absolute distance in the x-dimension from point\r\n     * `p` to the nearest edge of `bounds`.\r\n     *\r\n     * If `p.x` is inside the bounds returns `0`.\r\n     */\r\n    RTreeBounds.absoluteDistanceToNearEdgeX = function (bounds, p) {\r\n        var half = bounds.width / 2;\r\n        var mid = bounds.xl + half;\r\n        return Math.max(Math.abs(p.x - mid) - half, 0);\r\n    };\r\n    /**\r\n     * Returns the orthogonal absolute distance in the y-dimension from point\r\n     * `p` to the nearest edge of `bounds`.\r\n     *\r\n     * If `p.y` is inside the bounds returns `0`.\r\n     */\r\n    RTreeBounds.absoluteDistanceToNearEdgeY = function (bounds, p) {\r\n        var half = bounds.height / 2;\r\n        var mid = bounds.yl + half;\r\n        return Math.max(Math.abs(p.y - mid) - half, 0);\r\n    };\r\n    /**\r\n     * Returns the orthogonal absolute distance in the x-dimension from point\r\n     * `p` to the farthest edge of `bounds`.\r\n     *\r\n     * If `p.x` is inside the bounds returns `0`.\r\n     */\r\n    RTreeBounds.absoluteDistanceToFarEdgeX = function (bounds, p) {\r\n        var near = RTreeBounds.absoluteDistanceToNearEdgeX(bounds, p);\r\n        return near === 0 ? 0 : near + bounds.width;\r\n    };\r\n    /**\r\n     * Returns the orthogonal absolute distance in the y-dimension from point\r\n     * `p` to the farthest edge of `bounds`.\r\n     *\r\n     * If `p.y` is inside the bounds returns `0`.\r\n     */\r\n    RTreeBounds.absoluteDistanceToFarEdgeY = function (bounds, p) {\r\n        var near = RTreeBounds.absoluteDistanceToNearEdgeY(bounds, p);\r\n        return near === 0 ? 0 : near + bounds.height;\r\n    };\r\n    /**\r\n     * Returns the distance squared from `p` to the nearest edge of `bounds`. If\r\n     * the point touches or is inside the bounds, returns `0`;\r\n     *\r\n     * https://gamedev.stackexchange.com/questions/44483/how-do-i-calculate-distance-between-a-point-and-an-axis-aligned-rectangle\r\n     */\r\n    RTreeBounds.distanceSquaredToNearEdge = function (bounds, p) {\r\n        var dx = RTreeBounds.absoluteDistanceToNearEdgeX(bounds, p);\r\n        var dy = RTreeBounds.absoluteDistanceToNearEdgeY(bounds, p);\r\n        return dx * dx + dy * dy;\r\n    };\r\n    RTreeBounds.distanceSquaredToFarEdge = function (bounds, p) {\r\n        var dx = RTreeBounds.absoluteDistanceToFarEdgeX(bounds, p);\r\n        var dy = RTreeBounds.absoluteDistanceToFarEdgeY(bounds, p);\r\n        return dx * dx + dy * dy;\r\n    };\r\n    RTreeBounds.prototype.area = function () {\r\n        if (this.areaCached == null) {\r\n            this.areaCached = (this.xh - this.xl) * (this.yh - this.yl);\r\n        }\r\n        return this.areaCached;\r\n    };\r\n    RTreeBounds.prototype.contains = function (xy) {\r\n        return this.xl <= xy.x && this.xh >= xy.x && this.yl <= xy.y && this.yh >= xy.y;\r\n    };\r\n    return RTreeBounds;\r\n}());\r\nexports.RTreeBounds = RTreeBounds;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/utils/rTree.ts\n// module id = 60\n// module chunks = 0","\"use strict\";\r\n/**\r\n * Copyright 2014-present Palantir Technologies\r\n * @license MIT\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * Shim for ES6 set.\r\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set\r\n */\r\nvar Set = /** @class */ (function () {\r\n    function Set() {\r\n        if (typeof window.Set === \"function\") {\r\n            this._es6Set = new window.Set();\r\n        }\r\n        else {\r\n            this._values = [];\r\n        }\r\n        this.size = 0;\r\n    }\r\n    Set.prototype.add = function (value) {\r\n        if (this._es6Set != null) {\r\n            this._es6Set.add(value);\r\n            this.size = this._es6Set.size;\r\n            return this;\r\n        }\r\n        if (!this.has(value)) {\r\n            this._values.push(value);\r\n            this.size = this._values.length;\r\n        }\r\n        return this;\r\n    };\r\n    Set.prototype.delete = function (value) {\r\n        if (this._es6Set != null) {\r\n            var deleted = this._es6Set.delete(value);\r\n            this.size = this._es6Set.size;\r\n            return deleted;\r\n        }\r\n        var index = this._values.indexOf(value);\r\n        if (index !== -1) {\r\n            this._values.splice(index, 1);\r\n            this.size = this._values.length;\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    Set.prototype.has = function (value) {\r\n        if (this._es6Set != null) {\r\n            return this._es6Set.has(value);\r\n        }\r\n        return this._values.indexOf(value) !== -1;\r\n    };\r\n    Set.prototype.forEach = function (callback, thisArg) {\r\n        var _this = this;\r\n        if (this._es6Set != null) {\r\n            var callbackWrapper = function (value, value2) { return callback.call(thisArg, value, value2, _this); };\r\n            this._es6Set.forEach(callbackWrapper, thisArg);\r\n            return;\r\n        }\r\n        this._values.forEach(function (value) {\r\n            callback.call(thisArg, value, value, _this);\r\n        });\r\n    };\r\n    return Set;\r\n}());\r\nexports.Set = Set;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/utils/set.ts\n// module id = 61\n// module chunks = 0","/**\n * @license\n * Lodash <https://lodash.com/>\n * Copyright JS Foundation and other contributors <https://js.foundation/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n;(function() {\n\n  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n  var undefined;\n\n  /** Used as the semantic version number. */\n  var VERSION = '4.17.10';\n\n  /** Used as the size to enable large array optimizations. */\n  var LARGE_ARRAY_SIZE = 200;\n\n  /** Error message constants. */\n  var CORE_ERROR_TEXT = 'Unsupported core-js use. Try https://npms.io/search?q=ponyfill.',\n      FUNC_ERROR_TEXT = 'Expected a function';\n\n  /** Used to stand-in for `undefined` hash values. */\n  var HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n  /** Used as the maximum memoize cache size. */\n  var MAX_MEMOIZE_SIZE = 500;\n\n  /** Used as the internal argument placeholder. */\n  var PLACEHOLDER = '__lodash_placeholder__';\n\n  /** Used to compose bitmasks for cloning. */\n  var CLONE_DEEP_FLAG = 1,\n      CLONE_FLAT_FLAG = 2,\n      CLONE_SYMBOLS_FLAG = 4;\n\n  /** Used to compose bitmasks for value comparisons. */\n  var COMPARE_PARTIAL_FLAG = 1,\n      COMPARE_UNORDERED_FLAG = 2;\n\n  /** Used to compose bitmasks for function metadata. */\n  var WRAP_BIND_FLAG = 1,\n      WRAP_BIND_KEY_FLAG = 2,\n      WRAP_CURRY_BOUND_FLAG = 4,\n      WRAP_CURRY_FLAG = 8,\n      WRAP_CURRY_RIGHT_FLAG = 16,\n      WRAP_PARTIAL_FLAG = 32,\n      WRAP_PARTIAL_RIGHT_FLAG = 64,\n      WRAP_ARY_FLAG = 128,\n      WRAP_REARG_FLAG = 256,\n      WRAP_FLIP_FLAG = 512;\n\n  /** Used as default options for `_.truncate`. */\n  var DEFAULT_TRUNC_LENGTH = 30,\n      DEFAULT_TRUNC_OMISSION = '...';\n\n  /** Used to detect hot functions by number of calls within a span of milliseconds. */\n  var HOT_COUNT = 800,\n      HOT_SPAN = 16;\n\n  /** Used to indicate the type of lazy iteratees. */\n  var LAZY_FILTER_FLAG = 1,\n      LAZY_MAP_FLAG = 2,\n      LAZY_WHILE_FLAG = 3;\n\n  /** Used as references for various `Number` constants. */\n  var INFINITY = 1 / 0,\n      MAX_SAFE_INTEGER = 9007199254740991,\n      MAX_INTEGER = 1.7976931348623157e+308,\n      NAN = 0 / 0;\n\n  /** Used as references for the maximum length and index of an array. */\n  var MAX_ARRAY_LENGTH = 4294967295,\n      MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,\n      HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;\n\n  /** Used to associate wrap methods with their bit flags. */\n  var wrapFlags = [\n    ['ary', WRAP_ARY_FLAG],\n    ['bind', WRAP_BIND_FLAG],\n    ['bindKey', WRAP_BIND_KEY_FLAG],\n    ['curry', WRAP_CURRY_FLAG],\n    ['curryRight', WRAP_CURRY_RIGHT_FLAG],\n    ['flip', WRAP_FLIP_FLAG],\n    ['partial', WRAP_PARTIAL_FLAG],\n    ['partialRight', WRAP_PARTIAL_RIGHT_FLAG],\n    ['rearg', WRAP_REARG_FLAG]\n  ];\n\n  /** `Object#toString` result references. */\n  var argsTag = '[object Arguments]',\n      arrayTag = '[object Array]',\n      asyncTag = '[object AsyncFunction]',\n      boolTag = '[object Boolean]',\n      dateTag = '[object Date]',\n      domExcTag = '[object DOMException]',\n      errorTag = '[object Error]',\n      funcTag = '[object Function]',\n      genTag = '[object GeneratorFunction]',\n      mapTag = '[object Map]',\n      numberTag = '[object Number]',\n      nullTag = '[object Null]',\n      objectTag = '[object Object]',\n      promiseTag = '[object Promise]',\n      proxyTag = '[object Proxy]',\n      regexpTag = '[object RegExp]',\n      setTag = '[object Set]',\n      stringTag = '[object String]',\n      symbolTag = '[object Symbol]',\n      undefinedTag = '[object Undefined]',\n      weakMapTag = '[object WeakMap]',\n      weakSetTag = '[object WeakSet]';\n\n  var arrayBufferTag = '[object ArrayBuffer]',\n      dataViewTag = '[object DataView]',\n      float32Tag = '[object Float32Array]',\n      float64Tag = '[object Float64Array]',\n      int8Tag = '[object Int8Array]',\n      int16Tag = '[object Int16Array]',\n      int32Tag = '[object Int32Array]',\n      uint8Tag = '[object Uint8Array]',\n      uint8ClampedTag = '[object Uint8ClampedArray]',\n      uint16Tag = '[object Uint16Array]',\n      uint32Tag = '[object Uint32Array]';\n\n  /** Used to match empty string literals in compiled template source. */\n  var reEmptyStringLeading = /\\b__p \\+= '';/g,\n      reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n      reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\n  /** Used to match HTML entities and HTML characters. */\n  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g,\n      reUnescapedHtml = /[&<>\"']/g,\n      reHasEscapedHtml = RegExp(reEscapedHtml.source),\n      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\n  /** Used to match template delimiters. */\n  var reEscape = /<%-([\\s\\S]+?)%>/g,\n      reEvaluate = /<%([\\s\\S]+?)%>/g,\n      reInterpolate = /<%=([\\s\\S]+?)%>/g;\n\n  /** Used to match property names within property paths. */\n  var reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n      reIsPlainProp = /^\\w*$/,\n      rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n  /**\n   * Used to match `RegExp`\n   * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n   */\n  var reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g,\n      reHasRegExpChar = RegExp(reRegExpChar.source);\n\n  /** Used to match leading and trailing whitespace. */\n  var reTrim = /^\\s+|\\s+$/g,\n      reTrimStart = /^\\s+/,\n      reTrimEnd = /\\s+$/;\n\n  /** Used to match wrap detail comments. */\n  var reWrapComment = /\\{(?:\\n\\/\\* \\[wrapped with .+\\] \\*\\/)?\\n?/,\n      reWrapDetails = /\\{\\n\\/\\* \\[wrapped with (.+)\\] \\*/,\n      reSplitDetails = /,? & /;\n\n  /** Used to match words composed of alphanumeric characters. */\n  var reAsciiWord = /[^\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7f]+/g;\n\n  /** Used to match backslashes in property paths. */\n  var reEscapeChar = /\\\\(\\\\)?/g;\n\n  /**\n   * Used to match\n   * [ES template delimiters](http://ecma-international.org/ecma-262/7.0/#sec-template-literal-lexical-components).\n   */\n  var reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\n  /** Used to match `RegExp` flags from their coerced string values. */\n  var reFlags = /\\w*$/;\n\n  /** Used to detect bad signed hexadecimal string values. */\n  var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n  /** Used to detect binary string values. */\n  var reIsBinary = /^0b[01]+$/i;\n\n  /** Used to detect host constructors (Safari). */\n  var reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n  /** Used to detect octal string values. */\n  var reIsOctal = /^0o[0-7]+$/i;\n\n  /** Used to detect unsigned integer values. */\n  var reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n  /** Used to match Latin Unicode letters (excluding mathematical operators). */\n  var reLatin = /[\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\xff\\u0100-\\u017f]/g;\n\n  /** Used to ensure capturing order of template delimiters. */\n  var reNoMatch = /($^)/;\n\n  /** Used to match unescaped characters in compiled string literals. */\n  var reUnescapedString = /['\\n\\r\\u2028\\u2029\\\\]/g;\n\n  /** Used to compose unicode character classes. */\n  var rsAstralRange = '\\\\ud800-\\\\udfff',\n      rsComboMarksRange = '\\\\u0300-\\\\u036f',\n      reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n      rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n      rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n      rsDingbatRange = '\\\\u2700-\\\\u27bf',\n      rsLowerRange = 'a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff',\n      rsMathOpRange = '\\\\xac\\\\xb1\\\\xd7\\\\xf7',\n      rsNonCharRange = '\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf',\n      rsPunctuationRange = '\\\\u2000-\\\\u206f',\n      rsSpaceRange = ' \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000',\n      rsUpperRange = 'A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde',\n      rsVarRange = '\\\\ufe0e\\\\ufe0f',\n      rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;\n\n  /** Used to compose unicode capture groups. */\n  var rsApos = \"['\\u2019]\",\n      rsAstral = '[' + rsAstralRange + ']',\n      rsBreak = '[' + rsBreakRange + ']',\n      rsCombo = '[' + rsComboRange + ']',\n      rsDigits = '\\\\d+',\n      rsDingbat = '[' + rsDingbatRange + ']',\n      rsLower = '[' + rsLowerRange + ']',\n      rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',\n      rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n      rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n      rsNonAstral = '[^' + rsAstralRange + ']',\n      rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n      rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n      rsUpper = '[' + rsUpperRange + ']',\n      rsZWJ = '\\\\u200d';\n\n  /** Used to compose unicode regexes. */\n  var rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',\n      rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',\n      rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',\n      rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',\n      reOptMod = rsModifier + '?',\n      rsOptVar = '[' + rsVarRange + ']?',\n      rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n      rsOrdLower = '\\\\d*(?:1st|2nd|3rd|(?![123])\\\\dth)(?=\\\\b|[A-Z_])',\n      rsOrdUpper = '\\\\d*(?:1ST|2ND|3RD|(?![123])\\\\dTH)(?=\\\\b|[a-z_])',\n      rsSeq = rsOptVar + reOptMod + rsOptJoin,\n      rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,\n      rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n  /** Used to match apostrophes. */\n  var reApos = RegExp(rsApos, 'g');\n\n  /**\n   * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and\n   * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).\n   */\n  var reComboMark = RegExp(rsCombo, 'g');\n\n  /** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\n  var reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n  /** Used to match complex or compound words. */\n  var reUnicodeWord = RegExp([\n    rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',\n    rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')',\n    rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower,\n    rsUpper + '+' + rsOptContrUpper,\n    rsOrdUpper,\n    rsOrdLower,\n    rsDigits,\n    rsEmoji\n  ].join('|'), 'g');\n\n  /** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\n  var reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');\n\n  /** Used to detect strings that need a more robust regexp to match words. */\n  var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2,}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\n\n  /** Used to assign default `context` object properties. */\n  var contextProps = [\n    'Array', 'Buffer', 'DataView', 'Date', 'Error', 'Float32Array', 'Float64Array',\n    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Map', 'Math', 'Object',\n    'Promise', 'RegExp', 'Set', 'String', 'Symbol', 'TypeError', 'Uint8Array',\n    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap',\n    '_', 'clearTimeout', 'isFinite', 'parseInt', 'setTimeout'\n  ];\n\n  /** Used to make template sourceURLs easier to identify. */\n  var templateCounter = -1;\n\n  /** Used to identify `toStringTag` values of typed arrays. */\n  var typedArrayTags = {};\n  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\n  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\n  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\n  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\n  typedArrayTags[uint32Tag] = true;\n  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =\n  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\n  typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\n  typedArrayTags[errorTag] = typedArrayTags[funcTag] =\n  typedArrayTags[mapTag] = typedArrayTags[numberTag] =\n  typedArrayTags[objectTag] = typedArrayTags[regexpTag] =\n  typedArrayTags[setTag] = typedArrayTags[stringTag] =\n  typedArrayTags[weakMapTag] = false;\n\n  /** Used to identify `toStringTag` values supported by `_.clone`. */\n  var cloneableTags = {};\n  cloneableTags[argsTag] = cloneableTags[arrayTag] =\n  cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\n  cloneableTags[boolTag] = cloneableTags[dateTag] =\n  cloneableTags[float32Tag] = cloneableTags[float64Tag] =\n  cloneableTags[int8Tag] = cloneableTags[int16Tag] =\n  cloneableTags[int32Tag] = cloneableTags[mapTag] =\n  cloneableTags[numberTag] = cloneableTags[objectTag] =\n  cloneableTags[regexpTag] = cloneableTags[setTag] =\n  cloneableTags[stringTag] = cloneableTags[symbolTag] =\n  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\n  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\n  cloneableTags[errorTag] = cloneableTags[funcTag] =\n  cloneableTags[weakMapTag] = false;\n\n  /** Used to map Latin Unicode letters to basic Latin letters. */\n  var deburredLetters = {\n    // Latin-1 Supplement block.\n    '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n    '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n    '\\xc7': 'C',  '\\xe7': 'c',\n    '\\xd0': 'D',  '\\xf0': 'd',\n    '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n    '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n    '\\xcc': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n    '\\xec': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n    '\\xd1': 'N',  '\\xf1': 'n',\n    '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n    '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n    '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n    '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n    '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n    '\\xc6': 'Ae', '\\xe6': 'ae',\n    '\\xde': 'Th', '\\xfe': 'th',\n    '\\xdf': 'ss',\n    // Latin Extended-A block.\n    '\\u0100': 'A',  '\\u0102': 'A', '\\u0104': 'A',\n    '\\u0101': 'a',  '\\u0103': 'a', '\\u0105': 'a',\n    '\\u0106': 'C',  '\\u0108': 'C', '\\u010a': 'C', '\\u010c': 'C',\n    '\\u0107': 'c',  '\\u0109': 'c', '\\u010b': 'c', '\\u010d': 'c',\n    '\\u010e': 'D',  '\\u0110': 'D', '\\u010f': 'd', '\\u0111': 'd',\n    '\\u0112': 'E',  '\\u0114': 'E', '\\u0116': 'E', '\\u0118': 'E', '\\u011a': 'E',\n    '\\u0113': 'e',  '\\u0115': 'e', '\\u0117': 'e', '\\u0119': 'e', '\\u011b': 'e',\n    '\\u011c': 'G',  '\\u011e': 'G', '\\u0120': 'G', '\\u0122': 'G',\n    '\\u011d': 'g',  '\\u011f': 'g', '\\u0121': 'g', '\\u0123': 'g',\n    '\\u0124': 'H',  '\\u0126': 'H', '\\u0125': 'h', '\\u0127': 'h',\n    '\\u0128': 'I',  '\\u012a': 'I', '\\u012c': 'I', '\\u012e': 'I', '\\u0130': 'I',\n    '\\u0129': 'i',  '\\u012b': 'i', '\\u012d': 'i', '\\u012f': 'i', '\\u0131': 'i',\n    '\\u0134': 'J',  '\\u0135': 'j',\n    '\\u0136': 'K',  '\\u0137': 'k', '\\u0138': 'k',\n    '\\u0139': 'L',  '\\u013b': 'L', '\\u013d': 'L', '\\u013f': 'L', '\\u0141': 'L',\n    '\\u013a': 'l',  '\\u013c': 'l', '\\u013e': 'l', '\\u0140': 'l', '\\u0142': 'l',\n    '\\u0143': 'N',  '\\u0145': 'N', '\\u0147': 'N', '\\u014a': 'N',\n    '\\u0144': 'n',  '\\u0146': 'n', '\\u0148': 'n', '\\u014b': 'n',\n    '\\u014c': 'O',  '\\u014e': 'O', '\\u0150': 'O',\n    '\\u014d': 'o',  '\\u014f': 'o', '\\u0151': 'o',\n    '\\u0154': 'R',  '\\u0156': 'R', '\\u0158': 'R',\n    '\\u0155': 'r',  '\\u0157': 'r', '\\u0159': 'r',\n    '\\u015a': 'S',  '\\u015c': 'S', '\\u015e': 'S', '\\u0160': 'S',\n    '\\u015b': 's',  '\\u015d': 's', '\\u015f': 's', '\\u0161': 's',\n    '\\u0162': 'T',  '\\u0164': 'T', '\\u0166': 'T',\n    '\\u0163': 't',  '\\u0165': 't', '\\u0167': 't',\n    '\\u0168': 'U',  '\\u016a': 'U', '\\u016c': 'U', '\\u016e': 'U', '\\u0170': 'U', '\\u0172': 'U',\n    '\\u0169': 'u',  '\\u016b': 'u', '\\u016d': 'u', '\\u016f': 'u', '\\u0171': 'u', '\\u0173': 'u',\n    '\\u0174': 'W',  '\\u0175': 'w',\n    '\\u0176': 'Y',  '\\u0177': 'y', '\\u0178': 'Y',\n    '\\u0179': 'Z',  '\\u017b': 'Z', '\\u017d': 'Z',\n    '\\u017a': 'z',  '\\u017c': 'z', '\\u017e': 'z',\n    '\\u0132': 'IJ', '\\u0133': 'ij',\n    '\\u0152': 'Oe', '\\u0153': 'oe',\n    '\\u0149': \"'n\", '\\u017f': 's'\n  };\n\n  /** Used to map characters to HTML entities. */\n  var htmlEscapes = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;'\n  };\n\n  /** Used to map HTML entities to characters. */\n  var htmlUnescapes = {\n    '&amp;': '&',\n    '&lt;': '<',\n    '&gt;': '>',\n    '&quot;': '\"',\n    '&#39;': \"'\"\n  };\n\n  /** Used to escape characters for inclusion in compiled string literals. */\n  var stringEscapes = {\n    '\\\\': '\\\\',\n    \"'\": \"'\",\n    '\\n': 'n',\n    '\\r': 'r',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  /** Built-in method references without a dependency on `root`. */\n  var freeParseFloat = parseFloat,\n      freeParseInt = parseInt;\n\n  /** Detect free variable `global` from Node.js. */\n  var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n  /** Detect free variable `self`. */\n  var freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n  /** Used as a reference to the global object. */\n  var root = freeGlobal || freeSelf || Function('return this')();\n\n  /** Detect free variable `exports`. */\n  var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n  /** Detect free variable `module`. */\n  var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n  /** Detect the popular CommonJS extension `module.exports`. */\n  var moduleExports = freeModule && freeModule.exports === freeExports;\n\n  /** Detect free variable `process` from Node.js. */\n  var freeProcess = moduleExports && freeGlobal.process;\n\n  /** Used to access faster Node.js helpers. */\n  var nodeUtil = (function() {\n    try {\n      // Use `util.types` for Node.js 10+.\n      var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n      if (types) {\n        return types;\n      }\n\n      // Legacy `process.binding('util')` for Node.js < 10.\n      return freeProcess && freeProcess.binding && freeProcess.binding('util');\n    } catch (e) {}\n  }());\n\n  /* Node.js helper references. */\n  var nodeIsArrayBuffer = nodeUtil && nodeUtil.isArrayBuffer,\n      nodeIsDate = nodeUtil && nodeUtil.isDate,\n      nodeIsMap = nodeUtil && nodeUtil.isMap,\n      nodeIsRegExp = nodeUtil && nodeUtil.isRegExp,\n      nodeIsSet = nodeUtil && nodeUtil.isSet,\n      nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * A faster alternative to `Function#apply`, this function invokes `func`\n   * with the `this` binding of `thisArg` and the arguments of `args`.\n   *\n   * @private\n   * @param {Function} func The function to invoke.\n   * @param {*} thisArg The `this` binding of `func`.\n   * @param {Array} args The arguments to invoke `func` with.\n   * @returns {*} Returns the result of `func`.\n   */\n  function apply(func, thisArg, args) {\n    switch (args.length) {\n      case 0: return func.call(thisArg);\n      case 1: return func.call(thisArg, args[0]);\n      case 2: return func.call(thisArg, args[0], args[1]);\n      case 3: return func.call(thisArg, args[0], args[1], args[2]);\n    }\n    return func.apply(thisArg, args);\n  }\n\n  /**\n   * A specialized version of `baseAggregator` for arrays.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} setter The function to set `accumulator` values.\n   * @param {Function} iteratee The iteratee to transform keys.\n   * @param {Object} accumulator The initial aggregated object.\n   * @returns {Function} Returns `accumulator`.\n   */\n  function arrayAggregator(array, setter, iteratee, accumulator) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      var value = array[index];\n      setter(accumulator, value, iteratee(value), array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.forEach` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEach(array, iteratee) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (iteratee(array[index], index, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.forEachRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEachRight(array, iteratee) {\n    var length = array == null ? 0 : array.length;\n\n    while (length--) {\n      if (iteratee(array[length], length, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.every` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if all elements pass the predicate check,\n   *  else `false`.\n   */\n  function arrayEvery(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (!predicate(array[index], index, array)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * A specialized version of `_.filter` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {Array} Returns the new filtered array.\n   */\n  function arrayFilter(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (predicate(value, index, array)) {\n        result[resIndex++] = value;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.includes` for arrays without support for\n   * specifying an index to search from.\n   *\n   * @private\n   * @param {Array} [array] The array to inspect.\n   * @param {*} target The value to search for.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludes(array, value) {\n    var length = array == null ? 0 : array.length;\n    return !!length && baseIndexOf(array, value, 0) > -1;\n  }\n\n  /**\n   * This function is like `arrayIncludes` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} [array] The array to inspect.\n   * @param {*} target The value to search for.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludesWith(array, value, comparator) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (comparator(value, array[index])) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * A specialized version of `_.map` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the new mapped array.\n   */\n  function arrayMap(array, iteratee) {\n    var index = -1,\n        length = array == null ? 0 : array.length,\n        result = Array(length);\n\n    while (++index < length) {\n      result[index] = iteratee(array[index], index, array);\n    }\n    return result;\n  }\n\n  /**\n   * Appends the elements of `values` to `array`.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {Array} values The values to append.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayPush(array, values) {\n    var index = -1,\n        length = values.length,\n        offset = array.length;\n\n    while (++index < length) {\n      array[offset + index] = values[index];\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.reduce` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the first element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduce(array, iteratee, accumulator, initAccum) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    if (initAccum && length) {\n      accumulator = array[++index];\n    }\n    while (++index < length) {\n      accumulator = iteratee(accumulator, array[index], index, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.reduceRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the last element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduceRight(array, iteratee, accumulator, initAccum) {\n    var length = array == null ? 0 : array.length;\n    if (initAccum && length) {\n      accumulator = array[--length];\n    }\n    while (length--) {\n      accumulator = iteratee(accumulator, array[length], length, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.some` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if any element passes the predicate check,\n   *  else `false`.\n   */\n  function arraySome(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (predicate(array[index], index, array)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Gets the size of an ASCII `string`.\n   *\n   * @private\n   * @param {string} string The string inspect.\n   * @returns {number} Returns the string size.\n   */\n  var asciiSize = baseProperty('length');\n\n  /**\n   * Converts an ASCII `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function asciiToArray(string) {\n    return string.split('');\n  }\n\n  /**\n   * Splits an ASCII `string` into an array of its words.\n   *\n   * @private\n   * @param {string} The string to inspect.\n   * @returns {Array} Returns the words of `string`.\n   */\n  function asciiWords(string) {\n    return string.match(reAsciiWord) || [];\n  }\n\n  /**\n   * The base implementation of methods like `_.findKey` and `_.findLastKey`,\n   * without support for iteratee shorthands, which iterates over `collection`\n   * using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to inspect.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the found element or its key, else `undefined`.\n   */\n  function baseFindKey(collection, predicate, eachFunc) {\n    var result;\n    eachFunc(collection, function(value, key, collection) {\n      if (predicate(value, key, collection)) {\n        result = key;\n        return false;\n      }\n    });\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.findIndex` and `_.findLastIndex` without\n   * support for iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {number} fromIndex The index to search from.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseFindIndex(array, predicate, fromIndex, fromRight) {\n    var length = array.length,\n        index = fromIndex + (fromRight ? 1 : -1);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (predicate(array[index], index, array)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOf(array, value, fromIndex) {\n    return value === value\n      ? strictIndexOf(array, value, fromIndex)\n      : baseFindIndex(array, baseIsNaN, fromIndex);\n  }\n\n  /**\n   * This function is like `baseIndexOf` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOfWith(array, value, fromIndex, comparator) {\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (comparator(array[index], value)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.isNaN` without support for number objects.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n   */\n  function baseIsNaN(value) {\n    return value !== value;\n  }\n\n  /**\n   * The base implementation of `_.mean` and `_.meanBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the mean.\n   */\n  function baseMean(array, iteratee) {\n    var length = array == null ? 0 : array.length;\n    return length ? (baseSum(array, iteratee) / length) : NAN;\n  }\n\n  /**\n   * The base implementation of `_.property` without support for deep paths.\n   *\n   * @private\n   * @param {string} key The key of the property to get.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function baseProperty(key) {\n    return function(object) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.propertyOf` without support for deep paths.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function basePropertyOf(object) {\n    return function(key) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.reduce` and `_.reduceRight`, without support\n   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} accumulator The initial value.\n   * @param {boolean} initAccum Specify using the first or last element of\n   *  `collection` as the initial value.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the accumulated value.\n   */\n  function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {\n    eachFunc(collection, function(value, index, collection) {\n      accumulator = initAccum\n        ? (initAccum = false, value)\n        : iteratee(accumulator, value, index, collection);\n    });\n    return accumulator;\n  }\n\n  /**\n   * The base implementation of `_.sortBy` which uses `comparer` to define the\n   * sort order of `array` and replaces criteria objects with their corresponding\n   * values.\n   *\n   * @private\n   * @param {Array} array The array to sort.\n   * @param {Function} comparer The function to define sort order.\n   * @returns {Array} Returns `array`.\n   */\n  function baseSortBy(array, comparer) {\n    var length = array.length;\n\n    array.sort(comparer);\n    while (length--) {\n      array[length] = array[length].value;\n    }\n    return array;\n  }\n\n  /**\n   * The base implementation of `_.sum` and `_.sumBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the sum.\n   */\n  function baseSum(array, iteratee) {\n    var result,\n        index = -1,\n        length = array.length;\n\n    while (++index < length) {\n      var current = iteratee(array[index]);\n      if (current !== undefined) {\n        result = result === undefined ? current : (result + current);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.times` without support for iteratee shorthands\n   * or max array length checks.\n   *\n   * @private\n   * @param {number} n The number of times to invoke `iteratee`.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the array of results.\n   */\n  function baseTimes(n, iteratee) {\n    var index = -1,\n        result = Array(n);\n\n    while (++index < n) {\n      result[index] = iteratee(index);\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array\n   * of key-value pairs for `object` corresponding to the property names of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the key-value pairs.\n   */\n  function baseToPairs(object, props) {\n    return arrayMap(props, function(key) {\n      return [key, object[key]];\n    });\n  }\n\n  /**\n   * The base implementation of `_.unary` without support for storing metadata.\n   *\n   * @private\n   * @param {Function} func The function to cap arguments for.\n   * @returns {Function} Returns the new capped function.\n   */\n  function baseUnary(func) {\n    return function(value) {\n      return func(value);\n    };\n  }\n\n  /**\n   * The base implementation of `_.values` and `_.valuesIn` which creates an\n   * array of `object` property values corresponding to the property names\n   * of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the array of property values.\n   */\n  function baseValues(object, props) {\n    return arrayMap(props, function(key) {\n      return object[key];\n    });\n  }\n\n  /**\n   * Checks if a `cache` value for `key` exists.\n   *\n   * @private\n   * @param {Object} cache The cache to query.\n   * @param {string} key The key of the entry to check.\n   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n   */\n  function cacheHas(cache, key) {\n    return cache.has(key);\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the first unmatched string symbol.\n   */\n  function charsStartIndex(strSymbols, chrSymbols) {\n    var index = -1,\n        length = strSymbols.length;\n\n    while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the last unmatched string symbol.\n   */\n  function charsEndIndex(strSymbols, chrSymbols) {\n    var index = strSymbols.length;\n\n    while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Gets the number of `placeholder` occurrences in `array`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} placeholder The placeholder to search for.\n   * @returns {number} Returns the placeholder count.\n   */\n  function countHolders(array, placeholder) {\n    var length = array.length,\n        result = 0;\n\n    while (length--) {\n      if (array[length] === placeholder) {\n        ++result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A\n   * letters to basic Latin letters.\n   *\n   * @private\n   * @param {string} letter The matched letter to deburr.\n   * @returns {string} Returns the deburred letter.\n   */\n  var deburrLetter = basePropertyOf(deburredLetters);\n\n  /**\n   * Used by `_.escape` to convert characters to HTML entities.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  var escapeHtmlChar = basePropertyOf(htmlEscapes);\n\n  /**\n   * Used by `_.template` to escape characters for inclusion in compiled string literals.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeStringChar(chr) {\n    return '\\\\' + stringEscapes[chr];\n  }\n\n  /**\n   * Gets the value at `key` of `object`.\n   *\n   * @private\n   * @param {Object} [object] The object to query.\n   * @param {string} key The key of the property to get.\n   * @returns {*} Returns the property value.\n   */\n  function getValue(object, key) {\n    return object == null ? undefined : object[key];\n  }\n\n  /**\n   * Checks if `string` contains Unicode symbols.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n   */\n  function hasUnicode(string) {\n    return reHasUnicode.test(string);\n  }\n\n  /**\n   * Checks if `string` contains a word composed of Unicode symbols.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {boolean} Returns `true` if a word is found, else `false`.\n   */\n  function hasUnicodeWord(string) {\n    return reHasUnicodeWord.test(string);\n  }\n\n  /**\n   * Converts `iterator` to an array.\n   *\n   * @private\n   * @param {Object} iterator The iterator to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function iteratorToArray(iterator) {\n    var data,\n        result = [];\n\n    while (!(data = iterator.next()).done) {\n      result.push(data.value);\n    }\n    return result;\n  }\n\n  /**\n   * Converts `map` to its key-value pairs.\n   *\n   * @private\n   * @param {Object} map The map to convert.\n   * @returns {Array} Returns the key-value pairs.\n   */\n  function mapToArray(map) {\n    var index = -1,\n        result = Array(map.size);\n\n    map.forEach(function(value, key) {\n      result[++index] = [key, value];\n    });\n    return result;\n  }\n\n  /**\n   * Creates a unary function that invokes `func` with its argument transformed.\n   *\n   * @private\n   * @param {Function} func The function to wrap.\n   * @param {Function} transform The argument transform.\n   * @returns {Function} Returns the new function.\n   */\n  function overArg(func, transform) {\n    return function(arg) {\n      return func(transform(arg));\n    };\n  }\n\n  /**\n   * Replaces all `placeholder` elements in `array` with an internal placeholder\n   * and returns an array of their indexes.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {*} placeholder The placeholder to replace.\n   * @returns {Array} Returns the new array of placeholder indexes.\n   */\n  function replaceHolders(array, placeholder) {\n    var index = -1,\n        length = array.length,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (value === placeholder || value === PLACEHOLDER) {\n        array[index] = PLACEHOLDER;\n        result[resIndex++] = index;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Gets the value at `key`, unless `key` is \"__proto__\".\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {string} key The key of the property to get.\n   * @returns {*} Returns the property value.\n   */\n  function safeGet(object, key) {\n    return key == '__proto__'\n      ? undefined\n      : object[key];\n  }\n\n  /**\n   * Converts `set` to an array of its values.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the values.\n   */\n  function setToArray(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = value;\n    });\n    return result;\n  }\n\n  /**\n   * Converts `set` to its value-value pairs.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the value-value pairs.\n   */\n  function setToPairs(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = [value, value];\n    });\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.indexOf` which performs strict equality\n   * comparisons of values, i.e. `===`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function strictIndexOf(array, value, fromIndex) {\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * A specialized version of `_.lastIndexOf` which performs strict equality\n   * comparisons of values, i.e. `===`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function strictLastIndexOf(array, value, fromIndex) {\n    var index = fromIndex + 1;\n    while (index--) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return index;\n  }\n\n  /**\n   * Gets the number of symbols in `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the string size.\n   */\n  function stringSize(string) {\n    return hasUnicode(string)\n      ? unicodeSize(string)\n      : asciiSize(string);\n  }\n\n  /**\n   * Converts `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function stringToArray(string) {\n    return hasUnicode(string)\n      ? unicodeToArray(string)\n      : asciiToArray(string);\n  }\n\n  /**\n   * Used by `_.unescape` to convert HTML entities to characters.\n   *\n   * @private\n   * @param {string} chr The matched character to unescape.\n   * @returns {string} Returns the unescaped character.\n   */\n  var unescapeHtmlChar = basePropertyOf(htmlUnescapes);\n\n  /**\n   * Gets the size of a Unicode `string`.\n   *\n   * @private\n   * @param {string} string The string inspect.\n   * @returns {number} Returns the string size.\n   */\n  function unicodeSize(string) {\n    var result = reUnicode.lastIndex = 0;\n    while (reUnicode.test(string)) {\n      ++result;\n    }\n    return result;\n  }\n\n  /**\n   * Converts a Unicode `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function unicodeToArray(string) {\n    return string.match(reUnicode) || [];\n  }\n\n  /**\n   * Splits a Unicode `string` into an array of its words.\n   *\n   * @private\n   * @param {string} The string to inspect.\n   * @returns {Array} Returns the words of `string`.\n   */\n  function unicodeWords(string) {\n    return string.match(reUnicodeWord) || [];\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Create a new pristine `lodash` function using the `context` object.\n   *\n   * @static\n   * @memberOf _\n   * @since 1.1.0\n   * @category Util\n   * @param {Object} [context=root] The context object.\n   * @returns {Function} Returns a new `lodash` function.\n   * @example\n   *\n   * _.mixin({ 'foo': _.constant('foo') });\n   *\n   * var lodash = _.runInContext();\n   * lodash.mixin({ 'bar': lodash.constant('bar') });\n   *\n   * _.isFunction(_.foo);\n   * // => true\n   * _.isFunction(_.bar);\n   * // => false\n   *\n   * lodash.isFunction(lodash.foo);\n   * // => false\n   * lodash.isFunction(lodash.bar);\n   * // => true\n   *\n   * // Create a suped-up `defer` in Node.js.\n   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;\n   */\n  var runInContext = (function runInContext(context) {\n    context = context == null ? root : _.defaults(root.Object(), context, _.pick(root, contextProps));\n\n    /** Built-in constructor references. */\n    var Array = context.Array,\n        Date = context.Date,\n        Error = context.Error,\n        Function = context.Function,\n        Math = context.Math,\n        Object = context.Object,\n        RegExp = context.RegExp,\n        String = context.String,\n        TypeError = context.TypeError;\n\n    /** Used for built-in method references. */\n    var arrayProto = Array.prototype,\n        funcProto = Function.prototype,\n        objectProto = Object.prototype;\n\n    /** Used to detect overreaching core-js shims. */\n    var coreJsData = context['__core-js_shared__'];\n\n    /** Used to resolve the decompiled source of functions. */\n    var funcToString = funcProto.toString;\n\n    /** Used to check objects for own properties. */\n    var hasOwnProperty = objectProto.hasOwnProperty;\n\n    /** Used to generate unique IDs. */\n    var idCounter = 0;\n\n    /** Used to detect methods masquerading as native. */\n    var maskSrcKey = (function() {\n      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n      return uid ? ('Symbol(src)_1.' + uid) : '';\n    }());\n\n    /**\n     * Used to resolve the\n     * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n     * of values.\n     */\n    var nativeObjectToString = objectProto.toString;\n\n    /** Used to infer the `Object` constructor. */\n    var objectCtorString = funcToString.call(Object);\n\n    /** Used to restore the original `_` reference in `_.noConflict`. */\n    var oldDash = root._;\n\n    /** Used to detect if a method is native. */\n    var reIsNative = RegExp('^' +\n      funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n      .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n    );\n\n    /** Built-in value references. */\n    var Buffer = moduleExports ? context.Buffer : undefined,\n        Symbol = context.Symbol,\n        Uint8Array = context.Uint8Array,\n        allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined,\n        getPrototype = overArg(Object.getPrototypeOf, Object),\n        objectCreate = Object.create,\n        propertyIsEnumerable = objectProto.propertyIsEnumerable,\n        splice = arrayProto.splice,\n        spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined,\n        symIterator = Symbol ? Symbol.iterator : undefined,\n        symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n    var defineProperty = (function() {\n      try {\n        var func = getNative(Object, 'defineProperty');\n        func({}, '', {});\n        return func;\n      } catch (e) {}\n    }());\n\n    /** Mocked built-ins. */\n    var ctxClearTimeout = context.clearTimeout !== root.clearTimeout && context.clearTimeout,\n        ctxNow = Date && Date.now !== root.Date.now && Date.now,\n        ctxSetTimeout = context.setTimeout !== root.setTimeout && context.setTimeout;\n\n    /* Built-in method references for those with the same name as other `lodash` methods. */\n    var nativeCeil = Math.ceil,\n        nativeFloor = Math.floor,\n        nativeGetSymbols = Object.getOwnPropertySymbols,\n        nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n        nativeIsFinite = context.isFinite,\n        nativeJoin = arrayProto.join,\n        nativeKeys = overArg(Object.keys, Object),\n        nativeMax = Math.max,\n        nativeMin = Math.min,\n        nativeNow = Date.now,\n        nativeParseInt = context.parseInt,\n        nativeRandom = Math.random,\n        nativeReverse = arrayProto.reverse;\n\n    /* Built-in method references that are verified to be native. */\n    var DataView = getNative(context, 'DataView'),\n        Map = getNative(context, 'Map'),\n        Promise = getNative(context, 'Promise'),\n        Set = getNative(context, 'Set'),\n        WeakMap = getNative(context, 'WeakMap'),\n        nativeCreate = getNative(Object, 'create');\n\n    /** Used to store function metadata. */\n    var metaMap = WeakMap && new WeakMap;\n\n    /** Used to lookup unminified function names. */\n    var realNames = {};\n\n    /** Used to detect maps, sets, and weakmaps. */\n    var dataViewCtorString = toSource(DataView),\n        mapCtorString = toSource(Map),\n        promiseCtorString = toSource(Promise),\n        setCtorString = toSource(Set),\n        weakMapCtorString = toSource(WeakMap);\n\n    /** Used to convert symbols to primitives and strings. */\n    var symbolProto = Symbol ? Symbol.prototype : undefined,\n        symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,\n        symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object which wraps `value` to enable implicit method\n     * chain sequences. Methods that operate on and return arrays, collections,\n     * and functions can be chained together. Methods that retrieve a single value\n     * or may return a primitive value will automatically end the chain sequence\n     * and return the unwrapped value. Otherwise, the value must be unwrapped\n     * with `_#value`.\n     *\n     * Explicit chain sequences, which must be unwrapped with `_#value`, may be\n     * enabled using `_.chain`.\n     *\n     * The execution of chained methods is lazy, that is, it's deferred until\n     * `_#value` is implicitly or explicitly called.\n     *\n     * Lazy evaluation allows several methods to support shortcut fusion.\n     * Shortcut fusion is an optimization to merge iteratee calls; this avoids\n     * the creation of intermediate arrays and can greatly reduce the number of\n     * iteratee executions. Sections of a chain sequence qualify for shortcut\n     * fusion if the section is applied to an array and iteratees accept only\n     * one argument. The heuristic for whether a section qualifies for shortcut\n     * fusion is subject to change.\n     *\n     * Chaining is supported in custom builds as long as the `_#value` method is\n     * directly or indirectly included in the build.\n     *\n     * In addition to lodash methods, wrappers have `Array` and `String` methods.\n     *\n     * The wrapper `Array` methods are:\n     * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`\n     *\n     * The wrapper `String` methods are:\n     * `replace` and `split`\n     *\n     * The wrapper methods that support shortcut fusion are:\n     * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,\n     * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,\n     * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`\n     *\n     * The chainable wrapper methods are:\n     * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,\n     * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,\n     * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,\n     * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,\n     * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,\n     * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,\n     * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,\n     * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,\n     * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,\n     * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,\n     * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,\n     * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,\n     * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,\n     * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,\n     * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,\n     * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,\n     * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,\n     * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,\n     * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,\n     * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,\n     * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,\n     * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,\n     * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,\n     * `zipObject`, `zipObjectDeep`, and `zipWith`\n     *\n     * The wrapper methods that are **not** chainable by default are:\n     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,\n     * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,\n     * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,\n     * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,\n     * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,\n     * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,\n     * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,\n     * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,\n     * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,\n     * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,\n     * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,\n     * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,\n     * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,\n     * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,\n     * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,\n     * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,\n     * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,\n     * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,\n     * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,\n     * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,\n     * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,\n     * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,\n     * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,\n     * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,\n     * `upperFirst`, `value`, and `words`\n     *\n     * @name _\n     * @constructor\n     * @category Seq\n     * @param {*} value The value to wrap in a `lodash` instance.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2, 3]);\n     *\n     * // Returns an unwrapped value.\n     * wrapped.reduce(_.add);\n     * // => 6\n     *\n     * // Returns a wrapped value.\n     * var squares = wrapped.map(square);\n     *\n     * _.isArray(squares);\n     * // => false\n     *\n     * _.isArray(squares.value());\n     * // => true\n     */\n    function lodash(value) {\n      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\n        if (value instanceof LodashWrapper) {\n          return value;\n        }\n        if (hasOwnProperty.call(value, '__wrapped__')) {\n          return wrapperClone(value);\n        }\n      }\n      return new LodashWrapper(value);\n    }\n\n    /**\n     * The base implementation of `_.create` without support for assigning\n     * properties to the created object.\n     *\n     * @private\n     * @param {Object} proto The object to inherit from.\n     * @returns {Object} Returns the new object.\n     */\n    var baseCreate = (function() {\n      function object() {}\n      return function(proto) {\n        if (!isObject(proto)) {\n          return {};\n        }\n        if (objectCreate) {\n          return objectCreate(proto);\n        }\n        object.prototype = proto;\n        var result = new object;\n        object.prototype = undefined;\n        return result;\n      };\n    }());\n\n    /**\n     * The function whose prototype chain sequence wrappers inherit from.\n     *\n     * @private\n     */\n    function baseLodash() {\n      // No operation performed.\n    }\n\n    /**\n     * The base constructor for creating `lodash` wrapper objects.\n     *\n     * @private\n     * @param {*} value The value to wrap.\n     * @param {boolean} [chainAll] Enable explicit method chain sequences.\n     */\n    function LodashWrapper(value, chainAll) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__chain__ = !!chainAll;\n      this.__index__ = 0;\n      this.__values__ = undefined;\n    }\n\n    /**\n     * By default, the template delimiters used by lodash are like those in\n     * embedded Ruby (ERB) as well as ES2015 template strings. Change the\n     * following template settings to use alternative delimiters.\n     *\n     * @static\n     * @memberOf _\n     * @type {Object}\n     */\n    lodash.templateSettings = {\n\n      /**\n       * Used to detect `data` property values to be HTML-escaped.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'escape': reEscape,\n\n      /**\n       * Used to detect code to be evaluated.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'evaluate': reEvaluate,\n\n      /**\n       * Used to detect `data` property values to inject.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'interpolate': reInterpolate,\n\n      /**\n       * Used to reference the data object in the template text.\n       *\n       * @memberOf _.templateSettings\n       * @type {string}\n       */\n      'variable': '',\n\n      /**\n       * Used to import variables into the compiled template.\n       *\n       * @memberOf _.templateSettings\n       * @type {Object}\n       */\n      'imports': {\n\n        /**\n         * A reference to the `lodash` function.\n         *\n         * @memberOf _.templateSettings.imports\n         * @type {Function}\n         */\n        '_': lodash\n      }\n    };\n\n    // Ensure wrappers are instances of `baseLodash`.\n    lodash.prototype = baseLodash.prototype;\n    lodash.prototype.constructor = lodash;\n\n    LodashWrapper.prototype = baseCreate(baseLodash.prototype);\n    LodashWrapper.prototype.constructor = LodashWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\n     *\n     * @private\n     * @constructor\n     * @param {*} value The value to wrap.\n     */\n    function LazyWrapper(value) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__dir__ = 1;\n      this.__filtered__ = false;\n      this.__iteratees__ = [];\n      this.__takeCount__ = MAX_ARRAY_LENGTH;\n      this.__views__ = [];\n    }\n\n    /**\n     * Creates a clone of the lazy wrapper object.\n     *\n     * @private\n     * @name clone\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the cloned `LazyWrapper` object.\n     */\n    function lazyClone() {\n      var result = new LazyWrapper(this.__wrapped__);\n      result.__actions__ = copyArray(this.__actions__);\n      result.__dir__ = this.__dir__;\n      result.__filtered__ = this.__filtered__;\n      result.__iteratees__ = copyArray(this.__iteratees__);\n      result.__takeCount__ = this.__takeCount__;\n      result.__views__ = copyArray(this.__views__);\n      return result;\n    }\n\n    /**\n     * Reverses the direction of lazy iteration.\n     *\n     * @private\n     * @name reverse\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the new reversed `LazyWrapper` object.\n     */\n    function lazyReverse() {\n      if (this.__filtered__) {\n        var result = new LazyWrapper(this);\n        result.__dir__ = -1;\n        result.__filtered__ = true;\n      } else {\n        result = this.clone();\n        result.__dir__ *= -1;\n      }\n      return result;\n    }\n\n    /**\n     * Extracts the unwrapped value from its lazy wrapper.\n     *\n     * @private\n     * @name value\n     * @memberOf LazyWrapper\n     * @returns {*} Returns the unwrapped value.\n     */\n    function lazyValue() {\n      var array = this.__wrapped__.value(),\n          dir = this.__dir__,\n          isArr = isArray(array),\n          isRight = dir < 0,\n          arrLength = isArr ? array.length : 0,\n          view = getView(0, arrLength, this.__views__),\n          start = view.start,\n          end = view.end,\n          length = end - start,\n          index = isRight ? end : (start - 1),\n          iteratees = this.__iteratees__,\n          iterLength = iteratees.length,\n          resIndex = 0,\n          takeCount = nativeMin(length, this.__takeCount__);\n\n      if (!isArr || (!isRight && arrLength == length && takeCount == length)) {\n        return baseWrapperValue(array, this.__actions__);\n      }\n      var result = [];\n\n      outer:\n      while (length-- && resIndex < takeCount) {\n        index += dir;\n\n        var iterIndex = -1,\n            value = array[index];\n\n        while (++iterIndex < iterLength) {\n          var data = iteratees[iterIndex],\n              iteratee = data.iteratee,\n              type = data.type,\n              computed = iteratee(value);\n\n          if (type == LAZY_MAP_FLAG) {\n            value = computed;\n          } else if (!computed) {\n            if (type == LAZY_FILTER_FLAG) {\n              continue outer;\n            } else {\n              break outer;\n            }\n          }\n        }\n        result[resIndex++] = value;\n      }\n      return result;\n    }\n\n    // Ensure `LazyWrapper` is an instance of `baseLodash`.\n    LazyWrapper.prototype = baseCreate(baseLodash.prototype);\n    LazyWrapper.prototype.constructor = LazyWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a hash object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Hash(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the hash.\n     *\n     * @private\n     * @name clear\n     * @memberOf Hash\n     */\n    function hashClear() {\n      this.__data__ = nativeCreate ? nativeCreate(null) : {};\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the hash.\n     *\n     * @private\n     * @name delete\n     * @memberOf Hash\n     * @param {Object} hash The hash to modify.\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function hashDelete(key) {\n      var result = this.has(key) && delete this.__data__[key];\n      this.size -= result ? 1 : 0;\n      return result;\n    }\n\n    /**\n     * Gets the hash value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Hash\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function hashGet(key) {\n      var data = this.__data__;\n      if (nativeCreate) {\n        var result = data[key];\n        return result === HASH_UNDEFINED ? undefined : result;\n      }\n      return hasOwnProperty.call(data, key) ? data[key] : undefined;\n    }\n\n    /**\n     * Checks if a hash value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Hash\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function hashHas(key) {\n      var data = this.__data__;\n      return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n    }\n\n    /**\n     * Sets the hash `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Hash\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the hash instance.\n     */\n    function hashSet(key, value) {\n      var data = this.__data__;\n      this.size += this.has(key) ? 0 : 1;\n      data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n      return this;\n    }\n\n    // Add methods to `Hash`.\n    Hash.prototype.clear = hashClear;\n    Hash.prototype['delete'] = hashDelete;\n    Hash.prototype.get = hashGet;\n    Hash.prototype.has = hashHas;\n    Hash.prototype.set = hashSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an list cache object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function ListCache(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the list cache.\n     *\n     * @private\n     * @name clear\n     * @memberOf ListCache\n     */\n    function listCacheClear() {\n      this.__data__ = [];\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the list cache.\n     *\n     * @private\n     * @name delete\n     * @memberOf ListCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function listCacheDelete(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        return false;\n      }\n      var lastIndex = data.length - 1;\n      if (index == lastIndex) {\n        data.pop();\n      } else {\n        splice.call(data, index, 1);\n      }\n      --this.size;\n      return true;\n    }\n\n    /**\n     * Gets the list cache value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf ListCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function listCacheGet(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      return index < 0 ? undefined : data[index][1];\n    }\n\n    /**\n     * Checks if a list cache value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf ListCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function listCacheHas(key) {\n      return assocIndexOf(this.__data__, key) > -1;\n    }\n\n    /**\n     * Sets the list cache `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf ListCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the list cache instance.\n     */\n    function listCacheSet(key, value) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        ++this.size;\n        data.push([key, value]);\n      } else {\n        data[index][1] = value;\n      }\n      return this;\n    }\n\n    // Add methods to `ListCache`.\n    ListCache.prototype.clear = listCacheClear;\n    ListCache.prototype['delete'] = listCacheDelete;\n    ListCache.prototype.get = listCacheGet;\n    ListCache.prototype.has = listCacheHas;\n    ListCache.prototype.set = listCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a map cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function MapCache(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the map.\n     *\n     * @private\n     * @name clear\n     * @memberOf MapCache\n     */\n    function mapCacheClear() {\n      this.size = 0;\n      this.__data__ = {\n        'hash': new Hash,\n        'map': new (Map || ListCache),\n        'string': new Hash\n      };\n    }\n\n    /**\n     * Removes `key` and its value from the map.\n     *\n     * @private\n     * @name delete\n     * @memberOf MapCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function mapCacheDelete(key) {\n      var result = getMapData(this, key)['delete'](key);\n      this.size -= result ? 1 : 0;\n      return result;\n    }\n\n    /**\n     * Gets the map value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf MapCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function mapCacheGet(key) {\n      return getMapData(this, key).get(key);\n    }\n\n    /**\n     * Checks if a map value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf MapCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function mapCacheHas(key) {\n      return getMapData(this, key).has(key);\n    }\n\n    /**\n     * Sets the map `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf MapCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the map cache instance.\n     */\n    function mapCacheSet(key, value) {\n      var data = getMapData(this, key),\n          size = data.size;\n\n      data.set(key, value);\n      this.size += data.size == size ? 0 : 1;\n      return this;\n    }\n\n    // Add methods to `MapCache`.\n    MapCache.prototype.clear = mapCacheClear;\n    MapCache.prototype['delete'] = mapCacheDelete;\n    MapCache.prototype.get = mapCacheGet;\n    MapCache.prototype.has = mapCacheHas;\n    MapCache.prototype.set = mapCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     *\n     * Creates an array cache object to store unique values.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [values] The values to cache.\n     */\n    function SetCache(values) {\n      var index = -1,\n          length = values == null ? 0 : values.length;\n\n      this.__data__ = new MapCache;\n      while (++index < length) {\n        this.add(values[index]);\n      }\n    }\n\n    /**\n     * Adds `value` to the array cache.\n     *\n     * @private\n     * @name add\n     * @memberOf SetCache\n     * @alias push\n     * @param {*} value The value to cache.\n     * @returns {Object} Returns the cache instance.\n     */\n    function setCacheAdd(value) {\n      this.__data__.set(value, HASH_UNDEFINED);\n      return this;\n    }\n\n    /**\n     * Checks if `value` is in the array cache.\n     *\n     * @private\n     * @name has\n     * @memberOf SetCache\n     * @param {*} value The value to search for.\n     * @returns {number} Returns `true` if `value` is found, else `false`.\n     */\n    function setCacheHas(value) {\n      return this.__data__.has(value);\n    }\n\n    // Add methods to `SetCache`.\n    SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\n    SetCache.prototype.has = setCacheHas;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a stack cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Stack(entries) {\n      var data = this.__data__ = new ListCache(entries);\n      this.size = data.size;\n    }\n\n    /**\n     * Removes all key-value entries from the stack.\n     *\n     * @private\n     * @name clear\n     * @memberOf Stack\n     */\n    function stackClear() {\n      this.__data__ = new ListCache;\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the stack.\n     *\n     * @private\n     * @name delete\n     * @memberOf Stack\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function stackDelete(key) {\n      var data = this.__data__,\n          result = data['delete'](key);\n\n      this.size = data.size;\n      return result;\n    }\n\n    /**\n     * Gets the stack value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Stack\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function stackGet(key) {\n      return this.__data__.get(key);\n    }\n\n    /**\n     * Checks if a stack value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Stack\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function stackHas(key) {\n      return this.__data__.has(key);\n    }\n\n    /**\n     * Sets the stack `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Stack\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the stack cache instance.\n     */\n    function stackSet(key, value) {\n      var data = this.__data__;\n      if (data instanceof ListCache) {\n        var pairs = data.__data__;\n        if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n          pairs.push([key, value]);\n          this.size = ++data.size;\n          return this;\n        }\n        data = this.__data__ = new MapCache(pairs);\n      }\n      data.set(key, value);\n      this.size = data.size;\n      return this;\n    }\n\n    // Add methods to `Stack`.\n    Stack.prototype.clear = stackClear;\n    Stack.prototype['delete'] = stackDelete;\n    Stack.prototype.get = stackGet;\n    Stack.prototype.has = stackHas;\n    Stack.prototype.set = stackSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of the enumerable property names of the array-like `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @param {boolean} inherited Specify returning inherited property names.\n     * @returns {Array} Returns the array of property names.\n     */\n    function arrayLikeKeys(value, inherited) {\n      var isArr = isArray(value),\n          isArg = !isArr && isArguments(value),\n          isBuff = !isArr && !isArg && isBuffer(value),\n          isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n          skipIndexes = isArr || isArg || isBuff || isType,\n          result = skipIndexes ? baseTimes(value.length, String) : [],\n          length = result.length;\n\n      for (var key in value) {\n        if ((inherited || hasOwnProperty.call(value, key)) &&\n            !(skipIndexes && (\n               // Safari 9 has enumerable `arguments.length` in strict mode.\n               key == 'length' ||\n               // Node.js 0.10 has enumerable non-index properties on buffers.\n               (isBuff && (key == 'offset' || key == 'parent')) ||\n               // PhantomJS 2 has enumerable non-index properties on typed arrays.\n               (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n               // Skip index properties.\n               isIndex(key, length)\n            ))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.sample` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to sample.\n     * @returns {*} Returns the random element.\n     */\n    function arraySample(array) {\n      var length = array.length;\n      return length ? array[baseRandom(0, length - 1)] : undefined;\n    }\n\n    /**\n     * A specialized version of `_.sampleSize` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to sample.\n     * @param {number} n The number of elements to sample.\n     * @returns {Array} Returns the random elements.\n     */\n    function arraySampleSize(array, n) {\n      return shuffleSelf(copyArray(array), baseClamp(n, 0, array.length));\n    }\n\n    /**\n     * A specialized version of `_.shuffle` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     */\n    function arrayShuffle(array) {\n      return shuffleSelf(copyArray(array));\n    }\n\n    /**\n     * This function is like `assignValue` except that it doesn't assign\n     * `undefined` values.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignMergeValue(object, key, value) {\n      if ((value !== undefined && !eq(object[key], value)) ||\n          (value === undefined && !(key in object))) {\n        baseAssignValue(object, key, value);\n      }\n    }\n\n    /**\n     * Assigns `value` to `key` of `object` if the existing value is not equivalent\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignValue(object, key, value) {\n      var objValue = object[key];\n      if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n          (value === undefined && !(key in object))) {\n        baseAssignValue(object, key, value);\n      }\n    }\n\n    /**\n     * Gets the index at which the `key` is found in `array` of key-value pairs.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {*} key The key to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     */\n    function assocIndexOf(array, key) {\n      var length = array.length;\n      while (length--) {\n        if (eq(array[length][0], key)) {\n          return length;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * Aggregates elements of `collection` on `accumulator` with keys transformed\n     * by `iteratee` and values set by `setter`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform keys.\n     * @param {Object} accumulator The initial aggregated object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseAggregator(collection, setter, iteratee, accumulator) {\n      baseEach(collection, function(value, key, collection) {\n        setter(accumulator, value, iteratee(value), collection);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.assign` without support for multiple sources\n     * or `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssign(object, source) {\n      return object && copyObject(source, keys(source), object);\n    }\n\n    /**\n     * The base implementation of `_.assignIn` without support for multiple sources\n     * or `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssignIn(object, source) {\n      return object && copyObject(source, keysIn(source), object);\n    }\n\n    /**\n     * The base implementation of `assignValue` and `assignMergeValue` without\n     * value checks.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function baseAssignValue(object, key, value) {\n      if (key == '__proto__' && defineProperty) {\n        defineProperty(object, key, {\n          'configurable': true,\n          'enumerable': true,\n          'value': value,\n          'writable': true\n        });\n      } else {\n        object[key] = value;\n      }\n    }\n\n    /**\n     * The base implementation of `_.at` without support for individual paths.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {string[]} paths The property paths to pick.\n     * @returns {Array} Returns the picked elements.\n     */\n    function baseAt(object, paths) {\n      var index = -1,\n          length = paths.length,\n          result = Array(length),\n          skip = object == null;\n\n      while (++index < length) {\n        result[index] = skip ? undefined : get(object, paths[index]);\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.clamp` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     */\n    function baseClamp(number, lower, upper) {\n      if (number === number) {\n        if (upper !== undefined) {\n          number = number <= upper ? number : upper;\n        }\n        if (lower !== undefined) {\n          number = number >= lower ? number : lower;\n        }\n      }\n      return number;\n    }\n\n    /**\n     * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n     * traversed objects.\n     *\n     * @private\n     * @param {*} value The value to clone.\n     * @param {boolean} bitmask The bitmask flags.\n     *  1 - Deep clone\n     *  2 - Flatten inherited properties\n     *  4 - Clone symbols\n     * @param {Function} [customizer] The function to customize cloning.\n     * @param {string} [key] The key of `value`.\n     * @param {Object} [object] The parent object of `value`.\n     * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n     * @returns {*} Returns the cloned value.\n     */\n    function baseClone(value, bitmask, customizer, key, object, stack) {\n      var result,\n          isDeep = bitmask & CLONE_DEEP_FLAG,\n          isFlat = bitmask & CLONE_FLAT_FLAG,\n          isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n      if (customizer) {\n        result = object ? customizer(value, key, object, stack) : customizer(value);\n      }\n      if (result !== undefined) {\n        return result;\n      }\n      if (!isObject(value)) {\n        return value;\n      }\n      var isArr = isArray(value);\n      if (isArr) {\n        result = initCloneArray(value);\n        if (!isDeep) {\n          return copyArray(value, result);\n        }\n      } else {\n        var tag = getTag(value),\n            isFunc = tag == funcTag || tag == genTag;\n\n        if (isBuffer(value)) {\n          return cloneBuffer(value, isDeep);\n        }\n        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n          result = (isFlat || isFunc) ? {} : initCloneObject(value);\n          if (!isDeep) {\n            return isFlat\n              ? copySymbolsIn(value, baseAssignIn(result, value))\n              : copySymbols(value, baseAssign(result, value));\n          }\n        } else {\n          if (!cloneableTags[tag]) {\n            return object ? value : {};\n          }\n          result = initCloneByTag(value, tag, isDeep);\n        }\n      }\n      // Check for circular references and return its corresponding clone.\n      stack || (stack = new Stack);\n      var stacked = stack.get(value);\n      if (stacked) {\n        return stacked;\n      }\n      stack.set(value, result);\n\n      if (isSet(value)) {\n        value.forEach(function(subValue) {\n          result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));\n        });\n\n        return result;\n      }\n\n      if (isMap(value)) {\n        value.forEach(function(subValue, key) {\n          result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));\n        });\n\n        return result;\n      }\n\n      var keysFunc = isFull\n        ? (isFlat ? getAllKeysIn : getAllKeys)\n        : (isFlat ? keysIn : keys);\n\n      var props = isArr ? undefined : keysFunc(value);\n      arrayEach(props || value, function(subValue, key) {\n        if (props) {\n          key = subValue;\n          subValue = value[key];\n        }\n        // Recursively populate clone (susceptible to call stack limits).\n        assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.conforms` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseConforms(source) {\n      var props = keys(source);\n      return function(object) {\n        return baseConformsTo(object, source, props);\n      };\n    }\n\n    /**\n     * The base implementation of `_.conformsTo` which accepts `props` to check.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n     */\n    function baseConformsTo(object, source, props) {\n      var length = props.length;\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (length--) {\n        var key = props[length],\n            predicate = source[key],\n            value = object[key];\n\n        if ((value === undefined && !(key in object)) || !predicate(value)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.delay` and `_.defer` which accepts `args`\n     * to provide to `func`.\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {Array} args The arguments to provide to `func`.\n     * @returns {number|Object} Returns the timer id or timeout object.\n     */\n    function baseDelay(func, wait, args) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return setTimeout(function() { func.apply(undefined, args); }, wait);\n    }\n\n    /**\n     * The base implementation of methods like `_.difference` without support\n     * for excluding multiple arrays or iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Array} values The values to exclude.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     */\n    function baseDifference(array, values, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          isCommon = true,\n          length = array.length,\n          result = [],\n          valuesLength = values.length;\n\n      if (!length) {\n        return result;\n      }\n      if (iteratee) {\n        values = arrayMap(values, baseUnary(iteratee));\n      }\n      if (comparator) {\n        includes = arrayIncludesWith;\n        isCommon = false;\n      }\n      else if (values.length >= LARGE_ARRAY_SIZE) {\n        includes = cacheHas;\n        isCommon = false;\n        values = new SetCache(values);\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee == null ? value : iteratee(value);\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var valuesIndex = valuesLength;\n          while (valuesIndex--) {\n            if (values[valuesIndex] === computed) {\n              continue outer;\n            }\n          }\n          result.push(value);\n        }\n        else if (!includes(values, computed, comparator)) {\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.forEach` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEach = createBaseEach(baseForOwn);\n\n    /**\n     * The base implementation of `_.forEachRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEachRight = createBaseEach(baseForOwnRight, true);\n\n    /**\n     * The base implementation of `_.every` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`\n     */\n    function baseEvery(collection, predicate) {\n      var result = true;\n      baseEach(collection, function(value, index, collection) {\n        result = !!predicate(value, index, collection);\n        return result;\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of methods like `_.max` and `_.min` which accepts a\n     * `comparator` to determine the extremum value.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The iteratee invoked per iteration.\n     * @param {Function} comparator The comparator used to compare values.\n     * @returns {*} Returns the extremum value.\n     */\n    function baseExtremum(array, iteratee, comparator) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        var value = array[index],\n            current = iteratee(value);\n\n        if (current != null && (computed === undefined\n              ? (current === current && !isSymbol(current))\n              : comparator(current, computed)\n            )) {\n          var computed = current,\n              result = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.fill` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     */\n    function baseFill(array, value, start, end) {\n      var length = array.length;\n\n      start = toInteger(start);\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = (end === undefined || end > length) ? length : toInteger(end);\n      if (end < 0) {\n        end += length;\n      }\n      end = start > end ? 0 : toLength(end);\n      while (start < end) {\n        array[start++] = value;\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.filter` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     */\n    function baseFilter(collection, predicate) {\n      var result = [];\n      baseEach(collection, function(value, index, collection) {\n        if (predicate(value, index, collection)) {\n          result.push(value);\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.flatten` with support for restricting flattening.\n     *\n     * @private\n     * @param {Array} array The array to flatten.\n     * @param {number} depth The maximum recursion depth.\n     * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n     * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n     * @param {Array} [result=[]] The initial result value.\n     * @returns {Array} Returns the new flattened array.\n     */\n    function baseFlatten(array, depth, predicate, isStrict, result) {\n      var index = -1,\n          length = array.length;\n\n      predicate || (predicate = isFlattenable);\n      result || (result = []);\n\n      while (++index < length) {\n        var value = array[index];\n        if (depth > 0 && predicate(value)) {\n          if (depth > 1) {\n            // Recursively flatten arrays (susceptible to call stack limits).\n            baseFlatten(value, depth - 1, predicate, isStrict, result);\n          } else {\n            arrayPush(result, value);\n          }\n        } else if (!isStrict) {\n          result[result.length] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `baseForOwn` which iterates over `object`\n     * properties returned by `keysFunc` and invokes `iteratee` for each property.\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseFor = createBaseFor();\n\n    /**\n     * This function is like `baseFor` except that it iterates over properties\n     * in the opposite order.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseForRight = createBaseFor(true);\n\n    /**\n     * The base implementation of `_.forOwn` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwn(object, iteratee) {\n      return object && baseFor(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.forOwnRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwnRight(object, iteratee) {\n      return object && baseForRight(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.functions` which creates an array of\n     * `object` function property names filtered from `props`.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Array} props The property names to filter.\n     * @returns {Array} Returns the function names.\n     */\n    function baseFunctions(object, props) {\n      return arrayFilter(props, function(key) {\n        return isFunction(object[key]);\n      });\n    }\n\n    /**\n     * The base implementation of `_.get` without support for default values.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseGet(object, path) {\n      path = castPath(path, object);\n\n      var index = 0,\n          length = path.length;\n\n      while (object != null && index < length) {\n        object = object[toKey(path[index++])];\n      }\n      return (index && index == length) ? object : undefined;\n    }\n\n    /**\n     * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n     * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @param {Function} symbolsFunc The function to get the symbols of `object`.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function baseGetAllKeys(object, keysFunc, symbolsFunc) {\n      var result = keysFunc(object);\n      return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n    }\n\n    /**\n     * The base implementation of `getTag` without fallbacks for buggy environments.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    function baseGetTag(value) {\n      if (value == null) {\n        return value === undefined ? undefinedTag : nullTag;\n      }\n      return (symToStringTag && symToStringTag in Object(value))\n        ? getRawTag(value)\n        : objectToString(value);\n    }\n\n    /**\n     * The base implementation of `_.gt` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     */\n    function baseGt(value, other) {\n      return value > other;\n    }\n\n    /**\n     * The base implementation of `_.has` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHas(object, key) {\n      return object != null && hasOwnProperty.call(object, key);\n    }\n\n    /**\n     * The base implementation of `_.hasIn` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHasIn(object, key) {\n      return object != null && key in Object(object);\n    }\n\n    /**\n     * The base implementation of `_.inRange` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {number} number The number to check.\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     */\n    function baseInRange(number, start, end) {\n      return number >= nativeMin(start, end) && number < nativeMax(start, end);\n    }\n\n    /**\n     * The base implementation of methods like `_.intersection`, without support\n     * for iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of shared values.\n     */\n    function baseIntersection(arrays, iteratee, comparator) {\n      var includes = comparator ? arrayIncludesWith : arrayIncludes,\n          length = arrays[0].length,\n          othLength = arrays.length,\n          othIndex = othLength,\n          caches = Array(othLength),\n          maxLength = Infinity,\n          result = [];\n\n      while (othIndex--) {\n        var array = arrays[othIndex];\n        if (othIndex && iteratee) {\n          array = arrayMap(array, baseUnary(iteratee));\n        }\n        maxLength = nativeMin(array.length, maxLength);\n        caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))\n          ? new SetCache(othIndex && array)\n          : undefined;\n      }\n      array = arrays[0];\n\n      var index = -1,\n          seen = caches[0];\n\n      outer:\n      while (++index < length && result.length < maxLength) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (!(seen\n              ? cacheHas(seen, computed)\n              : includes(result, computed, comparator)\n            )) {\n          othIndex = othLength;\n          while (--othIndex) {\n            var cache = caches[othIndex];\n            if (!(cache\n                  ? cacheHas(cache, computed)\n                  : includes(arrays[othIndex], computed, comparator))\n                ) {\n              continue outer;\n            }\n          }\n          if (seen) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.invert` and `_.invertBy` which inverts\n     * `object` with values transformed by `iteratee` and set by `setter`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform values.\n     * @param {Object} accumulator The initial inverted object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseInverter(object, setter, iteratee, accumulator) {\n      baseForOwn(object, function(value, key, object) {\n        setter(accumulator, iteratee(value), key, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.invoke` without support for individual\n     * method arguments.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {Array} args The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     */\n    function baseInvoke(object, path, args) {\n      path = castPath(path, object);\n      object = parent(object, path);\n      var func = object == null ? object : object[toKey(last(path))];\n      return func == null ? undefined : apply(func, object, args);\n    }\n\n    /**\n     * The base implementation of `_.isArguments`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n     */\n    function baseIsArguments(value) {\n      return isObjectLike(value) && baseGetTag(value) == argsTag;\n    }\n\n    /**\n     * The base implementation of `_.isArrayBuffer` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n     */\n    function baseIsArrayBuffer(value) {\n      return isObjectLike(value) && baseGetTag(value) == arrayBufferTag;\n    }\n\n    /**\n     * The base implementation of `_.isDate` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n     */\n    function baseIsDate(value) {\n      return isObjectLike(value) && baseGetTag(value) == dateTag;\n    }\n\n    /**\n     * The base implementation of `_.isEqual` which supports partial comparisons\n     * and tracks traversed objects.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {boolean} bitmask The bitmask flags.\n     *  1 - Unordered comparison\n     *  2 - Partial comparison\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     */\n    function baseIsEqual(value, other, bitmask, customizer, stack) {\n      if (value === other) {\n        return true;\n      }\n      if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n        return value !== value && other !== other;\n      }\n      return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n    }\n\n    /**\n     * A specialized version of `baseIsEqual` for arrays and objects which performs\n     * deep comparisons and tracks traversed objects enabling objects with circular\n     * references to be compared.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n      var objIsArr = isArray(object),\n          othIsArr = isArray(other),\n          objTag = objIsArr ? arrayTag : getTag(object),\n          othTag = othIsArr ? arrayTag : getTag(other);\n\n      objTag = objTag == argsTag ? objectTag : objTag;\n      othTag = othTag == argsTag ? objectTag : othTag;\n\n      var objIsObj = objTag == objectTag,\n          othIsObj = othTag == objectTag,\n          isSameTag = objTag == othTag;\n\n      if (isSameTag && isBuffer(object)) {\n        if (!isBuffer(other)) {\n          return false;\n        }\n        objIsArr = true;\n        objIsObj = false;\n      }\n      if (isSameTag && !objIsObj) {\n        stack || (stack = new Stack);\n        return (objIsArr || isTypedArray(object))\n          ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n          : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n      }\n      if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n        if (objIsWrapped || othIsWrapped) {\n          var objUnwrapped = objIsWrapped ? object.value() : object,\n              othUnwrapped = othIsWrapped ? other.value() : other;\n\n          stack || (stack = new Stack);\n          return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n        }\n      }\n      if (!isSameTag) {\n        return false;\n      }\n      stack || (stack = new Stack);\n      return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n    }\n\n    /**\n     * The base implementation of `_.isMap` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n     */\n    function baseIsMap(value) {\n      return isObjectLike(value) && getTag(value) == mapTag;\n    }\n\n    /**\n     * The base implementation of `_.isMatch` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Array} matchData The property names, values, and compare flags to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     */\n    function baseIsMatch(object, source, matchData, customizer) {\n      var index = matchData.length,\n          length = index,\n          noCustomizer = !customizer;\n\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (index--) {\n        var data = matchData[index];\n        if ((noCustomizer && data[2])\n              ? data[1] !== object[data[0]]\n              : !(data[0] in object)\n            ) {\n          return false;\n        }\n      }\n      while (++index < length) {\n        data = matchData[index];\n        var key = data[0],\n            objValue = object[key],\n            srcValue = data[1];\n\n        if (noCustomizer && data[2]) {\n          if (objValue === undefined && !(key in object)) {\n            return false;\n          }\n        } else {\n          var stack = new Stack;\n          if (customizer) {\n            var result = customizer(objValue, srcValue, key, object, source, stack);\n          }\n          if (!(result === undefined\n                ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)\n                : result\n              )) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.isNative` without bad shim checks.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     */\n    function baseIsNative(value) {\n      if (!isObject(value) || isMasked(value)) {\n        return false;\n      }\n      var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n      return pattern.test(toSource(value));\n    }\n\n    /**\n     * The base implementation of `_.isRegExp` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n     */\n    function baseIsRegExp(value) {\n      return isObjectLike(value) && baseGetTag(value) == regexpTag;\n    }\n\n    /**\n     * The base implementation of `_.isSet` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n     */\n    function baseIsSet(value) {\n      return isObjectLike(value) && getTag(value) == setTag;\n    }\n\n    /**\n     * The base implementation of `_.isTypedArray` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n     */\n    function baseIsTypedArray(value) {\n      return isObjectLike(value) &&\n        isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n    }\n\n    /**\n     * The base implementation of `_.iteratee`.\n     *\n     * @private\n     * @param {*} [value=_.identity] The value to convert to an iteratee.\n     * @returns {Function} Returns the iteratee.\n     */\n    function baseIteratee(value) {\n      // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n      // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n      if (typeof value == 'function') {\n        return value;\n      }\n      if (value == null) {\n        return identity;\n      }\n      if (typeof value == 'object') {\n        return isArray(value)\n          ? baseMatchesProperty(value[0], value[1])\n          : baseMatches(value);\n      }\n      return property(value);\n    }\n\n    /**\n     * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeys(object) {\n      if (!isPrototype(object)) {\n        return nativeKeys(object);\n      }\n      var result = [];\n      for (var key in Object(object)) {\n        if (hasOwnProperty.call(object, key) && key != 'constructor') {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeysIn(object) {\n      if (!isObject(object)) {\n        return nativeKeysIn(object);\n      }\n      var isProto = isPrototype(object),\n          result = [];\n\n      for (var key in object) {\n        if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.lt` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     */\n    function baseLt(value, other) {\n      return value < other;\n    }\n\n    /**\n     * The base implementation of `_.map` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     */\n    function baseMap(collection, iteratee) {\n      var index = -1,\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value, key, collection) {\n        result[++index] = iteratee(value, key, collection);\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.matches` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatches(source) {\n      var matchData = getMatchData(source);\n      if (matchData.length == 1 && matchData[0][2]) {\n        return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n      }\n      return function(object) {\n        return object === source || baseIsMatch(object, source, matchData);\n      };\n    }\n\n    /**\n     * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n     *\n     * @private\n     * @param {string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatchesProperty(path, srcValue) {\n      if (isKey(path) && isStrictComparable(srcValue)) {\n        return matchesStrictComparable(toKey(path), srcValue);\n      }\n      return function(object) {\n        var objValue = get(object, path);\n        return (objValue === undefined && objValue === srcValue)\n          ? hasIn(object, path)\n          : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n      };\n    }\n\n    /**\n     * The base implementation of `_.merge` without support for multiple sources.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} [customizer] The function to customize merged values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMerge(object, source, srcIndex, customizer, stack) {\n      if (object === source) {\n        return;\n      }\n      baseFor(source, function(srcValue, key) {\n        if (isObject(srcValue)) {\n          stack || (stack = new Stack);\n          baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n        }\n        else {\n          var newValue = customizer\n            ? customizer(safeGet(object, key), srcValue, (key + ''), object, source, stack)\n            : undefined;\n\n          if (newValue === undefined) {\n            newValue = srcValue;\n          }\n          assignMergeValue(object, key, newValue);\n        }\n      }, keysIn);\n    }\n\n    /**\n     * A specialized version of `baseMerge` for arrays and objects which performs\n     * deep merges and tracks traversed objects enabling objects with circular\n     * references to be merged.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {string} key The key of the value to merge.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} mergeFunc The function to merge values.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n      var objValue = safeGet(object, key),\n          srcValue = safeGet(source, key),\n          stacked = stack.get(srcValue);\n\n      if (stacked) {\n        assignMergeValue(object, key, stacked);\n        return;\n      }\n      var newValue = customizer\n        ? customizer(objValue, srcValue, (key + ''), object, source, stack)\n        : undefined;\n\n      var isCommon = newValue === undefined;\n\n      if (isCommon) {\n        var isArr = isArray(srcValue),\n            isBuff = !isArr && isBuffer(srcValue),\n            isTyped = !isArr && !isBuff && isTypedArray(srcValue);\n\n        newValue = srcValue;\n        if (isArr || isBuff || isTyped) {\n          if (isArray(objValue)) {\n            newValue = objValue;\n          }\n          else if (isArrayLikeObject(objValue)) {\n            newValue = copyArray(objValue);\n          }\n          else if (isBuff) {\n            isCommon = false;\n            newValue = cloneBuffer(srcValue, true);\n          }\n          else if (isTyped) {\n            isCommon = false;\n            newValue = cloneTypedArray(srcValue, true);\n          }\n          else {\n            newValue = [];\n          }\n        }\n        else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n          newValue = objValue;\n          if (isArguments(objValue)) {\n            newValue = toPlainObject(objValue);\n          }\n          else if (!isObject(objValue) || (srcIndex && isFunction(objValue))) {\n            newValue = initCloneObject(srcValue);\n          }\n        }\n        else {\n          isCommon = false;\n        }\n      }\n      if (isCommon) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        stack.set(srcValue, newValue);\n        mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n        stack['delete'](srcValue);\n      }\n      assignMergeValue(object, key, newValue);\n    }\n\n    /**\n     * The base implementation of `_.nth` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {number} n The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     */\n    function baseNth(array, n) {\n      var length = array.length;\n      if (!length) {\n        return;\n      }\n      n += n < 0 ? length : 0;\n      return isIndex(n, length) ? array[n] : undefined;\n    }\n\n    /**\n     * The base implementation of `_.orderBy` without param guards.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n     * @param {string[]} orders The sort orders of `iteratees`.\n     * @returns {Array} Returns the new sorted array.\n     */\n    function baseOrderBy(collection, iteratees, orders) {\n      var index = -1;\n      iteratees = arrayMap(iteratees.length ? iteratees : [identity], baseUnary(getIteratee()));\n\n      var result = baseMap(collection, function(value, key, collection) {\n        var criteria = arrayMap(iteratees, function(iteratee) {\n          return iteratee(value);\n        });\n        return { 'criteria': criteria, 'index': ++index, 'value': value };\n      });\n\n      return baseSortBy(result, function(object, other) {\n        return compareMultiple(object, other, orders);\n      });\n    }\n\n    /**\n     * The base implementation of `_.pick` without support for individual\n     * property identifiers.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} paths The property paths to pick.\n     * @returns {Object} Returns the new object.\n     */\n    function basePick(object, paths) {\n      return basePickBy(object, paths, function(value, path) {\n        return hasIn(object, path);\n      });\n    }\n\n    /**\n     * The base implementation of  `_.pickBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} paths The property paths to pick.\n     * @param {Function} predicate The function invoked per property.\n     * @returns {Object} Returns the new object.\n     */\n    function basePickBy(object, paths, predicate) {\n      var index = -1,\n          length = paths.length,\n          result = {};\n\n      while (++index < length) {\n        var path = paths[index],\n            value = baseGet(object, path);\n\n        if (predicate(value, path)) {\n          baseSet(result, castPath(path, object), value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseProperty` which supports deep paths.\n     *\n     * @private\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     */\n    function basePropertyDeep(path) {\n      return function(object) {\n        return baseGet(object, path);\n      };\n    }\n\n    /**\n     * The base implementation of `_.pullAllBy` without support for iteratee\n     * shorthands.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAll(array, values, iteratee, comparator) {\n      var indexOf = comparator ? baseIndexOfWith : baseIndexOf,\n          index = -1,\n          length = values.length,\n          seen = array;\n\n      if (array === values) {\n        values = copyArray(values);\n      }\n      if (iteratee) {\n        seen = arrayMap(array, baseUnary(iteratee));\n      }\n      while (++index < length) {\n        var fromIndex = 0,\n            value = values[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {\n          if (seen !== array) {\n            splice.call(seen, fromIndex, 1);\n          }\n          splice.call(array, fromIndex, 1);\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.pullAt` without support for individual\n     * indexes or capturing the removed elements.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {number[]} indexes The indexes of elements to remove.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAt(array, indexes) {\n      var length = array ? indexes.length : 0,\n          lastIndex = length - 1;\n\n      while (length--) {\n        var index = indexes[length];\n        if (length == lastIndex || index !== previous) {\n          var previous = index;\n          if (isIndex(index)) {\n            splice.call(array, index, 1);\n          } else {\n            baseUnset(array, index);\n          }\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.random` without support for returning\n     * floating-point numbers.\n     *\n     * @private\n     * @param {number} lower The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the random number.\n     */\n    function baseRandom(lower, upper) {\n      return lower + nativeFloor(nativeRandom() * (upper - lower + 1));\n    }\n\n    /**\n     * The base implementation of `_.range` and `_.rangeRight` which doesn't\n     * coerce arguments.\n     *\n     * @private\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} step The value to increment or decrement by.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the range of numbers.\n     */\n    function baseRange(start, end, step, fromRight) {\n      var index = -1,\n          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n          result = Array(length);\n\n      while (length--) {\n        result[fromRight ? length : ++index] = start;\n        start += step;\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.repeat` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {string} string The string to repeat.\n     * @param {number} n The number of times to repeat the string.\n     * @returns {string} Returns the repeated string.\n     */\n    function baseRepeat(string, n) {\n      var result = '';\n      if (!string || n < 1 || n > MAX_SAFE_INTEGER) {\n        return result;\n      }\n      // Leverage the exponentiation by squaring algorithm for a faster repeat.\n      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\n      do {\n        if (n % 2) {\n          result += string;\n        }\n        n = nativeFloor(n / 2);\n        if (n) {\n          string += string;\n        }\n      } while (n);\n\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     */\n    function baseRest(func, start) {\n      return setToString(overRest(func, start, identity), func + '');\n    }\n\n    /**\n     * The base implementation of `_.sample`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to sample.\n     * @returns {*} Returns the random element.\n     */\n    function baseSample(collection) {\n      return arraySample(values(collection));\n    }\n\n    /**\n     * The base implementation of `_.sampleSize` without param guards.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to sample.\n     * @param {number} n The number of elements to sample.\n     * @returns {Array} Returns the random elements.\n     */\n    function baseSampleSize(collection, n) {\n      var array = values(collection);\n      return shuffleSelf(array, baseClamp(n, 0, array.length));\n    }\n\n    /**\n     * The base implementation of `_.set`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseSet(object, path, value, customizer) {\n      if (!isObject(object)) {\n        return object;\n      }\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length,\n          lastIndex = length - 1,\n          nested = object;\n\n      while (nested != null && ++index < length) {\n        var key = toKey(path[index]),\n            newValue = value;\n\n        if (index != lastIndex) {\n          var objValue = nested[key];\n          newValue = customizer ? customizer(objValue, key, nested) : undefined;\n          if (newValue === undefined) {\n            newValue = isObject(objValue)\n              ? objValue\n              : (isIndex(path[index + 1]) ? [] : {});\n          }\n        }\n        assignValue(nested, key, newValue);\n        nested = nested[key];\n      }\n      return object;\n    }\n\n    /**\n     * The base implementation of `setData` without support for hot loop shorting.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetData = !metaMap ? identity : function(func, data) {\n      metaMap.set(func, data);\n      return func;\n    };\n\n    /**\n     * The base implementation of `setToString` without support for hot loop shorting.\n     *\n     * @private\n     * @param {Function} func The function to modify.\n     * @param {Function} string The `toString` result.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetToString = !defineProperty ? identity : function(func, string) {\n      return defineProperty(func, 'toString', {\n        'configurable': true,\n        'enumerable': false,\n        'value': constant(string),\n        'writable': true\n      });\n    };\n\n    /**\n     * The base implementation of `_.shuffle`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     */\n    function baseShuffle(collection) {\n      return shuffleSelf(values(collection));\n    }\n\n    /**\n     * The base implementation of `_.slice` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseSlice(array, start, end) {\n      var index = -1,\n          length = array.length;\n\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = end > length ? length : end;\n      if (end < 0) {\n        end += length;\n      }\n      length = start > end ? 0 : ((end - start) >>> 0);\n      start >>>= 0;\n\n      var result = Array(length);\n      while (++index < length) {\n        result[index] = array[index + start];\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.some` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     */\n    function baseSome(collection, predicate) {\n      var result;\n\n      baseEach(collection, function(value, index, collection) {\n        result = predicate(value, index, collection);\n        return !result;\n      });\n      return !!result;\n    }\n\n    /**\n     * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which\n     * performs a binary search of `array` to determine the index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndex(array, value, retHighest) {\n      var low = 0,\n          high = array == null ? low : array.length;\n\n      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {\n        while (low < high) {\n          var mid = (low + high) >>> 1,\n              computed = array[mid];\n\n          if (computed !== null && !isSymbol(computed) &&\n              (retHighest ? (computed <= value) : (computed < value))) {\n            low = mid + 1;\n          } else {\n            high = mid;\n          }\n        }\n        return high;\n      }\n      return baseSortedIndexBy(array, value, identity, retHighest);\n    }\n\n    /**\n     * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`\n     * which invokes `iteratee` for `value` and each element of `array` to compute\n     * their sort ranking. The iteratee is invoked with one argument; (value).\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} iteratee The iteratee invoked per element.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndexBy(array, value, iteratee, retHighest) {\n      value = iteratee(value);\n\n      var low = 0,\n          high = array == null ? 0 : array.length,\n          valIsNaN = value !== value,\n          valIsNull = value === null,\n          valIsSymbol = isSymbol(value),\n          valIsUndefined = value === undefined;\n\n      while (low < high) {\n        var mid = nativeFloor((low + high) / 2),\n            computed = iteratee(array[mid]),\n            othIsDefined = computed !== undefined,\n            othIsNull = computed === null,\n            othIsReflexive = computed === computed,\n            othIsSymbol = isSymbol(computed);\n\n        if (valIsNaN) {\n          var setLow = retHighest || othIsReflexive;\n        } else if (valIsUndefined) {\n          setLow = othIsReflexive && (retHighest || othIsDefined);\n        } else if (valIsNull) {\n          setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);\n        } else if (valIsSymbol) {\n          setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);\n        } else if (othIsNull || othIsSymbol) {\n          setLow = false;\n        } else {\n          setLow = retHighest ? (computed <= value) : (computed < value);\n        }\n        if (setLow) {\n          low = mid + 1;\n        } else {\n          high = mid;\n        }\n      }\n      return nativeMin(high, MAX_ARRAY_INDEX);\n    }\n\n    /**\n     * The base implementation of `_.sortedUniq` and `_.sortedUniqBy` without\n     * support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseSortedUniq(array, iteratee) {\n      var index = -1,\n          length = array.length,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        if (!index || !eq(computed, seen)) {\n          var seen = computed;\n          result[resIndex++] = value === 0 ? 0 : value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.toNumber` which doesn't ensure correct\n     * conversions of binary, hexadecimal, or octal string values.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     */\n    function baseToNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      return +value;\n    }\n\n    /**\n     * The base implementation of `_.toString` which doesn't convert nullish\n     * values to empty strings.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {string} Returns the string.\n     */\n    function baseToString(value) {\n      // Exit early for strings to avoid a performance hit in some environments.\n      if (typeof value == 'string') {\n        return value;\n      }\n      if (isArray(value)) {\n        // Recursively convert values (susceptible to call stack limits).\n        return arrayMap(value, baseToString) + '';\n      }\n      if (isSymbol(value)) {\n        return symbolToString ? symbolToString.call(value) : '';\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseUniq(array, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          length = array.length,\n          isCommon = true,\n          result = [],\n          seen = result;\n\n      if (comparator) {\n        isCommon = false;\n        includes = arrayIncludesWith;\n      }\n      else if (length >= LARGE_ARRAY_SIZE) {\n        var set = iteratee ? null : createSet(array);\n        if (set) {\n          return setToArray(set);\n        }\n        isCommon = false;\n        includes = cacheHas;\n        seen = new SetCache;\n      }\n      else {\n        seen = iteratee ? [] : result;\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var seenIndex = seen.length;\n          while (seenIndex--) {\n            if (seen[seenIndex] === computed) {\n              continue outer;\n            }\n          }\n          if (iteratee) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n        else if (!includes(seen, computed, comparator)) {\n          if (seen !== result) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.unset`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The property path to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     */\n    function baseUnset(object, path) {\n      path = castPath(path, object);\n      object = parent(object, path);\n      return object == null || delete object[toKey(last(path))];\n    }\n\n    /**\n     * The base implementation of `_.update`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to update.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseUpdate(object, path, updater, customizer) {\n      return baseSet(object, path, updater(baseGet(object, path)), customizer);\n    }\n\n    /**\n     * The base implementation of methods like `_.dropWhile` and `_.takeWhile`\n     * without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {Function} predicate The function invoked per iteration.\n     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseWhile(array, predicate, isDrop, fromRight) {\n      var length = array.length,\n          index = fromRight ? length : -1;\n\n      while ((fromRight ? index-- : ++index < length) &&\n        predicate(array[index], index, array)) {}\n\n      return isDrop\n        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))\n        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));\n    }\n\n    /**\n     * The base implementation of `wrapperValue` which returns the result of\n     * performing a sequence of actions on the unwrapped `value`, where each\n     * successive action is supplied the return value of the previous.\n     *\n     * @private\n     * @param {*} value The unwrapped value.\n     * @param {Array} actions Actions to perform to resolve the unwrapped value.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseWrapperValue(value, actions) {\n      var result = value;\n      if (result instanceof LazyWrapper) {\n        result = result.value();\n      }\n      return arrayReduce(actions, function(result, action) {\n        return action.func.apply(action.thisArg, arrayPush([result], action.args));\n      }, result);\n    }\n\n    /**\n     * The base implementation of methods like `_.xor`, without support for\n     * iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of values.\n     */\n    function baseXor(arrays, iteratee, comparator) {\n      var length = arrays.length;\n      if (length < 2) {\n        return length ? baseUniq(arrays[0]) : [];\n      }\n      var index = -1,\n          result = Array(length);\n\n      while (++index < length) {\n        var array = arrays[index],\n            othIndex = -1;\n\n        while (++othIndex < length) {\n          if (othIndex != index) {\n            result[index] = baseDifference(result[index] || array, arrays[othIndex], iteratee, comparator);\n          }\n        }\n      }\n      return baseUniq(baseFlatten(result, 1), iteratee, comparator);\n    }\n\n    /**\n     * This base implementation of `_.zipObject` which assigns values using `assignFunc`.\n     *\n     * @private\n     * @param {Array} props The property identifiers.\n     * @param {Array} values The property values.\n     * @param {Function} assignFunc The function to assign values.\n     * @returns {Object} Returns the new object.\n     */\n    function baseZipObject(props, values, assignFunc) {\n      var index = -1,\n          length = props.length,\n          valsLength = values.length,\n          result = {};\n\n      while (++index < length) {\n        var value = index < valsLength ? values[index] : undefined;\n        assignFunc(result, props[index], value);\n      }\n      return result;\n    }\n\n    /**\n     * Casts `value` to an empty array if it's not an array like object.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Array|Object} Returns the cast array-like object.\n     */\n    function castArrayLikeObject(value) {\n      return isArrayLikeObject(value) ? value : [];\n    }\n\n    /**\n     * Casts `value` to `identity` if it's not a function.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Function} Returns cast function.\n     */\n    function castFunction(value) {\n      return typeof value == 'function' ? value : identity;\n    }\n\n    /**\n     * Casts `value` to a path array if it's not one.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {Array} Returns the cast property path array.\n     */\n    function castPath(value, object) {\n      if (isArray(value)) {\n        return value;\n      }\n      return isKey(value, object) ? [value] : stringToPath(toString(value));\n    }\n\n    /**\n     * A `baseRest` alias which can be replaced with `identity` by module\n     * replacement plugins.\n     *\n     * @private\n     * @type {Function}\n     * @param {Function} func The function to apply a rest parameter to.\n     * @returns {Function} Returns the new function.\n     */\n    var castRest = baseRest;\n\n    /**\n     * Casts `array` to a slice if it's needed.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {number} start The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the cast slice.\n     */\n    function castSlice(array, start, end) {\n      var length = array.length;\n      end = end === undefined ? length : end;\n      return (!start && end >= length) ? array : baseSlice(array, start, end);\n    }\n\n    /**\n     * A simple wrapper around the global [`clearTimeout`](https://mdn.io/clearTimeout).\n     *\n     * @private\n     * @param {number|Object} id The timer id or timeout object of the timer to clear.\n     */\n    var clearTimeout = ctxClearTimeout || function(id) {\n      return root.clearTimeout(id);\n    };\n\n    /**\n     * Creates a clone of  `buffer`.\n     *\n     * @private\n     * @param {Buffer} buffer The buffer to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Buffer} Returns the cloned buffer.\n     */\n    function cloneBuffer(buffer, isDeep) {\n      if (isDeep) {\n        return buffer.slice();\n      }\n      var length = buffer.length,\n          result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\n      buffer.copy(result);\n      return result;\n    }\n\n    /**\n     * Creates a clone of `arrayBuffer`.\n     *\n     * @private\n     * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n     * @returns {ArrayBuffer} Returns the cloned array buffer.\n     */\n    function cloneArrayBuffer(arrayBuffer) {\n      var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n      new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n      return result;\n    }\n\n    /**\n     * Creates a clone of `dataView`.\n     *\n     * @private\n     * @param {Object} dataView The data view to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned data view.\n     */\n    function cloneDataView(dataView, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n      return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n    }\n\n    /**\n     * Creates a clone of `regexp`.\n     *\n     * @private\n     * @param {Object} regexp The regexp to clone.\n     * @returns {Object} Returns the cloned regexp.\n     */\n    function cloneRegExp(regexp) {\n      var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n      result.lastIndex = regexp.lastIndex;\n      return result;\n    }\n\n    /**\n     * Creates a clone of the `symbol` object.\n     *\n     * @private\n     * @param {Object} symbol The symbol object to clone.\n     * @returns {Object} Returns the cloned symbol object.\n     */\n    function cloneSymbol(symbol) {\n      return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n    }\n\n    /**\n     * Creates a clone of `typedArray`.\n     *\n     * @private\n     * @param {Object} typedArray The typed array to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned typed array.\n     */\n    function cloneTypedArray(typedArray, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n      return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n    }\n\n    /**\n     * Compares values to sort them in ascending order.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {number} Returns the sort order indicator for `value`.\n     */\n    function compareAscending(value, other) {\n      if (value !== other) {\n        var valIsDefined = value !== undefined,\n            valIsNull = value === null,\n            valIsReflexive = value === value,\n            valIsSymbol = isSymbol(value);\n\n        var othIsDefined = other !== undefined,\n            othIsNull = other === null,\n            othIsReflexive = other === other,\n            othIsSymbol = isSymbol(other);\n\n        if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||\n            (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||\n            (valIsNull && othIsDefined && othIsReflexive) ||\n            (!valIsDefined && othIsReflexive) ||\n            !valIsReflexive) {\n          return 1;\n        }\n        if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||\n            (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||\n            (othIsNull && valIsDefined && valIsReflexive) ||\n            (!othIsDefined && valIsReflexive) ||\n            !othIsReflexive) {\n          return -1;\n        }\n      }\n      return 0;\n    }\n\n    /**\n     * Used by `_.orderBy` to compare multiple properties of a value to another\n     * and stable sort them.\n     *\n     * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,\n     * specify an order of \"desc\" for descending or \"asc\" for ascending sort order\n     * of corresponding values.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {boolean[]|string[]} orders The order to sort by for each property.\n     * @returns {number} Returns the sort order indicator for `object`.\n     */\n    function compareMultiple(object, other, orders) {\n      var index = -1,\n          objCriteria = object.criteria,\n          othCriteria = other.criteria,\n          length = objCriteria.length,\n          ordersLength = orders.length;\n\n      while (++index < length) {\n        var result = compareAscending(objCriteria[index], othCriteria[index]);\n        if (result) {\n          if (index >= ordersLength) {\n            return result;\n          }\n          var order = orders[index];\n          return result * (order == 'desc' ? -1 : 1);\n        }\n      }\n      // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n      // that causes it, under certain circumstances, to provide the same value for\n      // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n      // for more details.\n      //\n      // This also ensures a stable sort in V8 and other engines.\n      // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\n      return object.index - other.index;\n    }\n\n    /**\n     * Creates an array that is the composition of partially applied arguments,\n     * placeholders, and provided arguments into a single array of arguments.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to prepend to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgs(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersLength = holders.length,\n          leftIndex = -1,\n          leftLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(leftLength + rangeLength),\n          isUncurried = !isCurried;\n\n      while (++leftIndex < leftLength) {\n        result[leftIndex] = partials[leftIndex];\n      }\n      while (++argsIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[holders[argsIndex]] = args[argsIndex];\n        }\n      }\n      while (rangeLength--) {\n        result[leftIndex++] = args[argsIndex++];\n      }\n      return result;\n    }\n\n    /**\n     * This function is like `composeArgs` except that the arguments composition\n     * is tailored for `_.partialRight`.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to append to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgsRight(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersIndex = -1,\n          holdersLength = holders.length,\n          rightIndex = -1,\n          rightLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(rangeLength + rightLength),\n          isUncurried = !isCurried;\n\n      while (++argsIndex < rangeLength) {\n        result[argsIndex] = args[argsIndex];\n      }\n      var offset = argsIndex;\n      while (++rightIndex < rightLength) {\n        result[offset + rightIndex] = partials[rightIndex];\n      }\n      while (++holdersIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[offset + holders[holdersIndex]] = args[argsIndex++];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Copies the values of `source` to `array`.\n     *\n     * @private\n     * @param {Array} source The array to copy values from.\n     * @param {Array} [array=[]] The array to copy values to.\n     * @returns {Array} Returns `array`.\n     */\n    function copyArray(source, array) {\n      var index = -1,\n          length = source.length;\n\n      array || (array = Array(length));\n      while (++index < length) {\n        array[index] = source[index];\n      }\n      return array;\n    }\n\n    /**\n     * Copies properties of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy properties from.\n     * @param {Array} props The property identifiers to copy.\n     * @param {Object} [object={}] The object to copy properties to.\n     * @param {Function} [customizer] The function to customize copied values.\n     * @returns {Object} Returns `object`.\n     */\n    function copyObject(source, props, object, customizer) {\n      var isNew = !object;\n      object || (object = {});\n\n      var index = -1,\n          length = props.length;\n\n      while (++index < length) {\n        var key = props[index];\n\n        var newValue = customizer\n          ? customizer(object[key], source[key], key, object, source)\n          : undefined;\n\n        if (newValue === undefined) {\n          newValue = source[key];\n        }\n        if (isNew) {\n          baseAssignValue(object, key, newValue);\n        } else {\n          assignValue(object, key, newValue);\n        }\n      }\n      return object;\n    }\n\n    /**\n     * Copies own symbols of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy symbols from.\n     * @param {Object} [object={}] The object to copy symbols to.\n     * @returns {Object} Returns `object`.\n     */\n    function copySymbols(source, object) {\n      return copyObject(source, getSymbols(source), object);\n    }\n\n    /**\n     * Copies own and inherited symbols of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy symbols from.\n     * @param {Object} [object={}] The object to copy symbols to.\n     * @returns {Object} Returns `object`.\n     */\n    function copySymbolsIn(source, object) {\n      return copyObject(source, getSymbolsIn(source), object);\n    }\n\n    /**\n     * Creates a function like `_.groupBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} [initializer] The accumulator object initializer.\n     * @returns {Function} Returns the new aggregator function.\n     */\n    function createAggregator(setter, initializer) {\n      return function(collection, iteratee) {\n        var func = isArray(collection) ? arrayAggregator : baseAggregator,\n            accumulator = initializer ? initializer() : {};\n\n        return func(collection, setter, getIteratee(iteratee, 2), accumulator);\n      };\n    }\n\n    /**\n     * Creates a function like `_.assign`.\n     *\n     * @private\n     * @param {Function} assigner The function to assign values.\n     * @returns {Function} Returns the new assigner function.\n     */\n    function createAssigner(assigner) {\n      return baseRest(function(object, sources) {\n        var index = -1,\n            length = sources.length,\n            customizer = length > 1 ? sources[length - 1] : undefined,\n            guard = length > 2 ? sources[2] : undefined;\n\n        customizer = (assigner.length > 3 && typeof customizer == 'function')\n          ? (length--, customizer)\n          : undefined;\n\n        if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n          customizer = length < 3 ? undefined : customizer;\n          length = 1;\n        }\n        object = Object(object);\n        while (++index < length) {\n          var source = sources[index];\n          if (source) {\n            assigner(object, source, index, customizer);\n          }\n        }\n        return object;\n      });\n    }\n\n    /**\n     * Creates a `baseEach` or `baseEachRight` function.\n     *\n     * @private\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseEach(eachFunc, fromRight) {\n      return function(collection, iteratee) {\n        if (collection == null) {\n          return collection;\n        }\n        if (!isArrayLike(collection)) {\n          return eachFunc(collection, iteratee);\n        }\n        var length = collection.length,\n            index = fromRight ? length : -1,\n            iterable = Object(collection);\n\n        while ((fromRight ? index-- : ++index < length)) {\n          if (iteratee(iterable[index], index, iterable) === false) {\n            break;\n          }\n        }\n        return collection;\n      };\n    }\n\n    /**\n     * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseFor(fromRight) {\n      return function(object, iteratee, keysFunc) {\n        var index = -1,\n            iterable = Object(object),\n            props = keysFunc(object),\n            length = props.length;\n\n        while (length--) {\n          var key = props[fromRight ? length : ++index];\n          if (iteratee(iterable[key], key, iterable) === false) {\n            break;\n          }\n        }\n        return object;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the optional `this`\n     * binding of `thisArg`.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createBind(func, bitmask, thisArg) {\n      var isBind = bitmask & WRAP_BIND_FLAG,\n          Ctor = createCtor(func);\n\n      function wrapper() {\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return fn.apply(isBind ? thisArg : this, arguments);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.lowerFirst`.\n     *\n     * @private\n     * @param {string} methodName The name of the `String` case method to use.\n     * @returns {Function} Returns the new case function.\n     */\n    function createCaseFirst(methodName) {\n      return function(string) {\n        string = toString(string);\n\n        var strSymbols = hasUnicode(string)\n          ? stringToArray(string)\n          : undefined;\n\n        var chr = strSymbols\n          ? strSymbols[0]\n          : string.charAt(0);\n\n        var trailing = strSymbols\n          ? castSlice(strSymbols, 1).join('')\n          : string.slice(1);\n\n        return chr[methodName]() + trailing;\n      };\n    }\n\n    /**\n     * Creates a function like `_.camelCase`.\n     *\n     * @private\n     * @param {Function} callback The function to combine each word.\n     * @returns {Function} Returns the new compounder function.\n     */\n    function createCompounder(callback) {\n      return function(string) {\n        return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');\n      };\n    }\n\n    /**\n     * Creates a function that produces an instance of `Ctor` regardless of\n     * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n     *\n     * @private\n     * @param {Function} Ctor The constructor to wrap.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCtor(Ctor) {\n      return function() {\n        // Use a `switch` statement to work with class constructors. See\n        // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\n        // for more details.\n        var args = arguments;\n        switch (args.length) {\n          case 0: return new Ctor;\n          case 1: return new Ctor(args[0]);\n          case 2: return new Ctor(args[0], args[1]);\n          case 3: return new Ctor(args[0], args[1], args[2]);\n          case 4: return new Ctor(args[0], args[1], args[2], args[3]);\n          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);\n          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);\n          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\n        }\n        var thisBinding = baseCreate(Ctor.prototype),\n            result = Ctor.apply(thisBinding, args);\n\n        // Mimic the constructor's `return` behavior.\n        // See https://es5.github.io/#x13.2.2 for more details.\n        return isObject(result) ? result : thisBinding;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to enable currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {number} arity The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCurry(func, bitmask, arity) {\n      var Ctor = createCtor(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length,\n            placeholder = getHolder(wrapper);\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)\n          ? []\n          : replaceHolders(args, placeholder);\n\n        length -= holders.length;\n        if (length < arity) {\n          return createRecurry(\n            func, bitmask, createHybrid, wrapper.placeholder, undefined,\n            args, holders, undefined, undefined, arity - length);\n        }\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return apply(fn, this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.find` or `_.findLast` function.\n     *\n     * @private\n     * @param {Function} findIndexFunc The function to find the collection index.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFind(findIndexFunc) {\n      return function(collection, predicate, fromIndex) {\n        var iterable = Object(collection);\n        if (!isArrayLike(collection)) {\n          var iteratee = getIteratee(predicate, 3);\n          collection = keys(collection);\n          predicate = function(key) { return iteratee(iterable[key], key, iterable); };\n        }\n        var index = findIndexFunc(collection, predicate, fromIndex);\n        return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n      };\n    }\n\n    /**\n     * Creates a `_.flow` or `_.flowRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new flow function.\n     */\n    function createFlow(fromRight) {\n      return flatRest(function(funcs) {\n        var length = funcs.length,\n            index = length,\n            prereq = LodashWrapper.prototype.thru;\n\n        if (fromRight) {\n          funcs.reverse();\n        }\n        while (index--) {\n          var func = funcs[index];\n          if (typeof func != 'function') {\n            throw new TypeError(FUNC_ERROR_TEXT);\n          }\n          if (prereq && !wrapper && getFuncName(func) == 'wrapper') {\n            var wrapper = new LodashWrapper([], true);\n          }\n        }\n        index = wrapper ? index : length;\n        while (++index < length) {\n          func = funcs[index];\n\n          var funcName = getFuncName(func),\n              data = funcName == 'wrapper' ? getData(func) : undefined;\n\n          if (data && isLaziable(data[0]) &&\n                data[1] == (WRAP_ARY_FLAG | WRAP_CURRY_FLAG | WRAP_PARTIAL_FLAG | WRAP_REARG_FLAG) &&\n                !data[4].length && data[9] == 1\n              ) {\n            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);\n          } else {\n            wrapper = (func.length == 1 && isLaziable(func))\n              ? wrapper[funcName]()\n              : wrapper.thru(func);\n          }\n        }\n        return function() {\n          var args = arguments,\n              value = args[0];\n\n          if (wrapper && args.length == 1 && isArray(value)) {\n            return wrapper.plant(value).value();\n          }\n          var index = 0,\n              result = length ? funcs[index].apply(this, args) : value;\n\n          while (++index < length) {\n            result = funcs[index].call(this, result);\n          }\n          return result;\n        };\n      });\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with optional `this`\n     * binding of `thisArg`, partial application, and currying.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [partialsRight] The arguments to append to those provided\n     *  to the new function.\n     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n      var isAry = bitmask & WRAP_ARY_FLAG,\n          isBind = bitmask & WRAP_BIND_FLAG,\n          isBindKey = bitmask & WRAP_BIND_KEY_FLAG,\n          isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG),\n          isFlip = bitmask & WRAP_FLIP_FLAG,\n          Ctor = isBindKey ? undefined : createCtor(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length;\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        if (isCurried) {\n          var placeholder = getHolder(wrapper),\n              holdersCount = countHolders(args, placeholder);\n        }\n        if (partials) {\n          args = composeArgs(args, partials, holders, isCurried);\n        }\n        if (partialsRight) {\n          args = composeArgsRight(args, partialsRight, holdersRight, isCurried);\n        }\n        length -= holdersCount;\n        if (isCurried && length < arity) {\n          var newHolders = replaceHolders(args, placeholder);\n          return createRecurry(\n            func, bitmask, createHybrid, wrapper.placeholder, thisArg,\n            args, newHolders, argPos, ary, arity - length\n          );\n        }\n        var thisBinding = isBind ? thisArg : this,\n            fn = isBindKey ? thisBinding[func] : func;\n\n        length = args.length;\n        if (argPos) {\n          args = reorder(args, argPos);\n        } else if (isFlip && length > 1) {\n          args.reverse();\n        }\n        if (isAry && ary < length) {\n          args.length = ary;\n        }\n        if (this && this !== root && this instanceof wrapper) {\n          fn = Ctor || createCtor(fn);\n        }\n        return fn.apply(thisBinding, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.invertBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} toIteratee The function to resolve iteratees.\n     * @returns {Function} Returns the new inverter function.\n     */\n    function createInverter(setter, toIteratee) {\n      return function(object, iteratee) {\n        return baseInverter(object, setter, toIteratee(iteratee), {});\n      };\n    }\n\n    /**\n     * Creates a function that performs a mathematical operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @param {number} [defaultValue] The value used for `undefined` arguments.\n     * @returns {Function} Returns the new mathematical operation function.\n     */\n    function createMathOperation(operator, defaultValue) {\n      return function(value, other) {\n        var result;\n        if (value === undefined && other === undefined) {\n          return defaultValue;\n        }\n        if (value !== undefined) {\n          result = value;\n        }\n        if (other !== undefined) {\n          if (result === undefined) {\n            return other;\n          }\n          if (typeof value == 'string' || typeof other == 'string') {\n            value = baseToString(value);\n            other = baseToString(other);\n          } else {\n            value = baseToNumber(value);\n            other = baseToNumber(other);\n          }\n          result = operator(value, other);\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function like `_.over`.\n     *\n     * @private\n     * @param {Function} arrayFunc The function to iterate over iteratees.\n     * @returns {Function} Returns the new over function.\n     */\n    function createOver(arrayFunc) {\n      return flatRest(function(iteratees) {\n        iteratees = arrayMap(iteratees, baseUnary(getIteratee()));\n        return baseRest(function(args) {\n          var thisArg = this;\n          return arrayFunc(iteratees, function(iteratee) {\n            return apply(iteratee, thisArg, args);\n          });\n        });\n      });\n    }\n\n    /**\n     * Creates the padding for `string` based on `length`. The `chars` string\n     * is truncated if the number of characters exceeds `length`.\n     *\n     * @private\n     * @param {number} length The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padding for `string`.\n     */\n    function createPadding(length, chars) {\n      chars = chars === undefined ? ' ' : baseToString(chars);\n\n      var charsLength = chars.length;\n      if (charsLength < 2) {\n        return charsLength ? baseRepeat(chars, length) : chars;\n      }\n      var result = baseRepeat(chars, nativeCeil(length / stringSize(chars)));\n      return hasUnicode(chars)\n        ? castSlice(stringToArray(result), 0, length).join('')\n        : result.slice(0, length);\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the `this` binding\n     * of `thisArg` and `partials` prepended to the arguments it receives.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {Array} partials The arguments to prepend to those provided to\n     *  the new function.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createPartial(func, bitmask, thisArg, partials) {\n      var isBind = bitmask & WRAP_BIND_FLAG,\n          Ctor = createCtor(func);\n\n      function wrapper() {\n        var argsIndex = -1,\n            argsLength = arguments.length,\n            leftIndex = -1,\n            leftLength = partials.length,\n            args = Array(leftLength + argsLength),\n            fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\n        while (++leftIndex < leftLength) {\n          args[leftIndex] = partials[leftIndex];\n        }\n        while (argsLength--) {\n          args[leftIndex++] = arguments[++argsIndex];\n        }\n        return apply(fn, isBind ? thisArg : this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.range` or `_.rangeRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new range function.\n     */\n    function createRange(fromRight) {\n      return function(start, end, step) {\n        if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {\n          end = step = undefined;\n        }\n        // Ensure the sign of `-0` is preserved.\n        start = toFinite(start);\n        if (end === undefined) {\n          end = start;\n          start = 0;\n        } else {\n          end = toFinite(end);\n        }\n        step = step === undefined ? (start < end ? 1 : -1) : toFinite(step);\n        return baseRange(start, end, step, fromRight);\n      };\n    }\n\n    /**\n     * Creates a function that performs a relational operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @returns {Function} Returns the new relational operation function.\n     */\n    function createRelationalOperation(operator) {\n      return function(value, other) {\n        if (!(typeof value == 'string' && typeof other == 'string')) {\n          value = toNumber(value);\n          other = toNumber(other);\n        }\n        return operator(value, other);\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to continue currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {Function} wrapFunc The function to create the `func` wrapper.\n     * @param {*} placeholder The placeholder value.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {\n      var isCurry = bitmask & WRAP_CURRY_FLAG,\n          newHolders = isCurry ? holders : undefined,\n          newHoldersRight = isCurry ? undefined : holders,\n          newPartials = isCurry ? partials : undefined,\n          newPartialsRight = isCurry ? undefined : partials;\n\n      bitmask |= (isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG);\n      bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG);\n\n      if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {\n        bitmask &= ~(WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG);\n      }\n      var newData = [\n        func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,\n        newHoldersRight, argPos, ary, arity\n      ];\n\n      var result = wrapFunc.apply(undefined, newData);\n      if (isLaziable(func)) {\n        setData(result, newData);\n      }\n      result.placeholder = placeholder;\n      return setWrapToString(result, func, bitmask);\n    }\n\n    /**\n     * Creates a function like `_.round`.\n     *\n     * @private\n     * @param {string} methodName The name of the `Math` method to use when rounding.\n     * @returns {Function} Returns the new round function.\n     */\n    function createRound(methodName) {\n      var func = Math[methodName];\n      return function(number, precision) {\n        number = toNumber(number);\n        precision = precision == null ? 0 : nativeMin(toInteger(precision), 292);\n        if (precision) {\n          // Shift with exponential notation to avoid floating-point issues.\n          // See [MDN](https://mdn.io/round#Examples) for more details.\n          var pair = (toString(number) + 'e').split('e'),\n              value = func(pair[0] + 'e' + (+pair[1] + precision));\n\n          pair = (toString(value) + 'e').split('e');\n          return +(pair[0] + 'e' + (+pair[1] - precision));\n        }\n        return func(number);\n      };\n    }\n\n    /**\n     * Creates a set object of `values`.\n     *\n     * @private\n     * @param {Array} values The values to add to the set.\n     * @returns {Object} Returns the new set.\n     */\n    var createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n      return new Set(values);\n    };\n\n    /**\n     * Creates a `_.toPairs` or `_.toPairsIn` function.\n     *\n     * @private\n     * @param {Function} keysFunc The function to get the keys of a given object.\n     * @returns {Function} Returns the new pairs function.\n     */\n    function createToPairs(keysFunc) {\n      return function(object) {\n        var tag = getTag(object);\n        if (tag == mapTag) {\n          return mapToArray(object);\n        }\n        if (tag == setTag) {\n          return setToPairs(object);\n        }\n        return baseToPairs(object, keysFunc(object));\n      };\n    }\n\n    /**\n     * Creates a function that either curries or invokes `func` with optional\n     * `this` binding and partially applied arguments.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask flags.\n     *    1 - `_.bind`\n     *    2 - `_.bindKey`\n     *    4 - `_.curry` or `_.curryRight` of a bound function\n     *    8 - `_.curry`\n     *   16 - `_.curryRight`\n     *   32 - `_.partial`\n     *   64 - `_.partialRight`\n     *  128 - `_.rearg`\n     *  256 - `_.ary`\n     *  512 - `_.flip`\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to be partially applied.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\n      var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;\n      if (!isBindKey && typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var length = partials ? partials.length : 0;\n      if (!length) {\n        bitmask &= ~(WRAP_PARTIAL_FLAG | WRAP_PARTIAL_RIGHT_FLAG);\n        partials = holders = undefined;\n      }\n      ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);\n      arity = arity === undefined ? arity : toInteger(arity);\n      length -= holders ? holders.length : 0;\n\n      if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {\n        var partialsRight = partials,\n            holdersRight = holders;\n\n        partials = holders = undefined;\n      }\n      var data = isBindKey ? undefined : getData(func);\n\n      var newData = [\n        func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,\n        argPos, ary, arity\n      ];\n\n      if (data) {\n        mergeData(newData, data);\n      }\n      func = newData[0];\n      bitmask = newData[1];\n      thisArg = newData[2];\n      partials = newData[3];\n      holders = newData[4];\n      arity = newData[9] = newData[9] === undefined\n        ? (isBindKey ? 0 : func.length)\n        : nativeMax(newData[9] - length, 0);\n\n      if (!arity && bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG)) {\n        bitmask &= ~(WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG);\n      }\n      if (!bitmask || bitmask == WRAP_BIND_FLAG) {\n        var result = createBind(func, bitmask, thisArg);\n      } else if (bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG) {\n        result = createCurry(func, bitmask, arity);\n      } else if ((bitmask == WRAP_PARTIAL_FLAG || bitmask == (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG)) && !holders.length) {\n        result = createPartial(func, bitmask, thisArg, partials);\n      } else {\n        result = createHybrid.apply(undefined, newData);\n      }\n      var setter = data ? baseSetData : setData;\n      return setWrapToString(setter(result, newData), func, bitmask);\n    }\n\n    /**\n     * Used by `_.defaults` to customize its `_.assignIn` use to assign properties\n     * of source objects to the destination object for all destination properties\n     * that resolve to `undefined`.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to assign.\n     * @param {Object} object The parent object of `objValue`.\n     * @returns {*} Returns the value to assign.\n     */\n    function customDefaultsAssignIn(objValue, srcValue, key, object) {\n      if (objValue === undefined ||\n          (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n        return srcValue;\n      }\n      return objValue;\n    }\n\n    /**\n     * Used by `_.defaultsDeep` to customize its `_.merge` use to merge source\n     * objects into destination objects that are passed thru.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to merge.\n     * @param {Object} object The parent object of `objValue`.\n     * @param {Object} source The parent object of `srcValue`.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     * @returns {*} Returns the value to assign.\n     */\n    function customDefaultsMerge(objValue, srcValue, key, object, source, stack) {\n      if (isObject(objValue) && isObject(srcValue)) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        stack.set(srcValue, objValue);\n        baseMerge(objValue, srcValue, undefined, customDefaultsMerge, stack);\n        stack['delete'](srcValue);\n      }\n      return objValue;\n    }\n\n    /**\n     * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain\n     * objects.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @param {string} key The key of the property to inspect.\n     * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.\n     */\n    function customOmitClone(value) {\n      return isPlainObject(value) ? undefined : value;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for arrays with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Array} array The array to compare.\n     * @param {Array} other The other array to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `array` and `other` objects.\n     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n     */\n    function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n          arrLength = array.length,\n          othLength = other.length;\n\n      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(array);\n      if (stacked && stack.get(other)) {\n        return stacked == other;\n      }\n      var index = -1,\n          result = true,\n          seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n      stack.set(array, other);\n      stack.set(other, array);\n\n      // Ignore non-index properties.\n      while (++index < arrLength) {\n        var arrValue = array[index],\n            othValue = other[index];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, arrValue, index, other, array, stack)\n            : customizer(arrValue, othValue, index, array, other, stack);\n        }\n        if (compared !== undefined) {\n          if (compared) {\n            continue;\n          }\n          result = false;\n          break;\n        }\n        // Recursively compare arrays (susceptible to call stack limits).\n        if (seen) {\n          if (!arraySome(other, function(othValue, othIndex) {\n                if (!cacheHas(seen, othIndex) &&\n                    (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n                  return seen.push(othIndex);\n                }\n              })) {\n            result = false;\n            break;\n          }\n        } else if (!(\n              arrValue === othValue ||\n                equalFunc(arrValue, othValue, bitmask, customizer, stack)\n            )) {\n          result = false;\n          break;\n        }\n      }\n      stack['delete'](array);\n      stack['delete'](other);\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for comparing objects of\n     * the same `toStringTag`.\n     *\n     * **Note:** This function only supports comparing values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {string} tag The `toStringTag` of the objects to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n      switch (tag) {\n        case dataViewTag:\n          if ((object.byteLength != other.byteLength) ||\n              (object.byteOffset != other.byteOffset)) {\n            return false;\n          }\n          object = object.buffer;\n          other = other.buffer;\n\n        case arrayBufferTag:\n          if ((object.byteLength != other.byteLength) ||\n              !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n            return false;\n          }\n          return true;\n\n        case boolTag:\n        case dateTag:\n        case numberTag:\n          // Coerce booleans to `1` or `0` and dates to milliseconds.\n          // Invalid dates are coerced to `NaN`.\n          return eq(+object, +other);\n\n        case errorTag:\n          return object.name == other.name && object.message == other.message;\n\n        case regexpTag:\n        case stringTag:\n          // Coerce regexes to strings and treat strings, primitives and objects,\n          // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n          // for more details.\n          return object == (other + '');\n\n        case mapTag:\n          var convert = mapToArray;\n\n        case setTag:\n          var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n          convert || (convert = setToArray);\n\n          if (object.size != other.size && !isPartial) {\n            return false;\n          }\n          // Assume cyclic values are equal.\n          var stacked = stack.get(object);\n          if (stacked) {\n            return stacked == other;\n          }\n          bitmask |= COMPARE_UNORDERED_FLAG;\n\n          // Recursively compare objects (susceptible to call stack limits).\n          stack.set(object, other);\n          var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n          stack['delete'](object);\n          return result;\n\n        case symbolTag:\n          if (symbolValueOf) {\n            return symbolValueOf.call(object) == symbolValueOf.call(other);\n          }\n      }\n      return false;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for objects with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n          objProps = getAllKeys(object),\n          objLength = objProps.length,\n          othProps = getAllKeys(other),\n          othLength = othProps.length;\n\n      if (objLength != othLength && !isPartial) {\n        return false;\n      }\n      var index = objLength;\n      while (index--) {\n        var key = objProps[index];\n        if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n          return false;\n        }\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked && stack.get(other)) {\n        return stacked == other;\n      }\n      var result = true;\n      stack.set(object, other);\n      stack.set(other, object);\n\n      var skipCtor = isPartial;\n      while (++index < objLength) {\n        key = objProps[index];\n        var objValue = object[key],\n            othValue = other[key];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, objValue, key, other, object, stack)\n            : customizer(objValue, othValue, key, object, other, stack);\n        }\n        // Recursively compare objects (susceptible to call stack limits).\n        if (!(compared === undefined\n              ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n              : compared\n            )) {\n          result = false;\n          break;\n        }\n        skipCtor || (skipCtor = key == 'constructor');\n      }\n      if (result && !skipCtor) {\n        var objCtor = object.constructor,\n            othCtor = other.constructor;\n\n        // Non `Object` object instances with different constructors are not equal.\n        if (objCtor != othCtor &&\n            ('constructor' in object && 'constructor' in other) &&\n            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n              typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n          result = false;\n        }\n      }\n      stack['delete'](object);\n      stack['delete'](other);\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseRest` which flattens the rest array.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @returns {Function} Returns the new function.\n     */\n    function flatRest(func) {\n      return setToString(overRest(func, undefined, flatten), func + '');\n    }\n\n    /**\n     * Creates an array of own enumerable property names and symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeys(object) {\n      return baseGetAllKeys(object, keys, getSymbols);\n    }\n\n    /**\n     * Creates an array of own and inherited enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeysIn(object) {\n      return baseGetAllKeys(object, keysIn, getSymbolsIn);\n    }\n\n    /**\n     * Gets metadata for `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {*} Returns the metadata for `func`.\n     */\n    var getData = !metaMap ? noop : function(func) {\n      return metaMap.get(func);\n    };\n\n    /**\n     * Gets the name of `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {string} Returns the function name.\n     */\n    function getFuncName(func) {\n      var result = (func.name + ''),\n          array = realNames[result],\n          length = hasOwnProperty.call(realNames, result) ? array.length : 0;\n\n      while (length--) {\n        var data = array[length],\n            otherFunc = data.func;\n        if (otherFunc == null || otherFunc == func) {\n          return data.name;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Gets the argument placeholder value for `func`.\n     *\n     * @private\n     * @param {Function} func The function to inspect.\n     * @returns {*} Returns the placeholder value.\n     */\n    function getHolder(func) {\n      var object = hasOwnProperty.call(lodash, 'placeholder') ? lodash : func;\n      return object.placeholder;\n    }\n\n    /**\n     * Gets the appropriate \"iteratee\" function. If `_.iteratee` is customized,\n     * this function returns the custom method, otherwise it returns `baseIteratee`.\n     * If arguments are provided, the chosen function is invoked with them and\n     * its result is returned.\n     *\n     * @private\n     * @param {*} [value] The value to convert to an iteratee.\n     * @param {number} [arity] The arity of the created iteratee.\n     * @returns {Function} Returns the chosen function or its result.\n     */\n    function getIteratee() {\n      var result = lodash.iteratee || iteratee;\n      result = result === iteratee ? baseIteratee : result;\n      return arguments.length ? result(arguments[0], arguments[1]) : result;\n    }\n\n    /**\n     * Gets the data for `map`.\n     *\n     * @private\n     * @param {Object} map The map to query.\n     * @param {string} key The reference key.\n     * @returns {*} Returns the map data.\n     */\n    function getMapData(map, key) {\n      var data = map.__data__;\n      return isKeyable(key)\n        ? data[typeof key == 'string' ? 'string' : 'hash']\n        : data.map;\n    }\n\n    /**\n     * Gets the property names, values, and compare flags of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the match data of `object`.\n     */\n    function getMatchData(object) {\n      var result = keys(object),\n          length = result.length;\n\n      while (length--) {\n        var key = result[length],\n            value = object[key];\n\n        result[length] = [key, value, isStrictComparable(value)];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the native function at `key` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the method to get.\n     * @returns {*} Returns the function if it's native, else `undefined`.\n     */\n    function getNative(object, key) {\n      var value = getValue(object, key);\n      return baseIsNative(value) ? value : undefined;\n    }\n\n    /**\n     * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the raw `toStringTag`.\n     */\n    function getRawTag(value) {\n      var isOwn = hasOwnProperty.call(value, symToStringTag),\n          tag = value[symToStringTag];\n\n      try {\n        value[symToStringTag] = undefined;\n        var unmasked = true;\n      } catch (e) {}\n\n      var result = nativeObjectToString.call(value);\n      if (unmasked) {\n        if (isOwn) {\n          value[symToStringTag] = tag;\n        } else {\n          delete value[symToStringTag];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array of the own enumerable symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n      if (object == null) {\n        return [];\n      }\n      object = Object(object);\n      return arrayFilter(nativeGetSymbols(object), function(symbol) {\n        return propertyIsEnumerable.call(object, symbol);\n      });\n    };\n\n    /**\n     * Creates an array of the own and inherited enumerable symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n      var result = [];\n      while (object) {\n        arrayPush(result, getSymbols(object));\n        object = getPrototype(object);\n      }\n      return result;\n    };\n\n    /**\n     * Gets the `toStringTag` of `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    var getTag = baseGetTag;\n\n    // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\n    if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n        (Map && getTag(new Map) != mapTag) ||\n        (Promise && getTag(Promise.resolve()) != promiseTag) ||\n        (Set && getTag(new Set) != setTag) ||\n        (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n      getTag = function(value) {\n        var result = baseGetTag(value),\n            Ctor = result == objectTag ? value.constructor : undefined,\n            ctorString = Ctor ? toSource(Ctor) : '';\n\n        if (ctorString) {\n          switch (ctorString) {\n            case dataViewCtorString: return dataViewTag;\n            case mapCtorString: return mapTag;\n            case promiseCtorString: return promiseTag;\n            case setCtorString: return setTag;\n            case weakMapCtorString: return weakMapTag;\n          }\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Gets the view, applying any `transforms` to the `start` and `end` positions.\n     *\n     * @private\n     * @param {number} start The start of the view.\n     * @param {number} end The end of the view.\n     * @param {Array} transforms The transformations to apply to the view.\n     * @returns {Object} Returns an object containing the `start` and `end`\n     *  positions of the view.\n     */\n    function getView(start, end, transforms) {\n      var index = -1,\n          length = transforms.length;\n\n      while (++index < length) {\n        var data = transforms[index],\n            size = data.size;\n\n        switch (data.type) {\n          case 'drop':      start += size; break;\n          case 'dropRight': end -= size; break;\n          case 'take':      end = nativeMin(end, start + size); break;\n          case 'takeRight': start = nativeMax(start, end - size); break;\n        }\n      }\n      return { 'start': start, 'end': end };\n    }\n\n    /**\n     * Extracts wrapper details from the `source` body comment.\n     *\n     * @private\n     * @param {string} source The source to inspect.\n     * @returns {Array} Returns the wrapper details.\n     */\n    function getWrapDetails(source) {\n      var match = source.match(reWrapDetails);\n      return match ? match[1].split(reSplitDetails) : [];\n    }\n\n    /**\n     * Checks if `path` exists on `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @param {Function} hasFunc The function to check properties.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     */\n    function hasPath(object, path, hasFunc) {\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length,\n          result = false;\n\n      while (++index < length) {\n        var key = toKey(path[index]);\n        if (!(result = object != null && hasFunc(object, key))) {\n          break;\n        }\n        object = object[key];\n      }\n      if (result || ++index != length) {\n        return result;\n      }\n      length = object == null ? 0 : object.length;\n      return !!length && isLength(length) && isIndex(key, length) &&\n        (isArray(object) || isArguments(object));\n    }\n\n    /**\n     * Initializes an array clone.\n     *\n     * @private\n     * @param {Array} array The array to clone.\n     * @returns {Array} Returns the initialized clone.\n     */\n    function initCloneArray(array) {\n      var length = array.length,\n          result = new array.constructor(length);\n\n      // Add properties assigned by `RegExp#exec`.\n      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n        result.index = array.index;\n        result.input = array.input;\n      }\n      return result;\n    }\n\n    /**\n     * Initializes an object clone.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneObject(object) {\n      return (typeof object.constructor == 'function' && !isPrototype(object))\n        ? baseCreate(getPrototype(object))\n        : {};\n    }\n\n    /**\n     * Initializes an object clone based on its `toStringTag`.\n     *\n     * **Note:** This function only supports cloning values with tags of\n     * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @param {string} tag The `toStringTag` of the object to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneByTag(object, tag, isDeep) {\n      var Ctor = object.constructor;\n      switch (tag) {\n        case arrayBufferTag:\n          return cloneArrayBuffer(object);\n\n        case boolTag:\n        case dateTag:\n          return new Ctor(+object);\n\n        case dataViewTag:\n          return cloneDataView(object, isDeep);\n\n        case float32Tag: case float64Tag:\n        case int8Tag: case int16Tag: case int32Tag:\n        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n          return cloneTypedArray(object, isDeep);\n\n        case mapTag:\n          return new Ctor;\n\n        case numberTag:\n        case stringTag:\n          return new Ctor(object);\n\n        case regexpTag:\n          return cloneRegExp(object);\n\n        case setTag:\n          return new Ctor;\n\n        case symbolTag:\n          return cloneSymbol(object);\n      }\n    }\n\n    /**\n     * Inserts wrapper `details` in a comment at the top of the `source` body.\n     *\n     * @private\n     * @param {string} source The source to modify.\n     * @returns {Array} details The details to insert.\n     * @returns {string} Returns the modified source.\n     */\n    function insertWrapDetails(source, details) {\n      var length = details.length;\n      if (!length) {\n        return source;\n      }\n      var lastIndex = length - 1;\n      details[lastIndex] = (length > 1 ? '& ' : '') + details[lastIndex];\n      details = details.join(length > 2 ? ', ' : ' ');\n      return source.replace(reWrapComment, '{\\n/* [wrapped with ' + details + '] */\\n');\n    }\n\n    /**\n     * Checks if `value` is a flattenable `arguments` object or array.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n     */\n    function isFlattenable(value) {\n      return isArray(value) || isArguments(value) ||\n        !!(spreadableSymbol && value && value[spreadableSymbol]);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like index.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n     */\n    function isIndex(value, length) {\n      var type = typeof value;\n      length = length == null ? MAX_SAFE_INTEGER : length;\n\n      return !!length &&\n        (type == 'number' ||\n          (type != 'symbol' && reIsUint.test(value))) &&\n            (value > -1 && value % 1 == 0 && value < length);\n    }\n\n    /**\n     * Checks if the given arguments are from an iteratee call.\n     *\n     * @private\n     * @param {*} value The potential iteratee value argument.\n     * @param {*} index The potential iteratee index or key argument.\n     * @param {*} object The potential iteratee object argument.\n     * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n     *  else `false`.\n     */\n    function isIterateeCall(value, index, object) {\n      if (!isObject(object)) {\n        return false;\n      }\n      var type = typeof index;\n      if (type == 'number'\n            ? (isArrayLike(object) && isIndex(index, object.length))\n            : (type == 'string' && index in object)\n          ) {\n        return eq(object[index], value);\n      }\n      return false;\n    }\n\n    /**\n     * Checks if `value` is a property name and not a property path.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n     */\n    function isKey(value, object) {\n      if (isArray(value)) {\n        return false;\n      }\n      var type = typeof value;\n      if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n          value == null || isSymbol(value)) {\n        return true;\n      }\n      return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n        (object != null && value in Object(object));\n    }\n\n    /**\n     * Checks if `value` is suitable for use as unique object key.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n     */\n    function isKeyable(value) {\n      var type = typeof value;\n      return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n        ? (value !== '__proto__')\n        : (value === null);\n    }\n\n    /**\n     * Checks if `func` has a lazy counterpart.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` has a lazy counterpart,\n     *  else `false`.\n     */\n    function isLaziable(func) {\n      var funcName = getFuncName(func),\n          other = lodash[funcName];\n\n      if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {\n        return false;\n      }\n      if (func === other) {\n        return true;\n      }\n      var data = getData(other);\n      return !!data && func === data[0];\n    }\n\n    /**\n     * Checks if `func` has its source masked.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n     */\n    function isMasked(func) {\n      return !!maskSrcKey && (maskSrcKey in func);\n    }\n\n    /**\n     * Checks if `func` is capable of being masked.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `func` is maskable, else `false`.\n     */\n    var isMaskable = coreJsData ? isFunction : stubFalse;\n\n    /**\n     * Checks if `value` is likely a prototype object.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n     */\n    function isPrototype(value) {\n      var Ctor = value && value.constructor,\n          proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n      return value === proto;\n    }\n\n    /**\n     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` if suitable for strict\n     *  equality comparisons, else `false`.\n     */\n    function isStrictComparable(value) {\n      return value === value && !isObject(value);\n    }\n\n    /**\n     * A specialized version of `matchesProperty` for source values suitable\n     * for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {string} key The key of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function matchesStrictComparable(key, srcValue) {\n      return function(object) {\n        if (object == null) {\n          return false;\n        }\n        return object[key] === srcValue &&\n          (srcValue !== undefined || (key in Object(object)));\n      };\n    }\n\n    /**\n     * A specialized version of `_.memoize` which clears the memoized function's\n     * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n     *\n     * @private\n     * @param {Function} func The function to have its output memoized.\n     * @returns {Function} Returns the new memoized function.\n     */\n    function memoizeCapped(func) {\n      var result = memoize(func, function(key) {\n        if (cache.size === MAX_MEMOIZE_SIZE) {\n          cache.clear();\n        }\n        return key;\n      });\n\n      var cache = result.cache;\n      return result;\n    }\n\n    /**\n     * Merges the function metadata of `source` into `data`.\n     *\n     * Merging metadata reduces the number of wrappers used to invoke a function.\n     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\n     * may be applied regardless of execution order. Methods like `_.ary` and\n     * `_.rearg` modify function arguments, making the order in which they are\n     * executed important, preventing the merging of metadata. However, we make\n     * an exception for a safe combined case where curried functions have `_.ary`\n     * and or `_.rearg` applied.\n     *\n     * @private\n     * @param {Array} data The destination metadata.\n     * @param {Array} source The source metadata.\n     * @returns {Array} Returns `data`.\n     */\n    function mergeData(data, source) {\n      var bitmask = data[1],\n          srcBitmask = source[1],\n          newBitmask = bitmask | srcBitmask,\n          isCommon = newBitmask < (WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG | WRAP_ARY_FLAG);\n\n      var isCombo =\n        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_CURRY_FLAG)) ||\n        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_REARG_FLAG) && (data[7].length <= source[8])) ||\n        ((srcBitmask == (WRAP_ARY_FLAG | WRAP_REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == WRAP_CURRY_FLAG));\n\n      // Exit early if metadata can't be merged.\n      if (!(isCommon || isCombo)) {\n        return data;\n      }\n      // Use source `thisArg` if available.\n      if (srcBitmask & WRAP_BIND_FLAG) {\n        data[2] = source[2];\n        // Set when currying a bound function.\n        newBitmask |= bitmask & WRAP_BIND_FLAG ? 0 : WRAP_CURRY_BOUND_FLAG;\n      }\n      // Compose partial arguments.\n      var value = source[3];\n      if (value) {\n        var partials = data[3];\n        data[3] = partials ? composeArgs(partials, value, source[4]) : value;\n        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];\n      }\n      // Compose partial right arguments.\n      value = source[5];\n      if (value) {\n        partials = data[5];\n        data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;\n        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];\n      }\n      // Use source `argPos` if available.\n      value = source[7];\n      if (value) {\n        data[7] = value;\n      }\n      // Use source `ary` if it's smaller.\n      if (srcBitmask & WRAP_ARY_FLAG) {\n        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\n      }\n      // Use source `arity` if one is not provided.\n      if (data[9] == null) {\n        data[9] = source[9];\n      }\n      // Use source `func` and merge bitmasks.\n      data[0] = source[0];\n      data[1] = newBitmask;\n\n      return data;\n    }\n\n    /**\n     * This function is like\n     * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n     * except that it includes inherited enumerable properties.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function nativeKeysIn(object) {\n      var result = [];\n      if (object != null) {\n        for (var key in Object(object)) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to a string using `Object.prototype.toString`.\n     *\n     * @private\n     * @param {*} value The value to convert.\n     * @returns {string} Returns the converted string.\n     */\n    function objectToString(value) {\n      return nativeObjectToString.call(value);\n    }\n\n    /**\n     * A specialized version of `baseRest` which transforms the rest array.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @param {Function} transform The rest array transform.\n     * @returns {Function} Returns the new function.\n     */\n    function overRest(func, start, transform) {\n      start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n      return function() {\n        var args = arguments,\n            index = -1,\n            length = nativeMax(args.length - start, 0),\n            array = Array(length);\n\n        while (++index < length) {\n          array[index] = args[start + index];\n        }\n        index = -1;\n        var otherArgs = Array(start + 1);\n        while (++index < start) {\n          otherArgs[index] = args[index];\n        }\n        otherArgs[start] = transform(array);\n        return apply(func, this, otherArgs);\n      };\n    }\n\n    /**\n     * Gets the parent value at `path` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array} path The path to get the parent value of.\n     * @returns {*} Returns the parent value.\n     */\n    function parent(object, path) {\n      return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));\n    }\n\n    /**\n     * Reorder `array` according to the specified indexes where the element at\n     * the first index is assigned as the first element, the element at\n     * the second index is assigned as the second element, and so on.\n     *\n     * @private\n     * @param {Array} array The array to reorder.\n     * @param {Array} indexes The arranged array indexes.\n     * @returns {Array} Returns `array`.\n     */\n    function reorder(array, indexes) {\n      var arrLength = array.length,\n          length = nativeMin(indexes.length, arrLength),\n          oldArray = copyArray(array);\n\n      while (length--) {\n        var index = indexes[length];\n        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\n      }\n      return array;\n    }\n\n    /**\n     * Sets metadata for `func`.\n     *\n     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short\n     * period of time, it will trip its breaker and transition to an identity\n     * function to avoid garbage collection pauses in V8. See\n     * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)\n     * for more details.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var setData = shortOut(baseSetData);\n\n    /**\n     * A simple wrapper around the global [`setTimeout`](https://mdn.io/setTimeout).\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @returns {number|Object} Returns the timer id or timeout object.\n     */\n    var setTimeout = ctxSetTimeout || function(func, wait) {\n      return root.setTimeout(func, wait);\n    };\n\n    /**\n     * Sets the `toString` method of `func` to return `string`.\n     *\n     * @private\n     * @param {Function} func The function to modify.\n     * @param {Function} string The `toString` result.\n     * @returns {Function} Returns `func`.\n     */\n    var setToString = shortOut(baseSetToString);\n\n    /**\n     * Sets the `toString` method of `wrapper` to mimic the source of `reference`\n     * with wrapper details in a comment at the top of the source body.\n     *\n     * @private\n     * @param {Function} wrapper The function to modify.\n     * @param {Function} reference The reference function.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @returns {Function} Returns `wrapper`.\n     */\n    function setWrapToString(wrapper, reference, bitmask) {\n      var source = (reference + '');\n      return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));\n    }\n\n    /**\n     * Creates a function that'll short out and invoke `identity` instead\n     * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n     * milliseconds.\n     *\n     * @private\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new shortable function.\n     */\n    function shortOut(func) {\n      var count = 0,\n          lastCalled = 0;\n\n      return function() {\n        var stamp = nativeNow(),\n            remaining = HOT_SPAN - (stamp - lastCalled);\n\n        lastCalled = stamp;\n        if (remaining > 0) {\n          if (++count >= HOT_COUNT) {\n            return arguments[0];\n          }\n        } else {\n          count = 0;\n        }\n        return func.apply(undefined, arguments);\n      };\n    }\n\n    /**\n     * A specialized version of `_.shuffle` which mutates and sets the size of `array`.\n     *\n     * @private\n     * @param {Array} array The array to shuffle.\n     * @param {number} [size=array.length] The size of `array`.\n     * @returns {Array} Returns `array`.\n     */\n    function shuffleSelf(array, size) {\n      var index = -1,\n          length = array.length,\n          lastIndex = length - 1;\n\n      size = size === undefined ? length : size;\n      while (++index < size) {\n        var rand = baseRandom(index, lastIndex),\n            value = array[rand];\n\n        array[rand] = array[index];\n        array[index] = value;\n      }\n      array.length = size;\n      return array;\n    }\n\n    /**\n     * Converts `string` to a property path array.\n     *\n     * @private\n     * @param {string} string The string to convert.\n     * @returns {Array} Returns the property path array.\n     */\n    var stringToPath = memoizeCapped(function(string) {\n      var result = [];\n      if (string.charCodeAt(0) === 46 /* . */) {\n        result.push('');\n      }\n      string.replace(rePropName, function(match, number, quote, subString) {\n        result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));\n      });\n      return result;\n    });\n\n    /**\n     * Converts `value` to a string key if it's not a string or symbol.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {string|symbol} Returns the key.\n     */\n    function toKey(value) {\n      if (typeof value == 'string' || isSymbol(value)) {\n        return value;\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * Converts `func` to its source code.\n     *\n     * @private\n     * @param {Function} func The function to convert.\n     * @returns {string} Returns the source code.\n     */\n    function toSource(func) {\n      if (func != null) {\n        try {\n          return funcToString.call(func);\n        } catch (e) {}\n        try {\n          return (func + '');\n        } catch (e) {}\n      }\n      return '';\n    }\n\n    /**\n     * Updates wrapper `details` based on `bitmask` flags.\n     *\n     * @private\n     * @returns {Array} details The details to modify.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @returns {Array} Returns `details`.\n     */\n    function updateWrapDetails(details, bitmask) {\n      arrayEach(wrapFlags, function(pair) {\n        var value = '_.' + pair[0];\n        if ((bitmask & pair[1]) && !arrayIncludes(details, value)) {\n          details.push(value);\n        }\n      });\n      return details.sort();\n    }\n\n    /**\n     * Creates a clone of `wrapper`.\n     *\n     * @private\n     * @param {Object} wrapper The wrapper to clone.\n     * @returns {Object} Returns the cloned wrapper.\n     */\n    function wrapperClone(wrapper) {\n      if (wrapper instanceof LazyWrapper) {\n        return wrapper.clone();\n      }\n      var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);\n      result.__actions__ = copyArray(wrapper.__actions__);\n      result.__index__  = wrapper.__index__;\n      result.__values__ = wrapper.__values__;\n      return result;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of elements split into groups the length of `size`.\n     * If `array` can't be split evenly, the final chunk will be the remaining\n     * elements.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to process.\n     * @param {number} [size=1] The length of each chunk\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the new array of chunks.\n     * @example\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 2);\n     * // => [['a', 'b'], ['c', 'd']]\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 3);\n     * // => [['a', 'b', 'c'], ['d']]\n     */\n    function chunk(array, size, guard) {\n      if ((guard ? isIterateeCall(array, size, guard) : size === undefined)) {\n        size = 1;\n      } else {\n        size = nativeMax(toInteger(size), 0);\n      }\n      var length = array == null ? 0 : array.length;\n      if (!length || size < 1) {\n        return [];\n      }\n      var index = 0,\n          resIndex = 0,\n          result = Array(nativeCeil(length / size));\n\n      while (index < length) {\n        result[resIndex++] = baseSlice(array, index, (index += size));\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array with all falsey values removed. The values `false`, `null`,\n     * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to compact.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.compact([0, 1, false, 2, '', 3]);\n     * // => [1, 2, 3]\n     */\n    function compact(array) {\n      var index = -1,\n          length = array == null ? 0 : array.length,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n        if (value) {\n          result[resIndex++] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates a new array concatenating `array` with any additional arrays\n     * and/or values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to concatenate.\n     * @param {...*} [values] The values to concatenate.\n     * @returns {Array} Returns the new concatenated array.\n     * @example\n     *\n     * var array = [1];\n     * var other = _.concat(array, 2, [3], [[4]]);\n     *\n     * console.log(other);\n     * // => [1, 2, 3, [4]]\n     *\n     * console.log(array);\n     * // => [1]\n     */\n    function concat() {\n      var length = arguments.length;\n      if (!length) {\n        return [];\n      }\n      var args = Array(length - 1),\n          array = arguments[0],\n          index = length;\n\n      while (index--) {\n        args[index - 1] = arguments[index];\n      }\n      return arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1));\n    }\n\n    /**\n     * Creates an array of `array` values not included in the other given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. The order and references of result values are\n     * determined by the first array.\n     *\n     * **Note:** Unlike `_.pullAll`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.without, _.xor\n     * @example\n     *\n     * _.difference([2, 1], [2, 3]);\n     * // => [1]\n     */\n    var difference = baseRest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `iteratee` which\n     * is invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. The order and references of result values are\n     * determined by the first array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * **Note:** Unlike `_.pullAllBy`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.differenceBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var differenceBy = baseRest(function(array, values) {\n      var iteratee = last(values);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), getIteratee(iteratee, 2))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `comparator`\n     * which is invoked to compare elements of `array` to `values`. The order and\n     * references of result values are determined by the first array. The comparator\n     * is invoked with two arguments: (arrVal, othVal).\n     *\n     * **Note:** Unlike `_.pullAllWith`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     *\n     * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }]\n     */\n    var differenceWith = baseRest(function(array, values) {\n      var comparator = last(values);\n      if (isArrayLikeObject(comparator)) {\n        comparator = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.drop([1, 2, 3]);\n     * // => [2, 3]\n     *\n     * _.drop([1, 2, 3], 2);\n     * // => [3]\n     *\n     * _.drop([1, 2, 3], 5);\n     * // => []\n     *\n     * _.drop([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function drop(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropRight([1, 2, 3]);\n     * // => [1, 2]\n     *\n     * _.dropRight([1, 2, 3], 2);\n     * // => [1]\n     *\n     * _.dropRight([1, 2, 3], 5);\n     * // => []\n     *\n     * _.dropRight([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function dropRight(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the end.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.dropRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropRightWhile(users, ['active', false]);\n     * // => objects for ['barney']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropRightWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the beginning.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.dropWhile(users, function(o) { return !o.active; });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropWhile(users, ['active', false]);\n     * // => objects for ['pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true)\n        : [];\n    }\n\n    /**\n     * Fills elements of `array` with `value` from `start` up to, but not\n     * including, `end`.\n     *\n     * **Note:** This method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Array\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.fill(array, 'a');\n     * console.log(array);\n     * // => ['a', 'a', 'a']\n     *\n     * _.fill(Array(3), 2);\n     * // => [2, 2, 2]\n     *\n     * _.fill([4, 6, 8, 10], '*', 1, 3);\n     * // => [4, '*', '*', 10]\n     */\n    function fill(array, value, start, end) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {\n        start = 0;\n        end = length;\n      }\n      return baseFill(array, value, start, end);\n    }\n\n    /**\n     * This method is like `_.find` except that it returns the index of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.findIndex(users, function(o) { return o.user == 'barney'; });\n     * // => 0\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findIndex(users, { 'user': 'fred', 'active': false });\n     * // => 1\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findIndex(users, ['active', false]);\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findIndex(users, 'active');\n     * // => 2\n     */\n    function findIndex(array, predicate, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index);\n    }\n\n    /**\n     * This method is like `_.findIndex` except that it iterates over elements\n     * of `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });\n     * // => 2\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n     * // => 0\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastIndex(users, ['active', false]);\n     * // => 2\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastIndex(users, 'active');\n     * // => 0\n     */\n    function findLastIndex(array, predicate, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = length - 1;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = fromIndex < 0\n          ? nativeMax(length + index, 0)\n          : nativeMin(index, length - 1);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index, true);\n    }\n\n    /**\n     * Flattens `array` a single level deep.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flatten([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, [3, [4]], 5]\n     */\n    function flatten(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseFlatten(array, 1) : [];\n    }\n\n    /**\n     * Recursively flattens `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flattenDeep([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, 3, 4, 5]\n     */\n    function flattenDeep(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseFlatten(array, INFINITY) : [];\n    }\n\n    /**\n     * Recursively flatten `array` up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * var array = [1, [2, [3, [4]], 5]];\n     *\n     * _.flattenDepth(array, 1);\n     * // => [1, 2, [3, [4]], 5]\n     *\n     * _.flattenDepth(array, 2);\n     * // => [1, 2, 3, [4], 5]\n     */\n    function flattenDepth(array, depth) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(array, depth);\n    }\n\n    /**\n     * The inverse of `_.toPairs`; this method returns an object composed\n     * from key-value `pairs`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} pairs The key-value pairs.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.fromPairs([['a', 1], ['b', 2]]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function fromPairs(pairs) {\n      var index = -1,\n          length = pairs == null ? 0 : pairs.length,\n          result = {};\n\n      while (++index < length) {\n        var pair = pairs[index];\n        result[pair[0]] = pair[1];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias first\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the first element of `array`.\n     * @example\n     *\n     * _.head([1, 2, 3]);\n     * // => 1\n     *\n     * _.head([]);\n     * // => undefined\n     */\n    function head(array) {\n      return (array && array.length) ? array[0] : undefined;\n    }\n\n    /**\n     * Gets the index at which the first occurrence of `value` is found in `array`\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. If `fromIndex` is negative, it's used as the\n     * offset from the end of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.indexOf([1, 2, 1, 2], 2);\n     * // => 1\n     *\n     * // Search from the `fromIndex`.\n     * _.indexOf([1, 2, 1, 2], 2, 2);\n     * // => 3\n     */\n    function indexOf(array, value, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseIndexOf(array, value, index);\n    }\n\n    /**\n     * Gets all but the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.initial([1, 2, 3]);\n     * // => [1, 2]\n     */\n    function initial(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseSlice(array, 0, -1) : [];\n    }\n\n    /**\n     * Creates an array of unique values that are included in all given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. The order and references of result values are\n     * determined by the first array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersection([2, 1], [2, 3]);\n     * // => [2]\n     */\n    var intersection = baseRest(function(arrays) {\n      var mapped = arrayMap(arrays, castArrayLikeObject);\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped)\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `iteratee`\n     * which is invoked for each element of each `arrays` to generate the criterion\n     * by which they're compared. The order and references of result values are\n     * determined by the first array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersectionBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [2.1]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }]\n     */\n    var intersectionBy = baseRest(function(arrays) {\n      var iteratee = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      if (iteratee === last(mapped)) {\n        iteratee = undefined;\n      } else {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, getIteratee(iteratee, 2))\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `comparator`\n     * which is invoked to compare elements of `arrays`. The order and references\n     * of result values are determined by the first array. The comparator is\n     * invoked with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.intersectionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }]\n     */\n    var intersectionWith = baseRest(function(arrays) {\n      var comparator = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      if (comparator) {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Converts all elements in `array` into a string separated by `separator`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to convert.\n     * @param {string} [separator=','] The element separator.\n     * @returns {string} Returns the joined string.\n     * @example\n     *\n     * _.join(['a', 'b', 'c'], '~');\n     * // => 'a~b~c'\n     */\n    function join(array, separator) {\n      return array == null ? '' : nativeJoin.call(array, separator);\n    }\n\n    /**\n     * Gets the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the last element of `array`.\n     * @example\n     *\n     * _.last([1, 2, 3]);\n     * // => 3\n     */\n    function last(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? array[length - 1] : undefined;\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it iterates over elements of\n     * `array` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.lastIndexOf([1, 2, 1, 2], 2);\n     * // => 3\n     *\n     * // Search from the `fromIndex`.\n     * _.lastIndexOf([1, 2, 1, 2], 2, 2);\n     * // => 1\n     */\n    function lastIndexOf(array, value, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = length;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = index < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);\n      }\n      return value === value\n        ? strictLastIndexOf(array, value, index)\n        : baseFindIndex(array, baseIsNaN, index, true);\n    }\n\n    /**\n     * Gets the element at index `n` of `array`. If `n` is negative, the nth\n     * element from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.11.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=0] The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     *\n     * _.nth(array, 1);\n     * // => 'b'\n     *\n     * _.nth(array, -2);\n     * // => 'c';\n     */\n    function nth(array, n) {\n      return (array && array.length) ? baseNth(array, toInteger(n)) : undefined;\n    }\n\n    /**\n     * Removes all given values from `array` using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`\n     * to remove elements from an array by predicate.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...*} [values] The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pull(array, 'a', 'c');\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    var pull = baseRest(pullAll);\n\n    /**\n     * This method is like `_.pull` except that it accepts an array of values to remove.\n     *\n     * **Note:** Unlike `_.difference`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pullAll(array, ['a', 'c']);\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    function pullAll(array, values) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values)\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `iteratee` which is\n     * invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. The iteratee is invoked with one argument: (value).\n     *\n     * **Note:** Unlike `_.differenceBy`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];\n     *\n     * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');\n     * console.log(array);\n     * // => [{ 'x': 2 }]\n     */\n    function pullAllBy(array, values, iteratee) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, getIteratee(iteratee, 2))\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `comparator` which\n     * is invoked to compare elements of `array` to `values`. The comparator is\n     * invoked with two arguments: (arrVal, othVal).\n     *\n     * **Note:** Unlike `_.differenceWith`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];\n     *\n     * _.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);\n     * console.log(array);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]\n     */\n    function pullAllWith(array, values, comparator) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, undefined, comparator)\n        : array;\n    }\n\n    /**\n     * Removes elements from `array` corresponding to `indexes` and returns an\n     * array of removed elements.\n     *\n     * **Note:** Unlike `_.at`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...(number|number[])} [indexes] The indexes of elements to remove.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     * var pulled = _.pullAt(array, [1, 3]);\n     *\n     * console.log(array);\n     * // => ['a', 'c']\n     *\n     * console.log(pulled);\n     * // => ['b', 'd']\n     */\n    var pullAt = flatRest(function(array, indexes) {\n      var length = array == null ? 0 : array.length,\n          result = baseAt(array, indexes);\n\n      basePullAt(array, arrayMap(indexes, function(index) {\n        return isIndex(index, length) ? +index : index;\n      }).sort(compareAscending));\n\n      return result;\n    });\n\n    /**\n     * Removes all elements from `array` that `predicate` returns truthy for\n     * and returns an array of the removed elements. The predicate is invoked\n     * with three arguments: (value, index, array).\n     *\n     * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`\n     * to pull elements from an array by value.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = [1, 2, 3, 4];\n     * var evens = _.remove(array, function(n) {\n     *   return n % 2 == 0;\n     * });\n     *\n     * console.log(array);\n     * // => [1, 3]\n     *\n     * console.log(evens);\n     * // => [2, 4]\n     */\n    function remove(array, predicate) {\n      var result = [];\n      if (!(array && array.length)) {\n        return result;\n      }\n      var index = -1,\n          indexes = [],\n          length = array.length;\n\n      predicate = getIteratee(predicate, 3);\n      while (++index < length) {\n        var value = array[index];\n        if (predicate(value, index, array)) {\n          result.push(value);\n          indexes.push(index);\n        }\n      }\n      basePullAt(array, indexes);\n      return result;\n    }\n\n    /**\n     * Reverses `array` so that the first element becomes the last, the second\n     * element becomes the second to last, and so on.\n     *\n     * **Note:** This method mutates `array` and is based on\n     * [`Array#reverse`](https://mdn.io/Array/reverse).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.reverse(array);\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function reverse(array) {\n      return array == null ? array : nativeReverse.call(array);\n    }\n\n    /**\n     * Creates a slice of `array` from `start` up to, but not including, `end`.\n     *\n     * **Note:** This method is used instead of\n     * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are\n     * returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function slice(array, start, end) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {\n        start = 0;\n        end = length;\n      }\n      else {\n        start = start == null ? 0 : toInteger(start);\n        end = end === undefined ? length : toInteger(end);\n      }\n      return baseSlice(array, start, end);\n    }\n\n    /**\n     * Uses a binary search to determine the lowest index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedIndex([30, 50], 40);\n     * // => 1\n     */\n    function sortedIndex(array, value) {\n      return baseSortedIndex(array, value);\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 0\n     */\n    function sortedIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2));\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 1\n     */\n    function sortedIndexOf(array, value) {\n      var length = array == null ? 0 : array.length;\n      if (length) {\n        var index = baseSortedIndex(array, value);\n        if (index < length && eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it returns the highest\n     * index at which `value` should be inserted into `array` in order to\n     * maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedLastIndex([4, 5, 5, 5, 6], 5);\n     * // => 4\n     */\n    function sortedLastIndex(array, value) {\n      return baseSortedIndex(array, value, true);\n    }\n\n    /**\n     * This method is like `_.sortedLastIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 1\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 1\n     */\n    function sortedLastIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2), true);\n    }\n\n    /**\n     * This method is like `_.lastIndexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedLastIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 3\n     */\n    function sortedLastIndexOf(array, value) {\n      var length = array == null ? 0 : array.length;\n      if (length) {\n        var index = baseSortedIndex(array, value, true) - 1;\n        if (eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.uniq` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniq([1, 1, 2]);\n     * // => [1, 2]\n     */\n    function sortedUniq(array) {\n      return (array && array.length)\n        ? baseSortedUniq(array)\n        : [];\n    }\n\n    /**\n     * This method is like `_.uniqBy` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);\n     * // => [1.1, 2.3]\n     */\n    function sortedUniqBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSortedUniq(array, getIteratee(iteratee, 2))\n        : [];\n    }\n\n    /**\n     * Gets all but the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.tail([1, 2, 3]);\n     * // => [2, 3]\n     */\n    function tail(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseSlice(array, 1, length) : [];\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.take([1, 2, 3]);\n     * // => [1]\n     *\n     * _.take([1, 2, 3], 2);\n     * // => [1, 2]\n     *\n     * _.take([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.take([1, 2, 3], 0);\n     * // => []\n     */\n    function take(array, n, guard) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeRight([1, 2, 3]);\n     * // => [3]\n     *\n     * _.takeRight([1, 2, 3], 2);\n     * // => [2, 3]\n     *\n     * _.takeRight([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.takeRight([1, 2, 3], 0);\n     * // => []\n     */\n    function takeRight(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the end. Elements are\n     * taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.takeRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeRightWhile(users, ['active', false]);\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeRightWhile(users, 'active');\n     * // => []\n     */\n    function takeRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), false, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the beginning. Elements\n     * are taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.takeWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeWhile(users, ['active', false]);\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeWhile(users, 'active');\n     * // => []\n     */\n    function takeWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3))\n        : [];\n    }\n\n    /**\n     * Creates an array of unique values, in order, from all given arrays using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.union([2], [1, 2]);\n     * // => [2, 1]\n     */\n    var union = baseRest(function(arrays) {\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which uniqueness is computed. Result values are chosen from the first\n     * array in which the value occurs. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.unionBy([2.1], [1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    var unionBy = baseRest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), getIteratee(iteratee, 2));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `comparator` which\n     * is invoked to compare elements of `arrays`. Result values are chosen from\n     * the first array in which the value occurs. The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.unionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var unionWith = baseRest(function(arrays) {\n      var comparator = last(arrays);\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);\n    });\n\n    /**\n     * Creates a duplicate-free version of an array, using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons, in which only the first occurrence of each element\n     * is kept. The order of result values is determined by the order they occur\n     * in the array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniq([2, 1, 2]);\n     * // => [2, 1]\n     */\n    function uniq(array) {\n      return (array && array.length) ? baseUniq(array) : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * uniqueness is computed. The order of result values is determined by the\n     * order they occur in the array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    function uniqBy(array, iteratee) {\n      return (array && array.length) ? baseUniq(array, getIteratee(iteratee, 2)) : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `comparator` which\n     * is invoked to compare elements of `array`. The order of result values is\n     * determined by the order they occur in the array.The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.uniqWith(objects, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]\n     */\n    function uniqWith(array, comparator) {\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return (array && array.length) ? baseUniq(array, undefined, comparator) : [];\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts an array of grouped\n     * elements and creates an array regrouping the elements to their pre-zip\n     * configuration.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.2.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip(['a', 'b'], [1, 2], [true, false]);\n     * // => [['a', 1, true], ['b', 2, false]]\n     *\n     * _.unzip(zipped);\n     * // => [['a', 'b'], [1, 2], [true, false]]\n     */\n    function unzip(array) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var length = 0;\n      array = arrayFilter(array, function(group) {\n        if (isArrayLikeObject(group)) {\n          length = nativeMax(group.length, length);\n          return true;\n        }\n      });\n      return baseTimes(length, function(index) {\n        return arrayMap(array, baseProperty(index));\n      });\n    }\n\n    /**\n     * This method is like `_.unzip` except that it accepts `iteratee` to specify\n     * how regrouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @param {Function} [iteratee=_.identity] The function to combine\n     *  regrouped values.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);\n     * // => [[1, 10, 100], [2, 20, 200]]\n     *\n     * _.unzipWith(zipped, _.add);\n     * // => [3, 30, 300]\n     */\n    function unzipWith(array, iteratee) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var result = unzip(array);\n      if (iteratee == null) {\n        return result;\n      }\n      return arrayMap(result, function(group) {\n        return apply(iteratee, undefined, group);\n      });\n    }\n\n    /**\n     * Creates an array excluding all given values using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.pull`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...*} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.xor\n     * @example\n     *\n     * _.without([2, 1, 2, 3], 1, 2);\n     * // => [3]\n     */\n    var without = baseRest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, values)\n        : [];\n    });\n\n    /**\n     * Creates an array of unique values that is the\n     * [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)\n     * of the given arrays. The order of result values is determined by the order\n     * they occur in the arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.without\n     * @example\n     *\n     * _.xor([2, 1], [2, 3]);\n     * // => [1, 3]\n     */\n    var xor = baseRest(function(arrays) {\n      return baseXor(arrayFilter(arrays, isArrayLikeObject));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which by which they're compared. The order of result values is determined\n     * by the order they occur in the arrays. The iteratee is invoked with one\n     * argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.xorBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2, 3.4]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var xorBy = baseRest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee, 2));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `comparator` which is\n     * invoked to compare elements of `arrays`. The order of result values is\n     * determined by the order they occur in the arrays. The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.xorWith(objects, others, _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var xorWith = baseRest(function(arrays) {\n      var comparator = last(arrays);\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);\n    });\n\n    /**\n     * Creates an array of grouped elements, the first of which contains the\n     * first elements of the given arrays, the second of which contains the\n     * second elements of the given arrays, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zip(['a', 'b'], [1, 2], [true, false]);\n     * // => [['a', 1, true], ['b', 2, false]]\n     */\n    var zip = baseRest(unzip);\n\n    /**\n     * This method is like `_.fromPairs` except that it accepts two arrays,\n     * one of property identifiers and one of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.4.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObject(['a', 'b'], [1, 2]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function zipObject(props, values) {\n      return baseZipObject(props || [], values || [], assignValue);\n    }\n\n    /**\n     * This method is like `_.zipObject` except that it supports property paths.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);\n     * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }\n     */\n    function zipObjectDeep(props, values) {\n      return baseZipObject(props || [], values || [], baseSet);\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts `iteratee` to specify\n     * how grouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @param {Function} [iteratee=_.identity] The function to combine\n     *  grouped values.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {\n     *   return a + b + c;\n     * });\n     * // => [111, 222]\n     */\n    var zipWith = baseRest(function(arrays) {\n      var length = arrays.length,\n          iteratee = length > 1 ? arrays[length - 1] : undefined;\n\n      iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;\n      return unzipWith(arrays, iteratee);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` wrapper instance that wraps `value` with explicit method\n     * chain sequences enabled. The result of such sequences must be unwrapped\n     * with `_#value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Seq\n     * @param {*} value The value to wrap.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36 },\n     *   { 'user': 'fred',    'age': 40 },\n     *   { 'user': 'pebbles', 'age': 1 }\n     * ];\n     *\n     * var youngest = _\n     *   .chain(users)\n     *   .sortBy('age')\n     *   .map(function(o) {\n     *     return o.user + ' is ' + o.age;\n     *   })\n     *   .head()\n     *   .value();\n     * // => 'pebbles is 1'\n     */\n    function chain(value) {\n      var result = lodash(value);\n      result.__chain__ = true;\n      return result;\n    }\n\n    /**\n     * This method invokes `interceptor` and returns `value`. The interceptor\n     * is invoked with one argument; (value). The purpose of this method is to\n     * \"tap into\" a method chain sequence in order to modify intermediate results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * _([1, 2, 3])\n     *  .tap(function(array) {\n     *    // Mutate input array.\n     *    array.pop();\n     *  })\n     *  .reverse()\n     *  .value();\n     * // => [2, 1]\n     */\n    function tap(value, interceptor) {\n      interceptor(value);\n      return value;\n    }\n\n    /**\n     * This method is like `_.tap` except that it returns the result of `interceptor`.\n     * The purpose of this method is to \"pass thru\" values replacing intermediate\n     * results in a method chain sequence.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns the result of `interceptor`.\n     * @example\n     *\n     * _('  abc  ')\n     *  .chain()\n     *  .trim()\n     *  .thru(function(value) {\n     *    return [value];\n     *  })\n     *  .value();\n     * // => ['abc']\n     */\n    function thru(value, interceptor) {\n      return interceptor(value);\n    }\n\n    /**\n     * This method is the wrapper version of `_.at`.\n     *\n     * @name at\n     * @memberOf _\n     * @since 1.0.0\n     * @category Seq\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _(object).at(['a[0].b.c', 'a[1]']).value();\n     * // => [3, 4]\n     */\n    var wrapperAt = flatRest(function(paths) {\n      var length = paths.length,\n          start = length ? paths[0] : 0,\n          value = this.__wrapped__,\n          interceptor = function(object) { return baseAt(object, paths); };\n\n      if (length > 1 || this.__actions__.length ||\n          !(value instanceof LazyWrapper) || !isIndex(start)) {\n        return this.thru(interceptor);\n      }\n      value = value.slice(start, +start + (length ? 1 : 0));\n      value.__actions__.push({\n        'func': thru,\n        'args': [interceptor],\n        'thisArg': undefined\n      });\n      return new LodashWrapper(value, this.__chain__).thru(function(array) {\n        if (length && !array.length) {\n          array.push(undefined);\n        }\n        return array;\n      });\n    });\n\n    /**\n     * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.\n     *\n     * @name chain\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * // A sequence without explicit chaining.\n     * _(users).head();\n     * // => { 'user': 'barney', 'age': 36 }\n     *\n     * // A sequence with explicit chaining.\n     * _(users)\n     *   .chain()\n     *   .head()\n     *   .pick('user')\n     *   .value();\n     * // => { 'user': 'barney' }\n     */\n    function wrapperChain() {\n      return chain(this);\n    }\n\n    /**\n     * Executes the chain sequence and returns the wrapped result.\n     *\n     * @name commit\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2];\n     * var wrapped = _(array).push(3);\n     *\n     * console.log(array);\n     * // => [1, 2]\n     *\n     * wrapped = wrapped.commit();\n     * console.log(array);\n     * // => [1, 2, 3]\n     *\n     * wrapped.last();\n     * // => 3\n     *\n     * console.log(array);\n     * // => [1, 2, 3]\n     */\n    function wrapperCommit() {\n      return new LodashWrapper(this.value(), this.__chain__);\n    }\n\n    /**\n     * Gets the next value on a wrapped object following the\n     * [iterator protocol](https://mdn.io/iteration_protocols#iterator).\n     *\n     * @name next\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the next iterator value.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 1 }\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 2 }\n     *\n     * wrapped.next();\n     * // => { 'done': true, 'value': undefined }\n     */\n    function wrapperNext() {\n      if (this.__values__ === undefined) {\n        this.__values__ = toArray(this.value());\n      }\n      var done = this.__index__ >= this.__values__.length,\n          value = done ? undefined : this.__values__[this.__index__++];\n\n      return { 'done': done, 'value': value };\n    }\n\n    /**\n     * Enables the wrapper to be iterable.\n     *\n     * @name Symbol.iterator\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the wrapper object.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped[Symbol.iterator]() === wrapped;\n     * // => true\n     *\n     * Array.from(wrapped);\n     * // => [1, 2]\n     */\n    function wrapperToIterator() {\n      return this;\n    }\n\n    /**\n     * Creates a clone of the chain sequence planting `value` as the wrapped value.\n     *\n     * @name plant\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @param {*} value The value to plant.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2]).map(square);\n     * var other = wrapped.plant([3, 4]);\n     *\n     * other.value();\n     * // => [9, 16]\n     *\n     * wrapped.value();\n     * // => [1, 4]\n     */\n    function wrapperPlant(value) {\n      var result,\n          parent = this;\n\n      while (parent instanceof baseLodash) {\n        var clone = wrapperClone(parent);\n        clone.__index__ = 0;\n        clone.__values__ = undefined;\n        if (result) {\n          previous.__wrapped__ = clone;\n        } else {\n          result = clone;\n        }\n        var previous = clone;\n        parent = parent.__wrapped__;\n      }\n      previous.__wrapped__ = value;\n      return result;\n    }\n\n    /**\n     * This method is the wrapper version of `_.reverse`.\n     *\n     * **Note:** This method mutates the wrapped array.\n     *\n     * @name reverse\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _(array).reverse().value()\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function wrapperReverse() {\n      var value = this.__wrapped__;\n      if (value instanceof LazyWrapper) {\n        var wrapped = value;\n        if (this.__actions__.length) {\n          wrapped = new LazyWrapper(this);\n        }\n        wrapped = wrapped.reverse();\n        wrapped.__actions__.push({\n          'func': thru,\n          'args': [reverse],\n          'thisArg': undefined\n        });\n        return new LodashWrapper(wrapped, this.__chain__);\n      }\n      return this.thru(reverse);\n    }\n\n    /**\n     * Executes the chain sequence to resolve the unwrapped value.\n     *\n     * @name value\n     * @memberOf _\n     * @since 0.1.0\n     * @alias toJSON, valueOf\n     * @category Seq\n     * @returns {*} Returns the resolved unwrapped value.\n     * @example\n     *\n     * _([1, 2, 3]).value();\n     * // => [1, 2, 3]\n     */\n    function wrapperValue() {\n      return baseWrapperValue(this.__wrapped__, this.__actions__);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the number of times the key was returned by `iteratee`. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.countBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': 1, '6': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.countBy(['one', 'two', 'three'], 'length');\n     * // => { '3': 2, '5': 1 }\n     */\n    var countBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        ++result[key];\n      } else {\n        baseAssignValue(result, key, 1);\n      }\n    });\n\n    /**\n     * Checks if `predicate` returns truthy for **all** elements of `collection`.\n     * Iteration is stopped once `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * **Note:** This method returns `true` for\n     * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because\n     * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of\n     * elements of empty collections.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.every([true, 1, null, 'yes'], Boolean);\n     * // => false\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.every(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.every(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.every(users, 'active');\n     * // => false\n     */\n    function every(collection, predicate, guard) {\n      var func = isArray(collection) ? arrayEvery : baseEvery;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning an array of all elements\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * **Note:** Unlike `_.remove`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.reject\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * _.filter(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, { 'age': 36, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.filter(users, 'active');\n     * // => objects for ['barney']\n     */\n    function filter(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning the first element\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': true },\n     *   { 'user': 'fred',    'age': 40, 'active': false },\n     *   { 'user': 'pebbles', 'age': 1,  'active': true }\n     * ];\n     *\n     * _.find(users, function(o) { return o.age < 40; });\n     * // => object for 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.find(users, { 'age': 1, 'active': true });\n     * // => object for 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.find(users, ['active', false]);\n     * // => object for 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.find(users, 'active');\n     * // => object for 'barney'\n     */\n    var find = createFind(findIndex);\n\n    /**\n     * This method is like `_.find` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=collection.length-1] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * _.findLast([1, 2, 3, 4], function(n) {\n     *   return n % 2 == 1;\n     * });\n     * // => 3\n     */\n    var findLast = createFind(findLastIndex);\n\n    /**\n     * Creates a flattened array of values by running each element in `collection`\n     * thru `iteratee` and flattening the mapped results. The iteratee is invoked\n     * with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [n, n];\n     * }\n     *\n     * _.flatMap([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMap(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), 1);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDeep([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMapDeep(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), INFINITY);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDepth([1, 2], duplicate, 2);\n     * // => [[1, 1], [2, 2]]\n     */\n    function flatMapDepth(collection, iteratee, depth) {\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(map(collection, iteratee), depth);\n    }\n\n    /**\n     * Iterates over elements of `collection` and invokes `iteratee` for each element.\n     * The iteratee is invoked with three arguments: (value, index|key, collection).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * **Note:** As with other \"Collections\" methods, objects with a \"length\"\n     * property are iterated like arrays. To avoid this behavior use `_.forIn`\n     * or `_.forOwn` for object iteration.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias each\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEachRight\n     * @example\n     *\n     * _.forEach([1, 2], function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `1` then `2`.\n     *\n     * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forEach(collection, iteratee) {\n      var func = isArray(collection) ? arrayEach : baseEach;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forEach` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @alias eachRight\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEach\n     * @example\n     *\n     * _.forEachRight([1, 2], function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `2` then `1`.\n     */\n    function forEachRight(collection, iteratee) {\n      var func = isArray(collection) ? arrayEachRight : baseEachRight;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The order of grouped values\n     * is determined by the order they occur in `collection`. The corresponding\n     * value of each key is an array of elements responsible for generating the\n     * key. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': [4.2], '6': [6.1, 6.3] }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.groupBy(['one', 'two', 'three'], 'length');\n     * // => { '3': ['one', 'two'], '5': ['three'] }\n     */\n    var groupBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        result[key].push(value);\n      } else {\n        baseAssignValue(result, key, [value]);\n      }\n    });\n\n    /**\n     * Checks if `value` is in `collection`. If `collection` is a string, it's\n     * checked for a substring of `value`, otherwise\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * is used for equality comparisons. If `fromIndex` is negative, it's used as\n     * the offset from the end of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {boolean} Returns `true` if `value` is found, else `false`.\n     * @example\n     *\n     * _.includes([1, 2, 3], 1);\n     * // => true\n     *\n     * _.includes([1, 2, 3], 1, 2);\n     * // => false\n     *\n     * _.includes({ 'a': 1, 'b': 2 }, 1);\n     * // => true\n     *\n     * _.includes('abcd', 'bc');\n     * // => true\n     */\n    function includes(collection, value, fromIndex, guard) {\n      collection = isArrayLike(collection) ? collection : values(collection);\n      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\n\n      var length = collection.length;\n      if (fromIndex < 0) {\n        fromIndex = nativeMax(length + fromIndex, 0);\n      }\n      return isString(collection)\n        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\n        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\n    }\n\n    /**\n     * Invokes the method at `path` of each element in `collection`, returning\n     * an array of the results of each invoked method. Any additional arguments\n     * are provided to each invoked method. If `path` is a function, it's invoked\n     * for, and `this` bound to, each element in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array|Function|string} path The path of the method to invoke or\n     *  the function invoked per iteration.\n     * @param {...*} [args] The arguments to invoke each method with.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');\n     * // => [[1, 5, 7], [1, 2, 3]]\n     *\n     * _.invokeMap([123, 456], String.prototype.split, '');\n     * // => [['1', '2', '3'], ['4', '5', '6']]\n     */\n    var invokeMap = baseRest(function(collection, path, args) {\n      var index = -1,\n          isFunc = typeof path == 'function',\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value) {\n        result[++index] = isFunc ? apply(path, value, args) : baseInvoke(value, path, args);\n      });\n      return result;\n    });\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the last element responsible for generating the key. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * var array = [\n     *   { 'dir': 'left', 'code': 97 },\n     *   { 'dir': 'right', 'code': 100 }\n     * ];\n     *\n     * _.keyBy(array, function(o) {\n     *   return String.fromCharCode(o.code);\n     * });\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.keyBy(array, 'dir');\n     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n     */\n    var keyBy = createAggregator(function(result, value, key) {\n      baseAssignValue(result, key, value);\n    });\n\n    /**\n     * Creates an array of values by running each element in `collection` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n     *\n     * The guarded methods are:\n     * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n     * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n     * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n     * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * _.map([4, 8], square);\n     * // => [16, 64]\n     *\n     * _.map({ 'a': 4, 'b': 8 }, square);\n     * // => [16, 64] (iteration order is not guaranteed)\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, 'user');\n     * // => ['barney', 'fred']\n     */\n    function map(collection, iteratee) {\n      var func = isArray(collection) ? arrayMap : baseMap;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.sortBy` except that it allows specifying the sort\n     * orders of the iteratees to sort by. If `orders` is unspecified, all values\n     * are sorted in ascending order. Otherwise, specify an order of \"desc\" for\n     * descending or \"asc\" for ascending sort order of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]\n     *  The iteratees to sort by.\n     * @param {string[]} [orders] The sort orders of `iteratees`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 34 },\n     *   { 'user': 'fred',   'age': 40 },\n     *   { 'user': 'barney', 'age': 36 }\n     * ];\n     *\n     * // Sort by `user` in ascending order and by `age` in descending order.\n     * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n     */\n    function orderBy(collection, iteratees, orders, guard) {\n      if (collection == null) {\n        return [];\n      }\n      if (!isArray(iteratees)) {\n        iteratees = iteratees == null ? [] : [iteratees];\n      }\n      orders = guard ? undefined : orders;\n      if (!isArray(orders)) {\n        orders = orders == null ? [] : [orders];\n      }\n      return baseOrderBy(collection, iteratees, orders);\n    }\n\n    /**\n     * Creates an array of elements split into two groups, the first of which\n     * contains elements `predicate` returns truthy for, the second of which\n     * contains elements `predicate` returns falsey for. The predicate is\n     * invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of grouped elements.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': false },\n     *   { 'user': 'fred',    'age': 40, 'active': true },\n     *   { 'user': 'pebbles', 'age': 1,  'active': false }\n     * ];\n     *\n     * _.partition(users, function(o) { return o.active; });\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.partition(users, { 'age': 1, 'active': false });\n     * // => objects for [['pebbles'], ['barney', 'fred']]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.partition(users, ['active', false]);\n     * // => objects for [['barney', 'pebbles'], ['fred']]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.partition(users, 'active');\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     */\n    var partition = createAggregator(function(result, value, key) {\n      result[key ? 0 : 1].push(value);\n    }, function() { return [[], []]; });\n\n    /**\n     * Reduces `collection` to a value which is the accumulated result of running\n     * each element in `collection` thru `iteratee`, where each successive\n     * invocation is supplied the return value of the previous. If `accumulator`\n     * is not given, the first element of `collection` is used as the initial\n     * value. The iteratee is invoked with four arguments:\n     * (accumulator, value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.reduce`, `_.reduceRight`, and `_.transform`.\n     *\n     * The guarded methods are:\n     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,\n     * and `sortBy`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduceRight\n     * @example\n     *\n     * _.reduce([1, 2], function(sum, n) {\n     *   return sum + n;\n     * }, 0);\n     * // => 3\n     *\n     * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     *   return result;\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)\n     */\n    function reduce(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduce : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEach);\n    }\n\n    /**\n     * This method is like `_.reduce` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduce\n     * @example\n     *\n     * var array = [[0, 1], [2, 3], [4, 5]];\n     *\n     * _.reduceRight(array, function(flattened, other) {\n     *   return flattened.concat(other);\n     * }, []);\n     * // => [4, 5, 2, 3, 0, 1]\n     */\n    function reduceRight(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduceRight : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);\n    }\n\n    /**\n     * The opposite of `_.filter`; this method returns the elements of `collection`\n     * that `predicate` does **not** return truthy for.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.filter\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': true }\n     * ];\n     *\n     * _.reject(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.reject(users, { 'age': 40, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.reject(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.reject(users, 'active');\n     * // => objects for ['barney']\n     */\n    function reject(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, negate(getIteratee(predicate, 3)));\n    }\n\n    /**\n     * Gets a random element from `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @returns {*} Returns the random element.\n     * @example\n     *\n     * _.sample([1, 2, 3, 4]);\n     * // => 2\n     */\n    function sample(collection) {\n      var func = isArray(collection) ? arraySample : baseSample;\n      return func(collection);\n    }\n\n    /**\n     * Gets `n` random elements at unique keys from `collection` up to the\n     * size of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @param {number} [n=1] The number of elements to sample.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the random elements.\n     * @example\n     *\n     * _.sampleSize([1, 2, 3], 2);\n     * // => [3, 1]\n     *\n     * _.sampleSize([1, 2, 3], 4);\n     * // => [2, 3, 1]\n     */\n    function sampleSize(collection, n, guard) {\n      if ((guard ? isIterateeCall(collection, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = toInteger(n);\n      }\n      var func = isArray(collection) ? arraySampleSize : baseSampleSize;\n      return func(collection, n);\n    }\n\n    /**\n     * Creates an array of shuffled values, using a version of the\n     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     * @example\n     *\n     * _.shuffle([1, 2, 3, 4]);\n     * // => [4, 1, 3, 2]\n     */\n    function shuffle(collection) {\n      var func = isArray(collection) ? arrayShuffle : baseShuffle;\n      return func(collection);\n    }\n\n    /**\n     * Gets the size of `collection` by returning its length for array-like\n     * values or the number of own enumerable string keyed properties for objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @returns {number} Returns the collection size.\n     * @example\n     *\n     * _.size([1, 2, 3]);\n     * // => 3\n     *\n     * _.size({ 'a': 1, 'b': 2 });\n     * // => 2\n     *\n     * _.size('pebbles');\n     * // => 7\n     */\n    function size(collection) {\n      if (collection == null) {\n        return 0;\n      }\n      if (isArrayLike(collection)) {\n        return isString(collection) ? stringSize(collection) : collection.length;\n      }\n      var tag = getTag(collection);\n      if (tag == mapTag || tag == setTag) {\n        return collection.size;\n      }\n      return baseKeys(collection).length;\n    }\n\n    /**\n     * Checks if `predicate` returns truthy for **any** element of `collection`.\n     * Iteration is stopped once `predicate` returns truthy. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.some([null, 0, 'yes', false], Boolean);\n     * // => true\n     *\n     * var users = [\n     *   { 'user': 'barney', 'active': true },\n     *   { 'user': 'fred',   'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.some(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.some(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.some(users, 'active');\n     * // => true\n     */\n    function some(collection, predicate, guard) {\n      var func = isArray(collection) ? arraySome : baseSome;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Creates an array of elements, sorted in ascending order by the results of\n     * running each element in a collection thru each iteratee. This method\n     * performs a stable sort, that is, it preserves the original sort order of\n     * equal elements. The iteratees are invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n     *  The iteratees to sort by.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 },\n     *   { 'user': 'barney', 'age': 34 }\n     * ];\n     *\n     * _.sortBy(users, [function(o) { return o.user; }]);\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n     *\n     * _.sortBy(users, ['user', 'age']);\n     * // => objects for [['barney', 34], ['barney', 36], ['fred', 40], ['fred', 48]]\n     */\n    var sortBy = baseRest(function(collection, iteratees) {\n      if (collection == null) {\n        return [];\n      }\n      var length = iteratees.length;\n      if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {\n        iteratees = [];\n      } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {\n        iteratees = [iteratees[0]];\n      }\n      return baseOrderBy(collection, baseFlatten(iteratees, 1), []);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Gets the timestamp of the number of milliseconds that have elapsed since\n     * the Unix epoch (1 January 1970 00:00:00 UTC).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Date\n     * @returns {number} Returns the timestamp.\n     * @example\n     *\n     * _.defer(function(stamp) {\n     *   console.log(_.now() - stamp);\n     * }, _.now());\n     * // => Logs the number of milliseconds it took for the deferred invocation.\n     */\n    var now = ctxNow || function() {\n      return root.Date.now();\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The opposite of `_.before`; this method creates a function that invokes\n     * `func` once it's called `n` or more times.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {number} n The number of calls before `func` is invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var saves = ['profile', 'settings'];\n     *\n     * var done = _.after(saves.length, function() {\n     *   console.log('done saving!');\n     * });\n     *\n     * _.forEach(saves, function(type) {\n     *   asyncSave({ 'type': type, 'complete': done });\n     * });\n     * // => Logs 'done saving!' after the two async saves have completed.\n     */\n    function after(n, func) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n < 1) {\n          return func.apply(this, arguments);\n        }\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func`, with up to `n` arguments,\n     * ignoring any additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @param {number} [n=func.length] The arity cap.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.ary(parseInt, 1));\n     * // => [6, 8, 10]\n     */\n    function ary(func, n, guard) {\n      n = guard ? undefined : n;\n      n = (func && n == null) ? func.length : n;\n      return createWrap(func, WRAP_ARY_FLAG, undefined, undefined, undefined, undefined, n);\n    }\n\n    /**\n     * Creates a function that invokes `func`, with the `this` binding and arguments\n     * of the created function, while it's called less than `n` times. Subsequent\n     * calls to the created function return the result of the last `func` invocation.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {number} n The number of calls at which `func` is no longer invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * jQuery(element).on('click', _.before(5, addContactToList));\n     * // => Allows adding up to 4 contacts to the list.\n     */\n    function before(n, func) {\n      var result;\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n > 0) {\n          result = func.apply(this, arguments);\n        }\n        if (n <= 1) {\n          func = undefined;\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n     * and `partials` prepended to the arguments it receives.\n     *\n     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** Unlike native `Function#bind`, this method doesn't set the \"length\"\n     * property of bound functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to bind.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * function greet(greeting, punctuation) {\n     *   return greeting + ' ' + this.user + punctuation;\n     * }\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * var bound = _.bind(greet, object, 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bind(greet, object, _, '!');\n     * bound('hi');\n     * // => 'hi fred!'\n     */\n    var bind = baseRest(function(func, thisArg, partials) {\n      var bitmask = WRAP_BIND_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bind));\n        bitmask |= WRAP_PARTIAL_FLAG;\n      }\n      return createWrap(func, bitmask, thisArg, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes the method at `object[key]` with `partials`\n     * prepended to the arguments it receives.\n     *\n     * This method differs from `_.bind` by allowing bound functions to reference\n     * methods that may be redefined or don't yet exist. See\n     * [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)\n     * for more details.\n     *\n     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Function\n     * @param {Object} object The object to invoke the method on.\n     * @param {string} key The key of the method.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var object = {\n     *   'user': 'fred',\n     *   'greet': function(greeting, punctuation) {\n     *     return greeting + ' ' + this.user + punctuation;\n     *   }\n     * };\n     *\n     * var bound = _.bindKey(object, 'greet', 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * object.greet = function(greeting, punctuation) {\n     *   return greeting + 'ya ' + this.user + punctuation;\n     * };\n     *\n     * bound('!');\n     * // => 'hiya fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bindKey(object, 'greet', _, '!');\n     * bound('hi');\n     * // => 'hiya fred!'\n     */\n    var bindKey = baseRest(function(object, key, partials) {\n      var bitmask = WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bindKey));\n        bitmask |= WRAP_PARTIAL_FLAG;\n      }\n      return createWrap(key, bitmask, object, partials, holders);\n    });\n\n    /**\n     * Creates a function that accepts arguments of `func` and either invokes\n     * `func` returning its result, if at least `arity` number of arguments have\n     * been provided, or returns a function that accepts the remaining `func`\n     * arguments, and so on. The arity of `func` may be specified if `func.length`\n     * is not sufficient.\n     *\n     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curry(abc);\n     *\n     * curried(1)(2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(1)(_, 3)(2);\n     * // => [1, 2, 3]\n     */\n    function curry(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrap(func, WRAP_CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curry.placeholder;\n      return result;\n    }\n\n    /**\n     * This method is like `_.curry` except that arguments are applied to `func`\n     * in the manner of `_.partialRight` instead of `_.partial`.\n     *\n     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curryRight(abc);\n     *\n     * curried(3)(2)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(2, 3)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(3)(1, _)(2);\n     * // => [1, 2, 3]\n     */\n    function curryRight(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrap(func, WRAP_CURRY_RIGHT_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curryRight.placeholder;\n      return result;\n    }\n\n    /**\n     * Creates a debounced function that delays invoking `func` until after `wait`\n     * milliseconds have elapsed since the last time the debounced function was\n     * invoked. The debounced function comes with a `cancel` method to cancel\n     * delayed `func` invocations and a `flush` method to immediately invoke them.\n     * Provide `options` to indicate whether `func` should be invoked on the\n     * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n     * with the last arguments provided to the debounced function. Subsequent\n     * calls to the debounced function return the result of the last `func`\n     * invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n     * invoked on the trailing edge of the timeout only if the debounced function\n     * is invoked more than once during the `wait` timeout.\n     *\n     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.debounce` and `_.throttle`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to debounce.\n     * @param {number} [wait=0] The number of milliseconds to delay.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=false]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {number} [options.maxWait]\n     *  The maximum time `func` is allowed to be delayed before it's invoked.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new debounced function.\n     * @example\n     *\n     * // Avoid costly calculations while the window size is in flux.\n     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n     *\n     * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n     * jQuery(element).on('click', _.debounce(sendMail, 300, {\n     *   'leading': true,\n     *   'trailing': false\n     * }));\n     *\n     * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n     * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n     * var source = new EventSource('/stream');\n     * jQuery(source).on('message', debounced);\n     *\n     * // Cancel the trailing debounced invocation.\n     * jQuery(window).on('popstate', debounced.cancel);\n     */\n    function debounce(func, wait, options) {\n      var lastArgs,\n          lastThis,\n          maxWait,\n          result,\n          timerId,\n          lastCallTime,\n          lastInvokeTime = 0,\n          leading = false,\n          maxing = false,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      wait = toNumber(wait) || 0;\n      if (isObject(options)) {\n        leading = !!options.leading;\n        maxing = 'maxWait' in options;\n        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n\n      function invokeFunc(time) {\n        var args = lastArgs,\n            thisArg = lastThis;\n\n        lastArgs = lastThis = undefined;\n        lastInvokeTime = time;\n        result = func.apply(thisArg, args);\n        return result;\n      }\n\n      function leadingEdge(time) {\n        // Reset any `maxWait` timer.\n        lastInvokeTime = time;\n        // Start the timer for the trailing edge.\n        timerId = setTimeout(timerExpired, wait);\n        // Invoke the leading edge.\n        return leading ? invokeFunc(time) : result;\n      }\n\n      function remainingWait(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime,\n            timeWaiting = wait - timeSinceLastCall;\n\n        return maxing\n          ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)\n          : timeWaiting;\n      }\n\n      function shouldInvoke(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime;\n\n        // Either this is the first call, activity has stopped and we're at the\n        // trailing edge, the system time has gone backwards and we're treating\n        // it as the trailing edge, or we've hit the `maxWait` limit.\n        return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n          (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n      }\n\n      function timerExpired() {\n        var time = now();\n        if (shouldInvoke(time)) {\n          return trailingEdge(time);\n        }\n        // Restart the timer.\n        timerId = setTimeout(timerExpired, remainingWait(time));\n      }\n\n      function trailingEdge(time) {\n        timerId = undefined;\n\n        // Only invoke if we have `lastArgs` which means `func` has been\n        // debounced at least once.\n        if (trailing && lastArgs) {\n          return invokeFunc(time);\n        }\n        lastArgs = lastThis = undefined;\n        return result;\n      }\n\n      function cancel() {\n        if (timerId !== undefined) {\n          clearTimeout(timerId);\n        }\n        lastInvokeTime = 0;\n        lastArgs = lastCallTime = lastThis = timerId = undefined;\n      }\n\n      function flush() {\n        return timerId === undefined ? result : trailingEdge(now());\n      }\n\n      function debounced() {\n        var time = now(),\n            isInvoking = shouldInvoke(time);\n\n        lastArgs = arguments;\n        lastThis = this;\n        lastCallTime = time;\n\n        if (isInvoking) {\n          if (timerId === undefined) {\n            return leadingEdge(lastCallTime);\n          }\n          if (maxing) {\n            // Handle invocations in a tight loop.\n            timerId = setTimeout(timerExpired, wait);\n            return invokeFunc(lastCallTime);\n          }\n        }\n        if (timerId === undefined) {\n          timerId = setTimeout(timerExpired, wait);\n        }\n        return result;\n      }\n      debounced.cancel = cancel;\n      debounced.flush = flush;\n      return debounced;\n    }\n\n    /**\n     * Defers invoking the `func` until the current call stack has cleared. Any\n     * additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to defer.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.defer(function(text) {\n     *   console.log(text);\n     * }, 'deferred');\n     * // => Logs 'deferred' after one millisecond.\n     */\n    var defer = baseRest(function(func, args) {\n      return baseDelay(func, 1, args);\n    });\n\n    /**\n     * Invokes `func` after `wait` milliseconds. Any additional arguments are\n     * provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.delay(function(text) {\n     *   console.log(text);\n     * }, 1000, 'later');\n     * // => Logs 'later' after one second.\n     */\n    var delay = baseRest(function(func, wait, args) {\n      return baseDelay(func, toNumber(wait) || 0, args);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments reversed.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to flip arguments for.\n     * @returns {Function} Returns the new flipped function.\n     * @example\n     *\n     * var flipped = _.flip(function() {\n     *   return _.toArray(arguments);\n     * });\n     *\n     * flipped('a', 'b', 'c', 'd');\n     * // => ['d', 'c', 'b', 'a']\n     */\n    function flip(func) {\n      return createWrap(func, WRAP_FLIP_FLAG);\n    }\n\n    /**\n     * Creates a function that memoizes the result of `func`. If `resolver` is\n     * provided, it determines the cache key for storing the result based on the\n     * arguments provided to the memoized function. By default, the first argument\n     * provided to the memoized function is used as the map cache key. The `func`\n     * is invoked with the `this` binding of the memoized function.\n     *\n     * **Note:** The cache is exposed as the `cache` property on the memoized\n     * function. Its creation may be customized by replacing the `_.memoize.Cache`\n     * constructor with one whose instances implement the\n     * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n     * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to have its output memoized.\n     * @param {Function} [resolver] The function to resolve the cache key.\n     * @returns {Function} Returns the new memoized function.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     * var other = { 'c': 3, 'd': 4 };\n     *\n     * var values = _.memoize(_.values);\n     * values(object);\n     * // => [1, 2]\n     *\n     * values(other);\n     * // => [3, 4]\n     *\n     * object.a = 2;\n     * values(object);\n     * // => [1, 2]\n     *\n     * // Modify the result cache.\n     * values.cache.set(object, ['a', 'b']);\n     * values(object);\n     * // => ['a', 'b']\n     *\n     * // Replace `_.memoize.Cache`.\n     * _.memoize.Cache = WeakMap;\n     */\n    function memoize(func, resolver) {\n      if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var memoized = function() {\n        var args = arguments,\n            key = resolver ? resolver.apply(this, args) : args[0],\n            cache = memoized.cache;\n\n        if (cache.has(key)) {\n          return cache.get(key);\n        }\n        var result = func.apply(this, args);\n        memoized.cache = cache.set(key, result) || cache;\n        return result;\n      };\n      memoized.cache = new (memoize.Cache || MapCache);\n      return memoized;\n    }\n\n    // Expose `MapCache`.\n    memoize.Cache = MapCache;\n\n    /**\n     * Creates a function that negates the result of the predicate `func`. The\n     * `func` predicate is invoked with the `this` binding and arguments of the\n     * created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} predicate The predicate to negate.\n     * @returns {Function} Returns the new negated function.\n     * @example\n     *\n     * function isEven(n) {\n     *   return n % 2 == 0;\n     * }\n     *\n     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n     * // => [1, 3, 5]\n     */\n    function negate(predicate) {\n      if (typeof predicate != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return function() {\n        var args = arguments;\n        switch (args.length) {\n          case 0: return !predicate.call(this);\n          case 1: return !predicate.call(this, args[0]);\n          case 2: return !predicate.call(this, args[0], args[1]);\n          case 3: return !predicate.call(this, args[0], args[1], args[2]);\n        }\n        return !predicate.apply(this, args);\n      };\n    }\n\n    /**\n     * Creates a function that is restricted to invoking `func` once. Repeat calls\n     * to the function return the value of the first invocation. The `func` is\n     * invoked with the `this` binding and arguments of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var initialize = _.once(createApplication);\n     * initialize();\n     * initialize();\n     * // => `createApplication` is invoked once\n     */\n    function once(func) {\n      return before(2, func);\n    }\n\n    /**\n     * Creates a function that invokes `func` with its arguments transformed.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to wrap.\n     * @param {...(Function|Function[])} [transforms=[_.identity]]\n     *  The argument transforms.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function doubled(n) {\n     *   return n * 2;\n     * }\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var func = _.overArgs(function(x, y) {\n     *   return [x, y];\n     * }, [square, doubled]);\n     *\n     * func(9, 3);\n     * // => [81, 6]\n     *\n     * func(10, 5);\n     * // => [100, 10]\n     */\n    var overArgs = castRest(function(func, transforms) {\n      transforms = (transforms.length == 1 && isArray(transforms[0]))\n        ? arrayMap(transforms[0], baseUnary(getIteratee()))\n        : arrayMap(baseFlatten(transforms, 1), baseUnary(getIteratee()));\n\n      var funcsLength = transforms.length;\n      return baseRest(function(args) {\n        var index = -1,\n            length = nativeMin(args.length, funcsLength);\n\n        while (++index < length) {\n          args[index] = transforms[index].call(this, args[index]);\n        }\n        return apply(func, this, args);\n      });\n    });\n\n    /**\n     * Creates a function that invokes `func` with `partials` prepended to the\n     * arguments it receives. This method is like `_.bind` except it does **not**\n     * alter the `this` binding.\n     *\n     * The `_.partial.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.2.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * function greet(greeting, name) {\n     *   return greeting + ' ' + name;\n     * }\n     *\n     * var sayHelloTo = _.partial(greet, 'hello');\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     *\n     * // Partially applied with placeholders.\n     * var greetFred = _.partial(greet, _, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     */\n    var partial = baseRest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partial));\n      return createWrap(func, WRAP_PARTIAL_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * This method is like `_.partial` except that partially applied arguments\n     * are appended to the arguments it receives.\n     *\n     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * function greet(greeting, name) {\n     *   return greeting + ' ' + name;\n     * }\n     *\n     * var greetFred = _.partialRight(greet, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     *\n     * // Partially applied with placeholders.\n     * var sayHelloTo = _.partialRight(greet, 'hello', _);\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     */\n    var partialRight = baseRest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partialRight));\n      return createWrap(func, WRAP_PARTIAL_RIGHT_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments arranged according\n     * to the specified `indexes` where the argument value at the first index is\n     * provided as the first argument, the argument value at the second index is\n     * provided as the second argument, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to rearrange arguments for.\n     * @param {...(number|number[])} indexes The arranged argument indexes.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var rearged = _.rearg(function(a, b, c) {\n     *   return [a, b, c];\n     * }, [2, 0, 1]);\n     *\n     * rearged('b', 'c', 'a')\n     * // => ['a', 'b', 'c']\n     */\n    var rearg = flatRest(function(func, indexes) {\n      return createWrap(func, WRAP_REARG_FLAG, undefined, undefined, undefined, indexes);\n    });\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * created function and arguments from `start` and beyond provided as\n     * an array.\n     *\n     * **Note:** This method is based on the\n     * [rest parameter](https://mdn.io/rest_parameters).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.rest(function(what, names) {\n     *   return what + ' ' + _.initial(names).join(', ') +\n     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n     * });\n     *\n     * say('hello', 'fred', 'barney', 'pebbles');\n     * // => 'hello fred, barney, & pebbles'\n     */\n    function rest(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start === undefined ? start : toInteger(start);\n      return baseRest(func, start);\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * create function and an array of arguments much like\n     * [`Function#apply`](http://www.ecma-international.org/ecma-262/7.0/#sec-function.prototype.apply).\n     *\n     * **Note:** This method is based on the\n     * [spread operator](https://mdn.io/spread_operator).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Function\n     * @param {Function} func The function to spread arguments over.\n     * @param {number} [start=0] The start position of the spread.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.spread(function(who, what) {\n     *   return who + ' says ' + what;\n     * });\n     *\n     * say(['fred', 'hello']);\n     * // => 'fred says hello'\n     *\n     * var numbers = Promise.all([\n     *   Promise.resolve(40),\n     *   Promise.resolve(36)\n     * ]);\n     *\n     * numbers.then(_.spread(function(x, y) {\n     *   return x + y;\n     * }));\n     * // => a Promise of 76\n     */\n    function spread(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start == null ? 0 : nativeMax(toInteger(start), 0);\n      return baseRest(function(args) {\n        var array = args[start],\n            otherArgs = castSlice(args, 0, start);\n\n        if (array) {\n          arrayPush(otherArgs, array);\n        }\n        return apply(func, this, otherArgs);\n      });\n    }\n\n    /**\n     * Creates a throttled function that only invokes `func` at most once per\n     * every `wait` milliseconds. The throttled function comes with a `cancel`\n     * method to cancel delayed `func` invocations and a `flush` method to\n     * immediately invoke them. Provide `options` to indicate whether `func`\n     * should be invoked on the leading and/or trailing edge of the `wait`\n     * timeout. The `func` is invoked with the last arguments provided to the\n     * throttled function. Subsequent calls to the throttled function return the\n     * result of the last `func` invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n     * invoked on the trailing edge of the timeout only if the throttled function\n     * is invoked more than once during the `wait` timeout.\n     *\n     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.throttle` and `_.debounce`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to throttle.\n     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=true]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new throttled function.\n     * @example\n     *\n     * // Avoid excessively updating the position while scrolling.\n     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n     *\n     * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n     * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n     * jQuery(element).on('click', throttled);\n     *\n     * // Cancel the trailing throttled invocation.\n     * jQuery(window).on('popstate', throttled.cancel);\n     */\n    function throttle(func, wait, options) {\n      var leading = true,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      if (isObject(options)) {\n        leading = 'leading' in options ? !!options.leading : leading;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n      return debounce(func, wait, {\n        'leading': leading,\n        'maxWait': wait,\n        'trailing': trailing\n      });\n    }\n\n    /**\n     * Creates a function that accepts up to one argument, ignoring any\n     * additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.unary(parseInt));\n     * // => [6, 8, 10]\n     */\n    function unary(func) {\n      return ary(func, 1);\n    }\n\n    /**\n     * Creates a function that provides `value` to `wrapper` as its first\n     * argument. Any additional arguments provided to the function are appended\n     * to those provided to the `wrapper`. The wrapper is invoked with the `this`\n     * binding of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {*} value The value to wrap.\n     * @param {Function} [wrapper=identity] The wrapper function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var p = _.wrap(_.escape, function(func, text) {\n     *   return '<p>' + func(text) + '</p>';\n     * });\n     *\n     * p('fred, barney, & pebbles');\n     * // => '<p>fred, barney, &amp; pebbles</p>'\n     */\n    function wrap(value, wrapper) {\n      return partial(castFunction(wrapper), value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Casts `value` as an array if it's not one.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Lang\n     * @param {*} value The value to inspect.\n     * @returns {Array} Returns the cast array.\n     * @example\n     *\n     * _.castArray(1);\n     * // => [1]\n     *\n     * _.castArray({ 'a': 1 });\n     * // => [{ 'a': 1 }]\n     *\n     * _.castArray('abc');\n     * // => ['abc']\n     *\n     * _.castArray(null);\n     * // => [null]\n     *\n     * _.castArray(undefined);\n     * // => [undefined]\n     *\n     * _.castArray();\n     * // => []\n     *\n     * var array = [1, 2, 3];\n     * console.log(_.castArray(array) === array);\n     * // => true\n     */\n    function castArray() {\n      if (!arguments.length) {\n        return [];\n      }\n      var value = arguments[0];\n      return isArray(value) ? value : [value];\n    }\n\n    /**\n     * Creates a shallow clone of `value`.\n     *\n     * **Note:** This method is loosely based on the\n     * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n     * and supports cloning arrays, array buffers, booleans, date objects, maps,\n     * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n     * arrays. The own enumerable properties of `arguments` objects are cloned\n     * as plain objects. An empty object is returned for uncloneable values such\n     * as error objects, functions, DOM nodes, and WeakMaps.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeep\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var shallow = _.clone(objects);\n     * console.log(shallow[0] === objects[0]);\n     * // => true\n     */\n    function clone(value) {\n      return baseClone(value, CLONE_SYMBOLS_FLAG);\n    }\n\n    /**\n     * This method is like `_.clone` except that it accepts `customizer` which\n     * is invoked to produce the cloned value. If `customizer` returns `undefined`,\n     * cloning is handled by the method instead. The `customizer` is invoked with\n     * up to four arguments; (value [, index|key, object, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeepWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(false);\n     *   }\n     * }\n     *\n     * var el = _.cloneWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 0\n     */\n    function cloneWith(value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseClone(value, CLONE_SYMBOLS_FLAG, customizer);\n    }\n\n    /**\n     * This method is like `_.clone` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.clone\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var deep = _.cloneDeep(objects);\n     * console.log(deep[0] === objects[0]);\n     * // => false\n     */\n    function cloneDeep(value) {\n      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n    }\n\n    /**\n     * This method is like `_.cloneWith` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.cloneWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(true);\n     *   }\n     * }\n     *\n     * var el = _.cloneDeepWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 20\n     */\n    function cloneDeepWith(value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG, customizer);\n    }\n\n    /**\n     * Checks if `object` conforms to `source` by invoking the predicate\n     * properties of `source` with the corresponding property values of `object`.\n     *\n     * **Note:** This method is equivalent to `_.conforms` when `source` is\n     * partially applied.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.14.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     *\n     * _.conformsTo(object, { 'b': function(n) { return n > 1; } });\n     * // => true\n     *\n     * _.conformsTo(object, { 'b': function(n) { return n > 2; } });\n     * // => false\n     */\n    function conformsTo(object, source) {\n      return source == null || baseConformsTo(object, source, keys(source));\n    }\n\n    /**\n     * Performs a\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * comparison between two values to determine if they are equivalent.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     * var other = { 'a': 1 };\n     *\n     * _.eq(object, object);\n     * // => true\n     *\n     * _.eq(object, other);\n     * // => false\n     *\n     * _.eq('a', 'a');\n     * // => true\n     *\n     * _.eq('a', Object('a'));\n     * // => false\n     *\n     * _.eq(NaN, NaN);\n     * // => true\n     */\n    function eq(value, other) {\n      return value === other || (value !== value && other !== other);\n    }\n\n    /**\n     * Checks if `value` is greater than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     * @see _.lt\n     * @example\n     *\n     * _.gt(3, 1);\n     * // => true\n     *\n     * _.gt(3, 3);\n     * // => false\n     *\n     * _.gt(1, 3);\n     * // => false\n     */\n    var gt = createRelationalOperation(baseGt);\n\n    /**\n     * Checks if `value` is greater than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than or equal to\n     *  `other`, else `false`.\n     * @see _.lte\n     * @example\n     *\n     * _.gte(3, 1);\n     * // => true\n     *\n     * _.gte(3, 3);\n     * // => true\n     *\n     * _.gte(1, 3);\n     * // => false\n     */\n    var gte = createRelationalOperation(function(value, other) {\n      return value >= other;\n    });\n\n    /**\n     * Checks if `value` is likely an `arguments` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArguments(function() { return arguments; }());\n     * // => true\n     *\n     * _.isArguments([1, 2, 3]);\n     * // => false\n     */\n    var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n      return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n        !propertyIsEnumerable.call(value, 'callee');\n    };\n\n    /**\n     * Checks if `value` is classified as an `Array` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n     * @example\n     *\n     * _.isArray([1, 2, 3]);\n     * // => true\n     *\n     * _.isArray(document.body.children);\n     * // => false\n     *\n     * _.isArray('abc');\n     * // => false\n     *\n     * _.isArray(_.noop);\n     * // => false\n     */\n    var isArray = Array.isArray;\n\n    /**\n     * Checks if `value` is classified as an `ArrayBuffer` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n     * @example\n     *\n     * _.isArrayBuffer(new ArrayBuffer(2));\n     * // => true\n     *\n     * _.isArrayBuffer(new Array(2));\n     * // => false\n     */\n    var isArrayBuffer = nodeIsArrayBuffer ? baseUnary(nodeIsArrayBuffer) : baseIsArrayBuffer;\n\n    /**\n     * Checks if `value` is array-like. A value is considered array-like if it's\n     * not a function and has a `value.length` that's an integer greater than or\n     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n     * @example\n     *\n     * _.isArrayLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLike(document.body.children);\n     * // => true\n     *\n     * _.isArrayLike('abc');\n     * // => true\n     *\n     * _.isArrayLike(_.noop);\n     * // => false\n     */\n    function isArrayLike(value) {\n      return value != null && isLength(value.length) && !isFunction(value);\n    }\n\n    /**\n     * This method is like `_.isArrayLike` except that it also checks if `value`\n     * is an object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array-like object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArrayLikeObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLikeObject(document.body.children);\n     * // => true\n     *\n     * _.isArrayLikeObject('abc');\n     * // => false\n     *\n     * _.isArrayLikeObject(_.noop);\n     * // => false\n     */\n    function isArrayLikeObject(value) {\n      return isObjectLike(value) && isArrayLike(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a boolean primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.\n     * @example\n     *\n     * _.isBoolean(false);\n     * // => true\n     *\n     * _.isBoolean(null);\n     * // => false\n     */\n    function isBoolean(value) {\n      return value === true || value === false ||\n        (isObjectLike(value) && baseGetTag(value) == boolTag);\n    }\n\n    /**\n     * Checks if `value` is a buffer.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n     * @example\n     *\n     * _.isBuffer(new Buffer(2));\n     * // => true\n     *\n     * _.isBuffer(new Uint8Array(2));\n     * // => false\n     */\n    var isBuffer = nativeIsBuffer || stubFalse;\n\n    /**\n     * Checks if `value` is classified as a `Date` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n     * @example\n     *\n     * _.isDate(new Date);\n     * // => true\n     *\n     * _.isDate('Mon April 23 2012');\n     * // => false\n     */\n    var isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;\n\n    /**\n     * Checks if `value` is likely a DOM element.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.\n     * @example\n     *\n     * _.isElement(document.body);\n     * // => true\n     *\n     * _.isElement('<body>');\n     * // => false\n     */\n    function isElement(value) {\n      return isObjectLike(value) && value.nodeType === 1 && !isPlainObject(value);\n    }\n\n    /**\n     * Checks if `value` is an empty object, collection, map, or set.\n     *\n     * Objects are considered empty if they have no own enumerable string keyed\n     * properties.\n     *\n     * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n     * jQuery-like collections are considered empty if they have a `length` of `0`.\n     * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n     * @example\n     *\n     * _.isEmpty(null);\n     * // => true\n     *\n     * _.isEmpty(true);\n     * // => true\n     *\n     * _.isEmpty(1);\n     * // => true\n     *\n     * _.isEmpty([1, 2, 3]);\n     * // => false\n     *\n     * _.isEmpty({ 'a': 1 });\n     * // => false\n     */\n    function isEmpty(value) {\n      if (value == null) {\n        return true;\n      }\n      if (isArrayLike(value) &&\n          (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||\n            isBuffer(value) || isTypedArray(value) || isArguments(value))) {\n        return !value.length;\n      }\n      var tag = getTag(value);\n      if (tag == mapTag || tag == setTag) {\n        return !value.size;\n      }\n      if (isPrototype(value)) {\n        return !baseKeys(value).length;\n      }\n      for (var key in value) {\n        if (hasOwnProperty.call(value, key)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * Performs a deep comparison between two values to determine if they are\n     * equivalent.\n     *\n     * **Note:** This method supports comparing arrays, array buffers, booleans,\n     * date objects, error objects, maps, numbers, `Object` objects, regexes,\n     * sets, strings, symbols, and typed arrays. `Object` objects are compared\n     * by their own, not inherited, enumerable properties. Functions and DOM\n     * nodes are compared by strict equality, i.e. `===`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     * var other = { 'a': 1 };\n     *\n     * _.isEqual(object, other);\n     * // => true\n     *\n     * object === other;\n     * // => false\n     */\n    function isEqual(value, other) {\n      return baseIsEqual(value, other);\n    }\n\n    /**\n     * This method is like `_.isEqual` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with up to\n     * six arguments: (objValue, othValue [, index|key, object, other, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, othValue) {\n     *   if (isGreeting(objValue) && isGreeting(othValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var array = ['hello', 'goodbye'];\n     * var other = ['hi', 'goodbye'];\n     *\n     * _.isEqualWith(array, other, customizer);\n     * // => true\n     */\n    function isEqualWith(value, other, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      var result = customizer ? customizer(value, other) : undefined;\n      return result === undefined ? baseIsEqual(value, other, undefined, customizer) : !!result;\n    }\n\n    /**\n     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n     * `SyntaxError`, `TypeError`, or `URIError` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.\n     * @example\n     *\n     * _.isError(new Error);\n     * // => true\n     *\n     * _.isError(Error);\n     * // => false\n     */\n    function isError(value) {\n      if (!isObjectLike(value)) {\n        return false;\n      }\n      var tag = baseGetTag(value);\n      return tag == errorTag || tag == domExcTag ||\n        (typeof value.message == 'string' && typeof value.name == 'string' && !isPlainObject(value));\n    }\n\n    /**\n     * Checks if `value` is a finite primitive number.\n     *\n     * **Note:** This method is based on\n     * [`Number.isFinite`](https://mdn.io/Number/isFinite).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.\n     * @example\n     *\n     * _.isFinite(3);\n     * // => true\n     *\n     * _.isFinite(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isFinite(Infinity);\n     * // => false\n     *\n     * _.isFinite('3');\n     * // => false\n     */\n    function isFinite(value) {\n      return typeof value == 'number' && nativeIsFinite(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Function` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n     * @example\n     *\n     * _.isFunction(_);\n     * // => true\n     *\n     * _.isFunction(/abc/);\n     * // => false\n     */\n    function isFunction(value) {\n      if (!isObject(value)) {\n        return false;\n      }\n      // The use of `Object#toString` avoids issues with the `typeof` operator\n      // in Safari 9 which returns 'object' for typed arrays and other constructors.\n      var tag = baseGetTag(value);\n      return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n    }\n\n    /**\n     * Checks if `value` is an integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isInteger`](https://mdn.io/Number/isInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an integer, else `false`.\n     * @example\n     *\n     * _.isInteger(3);\n     * // => true\n     *\n     * _.isInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isInteger(Infinity);\n     * // => false\n     *\n     * _.isInteger('3');\n     * // => false\n     */\n    function isInteger(value) {\n      return typeof value == 'number' && value == toInteger(value);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like length.\n     *\n     * **Note:** This method is loosely based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n     * @example\n     *\n     * _.isLength(3);\n     * // => true\n     *\n     * _.isLength(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isLength(Infinity);\n     * // => false\n     *\n     * _.isLength('3');\n     * // => false\n     */\n    function isLength(value) {\n      return typeof value == 'number' &&\n        value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is the\n     * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n     * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n     * @example\n     *\n     * _.isObject({});\n     * // => true\n     *\n     * _.isObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isObject(_.noop);\n     * // => true\n     *\n     * _.isObject(null);\n     * // => false\n     */\n    function isObject(value) {\n      var type = typeof value;\n      return value != null && (type == 'object' || type == 'function');\n    }\n\n    /**\n     * Checks if `value` is object-like. A value is object-like if it's not `null`\n     * and has a `typeof` result of \"object\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n     * @example\n     *\n     * _.isObjectLike({});\n     * // => true\n     *\n     * _.isObjectLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isObjectLike(_.noop);\n     * // => false\n     *\n     * _.isObjectLike(null);\n     * // => false\n     */\n    function isObjectLike(value) {\n      return value != null && typeof value == 'object';\n    }\n\n    /**\n     * Checks if `value` is classified as a `Map` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n     * @example\n     *\n     * _.isMap(new Map);\n     * // => true\n     *\n     * _.isMap(new WeakMap);\n     * // => false\n     */\n    var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\n    /**\n     * Performs a partial deep comparison between `object` and `source` to\n     * determine if `object` contains equivalent property values.\n     *\n     * **Note:** This method is equivalent to `_.matches` when `source` is\n     * partially applied.\n     *\n     * Partial comparisons will match empty array and empty object `source`\n     * values against any array or object value, respectively. See `_.isEqual`\n     * for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     *\n     * _.isMatch(object, { 'b': 2 });\n     * // => true\n     *\n     * _.isMatch(object, { 'b': 1 });\n     * // => false\n     */\n    function isMatch(object, source) {\n      return object === source || baseIsMatch(object, source, getMatchData(source));\n    }\n\n    /**\n     * This method is like `_.isMatch` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with five\n     * arguments: (objValue, srcValue, index|key, object, source).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (isGreeting(objValue) && isGreeting(srcValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var object = { 'greeting': 'hello' };\n     * var source = { 'greeting': 'hi' };\n     *\n     * _.isMatchWith(object, source, customizer);\n     * // => true\n     */\n    function isMatchWith(object, source, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseIsMatch(object, source, getMatchData(source), customizer);\n    }\n\n    /**\n     * Checks if `value` is `NaN`.\n     *\n     * **Note:** This method is based on\n     * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as\n     * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for\n     * `undefined` and other non-number values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n     * @example\n     *\n     * _.isNaN(NaN);\n     * // => true\n     *\n     * _.isNaN(new Number(NaN));\n     * // => true\n     *\n     * isNaN(undefined);\n     * // => true\n     *\n     * _.isNaN(undefined);\n     * // => false\n     */\n    function isNaN(value) {\n      // An `NaN` primitive is the only value that is not equal to itself.\n      // Perform the `toStringTag` check first to avoid errors with some\n      // ActiveX objects in IE.\n      return isNumber(value) && value != +value;\n    }\n\n    /**\n     * Checks if `value` is a pristine native function.\n     *\n     * **Note:** This method can't reliably detect native functions in the presence\n     * of the core-js package because core-js circumvents this kind of detection.\n     * Despite multiple requests, the core-js maintainer has made it clear: any\n     * attempt to fix the detection will be obstructed. As a result, we're left\n     * with little choice but to throw an error. Unfortunately, this also affects\n     * packages, like [babel-polyfill](https://www.npmjs.com/package/babel-polyfill),\n     * which rely on core-js.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     * @example\n     *\n     * _.isNative(Array.prototype.push);\n     * // => true\n     *\n     * _.isNative(_);\n     * // => false\n     */\n    function isNative(value) {\n      if (isMaskable(value)) {\n        throw new Error(CORE_ERROR_TEXT);\n      }\n      return baseIsNative(value);\n    }\n\n    /**\n     * Checks if `value` is `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n     * @example\n     *\n     * _.isNull(null);\n     * // => true\n     *\n     * _.isNull(void 0);\n     * // => false\n     */\n    function isNull(value) {\n      return value === null;\n    }\n\n    /**\n     * Checks if `value` is `null` or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is nullish, else `false`.\n     * @example\n     *\n     * _.isNil(null);\n     * // => true\n     *\n     * _.isNil(void 0);\n     * // => true\n     *\n     * _.isNil(NaN);\n     * // => false\n     */\n    function isNil(value) {\n      return value == null;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Number` primitive or object.\n     *\n     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are\n     * classified as numbers, use the `_.isFinite` method.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a number, else `false`.\n     * @example\n     *\n     * _.isNumber(3);\n     * // => true\n     *\n     * _.isNumber(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isNumber(Infinity);\n     * // => true\n     *\n     * _.isNumber('3');\n     * // => false\n     */\n    function isNumber(value) {\n      return typeof value == 'number' ||\n        (isObjectLike(value) && baseGetTag(value) == numberTag);\n    }\n\n    /**\n     * Checks if `value` is a plain object, that is, an object created by the\n     * `Object` constructor or one with a `[[Prototype]]` of `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.8.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * _.isPlainObject(new Foo);\n     * // => false\n     *\n     * _.isPlainObject([1, 2, 3]);\n     * // => false\n     *\n     * _.isPlainObject({ 'x': 0, 'y': 0 });\n     * // => true\n     *\n     * _.isPlainObject(Object.create(null));\n     * // => true\n     */\n    function isPlainObject(value) {\n      if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n        return false;\n      }\n      var proto = getPrototype(value);\n      if (proto === null) {\n        return true;\n      }\n      var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n      return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n        funcToString.call(Ctor) == objectCtorString;\n    }\n\n    /**\n     * Checks if `value` is classified as a `RegExp` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n     * @example\n     *\n     * _.isRegExp(/abc/);\n     * // => true\n     *\n     * _.isRegExp('/abc/');\n     * // => false\n     */\n    var isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;\n\n    /**\n     * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754\n     * double precision number which isn't the result of a rounded unsafe integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a safe integer, else `false`.\n     * @example\n     *\n     * _.isSafeInteger(3);\n     * // => true\n     *\n     * _.isSafeInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isSafeInteger(Infinity);\n     * // => false\n     *\n     * _.isSafeInteger('3');\n     * // => false\n     */\n    function isSafeInteger(value) {\n      return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Set` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n     * @example\n     *\n     * _.isSet(new Set);\n     * // => true\n     *\n     * _.isSet(new WeakSet);\n     * // => false\n     */\n    var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\n    /**\n     * Checks if `value` is classified as a `String` primitive or object.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n     * @example\n     *\n     * _.isString('abc');\n     * // => true\n     *\n     * _.isString(1);\n     * // => false\n     */\n    function isString(value) {\n      return typeof value == 'string' ||\n        (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Symbol` primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n     * @example\n     *\n     * _.isSymbol(Symbol.iterator);\n     * // => true\n     *\n     * _.isSymbol('abc');\n     * // => false\n     */\n    function isSymbol(value) {\n      return typeof value == 'symbol' ||\n        (isObjectLike(value) && baseGetTag(value) == symbolTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a typed array.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n     * @example\n     *\n     * _.isTypedArray(new Uint8Array);\n     * // => true\n     *\n     * _.isTypedArray([]);\n     * // => false\n     */\n    var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\n    /**\n     * Checks if `value` is `undefined`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n     * @example\n     *\n     * _.isUndefined(void 0);\n     * // => true\n     *\n     * _.isUndefined(null);\n     * // => false\n     */\n    function isUndefined(value) {\n      return value === undefined;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakMap` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a weak map, else `false`.\n     * @example\n     *\n     * _.isWeakMap(new WeakMap);\n     * // => true\n     *\n     * _.isWeakMap(new Map);\n     * // => false\n     */\n    function isWeakMap(value) {\n      return isObjectLike(value) && getTag(value) == weakMapTag;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakSet` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a weak set, else `false`.\n     * @example\n     *\n     * _.isWeakSet(new WeakSet);\n     * // => true\n     *\n     * _.isWeakSet(new Set);\n     * // => false\n     */\n    function isWeakSet(value) {\n      return isObjectLike(value) && baseGetTag(value) == weakSetTag;\n    }\n\n    /**\n     * Checks if `value` is less than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     * @see _.gt\n     * @example\n     *\n     * _.lt(1, 3);\n     * // => true\n     *\n     * _.lt(3, 3);\n     * // => false\n     *\n     * _.lt(3, 1);\n     * // => false\n     */\n    var lt = createRelationalOperation(baseLt);\n\n    /**\n     * Checks if `value` is less than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than or equal to\n     *  `other`, else `false`.\n     * @see _.gte\n     * @example\n     *\n     * _.lte(1, 3);\n     * // => true\n     *\n     * _.lte(3, 3);\n     * // => true\n     *\n     * _.lte(3, 1);\n     * // => false\n     */\n    var lte = createRelationalOperation(function(value, other) {\n      return value <= other;\n    });\n\n    /**\n     * Converts `value` to an array.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the converted array.\n     * @example\n     *\n     * _.toArray({ 'a': 1, 'b': 2 });\n     * // => [1, 2]\n     *\n     * _.toArray('abc');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toArray(1);\n     * // => []\n     *\n     * _.toArray(null);\n     * // => []\n     */\n    function toArray(value) {\n      if (!value) {\n        return [];\n      }\n      if (isArrayLike(value)) {\n        return isString(value) ? stringToArray(value) : copyArray(value);\n      }\n      if (symIterator && value[symIterator]) {\n        return iteratorToArray(value[symIterator]());\n      }\n      var tag = getTag(value),\n          func = tag == mapTag ? mapToArray : (tag == setTag ? setToArray : values);\n\n      return func(value);\n    }\n\n    /**\n     * Converts `value` to a finite number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.12.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted number.\n     * @example\n     *\n     * _.toFinite(3.2);\n     * // => 3.2\n     *\n     * _.toFinite(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toFinite(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toFinite('3.2');\n     * // => 3.2\n     */\n    function toFinite(value) {\n      if (!value) {\n        return value === 0 ? value : 0;\n      }\n      value = toNumber(value);\n      if (value === INFINITY || value === -INFINITY) {\n        var sign = (value < 0 ? -1 : 1);\n        return sign * MAX_INTEGER;\n      }\n      return value === value ? value : 0;\n    }\n\n    /**\n     * Converts `value` to an integer.\n     *\n     * **Note:** This method is loosely based on\n     * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toInteger(3.2);\n     * // => 3\n     *\n     * _.toInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toInteger(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toInteger('3.2');\n     * // => 3\n     */\n    function toInteger(value) {\n      var result = toFinite(value),\n          remainder = result % 1;\n\n      return result === result ? (remainder ? result - remainder : result) : 0;\n    }\n\n    /**\n     * Converts `value` to an integer suitable for use as the length of an\n     * array-like object.\n     *\n     * **Note:** This method is based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toLength(3.2);\n     * // => 3\n     *\n     * _.toLength(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toLength(Infinity);\n     * // => 4294967295\n     *\n     * _.toLength('3.2');\n     * // => 3\n     */\n    function toLength(value) {\n      return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;\n    }\n\n    /**\n     * Converts `value` to a number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     * @example\n     *\n     * _.toNumber(3.2);\n     * // => 3.2\n     *\n     * _.toNumber(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toNumber(Infinity);\n     * // => Infinity\n     *\n     * _.toNumber('3.2');\n     * // => 3.2\n     */\n    function toNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      if (isObject(value)) {\n        var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n        value = isObject(other) ? (other + '') : other;\n      }\n      if (typeof value != 'string') {\n        return value === 0 ? value : +value;\n      }\n      value = value.replace(reTrim, '');\n      var isBinary = reIsBinary.test(value);\n      return (isBinary || reIsOctal.test(value))\n        ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n        : (reIsBadHex.test(value) ? NAN : +value);\n    }\n\n    /**\n     * Converts `value` to a plain object flattening inherited enumerable string\n     * keyed properties of `value` to own properties of the plain object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Object} Returns the converted plain object.\n     * @example\n     *\n     * function Foo() {\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.assign({ 'a': 1 }, new Foo);\n     * // => { 'a': 1, 'b': 2 }\n     *\n     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n     * // => { 'a': 1, 'b': 2, 'c': 3 }\n     */\n    function toPlainObject(value) {\n      return copyObject(value, keysIn(value));\n    }\n\n    /**\n     * Converts `value` to a safe integer. A safe integer can be compared and\n     * represented correctly.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toSafeInteger(3.2);\n     * // => 3\n     *\n     * _.toSafeInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toSafeInteger(Infinity);\n     * // => 9007199254740991\n     *\n     * _.toSafeInteger('3.2');\n     * // => 3\n     */\n    function toSafeInteger(value) {\n      return value\n        ? baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER)\n        : (value === 0 ? value : 0);\n    }\n\n    /**\n     * Converts `value` to a string. An empty string is returned for `null`\n     * and `undefined` values. The sign of `-0` is preserved.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.toString(null);\n     * // => ''\n     *\n     * _.toString(-0);\n     * // => '-0'\n     *\n     * _.toString([1, 2, 3]);\n     * // => '1,2,3'\n     */\n    function toString(value) {\n      return value == null ? '' : baseToString(value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Assigns own enumerable string keyed properties of source objects to the\n     * destination object. Source objects are applied from left to right.\n     * Subsequent sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object` and is loosely based on\n     * [`Object.assign`](https://mdn.io/Object/assign).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assignIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * function Bar() {\n     *   this.c = 3;\n     * }\n     *\n     * Foo.prototype.b = 2;\n     * Bar.prototype.d = 4;\n     *\n     * _.assign({ 'a': 0 }, new Foo, new Bar);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var assign = createAssigner(function(object, source) {\n      if (isPrototype(source) || isArrayLike(source)) {\n        copyObject(source, keys(source), object);\n        return;\n      }\n      for (var key in source) {\n        if (hasOwnProperty.call(source, key)) {\n          assignValue(object, key, source[key]);\n        }\n      }\n    });\n\n    /**\n     * This method is like `_.assign` except that it iterates over own and\n     * inherited source properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extend\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assign\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * function Bar() {\n     *   this.c = 3;\n     * }\n     *\n     * Foo.prototype.b = 2;\n     * Bar.prototype.d = 4;\n     *\n     * _.assignIn({ 'a': 0 }, new Foo, new Bar);\n     * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }\n     */\n    var assignIn = createAssigner(function(object, source) {\n      copyObject(source, keysIn(source), object);\n    });\n\n    /**\n     * This method is like `_.assignIn` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extendWith\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignInWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keysIn(source), object, customizer);\n    });\n\n    /**\n     * This method is like `_.assign` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignInWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keys(source), object, customizer);\n    });\n\n    /**\n     * Creates an array of values corresponding to `paths` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Array} Returns the picked values.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _.at(object, ['a[0].b.c', 'a[1]']);\n     * // => [3, 4]\n     */\n    var at = flatRest(baseAt);\n\n    /**\n     * Creates an object that inherits from the `prototype` object. If a\n     * `properties` object is given, its own enumerable string keyed properties\n     * are assigned to the created object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Object\n     * @param {Object} prototype The object to inherit from.\n     * @param {Object} [properties] The properties to assign to the object.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * function Shape() {\n     *   this.x = 0;\n     *   this.y = 0;\n     * }\n     *\n     * function Circle() {\n     *   Shape.call(this);\n     * }\n     *\n     * Circle.prototype = _.create(Shape.prototype, {\n     *   'constructor': Circle\n     * });\n     *\n     * var circle = new Circle;\n     * circle instanceof Circle;\n     * // => true\n     *\n     * circle instanceof Shape;\n     * // => true\n     */\n    function create(prototype, properties) {\n      var result = baseCreate(prototype);\n      return properties == null ? result : baseAssign(result, properties);\n    }\n\n    /**\n     * Assigns own and inherited enumerable string keyed properties of source\n     * objects to the destination object for all destination properties that\n     * resolve to `undefined`. Source objects are applied from left to right.\n     * Once a property is set, additional values of the same property are ignored.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaultsDeep\n     * @example\n     *\n     * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var defaults = baseRest(function(object, sources) {\n      object = Object(object);\n\n      var index = -1;\n      var length = sources.length;\n      var guard = length > 2 ? sources[2] : undefined;\n\n      if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n        length = 1;\n      }\n\n      while (++index < length) {\n        var source = sources[index];\n        var props = keysIn(source);\n        var propsIndex = -1;\n        var propsLength = props.length;\n\n        while (++propsIndex < propsLength) {\n          var key = props[propsIndex];\n          var value = object[key];\n\n          if (value === undefined ||\n              (eq(value, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n            object[key] = source[key];\n          }\n        }\n      }\n\n      return object;\n    });\n\n    /**\n     * This method is like `_.defaults` except that it recursively assigns\n     * default properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaults\n     * @example\n     *\n     * _.defaultsDeep({ 'a': { 'b': 2 } }, { 'a': { 'b': 1, 'c': 3 } });\n     * // => { 'a': { 'b': 2, 'c': 3 } }\n     */\n    var defaultsDeep = baseRest(function(args) {\n      args.push(undefined, customDefaultsMerge);\n      return apply(mergeWith, undefined, args);\n    });\n\n    /**\n     * This method is like `_.find` except that it returns the key of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findKey(users, function(o) { return o.age < 40; });\n     * // => 'barney' (iteration order is not guaranteed)\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findKey(users, { 'age': 1, 'active': true });\n     * // => 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findKey(users, 'active');\n     * // => 'barney'\n     */\n    function findKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwn);\n    }\n\n    /**\n     * This method is like `_.findKey` except that it iterates over elements of\n     * a collection in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findLastKey(users, function(o) { return o.age < 40; });\n     * // => returns 'pebbles' assuming `_.findKey` returns 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastKey(users, { 'age': 36, 'active': true });\n     * // => 'barney'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastKey(users, 'active');\n     * // => 'pebbles'\n     */\n    function findLastKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwnRight);\n    }\n\n    /**\n     * Iterates over own and inherited enumerable string keyed properties of an\n     * object and invokes `iteratee` for each property. The iteratee is invoked\n     * with three arguments: (value, key, object). Iteratee functions may exit\n     * iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forInRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forIn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).\n     */\n    function forIn(object, iteratee) {\n      return object == null\n        ? object\n        : baseFor(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * This method is like `_.forIn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forInRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'.\n     */\n    function forInRight(object, iteratee) {\n      return object == null\n        ? object\n        : baseForRight(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * Iterates over own enumerable string keyed properties of an object and\n     * invokes `iteratee` for each property. The iteratee is invoked with three\n     * arguments: (value, key, object). Iteratee functions may exit iteration\n     * early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwnRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forOwn(object, iteratee) {\n      return object && baseForOwn(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forOwn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwnRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'.\n     */\n    function forOwnRight(object, iteratee) {\n      return object && baseForOwnRight(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an array of function property names from own enumerable properties\n     * of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functionsIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functions(new Foo);\n     * // => ['a', 'b']\n     */\n    function functions(object) {\n      return object == null ? [] : baseFunctions(object, keys(object));\n    }\n\n    /**\n     * Creates an array of function property names from own and inherited\n     * enumerable properties of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functions\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functionsIn(new Foo);\n     * // => ['a', 'b', 'c']\n     */\n    function functionsIn(object) {\n      return object == null ? [] : baseFunctions(object, keysIn(object));\n    }\n\n    /**\n     * Gets the value at `path` of `object`. If the resolved value is\n     * `undefined`, the `defaultValue` is returned in its place.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.get(object, 'a[0].b.c');\n     * // => 3\n     *\n     * _.get(object, ['a', '0', 'b', 'c']);\n     * // => 3\n     *\n     * _.get(object, 'a.b.c', 'default');\n     * // => 'default'\n     */\n    function get(object, path, defaultValue) {\n      var result = object == null ? undefined : baseGet(object, path);\n      return result === undefined ? defaultValue : result;\n    }\n\n    /**\n     * Checks if `path` is a direct property of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = { 'a': { 'b': 2 } };\n     * var other = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.has(object, 'a');\n     * // => true\n     *\n     * _.has(object, 'a.b');\n     * // => true\n     *\n     * _.has(object, ['a', 'b']);\n     * // => true\n     *\n     * _.has(other, 'a');\n     * // => false\n     */\n    function has(object, path) {\n      return object != null && hasPath(object, path, baseHas);\n    }\n\n    /**\n     * Checks if `path` is a direct or inherited property of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.hasIn(object, 'a');\n     * // => true\n     *\n     * _.hasIn(object, 'a.b');\n     * // => true\n     *\n     * _.hasIn(object, ['a', 'b']);\n     * // => true\n     *\n     * _.hasIn(object, 'b');\n     * // => false\n     */\n    function hasIn(object, path) {\n      return object != null && hasPath(object, path, baseHasIn);\n    }\n\n    /**\n     * Creates an object composed of the inverted keys and values of `object`.\n     * If `object` contains duplicate values, subsequent values overwrite\n     * property assignments of previous values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invert(object);\n     * // => { '1': 'c', '2': 'b' }\n     */\n    var invert = createInverter(function(result, value, key) {\n      if (value != null &&\n          typeof value.toString != 'function') {\n        value = nativeObjectToString.call(value);\n      }\n\n      result[value] = key;\n    }, constant(identity));\n\n    /**\n     * This method is like `_.invert` except that the inverted object is generated\n     * from the results of running each element of `object` thru `iteratee`. The\n     * corresponding inverted value of each inverted key is an array of keys\n     * responsible for generating the inverted value. The iteratee is invoked\n     * with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invertBy(object);\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     *\n     * _.invertBy(object, function(value) {\n     *   return 'group' + value;\n     * });\n     * // => { 'group1': ['a', 'c'], 'group2': ['b'] }\n     */\n    var invertBy = createInverter(function(result, value, key) {\n      if (value != null &&\n          typeof value.toString != 'function') {\n        value = nativeObjectToString.call(value);\n      }\n\n      if (hasOwnProperty.call(result, value)) {\n        result[value].push(key);\n      } else {\n        result[value] = [key];\n      }\n    }, getIteratee);\n\n    /**\n     * Invokes the method at `path` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };\n     *\n     * _.invoke(object, 'a[0].b.c.slice', 1, 3);\n     * // => [2, 3]\n     */\n    var invoke = baseRest(baseInvoke);\n\n    /**\n     * Creates an array of the own enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects. See the\n     * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n     * for more details.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keys(new Foo);\n     * // => ['a', 'b'] (iteration order is not guaranteed)\n     *\n     * _.keys('hi');\n     * // => ['0', '1']\n     */\n    function keys(object) {\n      return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keysIn(new Foo);\n     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n     */\n    function keysIn(object) {\n      return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n    }\n\n    /**\n     * The opposite of `_.mapValues`; this method creates an object with the\n     * same values as `object` and keys generated by running each own enumerable\n     * string keyed property of `object` thru `iteratee`. The iteratee is invoked\n     * with three arguments: (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapValues\n     * @example\n     *\n     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   return key + value;\n     * });\n     * // => { 'a1': 1, 'b2': 2 }\n     */\n    function mapKeys(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        baseAssignValue(result, iteratee(value, key, object), value);\n      });\n      return result;\n    }\n\n    /**\n     * Creates an object with the same keys as `object` and values generated\n     * by running each own enumerable string keyed property of `object` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapKeys\n     * @example\n     *\n     * var users = {\n     *   'fred':    { 'user': 'fred',    'age': 40 },\n     *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n     * };\n     *\n     * _.mapValues(users, function(o) { return o.age; });\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.mapValues(users, 'age');\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     */\n    function mapValues(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        baseAssignValue(result, key, iteratee(value, key, object));\n      });\n      return result;\n    }\n\n    /**\n     * This method is like `_.assign` except that it recursively merges own and\n     * inherited enumerable string keyed properties of source objects into the\n     * destination object. Source properties that resolve to `undefined` are\n     * skipped if a destination value exists. Array and plain object properties\n     * are merged recursively. Other objects and value types are overridden by\n     * assignment. Source objects are applied from left to right. Subsequent\n     * sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {\n     *   'a': [{ 'b': 2 }, { 'd': 4 }]\n     * };\n     *\n     * var other = {\n     *   'a': [{ 'c': 3 }, { 'e': 5 }]\n     * };\n     *\n     * _.merge(object, other);\n     * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }\n     */\n    var merge = createAssigner(function(object, source, srcIndex) {\n      baseMerge(object, source, srcIndex);\n    });\n\n    /**\n     * This method is like `_.merge` except that it accepts `customizer` which\n     * is invoked to produce the merged values of the destination and source\n     * properties. If `customizer` returns `undefined`, merging is handled by the\n     * method instead. The `customizer` is invoked with six arguments:\n     * (objValue, srcValue, key, object, source, stack).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} customizer The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (_.isArray(objValue)) {\n     *     return objValue.concat(srcValue);\n     *   }\n     * }\n     *\n     * var object = { 'a': [1], 'b': [2] };\n     * var other = { 'a': [3], 'b': [4] };\n     *\n     * _.mergeWith(object, other, customizer);\n     * // => { 'a': [1, 3], 'b': [2, 4] }\n     */\n    var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {\n      baseMerge(object, source, srcIndex, customizer);\n    });\n\n    /**\n     * The opposite of `_.pick`; this method creates an object composed of the\n     * own and inherited enumerable property paths of `object` that are not omitted.\n     *\n     * **Note:** This method is considerably slower than `_.pick`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [paths] The property paths to omit.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omit(object, ['a', 'c']);\n     * // => { 'b': '2' }\n     */\n    var omit = flatRest(function(object, paths) {\n      var result = {};\n      if (object == null) {\n        return result;\n      }\n      var isDeep = false;\n      paths = arrayMap(paths, function(path) {\n        path = castPath(path, object);\n        isDeep || (isDeep = path.length > 1);\n        return path;\n      });\n      copyObject(object, getAllKeysIn(object), result);\n      if (isDeep) {\n        result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);\n      }\n      var length = paths.length;\n      while (length--) {\n        baseUnset(result, paths[length]);\n      }\n      return result;\n    });\n\n    /**\n     * The opposite of `_.pickBy`; this method creates an object composed of\n     * the own and inherited enumerable string keyed properties of `object` that\n     * `predicate` doesn't return truthy for. The predicate is invoked with two\n     * arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function} [predicate=_.identity] The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omitBy(object, _.isNumber);\n     * // => { 'b': '2' }\n     */\n    function omitBy(object, predicate) {\n      return pickBy(object, negate(getIteratee(predicate)));\n    }\n\n    /**\n     * Creates an object composed of the picked `object` properties.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pick(object, ['a', 'c']);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var pick = flatRest(function(object, paths) {\n      return object == null ? {} : basePick(object, paths);\n    });\n\n    /**\n     * Creates an object composed of the `object` properties `predicate` returns\n     * truthy for. The predicate is invoked with two arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function} [predicate=_.identity] The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pickBy(object, _.isNumber);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    function pickBy(object, predicate) {\n      if (object == null) {\n        return {};\n      }\n      var props = arrayMap(getAllKeysIn(object), function(prop) {\n        return [prop];\n      });\n      predicate = getIteratee(predicate);\n      return basePickBy(object, props, function(value, path) {\n        return predicate(value, path[0]);\n      });\n    }\n\n    /**\n     * This method is like `_.get` except that if the resolved value is a\n     * function it's invoked with the `this` binding of its parent object and\n     * its result is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to resolve.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n     *\n     * _.result(object, 'a[0].b.c1');\n     * // => 3\n     *\n     * _.result(object, 'a[0].b.c2');\n     * // => 4\n     *\n     * _.result(object, 'a[0].b.c3', 'default');\n     * // => 'default'\n     *\n     * _.result(object, 'a[0].b.c3', _.constant('default'));\n     * // => 'default'\n     */\n    function result(object, path, defaultValue) {\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length;\n\n      // Ensure the loop is entered when path is empty.\n      if (!length) {\n        length = 1;\n        object = undefined;\n      }\n      while (++index < length) {\n        var value = object == null ? undefined : object[toKey(path[index])];\n        if (value === undefined) {\n          index = length;\n          value = defaultValue;\n        }\n        object = isFunction(value) ? value.call(object) : value;\n      }\n      return object;\n    }\n\n    /**\n     * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,\n     * it's created. Arrays are created for missing index properties while objects\n     * are created for all other missing properties. Use `_.setWith` to customize\n     * `path` creation.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.set(object, 'a[0].b.c', 4);\n     * console.log(object.a[0].b.c);\n     * // => 4\n     *\n     * _.set(object, ['x', '0', 'y', 'z'], 5);\n     * console.log(object.x[0].y.z);\n     * // => 5\n     */\n    function set(object, path, value) {\n      return object == null ? object : baseSet(object, path, value);\n    }\n\n    /**\n     * This method is like `_.set` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.setWith(object, '[0][1]', 'a', Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function setWith(object, path, value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseSet(object, path, value, customizer);\n    }\n\n    /**\n     * Creates an array of own enumerable string keyed-value pairs for `object`\n     * which can be consumed by `_.fromPairs`. If `object` is a map or set, its\n     * entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entries\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairs(new Foo);\n     * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)\n     */\n    var toPairs = createToPairs(keys);\n\n    /**\n     * Creates an array of own and inherited enumerable string keyed-value pairs\n     * for `object` which can be consumed by `_.fromPairs`. If `object` is a map\n     * or set, its entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entriesIn\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairsIn(new Foo);\n     * // => [['a', 1], ['b', 2], ['c', 3]] (iteration order is not guaranteed)\n     */\n    var toPairsIn = createToPairs(keysIn);\n\n    /**\n     * An alternative to `_.reduce`; this method transforms `object` to a new\n     * `accumulator` object which is the result of running each of its own\n     * enumerable string keyed properties thru `iteratee`, with each invocation\n     * potentially mutating the `accumulator` object. If `accumulator` is not\n     * provided, a new object with the same `[[Prototype]]` will be used. The\n     * iteratee is invoked with four arguments: (accumulator, value, key, object).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The custom accumulator value.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * _.transform([2, 3, 4], function(result, n) {\n     *   result.push(n *= n);\n     *   return n % 2 == 0;\n     * }, []);\n     * // => [4, 9]\n     *\n     * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     */\n    function transform(object, iteratee, accumulator) {\n      var isArr = isArray(object),\n          isArrLike = isArr || isBuffer(object) || isTypedArray(object);\n\n      iteratee = getIteratee(iteratee, 4);\n      if (accumulator == null) {\n        var Ctor = object && object.constructor;\n        if (isArrLike) {\n          accumulator = isArr ? new Ctor : [];\n        }\n        else if (isObject(object)) {\n          accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};\n        }\n        else {\n          accumulator = {};\n        }\n      }\n      (isArrLike ? arrayEach : baseForOwn)(object, function(value, index, object) {\n        return iteratee(accumulator, value, index, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * Removes the property at `path` of `object`.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 7 } }] };\n     * _.unset(object, 'a[0].b.c');\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     *\n     * _.unset(object, ['a', '0', 'b', 'c']);\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     */\n    function unset(object, path) {\n      return object == null ? true : baseUnset(object, path);\n    }\n\n    /**\n     * This method is like `_.set` except that accepts `updater` to produce the\n     * value to set. Use `_.updateWith` to customize `path` creation. The `updater`\n     * is invoked with one argument: (value).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.update(object, 'a[0].b.c', function(n) { return n * n; });\n     * console.log(object.a[0].b.c);\n     * // => 9\n     *\n     * _.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });\n     * console.log(object.x[0].y.z);\n     * // => 0\n     */\n    function update(object, path, updater) {\n      return object == null ? object : baseUpdate(object, path, castFunction(updater));\n    }\n\n    /**\n     * This method is like `_.update` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.updateWith(object, '[0][1]', _.constant('a'), Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function updateWith(object, path, updater, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseUpdate(object, path, castFunction(updater), customizer);\n    }\n\n    /**\n     * Creates an array of the own enumerable string keyed property values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.values(new Foo);\n     * // => [1, 2] (iteration order is not guaranteed)\n     *\n     * _.values('hi');\n     * // => ['h', 'i']\n     */\n    function values(object) {\n      return object == null ? [] : baseValues(object, keys(object));\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable string keyed property\n     * values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.valuesIn(new Foo);\n     * // => [1, 2, 3] (iteration order is not guaranteed)\n     */\n    function valuesIn(object) {\n      return object == null ? [] : baseValues(object, keysIn(object));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Clamps `number` within the inclusive `lower` and `upper` bounds.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Number\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     * @example\n     *\n     * _.clamp(-10, -5, 5);\n     * // => -5\n     *\n     * _.clamp(10, -5, 5);\n     * // => 5\n     */\n    function clamp(number, lower, upper) {\n      if (upper === undefined) {\n        upper = lower;\n        lower = undefined;\n      }\n      if (upper !== undefined) {\n        upper = toNumber(upper);\n        upper = upper === upper ? upper : 0;\n      }\n      if (lower !== undefined) {\n        lower = toNumber(lower);\n        lower = lower === lower ? lower : 0;\n      }\n      return baseClamp(toNumber(number), lower, upper);\n    }\n\n    /**\n     * Checks if `n` is between `start` and up to, but not including, `end`. If\n     * `end` is not specified, it's set to `start` with `start` then set to `0`.\n     * If `start` is greater than `end` the params are swapped to support\n     * negative ranges.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.3.0\n     * @category Number\n     * @param {number} number The number to check.\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     * @see _.range, _.rangeRight\n     * @example\n     *\n     * _.inRange(3, 2, 4);\n     * // => true\n     *\n     * _.inRange(4, 8);\n     * // => true\n     *\n     * _.inRange(4, 2);\n     * // => false\n     *\n     * _.inRange(2, 2);\n     * // => false\n     *\n     * _.inRange(1.2, 2);\n     * // => true\n     *\n     * _.inRange(5.2, 4);\n     * // => false\n     *\n     * _.inRange(-3, -2, -6);\n     * // => true\n     */\n    function inRange(number, start, end) {\n      start = toFinite(start);\n      if (end === undefined) {\n        end = start;\n        start = 0;\n      } else {\n        end = toFinite(end);\n      }\n      number = toNumber(number);\n      return baseInRange(number, start, end);\n    }\n\n    /**\n     * Produces a random number between the inclusive `lower` and `upper` bounds.\n     * If only one argument is provided a number between `0` and the given number\n     * is returned. If `floating` is `true`, or either `lower` or `upper` are\n     * floats, a floating-point number is returned instead of an integer.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Number\n     * @param {number} [lower=0] The lower bound.\n     * @param {number} [upper=1] The upper bound.\n     * @param {boolean} [floating] Specify returning a floating-point number.\n     * @returns {number} Returns the random number.\n     * @example\n     *\n     * _.random(0, 5);\n     * // => an integer between 0 and 5\n     *\n     * _.random(5);\n     * // => also an integer between 0 and 5\n     *\n     * _.random(5, true);\n     * // => a floating-point number between 0 and 5\n     *\n     * _.random(1.2, 5.2);\n     * // => a floating-point number between 1.2 and 5.2\n     */\n    function random(lower, upper, floating) {\n      if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {\n        upper = floating = undefined;\n      }\n      if (floating === undefined) {\n        if (typeof upper == 'boolean') {\n          floating = upper;\n          upper = undefined;\n        }\n        else if (typeof lower == 'boolean') {\n          floating = lower;\n          lower = undefined;\n        }\n      }\n      if (lower === undefined && upper === undefined) {\n        lower = 0;\n        upper = 1;\n      }\n      else {\n        lower = toFinite(lower);\n        if (upper === undefined) {\n          upper = lower;\n          lower = 0;\n        } else {\n          upper = toFinite(upper);\n        }\n      }\n      if (lower > upper) {\n        var temp = lower;\n        lower = upper;\n        upper = temp;\n      }\n      if (floating || lower % 1 || upper % 1) {\n        var rand = nativeRandom();\n        return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);\n      }\n      return baseRandom(lower, upper);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the camel cased string.\n     * @example\n     *\n     * _.camelCase('Foo Bar');\n     * // => 'fooBar'\n     *\n     * _.camelCase('--foo-bar--');\n     * // => 'fooBar'\n     *\n     * _.camelCase('__FOO_BAR__');\n     * // => 'fooBar'\n     */\n    var camelCase = createCompounder(function(result, word, index) {\n      word = word.toLowerCase();\n      return result + (index ? capitalize(word) : word);\n    });\n\n    /**\n     * Converts the first character of `string` to upper case and the remaining\n     * to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to capitalize.\n     * @returns {string} Returns the capitalized string.\n     * @example\n     *\n     * _.capitalize('FRED');\n     * // => 'Fred'\n     */\n    function capitalize(string) {\n      return upperFirst(toString(string).toLowerCase());\n    }\n\n    /**\n     * Deburrs `string` by converting\n     * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n     * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)\n     * letters to basic Latin letters and removing\n     * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to deburr.\n     * @returns {string} Returns the deburred string.\n     * @example\n     *\n     * _.deburr('déjà vu');\n     * // => 'deja vu'\n     */\n    function deburr(string) {\n      string = toString(string);\n      return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');\n    }\n\n    /**\n     * Checks if `string` ends with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=string.length] The position to search up to.\n     * @returns {boolean} Returns `true` if `string` ends with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.endsWith('abc', 'c');\n     * // => true\n     *\n     * _.endsWith('abc', 'b');\n     * // => false\n     *\n     * _.endsWith('abc', 'b', 2);\n     * // => true\n     */\n    function endsWith(string, target, position) {\n      string = toString(string);\n      target = baseToString(target);\n\n      var length = string.length;\n      position = position === undefined\n        ? length\n        : baseClamp(toInteger(position), 0, length);\n\n      var end = position;\n      position -= target.length;\n      return position >= 0 && string.slice(position, end) == target;\n    }\n\n    /**\n     * Converts the characters \"&\", \"<\", \">\", '\"', and \"'\" in `string` to their\n     * corresponding HTML entities.\n     *\n     * **Note:** No other characters are escaped. To escape additional\n     * characters use a third-party library like [_he_](https://mths.be/he).\n     *\n     * Though the \">\" character is escaped for symmetry, characters like\n     * \">\" and \"/\" don't need escaping in HTML and have no special meaning\n     * unless they're part of a tag or unquoted attribute value. See\n     * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n     * (under \"semi-related fun fact\") for more details.\n     *\n     * When working with HTML you should always\n     * [quote attribute values](http://wonko.com/post/html-escaping) to reduce\n     * XSS vectors.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escape('fred, barney, & pebbles');\n     * // => 'fred, barney, &amp; pebbles'\n     */\n    function escape(string) {\n      string = toString(string);\n      return (string && reHasUnescapedHtml.test(string))\n        ? string.replace(reUnescapedHtml, escapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Escapes the `RegExp` special characters \"^\", \"$\", \"\\\", \".\", \"*\", \"+\",\n     * \"?\", \"(\", \")\", \"[\", \"]\", \"{\", \"}\", and \"|\" in `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escapeRegExp('[lodash](https://lodash.com/)');\n     * // => '\\[lodash\\]\\(https://lodash\\.com/\\)'\n     */\n    function escapeRegExp(string) {\n      string = toString(string);\n      return (string && reHasRegExpChar.test(string))\n        ? string.replace(reRegExpChar, '\\\\$&')\n        : string;\n    }\n\n    /**\n     * Converts `string` to\n     * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the kebab cased string.\n     * @example\n     *\n     * _.kebabCase('Foo Bar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('fooBar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('__FOO_BAR__');\n     * // => 'foo-bar'\n     */\n    var kebabCase = createCompounder(function(result, word, index) {\n      return result + (index ? '-' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts `string`, as space separated words, to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.lowerCase('--Foo-Bar--');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('fooBar');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('__FOO_BAR__');\n     * // => 'foo bar'\n     */\n    var lowerCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts the first character of `string` to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.lowerFirst('Fred');\n     * // => 'fred'\n     *\n     * _.lowerFirst('FRED');\n     * // => 'fRED'\n     */\n    var lowerFirst = createCaseFirst('toLowerCase');\n\n    /**\n     * Pads `string` on the left and right sides if it's shorter than `length`.\n     * Padding characters are truncated if they can't be evenly divided by `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.pad('abc', 8);\n     * // => '  abc   '\n     *\n     * _.pad('abc', 8, '_-');\n     * // => '_-abc_-_'\n     *\n     * _.pad('abc', 3);\n     * // => 'abc'\n     */\n    function pad(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      if (!length || strLength >= length) {\n        return string;\n      }\n      var mid = (length - strLength) / 2;\n      return (\n        createPadding(nativeFloor(mid), chars) +\n        string +\n        createPadding(nativeCeil(mid), chars)\n      );\n    }\n\n    /**\n     * Pads `string` on the right side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padEnd('abc', 6);\n     * // => 'abc   '\n     *\n     * _.padEnd('abc', 6, '_-');\n     * // => 'abc_-_'\n     *\n     * _.padEnd('abc', 3);\n     * // => 'abc'\n     */\n    function padEnd(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (string + createPadding(length - strLength, chars))\n        : string;\n    }\n\n    /**\n     * Pads `string` on the left side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padStart('abc', 6);\n     * // => '   abc'\n     *\n     * _.padStart('abc', 6, '_-');\n     * // => '_-_abc'\n     *\n     * _.padStart('abc', 3);\n     * // => 'abc'\n     */\n    function padStart(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (createPadding(length - strLength, chars) + string)\n        : string;\n    }\n\n    /**\n     * Converts `string` to an integer of the specified radix. If `radix` is\n     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a\n     * hexadecimal, in which case a `radix` of `16` is used.\n     *\n     * **Note:** This method aligns with the\n     * [ES5 implementation](https://es5.github.io/#x15.1.2.2) of `parseInt`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category String\n     * @param {string} string The string to convert.\n     * @param {number} [radix=10] The radix to interpret `value` by.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.parseInt('08');\n     * // => 8\n     *\n     * _.map(['6', '08', '10'], _.parseInt);\n     * // => [6, 8, 10]\n     */\n    function parseInt(string, radix, guard) {\n      if (guard || radix == null) {\n        radix = 0;\n      } else if (radix) {\n        radix = +radix;\n      }\n      return nativeParseInt(toString(string).replace(reTrimStart, ''), radix || 0);\n    }\n\n    /**\n     * Repeats the given string `n` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to repeat.\n     * @param {number} [n=1] The number of times to repeat the string.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the repeated string.\n     * @example\n     *\n     * _.repeat('*', 3);\n     * // => '***'\n     *\n     * _.repeat('abc', 2);\n     * // => 'abcabc'\n     *\n     * _.repeat('abc', 0);\n     * // => ''\n     */\n    function repeat(string, n, guard) {\n      if ((guard ? isIterateeCall(string, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = toInteger(n);\n      }\n      return baseRepeat(toString(string), n);\n    }\n\n    /**\n     * Replaces matches for `pattern` in `string` with `replacement`.\n     *\n     * **Note:** This method is based on\n     * [`String#replace`](https://mdn.io/String/replace).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to modify.\n     * @param {RegExp|string} pattern The pattern to replace.\n     * @param {Function|string} replacement The match replacement.\n     * @returns {string} Returns the modified string.\n     * @example\n     *\n     * _.replace('Hi Fred', 'Fred', 'Barney');\n     * // => 'Hi Barney'\n     */\n    function replace() {\n      var args = arguments,\n          string = toString(args[0]);\n\n      return args.length < 3 ? string : string.replace(args[1], args[2]);\n    }\n\n    /**\n     * Converts `string` to\n     * [snake case](https://en.wikipedia.org/wiki/Snake_case).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the snake cased string.\n     * @example\n     *\n     * _.snakeCase('Foo Bar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('fooBar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('--FOO-BAR--');\n     * // => 'foo_bar'\n     */\n    var snakeCase = createCompounder(function(result, word, index) {\n      return result + (index ? '_' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Splits `string` by `separator`.\n     *\n     * **Note:** This method is based on\n     * [`String#split`](https://mdn.io/String/split).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to split.\n     * @param {RegExp|string} separator The separator pattern to split by.\n     * @param {number} [limit] The length to truncate results to.\n     * @returns {Array} Returns the string segments.\n     * @example\n     *\n     * _.split('a-b-c', '-', 2);\n     * // => ['a', 'b']\n     */\n    function split(string, separator, limit) {\n      if (limit && typeof limit != 'number' && isIterateeCall(string, separator, limit)) {\n        separator = limit = undefined;\n      }\n      limit = limit === undefined ? MAX_ARRAY_LENGTH : limit >>> 0;\n      if (!limit) {\n        return [];\n      }\n      string = toString(string);\n      if (string && (\n            typeof separator == 'string' ||\n            (separator != null && !isRegExp(separator))\n          )) {\n        separator = baseToString(separator);\n        if (!separator && hasUnicode(string)) {\n          return castSlice(stringToArray(string), 0, limit);\n        }\n      }\n      return string.split(separator, limit);\n    }\n\n    /**\n     * Converts `string` to\n     * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.1.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the start cased string.\n     * @example\n     *\n     * _.startCase('--foo-bar--');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('fooBar');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('__FOO_BAR__');\n     * // => 'FOO BAR'\n     */\n    var startCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + upperFirst(word);\n    });\n\n    /**\n     * Checks if `string` starts with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=0] The position to search from.\n     * @returns {boolean} Returns `true` if `string` starts with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.startsWith('abc', 'a');\n     * // => true\n     *\n     * _.startsWith('abc', 'b');\n     * // => false\n     *\n     * _.startsWith('abc', 'b', 1);\n     * // => true\n     */\n    function startsWith(string, target, position) {\n      string = toString(string);\n      position = position == null\n        ? 0\n        : baseClamp(toInteger(position), 0, string.length);\n\n      target = baseToString(target);\n      return string.slice(position, position + target.length) == target;\n    }\n\n    /**\n     * Creates a compiled template function that can interpolate data properties\n     * in \"interpolate\" delimiters, HTML-escape interpolated data properties in\n     * \"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data\n     * properties may be accessed as free variables in the template. If a setting\n     * object is given, it takes precedence over `_.templateSettings` values.\n     *\n     * **Note:** In the development build `_.template` utilizes\n     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\n     * for easier debugging.\n     *\n     * For more information on precompiling templates see\n     * [lodash's custom builds documentation](https://lodash.com/custom-builds).\n     *\n     * For more information on Chrome extension sandboxes see\n     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The template string.\n     * @param {Object} [options={}] The options object.\n     * @param {RegExp} [options.escape=_.templateSettings.escape]\n     *  The HTML \"escape\" delimiter.\n     * @param {RegExp} [options.evaluate=_.templateSettings.evaluate]\n     *  The \"evaluate\" delimiter.\n     * @param {Object} [options.imports=_.templateSettings.imports]\n     *  An object to import into the template as free variables.\n     * @param {RegExp} [options.interpolate=_.templateSettings.interpolate]\n     *  The \"interpolate\" delimiter.\n     * @param {string} [options.sourceURL='lodash.templateSources[n]']\n     *  The sourceURL of the compiled template.\n     * @param {string} [options.variable='obj']\n     *  The data object variable name.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the compiled template function.\n     * @example\n     *\n     * // Use the \"interpolate\" delimiter to create a compiled template.\n     * var compiled = _.template('hello <%= user %>!');\n     * compiled({ 'user': 'fred' });\n     * // => 'hello fred!'\n     *\n     * // Use the HTML \"escape\" delimiter to escape data property values.\n     * var compiled = _.template('<b><%- value %></b>');\n     * compiled({ 'value': '<script>' });\n     * // => '<b>&lt;script&gt;</b>'\n     *\n     * // Use the \"evaluate\" delimiter to execute JavaScript and generate HTML.\n     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the internal `print` function in \"evaluate\" delimiters.\n     * var compiled = _.template('<% print(\"hello \" + user); %>!');\n     * compiled({ 'user': 'barney' });\n     * // => 'hello barney!'\n     *\n     * // Use the ES template literal delimiter as an \"interpolate\" delimiter.\n     * // Disable support by replacing the \"interpolate\" delimiter.\n     * var compiled = _.template('hello ${ user }!');\n     * compiled({ 'user': 'pebbles' });\n     * // => 'hello pebbles!'\n     *\n     * // Use backslashes to treat delimiters as plain text.\n     * var compiled = _.template('<%= \"\\\\<%- value %\\\\>\" %>');\n     * compiled({ 'value': 'ignored' });\n     * // => '<%- value %>'\n     *\n     * // Use the `imports` option to import `jQuery` as `jq`.\n     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';\n     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the `sourceURL` option to specify a custom sourceURL for the template.\n     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });\n     * compiled(data);\n     * // => Find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector.\n     *\n     * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.\n     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });\n     * compiled.source;\n     * // => function(data) {\n     * //   var __t, __p = '';\n     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';\n     * //   return __p;\n     * // }\n     *\n     * // Use custom template delimiters.\n     * _.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\n     * var compiled = _.template('hello {{ user }}!');\n     * compiled({ 'user': 'mustache' });\n     * // => 'hello mustache!'\n     *\n     * // Use the `source` property to inline compiled templates for meaningful\n     * // line numbers in error messages and stack traces.\n     * fs.writeFileSync(path.join(process.cwd(), 'jst.js'), '\\\n     *   var JST = {\\\n     *     \"main\": ' + _.template(mainText).source + '\\\n     *   };\\\n     * ');\n     */\n    function template(string, options, guard) {\n      // Based on John Resig's `tmpl` implementation\n      // (http://ejohn.org/blog/javascript-micro-templating/)\n      // and Laura Doktorova's doT.js (https://github.com/olado/doT).\n      var settings = lodash.templateSettings;\n\n      if (guard && isIterateeCall(string, options, guard)) {\n        options = undefined;\n      }\n      string = toString(string);\n      options = assignInWith({}, options, settings, customDefaultsAssignIn);\n\n      var imports = assignInWith({}, options.imports, settings.imports, customDefaultsAssignIn),\n          importsKeys = keys(imports),\n          importsValues = baseValues(imports, importsKeys);\n\n      var isEscaping,\n          isEvaluating,\n          index = 0,\n          interpolate = options.interpolate || reNoMatch,\n          source = \"__p += '\";\n\n      // Compile the regexp to match each delimiter.\n      var reDelimiters = RegExp(\n        (options.escape || reNoMatch).source + '|' +\n        interpolate.source + '|' +\n        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\n        (options.evaluate || reNoMatch).source + '|$'\n      , 'g');\n\n      // Use a sourceURL for easier debugging.\n      var sourceURL = '//# sourceURL=' +\n        ('sourceURL' in options\n          ? options.sourceURL\n          : ('lodash.templateSources[' + (++templateCounter) + ']')\n        ) + '\\n';\n\n      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n        interpolateValue || (interpolateValue = esTemplateValue);\n\n        // Escape characters that can't be included in string literals.\n        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\n        // Replace delimiters with snippets.\n        if (escapeValue) {\n          isEscaping = true;\n          source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n        }\n        if (evaluateValue) {\n          isEvaluating = true;\n          source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n        }\n        if (interpolateValue) {\n          source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n        }\n        index = offset + match.length;\n\n        // The JS engine embedded in Adobe products needs `match` returned in\n        // order to produce the correct `offset` value.\n        return match;\n      });\n\n      source += \"';\\n\";\n\n      // If `variable` is not specified wrap a with-statement around the generated\n      // code to add the data object to the top of the scope chain.\n      var variable = options.variable;\n      if (!variable) {\n        source = 'with (obj) {\\n' + source + '\\n}\\n';\n      }\n      // Cleanup code by stripping empty strings.\n      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n        .replace(reEmptyStringMiddle, '$1')\n        .replace(reEmptyStringTrailing, '$1;');\n\n      // Frame code as the function body.\n      source = 'function(' + (variable || 'obj') + ') {\\n' +\n        (variable\n          ? ''\n          : 'obj || (obj = {});\\n'\n        ) +\n        \"var __t, __p = ''\" +\n        (isEscaping\n           ? ', __e = _.escape'\n           : ''\n        ) +\n        (isEvaluating\n          ? ', __j = Array.prototype.join;\\n' +\n            \"function print() { __p += __j.call(arguments, '') }\\n\"\n          : ';\\n'\n        ) +\n        source +\n        'return __p\\n}';\n\n      var result = attempt(function() {\n        return Function(importsKeys, sourceURL + 'return ' + source)\n          .apply(undefined, importsValues);\n      });\n\n      // Provide the compiled function's source by its `toString` method or\n      // the `source` property as a convenience for inlining compiled templates.\n      result.source = source;\n      if (isError(result)) {\n        throw result;\n      }\n      return result;\n    }\n\n    /**\n     * Converts `string`, as a whole, to lower case just like\n     * [String#toLowerCase](https://mdn.io/toLowerCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.toLower('--Foo-Bar--');\n     * // => '--foo-bar--'\n     *\n     * _.toLower('fooBar');\n     * // => 'foobar'\n     *\n     * _.toLower('__FOO_BAR__');\n     * // => '__foo_bar__'\n     */\n    function toLower(value) {\n      return toString(value).toLowerCase();\n    }\n\n    /**\n     * Converts `string`, as a whole, to upper case just like\n     * [String#toUpperCase](https://mdn.io/toUpperCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.toUpper('--foo-bar--');\n     * // => '--FOO-BAR--'\n     *\n     * _.toUpper('fooBar');\n     * // => 'FOOBAR'\n     *\n     * _.toUpper('__foo_bar__');\n     * // => '__FOO_BAR__'\n     */\n    function toUpper(value) {\n      return toString(value).toUpperCase();\n    }\n\n    /**\n     * Removes leading and trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trim('  abc  ');\n     * // => 'abc'\n     *\n     * _.trim('-_-abc-_-', '_-');\n     * // => 'abc'\n     *\n     * _.map(['  foo  ', '  bar  '], _.trim);\n     * // => ['foo', 'bar']\n     */\n    function trim(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrim, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          chrSymbols = stringToArray(chars),\n          start = charsStartIndex(strSymbols, chrSymbols),\n          end = charsEndIndex(strSymbols, chrSymbols) + 1;\n\n      return castSlice(strSymbols, start, end).join('');\n    }\n\n    /**\n     * Removes trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimEnd('  abc  ');\n     * // => '  abc'\n     *\n     * _.trimEnd('-_-abc-_-', '_-');\n     * // => '-_-abc'\n     */\n    function trimEnd(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrimEnd, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;\n\n      return castSlice(strSymbols, 0, end).join('');\n    }\n\n    /**\n     * Removes leading whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimStart('  abc  ');\n     * // => 'abc  '\n     *\n     * _.trimStart('-_-abc-_-', '_-');\n     * // => 'abc-_-'\n     */\n    function trimStart(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrimStart, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          start = charsStartIndex(strSymbols, stringToArray(chars));\n\n      return castSlice(strSymbols, start).join('');\n    }\n\n    /**\n     * Truncates `string` if it's longer than the given maximum string length.\n     * The last characters of the truncated string are replaced with the omission\n     * string which defaults to \"...\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to truncate.\n     * @param {Object} [options={}] The options object.\n     * @param {number} [options.length=30] The maximum string length.\n     * @param {string} [options.omission='...'] The string to indicate text is omitted.\n     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.\n     * @returns {string} Returns the truncated string.\n     * @example\n     *\n     * _.truncate('hi-diddly-ho there, neighborino');\n     * // => 'hi-diddly-ho there, neighbo...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': ' '\n     * });\n     * // => 'hi-diddly-ho there,...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': /,? +/\n     * });\n     * // => 'hi-diddly-ho there...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'omission': ' [...]'\n     * });\n     * // => 'hi-diddly-ho there, neig [...]'\n     */\n    function truncate(string, options) {\n      var length = DEFAULT_TRUNC_LENGTH,\n          omission = DEFAULT_TRUNC_OMISSION;\n\n      if (isObject(options)) {\n        var separator = 'separator' in options ? options.separator : separator;\n        length = 'length' in options ? toInteger(options.length) : length;\n        omission = 'omission' in options ? baseToString(options.omission) : omission;\n      }\n      string = toString(string);\n\n      var strLength = string.length;\n      if (hasUnicode(string)) {\n        var strSymbols = stringToArray(string);\n        strLength = strSymbols.length;\n      }\n      if (length >= strLength) {\n        return string;\n      }\n      var end = length - stringSize(omission);\n      if (end < 1) {\n        return omission;\n      }\n      var result = strSymbols\n        ? castSlice(strSymbols, 0, end).join('')\n        : string.slice(0, end);\n\n      if (separator === undefined) {\n        return result + omission;\n      }\n      if (strSymbols) {\n        end += (result.length - end);\n      }\n      if (isRegExp(separator)) {\n        if (string.slice(end).search(separator)) {\n          var match,\n              substring = result;\n\n          if (!separator.global) {\n            separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');\n          }\n          separator.lastIndex = 0;\n          while ((match = separator.exec(substring))) {\n            var newEnd = match.index;\n          }\n          result = result.slice(0, newEnd === undefined ? end : newEnd);\n        }\n      } else if (string.indexOf(baseToString(separator), end) != end) {\n        var index = result.lastIndexOf(separator);\n        if (index > -1) {\n          result = result.slice(0, index);\n        }\n      }\n      return result + omission;\n    }\n\n    /**\n     * The inverse of `_.escape`; this method converts the HTML entities\n     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to\n     * their corresponding characters.\n     *\n     * **Note:** No other HTML entities are unescaped. To unescape additional\n     * HTML entities use a third-party library like [_he_](https://mths.be/he).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.6.0\n     * @category String\n     * @param {string} [string=''] The string to unescape.\n     * @returns {string} Returns the unescaped string.\n     * @example\n     *\n     * _.unescape('fred, barney, &amp; pebbles');\n     * // => 'fred, barney, & pebbles'\n     */\n    function unescape(string) {\n      string = toString(string);\n      return (string && reHasEscapedHtml.test(string))\n        ? string.replace(reEscapedHtml, unescapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Converts `string`, as space separated words, to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.upperCase('--foo-bar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('fooBar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('__foo_bar__');\n     * // => 'FOO BAR'\n     */\n    var upperCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toUpperCase();\n    });\n\n    /**\n     * Converts the first character of `string` to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.upperFirst('fred');\n     * // => 'Fred'\n     *\n     * _.upperFirst('FRED');\n     * // => 'FRED'\n     */\n    var upperFirst = createCaseFirst('toUpperCase');\n\n    /**\n     * Splits `string` into an array of its words.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {RegExp|string} [pattern] The pattern to match words.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the words of `string`.\n     * @example\n     *\n     * _.words('fred, barney, & pebbles');\n     * // => ['fred', 'barney', 'pebbles']\n     *\n     * _.words('fred, barney, & pebbles', /[^, ]+/g);\n     * // => ['fred', 'barney', '&', 'pebbles']\n     */\n    function words(string, pattern, guard) {\n      string = toString(string);\n      pattern = guard ? undefined : pattern;\n\n      if (pattern === undefined) {\n        return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);\n      }\n      return string.match(pattern) || [];\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Attempts to invoke `func`, returning either the result or the caught error\n     * object. Any additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Function} func The function to attempt.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {*} Returns the `func` result or error object.\n     * @example\n     *\n     * // Avoid throwing errors for invalid selectors.\n     * var elements = _.attempt(function(selector) {\n     *   return document.querySelectorAll(selector);\n     * }, '>_>');\n     *\n     * if (_.isError(elements)) {\n     *   elements = [];\n     * }\n     */\n    var attempt = baseRest(function(func, args) {\n      try {\n        return apply(func, undefined, args);\n      } catch (e) {\n        return isError(e) ? e : new Error(e);\n      }\n    });\n\n    /**\n     * Binds methods of an object to the object itself, overwriting the existing\n     * method.\n     *\n     * **Note:** This method doesn't set the \"length\" property of bound functions.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Object} object The object to bind and assign the bound methods to.\n     * @param {...(string|string[])} methodNames The object method names to bind.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var view = {\n     *   'label': 'docs',\n     *   'click': function() {\n     *     console.log('clicked ' + this.label);\n     *   }\n     * };\n     *\n     * _.bindAll(view, ['click']);\n     * jQuery(element).on('click', view.click);\n     * // => Logs 'clicked docs' when clicked.\n     */\n    var bindAll = flatRest(function(object, methodNames) {\n      arrayEach(methodNames, function(key) {\n        key = toKey(key);\n        baseAssignValue(object, key, bind(object[key], object));\n      });\n      return object;\n    });\n\n    /**\n     * Creates a function that iterates over `pairs` and invokes the corresponding\n     * function of the first predicate to return truthy. The predicate-function\n     * pairs are invoked with the `this` binding and arguments of the created\n     * function.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Array} pairs The predicate-function pairs.\n     * @returns {Function} Returns the new composite function.\n     * @example\n     *\n     * var func = _.cond([\n     *   [_.matches({ 'a': 1 }),           _.constant('matches A')],\n     *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],\n     *   [_.stubTrue,                      _.constant('no match')]\n     * ]);\n     *\n     * func({ 'a': 1, 'b': 2 });\n     * // => 'matches A'\n     *\n     * func({ 'a': 0, 'b': 1 });\n     * // => 'matches B'\n     *\n     * func({ 'a': '1', 'b': '2' });\n     * // => 'no match'\n     */\n    function cond(pairs) {\n      var length = pairs == null ? 0 : pairs.length,\n          toIteratee = getIteratee();\n\n      pairs = !length ? [] : arrayMap(pairs, function(pair) {\n        if (typeof pair[1] != 'function') {\n          throw new TypeError(FUNC_ERROR_TEXT);\n        }\n        return [toIteratee(pair[0]), pair[1]];\n      });\n\n      return baseRest(function(args) {\n        var index = -1;\n        while (++index < length) {\n          var pair = pairs[index];\n          if (apply(pair[0], this, args)) {\n            return apply(pair[1], this, args);\n          }\n        }\n      });\n    }\n\n    /**\n     * Creates a function that invokes the predicate properties of `source` with\n     * the corresponding property values of a given object, returning `true` if\n     * all predicates return truthy, else `false`.\n     *\n     * **Note:** The created function is equivalent to `_.conformsTo` with\n     * `source` partially applied.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 2, 'b': 1 },\n     *   { 'a': 1, 'b': 2 }\n     * ];\n     *\n     * _.filter(objects, _.conforms({ 'b': function(n) { return n > 1; } }));\n     * // => [{ 'a': 1, 'b': 2 }]\n     */\n    function conforms(source) {\n      return baseConforms(baseClone(source, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that returns `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {*} value The value to return from the new function.\n     * @returns {Function} Returns the new constant function.\n     * @example\n     *\n     * var objects = _.times(2, _.constant({ 'a': 1 }));\n     *\n     * console.log(objects);\n     * // => [{ 'a': 1 }, { 'a': 1 }]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => true\n     */\n    function constant(value) {\n      return function() {\n        return value;\n      };\n    }\n\n    /**\n     * Checks `value` to determine whether a default value should be returned in\n     * its place. The `defaultValue` is returned if `value` is `NaN`, `null`,\n     * or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.14.0\n     * @category Util\n     * @param {*} value The value to check.\n     * @param {*} defaultValue The default value.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * _.defaultTo(1, 10);\n     * // => 1\n     *\n     * _.defaultTo(undefined, 10);\n     * // => 10\n     */\n    function defaultTo(value, defaultValue) {\n      return (value == null || value !== value) ? defaultValue : value;\n    }\n\n    /**\n     * Creates a function that returns the result of invoking the given functions\n     * with the `this` binding of the created function, where each successive\n     * invocation is supplied the return value of the previous.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flowRight\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flow([_.add, square]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flow = createFlow();\n\n    /**\n     * This method is like `_.flow` except that it creates a function that\n     * invokes the given functions from right to left.\n     *\n     * @static\n     * @since 3.0.0\n     * @memberOf _\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flow\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flowRight([square, _.add]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flowRight = createFlow(true);\n\n    /**\n     * This method returns the first argument it receives.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {*} value Any value.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     *\n     * console.log(_.identity(object) === object);\n     * // => true\n     */\n    function identity(value) {\n      return value;\n    }\n\n    /**\n     * Creates a function that invokes `func` with the arguments of the created\n     * function. If `func` is a property name, the created function returns the\n     * property value for a given element. If `func` is an array or object, the\n     * created function returns `true` for elements that contain the equivalent\n     * source properties, otherwise it returns `false`.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Util\n     * @param {*} [func=_.identity] The value to convert to a callback.\n     * @returns {Function} Returns the callback.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));\n     * // => [{ 'user': 'barney', 'age': 36, 'active': true }]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, _.iteratee(['user', 'fred']));\n     * // => [{ 'user': 'fred', 'age': 40 }]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, _.iteratee('user'));\n     * // => ['barney', 'fred']\n     *\n     * // Create custom iteratee shorthands.\n     * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {\n     *   return !_.isRegExp(func) ? iteratee(func) : function(string) {\n     *     return func.test(string);\n     *   };\n     * });\n     *\n     * _.filter(['abc', 'def'], /ef/);\n     * // => ['def']\n     */\n    function iteratee(func) {\n      return baseIteratee(typeof func == 'function' ? func : baseClone(func, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between a given\n     * object and `source`, returning `true` if the given object has equivalent\n     * property values, else `false`.\n     *\n     * **Note:** The created function is equivalent to `_.isMatch` with `source`\n     * partially applied.\n     *\n     * Partial comparisons will match empty array and empty object `source`\n     * values against any array or object value, respectively. See `_.isEqual`\n     * for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 1, 'b': 2, 'c': 3 },\n     *   { 'a': 4, 'b': 5, 'c': 6 }\n     * ];\n     *\n     * _.filter(objects, _.matches({ 'a': 4, 'c': 6 }));\n     * // => [{ 'a': 4, 'b': 5, 'c': 6 }]\n     */\n    function matches(source) {\n      return baseMatches(baseClone(source, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between the\n     * value at `path` of a given object to `srcValue`, returning `true` if the\n     * object value is equivalent, else `false`.\n     *\n     * **Note:** Partial comparisons will match empty array and empty object\n     * `srcValue` values against any array or object value, respectively. See\n     * `_.isEqual` for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 1, 'b': 2, 'c': 3 },\n     *   { 'a': 4, 'b': 5, 'c': 6 }\n     * ];\n     *\n     * _.find(objects, _.matchesProperty('a', 4));\n     * // => { 'a': 4, 'b': 5, 'c': 6 }\n     */\n    function matchesProperty(path, srcValue) {\n      return baseMatchesProperty(path, baseClone(srcValue, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that invokes the method at `path` of a given object.\n     * Any additional arguments are provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': _.constant(2) } },\n     *   { 'a': { 'b': _.constant(1) } }\n     * ];\n     *\n     * _.map(objects, _.method('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(objects, _.method(['a', 'b']));\n     * // => [2, 1]\n     */\n    var method = baseRest(function(path, args) {\n      return function(object) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * The opposite of `_.method`; this method creates a function that invokes\n     * the method at a given path of `object`. Any additional arguments are\n     * provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var array = _.times(3, _.constant),\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.methodOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));\n     * // => [2, 0]\n     */\n    var methodOf = baseRest(function(object, args) {\n      return function(path) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * Adds all own enumerable string keyed function properties of a source\n     * object to the destination object. If `object` is a function, then methods\n     * are added to its prototype as well.\n     *\n     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\n     * avoid conflicts caused by modifying the original.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Function|Object} [object=lodash] The destination object.\n     * @param {Object} source The object of functions to add.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.chain=true] Specify whether mixins are chainable.\n     * @returns {Function|Object} Returns `object`.\n     * @example\n     *\n     * function vowels(string) {\n     *   return _.filter(string, function(v) {\n     *     return /[aeiou]/i.test(v);\n     *   });\n     * }\n     *\n     * _.mixin({ 'vowels': vowels });\n     * _.vowels('fred');\n     * // => ['e']\n     *\n     * _('fred').vowels().value();\n     * // => ['e']\n     *\n     * _.mixin({ 'vowels': vowels }, { 'chain': false });\n     * _('fred').vowels();\n     * // => ['e']\n     */\n    function mixin(object, source, options) {\n      var props = keys(source),\n          methodNames = baseFunctions(source, props);\n\n      if (options == null &&\n          !(isObject(source) && (methodNames.length || !props.length))) {\n        options = source;\n        source = object;\n        object = this;\n        methodNames = baseFunctions(source, keys(source));\n      }\n      var chain = !(isObject(options) && 'chain' in options) || !!options.chain,\n          isFunc = isFunction(object);\n\n      arrayEach(methodNames, function(methodName) {\n        var func = source[methodName];\n        object[methodName] = func;\n        if (isFunc) {\n          object.prototype[methodName] = function() {\n            var chainAll = this.__chain__;\n            if (chain || chainAll) {\n              var result = object(this.__wrapped__),\n                  actions = result.__actions__ = copyArray(this.__actions__);\n\n              actions.push({ 'func': func, 'args': arguments, 'thisArg': object });\n              result.__chain__ = chainAll;\n              return result;\n            }\n            return func.apply(object, arrayPush([this.value()], arguments));\n          };\n        }\n      });\n\n      return object;\n    }\n\n    /**\n     * Reverts the `_` variable to its previous value and returns a reference to\n     * the `lodash` function.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @returns {Function} Returns the `lodash` function.\n     * @example\n     *\n     * var lodash = _.noConflict();\n     */\n    function noConflict() {\n      if (root._ === this) {\n        root._ = oldDash;\n      }\n      return this;\n    }\n\n    /**\n     * This method returns `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Util\n     * @example\n     *\n     * _.times(2, _.noop);\n     * // => [undefined, undefined]\n     */\n    function noop() {\n      // No operation performed.\n    }\n\n    /**\n     * Creates a function that gets the argument at index `n`. If `n` is negative,\n     * the nth argument from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [n=0] The index of the argument to return.\n     * @returns {Function} Returns the new pass-thru function.\n     * @example\n     *\n     * var func = _.nthArg(1);\n     * func('a', 'b', 'c', 'd');\n     * // => 'b'\n     *\n     * var func = _.nthArg(-2);\n     * func('a', 'b', 'c', 'd');\n     * // => 'c'\n     */\n    function nthArg(n) {\n      n = toInteger(n);\n      return baseRest(function(args) {\n        return baseNth(args, n);\n      });\n    }\n\n    /**\n     * Creates a function that invokes `iteratees` with the arguments it receives\n     * and returns their results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n     *  The iteratees to invoke.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.over([Math.max, Math.min]);\n     *\n     * func(1, 2, 3, 4);\n     * // => [4, 1]\n     */\n    var over = createOver(arrayMap);\n\n    /**\n     * Creates a function that checks if **all** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [predicates=[_.identity]]\n     *  The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overEvery([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => false\n     *\n     * func(NaN);\n     * // => false\n     */\n    var overEvery = createOver(arrayEvery);\n\n    /**\n     * Creates a function that checks if **any** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [predicates=[_.identity]]\n     *  The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overSome([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => true\n     *\n     * func(NaN);\n     * // => false\n     */\n    var overSome = createOver(arraySome);\n\n    /**\n     * Creates a function that returns the value at `path` of a given object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': 2 } },\n     *   { 'a': { 'b': 1 } }\n     * ];\n     *\n     * _.map(objects, _.property('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n     * // => [1, 2]\n     */\n    function property(path) {\n      return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n    }\n\n    /**\n     * The opposite of `_.property`; this method creates a function that returns\n     * the value at a given path of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var array = [0, 1, 2],\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));\n     * // => [2, 0]\n     */\n    function propertyOf(object) {\n      return function(path) {\n        return object == null ? undefined : baseGet(object, path);\n      };\n    }\n\n    /**\n     * Creates an array of numbers (positive and/or negative) progressing from\n     * `start` up to, but not including, `end`. A step of `-1` is used if a negative\n     * `start` is specified without an `end` or `step`. If `end` is not specified,\n     * it's set to `start` with `start` then set to `0`.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.rangeRight\n     * @example\n     *\n     * _.range(4);\n     * // => [0, 1, 2, 3]\n     *\n     * _.range(-4);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 5);\n     * // => [1, 2, 3, 4]\n     *\n     * _.range(0, 20, 5);\n     * // => [0, 5, 10, 15]\n     *\n     * _.range(0, -4, -1);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.range(0);\n     * // => []\n     */\n    var range = createRange();\n\n    /**\n     * This method is like `_.range` except that it populates values in\n     * descending order.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.range\n     * @example\n     *\n     * _.rangeRight(4);\n     * // => [3, 2, 1, 0]\n     *\n     * _.rangeRight(-4);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 5);\n     * // => [4, 3, 2, 1]\n     *\n     * _.rangeRight(0, 20, 5);\n     * // => [15, 10, 5, 0]\n     *\n     * _.rangeRight(0, -4, -1);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.rangeRight(0);\n     * // => []\n     */\n    var rangeRight = createRange(true);\n\n    /**\n     * This method returns a new empty array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Array} Returns the new empty array.\n     * @example\n     *\n     * var arrays = _.times(2, _.stubArray);\n     *\n     * console.log(arrays);\n     * // => [[], []]\n     *\n     * console.log(arrays[0] === arrays[1]);\n     * // => false\n     */\n    function stubArray() {\n      return [];\n    }\n\n    /**\n     * This method returns `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `false`.\n     * @example\n     *\n     * _.times(2, _.stubFalse);\n     * // => [false, false]\n     */\n    function stubFalse() {\n      return false;\n    }\n\n    /**\n     * This method returns a new empty object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Object} Returns the new empty object.\n     * @example\n     *\n     * var objects = _.times(2, _.stubObject);\n     *\n     * console.log(objects);\n     * // => [{}, {}]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => false\n     */\n    function stubObject() {\n      return {};\n    }\n\n    /**\n     * This method returns an empty string.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {string} Returns the empty string.\n     * @example\n     *\n     * _.times(2, _.stubString);\n     * // => ['', '']\n     */\n    function stubString() {\n      return '';\n    }\n\n    /**\n     * This method returns `true`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `true`.\n     * @example\n     *\n     * _.times(2, _.stubTrue);\n     * // => [true, true]\n     */\n    function stubTrue() {\n      return true;\n    }\n\n    /**\n     * Invokes the iteratee `n` times, returning an array of the results of\n     * each invocation. The iteratee is invoked with one argument; (index).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} n The number of times to invoke `iteratee`.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.times(3, String);\n     * // => ['0', '1', '2']\n     *\n     *  _.times(4, _.constant(0));\n     * // => [0, 0, 0, 0]\n     */\n    function times(n, iteratee) {\n      n = toInteger(n);\n      if (n < 1 || n > MAX_SAFE_INTEGER) {\n        return [];\n      }\n      var index = MAX_ARRAY_LENGTH,\n          length = nativeMin(n, MAX_ARRAY_LENGTH);\n\n      iteratee = getIteratee(iteratee);\n      n -= MAX_ARRAY_LENGTH;\n\n      var result = baseTimes(length, iteratee);\n      while (++index < n) {\n        iteratee(index);\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to a property path array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the new property path array.\n     * @example\n     *\n     * _.toPath('a.b.c');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toPath('a[0].b.c');\n     * // => ['a', '0', 'b', 'c']\n     */\n    function toPath(value) {\n      if (isArray(value)) {\n        return arrayMap(value, toKey);\n      }\n      return isSymbol(value) ? [value] : copyArray(stringToPath(toString(value)));\n    }\n\n    /**\n     * Generates a unique ID. If `prefix` is given, the ID is appended to it.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {string} [prefix=''] The value to prefix the ID with.\n     * @returns {string} Returns the unique ID.\n     * @example\n     *\n     * _.uniqueId('contact_');\n     * // => 'contact_104'\n     *\n     * _.uniqueId();\n     * // => '105'\n     */\n    function uniqueId(prefix) {\n      var id = ++idCounter;\n      return toString(prefix) + id;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Adds two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {number} augend The first number in an addition.\n     * @param {number} addend The second number in an addition.\n     * @returns {number} Returns the total.\n     * @example\n     *\n     * _.add(6, 4);\n     * // => 10\n     */\n    var add = createMathOperation(function(augend, addend) {\n      return augend + addend;\n    }, 0);\n\n    /**\n     * Computes `number` rounded up to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round up.\n     * @param {number} [precision=0] The precision to round up to.\n     * @returns {number} Returns the rounded up number.\n     * @example\n     *\n     * _.ceil(4.006);\n     * // => 5\n     *\n     * _.ceil(6.004, 2);\n     * // => 6.01\n     *\n     * _.ceil(6040, -2);\n     * // => 6100\n     */\n    var ceil = createRound('ceil');\n\n    /**\n     * Divide two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} dividend The first number in a division.\n     * @param {number} divisor The second number in a division.\n     * @returns {number} Returns the quotient.\n     * @example\n     *\n     * _.divide(6, 4);\n     * // => 1.5\n     */\n    var divide = createMathOperation(function(dividend, divisor) {\n      return dividend / divisor;\n    }, 1);\n\n    /**\n     * Computes `number` rounded down to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round down.\n     * @param {number} [precision=0] The precision to round down to.\n     * @returns {number} Returns the rounded down number.\n     * @example\n     *\n     * _.floor(4.006);\n     * // => 4\n     *\n     * _.floor(0.046, 2);\n     * // => 0.04\n     *\n     * _.floor(4060, -2);\n     * // => 4000\n     */\n    var floor = createRound('floor');\n\n    /**\n     * Computes the maximum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * _.max([4, 2, 8, 6]);\n     * // => 8\n     *\n     * _.max([]);\n     * // => undefined\n     */\n    function max(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseGt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.max` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.maxBy(objects, function(o) { return o.n; });\n     * // => { 'n': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.maxBy(objects, 'n');\n     * // => { 'n': 2 }\n     */\n    function maxBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee, 2), baseGt)\n        : undefined;\n    }\n\n    /**\n     * Computes the mean of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * _.mean([4, 2, 8, 6]);\n     * // => 5\n     */\n    function mean(array) {\n      return baseMean(array, identity);\n    }\n\n    /**\n     * This method is like `_.mean` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be averaged.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.meanBy(objects, function(o) { return o.n; });\n     * // => 5\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.meanBy(objects, 'n');\n     * // => 5\n     */\n    function meanBy(array, iteratee) {\n      return baseMean(array, getIteratee(iteratee, 2));\n    }\n\n    /**\n     * Computes the minimum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * _.min([4, 2, 8, 6]);\n     * // => 2\n     *\n     * _.min([]);\n     * // => undefined\n     */\n    function min(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseLt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.min` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.minBy(objects, function(o) { return o.n; });\n     * // => { 'n': 1 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.minBy(objects, 'n');\n     * // => { 'n': 1 }\n     */\n    function minBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee, 2), baseLt)\n        : undefined;\n    }\n\n    /**\n     * Multiply two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} multiplier The first number in a multiplication.\n     * @param {number} multiplicand The second number in a multiplication.\n     * @returns {number} Returns the product.\n     * @example\n     *\n     * _.multiply(6, 4);\n     * // => 24\n     */\n    var multiply = createMathOperation(function(multiplier, multiplicand) {\n      return multiplier * multiplicand;\n    }, 1);\n\n    /**\n     * Computes `number` rounded to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round.\n     * @param {number} [precision=0] The precision to round to.\n     * @returns {number} Returns the rounded number.\n     * @example\n     *\n     * _.round(4.006);\n     * // => 4\n     *\n     * _.round(4.006, 2);\n     * // => 4.01\n     *\n     * _.round(4060, -2);\n     * // => 4100\n     */\n    var round = createRound('round');\n\n    /**\n     * Subtract two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {number} minuend The first number in a subtraction.\n     * @param {number} subtrahend The second number in a subtraction.\n     * @returns {number} Returns the difference.\n     * @example\n     *\n     * _.subtract(6, 4);\n     * // => 2\n     */\n    var subtract = createMathOperation(function(minuend, subtrahend) {\n      return minuend - subtrahend;\n    }, 0);\n\n    /**\n     * Computes the sum of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * _.sum([4, 2, 8, 6]);\n     * // => 20\n     */\n    function sum(array) {\n      return (array && array.length)\n        ? baseSum(array, identity)\n        : 0;\n    }\n\n    /**\n     * This method is like `_.sum` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be summed.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.sumBy(objects, function(o) { return o.n; });\n     * // => 20\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sumBy(objects, 'n');\n     * // => 20\n     */\n    function sumBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSum(array, getIteratee(iteratee, 2))\n        : 0;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return wrapped values in chain sequences.\n    lodash.after = after;\n    lodash.ary = ary;\n    lodash.assign = assign;\n    lodash.assignIn = assignIn;\n    lodash.assignInWith = assignInWith;\n    lodash.assignWith = assignWith;\n    lodash.at = at;\n    lodash.before = before;\n    lodash.bind = bind;\n    lodash.bindAll = bindAll;\n    lodash.bindKey = bindKey;\n    lodash.castArray = castArray;\n    lodash.chain = chain;\n    lodash.chunk = chunk;\n    lodash.compact = compact;\n    lodash.concat = concat;\n    lodash.cond = cond;\n    lodash.conforms = conforms;\n    lodash.constant = constant;\n    lodash.countBy = countBy;\n    lodash.create = create;\n    lodash.curry = curry;\n    lodash.curryRight = curryRight;\n    lodash.debounce = debounce;\n    lodash.defaults = defaults;\n    lodash.defaultsDeep = defaultsDeep;\n    lodash.defer = defer;\n    lodash.delay = delay;\n    lodash.difference = difference;\n    lodash.differenceBy = differenceBy;\n    lodash.differenceWith = differenceWith;\n    lodash.drop = drop;\n    lodash.dropRight = dropRight;\n    lodash.dropRightWhile = dropRightWhile;\n    lodash.dropWhile = dropWhile;\n    lodash.fill = fill;\n    lodash.filter = filter;\n    lodash.flatMap = flatMap;\n    lodash.flatMapDeep = flatMapDeep;\n    lodash.flatMapDepth = flatMapDepth;\n    lodash.flatten = flatten;\n    lodash.flattenDeep = flattenDeep;\n    lodash.flattenDepth = flattenDepth;\n    lodash.flip = flip;\n    lodash.flow = flow;\n    lodash.flowRight = flowRight;\n    lodash.fromPairs = fromPairs;\n    lodash.functions = functions;\n    lodash.functionsIn = functionsIn;\n    lodash.groupBy = groupBy;\n    lodash.initial = initial;\n    lodash.intersection = intersection;\n    lodash.intersectionBy = intersectionBy;\n    lodash.intersectionWith = intersectionWith;\n    lodash.invert = invert;\n    lodash.invertBy = invertBy;\n    lodash.invokeMap = invokeMap;\n    lodash.iteratee = iteratee;\n    lodash.keyBy = keyBy;\n    lodash.keys = keys;\n    lodash.keysIn = keysIn;\n    lodash.map = map;\n    lodash.mapKeys = mapKeys;\n    lodash.mapValues = mapValues;\n    lodash.matches = matches;\n    lodash.matchesProperty = matchesProperty;\n    lodash.memoize = memoize;\n    lodash.merge = merge;\n    lodash.mergeWith = mergeWith;\n    lodash.method = method;\n    lodash.methodOf = methodOf;\n    lodash.mixin = mixin;\n    lodash.negate = negate;\n    lodash.nthArg = nthArg;\n    lodash.omit = omit;\n    lodash.omitBy = omitBy;\n    lodash.once = once;\n    lodash.orderBy = orderBy;\n    lodash.over = over;\n    lodash.overArgs = overArgs;\n    lodash.overEvery = overEvery;\n    lodash.overSome = overSome;\n    lodash.partial = partial;\n    lodash.partialRight = partialRight;\n    lodash.partition = partition;\n    lodash.pick = pick;\n    lodash.pickBy = pickBy;\n    lodash.property = property;\n    lodash.propertyOf = propertyOf;\n    lodash.pull = pull;\n    lodash.pullAll = pullAll;\n    lodash.pullAllBy = pullAllBy;\n    lodash.pullAllWith = pullAllWith;\n    lodash.pullAt = pullAt;\n    lodash.range = range;\n    lodash.rangeRight = rangeRight;\n    lodash.rearg = rearg;\n    lodash.reject = reject;\n    lodash.remove = remove;\n    lodash.rest = rest;\n    lodash.reverse = reverse;\n    lodash.sampleSize = sampleSize;\n    lodash.set = set;\n    lodash.setWith = setWith;\n    lodash.shuffle = shuffle;\n    lodash.slice = slice;\n    lodash.sortBy = sortBy;\n    lodash.sortedUniq = sortedUniq;\n    lodash.sortedUniqBy = sortedUniqBy;\n    lodash.split = split;\n    lodash.spread = spread;\n    lodash.tail = tail;\n    lodash.take = take;\n    lodash.takeRight = takeRight;\n    lodash.takeRightWhile = takeRightWhile;\n    lodash.takeWhile = takeWhile;\n    lodash.tap = tap;\n    lodash.throttle = throttle;\n    lodash.thru = thru;\n    lodash.toArray = toArray;\n    lodash.toPairs = toPairs;\n    lodash.toPairsIn = toPairsIn;\n    lodash.toPath = toPath;\n    lodash.toPlainObject = toPlainObject;\n    lodash.transform = transform;\n    lodash.unary = unary;\n    lodash.union = union;\n    lodash.unionBy = unionBy;\n    lodash.unionWith = unionWith;\n    lodash.uniq = uniq;\n    lodash.uniqBy = uniqBy;\n    lodash.uniqWith = uniqWith;\n    lodash.unset = unset;\n    lodash.unzip = unzip;\n    lodash.unzipWith = unzipWith;\n    lodash.update = update;\n    lodash.updateWith = updateWith;\n    lodash.values = values;\n    lodash.valuesIn = valuesIn;\n    lodash.without = without;\n    lodash.words = words;\n    lodash.wrap = wrap;\n    lodash.xor = xor;\n    lodash.xorBy = xorBy;\n    lodash.xorWith = xorWith;\n    lodash.zip = zip;\n    lodash.zipObject = zipObject;\n    lodash.zipObjectDeep = zipObjectDeep;\n    lodash.zipWith = zipWith;\n\n    // Add aliases.\n    lodash.entries = toPairs;\n    lodash.entriesIn = toPairsIn;\n    lodash.extend = assignIn;\n    lodash.extendWith = assignInWith;\n\n    // Add methods to `lodash.prototype`.\n    mixin(lodash, lodash);\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return unwrapped values in chain sequences.\n    lodash.add = add;\n    lodash.attempt = attempt;\n    lodash.camelCase = camelCase;\n    lodash.capitalize = capitalize;\n    lodash.ceil = ceil;\n    lodash.clamp = clamp;\n    lodash.clone = clone;\n    lodash.cloneDeep = cloneDeep;\n    lodash.cloneDeepWith = cloneDeepWith;\n    lodash.cloneWith = cloneWith;\n    lodash.conformsTo = conformsTo;\n    lodash.deburr = deburr;\n    lodash.defaultTo = defaultTo;\n    lodash.divide = divide;\n    lodash.endsWith = endsWith;\n    lodash.eq = eq;\n    lodash.escape = escape;\n    lodash.escapeRegExp = escapeRegExp;\n    lodash.every = every;\n    lodash.find = find;\n    lodash.findIndex = findIndex;\n    lodash.findKey = findKey;\n    lodash.findLast = findLast;\n    lodash.findLastIndex = findLastIndex;\n    lodash.findLastKey = findLastKey;\n    lodash.floor = floor;\n    lodash.forEach = forEach;\n    lodash.forEachRight = forEachRight;\n    lodash.forIn = forIn;\n    lodash.forInRight = forInRight;\n    lodash.forOwn = forOwn;\n    lodash.forOwnRight = forOwnRight;\n    lodash.get = get;\n    lodash.gt = gt;\n    lodash.gte = gte;\n    lodash.has = has;\n    lodash.hasIn = hasIn;\n    lodash.head = head;\n    lodash.identity = identity;\n    lodash.includes = includes;\n    lodash.indexOf = indexOf;\n    lodash.inRange = inRange;\n    lodash.invoke = invoke;\n    lodash.isArguments = isArguments;\n    lodash.isArray = isArray;\n    lodash.isArrayBuffer = isArrayBuffer;\n    lodash.isArrayLike = isArrayLike;\n    lodash.isArrayLikeObject = isArrayLikeObject;\n    lodash.isBoolean = isBoolean;\n    lodash.isBuffer = isBuffer;\n    lodash.isDate = isDate;\n    lodash.isElement = isElement;\n    lodash.isEmpty = isEmpty;\n    lodash.isEqual = isEqual;\n    lodash.isEqualWith = isEqualWith;\n    lodash.isError = isError;\n    lodash.isFinite = isFinite;\n    lodash.isFunction = isFunction;\n    lodash.isInteger = isInteger;\n    lodash.isLength = isLength;\n    lodash.isMap = isMap;\n    lodash.isMatch = isMatch;\n    lodash.isMatchWith = isMatchWith;\n    lodash.isNaN = isNaN;\n    lodash.isNative = isNative;\n    lodash.isNil = isNil;\n    lodash.isNull = isNull;\n    lodash.isNumber = isNumber;\n    lodash.isObject = isObject;\n    lodash.isObjectLike = isObjectLike;\n    lodash.isPlainObject = isPlainObject;\n    lodash.isRegExp = isRegExp;\n    lodash.isSafeInteger = isSafeInteger;\n    lodash.isSet = isSet;\n    lodash.isString = isString;\n    lodash.isSymbol = isSymbol;\n    lodash.isTypedArray = isTypedArray;\n    lodash.isUndefined = isUndefined;\n    lodash.isWeakMap = isWeakMap;\n    lodash.isWeakSet = isWeakSet;\n    lodash.join = join;\n    lodash.kebabCase = kebabCase;\n    lodash.last = last;\n    lodash.lastIndexOf = lastIndexOf;\n    lodash.lowerCase = lowerCase;\n    lodash.lowerFirst = lowerFirst;\n    lodash.lt = lt;\n    lodash.lte = lte;\n    lodash.max = max;\n    lodash.maxBy = maxBy;\n    lodash.mean = mean;\n    lodash.meanBy = meanBy;\n    lodash.min = min;\n    lodash.minBy = minBy;\n    lodash.stubArray = stubArray;\n    lodash.stubFalse = stubFalse;\n    lodash.stubObject = stubObject;\n    lodash.stubString = stubString;\n    lodash.stubTrue = stubTrue;\n    lodash.multiply = multiply;\n    lodash.nth = nth;\n    lodash.noConflict = noConflict;\n    lodash.noop = noop;\n    lodash.now = now;\n    lodash.pad = pad;\n    lodash.padEnd = padEnd;\n    lodash.padStart = padStart;\n    lodash.parseInt = parseInt;\n    lodash.random = random;\n    lodash.reduce = reduce;\n    lodash.reduceRight = reduceRight;\n    lodash.repeat = repeat;\n    lodash.replace = replace;\n    lodash.result = result;\n    lodash.round = round;\n    lodash.runInContext = runInContext;\n    lodash.sample = sample;\n    lodash.size = size;\n    lodash.snakeCase = snakeCase;\n    lodash.some = some;\n    lodash.sortedIndex = sortedIndex;\n    lodash.sortedIndexBy = sortedIndexBy;\n    lodash.sortedIndexOf = sortedIndexOf;\n    lodash.sortedLastIndex = sortedLastIndex;\n    lodash.sortedLastIndexBy = sortedLastIndexBy;\n    lodash.sortedLastIndexOf = sortedLastIndexOf;\n    lodash.startCase = startCase;\n    lodash.startsWith = startsWith;\n    lodash.subtract = subtract;\n    lodash.sum = sum;\n    lodash.sumBy = sumBy;\n    lodash.template = template;\n    lodash.times = times;\n    lodash.toFinite = toFinite;\n    lodash.toInteger = toInteger;\n    lodash.toLength = toLength;\n    lodash.toLower = toLower;\n    lodash.toNumber = toNumber;\n    lodash.toSafeInteger = toSafeInteger;\n    lodash.toString = toString;\n    lodash.toUpper = toUpper;\n    lodash.trim = trim;\n    lodash.trimEnd = trimEnd;\n    lodash.trimStart = trimStart;\n    lodash.truncate = truncate;\n    lodash.unescape = unescape;\n    lodash.uniqueId = uniqueId;\n    lodash.upperCase = upperCase;\n    lodash.upperFirst = upperFirst;\n\n    // Add aliases.\n    lodash.each = forEach;\n    lodash.eachRight = forEachRight;\n    lodash.first = head;\n\n    mixin(lodash, (function() {\n      var source = {};\n      baseForOwn(lodash, function(func, methodName) {\n        if (!hasOwnProperty.call(lodash.prototype, methodName)) {\n          source[methodName] = func;\n        }\n      });\n      return source;\n    }()), { 'chain': false });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The semantic version number.\n     *\n     * @static\n     * @memberOf _\n     * @type {string}\n     */\n    lodash.VERSION = VERSION;\n\n    // Assign default placeholders.\n    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {\n      lodash[methodName].placeholder = lodash;\n    });\n\n    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.\n    arrayEach(['drop', 'take'], function(methodName, index) {\n      LazyWrapper.prototype[methodName] = function(n) {\n        n = n === undefined ? 1 : nativeMax(toInteger(n), 0);\n\n        var result = (this.__filtered__ && !index)\n          ? new LazyWrapper(this)\n          : this.clone();\n\n        if (result.__filtered__) {\n          result.__takeCount__ = nativeMin(n, result.__takeCount__);\n        } else {\n          result.__views__.push({\n            'size': nativeMin(n, MAX_ARRAY_LENGTH),\n            'type': methodName + (result.__dir__ < 0 ? 'Right' : '')\n          });\n        }\n        return result;\n      };\n\n      LazyWrapper.prototype[methodName + 'Right'] = function(n) {\n        return this.reverse()[methodName](n).reverse();\n      };\n    });\n\n    // Add `LazyWrapper` methods that accept an `iteratee` value.\n    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {\n      var type = index + 1,\n          isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;\n\n      LazyWrapper.prototype[methodName] = function(iteratee) {\n        var result = this.clone();\n        result.__iteratees__.push({\n          'iteratee': getIteratee(iteratee, 3),\n          'type': type\n        });\n        result.__filtered__ = result.__filtered__ || isFilter;\n        return result;\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.head` and `_.last`.\n    arrayEach(['head', 'last'], function(methodName, index) {\n      var takeName = 'take' + (index ? 'Right' : '');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this[takeName](1).value()[0];\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.initial` and `_.tail`.\n    arrayEach(['initial', 'tail'], function(methodName, index) {\n      var dropName = 'drop' + (index ? '' : 'Right');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);\n      };\n    });\n\n    LazyWrapper.prototype.compact = function() {\n      return this.filter(identity);\n    };\n\n    LazyWrapper.prototype.find = function(predicate) {\n      return this.filter(predicate).head();\n    };\n\n    LazyWrapper.prototype.findLast = function(predicate) {\n      return this.reverse().find(predicate);\n    };\n\n    LazyWrapper.prototype.invokeMap = baseRest(function(path, args) {\n      if (typeof path == 'function') {\n        return new LazyWrapper(this);\n      }\n      return this.map(function(value) {\n        return baseInvoke(value, path, args);\n      });\n    });\n\n    LazyWrapper.prototype.reject = function(predicate) {\n      return this.filter(negate(getIteratee(predicate)));\n    };\n\n    LazyWrapper.prototype.slice = function(start, end) {\n      start = toInteger(start);\n\n      var result = this;\n      if (result.__filtered__ && (start > 0 || end < 0)) {\n        return new LazyWrapper(result);\n      }\n      if (start < 0) {\n        result = result.takeRight(-start);\n      } else if (start) {\n        result = result.drop(start);\n      }\n      if (end !== undefined) {\n        end = toInteger(end);\n        result = end < 0 ? result.dropRight(-end) : result.take(end - start);\n      }\n      return result;\n    };\n\n    LazyWrapper.prototype.takeRightWhile = function(predicate) {\n      return this.reverse().takeWhile(predicate).reverse();\n    };\n\n    LazyWrapper.prototype.toArray = function() {\n      return this.take(MAX_ARRAY_LENGTH);\n    };\n\n    // Add `LazyWrapper` methods to `lodash.prototype`.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName),\n          isTaker = /^(?:head|last)$/.test(methodName),\n          lodashFunc = lodash[isTaker ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName],\n          retUnwrapped = isTaker || /^find/.test(methodName);\n\n      if (!lodashFunc) {\n        return;\n      }\n      lodash.prototype[methodName] = function() {\n        var value = this.__wrapped__,\n            args = isTaker ? [1] : arguments,\n            isLazy = value instanceof LazyWrapper,\n            iteratee = args[0],\n            useLazy = isLazy || isArray(value);\n\n        var interceptor = function(value) {\n          var result = lodashFunc.apply(lodash, arrayPush([value], args));\n          return (isTaker && chainAll) ? result[0] : result;\n        };\n\n        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {\n          // Avoid lazy use if the iteratee has a \"length\" value other than `1`.\n          isLazy = useLazy = false;\n        }\n        var chainAll = this.__chain__,\n            isHybrid = !!this.__actions__.length,\n            isUnwrapped = retUnwrapped && !chainAll,\n            onlyLazy = isLazy && !isHybrid;\n\n        if (!retUnwrapped && useLazy) {\n          value = onlyLazy ? value : new LazyWrapper(this);\n          var result = func.apply(value, args);\n          result.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });\n          return new LodashWrapper(result, chainAll);\n        }\n        if (isUnwrapped && onlyLazy) {\n          return func.apply(this, args);\n        }\n        result = this.thru(interceptor);\n        return isUnwrapped ? (isTaker ? result.value()[0] : result.value()) : result;\n      };\n    });\n\n    // Add `Array` methods to `lodash.prototype`.\n    arrayEach(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {\n      var func = arrayProto[methodName],\n          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\n          retUnwrapped = /^(?:pop|shift)$/.test(methodName);\n\n      lodash.prototype[methodName] = function() {\n        var args = arguments;\n        if (retUnwrapped && !this.__chain__) {\n          var value = this.value();\n          return func.apply(isArray(value) ? value : [], args);\n        }\n        return this[chainName](function(value) {\n          return func.apply(isArray(value) ? value : [], args);\n        });\n      };\n    });\n\n    // Map minified method names to their real names.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var lodashFunc = lodash[methodName];\n      if (lodashFunc) {\n        var key = (lodashFunc.name + ''),\n            names = realNames[key] || (realNames[key] = []);\n\n        names.push({ 'name': methodName, 'func': lodashFunc });\n      }\n    });\n\n    realNames[createHybrid(undefined, WRAP_BIND_KEY_FLAG).name] = [{\n      'name': 'wrapper',\n      'func': undefined\n    }];\n\n    // Add methods to `LazyWrapper`.\n    LazyWrapper.prototype.clone = lazyClone;\n    LazyWrapper.prototype.reverse = lazyReverse;\n    LazyWrapper.prototype.value = lazyValue;\n\n    // Add chain sequence methods to the `lodash` wrapper.\n    lodash.prototype.at = wrapperAt;\n    lodash.prototype.chain = wrapperChain;\n    lodash.prototype.commit = wrapperCommit;\n    lodash.prototype.next = wrapperNext;\n    lodash.prototype.plant = wrapperPlant;\n    lodash.prototype.reverse = wrapperReverse;\n    lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;\n\n    // Add lazy aliases.\n    lodash.prototype.first = lodash.prototype.head;\n\n    if (symIterator) {\n      lodash.prototype[symIterator] = wrapperToIterator;\n    }\n    return lodash;\n  });\n\n  /*--------------------------------------------------------------------------*/\n\n  // Export lodash.\n  var _ = runInContext();\n\n  // Some AMD build optimizers, like r.js, check for condition patterns like:\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    // Expose Lodash on the global object to prevent errors when Lodash is\n    // loaded by a script tag in the presence of an AMD loader.\n    // See http://requirejs.org/docs/errors.html#mismatch for more details.\n    // Use `_.noConflict` to remove Lodash from the global object.\n    root._ = _;\n\n    // Define as an anonymous module so, through path mapping, it can be\n    // referenced as the \"underscore\" module.\n    define(function() {\n      return _;\n    });\n  }\n  // Check for `exports` after `define` in case a build optimizer adds it.\n  else if (freeModule) {\n    // Export for Node.js.\n    (freeModule.exports = _)._ = _;\n    // Export for CommonJS support.\n    freeExports._ = _;\n  }\n  else {\n    // Export to the global object.\n    root._ = _;\n  }\n}.call(this));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/lodash.js\n// module id = 62\n// module chunks = 0","\"use strict\";\n/**\n * Copyright 2017-present Palantir Technologies, Inc. All rights reserved.\n * Licensed under the MIT License (the \"License\"); you may obtain a copy of the\n * license at https://github.com/palantir/typesettable/blob/develop/LICENSE\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar HtmlUtils = (function () {\n    function HtmlUtils() {\n    }\n    /**\n     * Appends an HTML element with the specified tag name to the provided element.\n     * The variadic classnames are added to the new element.\n     *\n     * Returns the new element.\n     */\n    HtmlUtils.append = function (element, tagName) {\n        var classNames = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            classNames[_i - 2] = arguments[_i];\n        }\n        var child = HtmlUtils.create.apply(HtmlUtils, [tagName].concat(classNames));\n        element.appendChild(child);\n        return child;\n    };\n    /**\n     * Creates and returns a new HTMLElement with the attached classnames.\n     */\n    HtmlUtils.create = function (tagName) {\n        var classNames = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            classNames[_i - 1] = arguments[_i];\n        }\n        var element = document.createElement(tagName);\n        HtmlUtils.addClasses.apply(HtmlUtils, [element].concat(classNames));\n        return element;\n    };\n    /**\n     * Adds the variadic classnames to the Element\n     */\n    HtmlUtils.addClasses = function (element) {\n        var classNames = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            classNames[_i - 1] = arguments[_i];\n        }\n        classNames = classNames.filter(function (c) { return c != null; });\n        if (element.classList != null) {\n            classNames.forEach(function (className) {\n                element.classList.add(className);\n            });\n        }\n        else {\n            // IE 11 does not support classList\n            element.setAttribute(\"class\", classNames.join(\" \"));\n        }\n    };\n    /**\n     * Returns the width/height of HTMLElement's bounding box\n     */\n    HtmlUtils.getDimensions = function (element) {\n        // using feature detection, safely return the bounding box dimensions of the\n        // provided html element\n        if (element.getBoundingClientRect) {\n            try {\n                var _a = element.getBoundingClientRect(), width = _a.width, height = _a.height;\n                // copy to prevent NoModificationAllowedError\n                return { width: width, height: height };\n            }\n            catch (err) {\n                // swallow any errors that occur (Firefox Linux)\n            }\n        }\n        // if can't get valid bbox, return 0,0\n        return { height: 0, width: 0 };\n    };\n    return HtmlUtils;\n}());\nexports.HtmlUtils = HtmlUtils;\n/**\n * A typesetter context for HTML.\n */\nvar HtmlContext = (function () {\n    /**\n     * @param element - The CSS font styles applied to `element` will determine the\n     * size of text measurements. Also the default text block container.\n     * @param className - added to new text blocks\n     * @param addTitle - enable title attribute to be added to new text blocks.\n     */\n    function HtmlContext(element, className, addTitle) {\n        if (addTitle === void 0) { addTitle = false; }\n        var _this = this;\n        this.element = element;\n        this.className = className;\n        this.addTitle = addTitle;\n        this.createRuler = function () {\n            return function (text) {\n                var textElement = HtmlUtils.append(_this.element, \"span\", \"text-tmp\", _this.className);\n                textElement.textContent = text;\n                var dimensions = HtmlUtils.getDimensions(textElement);\n                _this.element.removeChild(textElement); // element.remove() doesn't work in IE11\n                return dimensions;\n            };\n        };\n        this.createPen = function (text, transform, element) {\n            if (element == null) {\n                element = _this.element;\n            }\n            var textBlock = HtmlUtils.append(element, \"div\", \"text-block\", _this.className);\n            textBlock.style.position = \"relative\";\n            textBlock.style.transform =\n                \"translate(0, -1em) \" +\n                    (\"translate(\" + transform.translate[0] + \"px, \" + transform.translate[1] + \"px) \") +\n                    (\"rotate(\" + transform.rotate + \"deg)\");\n            // This awkward transform origin matches the SVG origin\n            textBlock.style.transformOrigin = \"0 1.2em\";\n            // attach optional title\n            if (_this.addTitle) {\n                textBlock.setAttribute(\"title\", text);\n            }\n            return _this.createHtmlLinePen(textBlock);\n        };\n    }\n    HtmlContext.prototype.setAddTitle = function (addTitle) {\n        this.addTitle = addTitle;\n    };\n    HtmlContext.prototype.createHtmlLinePen = function (textBlock) {\n        return {\n            write: function (line, width, xAlign, xOffset, yOffset) {\n                var textLine = HtmlUtils.append(textBlock, \"div\", \"text-line\");\n                textLine.textContent = line;\n                textLine.style.width = width + \"px\";\n                textLine.style.textAlign = xAlign;\n                textLine.style.position = \"absolute\";\n                textLine.style.whiteSpace = \"nowrap\";\n                textLine.style.top = yOffset + \"px\";\n                textLine.style.left = xOffset + \"px\";\n            },\n        };\n    };\n    return HtmlContext;\n}());\nexports.HtmlContext = HtmlContext;\n//# sourceMappingURL=html.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/typesettable/build/src/contexts/html.js\n// module id = 63\n// module chunks = 0","\"use strict\";\n/**\n * Copyright 2017-present Palantir Technologies, Inc. All rights reserved.\n * Licensed under the MIT License (the \"License\"); you may obtain a copy of the\n * license at https://github.com/palantir/typesettable/blob/develop/LICENSE\n */\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./svg\"));\n__export(require(\"./canvas\"));\n__export(require(\"./html\"));\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/typesettable/build/src/contexts/index.js\n// module id = 64\n// module chunks = 0","\"use strict\";\n/**\n * Copyright 2017-present Palantir Technologies, Inc. All rights reserved.\n * Licensed under the MIT License (the \"License\"); you may obtain a copy of the\n * license at https://github.com/palantir/typesettable/blob/develop/LICENSE\n */\n/* istanbul ignore next */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar utils_1 = require(\"../utils\");\nvar characterMeasurer_1 = require(\"./characterMeasurer\");\nvar CacheCharacterMeasurer = (function (_super) {\n    __extends(CacheCharacterMeasurer, _super);\n    function CacheCharacterMeasurer(ruler, useGuards) {\n        var _this = _super.call(this, ruler, useGuards) || this;\n        _this.cache = new utils_1.Cache(function (c) {\n            return _this._measureCharacterNotFromCache(c);\n        });\n        return _this;\n    }\n    CacheCharacterMeasurer.prototype._measureCharacterNotFromCache = function (c) {\n        return _super.prototype._measureCharacter.call(this, c);\n    };\n    CacheCharacterMeasurer.prototype._measureCharacter = function (c) {\n        return this.cache.get(c);\n    };\n    CacheCharacterMeasurer.prototype.reset = function () {\n        this.cache.clear();\n    };\n    return CacheCharacterMeasurer;\n}(characterMeasurer_1.CharacterMeasurer));\nexports.CacheCharacterMeasurer = CacheCharacterMeasurer;\n//# sourceMappingURL=cacheCharacterMeasurer.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/typesettable/build/src/measurers/cacheCharacterMeasurer.js\n// module id = 65\n// module chunks = 0","\"use strict\";\n/**\n * Copyright 2017-present Palantir Technologies, Inc. All rights reserved.\n * Licensed under the MIT License (the \"License\"); you may obtain a copy of the\n * license at https://github.com/palantir/typesettable/blob/develop/LICENSE\n */\n/* istanbul ignore next */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar measurer_1 = require(\"./measurer\");\nvar CharacterMeasurer = (function (_super) {\n    __extends(CharacterMeasurer, _super);\n    function CharacterMeasurer() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    CharacterMeasurer.prototype._measureCharacter = function (c) {\n        return _super.prototype._measureLine.call(this, c);\n    };\n    CharacterMeasurer.prototype._measureLine = function (line) {\n        var _this = this;\n        var charactersDimensions = line.split(\"\").map(function (c) { return _this._measureCharacter(c); });\n        return {\n            height: charactersDimensions.reduce(function (acc, dim) { return Math.max(acc, dim.height); }, 0),\n            width: charactersDimensions.reduce(function (acc, dim) { return acc + dim.width; }, 0),\n        };\n    };\n    return CharacterMeasurer;\n}(measurer_1.Measurer));\nexports.CharacterMeasurer = CharacterMeasurer;\n//# sourceMappingURL=characterMeasurer.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/typesettable/build/src/measurers/characterMeasurer.js\n// module id = 66\n// module chunks = 0","\"use strict\";\n/**\n * Copyright 2017-present Palantir Technologies, Inc. All rights reserved.\n * Licensed under the MIT License (the \"License\"); you may obtain a copy of the\n * license at https://github.com/palantir/typesettable/blob/develop/LICENSE\n */\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./abstractMeasurer\"));\n__export(require(\"./cacheCharacterMeasurer\"));\n__export(require(\"./cacheMeasurer\"));\n__export(require(\"./characterMeasurer\"));\n__export(require(\"./measurer\"));\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/typesettable/build/src/measurers/index.js\n// module id = 67\n// module chunks = 0","\"use strict\";\n/**\n * Copyright 2017-present Palantir Technologies, Inc. All rights reserved.\n * Licensed under the MIT License (the \"License\"); you may obtain a copy of the\n * license at https://github.com/palantir/typesettable/blob/develop/LICENSE\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar abstractMeasurer_1 = require(\"./abstractMeasurer\");\nvar Measurer = (function (_super) {\n    __extends(Measurer, _super);\n    function Measurer(ruler, useGuards) {\n        if (useGuards === void 0) { useGuards = false; }\n        var _this = _super.call(this, ruler) || this;\n        _this.useGuards = useGuards;\n        return _this;\n    }\n    // Guards assures same line height and width of whitespaces on both ends.\n    Measurer.prototype._addGuards = function (text) {\n        return abstractMeasurer_1.AbstractMeasurer.HEIGHT_TEXT + text + abstractMeasurer_1.AbstractMeasurer.HEIGHT_TEXT;\n    };\n    Measurer.prototype._measureLine = function (line, forceGuards) {\n        if (forceGuards === void 0) { forceGuards = false; }\n        var useGuards = this.useGuards || forceGuards || /^[\\t ]$/.test(line);\n        var measuredLine = useGuards ? this._addGuards(line) : line;\n        var measuredLineDimensions = _super.prototype.measure.call(this, measuredLine);\n        measuredLineDimensions.width -= useGuards ? (2 * this.getGuardWidth()) : 0;\n        return measuredLineDimensions;\n    };\n    Measurer.prototype.measure = function (text) {\n        var _this = this;\n        if (text === void 0) { text = abstractMeasurer_1.AbstractMeasurer.HEIGHT_TEXT; }\n        if (text.trim() === \"\") {\n            return { width: 0, height: 0 };\n        }\n        var linesDimensions = text.trim().split(\"\\n\").map(function (line) { return _this._measureLine(line); });\n        return {\n            height: linesDimensions.reduce(function (acc, dim) { return acc + dim.height; }, 0),\n            width: linesDimensions.reduce(function (acc, dim) { return Math.max(acc, dim.width); }, 0),\n        };\n    };\n    Measurer.prototype.getGuardWidth = function () {\n        if (this.guardWidth == null) {\n            this.guardWidth = _super.prototype.measure.call(this).width;\n        }\n        return this.guardWidth;\n    };\n    return Measurer;\n}(abstractMeasurer_1.AbstractMeasurer));\nexports.Measurer = Measurer;\n//# sourceMappingURL=measurer.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/typesettable/build/src/measurers/measurer.js\n// module id = 68\n// module chunks = 0","\"use strict\";\n/**\n * Copyright 2017-present Palantir Technologies, Inc. All rights reserved.\n * Licensed under the MIT License (the \"License\"); you may obtain a copy of the\n * license at https://github.com/palantir/typesettable/blob/develop/LICENSE\n */\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./singleLineWrapper\"));\n__export(require(\"./wrapper\"));\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/typesettable/build/src/wrappers/index.js\n// module id = 69\n// module chunks = 0","\"use strict\";\n/**\n * Copyright 2017-present Palantir Technologies, Inc. All rights reserved.\n * Licensed under the MIT License (the \"License\"); you may obtain a copy of the\n * license at https://github.com/palantir/typesettable/blob/develop/LICENSE\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Utils = require(\"../utils\");\nvar Wrapper = (function () {\n    function Wrapper() {\n        this.maxLines(Infinity);\n        this.textTrimming(\"ellipsis\");\n        this.allowBreakingWords(false);\n        this._tokenizer = new Utils.Tokenizer();\n        this._breakingCharacter = \"-\";\n    }\n    Wrapper.prototype.maxLines = function (noLines) {\n        if (noLines == null) {\n            return this._maxLines;\n        }\n        else {\n            this._maxLines = noLines;\n            return this;\n        }\n    };\n    Wrapper.prototype.textTrimming = function (option) {\n        if (option == null) {\n            return this._textTrimming;\n        }\n        else {\n            if (option !== \"ellipsis\" && option !== \"none\") {\n                throw new Error(option + \" - unsupported text trimming option.\");\n            }\n            this._textTrimming = option;\n            return this;\n        }\n    };\n    Wrapper.prototype.allowBreakingWords = function (allow) {\n        if (allow == null) {\n            return this._allowBreakingWords;\n        }\n        else {\n            this._allowBreakingWords = allow;\n            return this;\n        }\n    };\n    Wrapper.prototype.wrap = function (text, measurer, width, height) {\n        var _this = this;\n        if (height === void 0) { height = Infinity; }\n        var initialWrappingResult = {\n            noBrokeWords: 0,\n            noLines: 0,\n            originalText: text,\n            truncatedText: \"\",\n            wrappedText: \"\",\n        };\n        var state = {\n            availableLines: Math.min(Math.floor(height / measurer.measure().height), this._maxLines),\n            availableWidth: width,\n            canFitText: true,\n            currentLine: \"\",\n            wrapping: initialWrappingResult,\n        };\n        var lines = text.split(\"\\n\");\n        return lines.reduce(function (s, line, i) {\n            return _this.breakLineToFitWidth(s, line, i !== lines.length - 1, measurer);\n        }, state).wrapping;\n    };\n    Wrapper.prototype.breakLineToFitWidth = function (state, line, hasNextLine, measurer) {\n        var _this = this;\n        if (!state.canFitText && state.wrapping.truncatedText !== \"\") {\n            state.wrapping.truncatedText += \"\\n\";\n        }\n        var tokens = this._tokenizer.tokenize(line);\n        state = tokens.reduce(function (s, token) {\n            return _this.wrapNextToken(token, s, measurer);\n        }, state);\n        var wrappedText = Utils.StringMethods.trimEnd(state.currentLine);\n        state.wrapping.noLines += +(wrappedText !== \"\");\n        if (state.wrapping.noLines === state.availableLines && this._textTrimming !== \"none\" && hasNextLine) {\n            // Note: no need to add more ellipses, they were added in `wrapNextToken`\n            state.canFitText = false;\n        }\n        else {\n            state.wrapping.wrappedText += wrappedText;\n        }\n        state.currentLine = \"\\n\";\n        return state;\n    };\n    Wrapper.prototype.canFitToken = function (token, width, measurer) {\n        var _this = this;\n        var possibleBreaks = token.split(\"\").map(function (c, i) { return (i !== token.length - 1) ? c + _this._breakingCharacter : c; });\n        return (measurer.measure(token).width <= width) || possibleBreaks.every(function (c) { return measurer.measure(c).width <= width; });\n    };\n    Wrapper.prototype.addEllipsis = function (line, width, measurer) {\n        if (this._textTrimming === \"none\") {\n            return {\n                remainingToken: \"\",\n                wrappedToken: line,\n            };\n        }\n        var truncatedLine = line.substring(0).trim();\n        var lineWidth = measurer.measure(truncatedLine).width;\n        var ellipsesWidth = measurer.measure(\"...\").width;\n        var prefix = (line.length > 0 && line[0] === \"\\n\") ? \"\\n\" : \"\";\n        if (width <= ellipsesWidth) {\n            var periodWidth = ellipsesWidth / 3;\n            var numPeriodsThatFit = Math.floor(width / periodWidth);\n            return {\n                remainingToken: line,\n                wrappedToken: prefix + \"...\".substr(0, numPeriodsThatFit),\n            };\n        }\n        while (lineWidth + ellipsesWidth > width) {\n            truncatedLine = Utils.StringMethods.trimEnd(truncatedLine.substr(0, truncatedLine.length - 1));\n            lineWidth = measurer.measure(truncatedLine).width;\n        }\n        return {\n            remainingToken: Utils.StringMethods.trimEnd(line.substring(truncatedLine.length), \"-\").trim(),\n            wrappedToken: prefix + truncatedLine + \"...\",\n        };\n    };\n    Wrapper.prototype.wrapNextToken = function (token, state, measurer) {\n        if (!state.canFitText ||\n            state.availableLines === state.wrapping.noLines ||\n            !this.canFitToken(token, state.availableWidth, measurer)) {\n            return this.finishWrapping(token, state, measurer);\n        }\n        var remainingToken = token;\n        while (remainingToken) {\n            var result = this.breakTokenToFitInWidth(remainingToken, state.currentLine, state.availableWidth, measurer);\n            state.currentLine = result.line;\n            remainingToken = result.remainingToken;\n            if (remainingToken != null) {\n                state.wrapping.noBrokeWords += +result.breakWord;\n                ++state.wrapping.noLines;\n                if (state.availableLines === state.wrapping.noLines) {\n                    var ellipsisResult = this.addEllipsis(state.currentLine, state.availableWidth, measurer);\n                    state.wrapping.wrappedText += ellipsisResult.wrappedToken;\n                    state.wrapping.truncatedText += ellipsisResult.remainingToken + remainingToken;\n                    state.currentLine = \"\\n\";\n                    return state;\n                }\n                else {\n                    state.wrapping.wrappedText += Utils.StringMethods.trimEnd(state.currentLine);\n                    state.currentLine = \"\\n\";\n                }\n            }\n        }\n        return state;\n    };\n    Wrapper.prototype.finishWrapping = function (token, state, measurer) {\n        // Token is really long, but we have a space to put part of the word.\n        if (state.canFitText &&\n            state.availableLines !== state.wrapping.noLines &&\n            this._textTrimming !== \"none\") {\n            var res = this.addEllipsis(state.currentLine + token, state.availableWidth, measurer);\n            state.wrapping.wrappedText += res.wrappedToken;\n            state.wrapping.truncatedText += res.remainingToken;\n            state.wrapping.noBrokeWords += +(res.remainingToken.length < token.length);\n            state.wrapping.noLines += +(res.wrappedToken.length > 0);\n            state.currentLine = \"\";\n        }\n        else {\n            state.wrapping.truncatedText += token;\n        }\n        state.canFitText = false;\n        return state;\n    };\n    /**\n     * Breaks single token to fit current line.\n     * If token contains only whitespaces then they will not be populated to next line.\n     */\n    Wrapper.prototype.breakTokenToFitInWidth = function (token, line, availableWidth, measurer, breakingCharacter) {\n        if (breakingCharacter === void 0) { breakingCharacter = this._breakingCharacter; }\n        if (measurer.measure(line + token).width <= availableWidth) {\n            return {\n                breakWord: false,\n                line: line + token,\n                remainingToken: null,\n            };\n        }\n        if (token.trim() === \"\") {\n            return {\n                breakWord: false,\n                line: line,\n                remainingToken: \"\",\n            };\n        }\n        // if we don't allow breaking words AND the token isn't the only thing on the current line.\n        if (!this._allowBreakingWords && line.trim() !== \"\") {\n            return {\n                breakWord: false,\n                line: line,\n                remainingToken: token,\n            };\n        }\n        var fitTokenLength = 0;\n        while (fitTokenLength < token.length) {\n            if (measurer.measure(line + token.substring(0, fitTokenLength + 1) + breakingCharacter).width <= availableWidth) {\n                ++fitTokenLength;\n            }\n            else {\n                break;\n            }\n        }\n        var suffix = \"\";\n        if (fitTokenLength > 0) {\n            suffix = breakingCharacter;\n        }\n        return {\n            breakWord: fitTokenLength > 0,\n            line: line + token.substring(0, fitTokenLength) + suffix,\n            remainingToken: token.substring(fitTokenLength),\n        };\n    };\n    return Wrapper;\n}());\nexports.Wrapper = Wrapper;\n//# sourceMappingURL=wrapper.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/typesettable/build/src/wrappers/wrapper.js\n// module id = 70\n// module chunks = 0","\"use strict\";\r\n/**\r\n * Copyright 2014-present Palantir Technologies\r\n * @license MIT\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\ntslib_1.__exportStar(require(\"./categoryAxis\"), exports);\r\ntslib_1.__exportStar(require(\"./numericAxis\"), exports);\r\ntslib_1.__exportStar(require(\"./timeAxis\"), exports);\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/axes/index.ts\n// module id = 71\n// module chunks = 0","\"use strict\";\r\n/**\r\n * Copyright 2014-present Palantir Technologies\r\n * @license MIT\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/*\r\n * WARNING: The js output of this expression is searched by string (yes, I know) and replaced with a\r\n * real version number during the dist phase for for npm module publishing. Modifying this line should\r\n * be accompanied by modifying the \"sed-version\" task in package.json accordingly.\r\n */\r\nexports.version = __VERSION__;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/core/version.ts\n// module id = 72\n// module chunks = 0","\"use strict\";\r\n/**\r\n * Copyright 2014-present Palantir Technologies\r\n * @license MIT\r\n *\r\n * @fileoverview manually add d3-selection-multi to d3 default bundle. Most of this code is\r\n * copied from d3-selection-multi@1.0.0.\r\n * See https://github.com/d3/d3-selection-multi/issues/11 for why we have to do this\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar d3 = require(\"d3\");\r\nvar d3Selection = d3;\r\nvar d3Transition = d3;\r\nfunction attrsFunction(selection, map) {\r\n    return selection.each(function () {\r\n        var x = map.apply(this, arguments), s = d3Selection.select(this);\r\n        for (var name_1 in x)\r\n            s.attr(name_1, x[name_1]);\r\n    });\r\n}\r\nfunction attrsObject(selection, map) {\r\n    for (var name_2 in map)\r\n        selection.attr(name_2, map[name_2]);\r\n    return selection;\r\n}\r\nfunction selection_attrs(map) {\r\n    return (typeof map === \"function\" ? attrsFunction : attrsObject)(this, map);\r\n}\r\nfunction stylesFunction(selection, map, priority) {\r\n    return selection.each(function () {\r\n        var x = map.apply(this, arguments), s = d3Selection.select(this);\r\n        for (var name_3 in x)\r\n            s.style(name_3, x[name_3], priority);\r\n    });\r\n}\r\nfunction stylesObject(selection, map, priority) {\r\n    for (var name_4 in map)\r\n        selection.style(name_4, map[name_4], priority);\r\n    return selection;\r\n}\r\nfunction selection_styles(map, priority) {\r\n    return (typeof map === \"function\" ? stylesFunction : stylesObject)(this, map, priority == null ? \"\" : priority);\r\n}\r\nfunction propertiesFunction(selection, map) {\r\n    return selection.each(function () {\r\n        var x = map.apply(this, arguments), s = d3Selection.select(this);\r\n        for (var name_5 in x)\r\n            s.property(name_5, x[name_5]);\r\n    });\r\n}\r\nfunction propertiesObject(selection, map) {\r\n    for (var name_6 in map)\r\n        selection.property(name_6, map[name_6]);\r\n    return selection;\r\n}\r\nfunction selection_properties(map) {\r\n    return (typeof map === \"function\" ? propertiesFunction : propertiesObject)(this, map);\r\n}\r\nfunction attrsFunction$1(transition, map) {\r\n    return transition.each(function () {\r\n        var x = map.apply(this, arguments), t = d3Selection.select(this).transition(transition);\r\n        for (var name_7 in x)\r\n            t.attr(name_7, x[name_7]);\r\n    });\r\n}\r\nfunction attrsObject$1(transition, map) {\r\n    for (var name_8 in map)\r\n        transition.attr(name_8, map[name_8]);\r\n    return transition;\r\n}\r\nfunction transition_attrs(map) {\r\n    return (typeof map === \"function\" ? attrsFunction$1 : attrsObject$1)(this, map);\r\n}\r\nfunction stylesFunction$1(transition, map, priority) {\r\n    return transition.each(function () {\r\n        var x = map.apply(this, arguments), t = d3Selection.select(this).transition(transition);\r\n        for (var name_9 in x)\r\n            t.style(name_9, x[name_9], priority);\r\n    });\r\n}\r\nfunction stylesObject$1(transition, map, priority) {\r\n    for (var name_10 in map)\r\n        transition.style(name_10, map[name_10], priority);\r\n    return transition;\r\n}\r\nfunction transition_styles(map, priority) {\r\n    return (typeof map === \"function\" ? stylesFunction$1 : stylesObject$1)(this, map, priority == null ? \"\" : priority);\r\n}\r\nd3Selection.selection.prototype.attrs = selection_attrs;\r\nd3Selection.selection.prototype.styles = selection_styles;\r\nd3Selection.selection.prototype.properties = selection_properties;\r\nd3Transition.transition.prototype.attrs = transition_attrs;\r\nd3Transition.transition.prototype.styles = transition_styles;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/utils/addD3SelectionMulti.ts\n// module id = 73\n// module chunks = 0","\"use strict\";\r\n/**\r\n * Copyright 2014-present Palantir Technologies\r\n * @license MIT\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar d3Ease = require(\"d3-ease\");\r\nvar coerceD3_1 = require(\"../utils/coerceD3\");\r\nvar makeEnum_1 = require(\"../utils/makeEnum\");\r\nvar EASE_NAME_MAPPING = {\r\n    linear: d3Ease.easeLinear,\r\n    quad: d3Ease.easeQuad,\r\n    quadIn: d3Ease.easeQuadIn,\r\n    quadOut: d3Ease.easeQuadOut,\r\n    quadInOut: d3Ease.easeQuadInOut,\r\n    cubic: d3Ease.easeCubic,\r\n    cubicIn: d3Ease.easeCubicIn,\r\n    cubicOut: d3Ease.easeCubicOut,\r\n    cubicInOut: d3Ease.easeCubicInOut,\r\n    poly: d3Ease.easePoly,\r\n    polyIn: d3Ease.easePolyIn,\r\n    polyOut: d3Ease.easePolyOut,\r\n    polyInOut: d3Ease.easePolyInOut,\r\n    sin: d3Ease.easeSin,\r\n    sinIn: d3Ease.easeSinIn,\r\n    sinOut: d3Ease.easeSinOut,\r\n    sinInOut: d3Ease.easeSinInOut,\r\n    exp: d3Ease.easeExp,\r\n    expIn: d3Ease.easeExpIn,\r\n    expOut: d3Ease.easeExpOut,\r\n    expInOut: d3Ease.easeExpInOut,\r\n    circle: d3Ease.easeCircle,\r\n    circleIn: d3Ease.easeCircleIn,\r\n    circleOut: d3Ease.easeCircleOut,\r\n    circleInOut: d3Ease.easeCircleInOut,\r\n    bounce: d3Ease.easeBounce,\r\n    bounceIn: d3Ease.easeBounceIn,\r\n    bounceOut: d3Ease.easeBounceOut,\r\n    bounceInOut: d3Ease.easeBounceInOut,\r\n    back: d3Ease.easeBack,\r\n    backIn: d3Ease.easeBackIn,\r\n    backOut: d3Ease.easeBackOut,\r\n    backInOut: d3Ease.easeBackInOut,\r\n    elastic: d3Ease.easeElastic,\r\n    elasticIn: d3Ease.easeElasticIn,\r\n    elasticOut: d3Ease.easeElasticOut,\r\n    elasticInOut: d3Ease.easeElasticInOut,\r\n};\r\nexports.EaseName = makeEnum_1.makeEnum([\r\n    \"linear\",\r\n    \"quad\",\r\n    \"quadIn\",\r\n    \"quadOut\",\r\n    \"quadInOut\",\r\n    \"cubic\",\r\n    \"cubicIn\",\r\n    \"cubicOut\",\r\n    \"cubicInOut\",\r\n    \"poly\",\r\n    \"polyIn\",\r\n    \"polyOut\",\r\n    \"polyInOut\",\r\n    \"sin\",\r\n    \"sinIn\",\r\n    \"sinOut\",\r\n    \"sinInOut\",\r\n    \"exp\",\r\n    \"expIn\",\r\n    \"expOut\",\r\n    \"expInOut\",\r\n    \"circle\",\r\n    \"circleIn\",\r\n    \"circleOut\",\r\n    \"circleInOut\",\r\n    \"bounce\",\r\n    \"bounceIn\",\r\n    \"bounceOut\",\r\n    \"bounceInOut\",\r\n    \"back\",\r\n    \"backIn\",\r\n    \"backOut\",\r\n    \"backInOut\",\r\n    \"elastic\",\r\n    \"elasticIn\",\r\n    \"elasticOut\",\r\n    \"elasticInOut\",\r\n]);\r\n/**\r\n * An Animator with easing and configurable durations and delays.\r\n */\r\nvar Easing = /** @class */ (function () {\r\n    /**\r\n     * Constructs the default animator\r\n     *\r\n     * @constructor\r\n     */\r\n    function Easing() {\r\n        this._startDelay = Easing._DEFAULT_START_DELAY_MILLISECONDS;\r\n        this._stepDuration = Easing._DEFAULT_STEP_DURATION_MILLISECONDS;\r\n        this._stepDelay = Easing._DEFAULT_ITERATIVE_DELAY_MILLISECONDS;\r\n        this._maxTotalDuration = Easing._DEFAULT_MAX_TOTAL_DURATION_MILLISECONDS;\r\n        this._easingMode = Easing._DEFAULT_EASING_MODE;\r\n    }\r\n    Easing.prototype.totalTime = function (numberOfSteps) {\r\n        var adjustedIterativeDelay = this._getAdjustedIterativeDelay(numberOfSteps);\r\n        return this.startDelay() + adjustedIterativeDelay * (Math.max(numberOfSteps - 1, 0)) + this.stepDuration();\r\n    };\r\n    Easing.prototype.animate = function (selection, attrToAppliedProjector) {\r\n        var _this = this;\r\n        selection = coerceD3_1.coerceExternalD3(selection);\r\n        var numberOfSteps = selection.size();\r\n        var adjustedIterativeDelay = this._getAdjustedIterativeDelay(numberOfSteps);\r\n        return selection.transition()\r\n            .ease(this._getEaseFactory())\r\n            .duration(this.stepDuration())\r\n            .delay(function (d, i) { return _this.startDelay() + adjustedIterativeDelay * i; })\r\n            .attrs(attrToAppliedProjector);\r\n    };\r\n    Easing.prototype.startDelay = function (startDelay) {\r\n        if (startDelay == null) {\r\n            return this._startDelay;\r\n        }\r\n        else {\r\n            this._startDelay = startDelay;\r\n            return this;\r\n        }\r\n    };\r\n    Easing.prototype.stepDuration = function (stepDuration) {\r\n        if (stepDuration == null) {\r\n            return Math.min(this._stepDuration, this._maxTotalDuration);\r\n        }\r\n        else {\r\n            this._stepDuration = stepDuration;\r\n            return this;\r\n        }\r\n    };\r\n    Easing.prototype.stepDelay = function (stepDelay) {\r\n        if (stepDelay == null) {\r\n            return this._stepDelay;\r\n        }\r\n        else {\r\n            this._stepDelay = stepDelay;\r\n            return this;\r\n        }\r\n    };\r\n    Easing.prototype.maxTotalDuration = function (maxTotalDuration) {\r\n        if (maxTotalDuration == null) {\r\n            return this._maxTotalDuration;\r\n        }\r\n        else {\r\n            this._maxTotalDuration = maxTotalDuration;\r\n            return this;\r\n        }\r\n    };\r\n    Easing.prototype.easingMode = function (easingMode) {\r\n        if (easingMode == null) {\r\n            return this._easingMode;\r\n        }\r\n        else {\r\n            this._easingMode = easingMode;\r\n            return this;\r\n        }\r\n    };\r\n    Easing.prototype._getEaseFactory = function () {\r\n        var ease = this.easingMode();\r\n        if (typeof ease === \"string\") {\r\n            var maybeEaseFunction = EASE_NAME_MAPPING[ease];\r\n            if (maybeEaseFunction == null) {\r\n                // oops; name is wrong - default to linear instead\r\n                return EASE_NAME_MAPPING[\"linear\"];\r\n            }\r\n            else {\r\n                return maybeEaseFunction;\r\n            }\r\n        }\r\n        else {\r\n            return ease;\r\n        }\r\n    };\r\n    /**\r\n     * Adjust the iterative delay, such that it takes into account the maxTotalDuration constraint\r\n     */\r\n    Easing.prototype._getAdjustedIterativeDelay = function (numberOfSteps) {\r\n        var stepStartTimeInterval = this.maxTotalDuration() - this.stepDuration();\r\n        stepStartTimeInterval = Math.max(stepStartTimeInterval, 0);\r\n        var maxPossibleIterativeDelay = stepStartTimeInterval / Math.max(numberOfSteps - 1, 1);\r\n        return Math.min(this.stepDelay(), maxPossibleIterativeDelay);\r\n    };\r\n    /**\r\n     * The default starting delay of the animation in milliseconds\r\n     */\r\n    Easing._DEFAULT_START_DELAY_MILLISECONDS = 0;\r\n    /**\r\n     * The default duration of one animation step in milliseconds\r\n     */\r\n    Easing._DEFAULT_STEP_DURATION_MILLISECONDS = 300;\r\n    /**\r\n     * The default maximum start delay between each step of an animation\r\n     */\r\n    Easing._DEFAULT_ITERATIVE_DELAY_MILLISECONDS = 15;\r\n    /**\r\n     * The default maximum total animation duration\r\n     */\r\n    Easing._DEFAULT_MAX_TOTAL_DURATION_MILLISECONDS = Infinity;\r\n    /**\r\n     * The default easing of the animation\r\n     */\r\n    Easing._DEFAULT_EASING_MODE = \"expOut\";\r\n    return Easing;\r\n}());\r\nexports.Easing = Easing;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/animators/easingAnimator.ts\n// module id = 74\n// module chunks = 0","\"use strict\";\r\n/**\r\n * Copyright 2014-present Palantir Technologies\r\n * @license MIT\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar coerceD3_1 = require(\"../utils/coerceD3\");\r\n/**\r\n * An animator implementation with no animation. The attributes are\r\n * immediately set on the selection.\r\n */\r\nvar Null = /** @class */ (function () {\r\n    function Null() {\r\n    }\r\n    Null.prototype.totalTime = function (selection) {\r\n        return 0;\r\n    };\r\n    Null.prototype.animate = function (selection, attrToAppliedProjector) {\r\n        selection = coerceD3_1.coerceExternalD3(selection);\r\n        return selection.attrs(attrToAppliedProjector);\r\n    };\r\n    return Null;\r\n}());\r\nexports.Null = Null;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/animators/nullAnimator.ts\n// module id = 75\n// module chunks = 0","\"use strict\";\r\n/**\r\n * Copyright 2014-present Palantir Technologies\r\n * @license MIT\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\nvar d3 = require(\"d3\");\r\nvar Typesettable = require(\"typesettable\");\r\nvar component_1 = require(\"../components/component\");\r\nvar Utils = require(\"../utils\");\r\nvar axis_1 = require(\"./axis\");\r\nvar Category = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Category, _super);\r\n    /**\r\n     * Constructs a Category Axis.\r\n     *\r\n     * A Category Axis is a visual representation of a Category Scale.\r\n     *\r\n     * @constructor\r\n     * @param {Scales.Category} scale\r\n     * @param {AxisOrientation} [orientation=\"bottom\"] Orientation of this Category Axis.\r\n     */\r\n    function Category(scale, orientation) {\r\n        if (orientation === void 0) { orientation = \"bottom\"; }\r\n        var _this = _super.call(this, scale, orientation) || this;\r\n        /**\r\n         * The rotation angle of tick label text. Only 0, 90, -90 are supported\r\n         */\r\n        _this._tickLabelAngle = 0;\r\n        /**\r\n         * The shear angle of the tick label text. Only values -80 <= x <= 80 are supported\r\n         */\r\n        _this._tickLabelShearAngle = 0;\r\n        _this.addClass(\"category-axis\");\r\n        return _this;\r\n    }\r\n    Object.defineProperty(Category.prototype, \"_wrapper\", {\r\n        /**\r\n         * A Wrapper configured according to the other properties on this axis.\r\n         * @returns {Typesettable.Wrapper}\r\n         */\r\n        get: function () {\r\n            var wrapper = new Typesettable.Wrapper();\r\n            if (this._tickLabelMaxLines != null) {\r\n                wrapper.maxLines(this._tickLabelMaxLines);\r\n            }\r\n            return wrapper;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Category.prototype, \"_writer\", {\r\n        /**\r\n         * A Writer attached to this measurer and wrapper.\r\n         * @returns {Typesettable.Writer}\r\n         */\r\n        get: function () {\r\n            return new Typesettable.Writer(this._measurer, this._typesetterContext, this._wrapper);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Category.prototype._setup = function () {\r\n        _super.prototype._setup.call(this);\r\n        this._typesetterContext = new Typesettable.SvgContext(this._tickLabelContainer.node());\r\n        this._measurer = new Typesettable.CacheMeasurer(this._typesetterContext);\r\n    };\r\n    Category.prototype._rescale = function () {\r\n        return this.redraw();\r\n    };\r\n    /**\r\n     * Compute space requirements for this Category Axis. Category Axes have two primary space requirements:\r\n     *\r\n     * 1) width/height needed by the tick lines (including annotations, padding, and margins).\r\n     * 2) width/height needed by the tick text.\r\n     *\r\n     * We requested space is the sum of the lines and text.\r\n     * @param offeredWidth\r\n     * @param offeredHeight\r\n     * @returns {any}\r\n     */\r\n    Category.prototype.requestedSpace = function (offeredWidth, offeredHeight) {\r\n        var widthRequiredByTicks = this.isHorizontal() ? 0 : this._tickSpaceRequired() + this.margin();\r\n        var heightRequiredByTicks = this.isHorizontal() ? this._tickSpaceRequired() + this.margin() : 0;\r\n        if (this._scale.domain().length === 0) {\r\n            return {\r\n                minWidth: 0,\r\n                minHeight: 0,\r\n            };\r\n        }\r\n        if (this.annotationsEnabled()) {\r\n            var tierTotalHeight = this._annotationTierHeight() * this.annotationTierCount();\r\n            if (this.isHorizontal()) {\r\n                heightRequiredByTicks += tierTotalHeight;\r\n            }\r\n            else {\r\n                widthRequiredByTicks += tierTotalHeight;\r\n            }\r\n        }\r\n        var measureResult = this._measureTickLabels(offeredWidth, offeredHeight);\r\n        return {\r\n            minWidth: measureResult.usedWidth + widthRequiredByTicks,\r\n            minHeight: measureResult.usedHeight + heightRequiredByTicks,\r\n        };\r\n    };\r\n    Category.prototype._coreSize = function () {\r\n        var relevantDimension = this.isHorizontal() ? this.height() : this.width();\r\n        var relevantRequestedSpaceDimension = this.isHorizontal() ?\r\n            this.requestedSpace(this.width(), this.height()).minHeight :\r\n            this.requestedSpace(this.width(), this.height()).minWidth;\r\n        var marginAndAnnotationSize = this.margin() + this._annotationTierHeight();\r\n        var axisHeightWithoutMargin = relevantRequestedSpaceDimension - marginAndAnnotationSize;\r\n        return Math.min(axisHeightWithoutMargin, relevantDimension);\r\n    };\r\n    Category.prototype._getTickValues = function () {\r\n        return this.getDownsampleInfo().domain;\r\n    };\r\n    Category.prototype._sizeFromOffer = function (availableWidth, availableHeight) {\r\n        // hack: continue using Component._sizeFromOffer to prevent angled axis ticks\r\n        // from overflowing their container\r\n        return component_1.Component.prototype._sizeFromOffer.call(this, availableWidth, availableHeight);\r\n    };\r\n    /**\r\n     * Take the scale and drop ticks at regular intervals such that the resultant ticks are all a reasonable minimum\r\n     * distance apart. Return the resultant ticks to render, as well as the new stepWidth between them.\r\n     *\r\n     * @param {Scales.Category} scale - The scale being downsampled. Defaults to this Axis' scale.\r\n     * @return {DownsampleInfo} an object holding the resultant domain and new stepWidth.\r\n     */\r\n    Category.prototype.getDownsampleInfo = function (scale, domain) {\r\n        if (scale === void 0) { scale = this._scale; }\r\n        if (domain === void 0) { domain = scale.invertRange(); }\r\n        // account for how shearing tightens the space between vertically oriented ticks\r\n        var shearFactor = this._tickLabelAngle === 0 ? 1 : 1 / Math.cos(this._tickLabelShearAngle / 180 * Math.PI);\r\n        var shearedMinimumWidth = Category._MINIMUM_WIDTH_PER_LABEL_PX * shearFactor;\r\n        var downsampleRatio = Math.ceil(shearedMinimumWidth / scale.stepWidth());\r\n        return {\r\n            domain: domain.filter(function (d, i) { return i % downsampleRatio === 0; }),\r\n            stepWidth: downsampleRatio * scale.stepWidth(),\r\n        };\r\n    };\r\n    Category.prototype.tickLabelAngle = function (angle) {\r\n        if (angle == null) {\r\n            return this._tickLabelAngle;\r\n        }\r\n        if (angle !== 0 && angle !== 90 && angle !== -90) {\r\n            throw new Error(\"Angle \" + angle + \" not supported; only 0, 90, and -90 are valid values\");\r\n        }\r\n        this._tickLabelAngle = angle;\r\n        this.redraw();\r\n        return this;\r\n    };\r\n    Category.prototype.tickLabelShearAngle = function (angle) {\r\n        if (angle == null) {\r\n            return this._tickLabelShearAngle;\r\n        }\r\n        if (angle < -80 || angle > 80) {\r\n            throw new Error(\"Angle \" + angle + \" not supported; Must be between [-80, 80]\");\r\n        }\r\n        this._tickLabelShearAngle = angle;\r\n        this.redraw();\r\n        return this;\r\n    };\r\n    Category.prototype.tickLabelMaxWidth = function (maxWidth) {\r\n        // allow user to un-set tickLabelMaxWidth by passing in null or undefined explicitly\r\n        if (arguments.length === 0) {\r\n            return this._tickLabelMaxWidth;\r\n        }\r\n        this._tickLabelMaxWidth = maxWidth;\r\n        this.redraw();\r\n        return this;\r\n    };\r\n    Category.prototype.tickLabelMaxLines = function (maxLines) {\r\n        // allow user to un-set tickLabelMaxLines by passing in null or undefined explicitly\r\n        if (arguments.length === 0) {\r\n            return this._tickLabelMaxLines;\r\n        }\r\n        this._tickLabelMaxLines = maxLines;\r\n        this.redraw();\r\n        return this;\r\n    };\r\n    /**\r\n     * Return the space required by the ticks, padding included.\r\n     * @returns {number}\r\n     */\r\n    Category.prototype._tickSpaceRequired = function () {\r\n        return this._maxLabelTickLength() + this.tickLabelPadding();\r\n    };\r\n    /**\r\n     * Write ticks to the DOM.\r\n     * @param {Plottable.Scales.Category} scale The scale this axis is representing.\r\n     * @param {d3.Selection} ticks The tick elements to write.\r\n     */\r\n    Category.prototype._drawTicks = function (stepWidth, ticks) {\r\n        var self = this;\r\n        var xAlign;\r\n        var yAlign;\r\n        switch (this.tickLabelAngle()) {\r\n            case 0:\r\n                xAlign = { left: \"right\", right: \"left\", top: \"center\", bottom: \"center\" };\r\n                yAlign = { left: \"center\", right: \"center\", top: \"bottom\", bottom: \"top\" };\r\n                break;\r\n            case 90:\r\n                xAlign = { left: \"center\", right: \"center\", top: \"right\", bottom: \"left\" };\r\n                yAlign = { left: \"top\", right: \"bottom\", top: \"center\", bottom: \"center\" };\r\n                break;\r\n            case -90:\r\n                xAlign = { left: \"center\", right: \"center\", top: \"left\", bottom: \"right\" };\r\n                yAlign = { left: \"bottom\", right: \"top\", top: \"center\", bottom: \"center\" };\r\n                break;\r\n        }\r\n        ticks.each(function (d) {\r\n            var container = d3.select(this);\r\n            var width = self.isHorizontal() ? stepWidth : self.width() - self._tickSpaceRequired();\r\n            var height = self.isHorizontal() ? self.height() - self._tickSpaceRequired() : stepWidth;\r\n            var writeOptions = {\r\n                xAlign: xAlign[self.orientation()],\r\n                yAlign: yAlign[self.orientation()],\r\n                textRotation: self.tickLabelAngle(),\r\n                textShear: self.tickLabelShearAngle(),\r\n            };\r\n            if (self._tickLabelMaxWidth != null) {\r\n                // for left-oriented axes, we must move the ticks by the amount we've cut off in order to keep the text\r\n                // aligned with the side of the ticks\r\n                if (self.orientation() === \"left\" && width > self._tickLabelMaxWidth) {\r\n                    var cutOffWidth = width - self._tickLabelMaxWidth;\r\n                    var newTransform = container.attr(\"transform\") + \" translate(\" + cutOffWidth + \", 0)\";\r\n                    container.attr(\"transform\", newTransform);\r\n                }\r\n                width = Math.min(width, self._tickLabelMaxWidth);\r\n            }\r\n            self._writer.write(self.formatter()(d), width, height, writeOptions, container.node());\r\n        });\r\n    };\r\n    /**\r\n     * Measures the size of the tick labels without making any (permanent) DOM changes.\r\n     *\r\n     * @param {number} axisWidth Width available for this axis.\r\n     * @param {number} axisHeight Height available for this axis.\r\n     * @param {Plottable.Scales.Category} scale The scale this axis is representing.\r\n     * @param {string[]} ticks The strings that will be printed on the ticks.\r\n     */\r\n    Category.prototype._measureTickLabels = function (axisWidth, axisHeight) {\r\n        var _this = this;\r\n        var thisScale = this._scale;\r\n        // set up a test scale to simulate rendering ticks with the given width and height.\r\n        var scale = thisScale.cloneWithoutProviders()\r\n            .range([0, this.isHorizontal() ? axisWidth : axisHeight]);\r\n        var _a = this.getDownsampleInfo(scale), domain = _a.domain, stepWidth = _a.stepWidth;\r\n        // HACKHACK: https://github.com/palantir/svg-typewriter/issues/25\r\n        // the width (x-axis specific) available to a single tick label.\r\n        var width = axisWidth - this._tickSpaceRequired(); // default for left/right\r\n        if (this.isHorizontal()) {\r\n            width = stepWidth; // defaults to the band width\r\n            if (this._tickLabelAngle !== 0) {\r\n                width = axisHeight - this._tickSpaceRequired(); // use the axis height\r\n            }\r\n            // HACKHACK: Wrapper fails under negative circumstances\r\n            width = Math.max(width, 0);\r\n        }\r\n        // HACKHACK: https://github.com/palantir/svg-typewriter/issues/25\r\n        // the height (y-axis specific) available to a single tick label.\r\n        var height = stepWidth; // default for left/right\r\n        if (this.isHorizontal()) {\r\n            height = axisHeight - this._tickSpaceRequired();\r\n            if (this._tickLabelAngle !== 0) {\r\n                height = axisWidth - this._tickSpaceRequired();\r\n            }\r\n            // HACKHACK: Wrapper fails under negative circumstances\r\n            height = Math.max(height, 0);\r\n        }\r\n        if (this._tickLabelMaxWidth != null) {\r\n            width = Math.min(width, this._tickLabelMaxWidth);\r\n        }\r\n        var wrappingResults = domain.map(function (s) {\r\n            return _this._wrapper.wrap(_this.formatter()(s), _this._measurer, width, height);\r\n        });\r\n        // HACKHACK: https://github.com/palantir/svg-typewriter/issues/25\r\n        var widthFn = (this.isHorizontal() && this._tickLabelAngle === 0) ? d3.sum : Utils.Math.max;\r\n        var heightFn = (this.isHorizontal() && this._tickLabelAngle === 0) ? Utils.Math.max : d3.sum;\r\n        var usedWidth = widthFn(wrappingResults, function (t) { return _this._measurer.measure(t.wrappedText).width; }, 0);\r\n        var usedHeight = heightFn(wrappingResults, function (t) { return _this._measurer.measure(t.wrappedText).height; }, 0);\r\n        // If the tick labels are rotated, reverse usedWidth and usedHeight\r\n        // HACKHACK: https://github.com/palantir/svg-typewriter/issues/25\r\n        if (this._tickLabelAngle !== 0) {\r\n            _b = [usedHeight, usedWidth], usedWidth = _b[0], usedHeight = _b[1];\r\n        }\r\n        return {\r\n            usedWidth: usedWidth,\r\n            usedHeight: usedHeight,\r\n        };\r\n        var _b;\r\n    };\r\n    Category.prototype.renderImmediately = function () {\r\n        var _this = this;\r\n        _super.prototype.renderImmediately.call(this);\r\n        var catScale = this._scale;\r\n        var _a = this.getDownsampleInfo(catScale), domain = _a.domain, stepWidth = _a.stepWidth;\r\n        // Give each tick a stepWidth of space which will partition the entire axis evenly\r\n        var availableTextSpace = stepWidth;\r\n        if (this.isHorizontal() && this._tickLabelMaxWidth != null) {\r\n            availableTextSpace = Math.min(availableTextSpace, this._tickLabelMaxWidth);\r\n        }\r\n        var getTickLabelTransform = function (d, i) {\r\n            // scale(d) will give the center of the band, so subtract half of the text width to get the left (top-most)\r\n            // coordinate that the tick label should be transformed to.\r\n            var tickLabelEdge = catScale.scale(d) - availableTextSpace / 2;\r\n            var x = _this.isHorizontal() ? tickLabelEdge : 0;\r\n            var y = _this.isHorizontal() ? 0 : tickLabelEdge;\r\n            return \"translate(\" + x + \",\" + y + \")\";\r\n        };\r\n        var tickLabelsUpdate = this._tickLabelContainer.selectAll(\".\" + axis_1.Axis.TICK_LABEL_CLASS).data(domain);\r\n        var tickLabels = tickLabelsUpdate\r\n            .enter()\r\n            .append(\"g\")\r\n            .classed(axis_1.Axis.TICK_LABEL_CLASS, true)\r\n            .merge(tickLabelsUpdate);\r\n        tickLabelsUpdate.exit().remove();\r\n        tickLabels.attr(\"transform\", getTickLabelTransform);\r\n        // erase all text first, then rewrite\r\n        tickLabels.text(\"\");\r\n        this._drawTicks(stepWidth, tickLabels);\r\n        var xTranslate = this.orientation() === \"right\" ? this._tickSpaceRequired() : 0;\r\n        var yTranslate = this.orientation() === \"bottom\" ? this._tickSpaceRequired() : 0;\r\n        this._tickLabelContainer.attr(\"transform\", \"translate(\" + xTranslate + \",\" + yTranslate + \")\");\r\n        // hide ticks and labels that overflow the axis\r\n        this._showAllTickMarks();\r\n        this._showAllTickLabels();\r\n        this._hideTickMarksWithoutLabel();\r\n        return this;\r\n    };\r\n    Category.prototype.computeLayout = function (origin, availableWidth, availableHeight) {\r\n        _super.prototype.computeLayout.call(this, origin, availableWidth, availableHeight);\r\n        if (!this.isHorizontal()) {\r\n            this._scale.range([0, this.height()]);\r\n        }\r\n        return this;\r\n    };\r\n    Category.prototype.invalidateCache = function () {\r\n        _super.prototype.invalidateCache.call(this);\r\n        this._measurer.reset();\r\n    };\r\n    /**\r\n     * How many pixels to give labels at minimum before downsampling takes effect.\r\n     */\r\n    Category._MINIMUM_WIDTH_PER_LABEL_PX = 15;\r\n    return Category;\r\n}(axis_1.Axis));\r\nexports.Category = Category;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/axes/categoryAxis.ts\n// module id = 76\n// module chunks = 0","\"use strict\";\r\n/**\r\n * Copyright 2014-present Palantir Technologies\r\n * @license MIT\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\nvar d3 = require(\"d3\");\r\nvar Typesettable = require(\"typesettable\");\r\nvar Formatters = require(\"../core/formatters\");\r\nvar Utils = require(\"../utils\");\r\nvar axis_1 = require(\"./axis\");\r\nvar Numeric = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Numeric, _super);\r\n    /**\r\n     * Constructs a Numeric Axis.\r\n     *\r\n     * A Numeric Axis is a visual representation of a QuantitativeScale.\r\n     *\r\n     * @constructor\r\n     * @param {QuantitativeScale} scale\r\n     * @param {AxisOrientation} orientation Orientation of this Numeric Axis.\r\n     */\r\n    function Numeric(scale, orientation) {\r\n        var _this = _super.call(this, scale, orientation) || this;\r\n        _this._tickLabelPositioning = \"center\";\r\n        _this._usesTextWidthApproximation = false;\r\n        _this.formatter(Formatters.general());\r\n        return _this;\r\n    }\r\n    Numeric.prototype._setup = function () {\r\n        _super.prototype._setup.call(this);\r\n        var context = new Typesettable.SvgContext(this._tickLabelContainer.node(), axis_1.Axis.TICK_LABEL_CLASS);\r\n        this._measurer = new Typesettable.CacheMeasurer(context);\r\n        this._wrapper = new Typesettable.Wrapper().maxLines(1);\r\n    };\r\n    Numeric.prototype._computeWidth = function () {\r\n        var maxTextWidth = this._usesTextWidthApproximation ? this._computeApproximateTextWidth() : this._computeExactTextWidth();\r\n        if (this._tickLabelPositioning === \"center\") {\r\n            return this._maxLabelTickLength() + this.tickLabelPadding() + maxTextWidth;\r\n        }\r\n        else {\r\n            return Math.max(this._maxLabelTickLength(), this.tickLabelPadding() + maxTextWidth);\r\n        }\r\n    };\r\n    Numeric.prototype._computeExactTextWidth = function () {\r\n        var _this = this;\r\n        var tickValues = this._getTickValues();\r\n        var textLengths = tickValues.map(function (v) {\r\n            var formattedValue = _this.formatter()(v);\r\n            return _this._measurer.measure(formattedValue).width;\r\n        });\r\n        return Utils.Math.max(textLengths, 0);\r\n    };\r\n    Numeric.prototype._computeApproximateTextWidth = function () {\r\n        var _this = this;\r\n        var tickValues = this._getTickValues();\r\n        var mWidth = this._measurer.measure(\"M\").width;\r\n        var textLengths = tickValues.map(function (v) {\r\n            var formattedValue = _this.formatter()(v);\r\n            return formattedValue.length * mWidth;\r\n        });\r\n        return Utils.Math.max(textLengths, 0);\r\n    };\r\n    Numeric.prototype._computeHeight = function () {\r\n        var textHeight = this._measurer.measure().height;\r\n        if (this._tickLabelPositioning === \"center\") {\r\n            return this._maxLabelTickLength() + this.tickLabelPadding() + textHeight;\r\n        }\r\n        else {\r\n            return Math.max(this._maxLabelTickLength(), this.tickLabelPadding() + textHeight);\r\n        }\r\n    };\r\n    Numeric.prototype._getTickValues = function () {\r\n        var scale = this._scale;\r\n        var domain = scale.domain();\r\n        var min = domain[0] <= domain[1] ? domain[0] : domain[1];\r\n        var max = domain[0] >= domain[1] ? domain[0] : domain[1];\r\n        return scale.ticks().filter(function (i) { return i >= min && i <= max; });\r\n    };\r\n    Numeric.prototype._rescale = function () {\r\n        if (!this._isSetup) {\r\n            return;\r\n        }\r\n        if (!this.isHorizontal()) {\r\n            var reComputedWidth = this._computeWidth();\r\n            if (reComputedWidth > this.width() || reComputedWidth < (this.width() - this.margin())) {\r\n                this.redraw();\r\n                return;\r\n            }\r\n        }\r\n        this.render();\r\n    };\r\n    Numeric.prototype.renderImmediately = function () {\r\n        var _this = this;\r\n        _super.prototype.renderImmediately.call(this);\r\n        var tickLabelAttrHash = {\r\n            x: 0,\r\n            y: 0,\r\n            dx: \"0em\",\r\n            dy: \"0.3em\",\r\n        };\r\n        var tickMarkLength = this._maxLabelTickLength();\r\n        var tickLabelPadding = this.tickLabelPadding();\r\n        var tickLabelTextAnchor = \"middle\";\r\n        var labelGroupTransformX = 0;\r\n        var labelGroupTransformY = 0;\r\n        var labelGroupShiftX = 0;\r\n        var labelGroupShiftY = 0;\r\n        if (this.isHorizontal()) {\r\n            switch (this._tickLabelPositioning) {\r\n                case \"left\":\r\n                    tickLabelTextAnchor = \"end\";\r\n                    labelGroupTransformX = -tickLabelPadding;\r\n                    labelGroupShiftY = tickLabelPadding;\r\n                    break;\r\n                case \"center\":\r\n                    labelGroupShiftY = tickMarkLength + tickLabelPadding;\r\n                    break;\r\n                case \"right\":\r\n                    tickLabelTextAnchor = \"start\";\r\n                    labelGroupTransformX = tickLabelPadding;\r\n                    labelGroupShiftY = tickLabelPadding;\r\n                    break;\r\n            }\r\n        }\r\n        else {\r\n            switch (this._tickLabelPositioning) {\r\n                case \"top\":\r\n                    tickLabelAttrHash[\"dy\"] = \"-0.3em\";\r\n                    labelGroupShiftX = tickLabelPadding;\r\n                    labelGroupTransformY = -tickLabelPadding;\r\n                    break;\r\n                case \"center\":\r\n                    labelGroupShiftX = tickMarkLength + tickLabelPadding;\r\n                    break;\r\n                case \"bottom\":\r\n                    tickLabelAttrHash[\"dy\"] = \"1em\";\r\n                    labelGroupShiftX = tickLabelPadding;\r\n                    labelGroupTransformY = tickLabelPadding;\r\n                    break;\r\n            }\r\n        }\r\n        var tickMarkAttrHash = this._generateTickMarkAttrHash();\r\n        switch (this.orientation()) {\r\n            case \"bottom\":\r\n                tickLabelAttrHash[\"x\"] = tickMarkAttrHash[\"x1\"];\r\n                tickLabelAttrHash[\"dy\"] = \"0.95em\";\r\n                labelGroupTransformY = tickMarkAttrHash[\"y1\"] + labelGroupShiftY;\r\n                break;\r\n            case \"top\":\r\n                tickLabelAttrHash[\"x\"] = tickMarkAttrHash[\"x1\"];\r\n                tickLabelAttrHash[\"dy\"] = \"-.25em\";\r\n                labelGroupTransformY = tickMarkAttrHash[\"y1\"] - labelGroupShiftY;\r\n                break;\r\n            case \"left\":\r\n                tickLabelTextAnchor = \"end\";\r\n                labelGroupTransformX = tickMarkAttrHash[\"x1\"] - labelGroupShiftX;\r\n                tickLabelAttrHash[\"y\"] = tickMarkAttrHash[\"y1\"];\r\n                break;\r\n            case \"right\":\r\n                tickLabelTextAnchor = \"start\";\r\n                labelGroupTransformX = tickMarkAttrHash[\"x1\"] + labelGroupShiftX;\r\n                tickLabelAttrHash[\"y\"] = tickMarkAttrHash[\"y1\"];\r\n                break;\r\n        }\r\n        var tickLabelValues = this._getTickValues();\r\n        var tickLabelsUpdate = this._tickLabelContainer.selectAll(\".\" + axis_1.Axis.TICK_LABEL_CLASS).data(tickLabelValues);\r\n        tickLabelsUpdate.exit().remove();\r\n        var tickLabels = tickLabelsUpdate\r\n            .enter()\r\n            .append(\"text\")\r\n            .classed(axis_1.Axis.TICK_LABEL_CLASS, true)\r\n            .merge(tickLabelsUpdate);\r\n        tickLabels.style(\"text-anchor\", tickLabelTextAnchor)\r\n            .style(\"visibility\", \"inherit\")\r\n            .attrs(tickLabelAttrHash)\r\n            .text(function (s) { return _this.formatter()(s); });\r\n        var labelGroupTransform = \"translate(\" + labelGroupTransformX + \", \" + labelGroupTransformY + \")\";\r\n        this._tickLabelContainer.attr(\"transform\", labelGroupTransform);\r\n        this._showAllTickMarks();\r\n        if (!this.showEndTickLabels()) {\r\n            this._hideEndTickLabels();\r\n        }\r\n        this._hideOverflowingTickLabels();\r\n        this._hideOverlappingTickLabels();\r\n        if (this._tickLabelPositioning !== \"center\") {\r\n            this._hideTickMarksWithoutLabel();\r\n        }\r\n        return this;\r\n    };\r\n    Numeric.prototype.tickLabelPosition = function (position) {\r\n        if (position == null) {\r\n            return this._tickLabelPositioning;\r\n        }\r\n        else {\r\n            var positionLC = position.toLowerCase();\r\n            if (this.isHorizontal()) {\r\n                if (!(positionLC === \"left\" || positionLC === \"center\" || positionLC === \"right\")) {\r\n                    throw new Error(positionLC + \" is not a valid tick label position for a horizontal NumericAxis\");\r\n                }\r\n            }\r\n            else {\r\n                if (!(positionLC === \"top\" || positionLC === \"center\" || positionLC === \"bottom\")) {\r\n                    throw new Error(positionLC + \" is not a valid tick label position for a vertical NumericAxis\");\r\n                }\r\n            }\r\n            this._tickLabelPositioning = positionLC;\r\n            this.redraw();\r\n            return this;\r\n        }\r\n    };\r\n    Numeric.prototype.usesTextWidthApproximation = function (enable) {\r\n        if (enable == null) {\r\n            return this._usesTextWidthApproximation;\r\n        }\r\n        else {\r\n            this._usesTextWidthApproximation = enable;\r\n            return this;\r\n        }\r\n    };\r\n    Numeric.prototype._hideEndTickLabels = function () {\r\n        var boundingBox = this.element().node().getBoundingClientRect();\r\n        var tickLabels = this._tickLabelContainer.selectAll(\".\" + axis_1.Axis.TICK_LABEL_CLASS);\r\n        if (tickLabels.size() === 0) {\r\n            return;\r\n        }\r\n        var firstTickLabel = tickLabels.nodes()[0];\r\n        if (!Utils.DOM.clientRectInside(firstTickLabel.getBoundingClientRect(), boundingBox)) {\r\n            d3.select(firstTickLabel).style(\"visibility\", \"hidden\");\r\n        }\r\n        var lastTickLabel = tickLabels.nodes()[tickLabels.size() - 1];\r\n        if (!Utils.DOM.clientRectInside(lastTickLabel.getBoundingClientRect(), boundingBox)) {\r\n            d3.select(lastTickLabel).style(\"visibility\", \"hidden\");\r\n        }\r\n    };\r\n    Numeric.prototype._hideOverlappingTickLabels = function () {\r\n        var visibleTickLabels = this._tickLabelContainer\r\n            .selectAll(\".\" + axis_1.Axis.TICK_LABEL_CLASS)\r\n            .filter(function (d, i) {\r\n            var visibility = d3.select(this).style(\"visibility\");\r\n            return (visibility === \"inherit\") || (visibility === \"visible\");\r\n        });\r\n        var visibleTickLabelRects = visibleTickLabels.nodes().map(function (label) { return label.getBoundingClientRect(); });\r\n        var interval = 1;\r\n        while (!this._hasOverlapWithInterval(interval, visibleTickLabelRects) && interval < visibleTickLabelRects.length) {\r\n            interval += 1;\r\n        }\r\n        visibleTickLabels.each(function (d, i) {\r\n            var tickLabel = d3.select(this);\r\n            if (i % interval !== 0) {\r\n                tickLabel.style(\"visibility\", \"hidden\");\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * The method is responsible for evenly spacing the labels on the axis.\r\n     * @return test to see if taking every `interval` recrangle from `rects`\r\n     *         will result in labels not overlapping\r\n     *\r\n     * For top, bottom, left, right positioning of the thicks, we want the padding\r\n     * between the labels to be 3x, such that the label will be  `padding` distance\r\n     * from the tick and 2 * `padding` distance (or more) from the next tick:\r\n     * see https://github.com/palantir/plottable/pull/1812\r\n     */\r\n    Numeric.prototype._hasOverlapWithInterval = function (interval, rects) {\r\n        var padding = (this._tickLabelPositioning === \"center\")\r\n            ? this.tickLabelPadding()\r\n            : this.tickLabelPadding() * 3;\r\n        var rectsWithPadding = rects.map(function (rect) { return Utils.DOM.expandRect(rect, padding); });\r\n        for (var i = 0; i < rectsWithPadding.length - interval; i += interval) {\r\n            var currRect = rectsWithPadding[i];\r\n            var nextRect = rectsWithPadding[i + interval];\r\n            if (Utils.DOM.clientRectsOverlap(currRect, nextRect)) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    Numeric.prototype.invalidateCache = function () {\r\n        _super.prototype.invalidateCache.call(this);\r\n        this._measurer.reset();\r\n    };\r\n    return Numeric;\r\n}(axis_1.Axis));\r\nexports.Numeric = Numeric;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/axes/numericAxis.ts\n// module id = 77\n// module chunks = 0","\"use strict\";\r\n/**\r\n * Copyright 2014-present Palantir Technologies\r\n * @license MIT\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\nvar guideLineLayer_1 = require(\"../components/guideLineLayer\");\r\nvar Interactions = require(\"../interactions\");\r\nvar Utils = require(\"../utils\");\r\nvar DragLineLayer = /** @class */ (function (_super) {\r\n    tslib_1.__extends(DragLineLayer, _super);\r\n    function DragLineLayer(orientation) {\r\n        var _this = _super.call(this, orientation) || this;\r\n        _this._detectionRadius = 3;\r\n        _this._enabled = true;\r\n        _this.addClass(\"drag-line-layer\");\r\n        _this.addClass(\"enabled\");\r\n        _this._dragInteraction = new Interactions.Drag();\r\n        _this._dragInteraction.attachTo(_this);\r\n        var onLine = function (p) {\r\n            return (_this._isVertical() &&\r\n                _this.pixelPosition() - _this.detectionRadius() <= p.x &&\r\n                p.x <= _this.pixelPosition() + _this.detectionRadius()) ||\r\n                (!_this._isVertical() &&\r\n                    _this.pixelPosition() - _this.detectionRadius() <= p.y &&\r\n                    p.y <= _this.pixelPosition() + _this.detectionRadius());\r\n        };\r\n        var dragging = false;\r\n        var interactionDragStartCallback = function (start) {\r\n            if (onLine(start)) {\r\n                dragging = true;\r\n                _this._dragStartCallbacks.callCallbacks(_this);\r\n            }\r\n        };\r\n        _this._dragInteraction.onDragStart(interactionDragStartCallback);\r\n        var interactionDragCallback = function (start, end) {\r\n            if (dragging) {\r\n                _this._setPixelPositionWithoutChangingMode(_this._isVertical() ? end.x : end.y);\r\n                _this._dragCallbacks.callCallbacks(_this);\r\n            }\r\n        };\r\n        _this._dragInteraction.onDrag(interactionDragCallback);\r\n        var interactionDragEndCallback = function (start, end) {\r\n            if (dragging) {\r\n                dragging = false;\r\n                _this._dragEndCallbacks.callCallbacks(_this);\r\n            }\r\n        };\r\n        _this._dragInteraction.onDragEnd(interactionDragEndCallback);\r\n        _this._disconnectInteraction = function () {\r\n            _this._dragInteraction.offDragStart(interactionDragStartCallback);\r\n            _this._dragInteraction.offDrag(interactionDragCallback);\r\n            _this._dragInteraction.offDragEnd(interactionDragEndCallback);\r\n            _this._dragInteraction.detach();\r\n        };\r\n        _this._dragStartCallbacks = new Utils.CallbackSet();\r\n        _this._dragCallbacks = new Utils.CallbackSet();\r\n        _this._dragEndCallbacks = new Utils.CallbackSet();\r\n        return _this;\r\n    }\r\n    DragLineLayer.prototype._setup = function () {\r\n        _super.prototype._setup.call(this);\r\n        this._detectionEdge = this.content().append(\"line\").styles({\r\n            opacity: 0,\r\n            stroke: \"pink\",\r\n            \"pointer-events\": \"visibleStroke\",\r\n        }).classed(\"drag-edge\", true);\r\n    };\r\n    DragLineLayer.prototype.renderImmediately = function () {\r\n        _super.prototype.renderImmediately.call(this);\r\n        this._detectionEdge.attrs({\r\n            \"x1\": this._isVertical() ? this.pixelPosition() : 0,\r\n            \"y1\": this._isVertical() ? 0 : this.pixelPosition(),\r\n            \"x2\": this._isVertical() ? this.pixelPosition() : this.width(),\r\n            \"y2\": this._isVertical() ? this.height() : this.pixelPosition(),\r\n            \"stroke-width\": this._detectionRadius * 2,\r\n        });\r\n        return this;\r\n    };\r\n    DragLineLayer.prototype.detectionRadius = function (detectionRadius) {\r\n        if (detectionRadius == null) {\r\n            return this._detectionRadius;\r\n        }\r\n        if (detectionRadius < 0) {\r\n            throw new Error(\"detection radius cannot be negative.\");\r\n        }\r\n        this._detectionRadius = detectionRadius;\r\n        this.render();\r\n        return this;\r\n    };\r\n    DragLineLayer.prototype.enabled = function (enabled) {\r\n        if (enabled == null) {\r\n            return this._enabled;\r\n        }\r\n        this._enabled = enabled;\r\n        if (enabled) {\r\n            this.addClass(\"enabled\");\r\n        }\r\n        else {\r\n            this.removeClass(\"enabled\");\r\n        }\r\n        this._dragInteraction.enabled(enabled);\r\n        return this;\r\n    };\r\n    /**\r\n     * Sets the callback to be called when dragging starts.\r\n     * The callback will be passed the calling DragLineLayer.\r\n     *\r\n     * @param {DragLineCallback<D>} callback\r\n     * @returns {DragLineLayer<D>} The calling DragLineLayer.\r\n     */\r\n    DragLineLayer.prototype.onDragStart = function (callback) {\r\n        this._dragStartCallbacks.add(callback);\r\n        return this;\r\n    };\r\n    /**\r\n     * Removes a callback that would be called when dragging starts.\r\n     *\r\n     * @param {DragLineCallback<D>} callback\r\n     * @returns {DragLineLayer<D>} The calling DragLineLayer.\r\n     */\r\n    DragLineLayer.prototype.offDragStart = function (callback) {\r\n        this._dragStartCallbacks.delete(callback);\r\n        return this;\r\n    };\r\n    /**\r\n     * Sets a callback to be called during dragging.\r\n     * The callback will be passed the calling DragLineLayer.\r\n     *\r\n     * @param {DragLineCallback<D>} callback\r\n     * @returns {DragLineLayer<D>} The calling DragLineLayer.\r\n     */\r\n    DragLineLayer.prototype.onDrag = function (callback) {\r\n        this._dragCallbacks.add(callback);\r\n        return this;\r\n    };\r\n    /**\r\n     * Removes a callback that would be called during dragging.\r\n     *\r\n     * @param {DragLineCallback<D>} callback\r\n     * @returns {DragLineLayer<D>} The calling DragLineLayer.\r\n     */\r\n    DragLineLayer.prototype.offDrag = function (callback) {\r\n        this._dragCallbacks.delete(callback);\r\n        return this;\r\n    };\r\n    /**\r\n     * Sets a callback to be called when dragging ends.\r\n     * The callback will be passed the calling DragLineLayer.\r\n     *\r\n     * @param {DragLineCallback<D>} callback\r\n     * @returns {DragLineLayer<D>} The calling DragLineLayer.\r\n     */\r\n    DragLineLayer.prototype.onDragEnd = function (callback) {\r\n        this._dragEndCallbacks.add(callback);\r\n        return this;\r\n    };\r\n    /**\r\n     * Removes a callback that would be called when dragging ends.\r\n     *\r\n     * @param {DragLineCallback<D>} callback\r\n     * @returns {DragLineLayer<D>} The calling DragLineLayer.\r\n     */\r\n    DragLineLayer.prototype.offDragEnd = function (callback) {\r\n        this._dragEndCallbacks.delete(callback);\r\n        return this;\r\n    };\r\n    DragLineLayer.prototype.destroy = function () {\r\n        var _this = this;\r\n        _super.prototype.destroy.call(this);\r\n        this._dragStartCallbacks.forEach(function (callback) { return _this._dragStartCallbacks.delete(callback); });\r\n        this._dragCallbacks.forEach(function (callback) { return _this._dragCallbacks.delete(callback); });\r\n        this._dragEndCallbacks.forEach(function (callback) { return _this._dragEndCallbacks.delete(callback); });\r\n        this._disconnectInteraction();\r\n    };\r\n    return DragLineLayer;\r\n}(guideLineLayer_1.GuideLineLayer));\r\nexports.DragLineLayer = DragLineLayer;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/dragLineLayer.ts\n// module id = 78\n// module chunks = 0","\"use strict\";\r\n/**\r\n * Copyright 2014-present Palantir Technologies\r\n * @license MIT\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\nvar component_1 = require(\"./component\");\r\n/**\r\n * Returns next grid position based on tick value\r\n *\r\n * @param scale Scale used by the grid\r\n * @param between Value denoting whether the grid renders between ticks or on ticks\r\n * @param orderedTicks All ticks in order. only needed when rendering lines between ticks\r\n */\r\nfunction gridPositionFactory(scale, between, orderedTicks) {\r\n    var previousTick = {};\r\n    if (orderedTicks !== undefined) {\r\n        for (var i = 0; i < orderedTicks.length; i++) {\r\n            var previous = orderedTicks[i - 1];\r\n            var current = orderedTicks[i];\r\n            previousTick[current] = previous;\r\n        }\r\n    }\r\n    return function (tickVal) {\r\n        var position = scale.scale(tickVal);\r\n        if (!between) {\r\n            return position;\r\n        }\r\n        var gridPosition;\r\n        var previousPosition = previousTick[tickVal] === undefined\r\n            ? undefined\r\n            : scale.scale(previousTick[tickVal]);\r\n        if (previousPosition !== undefined) {\r\n            gridPosition = previousPosition + (position - previousPosition) / 2;\r\n        }\r\n        return gridPosition;\r\n    };\r\n}\r\nvar Gridlines = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Gridlines, _super);\r\n    /**\r\n     * @constructor\r\n     * @param {Scale} xScale The scale to base the x gridlines on. Pass null if no gridlines are desired.\r\n     * @param {Scale} yScale The scale to base the y gridlines on. Pass null if no gridlines are desired.\r\n     */\r\n    function Gridlines(xScale, yScale) {\r\n        var _this = _super.call(this) || this;\r\n        _this.addClass(\"gridlines\");\r\n        _this._xScale = xScale;\r\n        _this._yScale = yScale;\r\n        _this._renderCallback = function (scale) { return _this.render(); };\r\n        if (_this._xScale) {\r\n            _this._xScale.onUpdate(_this._renderCallback);\r\n        }\r\n        if (_this._yScale) {\r\n            _this._yScale.onUpdate(_this._renderCallback);\r\n        }\r\n        return _this;\r\n    }\r\n    Gridlines.prototype.betweenX = function (_betweenX) {\r\n        if (_betweenX === undefined) {\r\n            return this._betweenX;\r\n        }\r\n        if (_betweenX !== this._betweenX) {\r\n            this._betweenX = _betweenX;\r\n            this.render();\r\n        }\r\n        return this;\r\n    };\r\n    Gridlines.prototype.betweenY = function (_betweenY) {\r\n        if (_betweenY === undefined) {\r\n            return this._betweenY;\r\n        }\r\n        if (_betweenY !== this._betweenY) {\r\n            this._betweenY = _betweenY;\r\n            this.render();\r\n        }\r\n        return this;\r\n    };\r\n    Gridlines.prototype.destroy = function () {\r\n        _super.prototype.destroy.call(this);\r\n        if (this._xScale) {\r\n            this._xScale.offUpdate(this._renderCallback);\r\n        }\r\n        if (this._yScale) {\r\n            this._yScale.offUpdate(this._renderCallback);\r\n        }\r\n        return this;\r\n    };\r\n    Gridlines.prototype._setup = function () {\r\n        _super.prototype._setup.call(this);\r\n        this._xLinesContainer = this.content().append(\"g\").classed(\"x-gridlines\", true);\r\n        this._yLinesContainer = this.content().append(\"g\").classed(\"y-gridlines\", true);\r\n    };\r\n    Gridlines.prototype.renderImmediately = function () {\r\n        _super.prototype.renderImmediately.call(this);\r\n        this._redrawXLines();\r\n        this._redrawYLines();\r\n        return this;\r\n    };\r\n    Gridlines.prototype.computeLayout = function (origin, availableWidth, availableHeight) {\r\n        _super.prototype.computeLayout.call(this, origin, availableWidth, availableHeight);\r\n        if (this._xScale != null) {\r\n            this._xScale.range([0, this.width()]);\r\n        }\r\n        if (this._yScale != null) {\r\n            this._yScale.range([this.height(), 0]);\r\n        }\r\n        return this;\r\n    };\r\n    Gridlines.prototype._redrawXLines = function () {\r\n        if (this._xScale) {\r\n            var between = this.betweenX();\r\n            var xTicks = this._xScale.ticks().slice(between ? 1 : 0);\r\n            var xLinesUpdate = this._xLinesContainer.selectAll(\"line\").data(xTicks);\r\n            var xLines = xLinesUpdate.enter().append(\"line\").merge(xLinesUpdate);\r\n            xLines.attr(\"x1\", gridPositionFactory(this._xScale, between, this._xScale.ticks()))\r\n                .attr(\"y1\", 0)\r\n                .attr(\"x2\", gridPositionFactory(this._xScale, between, this._xScale.ticks()))\r\n                .attr(\"y2\", this.height())\r\n                .classed(\"betweenline\", between)\r\n                .classed(\"zeroline\", function (t) { return t === 0; });\r\n            xLinesUpdate.exit().remove();\r\n        }\r\n    };\r\n    Gridlines.prototype._redrawYLines = function () {\r\n        if (this._yScale) {\r\n            var between = this.betweenY();\r\n            var yTicks = this._yScale.ticks().slice(between ? 1 : 0);\r\n            var yLinesUpdate = this._yLinesContainer.selectAll(\"line\").data(yTicks);\r\n            var yLines = yLinesUpdate.enter().append(\"line\").merge(yLinesUpdate);\r\n            yLines.attr(\"x1\", 0)\r\n                .attr(\"y1\", gridPositionFactory(this._yScale, between, this._yScale.ticks()))\r\n                .attr(\"x2\", this.width())\r\n                .attr(\"y2\", gridPositionFactory(this._yScale, between, this._yScale.ticks()))\r\n                .classed(\"betweenline\", between)\r\n                .classed(\"zeroline\", function (t) { return t === 0; });\r\n            yLinesUpdate.exit().remove();\r\n        }\r\n    };\r\n    return Gridlines;\r\n}(component_1.Component));\r\nexports.Gridlines = Gridlines;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/gridlines.ts\n// module id = 79\n// module chunks = 0","\"use strict\";\r\n/**\r\n * Copyright 2014-present Palantir Technologies\r\n * @license MIT\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\nvar Typesettable = require(\"typesettable\");\r\nvar Configs = require(\"../core/config\");\r\nvar Formatters = require(\"../core/formatters\");\r\nvar Utils = require(\"../utils\");\r\nvar component_1 = require(\"./component\");\r\nvar InterpolatedColorLegend = /** @class */ (function (_super) {\r\n    tslib_1.__extends(InterpolatedColorLegend, _super);\r\n    /**\r\n     * Creates an InterpolatedColorLegend.\r\n     *\r\n     * The InterpolatedColorLegend consists of a sequence of swatches that show the\r\n     * associated InterpolatedColor Scale sampled at various points.\r\n     * Two labels show the maximum and minimum values of the InterpolatedColor Scale.\r\n     *\r\n     * @constructor\r\n     * @param {Scales.InterpolatedColor} interpolatedColorScale\r\n     */\r\n    function InterpolatedColorLegend(interpolatedColorScale) {\r\n        var _this = _super.call(this) || this;\r\n        _this._textPadding = 5;\r\n        if (interpolatedColorScale == null) {\r\n            throw new Error(\"InterpolatedColorLegend requires a interpolatedColorScale\");\r\n        }\r\n        _this._scale = interpolatedColorScale;\r\n        _this._redrawCallback = function (scale) { return _this.redraw(); };\r\n        _this._scale.onUpdate(_this._redrawCallback);\r\n        _this._formatter = Formatters.general();\r\n        _this._orientation = \"horizontal\";\r\n        _this._expands = false;\r\n        _this.addClass(\"legend\");\r\n        _this.addClass(\"interpolated-color-legend\");\r\n        return _this;\r\n    }\r\n    InterpolatedColorLegend.prototype.destroy = function () {\r\n        _super.prototype.destroy.call(this);\r\n        this._scale.offUpdate(this._redrawCallback);\r\n    };\r\n    InterpolatedColorLegend.prototype.formatter = function (formatter) {\r\n        if (formatter === undefined) {\r\n            return this._formatter;\r\n        }\r\n        this._formatter = formatter;\r\n        this.redraw();\r\n        return this;\r\n    };\r\n    InterpolatedColorLegend.prototype.expands = function (expands) {\r\n        if (expands == null) {\r\n            return this._expands;\r\n        }\r\n        this._expands = expands;\r\n        this.redraw();\r\n        return this;\r\n    };\r\n    InterpolatedColorLegend._ensureOrientation = function (orientation) {\r\n        orientation = orientation.toLowerCase();\r\n        if (orientation === \"horizontal\" || orientation === \"left\" || orientation === \"right\") {\r\n            return orientation;\r\n        }\r\n        else {\r\n            throw new Error(\"\\\"\" + orientation + \"\\\" is not a valid orientation for InterpolatedColorLegend\");\r\n        }\r\n    };\r\n    InterpolatedColorLegend.prototype.orientation = function (orientation) {\r\n        if (orientation == null) {\r\n            return this._orientation;\r\n        }\r\n        else {\r\n            this._orientation = InterpolatedColorLegend._ensureOrientation(orientation);\r\n            this.redraw();\r\n            return this;\r\n        }\r\n    };\r\n    InterpolatedColorLegend.prototype.fixedWidth = function () {\r\n        return !this.expands() || this._isVertical();\r\n    };\r\n    InterpolatedColorLegend.prototype.fixedHeight = function () {\r\n        return !this.expands() || !this._isVertical();\r\n    };\r\n    InterpolatedColorLegend.prototype._generateTicks = function (numSwatches) {\r\n        if (numSwatches === void 0) { numSwatches = InterpolatedColorLegend._DEFAULT_NUM_SWATCHES; }\r\n        var domain = this._scale.domain();\r\n        if (numSwatches === 1) {\r\n            return [domain[0]];\r\n        }\r\n        var slope = (domain[1] - domain[0]) / (numSwatches - 1);\r\n        var ticks = [];\r\n        for (var i = 0; i < numSwatches; i++) {\r\n            ticks.push(domain[0] + slope * i);\r\n        }\r\n        return ticks;\r\n    };\r\n    InterpolatedColorLegend.prototype._setup = function () {\r\n        _super.prototype._setup.call(this);\r\n        this._swatchContainer = this.content().append(\"g\").classed(\"swatch-container\", true);\r\n        this._swatchBoundingBox = this.content().append(\"rect\").classed(\"swatch-bounding-box\", true);\r\n        this._lowerLabel = this.content().append(\"g\").classed(InterpolatedColorLegend.LEGEND_LABEL_CLASS, true);\r\n        this._upperLabel = this.content().append(\"g\").classed(InterpolatedColorLegend.LEGEND_LABEL_CLASS, true);\r\n        var context = new Typesettable.SvgContext(this.content().node());\r\n        this._measurer = new Typesettable.Measurer(context);\r\n        this._wrapper = new Typesettable.Wrapper();\r\n        this._writer = new Typesettable.Writer(this._measurer, context, this._wrapper);\r\n    };\r\n    InterpolatedColorLegend.prototype.requestedSpace = function (offeredWidth, offeredHeight) {\r\n        var _this = this;\r\n        var textHeight = this._measurer.measure().height;\r\n        var padding = textHeight;\r\n        var domain = this._scale.domain();\r\n        var labelWidths = domain.map(function (d) { return _this._measurer.measure(_this._formatter(d)).width; });\r\n        var desiredHeight;\r\n        var desiredWidth;\r\n        var numSwatches = InterpolatedColorLegend._DEFAULT_NUM_SWATCHES;\r\n        if (this._isVertical()) {\r\n            var longestWidth = Utils.Math.max(labelWidths, 0);\r\n            desiredWidth = padding + textHeight + this._textPadding + longestWidth + this._textPadding;\r\n            desiredHeight = numSwatches * textHeight;\r\n        }\r\n        else {\r\n            desiredHeight = padding + textHeight + padding;\r\n            desiredWidth = this._textPadding + labelWidths[0] + numSwatches * textHeight\r\n                + labelWidths[1] + this._textPadding;\r\n        }\r\n        return {\r\n            minWidth: desiredWidth,\r\n            minHeight: desiredHeight,\r\n        };\r\n    };\r\n    InterpolatedColorLegend.prototype._isVertical = function () {\r\n        return this._orientation !== \"horizontal\";\r\n    };\r\n    InterpolatedColorLegend.prototype.renderImmediately = function () {\r\n        var _this = this;\r\n        _super.prototype.renderImmediately.call(this);\r\n        var domain = this._scale.domain();\r\n        var text0 = this._formatter(domain[0]);\r\n        var text0Width = this._measurer.measure(text0).width;\r\n        var text1 = this._formatter(domain[1]);\r\n        var text1Width = this._measurer.measure(text1).width;\r\n        var textHeight = this._measurer.measure().height;\r\n        var textPadding = this._textPadding;\r\n        var upperLabelShift = { x: 0, y: 0 };\r\n        var lowerLabelShift = { x: 0, y: 0 };\r\n        var lowerWriteOptions = {\r\n            xAlign: \"center\",\r\n            yAlign: \"center\",\r\n            textRotation: 0,\r\n        };\r\n        var upperWriteOptions = {\r\n            xAlign: \"center\",\r\n            yAlign: \"center\",\r\n            textRotation: 0,\r\n        };\r\n        var swatchWidth;\r\n        var swatchHeight;\r\n        var swatchX;\r\n        var swatchY;\r\n        var boundingBoxAttr = {\r\n            x: 0,\r\n            y: 0,\r\n            width: 0,\r\n            height: 0,\r\n        };\r\n        var padding;\r\n        var numSwatches;\r\n        if (this._isVertical()) {\r\n            numSwatches = Math.floor(this.height());\r\n            var longestTextWidth_1 = Math.max(text0Width, text1Width);\r\n            padding = (this.width() - longestTextWidth_1 - 2 * this._textPadding) / 2;\r\n            swatchWidth = Math.max(this.width() - padding - 2 * textPadding - longestTextWidth_1, 0);\r\n            swatchHeight = 1;\r\n            swatchY = function (d, i) { return _this.height() - (i + 1); };\r\n            upperWriteOptions.yAlign = \"top\";\r\n            upperLabelShift.y = 0;\r\n            lowerWriteOptions.yAlign = \"bottom\";\r\n            lowerLabelShift.y = 0;\r\n            if (this._orientation === \"left\") {\r\n                swatchX = function (d, i) { return textPadding + longestTextWidth_1 + textPadding; };\r\n                upperWriteOptions.xAlign = \"right\";\r\n                upperLabelShift.x = -(padding + swatchWidth + textPadding);\r\n                lowerWriteOptions.xAlign = \"right\";\r\n                lowerLabelShift.x = -(padding + swatchWidth + textPadding);\r\n            }\r\n            else {\r\n                swatchX = function (d, i) { return padding; };\r\n                upperWriteOptions.xAlign = \"left\";\r\n                upperLabelShift.x = padding + swatchWidth + textPadding;\r\n                lowerWriteOptions.xAlign = \"left\";\r\n                lowerLabelShift.x = padding + swatchWidth + textPadding;\r\n            }\r\n            boundingBoxAttr[\"width\"] = swatchWidth;\r\n            boundingBoxAttr[\"height\"] = numSwatches * swatchHeight;\r\n        }\r\n        else {\r\n            padding = Math.max(textPadding, (this.height() - textHeight) / 2);\r\n            numSwatches = Math.max(Math.floor(this.width() - textPadding * 4 - text0Width - text1Width), 0);\r\n            swatchWidth = 1;\r\n            swatchHeight = Math.max((this.height() - 2 * padding), 0);\r\n            swatchX = function (d, i) { return Math.floor(text0Width + 2 * textPadding) + i; };\r\n            swatchY = function (d, i) { return padding; };\r\n            upperWriteOptions.xAlign = \"right\";\r\n            upperLabelShift.x = -textPadding;\r\n            lowerWriteOptions.xAlign = \"left\";\r\n            lowerLabelShift.x = textPadding;\r\n            boundingBoxAttr[\"y\"] = padding;\r\n            boundingBoxAttr[\"width\"] = numSwatches * swatchWidth;\r\n            boundingBoxAttr[\"height\"] = swatchHeight;\r\n        }\r\n        boundingBoxAttr[\"x\"] = swatchX(null, 0); // position of the first swatch\r\n        this._upperLabel.text(\"\"); // clear the upper label\r\n        this._writer.write(text1, this.width(), this.height(), upperWriteOptions, this._upperLabel.node());\r\n        var upperTranslateString = \"translate(\" + upperLabelShift.x + \", \" + upperLabelShift.y + \")\";\r\n        this._upperLabel.attr(\"transform\", upperTranslateString);\r\n        this._lowerLabel.text(\"\"); // clear the lower label\r\n        this._writer.write(text0, this.width(), this.height(), lowerWriteOptions, this._lowerLabel.node());\r\n        var lowerTranslateString = \"translate(\" + lowerLabelShift.x + \", \" + lowerLabelShift.y + \")\";\r\n        this._lowerLabel.attr(\"transform\", lowerTranslateString);\r\n        this._swatchBoundingBox.attrs(boundingBoxAttr);\r\n        var ticks = this._generateTicks(numSwatches);\r\n        var swatchesUpdate = this._swatchContainer.selectAll(\"rect.swatch\").data(ticks);\r\n        var rects = swatchesUpdate.enter().append(\"rect\").classed(\"swatch\", true);\r\n        ;\r\n        var swatches = swatchesUpdate.merge(rects);\r\n        swatchesUpdate.exit().remove();\r\n        swatches.attrs({\r\n            fill: function (d, i) { return _this._scale.scale(d); },\r\n            width: swatchWidth,\r\n            height: swatchHeight,\r\n            x: swatchX,\r\n            y: swatchY,\r\n            \"shape-rendering\": \"crispEdges\",\r\n        });\r\n        if (Configs.ADD_TITLE_ELEMENTS) {\r\n            rects.append(\"title\").text(function (d) { return _this._formatter(d); });\r\n        }\r\n        return this;\r\n    };\r\n    InterpolatedColorLegend._DEFAULT_NUM_SWATCHES = 11;\r\n    /**\r\n     * The css class applied to the legend labels.\r\n     */\r\n    InterpolatedColorLegend.LEGEND_LABEL_CLASS = \"legend-label\";\r\n    return InterpolatedColorLegend;\r\n}(component_1.Component));\r\nexports.InterpolatedColorLegend = InterpolatedColorLegend;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/interpolatedColorLegend.ts\n// module id = 80\n// module chunks = 0","\"use strict\";\r\n/**\r\n * Copyright 2014-present Palantir Technologies\r\n * @license MIT\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\nvar d3 = require(\"d3\");\r\nvar Typesettable = require(\"typesettable\");\r\nvar Configs = require(\"../core/config\");\r\nvar Formatters = require(\"../core/formatters\");\r\nvar SymbolFactories = require(\"../core/symbolFactories\");\r\nvar Utils = require(\"../utils\");\r\nvar component_1 = require(\"./component\");\r\n/**\r\n * The Legend's row representations. Stores positioning information\r\n * and column data.\r\n */\r\nvar LegendRow = /** @class */ (function () {\r\n    function LegendRow(\r\n    /**\r\n     * Columns within the row\r\n     * @param {LegendColumn<any>[]} columns\r\n     */\r\n    columns, \r\n    /**\r\n     * Padding applied below the row. Affects the spacing between rows. Defaults to 0.\r\n     * @param {bottomPadding} number\r\n     */\r\n    bottomPadding, \r\n    /**\r\n     * Sets the maximum allowable width of this column.\r\n     * @param {number} maxWidth\r\n     */\r\n    maxWidth) {\r\n        if (columns === void 0) { columns = []; }\r\n        if (bottomPadding === void 0) { bottomPadding = 0; }\r\n        if (maxWidth === void 0) { maxWidth = Infinity; }\r\n        this.columns = columns;\r\n        this.bottomPadding = bottomPadding;\r\n        this.maxWidth = maxWidth;\r\n    }\r\n    /**\r\n     * Adds a column to the list of columns within the row. May readjust the size of the\r\n     * column to fit within the row\r\n     *\r\n     * @param {LegendColumn<any>} column\r\n     */\r\n    LegendRow.prototype.addColumn = function (column) {\r\n        var desiredColumnWidth = column.width;\r\n        // choose the smaller of 1) remaining space, 2) desired width\r\n        var widthRemaining = this.getWidthAvailable();\r\n        column.width = Math.min(widthRemaining, desiredColumnWidth);\r\n        this.columns.push(column);\r\n    };\r\n    /**\r\n     * Returns the bounds the column, relative to the row.\r\n     * @param {number} columnIndex The index of the column in question\r\n     * @returns {Bounds} bounds\r\n     */\r\n    LegendRow.prototype.getBounds = function (columnIndex) {\r\n        var column = this.columns[columnIndex];\r\n        var columnXOffset = 0;\r\n        for (var i = 0; i < columnIndex; i++) {\r\n            columnXOffset += this.columns[i].width;\r\n        }\r\n        return {\r\n            topLeft: { x: columnXOffset, y: 0 },\r\n            bottomRight: {\r\n                x: columnXOffset + column.width,\r\n                y: column.height,\r\n            },\r\n        };\r\n    };\r\n    /**\r\n     * Returns the height of the row, including the bottomPadding.\r\n     * @return {number} height\r\n     */\r\n    LegendRow.prototype.getHeight = function () {\r\n        return Utils.Math.max(this.columns.map(function (_a) {\r\n            var height = _a.height;\r\n            return height;\r\n        }), 0) + this.bottomPadding;\r\n    };\r\n    /**\r\n     * Returns the current width of the row constrained by maxWidth, if set.\r\n     * @returns {number} width\r\n     */\r\n    LegendRow.prototype.getWidth = function () {\r\n        return Math.min(this.columns.reduce(function (sum, _a) {\r\n            var width = _a.width;\r\n            return sum + width;\r\n        }, 0), this.maxWidth);\r\n    };\r\n    /**\r\n     * Returns the remaining width available in the row based on the maximum\r\n     * width of this row.\r\n     * @returns {number} widthRemaining\r\n     */\r\n    LegendRow.prototype.getWidthAvailable = function () {\r\n        var widthConsumed = this.getWidth();\r\n        return Math.max(this.maxWidth - widthConsumed, 0);\r\n    };\r\n    return LegendRow;\r\n}());\r\n/**\r\n * Stores LegendRows. Useful for calculating and maintaining\r\n * positioning information about the Legend.\r\n */\r\nvar LegendTable = /** @class */ (function () {\r\n    function LegendTable(maxWidth, maxHeight, padding, rows) {\r\n        if (maxWidth === void 0) { maxWidth = Infinity; }\r\n        if (maxHeight === void 0) { maxHeight = Infinity; }\r\n        if (padding === void 0) { padding = 0; }\r\n        if (rows === void 0) { rows = []; }\r\n        this.maxWidth = maxWidth;\r\n        this.maxHeight = maxHeight;\r\n        this.padding = padding;\r\n        this.rows = rows;\r\n    }\r\n    LegendTable.prototype.addRow = function (row) {\r\n        row.maxWidth = this.maxWidth - this.padding * 2;\r\n        this.rows.push(row);\r\n    };\r\n    /**\r\n     * Returns the bounds of the column relative to the parent and siblings of the\r\n     * column.\r\n     *\r\n     * @param {number} rowIndex The parent row containing the desired column.\r\n     * @param {number} columnIndex The column to calculate bounds.\r\n     * @returns {Bounds}\r\n     */\r\n    LegendTable.prototype.getColumnBounds = function (rowIndex, columnIndex) {\r\n        var rowBounds = this.getRowBounds(rowIndex);\r\n        var columnBounds = this.rows[rowIndex].getBounds(columnIndex);\r\n        columnBounds.topLeft.x += rowBounds.topLeft.x;\r\n        columnBounds.bottomRight.x += rowBounds.topLeft.x;\r\n        columnBounds.topLeft.y += rowBounds.topLeft.y;\r\n        columnBounds.bottomRight.y += rowBounds.topLeft.y;\r\n        return columnBounds;\r\n    };\r\n    /**\r\n     * Returns the bounds relative to the parent and siblings of the row.\r\n     *\r\n     * @param {number} rowIndex The row to calculate bounds\r\n     * @returns {Bounds}\r\n     */\r\n    LegendTable.prototype.getRowBounds = function (rowIndex) {\r\n        var rowXOffset = this.padding;\r\n        var rowYOffset = this.padding;\r\n        for (var i = 0; i < rowIndex; i++) {\r\n            rowYOffset += this.rows[i].getHeight();\r\n        }\r\n        var rowBounds = {\r\n            topLeft: { x: rowXOffset, y: rowYOffset },\r\n            bottomRight: {\r\n                x: rowXOffset + this.rows[rowIndex].getWidth(),\r\n                y: rowYOffset + this.rows[rowIndex].getHeight(),\r\n            },\r\n        };\r\n        return rowBounds;\r\n    };\r\n    /**\r\n     * Returns the height of the Table, constrained by a maximum height, if set.\r\n     * The height includes the padding, if set.\r\n     * @returns {number} height\r\n     */\r\n    LegendTable.prototype.getHeight = function () {\r\n        return Math.min(this.rows.reduce(function (sum, row) { return sum + row.getHeight(); }, 0) + this.padding * 2, this.maxHeight);\r\n    };\r\n    /**\r\n     * Returns the width of the table, constrained by the maximum width, if set.\r\n     * The width includes the padding, if set.\r\n     * @returns {number} width\r\n     */\r\n    LegendTable.prototype.getWidth = function () {\r\n        return Math.min(Utils.Math.max(this.rows.map(function (row) { return row.getWidth(); }), 0) + this.padding * 2, this.maxWidth);\r\n    };\r\n    return LegendTable;\r\n}());\r\nvar Legend = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Legend, _super);\r\n    /**\r\n     * The Legend consists of a series of entries, each with a color and label taken from the Color Scale.\r\n     *\r\n     * @constructor\r\n     * @param {Scale.Color} scale\r\n     */\r\n    function Legend(colorScale) {\r\n        var _this = _super.call(this) || this;\r\n        _this._padding = 5;\r\n        _this._rowBottomPadding = 3;\r\n        _this.addClass(\"legend\");\r\n        _this.maxEntriesPerRow(1);\r\n        if (colorScale == null) {\r\n            throw new Error(\"Legend requires a colorScale\");\r\n        }\r\n        _this._colorScale = colorScale;\r\n        _this._redrawCallback = function (scale) { return _this.redraw(); };\r\n        _this._colorScale.onUpdate(_this._redrawCallback);\r\n        _this._formatter = Formatters.identity();\r\n        _this.maxLinesPerEntry(1);\r\n        _this.xAlignment(\"right\").yAlignment(\"top\");\r\n        _this.comparator(function (a, b) {\r\n            var formattedText = _this._colorScale.domain().slice().map(function (d) { return _this._formatter(d); });\r\n            return formattedText.indexOf(a) - formattedText.indexOf(b);\r\n        });\r\n        _this._symbolFactoryAccessor = function () { return SymbolFactories.circle(); };\r\n        _this._symbolOpacityAccessor = function () { return 1; };\r\n        return _this;\r\n    }\r\n    Legend.prototype._setup = function () {\r\n        _super.prototype._setup.call(this);\r\n        var fakeLegendRow = this.content().append(\"g\").classed(Legend.LEGEND_ROW_CLASS, true);\r\n        var fakeLegendEntry = fakeLegendRow.append(\"g\").classed(Legend.LEGEND_ENTRY_CLASS, true);\r\n        fakeLegendEntry.append(\"text\");\r\n        var context = new Typesettable.SvgContext(fakeLegendRow.node(), null, Configs.ADD_TITLE_ELEMENTS);\r\n        this._measurer = new Typesettable.CacheMeasurer(context);\r\n        this._wrapper = new Typesettable.Wrapper().maxLines(this.maxLinesPerEntry());\r\n        this._writer = new Typesettable.Writer(this._measurer, context, this._wrapper);\r\n    };\r\n    Legend.prototype.formatter = function (formatter) {\r\n        if (formatter == null) {\r\n            return this._formatter;\r\n        }\r\n        this._formatter = formatter;\r\n        this.redraw();\r\n        return this;\r\n    };\r\n    Legend.prototype.maxEntriesPerRow = function (maxEntriesPerRow) {\r\n        if (maxEntriesPerRow == null) {\r\n            return this._maxEntriesPerRow;\r\n        }\r\n        else {\r\n            this._maxEntriesPerRow = maxEntriesPerRow;\r\n            this.redraw();\r\n            return this;\r\n        }\r\n    };\r\n    Legend.prototype.maxLinesPerEntry = function (maxLinesPerEntry) {\r\n        if (maxLinesPerEntry == null) {\r\n            return this._maxLinesPerEntry;\r\n        }\r\n        else {\r\n            this._maxLinesPerEntry = maxLinesPerEntry;\r\n            this.redraw();\r\n            return this;\r\n        }\r\n    };\r\n    Legend.prototype.maxWidth = function (maxWidth) {\r\n        if (maxWidth == null) {\r\n            return this._maxWidth;\r\n        }\r\n        else {\r\n            this._maxWidth = maxWidth;\r\n            this.redraw();\r\n            return this;\r\n        }\r\n    };\r\n    Legend.prototype.comparator = function (comparator) {\r\n        if (comparator == null) {\r\n            return this._comparator;\r\n        }\r\n        else {\r\n            this._comparator = comparator;\r\n            this.redraw();\r\n            return this;\r\n        }\r\n    };\r\n    Legend.prototype.colorScale = function (colorScale) {\r\n        if (colorScale != null) {\r\n            this._colorScale.offUpdate(this._redrawCallback);\r\n            this._colorScale = colorScale;\r\n            this._colorScale.onUpdate(this._redrawCallback);\r\n            this.redraw();\r\n            return this;\r\n        }\r\n        else {\r\n            return this._colorScale;\r\n        }\r\n    };\r\n    Legend.prototype.destroy = function () {\r\n        _super.prototype.destroy.call(this);\r\n        this._colorScale.offUpdate(this._redrawCallback);\r\n    };\r\n    Legend.prototype._buildLegendTable = function (width, height) {\r\n        var _this = this;\r\n        var textHeight = this._measurer.measure().height;\r\n        var table = new LegendTable(width, height, this._padding);\r\n        var entryNames = this._colorScale.domain().slice().sort(function (a, b) { return _this._comparator(_this._formatter(a), _this._formatter(b)); });\r\n        var row = new LegendRow();\r\n        table.addRow(row);\r\n        row.bottomPadding = this._rowBottomPadding;\r\n        entryNames.forEach(function (name, index) {\r\n            if (row.columns.length / 2 === _this.maxEntriesPerRow()) {\r\n                // we add two columns per entry, a symbol column and a name column\r\n                // if the current row is full, according to the number of entries\r\n                // we're allowed to have per row, we need to allocate new space\r\n                row = new LegendRow();\r\n                row.bottomPadding = _this._rowBottomPadding;\r\n                table.addRow(row);\r\n            }\r\n            var availableWidth = row.getWidthAvailable();\r\n            var formattedName = _this._formatter(name);\r\n            // this is the width of the series name without any line wrapping\r\n            // it is the most optimal presentation of the name\r\n            var unwrappedNameWidth = _this._measurer.measure(formattedName).width;\r\n            var willBeSquished = (availableWidth - textHeight - unwrappedNameWidth) < 0;\r\n            if (willBeSquished && row.columns.length > 1) {\r\n                // adding the entry to this row will squish this\r\n                // entry. The row already contains entries so create\r\n                // a new row to add this entry to for optimal display\r\n                row = new LegendRow();\r\n                row.bottomPadding = _this._rowBottomPadding;\r\n                table.addRow(row);\r\n            }\r\n            var symbolColumn = { width: textHeight, height: textHeight, data: { name: name, type: \"symbol\" } };\r\n            row.addColumn(symbolColumn);\r\n            // the space consumed by the name field is the minimum of the space available in the table\r\n            // and the actual width consumed by the name\r\n            availableWidth = row.getWidthAvailable();\r\n            var usedNameWidth = Math.min(availableWidth, unwrappedNameWidth);\r\n            _this._wrapper.maxLines(_this.maxLinesPerEntry());\r\n            var numberOfRows = _this._wrapper.wrap(formattedName, _this._measurer, usedNameWidth).noLines;\r\n            var nameColumnHeight = numberOfRows * textHeight;\r\n            var nameColumn = { width: usedNameWidth, height: nameColumnHeight, data: { name: name, type: \"text\" } };\r\n            row.addColumn(nameColumn);\r\n        });\r\n        return table;\r\n    };\r\n    Legend.prototype.requestedSpace = function (offeredWidth, offeredHeight) {\r\n        // if max width is set, the table is guaranteed to be at most maxWidth wide.\r\n        // if max width is not set, the table will be as wide as the longest untruncated row\r\n        var table = this._buildLegendTable(Utils.Math.min([this.maxWidth(), offeredWidth], offeredWidth), offeredHeight);\r\n        return {\r\n            minHeight: table.getHeight(),\r\n            minWidth: table.getWidth(),\r\n        };\r\n    };\r\n    /**\r\n     * Gets the Entities (representing Legend entries) at a particular point.\r\n     * Returns an empty array if no Entities are present at that location.\r\n     *\r\n     * @param {Point} p\r\n     * @returns {Entity<Legend>[]}\r\n     */\r\n    Legend.prototype.entitiesAt = function (p) {\r\n        var _this = this;\r\n        if (!this._isSetup) {\r\n            return [];\r\n        }\r\n        var table = this._buildLegendTable(this.width(), this.height());\r\n        return table.rows.reduce(function (entity, row, rowIndex) {\r\n            if (entity.length !== 0) {\r\n                // we've already found the nearest entity; just return it.\r\n                return entity;\r\n            }\r\n            var rowBounds = table.getRowBounds(rowIndex);\r\n            var withinRow = Utils.Math.within(p, rowBounds);\r\n            if (!withinRow) {\r\n                // the nearest entity isn't within this row, continue;\r\n                return entity;\r\n            }\r\n            return row.columns.reduce(function (entity, column, columnIndex) {\r\n                var columnBounds = table.getColumnBounds(rowIndex, columnIndex);\r\n                var withinColumn = Utils.Math.within(p, columnBounds);\r\n                if (withinColumn) {\r\n                    var rowElement = _this.content().selectAll(\".\" + Legend.LEGEND_ROW_CLASS).nodes()[rowIndex];\r\n                    // HACKHACK The 2.x API chooses the symbol element as the \"selection\" to return, regardless of what\r\n                    // was actually selected\r\n                    var entryElement = d3.select(rowElement)\r\n                        .selectAll(\".\" + Legend.LEGEND_ENTRY_CLASS).nodes()[Math.floor(columnIndex / 2)];\r\n                    var symbolElement = d3.select(entryElement).select(\".\" + Legend.LEGEND_SYMBOL_CLASS);\r\n                    // HACKHACK The 2.x API returns the center {x, y} of the symbol as the position.\r\n                    var rowTranslate = Utils.DOM.getTranslateValues(d3.select(rowElement));\r\n                    var symbolTranslate = Utils.DOM.getTranslateValues(symbolElement);\r\n                    return [{\r\n                            bounds: Utils.DOM.elementBBox(d3.select(rowElement)),\r\n                            datum: column.data.name,\r\n                            position: {\r\n                                x: rowTranslate[0] + symbolTranslate[0],\r\n                                y: rowTranslate[1] + symbolTranslate[1],\r\n                            },\r\n                            selection: d3.select(entryElement),\r\n                            component: _this,\r\n                        }];\r\n                }\r\n                return entity;\r\n            }, entity);\r\n        }, []);\r\n    };\r\n    Legend.prototype.renderImmediately = function () {\r\n        _super.prototype.renderImmediately.call(this);\r\n        var table = this._buildLegendTable(this.width(), this.height());\r\n        // clear content from previous renders\r\n        this.content().selectAll(\"*\").remove();\r\n        var rowsUpdate = this.content().selectAll(\"g.\" + Legend.LEGEND_ROW_CLASS).data(table.rows);\r\n        var rows = rowsUpdate\r\n            .enter()\r\n            .append(\"g\")\r\n            .classed(Legend.LEGEND_ROW_CLASS, true)\r\n            .merge(rowsUpdate);\r\n        rowsUpdate.exit().remove();\r\n        rows.attr(\"transform\", function (row, rowIndex) {\r\n            var rowBounds = table.getRowBounds(rowIndex);\r\n            return \"translate(\" + rowBounds.topLeft.x + \", \" + rowBounds.topLeft.y + \")\";\r\n        });\r\n        var self = this;\r\n        rows.each(function (row, rowIndex) {\r\n            var symbolEntryPairs = [];\r\n            for (var i = 0; i < row.columns.length; i += 2) {\r\n                symbolEntryPairs.push([row.columns[i], row.columns[i + 1]]);\r\n            }\r\n            var entriesUpdate = d3.select(this).selectAll(\"g.\" + Legend.LEGEND_ENTRY_CLASS).data(symbolEntryPairs);\r\n            var entriesEnter = entriesUpdate\r\n                .enter()\r\n                .append(\"g\")\r\n                .classed(Legend.LEGEND_ENTRY_CLASS, true)\r\n                .merge(entriesUpdate);\r\n            entriesEnter.append(\"path\")\r\n                .attr(\"d\", function (symbolEntryPair, columnIndex) {\r\n                var symbol = symbolEntryPair[0];\r\n                return self.symbol()(symbol.data.name, rowIndex)(symbol.height * 0.6)(null);\r\n            })\r\n                .attr(\"transform\", function (symbolEntryPair, i) {\r\n                var symbol = symbolEntryPair[0];\r\n                var columnIndex = table.rows[rowIndex].columns.indexOf(symbol);\r\n                var columnBounds = table.getColumnBounds(rowIndex, columnIndex);\r\n                return \"translate(\" + (columnBounds.topLeft.x + symbol.width / 2) + \", \" + symbol.height / 2 + \")\";\r\n            })\r\n                .attr(\"fill\", function (symbolEntryPair) { return self._colorScale.scale(symbolEntryPair[0].data.name); })\r\n                .attr(\"opacity\", function (symbolEntryPair, _columnIndex) {\r\n                return self.symbolOpacity()(symbolEntryPair[0].data.name, rowIndex);\r\n            })\r\n                .classed(Legend.LEGEND_SYMBOL_CLASS, true);\r\n            entriesEnter.append(\"g\").classed(\"text-container\", true)\r\n                .attr(\"transform\", function (symbolEntryPair, i) {\r\n                var entry = symbolEntryPair[1];\r\n                var columnIndex = table.rows[rowIndex].columns.indexOf(entry);\r\n                var columnBounds = table.getColumnBounds(rowIndex, columnIndex);\r\n                return \"translate(\" + columnBounds.topLeft.x + \", 0)\";\r\n            })\r\n                .each(function (symbolEntryPair, i, rowIndex) {\r\n                var textContainer = d3.select(this);\r\n                var column = symbolEntryPair[1];\r\n                var writeOptions = {\r\n                    xAlign: \"left\",\r\n                    yAlign: \"top\",\r\n                    textRotation: 0,\r\n                };\r\n                self._writer.write(self._formatter(column.data.name), column.width, self.height(), writeOptions, textContainer.node());\r\n            });\r\n            entriesUpdate.exit().remove();\r\n        });\r\n        return this;\r\n    };\r\n    Legend.prototype.symbol = function (symbol) {\r\n        if (symbol == null) {\r\n            return this._symbolFactoryAccessor;\r\n        }\r\n        else {\r\n            this._symbolFactoryAccessor = symbol;\r\n            this.render();\r\n            return this;\r\n        }\r\n    };\r\n    Legend.prototype.symbolOpacity = function (symbolOpacity) {\r\n        if (symbolOpacity == null) {\r\n            return this._symbolOpacityAccessor;\r\n        }\r\n        else if (typeof symbolOpacity === \"number\") {\r\n            this._symbolOpacityAccessor = function () { return symbolOpacity; };\r\n        }\r\n        else {\r\n            this._symbolOpacityAccessor = symbolOpacity;\r\n        }\r\n        this.render();\r\n        return this;\r\n    };\r\n    Legend.prototype.fixedWidth = function () {\r\n        return true;\r\n    };\r\n    Legend.prototype.fixedHeight = function () {\r\n        return true;\r\n    };\r\n    Legend.prototype.invalidateCache = function () {\r\n        this._measurer.reset();\r\n    };\r\n    /**\r\n     * The css class applied to each legend row\r\n     */\r\n    Legend.LEGEND_ROW_CLASS = \"legend-row\";\r\n    /**\r\n     * The css class applied to each legend entry\r\n     */\r\n    Legend.LEGEND_ENTRY_CLASS = \"legend-entry\";\r\n    /**\r\n     * The css class applied to each legend symbol\r\n     */\r\n    Legend.LEGEND_SYMBOL_CLASS = \"legend-symbol\";\r\n    return Legend;\r\n}(component_1.Component));\r\nexports.Legend = Legend;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/legend.ts\n// module id = 81\n// module chunks = 0","\"use strict\";\r\n/**\r\n * Copyright 2014-present Palantir Technologies\r\n * @license MIT\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\nvar plot_1 = require(\"../plots/plot\");\r\nvar Utils = require(\"../utils\");\r\nvar group_1 = require(\"./group\");\r\nvar PlotGroup = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PlotGroup, _super);\r\n    function PlotGroup() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    PlotGroup.prototype.entityNearest = function (point) {\r\n        var closestPlotEntity;\r\n        var minDistSquared = Infinity;\r\n        this.components().forEach(function (plotComponent) {\r\n            // we know it's a Plot since .append() throws a runtime error otherwise\r\n            var plot = plotComponent;\r\n            var candidatePlotEntity = plot.entityNearest(point);\r\n            if (candidatePlotEntity == null) {\r\n                return;\r\n            }\r\n            var distSquared = Utils.Math.distanceSquared(candidatePlotEntity.position, point);\r\n            if (distSquared <= minDistSquared) {\r\n                minDistSquared = distSquared;\r\n                closestPlotEntity = candidatePlotEntity;\r\n            }\r\n        });\r\n        return closestPlotEntity;\r\n    };\r\n    /**\r\n     * Adds a Plot to this Plot Group.\r\n     * The added Plot will be rendered above Plots already in the Group.\r\n     */\r\n    PlotGroup.prototype.append = function (plot) {\r\n        if (plot != null && !(plot instanceof plot_1.Plot)) {\r\n            throw new Error(\"Plot Group only accepts plots\");\r\n        }\r\n        _super.prototype.append.call(this, plot);\r\n        return this;\r\n    };\r\n    return PlotGroup;\r\n}(group_1.Group));\r\nexports.PlotGroup = PlotGroup;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/plotGroup.ts\n// module id = 82\n// module chunks = 0","\"use strict\";\r\n/**\r\n * Copyright 2014-present Palantir Technologies\r\n * @license MIT\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\nvar d3 = require(\"d3\");\r\nvar Utils = require(\"../utils\");\r\nvar componentContainer_1 = require(\"./componentContainer\");\r\nvar Table = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Table, _super);\r\n    /**\r\n     * A Table combines Components in the form of a grid. A\r\n     * common case is combining a y-axis, x-axis, and the plotted data via\r\n     * ```typescript\r\n     * new Table([[yAxis, plot],\r\n     *            [null,  xAxis]]);\r\n     * ```\r\n     *\r\n     * @constructor\r\n     * @param {(Component|null|undefined)[][]} [rows=[]] A 2-D array of Components to be added to the Table.\r\n     *   null can be used if a cell is empty.\r\n     */\r\n    function Table(rows) {\r\n        if (rows === void 0) { rows = []; }\r\n        var _this = _super.call(this) || this;\r\n        _this._rowPadding = 0;\r\n        _this._columnPadding = 0;\r\n        _this._rows = [];\r\n        _this._rowWeights = [];\r\n        _this._columnWeights = [];\r\n        _this._nRows = 0;\r\n        _this._nCols = 0;\r\n        _this._calculatedLayout = null;\r\n        _this.addClass(\"table\");\r\n        rows.forEach(function (row, rowIndex) {\r\n            row.forEach(function (component, colIndex) {\r\n                if (component != null) {\r\n                    _this.add(component, rowIndex, colIndex);\r\n                }\r\n            });\r\n        });\r\n        return _this;\r\n    }\r\n    Table.prototype._forEach = function (callback) {\r\n        for (var r = 0; r < this._nRows; r++) {\r\n            for (var c = 0; c < this._nCols; c++) {\r\n                if (this._rows[r][c] != null) {\r\n                    callback(this._rows[r][c]);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Checks whether the specified Component is in the Table.\r\n     */\r\n    Table.prototype.has = function (component) {\r\n        for (var r = 0; r < this._nRows; r++) {\r\n            for (var c = 0; c < this._nCols; c++) {\r\n                if (this._rows[r][c] === component) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     * Returns the Component at the specified row and column index.\r\n     *\r\n     * @param {number} rowIndex\r\n     * @param {number} columnIndex\r\n     * @returns {Component} The Component at the specified position, or null if no Component is there.\r\n     */\r\n    Table.prototype.componentAt = function (rowIndex, columnIndex) {\r\n        if (rowIndex < 0 || rowIndex >= this._nRows || columnIndex < 0 || columnIndex >= this._nCols) {\r\n            return null;\r\n        }\r\n        return this._rows[rowIndex][columnIndex];\r\n    };\r\n    ;\r\n    /**\r\n     * Adds a Component in the specified row and column position.\r\n     *\r\n     * For example, instead of calling `new Table([[a, b], [null, c]])`, you\r\n     * could call\r\n     * var table = new Plottable.Components.Table();\r\n     * table.add(a, 0, 0);\r\n     * table.add(b, 0, 1);\r\n     * table.add(c, 1, 1);\r\n     *\r\n     * @param {Component} component The Component to be added.\r\n     * @param {number} row\r\n     * @param {number} col\r\n     * @returns {Table} The calling Table.\r\n     */\r\n    Table.prototype.add = function (component, row, col) {\r\n        if (component == null) {\r\n            throw Error(\"Cannot add null to a table cell\");\r\n        }\r\n        if (!this.has(component)) {\r\n            var currentComponent = this._rows[row] && this._rows[row][col];\r\n            if (currentComponent != null) {\r\n                throw new Error(\"cell is occupied\");\r\n            }\r\n            component.detach();\r\n            this._nRows = Math.max(row + 1, this._nRows);\r\n            this._nCols = Math.max(col + 1, this._nCols);\r\n            this._padTableToSize(this._nRows, this._nCols);\r\n            this._rows[row][col] = component;\r\n            this._adoptAndAnchor(component);\r\n            this.redraw();\r\n        }\r\n        return this;\r\n    };\r\n    Table.prototype._remove = function (component) {\r\n        for (var r = 0; r < this._nRows; r++) {\r\n            for (var c = 0; c < this._nCols; c++) {\r\n                if (this._rows[r][c] === component) {\r\n                    this._rows[r][c] = null;\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    Table.prototype._iterateLayout = function (availableWidth, availableHeight, isFinalOffer) {\r\n        if (isFinalOffer === void 0) { isFinalOffer = false; }\r\n        /*\r\n         * Given availableWidth and availableHeight, figure out how to allocate it between rows and columns using an iterative algorithm.\r\n         *\r\n         * For both dimensions, keeps track of \"guaranteedSpace\", which the fixed-size components have requested, and\r\n         * \"proportionalSpace\", which is being given to proportionally-growing components according to the weights on the table.\r\n         * Here is how it works (example uses width but it is the same for height). First, columns are guaranteed no width, and\r\n         * the free width is allocated to columns based on their colWeights. Then, in determineGuarantees, every component is\r\n         * offered its column's width and may request some amount of it, which increases that column's guaranteed\r\n         * width. If there are some components that were not satisfied with the width they were offered, and there is free\r\n         * width that has not already been guaranteed, then the remaining width is allocated to the unsatisfied columns and the\r\n         * algorithm runs again. If all components are satisfied, then the remaining width is allocated as proportional space\r\n         * according to the colWeights.\r\n         *\r\n         * The guaranteed width for each column is monotonically increasing as the algorithm iterates. Since it is deterministic\r\n         * and monotonically increasing, if the freeWidth does not change during an iteration it implies that no further progress\r\n         * is possible, so the algorithm will not continue iterating on that dimension's account.\r\n         *\r\n         * If the algorithm runs more than 5 times, we stop and just use whatever we arrived at. It's not clear under what\r\n         * circumstances this will happen or if it will happen at all. A message will be printed to the console if this occurs.\r\n         *\r\n         */\r\n        var rows = this._rows;\r\n        var cols = d3.transpose(this._rows);\r\n        var availableWidthAfterPadding = availableWidth - this._columnPadding * (this._nCols - 1);\r\n        var availableHeightAfterPadding = availableHeight - this._rowPadding * (this._nRows - 1);\r\n        var rowWeights = Table._calcComponentWeights(this._rowWeights, rows, function (c) { return (c == null) || c.fixedHeight(); });\r\n        var colWeights = Table._calcComponentWeights(this._columnWeights, cols, function (c) { return (c == null) || c.fixedWidth(); });\r\n        // To give the table a good starting position to iterate from, we give the fixed-width components half-weight\r\n        // so that they will get some initial space allocated to work with\r\n        var heuristicColWeights = colWeights.map(function (c) { return c === 0 ? 0.5 : c; });\r\n        var heuristicRowWeights = rowWeights.map(function (c) { return c === 0 ? 0.5 : c; });\r\n        var colProportionalSpace = Table._calcProportionalSpace(heuristicColWeights, availableWidthAfterPadding);\r\n        var rowProportionalSpace = Table._calcProportionalSpace(heuristicRowWeights, availableHeightAfterPadding);\r\n        var guaranteedWidths = Utils.Array.createFilledArray(0, this._nCols);\r\n        var guaranteedHeights = Utils.Array.createFilledArray(0, this._nRows);\r\n        var freeWidth;\r\n        var freeHeight;\r\n        var nIterations = 0;\r\n        var guarantees;\r\n        var wantsWidth;\r\n        var wantsHeight;\r\n        while (true) {\r\n            var offeredHeights = Utils.Array.add(guaranteedHeights, rowProportionalSpace);\r\n            var offeredWidths = Utils.Array.add(guaranteedWidths, colProportionalSpace);\r\n            guarantees = this._determineGuarantees(offeredWidths, offeredHeights, isFinalOffer);\r\n            guaranteedWidths = guarantees.guaranteedWidths;\r\n            guaranteedHeights = guarantees.guaranteedHeights;\r\n            wantsWidth = guarantees.wantsWidthArr.some(function (x) { return x; });\r\n            wantsHeight = guarantees.wantsHeightArr.some(function (x) { return x; });\r\n            var lastFreeWidth = freeWidth;\r\n            var lastFreeHeight = freeHeight;\r\n            freeWidth = availableWidthAfterPadding - d3.sum(guarantees.guaranteedWidths);\r\n            freeHeight = availableHeightAfterPadding - d3.sum(guarantees.guaranteedHeights);\r\n            var xWeights = void 0;\r\n            if (wantsWidth) {\r\n                xWeights = guarantees.wantsWidthArr.map(function (x) { return x ? 0.1 : 0; });\r\n                xWeights = Utils.Array.add(xWeights, colWeights);\r\n            }\r\n            else {\r\n                xWeights = colWeights;\r\n            }\r\n            var yWeights = void 0;\r\n            if (wantsHeight) {\r\n                yWeights = guarantees.wantsHeightArr.map(function (x) { return x ? 0.1 : 0; });\r\n                yWeights = Utils.Array.add(yWeights, rowWeights);\r\n            }\r\n            else {\r\n                yWeights = rowWeights;\r\n            }\r\n            colProportionalSpace = Table._calcProportionalSpace(xWeights, freeWidth);\r\n            rowProportionalSpace = Table._calcProportionalSpace(yWeights, freeHeight);\r\n            nIterations++;\r\n            var canImproveWidthAllocation = freeWidth > 0 && freeWidth !== lastFreeWidth;\r\n            var canImproveHeightAllocation = freeHeight > 0 && freeHeight !== lastFreeHeight;\r\n            if (!(canImproveWidthAllocation || canImproveHeightAllocation)) {\r\n                break;\r\n            }\r\n            if (nIterations > 5) {\r\n                break;\r\n            }\r\n        }\r\n        // Redo the proportional space one last time, to ensure we use the real weights not the wantsWidth/Height weights\r\n        freeWidth = availableWidthAfterPadding - d3.sum(guarantees.guaranteedWidths);\r\n        freeHeight = availableHeightAfterPadding - d3.sum(guarantees.guaranteedHeights);\r\n        colProportionalSpace = Table._calcProportionalSpace(colWeights, freeWidth);\r\n        rowProportionalSpace = Table._calcProportionalSpace(rowWeights, freeHeight);\r\n        return {\r\n            colProportionalSpace: colProportionalSpace,\r\n            rowProportionalSpace: rowProportionalSpace,\r\n            guaranteedWidths: guarantees.guaranteedWidths,\r\n            guaranteedHeights: guarantees.guaranteedHeights,\r\n            wantsWidth: wantsWidth,\r\n            wantsHeight: wantsHeight,\r\n        };\r\n    };\r\n    Table.prototype._determineGuarantees = function (offeredWidths, offeredHeights, isFinalOffer) {\r\n        if (isFinalOffer === void 0) { isFinalOffer = false; }\r\n        var requestedWidths = Utils.Array.createFilledArray(0, this._nCols);\r\n        var requestedHeights = Utils.Array.createFilledArray(0, this._nRows);\r\n        var columnNeedsWidth = Utils.Array.createFilledArray(false, this._nCols);\r\n        var rowNeedsHeight = Utils.Array.createFilledArray(false, this._nRows);\r\n        this._rows.forEach(function (row, rowIndex) {\r\n            row.forEach(function (component, colIndex) {\r\n                var spaceRequest;\r\n                if (component != null) {\r\n                    spaceRequest = component.requestedSpace(offeredWidths[colIndex], offeredHeights[rowIndex]);\r\n                }\r\n                else {\r\n                    spaceRequest = {\r\n                        minWidth: 0,\r\n                        minHeight: 0,\r\n                    };\r\n                }\r\n                var columnWidth = isFinalOffer ? Math.min(spaceRequest.minWidth, offeredWidths[colIndex]) : spaceRequest.minWidth;\r\n                requestedWidths[colIndex] = Math.max(requestedWidths[colIndex], columnWidth);\r\n                var rowHeight = isFinalOffer ? Math.min(spaceRequest.minHeight, offeredHeights[rowIndex]) : spaceRequest.minHeight;\r\n                requestedHeights[rowIndex] = Math.max(requestedHeights[rowIndex], rowHeight);\r\n                var componentNeedsWidth = spaceRequest.minWidth > offeredWidths[colIndex];\r\n                columnNeedsWidth[colIndex] = columnNeedsWidth[colIndex] || componentNeedsWidth;\r\n                var componentNeedsHeight = spaceRequest.minHeight > offeredHeights[rowIndex];\r\n                rowNeedsHeight[rowIndex] = rowNeedsHeight[rowIndex] || componentNeedsHeight;\r\n            });\r\n        });\r\n        return {\r\n            guaranteedWidths: requestedWidths,\r\n            guaranteedHeights: requestedHeights,\r\n            wantsWidthArr: columnNeedsWidth,\r\n            wantsHeightArr: rowNeedsHeight,\r\n        };\r\n    };\r\n    Table.prototype.requestedSpace = function (offeredWidth, offeredHeight) {\r\n        this._calculatedLayout = this._iterateLayout(offeredWidth, offeredHeight);\r\n        return {\r\n            minWidth: d3.sum(this._calculatedLayout.guaranteedWidths),\r\n            minHeight: d3.sum(this._calculatedLayout.guaranteedHeights),\r\n        };\r\n    };\r\n    Table.prototype.computeLayout = function (origin, availableWidth, availableHeight) {\r\n        var _this = this;\r\n        _super.prototype.computeLayout.call(this, origin, availableWidth, availableHeight);\r\n        var lastLayoutWidth = d3.sum(this._calculatedLayout.guaranteedWidths);\r\n        var lastLayoutHeight = d3.sum(this._calculatedLayout.guaranteedHeights);\r\n        var layout = this._calculatedLayout;\r\n        if (lastLayoutWidth > this.width() || lastLayoutHeight > this.height()) {\r\n            layout = this._iterateLayout(this.width(), this.height(), true);\r\n        }\r\n        var childYOrigin = 0;\r\n        var rowHeights = Utils.Array.add(layout.rowProportionalSpace, layout.guaranteedHeights);\r\n        var colWidths = Utils.Array.add(layout.colProportionalSpace, layout.guaranteedWidths);\r\n        this._rows.forEach(function (row, rowIndex) {\r\n            var childXOrigin = 0;\r\n            row.forEach(function (component, colIndex) {\r\n                // recursively compute layout\r\n                if (component != null) {\r\n                    component.computeLayout({ x: childXOrigin, y: childYOrigin }, colWidths[colIndex], rowHeights[rowIndex]);\r\n                }\r\n                childXOrigin += colWidths[colIndex] + _this._columnPadding;\r\n            });\r\n            childYOrigin += rowHeights[rowIndex] + _this._rowPadding;\r\n        });\r\n        return this;\r\n    };\r\n    Table.prototype.rowPadding = function (rowPadding) {\r\n        if (rowPadding == null) {\r\n            return this._rowPadding;\r\n        }\r\n        if (!Utils.Math.isValidNumber(rowPadding) || rowPadding < 0) {\r\n            throw Error(\"rowPadding must be a non-negative finite value\");\r\n        }\r\n        this._rowPadding = rowPadding;\r\n        this.redraw();\r\n        return this;\r\n    };\r\n    Table.prototype.columnPadding = function (columnPadding) {\r\n        if (columnPadding == null) {\r\n            return this._columnPadding;\r\n        }\r\n        if (!Utils.Math.isValidNumber(columnPadding) || columnPadding < 0) {\r\n            throw Error(\"columnPadding must be a non-negative finite value\");\r\n        }\r\n        this._columnPadding = columnPadding;\r\n        this.redraw();\r\n        return this;\r\n    };\r\n    Table.prototype.rowWeight = function (index, weight) {\r\n        if (weight == null) {\r\n            return this._rowWeights[index];\r\n        }\r\n        if (!Utils.Math.isValidNumber(weight) || weight < 0) {\r\n            throw Error(\"rowWeight must be a non-negative finite value\");\r\n        }\r\n        this._rowWeights[index] = weight;\r\n        this.redraw();\r\n        return this;\r\n    };\r\n    Table.prototype.columnWeight = function (index, weight) {\r\n        if (weight == null) {\r\n            return this._columnWeights[index];\r\n        }\r\n        if (!Utils.Math.isValidNumber(weight) || weight < 0) {\r\n            throw Error(\"columnWeight must be a non-negative finite value\");\r\n        }\r\n        this._columnWeights[index] = weight;\r\n        this.redraw();\r\n        return this;\r\n    };\r\n    Table.prototype.fixedWidth = function () {\r\n        var cols = d3.transpose(this._rows);\r\n        return Table._fixedSpace(cols, function (c) { return (c == null) || c.fixedWidth(); });\r\n    };\r\n    Table.prototype.fixedHeight = function () {\r\n        return Table._fixedSpace(this._rows, function (c) { return (c == null) || c.fixedHeight(); });\r\n    };\r\n    Table.prototype._padTableToSize = function (nRows, nCols) {\r\n        for (var i = 0; i < nRows; i++) {\r\n            if (this._rows[i] === undefined) {\r\n                this._rows[i] = [];\r\n                this._rowWeights[i] = null;\r\n            }\r\n            for (var j = 0; j < nCols; j++) {\r\n                if (this._rows[i][j] === undefined) {\r\n                    this._rows[i][j] = null;\r\n                }\r\n            }\r\n        }\r\n        for (var j = 0; j < nCols; j++) {\r\n            if (this._columnWeights[j] === undefined) {\r\n                this._columnWeights[j] = null;\r\n            }\r\n        }\r\n    };\r\n    Table._calcComponentWeights = function (setWeights, componentGroups, fixityAccessor) {\r\n        // If the row/col weight was explicitly set, then return it outright\r\n        // If the weight was not explicitly set, then guess it using the heuristic that if all components are fixed-space\r\n        // then weight is 0, otherwise weight is 1\r\n        return setWeights.map(function (w, i) {\r\n            if (w != null) {\r\n                return w;\r\n            }\r\n            var fixities = componentGroups[i].map(fixityAccessor);\r\n            var allFixed = fixities.reduce(function (a, b) { return a && b; }, true);\r\n            return allFixed ? 0 : 1;\r\n        });\r\n    };\r\n    Table._calcProportionalSpace = function (weights, freeSpace) {\r\n        var weightSum = d3.sum(weights);\r\n        if (weightSum === 0) {\r\n            return Utils.Array.createFilledArray(0, weights.length);\r\n        }\r\n        else {\r\n            return weights.map(function (w) { return freeSpace * w / weightSum; });\r\n        }\r\n    };\r\n    Table._fixedSpace = function (componentGroup, fixityAccessor) {\r\n        var all = function (bools) { return bools.reduce(function (a, b) { return a && b; }, true); };\r\n        var groupIsFixed = function (components) { return all(components.map(fixityAccessor)); };\r\n        return all(componentGroup.map(groupIsFixed));\r\n    };\r\n    return Table;\r\n}(componentContainer_1.ComponentContainer));\r\nexports.Table = Table;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/table.ts\n// module id = 83\n// module chunks = 0","\"use strict\";\r\n/**\r\n * Copyright 2014-present Palantir Technologies\r\n * @license MIT\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\nvar label_1 = require(\"./label\");\r\nvar DEFAULT_MAX_LINES = 2;\r\nvar WrappedLabel = /** @class */ (function (_super) {\r\n    tslib_1.__extends(WrappedLabel, _super);\r\n    function WrappedLabel() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this._maxLines = DEFAULT_MAX_LINES;\r\n        return _this;\r\n    }\r\n    WrappedLabel.prototype.requestedSpace = function (offeredWidth, offeredHeight) {\r\n        this._wrapper.maxLines(this._maxLines);\r\n        var offeredLineLength = this.angle() === 0 ? offeredWidth : offeredHeight;\r\n        if (offeredLineLength === 0) {\r\n            offeredLineLength = Infinity;\r\n        }\r\n        var wrapped = this._wrapper.wrap(this._text, this._measurer, offeredLineLength);\r\n        var measuredWrap = this._measurer.measure(wrapped.wrappedText);\r\n        var minWidth = (this.angle() === 0 ? measuredWrap.width : measuredWrap.height) + 2 * this.padding();\r\n        var minHeight = (this.angle() === 0 ? measuredWrap.height : measuredWrap.width) + 2 * this.padding();\r\n        return { minWidth: minWidth, minHeight: minHeight };\r\n    };\r\n    WrappedLabel.prototype.maxLines = function (maxLines) {\r\n        // allow user to un-set by passing in null or undefined explicitly\r\n        if (arguments.length === 0) {\r\n            return this._maxLines;\r\n        }\r\n        this._maxLines = maxLines;\r\n        this.redraw();\r\n        return this;\r\n    };\r\n    return WrappedLabel;\r\n}(label_1.Label));\r\nexports.WrappedLabel = WrappedLabel;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/wrappedLabel.ts\n// module id = 84\n// module chunks = 0","\"use strict\";\r\n/**\r\n * Copyright 2014-present Palantir Technologies\r\n * @license MIT\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\nvar dragBoxLayer_1 = require(\"./dragBoxLayer\");\r\nvar XDragBoxLayer = /** @class */ (function (_super) {\r\n    tslib_1.__extends(XDragBoxLayer, _super);\r\n    /**\r\n     * An XDragBoxLayer is a DragBoxLayer whose size can only be set in the X-direction.\r\n     * The y-values of the bounds() are always set to 0 and the height() of the XDragBoxLayer.\r\n     *\r\n     * @constructor\r\n     */\r\n    function XDragBoxLayer() {\r\n        var _this = _super.call(this) || this;\r\n        _this.addClass(\"x-drag-box-layer\");\r\n        _this._hasCorners = false;\r\n        return _this;\r\n    }\r\n    XDragBoxLayer.prototype.computeLayout = function (origin, availableWidth, availableHeight) {\r\n        _super.prototype.computeLayout.call(this, origin, availableWidth, availableHeight);\r\n        // set correct bounds when width/height changes\r\n        this._setBounds(this.bounds());\r\n        return this;\r\n    };\r\n    XDragBoxLayer.prototype._setBounds = function (newBounds) {\r\n        _super.prototype._setBounds.call(this, {\r\n            topLeft: { x: newBounds.topLeft.x, y: 0 },\r\n            bottomRight: { x: newBounds.bottomRight.x, y: this.height() },\r\n        });\r\n    };\r\n    XDragBoxLayer.prototype._setResizableClasses = function (canResize) {\r\n        if (canResize && this.enabled()) {\r\n            this.addClass(\"x-resizable\");\r\n        }\r\n        else {\r\n            this.removeClass(\"x-resizable\");\r\n        }\r\n    };\r\n    XDragBoxLayer.prototype.yScale = function (yScale) {\r\n        if (yScale == null) {\r\n            return _super.prototype.yScale.call(this);\r\n        }\r\n        throw new Error(\"yScales cannot be set on an XDragBoxLayer\");\r\n    };\r\n    XDragBoxLayer.prototype.yExtent = function (yExtent) {\r\n        if (yExtent == null) {\r\n            return _super.prototype.yExtent.call(this);\r\n        }\r\n        throw new Error(\"XDragBoxLayer has no yExtent\");\r\n    };\r\n    return XDragBoxLayer;\r\n}(dragBoxLayer_1.DragBoxLayer));\r\nexports.XDragBoxLayer = XDragBoxLayer;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/xDragBoxLayer.ts\n// module id = 85\n// module chunks = 0","\"use strict\";\r\n/**\r\n * Copyright 2014-present Palantir Technologies\r\n * @license MIT\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\nvar dragBoxLayer_1 = require(\"./dragBoxLayer\");\r\nvar YDragBoxLayer = /** @class */ (function (_super) {\r\n    tslib_1.__extends(YDragBoxLayer, _super);\r\n    /**\r\n     * A YDragBoxLayer is a DragBoxLayer whose size can only be set in the Y-direction.\r\n     * The x-values of the bounds() are always set to 0 and the width() of the YDragBoxLayer.\r\n     *\r\n     * @constructor\r\n     */\r\n    function YDragBoxLayer() {\r\n        var _this = _super.call(this) || this;\r\n        _this.addClass(\"y-drag-box-layer\");\r\n        _this._hasCorners = false;\r\n        return _this;\r\n    }\r\n    YDragBoxLayer.prototype.computeLayout = function (origin, availableWidth, availableHeight) {\r\n        _super.prototype.computeLayout.call(this, origin, availableWidth, availableHeight);\r\n        // set correct bounds when width/height changes\r\n        this._setBounds(this.bounds());\r\n        return this;\r\n    };\r\n    YDragBoxLayer.prototype._setBounds = function (newBounds) {\r\n        _super.prototype._setBounds.call(this, {\r\n            topLeft: { x: 0, y: newBounds.topLeft.y },\r\n            bottomRight: { x: this.width(), y: newBounds.bottomRight.y },\r\n        });\r\n    };\r\n    YDragBoxLayer.prototype._setResizableClasses = function (canResize) {\r\n        if (canResize && this.enabled()) {\r\n            this.addClass(\"y-resizable\");\r\n        }\r\n        else {\r\n            this.removeClass(\"y-resizable\");\r\n        }\r\n    };\r\n    YDragBoxLayer.prototype.xScale = function (xScale) {\r\n        if (xScale == null) {\r\n            return _super.prototype.xScale.call(this);\r\n        }\r\n        throw new Error(\"xScales cannot be set on an YDragBoxLayer\");\r\n    };\r\n    YDragBoxLayer.prototype.xExtent = function (xExtent) {\r\n        if (xExtent == null) {\r\n            return _super.prototype.xExtent.call(this);\r\n        }\r\n        throw new Error(\"YDragBoxLayer has no xExtent\");\r\n    };\r\n    return YDragBoxLayer;\r\n}(dragBoxLayer_1.DragBoxLayer));\r\nexports.YDragBoxLayer = YDragBoxLayer;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/yDragBoxLayer.ts\n// module id = 86\n// module chunks = 0","\"use strict\";\r\n/**\r\n * Copyright 2014-present Palantir Technologies\r\n * @license MIT\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\nvar dispatcher_1 = require(\"./dispatcher\");\r\nvar Key = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Key, _super);\r\n    /**\r\n     * This constructor should not be invoked directly.\r\n     *\r\n     * @constructor\r\n     */\r\n    function Key() {\r\n        var _this = _super.call(this) || this;\r\n        _this._eventToProcessingFunction[Key._KEYDOWN_EVENT_NAME] = function (e) { return _this._processKeydown(e); };\r\n        _this._eventToProcessingFunction[Key._KEYUP_EVENT_NAME] = function (e) { return _this._processKeyup(e); };\r\n        return _this;\r\n    }\r\n    /**\r\n     * Gets a Key Dispatcher. If one already exists it will be returned;\r\n     * otherwise, a new one will be created.\r\n     *\r\n     * @return {Dispatchers.Key}\r\n     */\r\n    Key.getDispatcher = function () {\r\n        var dispatcher = document[Key._DISPATCHER_KEY];\r\n        if (dispatcher == null) {\r\n            dispatcher = new Key();\r\n            document[Key._DISPATCHER_KEY] = dispatcher;\r\n        }\r\n        return dispatcher;\r\n    };\r\n    Key.prototype._processKeydown = function (event) {\r\n        this._callCallbacksForEvent(Key._KEYDOWN_EVENT_NAME, event.keyCode, event);\r\n    };\r\n    Key.prototype._processKeyup = function (event) {\r\n        this._callCallbacksForEvent(Key._KEYUP_EVENT_NAME, event.keyCode, event);\r\n    };\r\n    /**\r\n     * Registers a callback to be called whenever a key is pressed.\r\n     *\r\n     * @param {KeyCallback} callback\r\n     * @return {Dispatchers.Key} The calling Key Dispatcher.\r\n     */\r\n    Key.prototype.onKeyDown = function (callback) {\r\n        this._addCallbackForEvent(Key._KEYDOWN_EVENT_NAME, callback);\r\n        return this;\r\n    };\r\n    /**\r\n     * Removes the callback to be called whenever a key is pressed.\r\n     *\r\n     * @param {KeyCallback} callback\r\n     * @return {Dispatchers.Key} The calling Key Dispatcher.\r\n     */\r\n    Key.prototype.offKeyDown = function (callback) {\r\n        this._removeCallbackForEvent(Key._KEYDOWN_EVENT_NAME, callback);\r\n        return this;\r\n    };\r\n    /** Registers a callback to be called whenever a key is released.\r\n     *\r\n     * @param {KeyCallback} callback\r\n     * @return {Dispatchers.Key} The calling Key Dispatcher.\r\n     */\r\n    Key.prototype.onKeyUp = function (callback) {\r\n        this._addCallbackForEvent(Key._KEYUP_EVENT_NAME, callback);\r\n        return this;\r\n    };\r\n    /**\r\n     * Removes the callback to be called whenever a key is released.\r\n     *\r\n     * @param {KeyCallback} callback\r\n     * @return {Dispatchers.Key} The calling Key Dispatcher.\r\n     */\r\n    Key.prototype.offKeyUp = function (callback) {\r\n        this._removeCallbackForEvent(Key._KEYUP_EVENT_NAME, callback);\r\n        return this;\r\n    };\r\n    Key._DISPATCHER_KEY = \"__Plottable_Dispatcher_Key\";\r\n    Key._KEYDOWN_EVENT_NAME = \"keydown\";\r\n    Key._KEYUP_EVENT_NAME = \"keyup\";\r\n    return Key;\r\n}(dispatcher_1.Dispatcher));\r\nexports.Key = Key;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/dispatchers/keyDispatcher.ts\n// module id = 87\n// module chunks = 0","\"use strict\";\r\n/**\r\n * Copyright 2014-present Palantir Technologies\r\n * @license MIT\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\nvar Utils = require(\"../utils\");\r\nvar dispatcher_1 = require(\"./dispatcher\");\r\nvar Mouse = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Mouse, _super);\r\n    /**\r\n     * This constructor not be invoked directly.\r\n     *\r\n     * @constructor\r\n     */\r\n    function Mouse(component) {\r\n        var _this = _super.call(this) || this;\r\n        _this._lastMousePosition = { x: -1, y: -1 };\r\n        _this._translator = Utils.getTranslator(component);\r\n        var processMoveCallback = function (e) { return _this._measureAndDispatch(component, e, Mouse._MOUSEMOVE_EVENT_NAME, \"page\"); };\r\n        _this._eventToProcessingFunction[Mouse._MOUSEOVER_EVENT_NAME] = processMoveCallback;\r\n        _this._eventToProcessingFunction[Mouse._MOUSEMOVE_EVENT_NAME] = processMoveCallback;\r\n        _this._eventToProcessingFunction[Mouse._MOUSEOUT_EVENT_NAME] = processMoveCallback;\r\n        _this._eventToProcessingFunction[Mouse._MOUSEDOWN_EVENT_NAME] =\r\n            function (e) { return _this._measureAndDispatch(component, e, Mouse._MOUSEDOWN_EVENT_NAME); };\r\n        _this._eventToProcessingFunction[Mouse._MOUSEUP_EVENT_NAME] =\r\n            function (e) { return _this._measureAndDispatch(component, e, Mouse._MOUSEUP_EVENT_NAME, \"page\"); };\r\n        _this._eventToProcessingFunction[Mouse._WHEEL_EVENT_NAME] =\r\n            function (e) { return _this._measureAndDispatch(component, e, Mouse._WHEEL_EVENT_NAME); };\r\n        _this._eventToProcessingFunction[Mouse._DBLCLICK_EVENT_NAME] =\r\n            function (e) { return _this._measureAndDispatch(component, e, Mouse._DBLCLICK_EVENT_NAME); };\r\n        return _this;\r\n    }\r\n    /**\r\n     * Get a Mouse Dispatcher for the component tree.\r\n     * If one already exists on that <svg>, it will be returned; otherwise, a new one will be created.\r\n     *\r\n     * @param {SVGElement} elem\r\n     * @return {Dispatchers.Mouse}\r\n     */\r\n    Mouse.getDispatcher = function (component) {\r\n        var element = component.root().rootElement();\r\n        var dispatcher = element[Mouse._DISPATCHER_KEY];\r\n        if (dispatcher == null) {\r\n            dispatcher = new Mouse(component);\r\n            element[Mouse._DISPATCHER_KEY] = dispatcher;\r\n        }\r\n        return dispatcher;\r\n    };\r\n    /**\r\n     * Registers a callback to be called when the mouse position changes.\r\n     *\r\n     * @param {MouseCallback} callback\r\n     * @return {Dispatchers.Mouse} The calling Mouse Dispatcher.\r\n     */\r\n    Mouse.prototype.onMouseMove = function (callback) {\r\n        this._addCallbackForEvent(Mouse._MOUSEMOVE_EVENT_NAME, callback);\r\n        return this;\r\n    };\r\n    /**\r\n     * Removes a callback that would be called when the mouse position changes.\r\n     *\r\n     * @param {MouseCallback} callback\r\n     * @return {Dispatchers.Mouse} The calling Mouse Dispatcher.\r\n     */\r\n    Mouse.prototype.offMouseMove = function (callback) {\r\n        this._removeCallbackForEvent(Mouse._MOUSEMOVE_EVENT_NAME, callback);\r\n        return this;\r\n    };\r\n    /**\r\n     * Registers a callback to be called when a mousedown occurs.\r\n     *\r\n     * @param {MouseCallback} callback\r\n     * @return {Dispatchers.Mouse} The calling Mouse Dispatcher.\r\n     */\r\n    Mouse.prototype.onMouseDown = function (callback) {\r\n        this._addCallbackForEvent(Mouse._MOUSEDOWN_EVENT_NAME, callback);\r\n        return this;\r\n    };\r\n    /**\r\n     * Removes a callback that would be called when a mousedown occurs.\r\n     *\r\n     * @param {MouseCallback} callback\r\n     * @return {Dispatchers.Mouse} The calling Mouse Dispatcher.\r\n     */\r\n    Mouse.prototype.offMouseDown = function (callback) {\r\n        this._removeCallbackForEvent(Mouse._MOUSEDOWN_EVENT_NAME, callback);\r\n        return this;\r\n    };\r\n    /**\r\n     * Registers a callback to be called when a mouseup occurs.\r\n     *\r\n     * @param {MouseCallback} callback\r\n     * @return {Dispatchers.Mouse} The calling Mouse Dispatcher.\r\n     */\r\n    Mouse.prototype.onMouseUp = function (callback) {\r\n        this._addCallbackForEvent(Mouse._MOUSEUP_EVENT_NAME, callback);\r\n        return this;\r\n    };\r\n    /**\r\n     * Removes a callback that would be called when a mouseup occurs.\r\n     *\r\n     * @param {MouseCallback} callback\r\n     * @return {Dispatchers.Mouse} The calling Mouse Dispatcher.\r\n     */\r\n    Mouse.prototype.offMouseUp = function (callback) {\r\n        this._removeCallbackForEvent(Mouse._MOUSEUP_EVENT_NAME, callback);\r\n        return this;\r\n    };\r\n    /**\r\n     * Registers a callback to be called when a wheel event occurs.\r\n     *\r\n     * @param {MouseCallback} callback\r\n     * @return {Dispatchers.Mouse} The calling Mouse Dispatcher.\r\n     */\r\n    Mouse.prototype.onWheel = function (callback) {\r\n        this._addCallbackForEvent(Mouse._WHEEL_EVENT_NAME, callback);\r\n        return this;\r\n    };\r\n    /**\r\n     * Removes a callback that would be called when a wheel event occurs.\r\n     *\r\n     * @param {MouseCallback} callback\r\n     * @return {Dispatchers.Mouse} The calling Mouse Dispatcher.\r\n     */\r\n    Mouse.prototype.offWheel = function (callback) {\r\n        this._removeCallbackForEvent(Mouse._WHEEL_EVENT_NAME, callback);\r\n        return this;\r\n    };\r\n    /**\r\n     * Registers a callback to be called when a dblClick occurs.\r\n     *\r\n     * @param {MouseCallback} callback\r\n     * @return {Dispatchers.Mouse} The calling Mouse Dispatcher.\r\n     */\r\n    Mouse.prototype.onDblClick = function (callback) {\r\n        this._addCallbackForEvent(Mouse._DBLCLICK_EVENT_NAME, callback);\r\n        return this;\r\n    };\r\n    /**\r\n     * Removes a callback that would be called when a dblClick occurs.\r\n     *\r\n     * @param {MouseCallback} callback\r\n     * @return {Dispatchers.Mouse} The calling Mouse Dispatcher.\r\n     */\r\n    Mouse.prototype.offDblClick = function (callback) {\r\n        this._removeCallbackForEvent(Mouse._DBLCLICK_EVENT_NAME, callback);\r\n        return this;\r\n    };\r\n    /**\r\n     * Computes the mouse position from the given event, and if successful\r\n     * calls all the callbacks in the provided callbackSet.\r\n     */\r\n    Mouse.prototype._measureAndDispatch = function (component, event, eventName, scope) {\r\n        if (scope === void 0) { scope = \"element\"; }\r\n        if (scope !== \"page\" && scope !== \"element\") {\r\n            throw new Error(\"Invalid scope '\" + scope + \"', must be 'element' or 'page'\");\r\n        }\r\n        if (scope === \"page\" || this.eventInside(component, event)) {\r\n            var position = this._translator.computePosition(event.clientX, event.clientY);\r\n            this._lastMousePosition = position;\r\n            this._callCallbacksForEvent(eventName, this.lastMousePosition(), event);\r\n        }\r\n    };\r\n    Mouse.prototype.eventInside = function (component, event) {\r\n        return Utils.Translator.isEventInside(component, event);\r\n    };\r\n    /**\r\n     * Returns the last computed mouse position in <svg> coordinate space.\r\n     *\r\n     * @return {Point}\r\n     */\r\n    Mouse.prototype.lastMousePosition = function () {\r\n        return this._lastMousePosition;\r\n    };\r\n    Mouse._DISPATCHER_KEY = \"__Plottable_Dispatcher_Mouse\";\r\n    Mouse._MOUSEOVER_EVENT_NAME = \"mouseover\";\r\n    Mouse._MOUSEMOVE_EVENT_NAME = \"mousemove\";\r\n    Mouse._MOUSEOUT_EVENT_NAME = \"mouseout\";\r\n    Mouse._MOUSEDOWN_EVENT_NAME = \"mousedown\";\r\n    Mouse._MOUSEUP_EVENT_NAME = \"mouseup\";\r\n    Mouse._WHEEL_EVENT_NAME = \"wheel\";\r\n    Mouse._DBLCLICK_EVENT_NAME = \"dblclick\";\r\n    return Mouse;\r\n}(dispatcher_1.Dispatcher));\r\nexports.Mouse = Mouse;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/dispatchers/mouseDispatcher.ts\n// module id = 88\n// module chunks = 0","\"use strict\";\r\n/**\r\n * Copyright 2014-present Palantir Technologies\r\n * @license MIT\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\nvar Utils = require(\"../utils\");\r\nvar dispatcher_1 = require(\"./dispatcher\");\r\nvar Touch = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Touch, _super);\r\n    /**\r\n     * This constructor should not be invoked directly.\r\n     *\r\n     * @param {SVGElement} svg The root <svg> to attach to.\r\n     */\r\n    function Touch(component) {\r\n        var _this = _super.call(this) || this;\r\n        _this._translator = Utils.getTranslator(component);\r\n        _this._eventToProcessingFunction[Touch._TOUCHSTART_EVENT_NAME] =\r\n            function (e) { return _this._measureAndDispatch(component, e, Touch._TOUCHSTART_EVENT_NAME, \"page\"); };\r\n        _this._eventToProcessingFunction[Touch._TOUCHMOVE_EVENT_NAME] =\r\n            function (e) { return _this._measureAndDispatch(component, e, Touch._TOUCHMOVE_EVENT_NAME, \"page\"); };\r\n        _this._eventToProcessingFunction[Touch._TOUCHEND_EVENT_NAME] =\r\n            function (e) { return _this._measureAndDispatch(component, e, Touch._TOUCHEND_EVENT_NAME, \"page\"); };\r\n        _this._eventToProcessingFunction[Touch._TOUCHCANCEL_EVENT_NAME] =\r\n            function (e) { return _this._measureAndDispatch(component, e, Touch._TOUCHCANCEL_EVENT_NAME, \"page\"); };\r\n        return _this;\r\n    }\r\n    /**\r\n     * Gets a Touch Dispatcher for the component.\r\n     * If one already exists, it will be returned; otherwise, a new one will be created.\r\n     *\r\n     * @param component\r\n     * @return {Dispatchers.Touch}\r\n     */\r\n    Touch.getDispatcher = function (component) {\r\n        var svg = component.root().rootElement();\r\n        var dispatcher = svg[Touch._DISPATCHER_KEY];\r\n        if (dispatcher == null) {\r\n            dispatcher = new Touch(component);\r\n            svg[Touch._DISPATCHER_KEY] = dispatcher;\r\n        }\r\n        return dispatcher;\r\n    };\r\n    /**\r\n     * Registers a callback to be called when a touch starts.\r\n     *\r\n     * @param {TouchCallback} callback\r\n     * @return {Dispatchers.Touch} The calling Touch Dispatcher.\r\n     */\r\n    Touch.prototype.onTouchStart = function (callback) {\r\n        this._addCallbackForEvent(Touch._TOUCHSTART_EVENT_NAME, callback);\r\n        return this;\r\n    };\r\n    /**\r\n     * Removes a callback that would be called when a touch starts.\r\n     *\r\n     * @param {TouchCallback} callback\r\n     * @return {Dispatchers.Touch} The calling Touch Dispatcher.\r\n     */\r\n    Touch.prototype.offTouchStart = function (callback) {\r\n        this._removeCallbackForEvent(Touch._TOUCHSTART_EVENT_NAME, callback);\r\n        return this;\r\n    };\r\n    /**\r\n     * Registers a callback to be called when the touch position changes.\r\n     *\r\n     * @param {TouchCallback} callback\r\n     * @return {Dispatchers.Touch} The calling Touch Dispatcher.\r\n     */\r\n    Touch.prototype.onTouchMove = function (callback) {\r\n        this._addCallbackForEvent(Touch._TOUCHMOVE_EVENT_NAME, callback);\r\n        return this;\r\n    };\r\n    /**\r\n     * Removes a callback that would be called when the touch position changes.\r\n     *\r\n     * @param {TouchCallback} callback\r\n     * @return {Dispatchers.Touch} The calling Touch Dispatcher.\r\n     */\r\n    Touch.prototype.offTouchMove = function (callback) {\r\n        this._removeCallbackForEvent(Touch._TOUCHMOVE_EVENT_NAME, callback);\r\n        return this;\r\n    };\r\n    /**\r\n     * Registers a callback to be called when a touch ends.\r\n     *\r\n     * @param {TouchCallback} callback\r\n     * @return {Dispatchers.Touch} The calling Touch Dispatcher.\r\n     */\r\n    Touch.prototype.onTouchEnd = function (callback) {\r\n        this._addCallbackForEvent(Touch._TOUCHEND_EVENT_NAME, callback);\r\n        return this;\r\n    };\r\n    /**\r\n     * Removes a callback that would be called when a touch ends.\r\n     *\r\n     * @param {TouchCallback} callback\r\n     * @return {Dispatchers.Touch} The calling Touch Dispatcher.\r\n     */\r\n    Touch.prototype.offTouchEnd = function (callback) {\r\n        this._removeCallbackForEvent(Touch._TOUCHEND_EVENT_NAME, callback);\r\n        return this;\r\n    };\r\n    /**\r\n     * Registers a callback to be called when a touch is cancelled.\r\n     *\r\n     * @param {TouchCallback} callback\r\n     * @return {Dispatchers.Touch} The calling Touch Dispatcher.\r\n     */\r\n    Touch.prototype.onTouchCancel = function (callback) {\r\n        this._addCallbackForEvent(Touch._TOUCHCANCEL_EVENT_NAME, callback);\r\n        return this;\r\n    };\r\n    /**\r\n     * Removes a callback that would be called when a touch is cancelled.\r\n     *\r\n     * @param {TouchCallback} callback\r\n     * @return {Dispatchers.Touch} The calling Touch Dispatcher.\r\n     */\r\n    Touch.prototype.offTouchCancel = function (callback) {\r\n        this._removeCallbackForEvent(Touch._TOUCHCANCEL_EVENT_NAME, callback);\r\n        return this;\r\n    };\r\n    /**\r\n     * Computes the Touch position from the given event, and if successful\r\n     * calls all the callbacks in the provided callbackSet.\r\n     */\r\n    Touch.prototype._measureAndDispatch = function (component, event, eventName, scope) {\r\n        if (scope === void 0) { scope = \"element\"; }\r\n        if (scope !== \"page\" && scope !== \"element\") {\r\n            throw new Error(\"Invalid scope '\" + scope + \"', must be 'element' or 'page'\");\r\n        }\r\n        if (scope === \"element\" && !this.eventInside(component, event)) {\r\n            return;\r\n        }\r\n        var touches = event.changedTouches;\r\n        var touchPositions = {};\r\n        var touchIdentifiers = [];\r\n        for (var i = 0; i < touches.length; i++) {\r\n            var touch = touches[i];\r\n            var touchID = touch.identifier;\r\n            var newTouchPosition = this._translator.computePosition(touch.clientX, touch.clientY);\r\n            if (newTouchPosition != null) {\r\n                touchPositions[touchID] = newTouchPosition;\r\n                touchIdentifiers.push(touchID);\r\n            }\r\n        }\r\n        ;\r\n        if (touchIdentifiers.length > 0) {\r\n            this._callCallbacksForEvent(eventName, touchIdentifiers, touchPositions, event);\r\n        }\r\n    };\r\n    Touch.prototype.eventInside = function (component, event) {\r\n        return Utils.Translator.isEventInside(component, event);\r\n    };\r\n    Touch._DISPATCHER_KEY = \"__Plottable_Dispatcher_Touch\";\r\n    Touch._TOUCHSTART_EVENT_NAME = \"touchstart\";\r\n    Touch._TOUCHMOVE_EVENT_NAME = \"touchmove\";\r\n    Touch._TOUCHEND_EVENT_NAME = \"touchend\";\r\n    Touch._TOUCHCANCEL_EVENT_NAME = \"touchcancel\";\r\n    return Touch;\r\n}(dispatcher_1.Dispatcher));\r\nexports.Touch = Touch;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/dispatchers/touchDispatcher.ts\n// module id = 89\n// module chunks = 0","\"use strict\";\r\n/**\r\n * Copyright 2017-present Palantir Technologies\r\n * @license MIT\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar CanvasBuffer = /** @class */ (function () {\r\n    function CanvasBuffer(screenWidth, screenHeight, devicePixelRatio) {\r\n        if (devicePixelRatio === void 0) { devicePixelRatio = window.devicePixelRatio; }\r\n        this.screenWidth = screenWidth;\r\n        this.screenHeight = screenHeight;\r\n        this.devicePixelRatio = devicePixelRatio;\r\n        this.pixelWidth = screenWidth * devicePixelRatio;\r\n        this.pixelHeight = screenHeight * devicePixelRatio;\r\n        this.canvas = document.createElement(\"canvas\");\r\n        this.ctx = this.canvas.getContext(\"2d\");\r\n        CanvasBuffer.sizePixels(this.ctx, screenWidth, screenHeight, devicePixelRatio);\r\n    }\r\n    /**\r\n     * Resizes the canvas' internal pixel buffer to match the devicePixelRatio\r\n     */\r\n    CanvasBuffer.sizePixels = function (ctx, screenWidth, screenHeight, devicePixelRatio) {\r\n        var canvas = ctx.canvas;\r\n        canvas.width = screenWidth * devicePixelRatio;\r\n        canvas.height = screenHeight * devicePixelRatio;\r\n        canvas.style.width = screenWidth + \"px\";\r\n        canvas.style.height = screenHeight + \"px\";\r\n        ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n        ctx.scale(devicePixelRatio, devicePixelRatio);\r\n    };\r\n    CanvasBuffer.prototype.blit = function (ctx, x, y) {\r\n        if (x === void 0) { x = 0; }\r\n        if (y === void 0) { y = 0; }\r\n        ctx.drawImage(this.canvas, x, y, this.screenWidth, this.screenHeight);\r\n    };\r\n    CanvasBuffer.prototype.blitCenter = function (ctx, x, y) {\r\n        if (x === void 0) { x = 0; }\r\n        if (y === void 0) { y = 0; }\r\n        this.blit(ctx, Math.floor(x - this.screenWidth / 2), Math.floor(y - this.screenHeight / 2));\r\n    };\r\n    /**\r\n     * Changes the size of the underlying canvas in screen space, respecting the\r\n     * current devicePixelRatio.\r\n     *\r\n     * @param center - optionally enable a translate transformation moving the\r\n     *                 origin to the center of the canvas.\r\n     */\r\n    CanvasBuffer.prototype.resize = function (screenWidth, screenHeight, center) {\r\n        if (center === void 0) { center = false; }\r\n        var devicePixelRatio = this.devicePixelRatio;\r\n        this.screenWidth = screenWidth;\r\n        this.screenHeight = screenHeight;\r\n        this.pixelWidth = screenWidth * devicePixelRatio;\r\n        this.pixelHeight = screenHeight * devicePixelRatio;\r\n        CanvasBuffer.sizePixels(this.ctx, screenWidth, screenHeight, devicePixelRatio);\r\n        if (center) {\r\n            this.ctx.translate(screenWidth / 2, screenWidth / 2);\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Temporarily resets the current context transformation and fills the\r\n     * entire canvas with the provided color. If no color is provided, the\r\n     * canvas is cleared instead.\r\n     */\r\n    CanvasBuffer.prototype.clear = function (color) {\r\n        var _a = this, pixelWidth = _a.pixelWidth, pixelHeight = _a.pixelHeight, ctx = _a.ctx;\r\n        ctx.save();\r\n        ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n        if (color == null) {\r\n            ctx.clearRect(0, 0, pixelWidth, pixelHeight);\r\n        }\r\n        else {\r\n            ctx.fillStyle = color;\r\n            ctx.fillRect(0, 0, pixelWidth, pixelHeight);\r\n        }\r\n        ctx.restore();\r\n        return this;\r\n    };\r\n    CanvasBuffer.prototype.getImageData = function () {\r\n        return this.ctx.getImageData(0, 0, this.pixelWidth, this.pixelHeight);\r\n    };\r\n    return CanvasBuffer;\r\n}());\r\nexports.CanvasBuffer = CanvasBuffer;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/drawers/canvasBuffer.ts\n// module id = 90\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\n// HACKHACK d3-selection-multi doesn't play well with default \"d3\" package in a\r\n// bundler environment (e.g. webpack) - see https://github.com/d3/d3-selection-multi/issues/11\r\n// we add it manually to the default \"d3\" bundle\r\nrequire(\"./utils/addD3SelectionMulti\");\r\nvar Animators = require(\"./animators\");\r\nexports.Animators = Animators;\r\nvar Axes = require(\"./axes\");\r\nexports.Axes = Axes;\r\nvar Components = require(\"./components\");\r\nexports.Components = Components;\r\nvar Configs = require(\"./core/config\");\r\nexports.Configs = Configs;\r\nvar Formatters = require(\"./core/formatters\");\r\nexports.Formatters = Formatters;\r\nvar RenderController = require(\"./core/renderController\");\r\nexports.RenderController = RenderController;\r\nvar RenderPolicies = require(\"./core/renderPolicy\");\r\nexports.RenderPolicies = RenderPolicies;\r\nvar SymbolFactories = require(\"./core/symbolFactories\");\r\nexports.SymbolFactories = SymbolFactories;\r\nvar Dispatchers = require(\"./dispatchers\");\r\nexports.Dispatchers = Dispatchers;\r\nvar Drawers = require(\"./drawers\");\r\nexports.Drawers = Drawers;\r\nvar Interactions = require(\"./interactions\");\r\nexports.Interactions = Interactions;\r\nvar Plots = require(\"./plots\");\r\nexports.Plots = Plots;\r\nvar Scales = require(\"./scales\");\r\nexports.Scales = Scales;\r\nvar Utils = require(\"./utils\");\r\nexports.Utils = Utils;\r\ntslib_1.__exportStar(require(\"./axes/axis\"), exports);\r\nvar timeAxis_1 = require(\"./axes/timeAxis\");\r\nexports.TimeInterval = timeAxis_1.TimeInterval;\r\ntslib_1.__exportStar(require(\"./components/component\"), exports);\r\ntslib_1.__exportStar(require(\"./components/componentContainer\"), exports);\r\ntslib_1.__exportStar(require(\"./core/dataset\"), exports);\r\nvar version_1 = require(\"./core/version\");\r\nexports.version = version_1.version;\r\ntslib_1.__exportStar(require(\"./dispatchers/dispatcher\"), exports);\r\ntslib_1.__exportStar(require(\"./drawers/drawer\"), exports);\r\ntslib_1.__exportStar(require(\"./interactions/interaction\"), exports);\r\ntslib_1.__exportStar(require(\"./interactions/keyInteraction\"), exports);\r\ntslib_1.__exportStar(require(\"./plots/xyPlot\"), exports);\r\ntslib_1.__exportStar(require(\"./plots/plot\"), exports);\r\ntslib_1.__exportStar(require(\"./scales/quantitativeScale\"), exports);\r\ntslib_1.__exportStar(require(\"./scales/scale\"), exports);\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/index.ts\n// module id = 91\n// module chunks = 0","\"use strict\";\r\n/**\r\n * Copyright 2014-present Palantir Technologies\r\n * @license MIT\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\nvar Dispatchers = require(\"../dispatchers\");\r\nvar Utils = require(\"../utils\");\r\nvar interaction_1 = require(\"./interaction\");\r\nvar Click = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Click, _super);\r\n    function Click() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this._clickedDown = false;\r\n        _this._doubleClicking = false;\r\n        _this._onClickCallbacks = new Utils.CallbackSet();\r\n        _this._onDoubleClickCallbacks = new Utils.CallbackSet();\r\n        /**\r\n         * Note: we bind to mousedown, mouseup, touchstart and touchend because browsers\r\n         * have a 300ms delay between touchstart and click to allow for scrolling cancelling etc.\r\n         */\r\n        _this._mouseDownCallback = function (p, event) { return _this._handleClickDown(p, event); };\r\n        _this._mouseUpCallback = function (p, event) { return _this._handleClickUp(p, event); };\r\n        _this._dblClickCallback = function (p, event) { return _this._handleDblClick(p, event); };\r\n        _this._touchStartCallback = function (ids, idToPoint, event) { return _this._handleClickDown(idToPoint[ids[0]], event); };\r\n        _this._touchEndCallback = function (ids, idToPoint, event) { return _this._handleClickUp(idToPoint[ids[0]], event); };\r\n        _this._touchCancelCallback = function (ids, idToPoint) { return _this._clickedDown = false; };\r\n        return _this;\r\n    }\r\n    Click.prototype._anchor = function (component) {\r\n        _super.prototype._anchor.call(this, component);\r\n        this._mouseDispatcher = Dispatchers.Mouse.getDispatcher(component);\r\n        this._mouseDispatcher.onMouseDown(this._mouseDownCallback);\r\n        this._mouseDispatcher.onMouseUp(this._mouseUpCallback);\r\n        this._mouseDispatcher.onDblClick(this._dblClickCallback);\r\n        this._touchDispatcher = Dispatchers.Touch.getDispatcher(component);\r\n        this._touchDispatcher.onTouchStart(this._touchStartCallback);\r\n        this._touchDispatcher.onTouchEnd(this._touchEndCallback);\r\n        this._touchDispatcher.onTouchCancel(this._touchCancelCallback);\r\n    };\r\n    Click.prototype._unanchor = function () {\r\n        _super.prototype._unanchor.call(this);\r\n        this._mouseDispatcher.offMouseDown(this._mouseDownCallback);\r\n        this._mouseDispatcher.offMouseUp(this._mouseUpCallback);\r\n        this._mouseDispatcher.offDblClick(this._dblClickCallback);\r\n        this._mouseDispatcher = null;\r\n        this._touchDispatcher.offTouchStart(this._touchStartCallback);\r\n        this._touchDispatcher.offTouchEnd(this._touchEndCallback);\r\n        this._touchDispatcher.offTouchCancel(this._touchCancelCallback);\r\n        this._touchDispatcher = null;\r\n    };\r\n    Click.prototype._handleClickDown = function (p, event) {\r\n        var translatedP = this._translateToComponentSpace(p);\r\n        if (this._isInsideComponent(translatedP)) {\r\n            this._clickedDown = true;\r\n            this._clickedPoint = translatedP;\r\n        }\r\n    };\r\n    Click.prototype._handleClickUp = function (p, event) {\r\n        var _this = this;\r\n        var translatedP = this._translateToComponentSpace(p);\r\n        if (this._clickedDown && Click._pointsEqual(translatedP, this._clickedPoint)) {\r\n            setTimeout(function () {\r\n                if (!_this._doubleClicking) {\r\n                    _this._onClickCallbacks.callCallbacks(translatedP, event);\r\n                }\r\n            }, 0);\r\n        }\r\n        this._clickedDown = false;\r\n    };\r\n    Click.prototype._handleDblClick = function (p, event) {\r\n        var _this = this;\r\n        var translatedP = this._translateToComponentSpace(p);\r\n        this._doubleClicking = true;\r\n        this._onDoubleClickCallbacks.callCallbacks(translatedP, event);\r\n        setTimeout(function () { return _this._doubleClicking = false; }, 0);\r\n    };\r\n    Click._pointsEqual = function (p1, p2) {\r\n        return p1.x === p2.x && p1.y === p2.y;\r\n    };\r\n    /**\r\n     * Adds a callback to be called when the Component is clicked.\r\n     *\r\n     * @param {ClickCallback} callback\r\n     * @return {Interactions.Click} The calling Click Interaction.\r\n     */\r\n    Click.prototype.onClick = function (callback) {\r\n        this._onClickCallbacks.add(callback);\r\n        return this;\r\n    };\r\n    /**\r\n     * Removes a callback that would be called when the Component is clicked.\r\n     *\r\n     * @param {ClickCallback} callback\r\n     * @return {Interactions.Click} The calling Click Interaction.\r\n     */\r\n    Click.prototype.offClick = function (callback) {\r\n        this._onClickCallbacks.delete(callback);\r\n        return this;\r\n    };\r\n    /**\r\n     * Adds a callback to be called when the Component is double-clicked.\r\n     *\r\n     * @param {ClickCallback} callback\r\n     * @return {Interactions.Click} The calling Click Interaction.\r\n     */\r\n    Click.prototype.onDoubleClick = function (callback) {\r\n        this._onDoubleClickCallbacks.add(callback);\r\n        return this;\r\n    };\r\n    /**\r\n     * Removes a callback that would be called when the Component is double-clicked.\r\n     *\r\n     * @param {ClickCallback} callback\r\n     * @return {Interactions.Click} The calling Click Interaction.\r\n     */\r\n    Click.prototype.offDoubleClick = function (callback) {\r\n        this._onDoubleClickCallbacks.delete(callback);\r\n        return this;\r\n    };\r\n    return Click;\r\n}(interaction_1.Interaction));\r\nexports.Click = Click;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/interactions/clickInteraction.ts\n// module id = 92\n// module chunks = 0","\"use strict\";\r\n/**\r\n * Copyright 2014-present Palantir Technologies\r\n * @license MIT\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\nvar Dispatchers = require(\"../dispatchers\");\r\nvar Utils = require(\"../utils\");\r\nvar interaction_1 = require(\"./interaction\");\r\nvar Drag = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Drag, _super);\r\n    function Drag(mouseButton) {\r\n        var _this = _super.call(this) || this;\r\n        _this._dragging = false;\r\n        _this._constrainedToComponent = true;\r\n        /**\r\n         * Only emit events when the mouseFilter is true for the source mouse\r\n         * events. Use this to define custom filters (e.g. only right click,\r\n         * require shift to be held down, etc.)\r\n         */\r\n        _this._mouseFilter = Drag._DEFAULT_MOUSE_FILTER;\r\n        _this._dragStartCallbacks = new Utils.CallbackSet();\r\n        _this._dragCallbacks = new Utils.CallbackSet();\r\n        _this._dragEndCallbacks = new Utils.CallbackSet();\r\n        _this._mouseDownCallback = function (p, e) { return _this._startDrag(p, e); };\r\n        _this._mouseMoveCallback = function (p, e) { return _this._doDrag(p, e); };\r\n        _this._mouseUpCallback = function (p, e) { return _this._endDrag(p, e); };\r\n        _this._touchStartCallback = function (ids, idToPoint, e) { return _this._startDrag(idToPoint[ids[0]], e); };\r\n        _this._touchMoveCallback = function (ids, idToPoint, e) { return _this._doDrag(idToPoint[ids[0]], e); };\r\n        _this._touchEndCallback = function (ids, idToPoint, e) { return _this._endDrag(idToPoint[ids[0]], e); };\r\n        _this._mouseButton = mouseButton !== undefined ? mouseButton : 0;\r\n        return _this;\r\n    }\r\n    Drag.prototype._anchor = function (component) {\r\n        _super.prototype._anchor.call(this, component);\r\n        this._mouseDispatcher = Dispatchers.Mouse.getDispatcher(this._componentAttachedTo);\r\n        this._mouseDispatcher.onMouseDown(this._mouseDownCallback);\r\n        this._mouseDispatcher.onMouseMove(this._mouseMoveCallback);\r\n        this._mouseDispatcher.onMouseUp(this._mouseUpCallback);\r\n        this._touchDispatcher = Dispatchers.Touch.getDispatcher(this._componentAttachedTo);\r\n        this._touchDispatcher.onTouchStart(this._touchStartCallback);\r\n        this._touchDispatcher.onTouchMove(this._touchMoveCallback);\r\n        this._touchDispatcher.onTouchEnd(this._touchEndCallback);\r\n    };\r\n    Drag.prototype._unanchor = function () {\r\n        _super.prototype._unanchor.call(this);\r\n        this._mouseDispatcher.offMouseDown(this._mouseDownCallback);\r\n        this._mouseDispatcher.offMouseMove(this._mouseMoveCallback);\r\n        this._mouseDispatcher.offMouseUp(this._mouseUpCallback);\r\n        this._mouseDispatcher = null;\r\n        this._touchDispatcher.offTouchStart(this._touchStartCallback);\r\n        this._touchDispatcher.offTouchMove(this._touchMoveCallback);\r\n        this._touchDispatcher.offTouchEnd(this._touchEndCallback);\r\n        this._touchDispatcher = null;\r\n    };\r\n    Drag.prototype._translateAndConstrain = function (p) {\r\n        var translatedP = this._translateToComponentSpace(p);\r\n        if (!this._constrainedToComponent) {\r\n            return translatedP;\r\n        }\r\n        return {\r\n            x: Utils.Math.clamp(translatedP.x, 0, this._componentAttachedTo.width()),\r\n            y: Utils.Math.clamp(translatedP.y, 0, this._componentAttachedTo.height()),\r\n        };\r\n    };\r\n    Drag.prototype._startDrag = function (point, event) {\r\n        if (event instanceof MouseEvent && !this._mouseFilter(event)) {\r\n            return;\r\n        }\r\n        var translatedP = this._translateToComponentSpace(point);\r\n        if (this._isInsideComponent(translatedP)) {\r\n            event.preventDefault();\r\n            this._dragging = true;\r\n            this._dragOrigin = translatedP;\r\n            this._dragStartCallbacks.callCallbacks(this._dragOrigin);\r\n        }\r\n    };\r\n    Drag.prototype._doDrag = function (point, event) {\r\n        if (this._dragging) {\r\n            this._dragCallbacks.callCallbacks(this._dragOrigin, this._translateAndConstrain(point));\r\n        }\r\n    };\r\n    Drag.prototype._endDrag = function (point, event) {\r\n        if (event instanceof MouseEvent && event.button !== this._mouseButton) {\r\n            return;\r\n        }\r\n        if (this._dragging) {\r\n            this._dragging = false;\r\n            this._dragEndCallbacks.callCallbacks(this._dragOrigin, this._translateAndConstrain(point));\r\n        }\r\n    };\r\n    Drag.prototype.constrainedToComponent = function (constrainedToComponent) {\r\n        if (constrainedToComponent == null) {\r\n            return this._constrainedToComponent;\r\n        }\r\n        this._constrainedToComponent = constrainedToComponent;\r\n        return this;\r\n    };\r\n    Drag.prototype.mouseFilter = function (filter) {\r\n        if (arguments.length === 0) {\r\n            return this._mouseFilter;\r\n        }\r\n        this._mouseFilter = filter;\r\n        return this;\r\n    };\r\n    /**\r\n     * Adds a callback to be called when dragging starts.\r\n     *\r\n     * @param {DragCallback} callback\r\n     * @returns {Drag} The calling Drag Interaction.\r\n     */\r\n    Drag.prototype.onDragStart = function (callback) {\r\n        this._dragStartCallbacks.add(callback);\r\n        return this;\r\n    };\r\n    /**\r\n     * Removes a callback that would be called when dragging starts.\r\n     *\r\n     * @param {DragCallback} callback\r\n     * @returns {Drag} The calling Drag Interaction.\r\n     */\r\n    Drag.prototype.offDragStart = function (callback) {\r\n        this._dragStartCallbacks.delete(callback);\r\n        return this;\r\n    };\r\n    /**\r\n     * Adds a callback to be called during dragging.\r\n     *\r\n     * @param {DragCallback} callback\r\n     * @returns {Drag} The calling Drag Interaction.\r\n     */\r\n    Drag.prototype.onDrag = function (callback) {\r\n        this._dragCallbacks.add(callback);\r\n        return this;\r\n    };\r\n    /**\r\n     * Removes a callback that would be called during dragging.\r\n     *\r\n     * @param {DragCallback} callback\r\n     * @returns {Drag} The calling Drag Interaction.\r\n     */\r\n    Drag.prototype.offDrag = function (callback) {\r\n        this._dragCallbacks.delete(callback);\r\n        return this;\r\n    };\r\n    /**\r\n     * Adds a callback to be called when dragging ends.\r\n     *\r\n     * @param {DragCallback} callback\r\n     * @returns {Drag} The calling Drag Interaction.\r\n     */\r\n    Drag.prototype.onDragEnd = function (callback) {\r\n        this._dragEndCallbacks.add(callback);\r\n        return this;\r\n    };\r\n    /**\r\n     * Removes a callback that would be called when dragging ends.\r\n     *\r\n     * @param {DragCallback} callback\r\n     * @returns {Drag} The calling Drag Interaction.\r\n     */\r\n    Drag.prototype.offDragEnd = function (callback) {\r\n        this._dragEndCallbacks.delete(callback);\r\n        return this;\r\n    };\r\n    Drag._DEFAULT_MOUSE_FILTER = function (event) { return event.button === 0; };\r\n    return Drag;\r\n}(interaction_1.Interaction));\r\nexports.Drag = Drag;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/interactions/dragInteraction.ts\n// module id = 93\n// module chunks = 0","\"use strict\";\r\n/**\r\n * Copyright 2014-present Palantir Technologies\r\n * @license MIT\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\nvar d3 = require(\"d3\");\r\nvar Dispatchers = require(\"../dispatchers\");\r\nvar Scales = require(\"../scales\");\r\nvar Utils = require(\"../utils\");\r\nvar Interactions = require(\"./\");\r\nvar interaction_1 = require(\"./interaction\");\r\nvar panZoomConstraints_1 = require(\"./panZoomConstraints\");\r\nvar PanZoom = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PanZoom, _super);\r\n    /**\r\n     * A PanZoom Interaction updates the domains of an x-scale and/or a y-scale\r\n     * in response to the user panning or zooming.\r\n     *\r\n     * @constructor\r\n     * @param {TransformableScale} [xScale] The x-scale to update on panning/zooming.\r\n     * @param {TransformableScale} [yScale] The y-scale to update on panning/zooming.\r\n     */\r\n    function PanZoom(xScale, yScale) {\r\n        var _this = _super.call(this) || this;\r\n        _this._wheelFilter = function (e) { return true; };\r\n        _this._wheelCallback = function (p, e) { return _this._handleWheelEvent(p, e); };\r\n        _this._touchStartCallback = function (ids, idToPoint, e) { return _this._handleTouchStart(ids, idToPoint, e); };\r\n        _this._touchMoveCallback = function (ids, idToPoint, e) { return _this._handlePinch(ids, idToPoint, e); };\r\n        _this._touchEndCallback = function (ids, idToPoint, e) { return _this._handleTouchEnd(ids, idToPoint, e); };\r\n        _this._touchCancelCallback = function (ids, idToPoint, e) { return _this._handleTouchEnd(ids, idToPoint, e); };\r\n        _this._panEndCallbacks = new Utils.CallbackSet();\r\n        _this._zoomEndCallbacks = new Utils.CallbackSet();\r\n        _this._panZoomUpdateCallbacks = new Utils.CallbackSet();\r\n        _this._xScales = new Utils.Set();\r\n        _this._yScales = new Utils.Set();\r\n        _this._dragInteraction = new Interactions.Drag();\r\n        _this._setupDragInteraction();\r\n        _this._touchIds = d3.map();\r\n        _this._minDomainExtents = new Utils.Map();\r\n        _this._maxDomainExtents = new Utils.Map();\r\n        _this._minDomainValues = new Utils.Map();\r\n        _this._maxDomainValues = new Utils.Map();\r\n        if (xScale != null) {\r\n            _this.addXScale(xScale);\r\n        }\r\n        if (yScale != null) {\r\n            _this.addYScale(yScale);\r\n        }\r\n        return _this;\r\n    }\r\n    /**\r\n     * Get the backing drag interaction. Useful to customize the panzoom interaction.\r\n     * @returns {Drag}\r\n     */\r\n    PanZoom.prototype.dragInteraction = function () {\r\n        return this._dragInteraction;\r\n    };\r\n    PanZoom.prototype.wheelFilter = function (filter) {\r\n        if (arguments.length === 0) {\r\n            return this._wheelFilter;\r\n        }\r\n        this._wheelFilter = filter;\r\n        return this;\r\n    };\r\n    /**\r\n     * Pans the chart by a specified amount\r\n     *\r\n     * @param {Plottable.Point} [translateAmount] The amount by which to translate the x and y scales.\r\n     */\r\n    PanZoom.prototype.pan = function (translateAmount) {\r\n        var _this = this;\r\n        this.xScales().forEach(function (xScale) {\r\n            xScale.pan(_this._constrainedTranslation(xScale, translateAmount.x));\r\n        });\r\n        this.yScales().forEach(function (yScale) {\r\n            yScale.pan(_this._constrainedTranslation(yScale, translateAmount.y));\r\n        });\r\n        this._panZoomUpdateCallbacks.callCallbacks();\r\n    };\r\n    /**\r\n     * Zooms the chart by a specified amount around a specific point\r\n     *\r\n     * @param {number} [zoomAmount] The percentage by which to zoom the x and y scale.\r\n     * A value of 0.9 zooms in by 10%. A value of 1.1 zooms out by 10%. A value of 1 has\r\n     * no effect.\r\n     * @param {Plottable.Point} [centerValue] The center in pixels around which to zoom.\r\n     * By default, `centerValue` is the center of the x and y range of each scale.\r\n     * @param {boolean} [constrained] Whether to respect the zoom extents and min/max\r\n     * values. Default true.\r\n     */\r\n    PanZoom.prototype.zoom = function (zoomAmount, centerValue, constrained) {\r\n        var _this = this;\r\n        if (constrained === void 0) { constrained = true; }\r\n        var centerX;\r\n        var centerY;\r\n        if (centerValue != null) {\r\n            centerX = centerValue.x;\r\n            centerY = centerValue.y;\r\n            if (constrained) {\r\n                this.xScales().forEach(function (xScale) {\r\n                    var constrained = _this._constrainedZoom(xScale, zoomAmount, centerX);\r\n                    centerX = constrained.centerPoint;\r\n                    zoomAmount = constrained.zoomAmount;\r\n                });\r\n                this.yScales().forEach(function (yScale) {\r\n                    var constrained = _this._constrainedZoom(yScale, zoomAmount, centerY);\r\n                    centerY = constrained.centerPoint;\r\n                    zoomAmount = constrained.zoomAmount;\r\n                });\r\n            }\r\n        }\r\n        this.xScales().forEach(function (xScale) {\r\n            var range = xScale.range();\r\n            var xCenter = centerX == null\r\n                ? (range[1] + range[0]) / 2\r\n                : centerX;\r\n            xScale.zoom(zoomAmount, xCenter);\r\n        });\r\n        this.yScales().forEach(function (yScale) {\r\n            var range = yScale.range();\r\n            var yCenter = centerY == null\r\n                ? (range[1] + range[0]) / 2\r\n                : centerY;\r\n            yScale.zoom(zoomAmount, yCenter);\r\n        });\r\n        this._panZoomUpdateCallbacks.callCallbacks();\r\n        return { zoomAmount: zoomAmount, centerValue: { centerX: centerX, centerY: centerY } };\r\n    };\r\n    PanZoom.prototype._anchor = function (component) {\r\n        _super.prototype._anchor.call(this, component);\r\n        this._dragInteraction.attachTo(component);\r\n        this._mouseDispatcher = Dispatchers.Mouse.getDispatcher(this._componentAttachedTo);\r\n        this._mouseDispatcher.onWheel(this._wheelCallback);\r\n        this._touchDispatcher = Dispatchers.Touch.getDispatcher(this._componentAttachedTo);\r\n        this._touchDispatcher.onTouchStart(this._touchStartCallback);\r\n        this._touchDispatcher.onTouchMove(this._touchMoveCallback);\r\n        this._touchDispatcher.onTouchEnd(this._touchEndCallback);\r\n        this._touchDispatcher.onTouchCancel(this._touchCancelCallback);\r\n    };\r\n    PanZoom.prototype._unanchor = function () {\r\n        _super.prototype._unanchor.call(this);\r\n        this._mouseDispatcher.offWheel(this._wheelCallback);\r\n        this._mouseDispatcher = null;\r\n        this._touchDispatcher.offTouchStart(this._touchStartCallback);\r\n        this._touchDispatcher.offTouchMove(this._touchMoveCallback);\r\n        this._touchDispatcher.offTouchEnd(this._touchEndCallback);\r\n        this._touchDispatcher.offTouchCancel(this._touchCancelCallback);\r\n        this._touchDispatcher = null;\r\n        this._dragInteraction.detach();\r\n    };\r\n    PanZoom.prototype._handleTouchStart = function (ids, idToPoint, e) {\r\n        for (var i = 0; i < ids.length && this._touchIds.size() < 2; i++) {\r\n            var id = ids[i];\r\n            this._touchIds.set(id.toString(), this._translateToComponentSpace(idToPoint[id]));\r\n        }\r\n    };\r\n    PanZoom.prototype._handlePinch = function (ids, idToPoint, e) {\r\n        var _this = this;\r\n        if (this._touchIds.size() < 2) {\r\n            return;\r\n        }\r\n        var oldPoints = this._touchIds.values();\r\n        if (!this._isInsideComponent(this._translateToComponentSpace(oldPoints[0])) || !this._isInsideComponent(this._translateToComponentSpace(oldPoints[1]))) {\r\n            return;\r\n        }\r\n        var oldCornerDistance = PanZoom._pointDistance(oldPoints[0], oldPoints[1]);\r\n        if (oldCornerDistance === 0) {\r\n            return;\r\n        }\r\n        ids.forEach(function (id) {\r\n            if (_this._touchIds.has(id.toString())) {\r\n                _this._touchIds.set(id.toString(), _this._translateToComponentSpace(idToPoint[id]));\r\n            }\r\n        });\r\n        var points = this._touchIds.values();\r\n        var newCornerDistance = PanZoom._pointDistance(points[0], points[1]);\r\n        if (newCornerDistance === 0) {\r\n            return;\r\n        }\r\n        var initMagnifyAmount = oldCornerDistance / newCornerDistance;\r\n        var normalizedPointDiffs = points.map(function (point, i) {\r\n            return {\r\n                x: (point.x - oldPoints[i].x) / initMagnifyAmount,\r\n                y: (point.y - oldPoints[i].y) / initMagnifyAmount,\r\n            };\r\n        });\r\n        var oldCenterPoint = PanZoom.centerPoint(oldPoints[0], oldPoints[1]);\r\n        var _a = this.zoom(initMagnifyAmount, oldCenterPoint), centerValue = _a.centerValue, zoomAmount = _a.zoomAmount;\r\n        var centerX = centerValue.centerX, centerY = centerValue.centerY;\r\n        var constrainedPoints = oldPoints.map(function (oldPoint, i) {\r\n            return {\r\n                x: normalizedPointDiffs[i].x * zoomAmount + oldPoint.x,\r\n                y: normalizedPointDiffs[i].y * zoomAmount + oldPoint.y,\r\n            };\r\n        });\r\n        var translateAmount = {\r\n            x: centerX - ((constrainedPoints[0].x + constrainedPoints[1].x) / 2),\r\n            y: centerY - ((constrainedPoints[0].y + constrainedPoints[1].y) / 2),\r\n        };\r\n        this.pan(translateAmount);\r\n    };\r\n    PanZoom.centerPoint = function (point1, point2) {\r\n        var leftX = Math.min(point1.x, point2.x);\r\n        var rightX = Math.max(point1.x, point2.x);\r\n        var topY = Math.min(point1.y, point2.y);\r\n        var bottomY = Math.max(point1.y, point2.y);\r\n        return { x: (leftX + rightX) / 2, y: (bottomY + topY) / 2 };\r\n    };\r\n    PanZoom._pointDistance = function (point1, point2) {\r\n        var leftX = Math.min(point1.x, point2.x);\r\n        var rightX = Math.max(point1.x, point2.x);\r\n        var topY = Math.min(point1.y, point2.y);\r\n        var bottomY = Math.max(point1.y, point2.y);\r\n        return Math.sqrt(Math.pow(rightX - leftX, 2) + Math.pow(bottomY - topY, 2));\r\n    };\r\n    PanZoom.prototype._handleTouchEnd = function (ids, idToPoint, e) {\r\n        var _this = this;\r\n        ids.forEach(function (id) {\r\n            _this._touchIds.remove(id.toString());\r\n        });\r\n        if (this._touchIds.size() > 0) {\r\n            this._zoomEndCallbacks.callCallbacks();\r\n        }\r\n    };\r\n    PanZoom.prototype._handleWheelEvent = function (p, e) {\r\n        if (!this._wheelFilter(e)) {\r\n            return;\r\n        }\r\n        var translatedP = this._translateToComponentSpace(p);\r\n        if (this._isInsideComponent(translatedP)) {\r\n            e.preventDefault();\r\n            // in cases where only horizontal scroll is present, use that in lieu of nothing.\r\n            var deltaAmount = e.deltaY !== 0 ? e.deltaY : e.deltaX;\r\n            var deltaPixelAmount = deltaAmount * (e.deltaMode ? PanZoom._PIXELS_PER_LINE : 1);\r\n            var zoomAmount = Math.pow(2, deltaPixelAmount * .002);\r\n            this.zoom(zoomAmount, translatedP);\r\n            this._zoomEndCallbacks.callCallbacks();\r\n        }\r\n    };\r\n    PanZoom.prototype._constrainedZoom = function (scale, zoomAmount, centerPoint) {\r\n        return panZoomConstraints_1.constrainedZoom(scale, zoomAmount, centerPoint, this.minDomainExtent(scale), this.maxDomainExtent(scale), this.minDomainValue(scale), this.maxDomainValue(scale));\r\n    };\r\n    PanZoom.prototype._constrainedTranslation = function (scale, translation) {\r\n        return panZoomConstraints_1.constrainedTranslation(scale, translation, this.minDomainValue(scale), this.maxDomainValue(scale));\r\n    };\r\n    PanZoom.prototype._setupDragInteraction = function () {\r\n        var _this = this;\r\n        this._dragInteraction.constrainedToComponent(false);\r\n        var lastDragPoint;\r\n        this._dragInteraction.onDragStart(function () { return lastDragPoint = null; });\r\n        this._dragInteraction.onDrag(function (startPoint, endPoint) {\r\n            if (_this._touchIds.size() >= 2) {\r\n                return;\r\n            }\r\n            var translateAmount = {\r\n                x: (lastDragPoint == null ? startPoint.x : lastDragPoint.x) - endPoint.x,\r\n                y: (lastDragPoint == null ? startPoint.y : lastDragPoint.y) - endPoint.y,\r\n            };\r\n            _this.pan(translateAmount);\r\n            lastDragPoint = endPoint;\r\n        });\r\n        this._dragInteraction.onDragEnd(function () { return _this._panEndCallbacks.callCallbacks(); });\r\n    };\r\n    PanZoom.prototype._nonLinearScaleWithExtents = function (scale) {\r\n        return this.minDomainExtent(scale) != null && this.maxDomainExtent(scale) != null && !(scale instanceof Scales.Linear) && !(scale instanceof Scales.Time);\r\n    };\r\n    PanZoom.prototype.xScales = function (xScales) {\r\n        var _this = this;\r\n        if (xScales == null) {\r\n            var scales_1 = [];\r\n            this._xScales.forEach(function (xScale) {\r\n                scales_1.push(xScale);\r\n            });\r\n            return scales_1;\r\n        }\r\n        this._xScales = new Utils.Set();\r\n        xScales.forEach(function (xScale) {\r\n            _this.addXScale(xScale);\r\n        });\r\n        return this;\r\n    };\r\n    PanZoom.prototype.yScales = function (yScales) {\r\n        var _this = this;\r\n        if (yScales == null) {\r\n            var scales_2 = [];\r\n            this._yScales.forEach(function (yScale) {\r\n                scales_2.push(yScale);\r\n            });\r\n            return scales_2;\r\n        }\r\n        this._yScales = new Utils.Set();\r\n        yScales.forEach(function (yScale) {\r\n            _this.addYScale(yScale);\r\n        });\r\n        return this;\r\n    };\r\n    /**\r\n     * Adds an x scale to this PanZoom Interaction\r\n     *\r\n     * @param {TransformableScale} An x scale to add\r\n     * @returns {Interactions.PanZoom} The calling PanZoom Interaction.\r\n     */\r\n    PanZoom.prototype.addXScale = function (xScale) {\r\n        this._xScales.add(xScale);\r\n        return this;\r\n    };\r\n    /**\r\n     * Removes an x scale from this PanZoom Interaction\r\n     *\r\n     * @param {TransformableScale} An x scale to remove\r\n     * @returns {Interactions.PanZoom} The calling PanZoom Interaction.\r\n     */\r\n    PanZoom.prototype.removeXScale = function (xScale) {\r\n        this._xScales.delete(xScale);\r\n        this._minDomainExtents.delete(xScale);\r\n        this._maxDomainExtents.delete(xScale);\r\n        this._minDomainValues.delete(xScale);\r\n        this._maxDomainValues.delete(xScale);\r\n        return this;\r\n    };\r\n    /**\r\n     * Adds a y scale to this PanZoom Interaction\r\n     *\r\n     * @param {TransformableScale} A y scale to add\r\n     * @returns {Interactions.PanZoom} The calling PanZoom Interaction.\r\n     */\r\n    PanZoom.prototype.addYScale = function (yScale) {\r\n        this._yScales.add(yScale);\r\n        return this;\r\n    };\r\n    /**\r\n     * Removes a y scale from this PanZoom Interaction\r\n     *\r\n     * @param {TransformableScale} A y scale to remove\r\n     * @returns {Interactions.PanZoom} The calling PanZoom Interaction.\r\n     */\r\n    PanZoom.prototype.removeYScale = function (yScale) {\r\n        this._yScales.delete(yScale);\r\n        this._minDomainExtents.delete(yScale);\r\n        this._maxDomainExtents.delete(yScale);\r\n        this._minDomainValues.delete(yScale);\r\n        this._maxDomainValues.delete(yScale);\r\n        return this;\r\n    };\r\n    PanZoom.prototype.minDomainExtent = function (scale, minDomainExtent) {\r\n        if (minDomainExtent == null) {\r\n            return this._minDomainExtents.get(scale);\r\n        }\r\n        if (minDomainExtent.valueOf() < 0) {\r\n            throw new Error(\"extent must be non-negative\");\r\n        }\r\n        var maxExtentForScale = this.maxDomainExtent(scale);\r\n        if (maxExtentForScale != null && maxExtentForScale.valueOf() < minDomainExtent.valueOf()) {\r\n            throw new Error(\"minDomainExtent must be smaller than maxDomainExtent for the same Scale\");\r\n        }\r\n        if (this._nonLinearScaleWithExtents(scale)) {\r\n            Utils.Window.warn(\"Panning and zooming with extents on a nonlinear scale may have unintended behavior.\");\r\n        }\r\n        this._minDomainExtents.set(scale, minDomainExtent);\r\n        return this;\r\n    };\r\n    PanZoom.prototype.maxDomainExtent = function (scale, maxDomainExtent) {\r\n        if (maxDomainExtent == null) {\r\n            return this._maxDomainExtents.get(scale);\r\n        }\r\n        if (maxDomainExtent.valueOf() <= 0) {\r\n            throw new Error(\"extent must be positive\");\r\n        }\r\n        var minExtentForScale = this.minDomainExtent(scale);\r\n        if (minExtentForScale != null && maxDomainExtent.valueOf() < minExtentForScale.valueOf()) {\r\n            throw new Error(\"maxDomainExtent must be larger than minDomainExtent for the same Scale\");\r\n        }\r\n        if (this._nonLinearScaleWithExtents(scale)) {\r\n            Utils.Window.warn(\"Panning and zooming with extents on a nonlinear scale may have unintended behavior.\");\r\n        }\r\n        this._maxDomainExtents.set(scale, maxDomainExtent);\r\n        return this;\r\n    };\r\n    PanZoom.prototype.minDomainValue = function (scale, minDomainValue) {\r\n        if (minDomainValue == null) {\r\n            return this._minDomainValues.get(scale);\r\n        }\r\n        this._minDomainValues.set(scale, minDomainValue);\r\n        return this;\r\n    };\r\n    PanZoom.prototype.maxDomainValue = function (scale, maxDomainValue) {\r\n        if (maxDomainValue == null) {\r\n            return this._maxDomainValues.get(scale);\r\n        }\r\n        this._maxDomainValues.set(scale, maxDomainValue);\r\n        return this;\r\n    };\r\n    /**\r\n     * Uses the current domain of the scale to apply a minimum and maximum\r\n     * domain value for that scale.\r\n     *\r\n     * This constrains the pan/zoom interaction to show no more than the domain\r\n     * of the scale.\r\n     */\r\n    PanZoom.prototype.setMinMaxDomainValuesTo = function (scale) {\r\n        this._minDomainValues.delete(scale);\r\n        this._maxDomainValues.delete(scale);\r\n        var _a = scale.getTransformationDomain(), domainMin = _a[0], domainMax = _a[1];\r\n        this.minDomainValue(scale, domainMin);\r\n        this.maxDomainValue(scale, domainMax);\r\n        return this;\r\n    };\r\n    /**\r\n     * Adds a callback to be called when panning ends.\r\n     *\r\n     * @param {PanCallback} callback\r\n     * @returns {this} The calling PanZoom Interaction.\r\n     */\r\n    PanZoom.prototype.onPanEnd = function (callback) {\r\n        this._panEndCallbacks.add(callback);\r\n        return this;\r\n    };\r\n    /**\r\n     * Removes a callback that would be called when panning ends.\r\n     *\r\n     * @param {PanCallback} callback\r\n     * @returns {this} The calling PanZoom Interaction.\r\n     */\r\n    PanZoom.prototype.offPanEnd = function (callback) {\r\n        this._panEndCallbacks.delete(callback);\r\n        return this;\r\n    };\r\n    /**\r\n     * Adds a callback to be called when zooming ends.\r\n     *\r\n     * @param {ZoomCallback} callback\r\n     * @returns {this} The calling PanZoom Interaction.\r\n     */\r\n    PanZoom.prototype.onZoomEnd = function (callback) {\r\n        this._zoomEndCallbacks.add(callback);\r\n        return this;\r\n    };\r\n    /**\r\n     * Removes a callback that would be called when zooming ends.\r\n     *\r\n     * @param {ZoomCallback} callback\r\n     * @returns {this} The calling PanZoom Interaction.\r\n     */\r\n    PanZoom.prototype.offZoomEnd = function (callback) {\r\n        this._zoomEndCallbacks.delete(callback);\r\n        return this;\r\n    };\r\n    /**\r\n     * Adds a callback to be called when any pan or zoom update occurs. This is\r\n     * called on every frame, so be sure your callback is fast.\r\n     *\r\n     * @param {PanZoomUpdateCallback} callback\r\n     * @returns {this} The calling PanZoom Interaction.\r\n     */\r\n    PanZoom.prototype.onPanZoomUpdate = function (callback) {\r\n        this._panZoomUpdateCallbacks.add(callback);\r\n        return this;\r\n    };\r\n    /**\r\n     * Removes a callback that would be called when any pan or zoom update occurs.\r\n     *\r\n     * @param {PanZoomUpdateCallback} callback\r\n     * @returns {this} The calling PanZoom Interaction.\r\n     */\r\n    PanZoom.prototype.offPanZoomUpdate = function (callback) {\r\n        this._panZoomUpdateCallbacks.delete(callback);\r\n        return this;\r\n    };\r\n    /**\r\n     * The number of pixels occupied in a line.\r\n     */\r\n    PanZoom._PIXELS_PER_LINE = 120;\r\n    return PanZoom;\r\n}(interaction_1.Interaction));\r\nexports.PanZoom = PanZoom;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/interactions/panZoomInteraction.ts\n// module id = 94\n// module chunks = 0","\"use strict\";\r\n/**\r\n * Copyright 2014-present Palantir Technologies\r\n * @license MIT\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\nvar Dispatchers = require(\"../dispatchers\");\r\nvar Utils = require(\"../utils\");\r\nvar interaction_1 = require(\"./interaction\");\r\nvar Pointer = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Pointer, _super);\r\n    function Pointer() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this._overComponent = false;\r\n        _this._pointerEnterCallbacks = new Utils.CallbackSet();\r\n        _this._pointerMoveCallbacks = new Utils.CallbackSet();\r\n        _this._pointerExitCallbacks = new Utils.CallbackSet();\r\n        _this._mouseMoveCallback = function (p, e) { return _this._handleMouseEvent(p, e); };\r\n        _this._touchStartCallback = function (ids, idToPoint, e) { return _this._handleTouchEvent(idToPoint[ids[0]], e); };\r\n        return _this;\r\n    }\r\n    Pointer.prototype._anchor = function (component) {\r\n        _super.prototype._anchor.call(this, component);\r\n        this._mouseDispatcher = Dispatchers.Mouse.getDispatcher(this._componentAttachedTo);\r\n        this._mouseDispatcher.onMouseMove(this._mouseMoveCallback);\r\n        this._touchDispatcher = Dispatchers.Touch.getDispatcher(this._componentAttachedTo);\r\n        this._touchDispatcher.onTouchStart(this._touchStartCallback);\r\n    };\r\n    Pointer.prototype._unanchor = function () {\r\n        _super.prototype._unanchor.call(this);\r\n        this._mouseDispatcher.offMouseMove(this._mouseMoveCallback);\r\n        this._mouseDispatcher = null;\r\n        this._touchDispatcher.offTouchStart(this._touchStartCallback);\r\n        this._touchDispatcher = null;\r\n    };\r\n    Pointer.prototype._handleMouseEvent = function (p, e) {\r\n        var insideSVG = this._mouseDispatcher.eventInside(this._componentAttachedTo, e);\r\n        this._handlePointerEvent(p, insideSVG);\r\n    };\r\n    Pointer.prototype._handleTouchEvent = function (p, e) {\r\n        var insideSVG = this._touchDispatcher.eventInside(this._componentAttachedTo, e);\r\n        this._handlePointerEvent(p, insideSVG);\r\n    };\r\n    Pointer.prototype._handlePointerEvent = function (p, insideSVG) {\r\n        var translatedP = this._translateToComponentSpace(p);\r\n        var overComponent = this._isInsideComponent(translatedP);\r\n        if (overComponent && insideSVG) {\r\n            if (!this._overComponent) {\r\n                this._pointerEnterCallbacks.callCallbacks(translatedP);\r\n            }\r\n            this._pointerMoveCallbacks.callCallbacks(translatedP);\r\n        }\r\n        else if (this._overComponent) {\r\n            this._pointerExitCallbacks.callCallbacks(translatedP);\r\n        }\r\n        this._overComponent = overComponent && insideSVG;\r\n    };\r\n    /**\r\n     * Adds a callback to be called when the pointer enters the Component.\r\n     *\r\n     * @param {PointerCallback} callback\r\n     * @return {Interactions.Pointer} The calling Pointer Interaction.\r\n     */\r\n    Pointer.prototype.onPointerEnter = function (callback) {\r\n        this._pointerEnterCallbacks.add(callback);\r\n        return this;\r\n    };\r\n    /**\r\n     * Removes a callback that would be called when the pointer enters the Component.\r\n     *\r\n     * @param {PointerCallback} callback\r\n     * @return {Interactions.Pointer} The calling Pointer Interaction.\r\n     */\r\n    Pointer.prototype.offPointerEnter = function (callback) {\r\n        this._pointerEnterCallbacks.delete(callback);\r\n        return this;\r\n    };\r\n    /**\r\n     * Adds a callback to be called when the pointer moves within the Component.\r\n     *\r\n     * @param {PointerCallback} callback\r\n     * @return {Interactions.Pointer} The calling Pointer Interaction.\r\n     */\r\n    Pointer.prototype.onPointerMove = function (callback) {\r\n        this._pointerMoveCallbacks.add(callback);\r\n        return this;\r\n    };\r\n    /**\r\n     * Removes a callback that would be called when the pointer moves within the Component.\r\n     *\r\n     * @param {PointerCallback} callback\r\n     * @return {Interactions.Pointer} The calling Pointer Interaction.\r\n     */\r\n    Pointer.prototype.offPointerMove = function (callback) {\r\n        this._pointerMoveCallbacks.delete(callback);\r\n        return this;\r\n    };\r\n    /**\r\n     * Adds a callback to be called when the pointer exits the Component.\r\n     *\r\n     * @param {PointerCallback} callback\r\n     * @return {Interactions.Pointer} The calling Pointer Interaction.\r\n     */\r\n    Pointer.prototype.onPointerExit = function (callback) {\r\n        this._pointerExitCallbacks.add(callback);\r\n        return this;\r\n    };\r\n    /**\r\n     * Removes a callback that would be called when the pointer exits the Component.\r\n     *\r\n     * @param {PointerCallback} callback\r\n     * @return {Interactions.Pointer} The calling Pointer Interaction.\r\n     */\r\n    Pointer.prototype.offPointerExit = function (callback) {\r\n        this._pointerExitCallbacks.delete(callback);\r\n        return this;\r\n    };\r\n    return Pointer;\r\n}(interaction_1.Interaction));\r\nexports.Pointer = Pointer;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/interactions/pointerInteraction.ts\n// module id = 95\n// module chunks = 0","\"use strict\";\r\n/**\r\n * Copyright 2014-present Palantir Technologies\r\n * @license MIT\r\n * @fileoverview Implements a convenient thunk function to handle the common case\r\n * of creating a memoized function that takes its inputs from mutable class properties.\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar index_1 = require(\"./index\");\r\n/**\r\n * First pass argument thunks that will be evaluated whenever the memThunk\r\n * is accessed. This should be fast and simple.\r\n *\r\n * Then pass a pure function that, when given the argument thunks' values,\r\n * will output some computed value. It should not use `this` in the body.\r\n *\r\n * We memoize and return this pure function.\r\n *\r\n * This way, memThunk lets you implement a performant, always-up-to-date \"computed\"\r\n * value getter.\r\n */\r\nfunction memThunk() {\r\n    var argsAndCompute = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        argsAndCompute[_i] = arguments[_i];\r\n    }\r\n    var inputs = argsAndCompute.slice(0, -1);\r\n    var compute = argsAndCompute[argsAndCompute.length - 1];\r\n    var memoizedCompute = index_1.memoize(compute);\r\n    var memoizedThunk = function () {\r\n        var _this = this;\r\n        var inputEval = inputs.map(function (inputFn) { return inputFn.apply(_this); });\r\n        return memoizedCompute.apply(undefined, inputEval);\r\n    };\r\n    return memoizedThunk;\r\n}\r\nexports.memThunk = memThunk;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/memoize/memThunk.ts\n// module id = 96\n// module chunks = 0","\"use strict\";\r\n/**\r\n * Copyright 2014-present Palantir Technologies\r\n * @license MIT\r\n * @fileoverview Implements a function memoizer using the Signature API.\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar signature_1 = require(\"./signature\");\r\n/**\r\n * Return a memoized version of the input function. The memoized function\r\n * reduces unnecessary invocations of the input by keeping a cache of the\r\n * return value of compute:\r\n *\r\n * <pre>\r\n * function compute(a, b) { return a + b }\r\n * const memoizedCompute = memoize(compute);\r\n *\r\n * compute(3, 7) == 10\r\n * compute(3, 7) == 10 // cache hit\r\n * </pre>\r\n *\r\n * Cache invalidation is complicated by mutable classes (Scales and Datasets).\r\n * The Signature API is built to solve this issue by constructing an immutable\r\n * snapshot of Scales/Datasets on memoized function invocation, which is itself\r\n * a performance hit. Thus we introduce a \"doLocked\" method that momentarily\r\n * bypasses sign/comparison logic and simply returns the cached value.\r\n *\r\n * See the Signature API for more information.\r\n *\r\n * @param {F} compute\r\n * @returns {MemoizedFunction<F extends Function>}\r\n */\r\nfunction memoize(compute) {\r\n    var lastSignature = undefined;\r\n    var lastValue;\r\n    var locked = false;\r\n    var logPerformance = false;\r\n    var memoizeFn = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        if (locked) {\r\n            return lastValue;\r\n        }\r\n        var inputSignature = signature_1.signArray(args);\r\n        if (lastSignature === undefined\r\n            || lastSignature.isDifferent(inputSignature)) {\r\n            if (logPerformance) {\r\n                console.log(\"cache miss! computing\");\r\n            }\r\n            lastSignature = inputSignature;\r\n            lastValue = compute.apply(this, args);\r\n        }\r\n        else {\r\n            if (logPerformance) {\r\n                console.log(\"cache hit!\");\r\n            }\r\n        }\r\n        return lastValue;\r\n    };\r\n    memoizeFn.doLocked = function (cb) {\r\n        if (locked) {\r\n            throw new Error(\"Locking an already locked memoize function!\");\r\n        }\r\n        locked = true;\r\n        var retVal = cb.apply(this);\r\n        locked = false;\r\n        return retVal;\r\n    };\r\n    memoizeFn.logPerformance = function (log) {\r\n        if (log === void 0) { log = true; }\r\n        logPerformance = log;\r\n        return this;\r\n    };\r\n    return memoizeFn;\r\n}\r\nexports.memoize = memoize;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/memoize/memoize.ts\n// module id = 97\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar lodash_1 = require(\"lodash\");\r\n/**\r\n * An index that stores values by numeric key.\r\n *\r\n * Internally this uses prototype-less objects as key lookups are marginally\r\n * faster than `{}`s.\r\n */\r\nvar IndexMap = /** @class */ (function () {\r\n    function IndexMap() {\r\n        this.map = Object.create(null);\r\n        this.exists = Object.create(null);\r\n    }\r\n    IndexMap.prototype.delete = function (key) {\r\n        delete this.map[key];\r\n        delete this.exists[key];\r\n        return true;\r\n    };\r\n    IndexMap.prototype.get = function (key) {\r\n        return this.map[key];\r\n    };\r\n    IndexMap.prototype.has = function (key) {\r\n        return !!this.exists[key];\r\n    };\r\n    IndexMap.prototype.set = function (key, value) {\r\n        this.map[key] = value;\r\n        this.exists[key] = true;\r\n        return this;\r\n    };\r\n    return IndexMap;\r\n}());\r\n/**\r\n * A lodash-style `MapCache` that utilizes a [number, number] key to create a\r\n * fast-lookup 2D index. This is much faster than stringifying the key.\r\n */\r\nvar DatasetIndexCache = /** @class */ (function () {\r\n    function DatasetIndexCache() {\r\n        this.map = new IndexMap();\r\n    }\r\n    DatasetIndexCache.prototype.get = function (key) {\r\n        return this.map.get(key[0]).get(key[1]);\r\n    };\r\n    DatasetIndexCache.prototype.has = function (key) {\r\n        return this.map.has(key[0]) && this.map.get(key[0]).has(key[1]);\r\n    };\r\n    DatasetIndexCache.prototype.set = function (key, value) {\r\n        this.map.has(key[0]) || this.map.set(key[0], new IndexMap());\r\n        this.map.get(key[0]).set(key[1], value);\r\n        return this;\r\n    };\r\n    DatasetIndexCache.prototype.delete = function (key) {\r\n        // NOTE: this can potentially leave dangling `IndexMap`s if we delete\r\n        // all the keys from the index instead of using `clear`. The overhead is\r\n        // minimal, so this is fine.\r\n        this.map.has(key[0]) && this.map.get(key[0]).delete(key[1]);\r\n        return true;\r\n    };\r\n    DatasetIndexCache.prototype.clear = function () {\r\n        this.map = new IndexMap();\r\n    };\r\n    DatasetIndexCache.resolver = function (d, i, dataset) { return [dataset.updateId(), i]; };\r\n    return DatasetIndexCache;\r\n}());\r\nfunction memoizeProjector(projector) {\r\n    var memo = lodash_1.memoize(projector, DatasetIndexCache.resolver);\r\n    memo.cache = new DatasetIndexCache();\r\n    return memo;\r\n}\r\nexports.memoizeProjector = memoizeProjector;\r\nfunction memoizeProjectors(attrToProjector) {\r\n    Object.keys(attrToProjector).forEach(function (key) {\r\n        attrToProjector[key] = memoizeProjector(attrToProjector[key]);\r\n    });\r\n    return attrToProjector;\r\n}\r\nexports.memoizeProjectors = memoizeProjectors;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/memoize/memoizeProjectors.ts\n// module id = 98\n// module chunks = 0","\"use strict\";\r\n/**\r\n * Copyright 2014-present Palantir Technologies\r\n * @license MIT\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\nvar Scales = require(\"../scales\");\r\nvar Utils = require(\"../utils\");\r\nvar barPlot_1 = require(\"./barPlot\");\r\nvar plot_1 = require(\"./plot\");\r\nvar ClusteredBar = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ClusteredBar, _super);\r\n    /**\r\n     * A ClusteredBar Plot groups bars across Datasets based on the primary value of the bars.\r\n     *   On a vertical ClusteredBar Plot, the bars with the same X value are grouped.\r\n     *   On a horizontal ClusteredBar Plot, the bars with the same Y value are grouped.\r\n     *\r\n     * @constructor\r\n     * @param {string} [orientation=\"vertical\"] One of \"vertical\"/\"horizontal\".\r\n     */\r\n    function ClusteredBar(orientation) {\r\n        if (orientation === void 0) { orientation = \"vertical\"; }\r\n        var _this = _super.call(this, orientation) || this;\r\n        _this._clusterOffsets = new Utils.Map();\r\n        return _this;\r\n    }\r\n    ClusteredBar.prototype._generateAttrToProjector = function () {\r\n        var _this = this;\r\n        var attrToProjector = _super.prototype._generateAttrToProjector.call(this);\r\n        // the width is constant, so set the inner scale range to that\r\n        var innerScale = this._makeInnerScale();\r\n        var innerWidthF = function (d, i) { return innerScale.rangeBand(); };\r\n        attrToProjector[\"width\"] = this._isVertical ? innerWidthF : attrToProjector[\"width\"];\r\n        attrToProjector[\"height\"] = !this._isVertical ? innerWidthF : attrToProjector[\"height\"];\r\n        var xAttr = attrToProjector[\"x\"];\r\n        var yAttr = attrToProjector[\"y\"];\r\n        attrToProjector[\"x\"] = this._isVertical ?\r\n            function (d, i, ds) { return xAttr(d, i, ds) + _this._clusterOffsets.get(ds); } :\r\n            function (d, i, ds) { return xAttr(d, i, ds); };\r\n        attrToProjector[\"y\"] = this._isVertical ?\r\n            function (d, i, ds) { return yAttr(d, i, ds); } :\r\n            function (d, i, ds) { return yAttr(d, i, ds) + _this._clusterOffsets.get(ds); };\r\n        return attrToProjector;\r\n    };\r\n    ClusteredBar.prototype._updateClusterPosition = function () {\r\n        var _this = this;\r\n        var innerScale = this._makeInnerScale();\r\n        this.datasets().forEach(function (d, i) { return _this._clusterOffsets.set(d, innerScale.scale(String(i)) - innerScale.rangeBand() / 2); });\r\n    };\r\n    ClusteredBar.prototype._makeInnerScale = function () {\r\n        var innerScale = new Scales.Category();\r\n        innerScale.domain(this.datasets().map(function (d, i) { return String(i); }));\r\n        var widthProjector = plot_1.Plot._scaledAccessor(this.attr(barPlot_1.Bar._BAR_THICKNESS_KEY));\r\n        innerScale.range([0, widthProjector(null, 0, null)]);\r\n        return innerScale;\r\n    };\r\n    ClusteredBar.prototype._getDataToDraw = function () {\r\n        this._updateClusterPosition();\r\n        return _super.prototype._getDataToDraw.call(this);\r\n    };\r\n    return ClusteredBar;\r\n}(barPlot_1.Bar));\r\nexports.ClusteredBar = ClusteredBar;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/plots/clusteredBarPlot.ts\n// module id = 99\n// module chunks = 0","\"use strict\";\r\n/**\r\n * Copyright 2014-present Palantir Technologies\r\n * @license MIT\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\nvar d3 = require(\"d3\");\r\nvar Typesettable = require(\"typesettable\");\r\nvar Animators = require(\"../animators\");\r\nvar Formatters = require(\"../core/formatters\");\r\nvar Scales = require(\"../scales\");\r\nvar Utils = require(\"../utils\");\r\nvar arcDrawer_1 = require(\"../drawers/arcDrawer\");\r\nvar arcOutlineDrawer_1 = require(\"../drawers/arcOutlineDrawer\");\r\nvar drawer_1 = require(\"../drawers/drawer\");\r\nvar windowUtils_1 = require(\"../utils/windowUtils\");\r\nvar plot_1 = require(\"./plot\");\r\nvar Pie = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Pie, _super);\r\n    /**\r\n     * @constructor\r\n     */\r\n    function Pie() {\r\n        var _this = _super.call(this) || this;\r\n        _this._startAngle = 0;\r\n        _this._endAngle = 2 * Math.PI;\r\n        _this._labelFormatter = Formatters.identity();\r\n        _this._labelsEnabled = false;\r\n        _this.innerRadius(0);\r\n        _this.outerRadius(function () {\r\n            var pieCenter = _this._pieCenter();\r\n            return Math.min(Math.max(_this.width() - pieCenter.x, pieCenter.x), Math.max(_this.height() - pieCenter.y, pieCenter.y));\r\n        });\r\n        _this.addClass(\"pie-plot\");\r\n        _this.attr(\"fill\", function (d, i) { return String(i); }, new Scales.Color());\r\n        _this._strokeDrawers = new Utils.Map();\r\n        return _this;\r\n    }\r\n    Pie.prototype._setup = function () {\r\n        var _this = this;\r\n        _super.prototype._setup.call(this);\r\n        this._strokeDrawers.forEach(function (d) { return d.attachTo(_this._renderArea); });\r\n    };\r\n    Pie.prototype.computeLayout = function (origin, availableWidth, availableHeight) {\r\n        _super.prototype.computeLayout.call(this, origin, availableWidth, availableHeight);\r\n        var pieCenter = this._pieCenter();\r\n        this._renderArea.attr(\"transform\", \"translate(\" + pieCenter.x + \",\" + pieCenter.y + \")\");\r\n        var radiusLimit = Math.min(Math.max(this.width() - pieCenter.x, pieCenter.x), Math.max(this.height() - pieCenter.y, pieCenter.y));\r\n        if (this.innerRadius().scale != null) {\r\n            this.innerRadius().scale.range([0, radiusLimit]);\r\n        }\r\n        if (this.outerRadius().scale != null) {\r\n            this.outerRadius().scale.range([0, radiusLimit]);\r\n        }\r\n        return this;\r\n    };\r\n    Pie.prototype.addDataset = function (dataset) {\r\n        _super.prototype.addDataset.call(this, dataset);\r\n        return this;\r\n    };\r\n    Pie.prototype._addDataset = function (dataset) {\r\n        if (this.datasets().length === 1) {\r\n            Utils.Window.warn(\"Only one dataset is supported in Pie plots\");\r\n            return this;\r\n        }\r\n        this._updatePieAngles();\r\n        var strokeDrawer = new arcOutlineDrawer_1.ArcOutlineSVGDrawer();\r\n        if (this._isSetup) {\r\n            strokeDrawer.attachTo(this._renderArea);\r\n        }\r\n        this._strokeDrawers.set(dataset, strokeDrawer);\r\n        _super.prototype._addDataset.call(this, dataset);\r\n        return this;\r\n    };\r\n    Pie.prototype.removeDataset = function (dataset) {\r\n        _super.prototype.removeDataset.call(this, dataset);\r\n        return this;\r\n    };\r\n    Pie.prototype._removeDatasetNodes = function (dataset) {\r\n        _super.prototype._removeDatasetNodes.call(this, dataset);\r\n        this._strokeDrawers.get(dataset).remove();\r\n    };\r\n    Pie.prototype._removeDataset = function (dataset) {\r\n        _super.prototype._removeDataset.call(this, dataset);\r\n        this._startAngles = [];\r\n        this._endAngles = [];\r\n        return this;\r\n    };\r\n    Pie.prototype.selections = function (datasets) {\r\n        var _this = this;\r\n        if (datasets === void 0) { datasets = this.datasets(); }\r\n        var allSelections = _super.prototype.selections.call(this, datasets).nodes();\r\n        datasets.forEach(function (dataset) {\r\n            var drawer = _this._strokeDrawers.get(dataset);\r\n            if (drawer == null) {\r\n                return;\r\n            }\r\n            allSelections.push.apply(allSelections, drawer.getVisualPrimitives());\r\n        });\r\n        return d3.selectAll(allSelections);\r\n    };\r\n    Pie.prototype._onDatasetUpdate = function () {\r\n        _super.prototype._onDatasetUpdate.call(this);\r\n        this._updatePieAngles();\r\n        this.render();\r\n    };\r\n    Pie.prototype._createDrawer = function () {\r\n        return new drawer_1.ProxyDrawer(function () { return new arcDrawer_1.ArcSVGDrawer(); }, function () {\r\n            windowUtils_1.warn(\"canvas renderer is not supported on Pie Plot!\");\r\n            return null;\r\n        });\r\n    };\r\n    Pie.prototype.entities = function (datasets) {\r\n        var _this = this;\r\n        if (datasets === void 0) { datasets = this.datasets(); }\r\n        var entities = _super.prototype.entities.call(this, datasets);\r\n        return entities.map(function (entity) {\r\n            entity.position.x += _this.width() / 2;\r\n            entity.position.y += _this.height() / 2;\r\n            var stroke = d3.select(_this._strokeDrawers.get(entity.dataset).getVisualPrimitiveAtIndex(entity.index));\r\n            var piePlotEntity = entity;\r\n            piePlotEntity.strokeSelection = stroke;\r\n            return piePlotEntity;\r\n        });\r\n    };\r\n    Pie.prototype.sectorValue = function (sectorValue, scale) {\r\n        if (sectorValue == null) {\r\n            return this._propertyBindings.get(Pie._SECTOR_VALUE_KEY);\r\n        }\r\n        this._bindProperty(Pie._SECTOR_VALUE_KEY, sectorValue, scale);\r\n        this._updatePieAngles();\r\n        this.render();\r\n        return this;\r\n    };\r\n    Pie.prototype.innerRadius = function (innerRadius, scale) {\r\n        if (innerRadius == null) {\r\n            return this._propertyBindings.get(Pie._INNER_RADIUS_KEY);\r\n        }\r\n        this._bindProperty(Pie._INNER_RADIUS_KEY, innerRadius, scale);\r\n        this.render();\r\n        return this;\r\n    };\r\n    Pie.prototype.outerRadius = function (outerRadius, scale) {\r\n        if (outerRadius == null) {\r\n            return this._propertyBindings.get(Pie._OUTER_RADIUS_KEY);\r\n        }\r\n        this._bindProperty(Pie._OUTER_RADIUS_KEY, outerRadius, scale);\r\n        this.render();\r\n        return this;\r\n    };\r\n    Pie.prototype.startAngle = function (angle) {\r\n        if (angle == null) {\r\n            return this._startAngle;\r\n        }\r\n        else {\r\n            this._startAngle = angle;\r\n            this._updatePieAngles();\r\n            this.render();\r\n            return this;\r\n        }\r\n    };\r\n    Pie.prototype.endAngle = function (angle) {\r\n        if (angle == null) {\r\n            return this._endAngle;\r\n        }\r\n        else {\r\n            this._endAngle = angle;\r\n            this._updatePieAngles();\r\n            this.render();\r\n            return this;\r\n        }\r\n    };\r\n    Pie.prototype.labelsEnabled = function (enabled) {\r\n        if (enabled == null) {\r\n            return this._labelsEnabled;\r\n        }\r\n        else {\r\n            this._labelsEnabled = enabled;\r\n            this.render();\r\n            return this;\r\n        }\r\n    };\r\n    Pie.prototype.labelFormatter = function (formatter) {\r\n        if (formatter == null) {\r\n            return this._labelFormatter;\r\n        }\r\n        else {\r\n            this._labelFormatter = formatter;\r\n            this.render();\r\n            return this;\r\n        }\r\n    };\r\n    /*\r\n     * Gets the Entities at a particular Point.\r\n     *\r\n     * @param {Point} p\r\n     * @param {PlotEntity[]}\r\n     */\r\n    Pie.prototype.entitiesAt = function (queryPoint) {\r\n        var center = { x: this.width() / 2, y: this.height() / 2 };\r\n        var adjustedQueryPoint = { x: queryPoint.x - center.x, y: queryPoint.y - center.y };\r\n        var index = this._sliceIndexForPoint(adjustedQueryPoint);\r\n        return index == null ? [] : [this.entities()[index]];\r\n    };\r\n    Pie.prototype._propertyProjectors = function () {\r\n        var _this = this;\r\n        var attrToProjector = _super.prototype._propertyProjectors.call(this);\r\n        var innerRadiusAccessor = plot_1.Plot._scaledAccessor(this.innerRadius());\r\n        var outerRadiusAccessor = plot_1.Plot._scaledAccessor(this.outerRadius());\r\n        attrToProjector[\"d\"] = function (datum, index, ds) {\r\n            return d3.arc().innerRadius(innerRadiusAccessor(datum, index, ds))\r\n                .outerRadius(outerRadiusAccessor(datum, index, ds))\r\n                .startAngle(_this._startAngles[index])\r\n                .endAngle(_this._endAngles[index])(datum, index);\r\n        };\r\n        return attrToProjector;\r\n    };\r\n    Pie.prototype._updatePieAngles = function () {\r\n        if (this.sectorValue() == null) {\r\n            return;\r\n        }\r\n        if (this.datasets().length === 0) {\r\n            return;\r\n        }\r\n        var sectorValueAccessor = plot_1.Plot._scaledAccessor(this.sectorValue());\r\n        var dataset = this.datasets()[0];\r\n        var data = this._getDataToDraw().get(dataset);\r\n        var pie = d3.pie().sort(null).startAngle(this._startAngle).endAngle(this._endAngle)\r\n            .value(function (d, i) { return sectorValueAccessor(d, i, dataset); })(data);\r\n        this._startAngles = pie.map(function (slice) { return slice.startAngle; });\r\n        this._endAngles = pie.map(function (slice) { return slice.endAngle; });\r\n    };\r\n    Pie.prototype._pieCenter = function () {\r\n        var a = this._startAngle < this._endAngle ? this._startAngle : this._endAngle;\r\n        var b = this._startAngle < this._endAngle ? this._endAngle : this._startAngle;\r\n        var sinA = Math.sin(a);\r\n        var cosA = Math.cos(a);\r\n        var sinB = Math.sin(b);\r\n        var cosB = Math.cos(b);\r\n        var hTop;\r\n        var hBottom;\r\n        var wRight;\r\n        var wLeft;\r\n        /**\r\n         *  The center of the pie is computed using the sine and cosine of the start angle and the end angle\r\n         *  The sine indicates whether the start and end fall on the right half or the left half of the pie\r\n         *  The cosine indicates whether the start and end fall on the top or the bottom half of the pie\r\n         *  Different combinations provide the different heights and widths the pie needs from the center to the sides\r\n         */\r\n        if (sinA >= 0 && sinB >= 0) {\r\n            if (cosA >= 0 && cosB >= 0) {\r\n                hTop = cosA;\r\n                hBottom = 0;\r\n                wLeft = 0;\r\n                wRight = sinB;\r\n            }\r\n            else if (cosA < 0 && cosB < 0) {\r\n                hTop = 0;\r\n                hBottom = -cosB;\r\n                wLeft = 0;\r\n                wRight = sinA;\r\n            }\r\n            else if (cosA >= 0 && cosB < 0) {\r\n                hTop = cosA;\r\n                hBottom = -cosB;\r\n                wLeft = 0;\r\n                wRight = sinA;\r\n            }\r\n            else if (cosA < 0 && cosB >= 0) {\r\n                hTop = 1;\r\n                hBottom = 1;\r\n                wLeft = 1;\r\n                wRight = Math.max(sinA, sinB);\r\n            }\r\n        }\r\n        else if (sinA >= 0 && sinB < 0) {\r\n            if (cosA >= 0 && cosB >= 0) {\r\n                hTop = Math.max(cosA, cosB);\r\n                hBottom = 1;\r\n                wLeft = 1;\r\n                wRight = 1;\r\n            }\r\n            else if (cosA < 0 && cosB < 0) {\r\n                hTop = 0;\r\n                hBottom = 1;\r\n                wLeft = -sinB;\r\n                wRight = sinA;\r\n            }\r\n            else if (cosA >= 0 && cosB < 0) {\r\n                hTop = cosA;\r\n                hBottom = 1;\r\n                wLeft = -sinB;\r\n                wRight = 1;\r\n            }\r\n            else if (cosA < 0 && cosB >= 0) {\r\n                hTop = cosB;\r\n                hBottom = 1;\r\n                wLeft = 1;\r\n                wRight = sinA;\r\n            }\r\n        }\r\n        else if (sinA < 0 && sinB >= 0) {\r\n            if (cosA >= 0 && cosB >= 0) {\r\n                hTop = 1;\r\n                hBottom = 0;\r\n                wLeft = -sinA;\r\n                wRight = sinB;\r\n            }\r\n            else if (cosA < 0 && cosB < 0) {\r\n                hTop = 1;\r\n                hBottom = Math.max(-cosA, -cosB);\r\n                wLeft = 1;\r\n                wRight = 1;\r\n            }\r\n            else if (cosA >= 0 && cosB < 0) {\r\n                hTop = 1;\r\n                hBottom = -cosB;\r\n                wLeft = -sinA;\r\n                wRight = 1;\r\n            }\r\n            else if (cosA < 0 && cosB >= 0) {\r\n                hTop = 1;\r\n                hBottom = -cosA;\r\n                wLeft = 1;\r\n                wRight = sinB;\r\n            }\r\n        }\r\n        else if (sinA < 0 && sinB < 0) {\r\n            if (cosA >= 0 && cosB >= 0) {\r\n                hTop = cosB;\r\n                hBottom = 0;\r\n                wLeft = -sinA;\r\n                wRight = 0;\r\n            }\r\n            else if (cosA < 0 && cosB < 0) {\r\n                hTop = 0;\r\n                hBottom = -cosA;\r\n                wLeft = -sinB;\r\n                wRight = 0;\r\n            }\r\n            else if (cosA >= 0 && cosB < 0) {\r\n                hTop = 1;\r\n                hBottom = 1;\r\n                wLeft = Math.max(cosA, -cosB);\r\n                wRight = 1;\r\n            }\r\n            else if (cosA < 0 && cosB >= 0) {\r\n                hTop = cosB;\r\n                hBottom = -cosA;\r\n                wLeft = 1;\r\n                wRight = 0;\r\n            }\r\n        }\r\n        return {\r\n            x: wLeft + wRight == 0 ? 0 : (wLeft / (wLeft + wRight)) * this.width(),\r\n            y: hTop + hBottom == 0 ? 0 : (hTop / (hTop + hBottom)) * this.height(),\r\n        };\r\n    };\r\n    Pie.prototype._getDataToDraw = function () {\r\n        var dataToDraw = _super.prototype._getDataToDraw.call(this);\r\n        if (this.datasets().length === 0) {\r\n            return dataToDraw;\r\n        }\r\n        var sectorValueAccessor = plot_1.Plot._scaledAccessor(this.sectorValue());\r\n        var ds = this.datasets()[0];\r\n        var data = dataToDraw.get(ds);\r\n        var filteredData = data.filter(function (d, i) { return Pie._isValidData(sectorValueAccessor(d, i, ds)); });\r\n        dataToDraw.set(ds, filteredData);\r\n        return dataToDraw;\r\n    };\r\n    Pie._isValidData = function (value) {\r\n        return Utils.Math.isValidNumber(value) && value >= 0;\r\n    };\r\n    Pie.prototype._pixelPoint = function (datum, index, dataset) {\r\n        var scaledValueAccessor = plot_1.Plot._scaledAccessor(this.sectorValue());\r\n        if (!Pie._isValidData(scaledValueAccessor(datum, index, dataset))) {\r\n            return { x: NaN, y: NaN };\r\n        }\r\n        var innerRadius = plot_1.Plot._scaledAccessor(this.innerRadius())(datum, index, dataset);\r\n        var outerRadius = plot_1.Plot._scaledAccessor(this.outerRadius())(datum, index, dataset);\r\n        var avgRadius = (innerRadius + outerRadius) / 2;\r\n        var pie = d3.pie()\r\n            .sort(null)\r\n            .value(function (d, i) {\r\n            var value = scaledValueAccessor(d, i, dataset);\r\n            return Pie._isValidData(value) ? value : 0;\r\n        }).startAngle(this._startAngle).endAngle(this._endAngle)(dataset.data());\r\n        var startAngle = pie[index].startAngle;\r\n        var endAngle = pie[index].endAngle;\r\n        var avgAngle = (startAngle + endAngle) / 2;\r\n        return { x: avgRadius * Math.sin(avgAngle), y: -avgRadius * Math.cos(avgAngle) };\r\n    };\r\n    Pie.prototype._additionalPaint = function (time) {\r\n        var _this = this;\r\n        this._renderArea.select(\".label-area\").remove();\r\n        if (this._labelsEnabled) {\r\n            Utils.Window.setTimeout(function () { return _this._drawLabels(); }, time);\r\n        }\r\n        var drawSteps = this._generateStrokeDrawSteps();\r\n        var dataToDraw = this._getDataToDraw();\r\n        this.datasets().forEach(function (dataset) {\r\n            var appliedDrawSteps = plot_1.Plot.applyDrawSteps(drawSteps, dataset);\r\n            _this._strokeDrawers.get(dataset).draw(dataToDraw.get(dataset), appliedDrawSteps);\r\n        });\r\n    };\r\n    Pie.prototype._generateStrokeDrawSteps = function () {\r\n        var attrToProjector = this._getAttrToProjector();\r\n        return [{ attrToProjector: attrToProjector, animator: new Animators.Null() }];\r\n    };\r\n    Pie.prototype._sliceIndexForPoint = function (p) {\r\n        var pointRadius = Math.sqrt(Math.pow(p.x, 2) + Math.pow(p.y, 2));\r\n        var pointAngle = Math.acos(-p.y / pointRadius);\r\n        if (p.x < 0) {\r\n            pointAngle = Math.PI * 2 - pointAngle;\r\n        }\r\n        var index;\r\n        for (var i = 0; i < this._startAngles.length; i++) {\r\n            if (this._startAngles[i] < pointAngle && this._endAngles[i] > pointAngle) {\r\n                index = i;\r\n                break;\r\n            }\r\n        }\r\n        if (index !== undefined) {\r\n            var dataset = this.datasets()[0];\r\n            var datum = dataset.data()[index];\r\n            var innerRadius = this.innerRadius().accessor(datum, index, dataset);\r\n            var outerRadius = this.outerRadius().accessor(datum, index, dataset);\r\n            if (pointRadius > innerRadius && pointRadius < outerRadius) {\r\n                return index;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    Pie.prototype._drawLabels = function () {\r\n        var _this = this;\r\n        var attrToProjector = this._getAttrToProjector();\r\n        var labelArea = this._renderArea.append(\"g\").classed(\"label-area\", true);\r\n        var context = new Typesettable.SvgContext(labelArea.node());\r\n        var measurer = new Typesettable.CacheMeasurer(context);\r\n        var writer = new Typesettable.Writer(measurer, context);\r\n        var dataset = this.datasets()[0];\r\n        var data = this._getDataToDraw().get(dataset);\r\n        var dataLen = data.length;\r\n        var _loop_1 = function (datumIndex) {\r\n            var datum = data[datumIndex];\r\n            var value = this_1.sectorValue().accessor(datum, datumIndex, dataset);\r\n            if (!Utils.Math.isValidNumber(value)) {\r\n                return \"continue\";\r\n            }\r\n            value = this_1._labelFormatter(value, datum, datumIndex, dataset);\r\n            var measurement = measurer.measure(value);\r\n            var theta = (this_1._endAngles[datumIndex] + this_1._startAngles[datumIndex]) / 2;\r\n            var outerRadius = this_1.outerRadius().accessor(datum, datumIndex, dataset);\r\n            if (this_1.outerRadius().scale) {\r\n                outerRadius = this_1.outerRadius().scale.scale(outerRadius);\r\n            }\r\n            var innerRadius = this_1.innerRadius().accessor(datum, datumIndex, dataset);\r\n            if (this_1.innerRadius().scale) {\r\n                innerRadius = this_1.innerRadius().scale.scale(innerRadius);\r\n            }\r\n            var labelRadius = (outerRadius + innerRadius) / 2;\r\n            var x = Math.sin(theta) * labelRadius - measurement.width / 2;\r\n            var y = -Math.cos(theta) * labelRadius - measurement.height / 2;\r\n            var corners = [\r\n                { x: x, y: y },\r\n                { x: x, y: y + measurement.height },\r\n                { x: x + measurement.width, y: y },\r\n                { x: x + measurement.width, y: y + measurement.height },\r\n            ];\r\n            var showLabel = corners.every(function (corner) {\r\n                return Math.abs(corner.x) <= _this.width() / 2 && Math.abs(corner.y) <= _this.height() / 2;\r\n            });\r\n            if (showLabel) {\r\n                var sliceIndices = corners.map(function (corner) { return _this._sliceIndexForPoint(corner); });\r\n                showLabel = sliceIndices.every(function (index) { return index === datumIndex; });\r\n            }\r\n            var color = attrToProjector[\"fill\"](datum, datumIndex, dataset);\r\n            var dark = Utils.Color.contrast(\"white\", color) * 1.6 < Utils.Color.contrast(\"black\", color);\r\n            var g = labelArea.append(\"g\").attr(\"transform\", \"translate(\" + x + \",\" + y + \")\");\r\n            var className = dark ? \"dark-label\" : \"light-label\";\r\n            g.classed(className, true);\r\n            g.style(\"visibility\", showLabel ? \"inherit\" : \"hidden\");\r\n            writer.write(value, measurement.width, measurement.height, {\r\n                xAlign: \"center\",\r\n                yAlign: \"center\",\r\n            }, g.node());\r\n        };\r\n        var this_1 = this;\r\n        for (var datumIndex = 0; datumIndex < dataLen; datumIndex++) {\r\n            _loop_1(datumIndex);\r\n        }\r\n    };\r\n    Pie._INNER_RADIUS_KEY = \"inner-radius\";\r\n    Pie._OUTER_RADIUS_KEY = \"outer-radius\";\r\n    Pie._SECTOR_VALUE_KEY = \"sector-value\";\r\n    return Pie;\r\n}(plot_1.Plot));\r\nexports.Pie = Pie;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/plots/piePlot.ts\n// module id = 100\n// module chunks = 0","\"use strict\";\r\n/**\r\n * Copyright 2014-present Palantir Technologies\r\n * @license MIT\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\nvar d3 = require(\"d3\");\r\nvar Typesettable = require(\"typesettable\");\r\nvar Animators = require(\"../animators\");\r\nvar Drawers = require(\"../drawers\");\r\nvar drawer_1 = require(\"../drawers/drawer\");\r\nvar rectangleDrawer_1 = require(\"../drawers/rectangleDrawer\");\r\nvar Scales = require(\"../scales\");\r\nvar Utils = require(\"../utils\");\r\nvar plot_1 = require(\"./plot\");\r\nvar xyPlot_1 = require(\"./xyPlot\");\r\nvar Rectangle = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Rectangle, _super);\r\n    /**\r\n     * A Rectangle Plot displays rectangles based on the data.\r\n     * The left and right edges of each rectangle can be set with x() and x2().\r\n     *   If only x() is set the Rectangle Plot will attempt to compute the correct left and right edge positions.\r\n     * The top and bottom edges of each rectangle can be set with y() and y2().\r\n     *   If only y() is set the Rectangle Plot will attempt to compute the correct top and bottom edge positions.\r\n     *\r\n     * @constructor\r\n     * @param {Scale.Scale} xScale\r\n     * @param {Scale.Scale} yScale\r\n     */\r\n    function Rectangle() {\r\n        var _this = _super.call(this) || this;\r\n        _this._labelsEnabled = false;\r\n        _this._label = null;\r\n        _this.animator(\"rectangles\", new Animators.Null());\r\n        _this.addClass(\"rectangle-plot\");\r\n        _this.attr(\"fill\", new Scales.Color().range()[0]);\r\n        return _this;\r\n    }\r\n    Rectangle.prototype._createDrawer = function () {\r\n        return new drawer_1.ProxyDrawer(function () { return new rectangleDrawer_1.RectangleSVGDrawer(); }, function (ctx) { return new Drawers.RectangleCanvasDrawer(ctx); });\r\n    };\r\n    Rectangle.prototype._generateAttrToProjector = function () {\r\n        var _this = this;\r\n        var attrToProjector = _super.prototype._generateAttrToProjector.call(this);\r\n        // Copy each of the different projectors.\r\n        var xAttr = plot_1.Plot._scaledAccessor(this.x());\r\n        var x2Attr = attrToProjector[Rectangle._X2_KEY];\r\n        var yAttr = plot_1.Plot._scaledAccessor(this.y());\r\n        var y2Attr = attrToProjector[Rectangle._Y2_KEY];\r\n        var xScale = this.x().scale;\r\n        var yScale = this.y().scale;\r\n        if (x2Attr != null) {\r\n            attrToProjector[\"width\"] = function (d, i, dataset) { return Math.abs(x2Attr(d, i, dataset) - xAttr(d, i, dataset)); };\r\n            attrToProjector[\"x\"] = function (d, i, dataset) { return Math.min(x2Attr(d, i, dataset), xAttr(d, i, dataset)); };\r\n        }\r\n        else {\r\n            attrToProjector[\"width\"] = function (d, i, dataset) { return _this._rectangleWidth(xScale); };\r\n            attrToProjector[\"x\"] = function (d, i, dataset) { return xAttr(d, i, dataset) - 0.5 * attrToProjector[\"width\"](d, i, dataset); };\r\n        }\r\n        if (y2Attr != null) {\r\n            attrToProjector[\"height\"] = function (d, i, dataset) { return Math.abs(y2Attr(d, i, dataset) - yAttr(d, i, dataset)); };\r\n            attrToProjector[\"y\"] = function (d, i, dataset) {\r\n                return Math.max(y2Attr(d, i, dataset), yAttr(d, i, dataset)) - attrToProjector[\"height\"](d, i, dataset);\r\n            };\r\n        }\r\n        else {\r\n            attrToProjector[\"height\"] = function (d, i, dataset) { return _this._rectangleWidth(yScale); };\r\n            attrToProjector[\"y\"] = function (d, i, dataset) { return yAttr(d, i, dataset) - 0.5 * attrToProjector[\"height\"](d, i, dataset); };\r\n        }\r\n        // Clean up the attributes projected onto the SVG elements\r\n        delete attrToProjector[Rectangle._X2_KEY];\r\n        delete attrToProjector[Rectangle._Y2_KEY];\r\n        return attrToProjector;\r\n    };\r\n    Rectangle.prototype._generateDrawSteps = function () {\r\n        return [{ attrToProjector: this._getAttrToProjector(), animator: this._getAnimator(\"rectangles\") }];\r\n    };\r\n    Rectangle.prototype._filterForProperty = function (property) {\r\n        if (property === \"x2\") {\r\n            return _super.prototype._filterForProperty.call(this, \"x\");\r\n        }\r\n        else if (property === \"y2\") {\r\n            return _super.prototype._filterForProperty.call(this, \"y\");\r\n        }\r\n        return _super.prototype._filterForProperty.call(this, property);\r\n    };\r\n    Rectangle.prototype.x = function (x, xScale, postScale) {\r\n        if (x == null) {\r\n            return _super.prototype.x.call(this);\r\n        }\r\n        if (xScale == null) {\r\n            _super.prototype.x.call(this, x);\r\n        }\r\n        else {\r\n            _super.prototype.x.call(this, x, xScale, postScale);\r\n        }\r\n        if (xScale != null) {\r\n            var x2Binding = this.x2();\r\n            var x2 = x2Binding && x2Binding.accessor;\r\n            if (x2 != null) {\r\n                this._bindProperty(Rectangle._X2_KEY, x2, xScale, x2Binding.postScale);\r\n            }\r\n        }\r\n        // The x and y scales should render in bands with no padding for category scales\r\n        if (xScale instanceof Scales.Category) {\r\n            xScale.innerPadding(0).outerPadding(0);\r\n        }\r\n        return this;\r\n    };\r\n    Rectangle.prototype.x2 = function (x2, postScale) {\r\n        if (x2 == null) {\r\n            return this._propertyBindings.get(Rectangle._X2_KEY);\r\n        }\r\n        var xBinding = this.x();\r\n        var xScale = xBinding && xBinding.scale;\r\n        this._bindProperty(Rectangle._X2_KEY, x2, xScale, postScale);\r\n        this.render();\r\n        return this;\r\n    };\r\n    Rectangle.prototype.y = function (y, yScale, postScale) {\r\n        if (y == null) {\r\n            return _super.prototype.y.call(this);\r\n        }\r\n        if (yScale == null) {\r\n            _super.prototype.y.call(this, y);\r\n        }\r\n        else {\r\n            _super.prototype.y.call(this, y, yScale, postScale);\r\n        }\r\n        if (yScale != null) {\r\n            var y2Binding = this.y2();\r\n            var y2 = y2Binding && y2Binding.accessor;\r\n            if (y2 != null) {\r\n                this._bindProperty(Rectangle._Y2_KEY, y2, yScale, y2Binding.postScale);\r\n            }\r\n        }\r\n        // The x and y scales should render in bands with no padding for category scales\r\n        if (yScale instanceof Scales.Category) {\r\n            yScale.innerPadding(0).outerPadding(0);\r\n        }\r\n        return this;\r\n    };\r\n    Rectangle.prototype.y2 = function (y2, postScale) {\r\n        if (y2 == null) {\r\n            return this._propertyBindings.get(Rectangle._Y2_KEY);\r\n        }\r\n        var yBinding = this.y();\r\n        var yScale = yBinding && yBinding.scale;\r\n        this._bindProperty(Rectangle._Y2_KEY, y2, yScale, postScale);\r\n        this.render();\r\n        return this;\r\n    };\r\n    /**\r\n     * Gets the PlotEntities at a particular Point.\r\n     *\r\n     * @param {Point} point The point to query.\r\n     * @returns {PlotEntity[]} The PlotEntities at the particular point\r\n     */\r\n    Rectangle.prototype.entitiesAt = function (point) {\r\n        var attrToProjector = this._getAttrToProjector();\r\n        return this.entities().filter(function (entity) {\r\n            var datum = entity.datum;\r\n            var index = entity.index;\r\n            var dataset = entity.dataset;\r\n            var x = attrToProjector[\"x\"](datum, index, dataset);\r\n            var y = attrToProjector[\"y\"](datum, index, dataset);\r\n            var width = attrToProjector[\"width\"](datum, index, dataset);\r\n            var height = attrToProjector[\"height\"](datum, index, dataset);\r\n            return x <= point.x && point.x <= x + width && y <= point.y && point.y <= y + height;\r\n        });\r\n    };\r\n    Rectangle.prototype._entityBounds = function (entity) {\r\n        var datum = entity.datum, index = entity.index, dataset = entity.dataset;\r\n        return this._entityBBox(datum, index, dataset, this._getAttrToProjector());\r\n    };\r\n    Rectangle.prototype._entityBBox = function (datum, index, dataset, attrToProjector) {\r\n        return {\r\n            x: attrToProjector[\"x\"](datum, index, dataset),\r\n            y: attrToProjector[\"y\"](datum, index, dataset),\r\n            width: attrToProjector[\"width\"](datum, index, dataset),\r\n            height: attrToProjector[\"height\"](datum, index, dataset),\r\n        };\r\n    };\r\n    Rectangle.prototype.label = function (label) {\r\n        if (label == null) {\r\n            return this._label;\r\n        }\r\n        this._label = label;\r\n        this.render();\r\n        return this;\r\n    };\r\n    Rectangle.prototype.labelsEnabled = function (enabled) {\r\n        if (enabled == null) {\r\n            return this._labelsEnabled;\r\n        }\r\n        else {\r\n            this._labelsEnabled = enabled;\r\n            this.render();\r\n            return this;\r\n        }\r\n    };\r\n    Rectangle.prototype._propertyProjectors = function () {\r\n        var attrToProjector = _super.prototype._propertyProjectors.call(this);\r\n        if (this.x2() != null) {\r\n            attrToProjector[\"x2\"] = plot_1.Plot._scaledAccessor(this.x2());\r\n        }\r\n        if (this.y2() != null) {\r\n            attrToProjector[\"y2\"] = plot_1.Plot._scaledAccessor(this.y2());\r\n        }\r\n        return attrToProjector;\r\n    };\r\n    Rectangle.prototype._pixelPoint = function (datum, index, dataset) {\r\n        var attrToProjector = this._getAttrToProjector();\r\n        var rectX = attrToProjector[\"x\"](datum, index, dataset);\r\n        var rectY = attrToProjector[\"y\"](datum, index, dataset);\r\n        var rectWidth = attrToProjector[\"width\"](datum, index, dataset);\r\n        var rectHeight = attrToProjector[\"height\"](datum, index, dataset);\r\n        var x = rectX + rectWidth / 2;\r\n        var y = rectY + rectHeight / 2;\r\n        return { x: x, y: y };\r\n    };\r\n    Rectangle.prototype._rectangleWidth = function (scale) {\r\n        if (scale instanceof Scales.Category) {\r\n            return scale.rangeBand();\r\n        }\r\n        else {\r\n            var accessor_1 = scale === this.x().scale ? this.x().accessor : this.y().accessor;\r\n            var accessorData = d3.set(Utils.Array.flatten(this.datasets().map(function (dataset) {\r\n                return dataset.data().map(function (d, i) { return accessor_1(d, i, dataset).valueOf(); });\r\n            }))).values().map(function (value) { return +value; });\r\n            // Get the absolute difference between min and max\r\n            var min = Utils.Math.min(accessorData, 0);\r\n            var max = Utils.Math.max(accessorData, 0);\r\n            var scaledMin = scale.scale(min);\r\n            var scaledMax = scale.scale(max);\r\n            return (scaledMax - scaledMin) / Math.abs(max - min);\r\n        }\r\n    };\r\n    Rectangle.prototype._getDataToDraw = function () {\r\n        var dataToDraw = new Utils.Map();\r\n        var attrToProjector = this._getAttrToProjector();\r\n        this.datasets().forEach(function (dataset) {\r\n            var data = dataset.data().map(function (d, i) {\r\n                var isValid = (Utils.Math.isValidNumber(attrToProjector[\"x\"](d, i, dataset)) &&\r\n                    Utils.Math.isValidNumber(attrToProjector[\"y\"](d, i, dataset)) &&\r\n                    Utils.Math.isValidNumber(attrToProjector[\"width\"](d, i, dataset)) &&\r\n                    Utils.Math.isValidNumber(attrToProjector[\"height\"](d, i, dataset)));\r\n                return isValid ? d : null;\r\n            });\r\n            dataToDraw.set(dataset, data);\r\n        });\r\n        return dataToDraw;\r\n    };\r\n    Rectangle.prototype._additionalPaint = function (time) {\r\n        var _this = this;\r\n        this._renderArea.selectAll(\".label-area\").remove();\r\n        if (this._labelsEnabled && this.label() != null) {\r\n            Utils.Window.setTimeout(function () { return _this._drawLabels(); }, time);\r\n        }\r\n    };\r\n    Rectangle.prototype._drawLabels = function () {\r\n        var _this = this;\r\n        var dataToDraw = this._getDataToDraw();\r\n        this.datasets().forEach(function (dataset, i) { return _this._drawLabel(dataToDraw, dataset, i); });\r\n    };\r\n    Rectangle.prototype._drawLabel = function (dataToDraw, dataset, datasetIndex) {\r\n        var attrToProjector = this._getAttrToProjector();\r\n        var labelArea = this._renderArea.append(\"g\").classed(\"label-area\", true);\r\n        var context = new Typesettable.SvgContext(labelArea.node());\r\n        var measurer = new Typesettable.CacheMeasurer(context);\r\n        var writer = new Typesettable.Writer(measurer, context);\r\n        var xRange = this.x().scale.range();\r\n        var yRange = this.y().scale.range();\r\n        var xMin = Math.min.apply(null, xRange);\r\n        var xMax = Math.max.apply(null, xRange);\r\n        var yMin = Math.min.apply(null, yRange);\r\n        var yMax = Math.max.apply(null, yRange);\r\n        var data = dataToDraw.get(dataset);\r\n        var dataLength = data.length;\r\n        for (var datumIndex = 0; datumIndex < dataLength; datumIndex++) {\r\n            var datum = data[datumIndex];\r\n            if (datum == null) {\r\n                continue;\r\n            }\r\n            var label = \"\" + this.label()(datum, datumIndex, dataset);\r\n            var measurement = measurer.measure(label);\r\n            var x = attrToProjector[\"x\"](datum, datumIndex, dataset);\r\n            var y = attrToProjector[\"y\"](datum, datumIndex, dataset);\r\n            var width = attrToProjector[\"width\"](datum, datumIndex, dataset);\r\n            var height = attrToProjector[\"height\"](datum, datumIndex, dataset);\r\n            if (measurement.height <= height && measurement.width <= width) {\r\n                var horizontalOffset = (width - measurement.width) / 2;\r\n                var verticalOffset = (height - measurement.height) / 2;\r\n                x += horizontalOffset;\r\n                y += verticalOffset;\r\n                var xLabelRange = { min: x, max: x + measurement.width };\r\n                var yLabelRange = { min: y, max: y + measurement.height };\r\n                if (xLabelRange.min < xMin || xLabelRange.max > xMax || yLabelRange.min < yMin || yLabelRange.max > yMax) {\r\n                    continue;\r\n                }\r\n                if (this._overlayLabel(xLabelRange, yLabelRange, datumIndex, datasetIndex, dataToDraw)) {\r\n                    continue;\r\n                }\r\n                var color = attrToProjector[\"fill\"](datum, datumIndex, dataset);\r\n                var dark = Utils.Color.contrast(\"white\", color) * 1.6 < Utils.Color.contrast(\"black\", color);\r\n                var g = labelArea.append(\"g\").attr(\"transform\", \"translate(\" + x + \",\" + y + \")\");\r\n                var className = dark ? \"dark-label\" : \"light-label\";\r\n                g.classed(className, true);\r\n                writer.write(label, measurement.width, measurement.height, {\r\n                    xAlign: \"center\",\r\n                    yAlign: \"center\",\r\n                }, g.node());\r\n            }\r\n        }\r\n    };\r\n    Rectangle.prototype._overlayLabel = function (labelXRange, labelYRange, datumIndex, datasetIndex, dataToDraw) {\r\n        var attrToProjector = this._getAttrToProjector();\r\n        var datasets = this.datasets();\r\n        for (var i = datasetIndex; i < datasets.length; i++) {\r\n            var dataset = datasets[i];\r\n            var data = dataToDraw.get(dataset);\r\n            var dataLen = data.length;\r\n            for (var j = (i === datasetIndex ? datumIndex + 1 : 0); j < dataLen; j++) {\r\n                if (Utils.DOM.intersectsBBox(labelXRange, labelYRange, this._entityBBox(data[j], j, dataset, attrToProjector))) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    Rectangle._X2_KEY = \"x2\";\r\n    Rectangle._Y2_KEY = \"y2\";\r\n    return Rectangle;\r\n}(xyPlot_1.XYPlot));\r\nexports.Rectangle = Rectangle;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/plots/rectanglePlot.ts\n// module id = 101\n// module chunks = 0","\"use strict\";\r\n/**\r\n * Copyright 2014-present Palantir Technologies\r\n * @license MIT\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\nvar Typesettable = require(\"typesettable\");\r\nvar Formatters = require(\"../core/formatters\");\r\nvar SymbolFactories = require(\"../core/symbolFactories\");\r\nvar drawer_1 = require(\"../drawers/drawer\");\r\nvar symbolDrawer_1 = require(\"../drawers/symbolDrawer\");\r\nvar Animators = require(\"../animators\");\r\nvar Drawers = require(\"../drawers\");\r\nvar Scales = require(\"../scales\");\r\nvar Utils = require(\"../utils\");\r\nvar Plots = require(\"./\");\r\nvar plot_1 = require(\"./plot\");\r\nvar xyPlot_1 = require(\"./xyPlot\");\r\nvar Scatter = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Scatter, _super);\r\n    /**\r\n     * A Scatter Plot draws a symbol at each data point.\r\n     *\r\n     * @constructor\r\n     */\r\n    function Scatter() {\r\n        var _this = _super.call(this) || this;\r\n        _this._labelFormatter = Formatters.identity();\r\n        _this._labelsEnabled = false;\r\n        _this.addClass(\"scatter-plot\");\r\n        var animator = new Animators.Easing();\r\n        animator.startDelay(5);\r\n        animator.stepDuration(250);\r\n        animator.maxTotalDuration(plot_1.Plot._ANIMATION_MAX_DURATION);\r\n        _this.animator(Plots.Animator.MAIN, animator);\r\n        _this.attr(\"opacity\", 0.6);\r\n        _this.attr(\"fill\", new Scales.Color().range()[0]);\r\n        _this.size(6);\r\n        var circleSymbolFactory = SymbolFactories.circle();\r\n        _this.symbol(function () { return circleSymbolFactory; });\r\n        _this._labelConfig = new Utils.Map();\r\n        return _this;\r\n    }\r\n    Scatter.prototype._buildLightweightPlotEntities = function (datasets) {\r\n        var _this = this;\r\n        var lightweightPlotEntities = _super.prototype._buildLightweightPlotEntities.call(this, datasets);\r\n        return lightweightPlotEntities.map(function (lightweightPlotEntity) {\r\n            var diameter = plot_1.Plot._scaledAccessor(_this.size())(lightweightPlotEntity.datum, lightweightPlotEntity.index, lightweightPlotEntity.dataset);\r\n            lightweightPlotEntity.diameter = diameter;\r\n            return lightweightPlotEntity;\r\n        });\r\n    };\r\n    Scatter.prototype._createDrawer = function (dataset) {\r\n        var _this = this;\r\n        return new drawer_1.ProxyDrawer(function () { return new symbolDrawer_1.SymbolSVGDrawer(); }, function (ctx) {\r\n            return new Drawers.CanvasDrawer(ctx, symbolDrawer_1.makeSymbolCanvasDrawStep(dataset, function () { return plot_1.Plot._scaledAccessor(_this.symbol()); }, function () { return plot_1.Plot._scaledAccessor(_this.size()); }));\r\n        });\r\n    };\r\n    Scatter.prototype.size = function (size, scale) {\r\n        if (size == null) {\r\n            return this._propertyBindings.get(Scatter._SIZE_KEY);\r\n        }\r\n        this._bindProperty(Scatter._SIZE_KEY, size, scale);\r\n        this.render();\r\n        return this;\r\n    };\r\n    Scatter.prototype.symbol = function (symbol) {\r\n        if (symbol == null) {\r\n            return this._propertyBindings.get(Scatter._SYMBOL_KEY);\r\n        }\r\n        this._propertyBindings.set(Scatter._SYMBOL_KEY, { accessor: symbol });\r\n        this.render();\r\n        return this;\r\n    };\r\n    Scatter.prototype._generateDrawSteps = function () {\r\n        var drawSteps = [];\r\n        if (this._animateOnNextRender()) {\r\n            var attrToProjector = this._getAttrToProjector();\r\n            var symbolProjector_1 = plot_1.Plot._scaledAccessor(this.symbol());\r\n            attrToProjector[\"d\"] = function (datum, index, dataset) { return symbolProjector_1(datum, index, dataset)(0)(null); };\r\n            drawSteps.push({ attrToProjector: attrToProjector, animator: this._getAnimator(Plots.Animator.RESET) });\r\n        }\r\n        drawSteps.push({\r\n            attrToProjector: this._getAttrToProjector(),\r\n            animator: this._getAnimator(Plots.Animator.MAIN),\r\n        });\r\n        return drawSteps;\r\n    };\r\n    Scatter.prototype._propertyProjectors = function () {\r\n        var propertyToProjectors = _super.prototype._propertyProjectors.call(this);\r\n        var xProjector = plot_1.Plot._scaledAccessor(this.x());\r\n        var yProjector = plot_1.Plot._scaledAccessor(this.y());\r\n        propertyToProjectors[\"x\"] = xProjector;\r\n        propertyToProjectors[\"y\"] = yProjector;\r\n        propertyToProjectors[\"transform\"] = function (datum, index, dataset) {\r\n            return \"translate(\" + xProjector(datum, index, dataset) + \",\" + yProjector(datum, index, dataset) + \")\";\r\n        };\r\n        propertyToProjectors[\"d\"] = this._constructSymbolGenerator();\r\n        return propertyToProjectors;\r\n    };\r\n    Scatter.prototype._constructSymbolGenerator = function () {\r\n        var symbolProjector = plot_1.Plot._scaledAccessor(this.symbol());\r\n        var sizeProjector = plot_1.Plot._scaledAccessor(this.size());\r\n        return function (datum, index, dataset) {\r\n            return symbolProjector(datum, index, dataset)(sizeProjector(datum, index, dataset))(null);\r\n        };\r\n    };\r\n    Scatter.prototype._entityBounds = function (entity) {\r\n        return {\r\n            x: entity.position.x - entity.diameter / 2,\r\n            y: entity.position.y - entity.diameter / 2,\r\n            width: entity.diameter,\r\n            height: entity.diameter,\r\n        };\r\n    };\r\n    Scatter.prototype._entityVisibleOnPlot = function (entity, bounds) {\r\n        var xRange = { min: bounds.topLeft.x, max: bounds.bottomRight.x };\r\n        var yRange = { min: bounds.topLeft.y, max: bounds.bottomRight.y };\r\n        var translatedBbox = this._entityBounds(entity);\r\n        return Utils.DOM.intersectsBBox(xRange, yRange, translatedBbox);\r\n    };\r\n    /**\r\n     * Gets the Entities at a particular Point.\r\n     *\r\n     * @param {Point} p\r\n     * @returns {PlotEntity[]}\r\n     */\r\n    Scatter.prototype.entitiesAt = function (p) {\r\n        var xProjector = plot_1.Plot._scaledAccessor(this.x());\r\n        var yProjector = plot_1.Plot._scaledAccessor(this.y());\r\n        var sizeProjector = plot_1.Plot._scaledAccessor(this.size());\r\n        return this.entities().filter(function (entity) {\r\n            var datum = entity.datum;\r\n            var index = entity.index;\r\n            var dataset = entity.dataset;\r\n            var x = xProjector(datum, index, dataset);\r\n            var y = yProjector(datum, index, dataset);\r\n            var size = sizeProjector(datum, index, dataset);\r\n            return x - size / 2 <= p.x && p.x <= x + size / 2 && y - size / 2 <= p.y && p.y <= y + size / 2;\r\n        });\r\n    };\r\n    Scatter.prototype.labelsEnabled = function (enabled) {\r\n        if (enabled == null) {\r\n            return this._labelsEnabled;\r\n        }\r\n        else {\r\n            this._labelsEnabled = enabled;\r\n            this._clearAttrToProjectorCache();\r\n            this.render();\r\n            return this;\r\n        }\r\n    };\r\n    Scatter.prototype._createNodesForDataset = function (dataset) {\r\n        var drawer = _super.prototype._createNodesForDataset.call(this, dataset);\r\n        var labelArea = this._renderArea.append(\"g\").classed(Scatter._LABEL_AREA_CLASS, true);\r\n        var context = new Typesettable.SvgContext(labelArea.node());\r\n        var measurer = new Typesettable.CacheMeasurer(context);\r\n        var writer = new Typesettable.Writer(measurer, context);\r\n        this._labelConfig.set(dataset, { labelArea: labelArea, measurer: measurer, writer: writer });\r\n        return drawer;\r\n    };\r\n    Scatter.prototype._removeDatasetNodes = function (dataset) {\r\n        _super.prototype._removeDatasetNodes.call(this, dataset);\r\n        var labelConfig = this._labelConfig.get(dataset);\r\n        if (labelConfig != null) {\r\n            labelConfig.labelArea.remove();\r\n            this._labelConfig.delete(dataset);\r\n        }\r\n    };\r\n    Scatter.prototype._additionalPaint = function (time) {\r\n        var _this = this;\r\n        this.datasets().forEach(function (dataset) { return _this._labelConfig.get(dataset).labelArea.selectAll(\"g\").remove(); });\r\n        if (this._labelsEnabled) {\r\n            Utils.Window.setTimeout(function () { return _this._drawLabels(); }, time);\r\n        }\r\n    };\r\n    Scatter.prototype._drawLabels = function () {\r\n        var _this = this;\r\n        var dataToDraw = this._getDataToDraw();\r\n        var attrToProjector = this._getAttrToProjector();\r\n        this.datasets().forEach(function (dataset) {\r\n            var data = dataToDraw.get(dataset);\r\n            var dataLen = data.length;\r\n            for (var index = 0; index < dataLen; index++) {\r\n                var datum = data[index];\r\n                if (datum == null) {\r\n                    continue;\r\n                }\r\n                _this._drawLabel(datum, index, dataset, attrToProjector);\r\n            }\r\n        });\r\n    };\r\n    Scatter.prototype._drawLabel = function (datum, index, dataset, attrToProjector) {\r\n        if (datum.label == null) {\r\n            return;\r\n        }\r\n        var _a = this._labelConfig.get(dataset), labelArea = _a.labelArea, measurer = _a.measurer, writer = _a.writer;\r\n        var scatterCoordinates = { x: attrToProjector[\"x\"](datum, index, dataset), y: attrToProjector[\"y\"](datum, index, dataset) };\r\n        var sizeProjector = plot_1.Plot._scaledAccessor(this.size());\r\n        var diameter = sizeProjector(datum, index, dataset);\r\n        var label = this._labelFormatter(datum.label, datum, index, dataset);\r\n        var measurement = measurer.measure(label);\r\n        var _b = this._calculateLabelProperties(scatterCoordinates, diameter, measurement), containerDimensions = _b.containerDimensions, labelContainerOrigin = _b.labelContainerOrigin, labelOrigin = _b.labelOrigin, alignment = _b.alignment;\r\n        var labelContainer = this._createLabelContainer(labelArea, labelContainerOrigin, labelOrigin, measurement);\r\n        var writeOptions = { xAlign: alignment.x, yAlign: alignment.y };\r\n        writer.write(label, containerDimensions.width, containerDimensions.height, writeOptions, labelContainer.node());\r\n    };\r\n    Scatter.prototype._calculateLabelProperties = function (pointCoordinates, diameter, measurement) {\r\n        // If diameter is smaller than font size, put label above\r\n        var labelShift = diameter < measurement.height ? diameter / 2 + Scatter._LABEL_MARGIN_FROM_BUBBLE : 0;\r\n        return {\r\n            containerDimensions: {\r\n                width: measurement.width,\r\n                height: measurement.height,\r\n            },\r\n            labelContainerOrigin: {\r\n                x: pointCoordinates.x - measurement.width / 2,\r\n                y: pointCoordinates.y - measurement.height / 2 + labelShift,\r\n            },\r\n            labelOrigin: {\r\n                x: pointCoordinates.x,\r\n                y: pointCoordinates.y,\r\n            },\r\n            alignment: {\r\n                x: \"center\",\r\n                y: \"center\",\r\n            },\r\n        };\r\n    };\r\n    Scatter.prototype._createLabelContainer = function (labelArea, labelContainerOrigin, labelOrigin, measurement) {\r\n        var labelContainer = labelArea.append(\"g\")\r\n            .attr(\"transform\", \"translate(\" + labelContainerOrigin.x + \", \" + labelContainerOrigin.y + \")\");\r\n        labelContainer.classed(\"on-bar-label\", true);\r\n        return labelContainer;\r\n    };\r\n    Scatter._SIZE_KEY = \"size\";\r\n    Scatter._SYMBOL_KEY = \"symbol\";\r\n    // label stuff\r\n    Scatter._LABEL_AREA_CLASS = \"scatter-label-text-area\";\r\n    Scatter._LABEL_MARGIN_FROM_BUBBLE = 15;\r\n    return Scatter;\r\n}(xyPlot_1.XYPlot));\r\nexports.Scatter = Scatter;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/plots/scatterPlot.ts\n// module id = 102\n// module chunks = 0","\"use strict\";\r\n/**\r\n * Copyright 2014-present Palantir Technologies\r\n * @license MIT\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\nvar Animators = require(\"../animators\");\r\nvar drawer_1 = require(\"../drawers/drawer\");\r\nvar segmentDrawer_1 = require(\"../drawers/segmentDrawer\");\r\nvar Scales = require(\"../scales\");\r\nvar windowUtils_1 = require(\"../utils/windowUtils\");\r\nvar plot_1 = require(\"./plot\");\r\nvar xyPlot_1 = require(\"./xyPlot\");\r\nvar Segment = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Segment, _super);\r\n    /**\r\n     * A Segment Plot displays line segments based on the data.\r\n     *\r\n     * @constructor\r\n     */\r\n    function Segment() {\r\n        var _this = _super.call(this) || this;\r\n        _this.addClass(\"segment-plot\");\r\n        _this.attr(\"stroke\", new Scales.Color().range()[0]);\r\n        _this.attr(\"stroke-width\", \"2px\");\r\n        return _this;\r\n    }\r\n    Segment.prototype._createDrawer = function () {\r\n        return new drawer_1.ProxyDrawer(function () { return new segmentDrawer_1.SegmentSVGDrawer(); }, function () {\r\n            windowUtils_1.warn(\"canvas renderer is not supported on Segment Plot!\");\r\n            return null;\r\n        });\r\n    };\r\n    Segment.prototype._generateDrawSteps = function () {\r\n        return [{ attrToProjector: this._getAttrToProjector(), animator: new Animators.Null() }];\r\n    };\r\n    Segment.prototype._filterForProperty = function (property) {\r\n        if (property === \"x2\") {\r\n            return _super.prototype._filterForProperty.call(this, \"x\");\r\n        }\r\n        else if (property === \"y2\") {\r\n            return _super.prototype._filterForProperty.call(this, \"y\");\r\n        }\r\n        return _super.prototype._filterForProperty.call(this, property);\r\n    };\r\n    Segment.prototype.x = function (x, xScale) {\r\n        if (x == null) {\r\n            return _super.prototype.x.call(this);\r\n        }\r\n        if (xScale == null) {\r\n            _super.prototype.x.call(this, x);\r\n        }\r\n        else {\r\n            _super.prototype.x.call(this, x, xScale);\r\n            var x2Binding = this.x2();\r\n            var x2 = x2Binding && x2Binding.accessor;\r\n            if (x2 != null) {\r\n                this._bindProperty(Segment._X2_KEY, x2, xScale);\r\n            }\r\n        }\r\n        return this;\r\n    };\r\n    Segment.prototype.x2 = function (x2) {\r\n        if (x2 == null) {\r\n            return this._propertyBindings.get(Segment._X2_KEY);\r\n        }\r\n        var xBinding = this.x();\r\n        var xScale = xBinding && xBinding.scale;\r\n        this._bindProperty(Segment._X2_KEY, x2, xScale);\r\n        this.render();\r\n        return this;\r\n    };\r\n    Segment.prototype.y = function (y, yScale) {\r\n        if (y == null) {\r\n            return _super.prototype.y.call(this);\r\n        }\r\n        if (yScale == null) {\r\n            _super.prototype.y.call(this, y);\r\n        }\r\n        else {\r\n            _super.prototype.y.call(this, y, yScale);\r\n            var y2Binding = this.y2();\r\n            var y2 = y2Binding && y2Binding.accessor;\r\n            if (y2 != null) {\r\n                this._bindProperty(Segment._Y2_KEY, y2, yScale);\r\n            }\r\n        }\r\n        return this;\r\n    };\r\n    Segment.prototype.y2 = function (y2) {\r\n        if (y2 == null) {\r\n            return this._propertyBindings.get(Segment._Y2_KEY);\r\n        }\r\n        var yBinding = this.y();\r\n        var yScale = yBinding && yBinding.scale;\r\n        this._bindProperty(Segment._Y2_KEY, y2, yScale);\r\n        this.render();\r\n        return this;\r\n    };\r\n    Segment.prototype._propertyProjectors = function () {\r\n        var attrToProjector = _super.prototype._propertyProjectors.call(this);\r\n        attrToProjector[\"x1\"] = plot_1.Plot._scaledAccessor(this.x());\r\n        attrToProjector[\"x2\"] = this.x2() == null ? plot_1.Plot._scaledAccessor(this.x()) : plot_1.Plot._scaledAccessor(this.x2());\r\n        attrToProjector[\"y1\"] = plot_1.Plot._scaledAccessor(this.y());\r\n        attrToProjector[\"y2\"] = this.y2() == null ? plot_1.Plot._scaledAccessor(this.y()) : plot_1.Plot._scaledAccessor(this.y2());\r\n        return attrToProjector;\r\n    };\r\n    Segment.prototype.entitiesAt = function (point) {\r\n        var entity = this.entityNearest(point);\r\n        if (entity != null) {\r\n            return [entity];\r\n        }\r\n        else {\r\n            return [];\r\n        }\r\n    };\r\n    Segment.prototype.entitiesIn = function (xRangeOrBounds, yRange) {\r\n        var dataXRange;\r\n        var dataYRange;\r\n        if (yRange == null) {\r\n            var bounds = xRangeOrBounds;\r\n            dataXRange = { min: bounds.topLeft.x, max: bounds.bottomRight.x };\r\n            dataYRange = { min: bounds.topLeft.y, max: bounds.bottomRight.y };\r\n        }\r\n        else {\r\n            dataXRange = xRangeOrBounds;\r\n            dataYRange = yRange;\r\n        }\r\n        return this._entitiesIntersecting(dataXRange, dataYRange);\r\n    };\r\n    Segment.prototype._entitiesIntersecting = function (xRange, yRange) {\r\n        var intersected = [];\r\n        var attrToProjector = this._getAttrToProjector();\r\n        var entities = this.entities();\r\n        var entitiesLen = entities.length;\r\n        for (var i = 0; i < entitiesLen; i++) {\r\n            var entity = entities[i];\r\n            if (this._lineIntersectsBox(entity, xRange, yRange, attrToProjector)) {\r\n                intersected.push(entity);\r\n            }\r\n        }\r\n        return intersected;\r\n    };\r\n    Segment.prototype._lineIntersectsBox = function (entity, xRange, yRange, attrToProjector) {\r\n        var _this = this;\r\n        var x1 = attrToProjector[\"x1\"](entity.datum, entity.index, entity.dataset);\r\n        var x2 = attrToProjector[\"x2\"](entity.datum, entity.index, entity.dataset);\r\n        var y1 = attrToProjector[\"y1\"](entity.datum, entity.index, entity.dataset);\r\n        var y2 = attrToProjector[\"y2\"](entity.datum, entity.index, entity.dataset);\r\n        // check if any of end points of the segment is inside the box\r\n        if ((xRange.min <= x1 && x1 <= xRange.max && yRange.min <= y1 && y1 <= yRange.max) ||\r\n            (xRange.min <= x2 && x2 <= xRange.max && yRange.min <= y2 && y2 <= yRange.max)) {\r\n            return true;\r\n        }\r\n        var startPoint = { x: x1, y: y1 };\r\n        var endPoint = { x: x2, y: y2 };\r\n        var corners = [\r\n            { x: xRange.min, y: yRange.min },\r\n            { x: xRange.min, y: yRange.max },\r\n            { x: xRange.max, y: yRange.max },\r\n            { x: xRange.max, y: yRange.min },\r\n        ];\r\n        var intersections = corners.filter(function (point, index) {\r\n            if (index !== 0) {\r\n                // return true if border formed by conecting current corner and previous corner intersects with the segment\r\n                return _this._lineIntersectsSegment(startPoint, endPoint, point, corners[index - 1]) &&\r\n                    _this._lineIntersectsSegment(point, corners[index - 1], startPoint, endPoint);\r\n            }\r\n            return false;\r\n        });\r\n        return intersections.length > 0;\r\n    };\r\n    Segment.prototype._lineIntersectsSegment = function (point1, point2, point3, point4) {\r\n        // tslint:disable-next-line:no-shadowed-variable\r\n        var calcOrientation = function (point1, point2, point) {\r\n            return (point2.x - point1.x) * (point.y - point2.y) - (point2.y - point1.y) * (point.x - point2.x);\r\n        };\r\n        // point3 and point4 are on different sides of line formed by point1 and point2\r\n        return calcOrientation(point1, point2, point3) * calcOrientation(point1, point2, point4) < 0;\r\n    };\r\n    Segment._X2_KEY = \"x2\";\r\n    Segment._Y2_KEY = \"y2\";\r\n    return Segment;\r\n}(xyPlot_1.XYPlot));\r\nexports.Segment = Segment;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/plots/segmentPlot.ts\n// module id = 103\n// module chunks = 0","\"use strict\";\r\n/**\r\n * Copyright 2014-present Palantir Technologies\r\n * @license MIT\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\nvar d3 = require(\"d3\");\r\nvar Animators = require(\"../animators\");\r\nvar index_1 = require(\"../memoize/index\");\r\nvar Utils = require(\"../utils\");\r\nvar areaPlot_1 = require(\"./areaPlot\");\r\nvar plot_1 = require(\"./plot\");\r\nvar StackedArea = /** @class */ (function (_super) {\r\n    tslib_1.__extends(StackedArea, _super);\r\n    /**\r\n     * @constructor\r\n     */\r\n    function StackedArea() {\r\n        var _this = _super.call(this) || this;\r\n        _this._stackingResult = index_1.memThunk(function () { return _this.datasets(); }, function () { return _this.x().accessor; }, function () { return _this.y().accessor; }, function () { return _this._stackingOrder; }, function (datasets, keyAccessor, valueAccessor, stackingOrder) {\r\n            return Utils.Stacking.stack(datasets, keyAccessor, valueAccessor, stackingOrder);\r\n        });\r\n        _this._stackedExtent = index_1.memThunk(_this._stackingResult, function () { return _this.x().accessor; }, function () { return _this._filterForProperty(\"y\"); }, function (stackingResult, keyAccessor, filter) {\r\n            return Utils.Stacking.stackedExtent(stackingResult, keyAccessor, filter);\r\n        });\r\n        _this._baselineValue = 0;\r\n        _this._stackingOrder = \"bottomup\";\r\n        _this.addClass(\"stacked-area-plot\");\r\n        _this._baselineValueProvider = function () { return [_this._baselineValue]; };\r\n        _this.croppedRenderingEnabled(false);\r\n        return _this;\r\n    }\r\n    StackedArea.prototype.croppedRenderingEnabled = function (croppedRendering) {\r\n        if (croppedRendering == null) {\r\n            return _super.prototype.croppedRenderingEnabled.call(this);\r\n        }\r\n        if (croppedRendering) {\r\n            // HACKHACK #3032: cropped rendering doesn't currently work correctly on StackedArea\r\n            Utils.Window.warn(\"Warning: Stacked Area Plot does not support cropped rendering.\");\r\n            return this;\r\n        }\r\n        return _super.prototype.croppedRenderingEnabled.call(this, croppedRendering);\r\n    };\r\n    StackedArea.prototype._getAnimator = function (key) {\r\n        return new Animators.Null();\r\n    };\r\n    StackedArea.prototype._setup = function () {\r\n        _super.prototype._setup.call(this);\r\n        this._baseline = this._renderArea.append(\"line\").classed(\"baseline\", true);\r\n    };\r\n    StackedArea.prototype.x = function (x, xScale) {\r\n        if (x == null) {\r\n            return _super.prototype.x.call(this);\r\n        }\r\n        if (xScale == null) {\r\n            _super.prototype.x.call(this, x);\r\n        }\r\n        else {\r\n            _super.prototype.x.call(this, x, xScale);\r\n        }\r\n        this._checkSameDomain();\r\n        return this;\r\n    };\r\n    StackedArea.prototype.y = function (y, yScale) {\r\n        if (y == null) {\r\n            return _super.prototype.y.call(this);\r\n        }\r\n        if (yScale == null) {\r\n            _super.prototype.y.call(this, y);\r\n        }\r\n        else {\r\n            _super.prototype.y.call(this, y, yScale);\r\n        }\r\n        this._checkSameDomain();\r\n        return this;\r\n    };\r\n    /**\r\n     * Gets the offset of the y value corresponding to an x value of a given dataset. This allows other plots to plot\r\n     * points corresponding to their stacked value in the graph.\r\n     * @param dataset The dataset from which to retrieve the y value offset\r\n     * @param x The x value corresponding to the y-value of interest.\r\n     */\r\n    StackedArea.prototype.yOffset = function (dataset, x) {\r\n        var stackingResult = this._stackingResult();\r\n        if (stackingResult == null) {\r\n            return undefined;\r\n        }\r\n        var datasetStackingResult = stackingResult.get(dataset);\r\n        if (datasetStackingResult == null) {\r\n            return undefined;\r\n        }\r\n        var result = datasetStackingResult.get(String(x));\r\n        if (result == null) {\r\n            return undefined;\r\n        }\r\n        return result.offset;\r\n    };\r\n    StackedArea.prototype.stackingOrder = function (stackingOrder) {\r\n        if (stackingOrder == null) {\r\n            return this._stackingOrder;\r\n        }\r\n        this._stackingOrder = stackingOrder;\r\n        this._onDatasetUpdate();\r\n        return this;\r\n    };\r\n    StackedArea.prototype.downsamplingEnabled = function (downsampling) {\r\n        if (downsampling == null) {\r\n            return _super.prototype.downsamplingEnabled.call(this);\r\n        }\r\n        Utils.Window.warn(\"Warning: Stacked Area Plot does not support downsampling\");\r\n        return this;\r\n    };\r\n    StackedArea.prototype._additionalPaint = function () {\r\n        var scaledBaseline = this.y().scale.scale(this._baselineValue);\r\n        var baselineAttr = {\r\n            \"x1\": 0,\r\n            \"y1\": scaledBaseline,\r\n            \"x2\": this.width(),\r\n            \"y2\": scaledBaseline,\r\n        };\r\n        this._getAnimator(\"baseline\").animate(this._baseline, baselineAttr);\r\n    };\r\n    StackedArea.prototype._updateYScale = function () {\r\n        var yBinding = this.y();\r\n        var scale = (yBinding && yBinding.scale);\r\n        if (scale == null) {\r\n            return;\r\n        }\r\n        scale.addPaddingExceptionsProvider(this._baselineValueProvider);\r\n        scale.addIncludedValuesProvider(this._baselineValueProvider);\r\n    };\r\n    StackedArea.prototype._onDatasetUpdate = function () {\r\n        this._checkSameDomain();\r\n        _super.prototype._onDatasetUpdate.call(this);\r\n        return this;\r\n    };\r\n    StackedArea.prototype.getExtentsForProperty = function (attr) {\r\n        var primaryAttr = \"y\";\r\n        if (attr === primaryAttr) {\r\n            return [this._stackedExtent()];\r\n        }\r\n        else {\r\n            return _super.prototype.getExtentsForProperty.call(this, attr);\r\n        }\r\n    };\r\n    StackedArea.prototype._checkSameDomain = function () {\r\n        if (!this._projectorsReady()) {\r\n            return;\r\n        }\r\n        var datasets = this.datasets();\r\n        var keyAccessor = this.x().accessor;\r\n        var keySets = datasets.map(function (dataset) {\r\n            return d3.set(dataset.data().map(function (datum, i) { return Utils.Stacking.normalizeKey(keyAccessor(datum, i, dataset)); })).values();\r\n        });\r\n        var domainKeys = StackedArea._domainKeys(datasets, keyAccessor);\r\n        if (keySets.some(function (keySet) { return keySet.length !== domainKeys.length; })) {\r\n            Utils.Window.warn(\"the domains across the datasets are not the same. Plot may produce unintended behavior.\");\r\n        }\r\n    };\r\n    /**\r\n     * Given an array of Datasets and the accessor function for the key, computes the\r\n     * set reunion (no duplicates) of the domain of each Dataset. The keys are stringified\r\n     * before being returned.\r\n     *\r\n     * @param {Dataset[]} datasets The Datasets for which we extract the domain keys\r\n     * @param {Accessor<any>} keyAccessor The accessor for the key of the data\r\n     * @return {string[]} An array of stringified keys\r\n     */\r\n    StackedArea._domainKeys = function (datasets, keyAccessor) {\r\n        var domainKeys = d3.set();\r\n        datasets.forEach(function (dataset) {\r\n            var data = dataset.data();\r\n            var dataLen = data.length;\r\n            for (var index = 0; index < dataLen; index++) {\r\n                var datum = data[index];\r\n                domainKeys.add(keyAccessor(datum, index, dataset));\r\n            }\r\n        });\r\n        return domainKeys.values();\r\n    };\r\n    StackedArea.prototype._coordinateProjectors = function () {\r\n        var _this = this;\r\n        var xProjector = plot_1.Plot._scaledAccessor(this.x());\r\n        var yAccessor = this.y().accessor;\r\n        var xAccessor = this.x().accessor;\r\n        var normalizedXAccessor = function (datum, index, dataset) {\r\n            return Utils.Stacking.normalizeKey(xAccessor(datum, index, dataset));\r\n        };\r\n        var stackingResult = this._stackingResult();\r\n        var stackYProjector = function (d, i, dataset) {\r\n            var y = +yAccessor(d, i, dataset);\r\n            var offset = stackingResult.get(dataset).get(normalizedXAccessor(d, i, dataset)).offset;\r\n            return _this.y().scale.scale(y + offset);\r\n        };\r\n        var stackY0Projector = function (d, i, dataset) {\r\n            var offset = stackingResult.get(dataset).get(normalizedXAccessor(d, i, dataset)).offset;\r\n            return _this.y().scale.scale(offset);\r\n        };\r\n        return [\r\n            xProjector,\r\n            stackYProjector,\r\n            stackY0Projector,\r\n        ];\r\n    };\r\n    StackedArea.prototype._propertyProjectors = function () {\r\n        var propertyToProjectors = _super.prototype._propertyProjectors.call(this);\r\n        var _a = this._coordinateProjectors(), xProjector = _a[0], stackYProjector = _a[1], stackY0Projector = _a[2];\r\n        propertyToProjectors[\"d\"] = this._constructAreaProjector(xProjector, stackYProjector, stackY0Projector);\r\n        return propertyToProjectors;\r\n    };\r\n    StackedArea.prototype._pixelPoint = function (datum, index, dataset) {\r\n        var pixelPoint = _super.prototype._pixelPoint.call(this, datum, index, dataset);\r\n        var xValue = this.x().accessor(datum, index, dataset);\r\n        var yValue = this.y().accessor(datum, index, dataset);\r\n        var scaledYValue = this.y().scale.scale(+yValue + this._stackingResult().get(dataset).get(Utils.Stacking.normalizeKey(xValue)).offset);\r\n        return { x: pixelPoint.x, y: scaledYValue };\r\n    };\r\n    return StackedArea;\r\n}(areaPlot_1.Area));\r\nexports.StackedArea = StackedArea;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/plots/stackedAreaPlot.ts\n// module id = 104\n// module chunks = 0","\"use strict\";\r\n/**\r\n * Copyright 2014-present Palantir Technologies\r\n * @license MIT\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\nvar Typesettable = require(\"typesettable\");\r\nvar formatters_1 = require(\"../core/formatters\");\r\nvar memoize_1 = require(\"../memoize\");\r\nvar Utils = require(\"../utils\");\r\nvar barPlot_1 = require(\"./barPlot\");\r\nvar plot_1 = require(\"./plot\");\r\nvar StackedBar = /** @class */ (function (_super) {\r\n    tslib_1.__extends(StackedBar, _super);\r\n    /**\r\n     * A StackedBar Plot stacks bars across Datasets based on the primary value of the bars.\r\n     *   On a vertical StackedBar Plot, the bars with the same X value are stacked.\r\n     *   On a horizontal StackedBar Plot, the bars with the same Y value are stacked.\r\n     *\r\n     * @constructor\r\n     * @param {Scale} xScale\r\n     * @param {Scale} yScale\r\n     * @param {string} [orientation=\"vertical\"] One of \"vertical\"/\"horizontal\".\r\n     */\r\n    function StackedBar(orientation) {\r\n        if (orientation === void 0) { orientation = \"vertical\"; }\r\n        var _this = _super.call(this, orientation) || this;\r\n        _this._extremaFormatter = formatters_1.identity();\r\n        _this._stackingResult = memoize_1.memThunk(function () { return _this.datasets(); }, function () { return _this.position().accessor; }, function () { return _this.length().accessor; }, function () { return _this._stackingOrder; }, function (datasets, positionAccessor, lengthAccessor, stackingOrder) {\r\n            return Utils.Stacking.stack(datasets, positionAccessor, lengthAccessor, stackingOrder);\r\n        });\r\n        _this._stackedExtent = memoize_1.memThunk(_this._stackingResult, function () { return _this.position().accessor; }, function () { return _this._filterForProperty(_this._isVertical ? \"y\" : \"x\"); }, function (stackingResult, positionAccessor, filter) {\r\n            return Utils.Stacking.stackedExtent(stackingResult, positionAccessor, filter);\r\n        });\r\n        _this.addClass(\"stacked-bar-plot\");\r\n        _this._stackingOrder = \"bottomup\";\r\n        return _this;\r\n    }\r\n    StackedBar.prototype.stackingOrder = function (stackingOrder) {\r\n        if (stackingOrder == null) {\r\n            return this._stackingOrder;\r\n        }\r\n        this._stackingOrder = stackingOrder;\r\n        this._onDatasetUpdate();\r\n        return this;\r\n    };\r\n    StackedBar.prototype.extremaFormatter = function (formatter) {\r\n        if (arguments.length === 0) {\r\n            return this._extremaFormatter;\r\n        }\r\n        else {\r\n            this._extremaFormatter = formatter;\r\n            this.render();\r\n            return this;\r\n        }\r\n    };\r\n    StackedBar.prototype._setup = function () {\r\n        _super.prototype._setup.call(this);\r\n        this._labelArea = this._renderArea.append(\"g\").classed(barPlot_1.Bar._LABEL_AREA_CLASS, true);\r\n        var context = new Typesettable.SvgContext(this._labelArea.node());\r\n        this._measurer = new Typesettable.CacheMeasurer(context);\r\n        this._writer = new Typesettable.Writer(this._measurer, context);\r\n    };\r\n    StackedBar.prototype._drawLabels = function () {\r\n        var _this = this;\r\n        _super.prototype._drawLabels.call(this);\r\n        // remove all current labels before redrawing\r\n        this._labelArea.selectAll(\"g\").remove();\r\n        var baselineValue = +this.baselineValue();\r\n        var positionScale = this.position().scale;\r\n        var lengthScale = this.length().scale;\r\n        var _a = Utils.Stacking.stackedExtents(this._stackingResult()), maximumExtents = _a.maximumExtents, minimumExtents = _a.minimumExtents;\r\n        var anyTooWide = [];\r\n        /**\r\n         * Try drawing the text at the center of the bounds. This method does not draw\r\n         * the text if the text would overflow outside of the plot.\r\n         *\r\n         * @param text\r\n         * @param bounds\r\n         * @returns {boolean}\r\n         */\r\n        var maybeDrawLabel = function (text, bounds, barThickness) {\r\n            var _a = bounds.topLeft, x = _a.x, y = _a.y;\r\n            var width = bounds.bottomRight.x - bounds.topLeft.x;\r\n            var height = bounds.bottomRight.y - bounds.topLeft.y;\r\n            var textTooLong = _this._isVertical\r\n                ? width > barThickness\r\n                : height > barThickness;\r\n            if (!textTooLong) {\r\n                var labelContainer = _this._labelArea.append(\"g\").attr(\"transform\", \"translate(\" + x + \", \" + y + \")\");\r\n                labelContainer.classed(\"stacked-bar-label\", true);\r\n                var writeOptions = {\r\n                    xAlign: \"center\",\r\n                    yAlign: \"center\",\r\n                };\r\n                _this._writer.write(text, width, height, writeOptions, labelContainer.node());\r\n            }\r\n            return textTooLong;\r\n        };\r\n        var drawLabelsForExtents = function (stacks, computeLabelTopLeft) {\r\n            var attrToProjector = _this._generateAttrToProjector();\r\n            var plotWidth = _this.width();\r\n            var plotHeight = _this.height();\r\n            stacks.forEach(function (stack) {\r\n                if (stack.extent !== baselineValue) {\r\n                    // only draw sums for values not at the baseline\r\n                    var text = _this.extremaFormatter()(stack.extent);\r\n                    var textDimensions = _this._measurer.measure(text);\r\n                    var stackedDatum = stack.stackedDatum;\r\n                    var originalDatum = stackedDatum.originalDatum, originalIndex = stackedDatum.originalIndex, originalDataset = stackedDatum.originalDataset;\r\n                    // only consider stack extents that are on the screen\r\n                    if (!_this._isDatumOnScreen(attrToProjector, plotWidth, plotHeight, originalDatum, originalIndex, originalDataset)) {\r\n                        return;\r\n                    }\r\n                    var barThickness = plot_1.Plot._scaledAccessor(_this.attr(barPlot_1.Bar._BAR_THICKNESS_KEY))(originalDatum, originalIndex, originalDataset);\r\n                    /*\r\n                     * The stackEdge is aligned at the edge of the stack in the length dimension,\r\n                     * and in the center of the stack in the thickness dimension.\r\n                     */\r\n                    var stackEdgeLength = lengthScale.scale(stack.extent);\r\n                    var stackCenterPosition = _this._getPositionAttr(positionScale.scale(stack.axisValue), barThickness) + barThickness / 2;\r\n                    var stackEdge = _this._isVertical\r\n                        ? {\r\n                            x: stackCenterPosition,\r\n                            y: stackEdgeLength,\r\n                        }\r\n                        : {\r\n                            x: stackEdgeLength,\r\n                            y: stackCenterPosition,\r\n                        };\r\n                    var topLeft = computeLabelTopLeft(stackEdge, textDimensions, barThickness);\r\n                    var isTooWide = maybeDrawLabel(text, {\r\n                        topLeft: topLeft,\r\n                        bottomRight: {\r\n                            x: topLeft.x + textDimensions.width,\r\n                            y: topLeft.y + textDimensions.height,\r\n                        },\r\n                    }, barThickness);\r\n                    anyTooWide.push(isTooWide);\r\n                }\r\n            });\r\n        };\r\n        drawLabelsForExtents(maximumExtents, function (stackEdge, measurement, thickness) {\r\n            var primaryTextMeasurement = _this._isVertical ? measurement.width : measurement.height;\r\n            var secondaryTextMeasurement = _this._isVertical ? measurement.height : measurement.width;\r\n            return {\r\n                x: _this._isVertical\r\n                    ? stackEdge.x - primaryTextMeasurement / 2\r\n                    : stackEdge.x + StackedBar._EXTREMA_LABEL_MARGIN_FROM_BAR,\r\n                y: _this._isVertical\r\n                    ? stackEdge.y - secondaryTextMeasurement\r\n                    : stackEdge.y - primaryTextMeasurement / 2,\r\n            };\r\n        });\r\n        drawLabelsForExtents(minimumExtents, function (stackEdge, measurement, thickness) {\r\n            var primaryTextMeasurement = _this._isVertical ? measurement.width : measurement.height;\r\n            var secondaryTextMeasurement = _this._isVertical ? measurement.height : measurement.width;\r\n            return {\r\n                x: _this._isVertical\r\n                    ? stackEdge.x - primaryTextMeasurement / 2\r\n                    : stackEdge.x - secondaryTextMeasurement,\r\n                y: _this._isVertical\r\n                    ? stackEdge.y + StackedBar._EXTREMA_LABEL_MARGIN_FROM_BAR\r\n                    : stackEdge.y - primaryTextMeasurement / 2,\r\n            };\r\n        });\r\n        if (anyTooWide.some(function (d) { return d; })) {\r\n            this._labelArea.selectAll(\"g\").remove();\r\n        }\r\n    };\r\n    StackedBar.prototype._generateAttrToProjector = function () {\r\n        var _this = this;\r\n        var attrToProjector = _super.prototype._generateAttrToProjector.call(this);\r\n        var valueAttr = this._isVertical ? \"y\" : \"x\";\r\n        var lengthScale = this.length().scale;\r\n        var lengthAccessor = this.length().accessor;\r\n        var positionAccessor = this.position().accessor;\r\n        var normalizedPositionAccessor = function (datum, index, dataset) {\r\n            return Utils.Stacking.normalizeKey(positionAccessor(datum, index, dataset));\r\n        };\r\n        var stackingResult = this._stackingResult();\r\n        var getStart = function (d, i, dataset) {\r\n            return lengthScale.scale(stackingResult.get(dataset).get(normalizedPositionAccessor(d, i, dataset)).offset);\r\n        };\r\n        var getEnd = function (d, i, dataset) {\r\n            return lengthScale.scale(+lengthAccessor(d, i, dataset) +\r\n                stackingResult.get(dataset).get(normalizedPositionAccessor(d, i, dataset)).offset);\r\n        };\r\n        var heightF = function (d, i, dataset) {\r\n            return Math.abs(getEnd(d, i, dataset) - getStart(d, i, dataset));\r\n        };\r\n        attrToProjector[this._isVertical ? \"height\" : \"width\"] = heightF;\r\n        var attrFunction = function (d, i, dataset) {\r\n            return +lengthAccessor(d, i, dataset) < 0 ? getStart(d, i, dataset) : getEnd(d, i, dataset);\r\n        };\r\n        attrToProjector[valueAttr] = function (d, i, dataset) {\r\n            return _this._isVertical ? attrFunction(d, i, dataset) : attrFunction(d, i, dataset) - heightF(d, i, dataset);\r\n        };\r\n        return attrToProjector;\r\n    };\r\n    StackedBar.prototype.getExtentsForProperty = function (attr) {\r\n        var primaryAttr = this._isVertical ? \"y\" : \"x\";\r\n        if (attr === primaryAttr) {\r\n            return [this._stackedExtent()];\r\n        }\r\n        else {\r\n            return _super.prototype.getExtentsForProperty.call(this, attr);\r\n        }\r\n    };\r\n    StackedBar.prototype.invalidateCache = function () {\r\n        _super.prototype.invalidateCache.call(this);\r\n        this._measurer.reset();\r\n    };\r\n    StackedBar._EXTREMA_LABEL_MARGIN_FROM_BAR = 5;\r\n    return StackedBar;\r\n}(barPlot_1.Bar));\r\nexports.StackedBar = StackedBar;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/plots/stackedBarPlot.ts\n// module id = 105\n// module chunks = 0","\"use strict\";\r\n/**\r\n * Copyright 2014-present Palantir Technologies\r\n * @license MIT\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\nvar Utils = require(\"../utils\");\r\nvar barPlot_1 = require(\"./barPlot\");\r\nvar plot_1 = require(\"./plot\");\r\nvar Waterfall = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Waterfall, _super);\r\n    function Waterfall() {\r\n        var _this = _super.call(this) || this;\r\n        _this._connectorsEnabled = false;\r\n        _this.addClass(\"waterfall-plot\");\r\n        return _this;\r\n    }\r\n    Waterfall.prototype.connectorsEnabled = function (enabled) {\r\n        if (enabled == null) {\r\n            return this._connectorsEnabled;\r\n        }\r\n        this._connectorsEnabled = enabled;\r\n        return this;\r\n    };\r\n    Waterfall.prototype.total = function (total) {\r\n        if (total == null) {\r\n            return this._propertyBindings.get(Waterfall._TOTAL_KEY);\r\n        }\r\n        this._bindProperty(Waterfall._TOTAL_KEY, total, null);\r\n        return this;\r\n    };\r\n    Waterfall.prototype._additionalPaint = function (time) {\r\n        var _this = this;\r\n        this._connectorArea.selectAll(\"line\").remove();\r\n        if (this._connectorsEnabled) {\r\n            Utils.Window.setTimeout(function () { return _this._drawConnectors(); }, time);\r\n        }\r\n    };\r\n    Waterfall.prototype._createNodesForDataset = function (dataset) {\r\n        var drawer = _super.prototype._createNodesForDataset.call(this, dataset);\r\n        this._connectorArea = this._renderArea.append(\"g\").classed(Waterfall._CONNECTOR_AREA_CLASS, true);\r\n        return drawer;\r\n    };\r\n    Waterfall.prototype.getExtentsForProperty = function (attr) {\r\n        var primaryAttr = \"y\";\r\n        if (attr === primaryAttr) {\r\n            return [this._extent];\r\n        }\r\n        else {\r\n            return _super.prototype.getExtentsForProperty.call(this, attr);\r\n        }\r\n    };\r\n    Waterfall.prototype._generateAttrToProjector = function () {\r\n        var _this = this;\r\n        var attrToProjector = _super.prototype._generateAttrToProjector.call(this);\r\n        var yScale = this.y().scale;\r\n        var totalAccessor = plot_1.Plot._scaledAccessor(this.total());\r\n        var yAttr = this.attr(\"y\");\r\n        if (yAttr == null) {\r\n            attrToProjector[\"y\"] = function (d, i, dataset) {\r\n                var currentValue = _this.y().accessor(d, i, dataset);\r\n                var isTotal = totalAccessor(d, i, dataset);\r\n                if (isTotal) {\r\n                    return Math.min(yScale.scale(currentValue), yScale.scale(0));\r\n                }\r\n                else {\r\n                    var currentSubtotal = _this._subtotals[i];\r\n                    if (i === 0) {\r\n                        if (currentValue < 0) {\r\n                            return yScale.scale(currentSubtotal - currentValue);\r\n                        }\r\n                        else {\r\n                            return yScale.scale(currentSubtotal);\r\n                        }\r\n                    }\r\n                    var priorSubtotal = _this._subtotals[i - 1];\r\n                    if (currentSubtotal > priorSubtotal) {\r\n                        return yScale.scale(currentSubtotal);\r\n                    }\r\n                    else {\r\n                        return yScale.scale(priorSubtotal);\r\n                    }\r\n                }\r\n            };\r\n        }\r\n        var heightAttr = this.attr(\"height\");\r\n        if (heightAttr == null) {\r\n            attrToProjector[\"height\"] = function (d, i, dataset) {\r\n                var isTotal = totalAccessor(d, i, dataset);\r\n                var currentValue = _this.y().accessor(d, i, dataset);\r\n                if (isTotal) {\r\n                    return Math.abs(yScale.scale(currentValue) - yScale.scale(0));\r\n                }\r\n                else {\r\n                    var currentSubtotal = _this._subtotals[i];\r\n                    if (i === 0) {\r\n                        return Math.abs(yScale.scale(currentSubtotal) - yScale.scale(currentSubtotal - currentValue));\r\n                    }\r\n                    else {\r\n                        var priorSubtotal = _this._subtotals[i - 1];\r\n                        return Math.abs(yScale.scale(currentSubtotal) - yScale.scale(priorSubtotal));\r\n                    }\r\n                }\r\n            };\r\n        }\r\n        attrToProjector[\"class\"] = function (d, i, dataset) {\r\n            var baseClass = \"\";\r\n            if (_this.attr(\"class\") != null) {\r\n                baseClass = _this.attr(\"class\").accessor(d, i, dataset) + \" \";\r\n            }\r\n            var isTotal = totalAccessor(d, i, dataset);\r\n            if (isTotal) {\r\n                return baseClass + Waterfall._BAR_TOTAL_CLASS;\r\n            }\r\n            else {\r\n                var delta = _this.y().accessor(d, i, dataset);\r\n                return baseClass + (delta > 0 ? Waterfall._BAR_GROWTH_CLASS : Waterfall._BAR_DECLINE_CLASS);\r\n            }\r\n        };\r\n        return attrToProjector;\r\n    };\r\n    Waterfall.prototype._onDatasetUpdate = function () {\r\n        this._updateSubtotals();\r\n        _super.prototype._onDatasetUpdate.call(this);\r\n        return this;\r\n    };\r\n    Waterfall.prototype._calculateSubtotalsAndExtent = function (dataset) {\r\n        var min = Number.MAX_VALUE;\r\n        var max = Number.MIN_VALUE;\r\n        var total = 0;\r\n        var hasStarted = false;\r\n        var data = dataset.data();\r\n        var dataLen = data.length;\r\n        for (var index = 0; index < dataLen; index++) {\r\n            var datum = data[index];\r\n            var currentValue = this.y().accessor(datum, index, dataset);\r\n            var isTotal = this.total().accessor(datum, index, dataset);\r\n            if (!isTotal || index === 0) {\r\n                total += currentValue;\r\n            }\r\n            this._subtotals.push(total);\r\n            if (total < min) {\r\n                min = total;\r\n            }\r\n            if (total > max) {\r\n                max = total;\r\n            }\r\n            if (isTotal) {\r\n                if (currentValue < min) {\r\n                    min = currentValue;\r\n                }\r\n                if (currentValue > max) {\r\n                    max = currentValue;\r\n                }\r\n            }\r\n            if (!hasStarted && isTotal) {\r\n                var startTotal = currentValue - total;\r\n                for (var i = 0; i < this._subtotals.length; i++) {\r\n                    this._subtotals[i] += startTotal;\r\n                }\r\n                hasStarted = true;\r\n                total += startTotal;\r\n                min += startTotal;\r\n                max += startTotal;\r\n            }\r\n        }\r\n        this._extent = [min, max];\r\n    };\r\n    Waterfall.prototype._drawConnectors = function () {\r\n        var attrToProjector = this._getAttrToProjector();\r\n        var dataset = this.datasets()[0];\r\n        for (var datumIndex = 1; datumIndex < dataset.data().length; datumIndex++) {\r\n            var prevIndex = datumIndex - 1;\r\n            var datum = dataset.data()[datumIndex];\r\n            var prevDatum = dataset.data()[prevIndex];\r\n            var x = attrToProjector[\"x\"](prevDatum, prevIndex, dataset);\r\n            var x2 = attrToProjector[\"x\"](datum, datumIndex, dataset) + attrToProjector[\"width\"](datum, datumIndex, dataset);\r\n            var y = attrToProjector[\"y\"](datum, datumIndex, dataset);\r\n            if ((this._subtotals[datumIndex] > 0 && this._subtotals[datumIndex] > this._subtotals[prevIndex]) ||\r\n                (this._subtotals[datumIndex] < 0 && this._subtotals[datumIndex] >= this._subtotals[prevIndex])) {\r\n                y = attrToProjector[\"y\"](datum, datumIndex, dataset) + attrToProjector[\"height\"](datum, datumIndex, dataset);\r\n            }\r\n            this._connectorArea.append(\"line\").classed(Waterfall._CONNECTOR_CLASS, true)\r\n                .attr(\"x1\", x).attr(\"x2\", x2).attr(\"y1\", y).attr(\"y2\", y);\r\n        }\r\n    };\r\n    Waterfall.prototype._updateSubtotals = function () {\r\n        var datasets = this.datasets();\r\n        if (datasets.length > 0) {\r\n            var dataset = datasets[datasets.length - 1];\r\n            this._subtotals = new Array();\r\n            this._calculateSubtotalsAndExtent(dataset);\r\n        }\r\n    };\r\n    Waterfall._BAR_DECLINE_CLASS = \"waterfall-decline\";\r\n    Waterfall._BAR_GROWTH_CLASS = \"waterfall-growth\";\r\n    Waterfall._BAR_TOTAL_CLASS = \"waterfall-total\";\r\n    Waterfall._CONNECTOR_CLASS = \"connector\";\r\n    Waterfall._CONNECTOR_AREA_CLASS = \"connector-area\";\r\n    Waterfall._TOTAL_KEY = \"total\";\r\n    return Waterfall;\r\n}(barPlot_1.Bar));\r\nexports.Waterfall = Waterfall;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/plots/waterfallPlot.ts\n// module id = 106\n// module chunks = 0","\"use strict\";\r\n/**\r\n * Copyright 2014-present Palantir Technologies\r\n * @license MIT\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\nvar d3 = require(\"d3\");\r\nvar Utils = require(\"../utils\");\r\nvar scale_1 = require(\"./scale\");\r\n/**\r\n * Workaround for bad d3 behavior.\r\n *\r\n * d3's color scales, which are oridinal scales, have side-effects when invoked.\r\n * When you call the `scale(value)` as a function, it will implicitly add new\r\n * values to the domain.\r\n *\r\n * These side-effects cause us to rely on looking up the current scale state\r\n * with the `.domain()` and `.range()` methods. However, these methods have poor\r\n * performance implications since they will always slice their internal values\r\n * before returning. Inside the inner render loop of color scatter plot points,\r\n * these slices add up.\r\n */\r\nvar ImplicitSeriesTracker = /** @class */ (function () {\r\n    function ImplicitSeriesTracker() {\r\n        this.count = 0;\r\n        this.tracker = {};\r\n    }\r\n    ImplicitSeriesTracker.prototype.getIndex = function (value) {\r\n        if (this.tracker[value] != null) {\r\n            return this.tracker[value];\r\n        }\r\n        else {\r\n            var idx = this.count;\r\n            this.tracker[value] = idx;\r\n            this.count += 1;\r\n            return idx;\r\n        }\r\n    };\r\n    ImplicitSeriesTracker.prototype.clear = function () {\r\n        this.count = 0;\r\n        this.tracker = {};\r\n    };\r\n    return ImplicitSeriesTracker;\r\n}());\r\nvar Color = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Color, _super);\r\n    /**\r\n     * A Color Scale maps string values to color hex values expressed as a string.\r\n     *\r\n     * @constructor\r\n     * @param {string} [scaleType] One of \"Category10\"/\"Category20\"/\"Category20b\"/\"Category20c\".\r\n     *   (see https://github.com/mbostock/d3/wiki/Ordinal-Scales#categorical-colors)\r\n     *   If not supplied, reads the colors defined using CSS -- see plottable.css.\r\n     */\r\n    function Color(scaleType) {\r\n        var _this = _super.call(this) || this;\r\n        // Cache the number of range value to avoid calling `scale.range().length`\r\n        _this._rangeLength = 1;\r\n        _this._tracker = new ImplicitSeriesTracker();\r\n        var scale;\r\n        switch (scaleType) {\r\n            case null:\r\n            case undefined:\r\n                if (Color._plottableColorCache == null) {\r\n                    Color._plottableColorCache = Color._getPlottableColors();\r\n                }\r\n                scale = d3.scaleOrdinal().range(Color._plottableColorCache);\r\n                break;\r\n            case \"Category10\":\r\n            case \"category10\":\r\n            case \"10\":\r\n                scale = d3.scaleOrdinal(d3.schemeCategory10);\r\n                break;\r\n            case \"Category20\":\r\n            case \"category20\":\r\n            case \"20\":\r\n                scale = d3.scaleOrdinal(d3.schemeCategory20);\r\n                break;\r\n            case \"Category20b\":\r\n            case \"category20b\":\r\n            case \"20b\":\r\n                scale = d3.scaleOrdinal(d3.schemeCategory20b);\r\n                break;\r\n            case \"Category20c\":\r\n            case \"category20c\":\r\n            case \"20c\":\r\n                scale = d3.scaleOrdinal(d3.schemeCategory20c);\r\n                break;\r\n            default:\r\n                throw new Error(\"Unsupported ColorScale type\");\r\n        }\r\n        _this._d3Scale = scale;\r\n        _this._rangeLength = _this._d3Scale.range().length;\r\n        return _this;\r\n    }\r\n    Color.prototype.extentOfValues = function (values) {\r\n        return Utils.Array.uniq(values);\r\n    };\r\n    // Duplicated from OrdinalScale._getExtent - should be removed in #388\r\n    Color.prototype._getExtent = function () {\r\n        return Utils.Array.uniq(this._getAllIncludedValues());\r\n    };\r\n    Color.invalidateColorCache = function () {\r\n        Color._plottableColorCache = null;\r\n    };\r\n    Color._getPlottableColors = function () {\r\n        var plottableDefaultColors = [];\r\n        var colorTester = d3.select(\"body\").append(\"plottable-color-tester\");\r\n        var defaultColorHex = Utils.Color.colorTest(colorTester, \"\");\r\n        var i = 0;\r\n        var colorHex = Utils.Color.colorTest(colorTester, \"plottable-colors-0\");\r\n        while (colorHex != null && i < this._MAXIMUM_COLORS_FROM_CSS) {\r\n            if (colorHex === defaultColorHex && colorHex === plottableDefaultColors[plottableDefaultColors.length - 1]) {\r\n                break;\r\n            }\r\n            plottableDefaultColors.push(colorHex);\r\n            i++;\r\n            colorHex = Utils.Color.colorTest(colorTester, \"plottable-colors-\" + i);\r\n        }\r\n        colorTester.remove();\r\n        return plottableDefaultColors;\r\n    };\r\n    /**\r\n     * Returns the color-string corresponding to a given string.\r\n     *\r\n     * If there are not enough colors in the range(), a lightened version of an\r\n     * existing color will be used.\r\n     *\r\n     * @param {string} value\r\n     * @returns {string}\r\n     */\r\n    Color.prototype.scale = function (value) {\r\n        var color = this._d3Scale(value);\r\n        var index = this._tracker.getIndex(value);\r\n        var numLooped = Math.floor(index / this._rangeLength);\r\n        if (numLooped === 0) {\r\n            return color;\r\n        }\r\n        var modifyFactor = Math.log(numLooped * Color._LOOP_LIGHTEN_FACTOR + 1);\r\n        return Utils.Color.lightenColor(color, modifyFactor);\r\n    };\r\n    Color.prototype._getDomain = function () {\r\n        return this._backingScaleDomain();\r\n    };\r\n    Color.prototype._backingScaleDomain = function (values) {\r\n        if (values == null) {\r\n            return this._d3Scale.domain();\r\n        }\r\n        else {\r\n            this._d3Scale.domain(values);\r\n            this._tracker.clear();\r\n            return this;\r\n        }\r\n    };\r\n    Color.prototype._getRange = function () {\r\n        return this._d3Scale.range();\r\n    };\r\n    Color.prototype._setRange = function (values) {\r\n        this._d3Scale.range(values);\r\n        this._rangeLength = values.length;\r\n    };\r\n    Color._LOOP_LIGHTEN_FACTOR = 1.6;\r\n    // The maximum number of colors we are getting from CSS stylesheets\r\n    Color._MAXIMUM_COLORS_FROM_CSS = 256;\r\n    return Color;\r\n}(scale_1.Scale));\r\nexports.Color = Color;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/scales/colorScale.ts\n// module id = 107\n// module chunks = 0","\"use strict\";\r\n/**\r\n * Copyright 2014-present Palantir Technologies\r\n * @license MIT\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\nvar d3 = require(\"d3\");\r\nvar Utils = require(\"../utils\");\r\nvar scale_1 = require(\"./scale\");\r\nvar InterpolatedColor = /** @class */ (function (_super) {\r\n    tslib_1.__extends(InterpolatedColor, _super);\r\n    /**\r\n     * An InterpolatedColor Scale maps numbers to color hex values, expressed as strings.\r\n     *\r\n     * @param {string} [scaleType=\"linear\"] One of \"linear\"/\"log\"/\"sqrt\"/\"pow\".\r\n     */\r\n    function InterpolatedColor(scaleType) {\r\n        if (scaleType === void 0) { scaleType = \"linear\"; }\r\n        var _this = _super.call(this) || this;\r\n        switch (scaleType) {\r\n            case \"linear\":\r\n                _this._colorScale = d3.scaleLinear();\r\n                break;\r\n            case \"log\":\r\n                _this._colorScale = d3.scaleLog();\r\n                break;\r\n            case \"sqrt\":\r\n                _this._colorScale = d3.scaleSqrt();\r\n                break;\r\n            case \"pow\":\r\n                _this._colorScale = d3.scalePow();\r\n                break;\r\n        }\r\n        if (_this._colorScale == null) {\r\n            throw new Error(\"unknown QuantitativeScale scale type \" + scaleType);\r\n        }\r\n        _this.range(InterpolatedColor.REDS);\r\n        return _this;\r\n    }\r\n    InterpolatedColor.prototype.extentOfValues = function (values) {\r\n        var extent = d3.extent(values);\r\n        if (extent[0] == null || extent[1] == null) {\r\n            return [];\r\n        }\r\n        else {\r\n            return extent;\r\n        }\r\n    };\r\n    /**\r\n     * Generates the converted QuantitativeScale.\r\n     */\r\n    InterpolatedColor.prototype._d3InterpolatedScale = function () {\r\n        return this._colorScale.range([0, 1]).interpolate(this._interpolateColors());\r\n    };\r\n    /**\r\n     * Generates the d3 interpolator for colors.\r\n     */\r\n    InterpolatedColor.prototype._interpolateColors = function () {\r\n        var colors = this._colorRange;\r\n        if (colors.length < 2) {\r\n            throw new Error(\"Color scale arrays must have at least two elements.\");\r\n        }\r\n        ;\r\n        return function (a, b) {\r\n            return function (t) {\r\n                // Clamp t parameter to [0,1]\r\n                t = Math.max(0, Math.min(1, t));\r\n                // Determine indices for colors\r\n                var tScaled = t * (colors.length - 1);\r\n                var i0 = Math.floor(tScaled);\r\n                var i1 = Math.ceil(tScaled);\r\n                var frac = (tScaled - i0);\r\n                // Interpolate in the L*a*b color space\r\n                return d3.interpolateLab(colors[i0], colors[i1])(frac);\r\n            };\r\n        };\r\n    };\r\n    InterpolatedColor.prototype._resetScale = function () {\r\n        this._d3Scale = this._d3InterpolatedScale();\r\n        this.autoDomainIfAutomaticMode();\r\n        this._dispatchUpdate();\r\n    };\r\n    InterpolatedColor.prototype.autoDomain = function () {\r\n        // InterpolatedColorScales do not pad\r\n        var includedValues = this._getAllIncludedValues();\r\n        if (includedValues.length > 0) {\r\n            this._setDomain([Utils.Math.min(includedValues, 0), Utils.Math.max(includedValues, 0)]);\r\n        }\r\n        return this;\r\n    };\r\n    InterpolatedColor.prototype.scale = function (value) {\r\n        return this._d3Scale(value);\r\n    };\r\n    InterpolatedColor.prototype._getDomain = function () {\r\n        return this._backingScaleDomain();\r\n    };\r\n    InterpolatedColor.prototype._backingScaleDomain = function (values) {\r\n        if (values == null) {\r\n            return this._d3Scale.domain();\r\n        }\r\n        else {\r\n            this._d3Scale.domain(values);\r\n            return this;\r\n        }\r\n    };\r\n    InterpolatedColor.prototype._getRange = function () {\r\n        return this._colorRange;\r\n    };\r\n    InterpolatedColor.prototype._setRange = function (range) {\r\n        this._colorRange = range;\r\n        this._resetScale();\r\n    };\r\n    InterpolatedColor.REDS = [\r\n        \"#FFFFFF\",\r\n        \"#FFF6E1\",\r\n        \"#FEF4C0\",\r\n        \"#FED976\",\r\n        \"#FEB24C\",\r\n        \"#FD8D3C\",\r\n        \"#FC4E2A\",\r\n        \"#E31A1C\",\r\n        \"#B10026\",\r\n    ];\r\n    InterpolatedColor.BLUES = [\r\n        \"#FFFFFF\",\r\n        \"#CCFFFF\",\r\n        \"#A5FFFD\",\r\n        \"#85F7FB\",\r\n        \"#6ED3EF\",\r\n        \"#55A7E0\",\r\n        \"#417FD0\",\r\n        \"#2545D3\",\r\n        \"#0B02E1\",\r\n    ];\r\n    InterpolatedColor.POSNEG = [\r\n        \"#0B02E1\",\r\n        \"#2545D3\",\r\n        \"#417FD0\",\r\n        \"#55A7E0\",\r\n        \"#6ED3EF\",\r\n        \"#85F7FB\",\r\n        \"#A5FFFD\",\r\n        \"#CCFFFF\",\r\n        \"#FFFFFF\",\r\n        \"#FFF6E1\",\r\n        \"#FEF4C0\",\r\n        \"#FED976\",\r\n        \"#FEB24C\",\r\n        \"#FD8D3C\",\r\n        \"#FC4E2A\",\r\n        \"#E31A1C\",\r\n        \"#B10026\",\r\n    ];\r\n    return InterpolatedColor;\r\n}(scale_1.Scale));\r\nexports.InterpolatedColor = InterpolatedColor;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/scales/interpolatedColorScale.ts\n// module id = 108\n// module chunks = 0","\"use strict\";\r\n/**\r\n * Copyright 2014-present Palantir Technologies\r\n * @license MIT\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\nvar d3 = require(\"d3\");\r\nvar quantitativeScale_1 = require(\"./quantitativeScale\");\r\nvar Linear = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Linear, _super);\r\n    /**\r\n     * @constructor\r\n     */\r\n    function Linear() {\r\n        var _this = _super.call(this) || this;\r\n        _this._d3Scale = d3.scaleLinear();\r\n        return _this;\r\n    }\r\n    Linear.prototype._defaultExtent = function () {\r\n        return [0, 1];\r\n    };\r\n    Linear.prototype._expandSingleValueDomain = function (singleValueDomain) {\r\n        if (singleValueDomain[0] === singleValueDomain[1]) {\r\n            return [singleValueDomain[0] - 1, singleValueDomain[1] + 1];\r\n        }\r\n        return singleValueDomain;\r\n    };\r\n    Linear.prototype.scale = function (value) {\r\n        return this._d3Scale(value);\r\n    };\r\n    Linear.prototype.scaleTransformation = function (value) {\r\n        return this.scale(value);\r\n    };\r\n    Linear.prototype.invertedTransformation = function (value) {\r\n        return this.invert(value);\r\n    };\r\n    Linear.prototype.getTransformationExtent = function () {\r\n        return this._getUnboundedExtent(true);\r\n    };\r\n    Linear.prototype.getTransformationDomain = function () {\r\n        return this.domain();\r\n    };\r\n    Linear.prototype.setTransformationDomain = function (domain) {\r\n        this.domain(domain);\r\n    };\r\n    Linear.prototype._getDomain = function () {\r\n        return this._backingScaleDomain();\r\n    };\r\n    Linear.prototype._backingScaleDomain = function (values) {\r\n        if (values == null) {\r\n            return this._d3Scale.domain();\r\n        }\r\n        else {\r\n            this._d3Scale.domain(values);\r\n            return this;\r\n        }\r\n    };\r\n    Linear.prototype._getRange = function () {\r\n        return this._d3Scale.range();\r\n    };\r\n    Linear.prototype._setRange = function (values) {\r\n        this._d3Scale.range(values);\r\n    };\r\n    Linear.prototype.invert = function (value) {\r\n        return this._d3Scale.invert(value);\r\n    };\r\n    Linear.prototype.defaultTicks = function () {\r\n        return this._d3Scale.ticks(Linear._DEFAULT_NUM_TICKS);\r\n    };\r\n    Linear.prototype._niceDomain = function (domain, count) {\r\n        return this._d3Scale.copy().domain(domain).nice(count).domain();\r\n    };\r\n    return Linear;\r\n}(quantitativeScale_1.QuantitativeScale));\r\nexports.Linear = Linear;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/scales/linearScale.ts\n// module id = 109\n// module chunks = 0","\"use strict\";\r\n/**\r\n * Copyright 2014-present Palantir Technologies\r\n * @license MIT\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\nvar d3 = require(\"d3\");\r\nvar quantitativeScale_1 = require(\"./quantitativeScale\");\r\nvar Log = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Log, _super);\r\n    /**\r\n     * @constructor\r\n     */\r\n    function Log(base) {\r\n        if (base === void 0) { base = 10; }\r\n        var _this = _super.call(this) || this;\r\n        _this._d3Scale = d3.scaleLog().base(base);\r\n        _this._setDomain(_this._defaultExtent());\r\n        return _this;\r\n    }\r\n    Log.prototype._defaultExtent = function () {\r\n        return [1, this._d3Scale.base()];\r\n    };\r\n    Log.prototype._expandSingleValueDomain = function (singleValueDomain) {\r\n        if (singleValueDomain[0] === singleValueDomain[1]) {\r\n            return [singleValueDomain[0] / this._d3Scale.base(),\r\n                singleValueDomain[1] * this._d3Scale.base()];\r\n        }\r\n        return singleValueDomain;\r\n    };\r\n    Log.prototype.scale = function (value) {\r\n        return this._d3Scale(value);\r\n    };\r\n    Log.prototype.scaleTransformation = function (value) {\r\n        return this.scale(value);\r\n    };\r\n    Log.prototype.invertedTransformation = function (value) {\r\n        return this.invert(value);\r\n    };\r\n    Log.prototype.getTransformationExtent = function () {\r\n        return this._getUnboundedExtent(true);\r\n    };\r\n    Log.prototype.getTransformationDomain = function () {\r\n        return this.domain();\r\n    };\r\n    Log.prototype.setTransformationDomain = function (domain) {\r\n        this.domain(domain);\r\n    };\r\n    Log.prototype._getDomain = function () {\r\n        return this._backingScaleDomain();\r\n    };\r\n    Log.prototype._backingScaleDomain = function (values) {\r\n        if (values == null) {\r\n            return this._d3Scale.domain();\r\n        }\r\n        else {\r\n            this._d3Scale.domain(values);\r\n            return this;\r\n        }\r\n    };\r\n    Log.prototype._getRange = function () {\r\n        return this._d3Scale.range();\r\n    };\r\n    Log.prototype._setRange = function (values) {\r\n        this._d3Scale.range(values);\r\n    };\r\n    Log.prototype.invert = function (value) {\r\n        return this._d3Scale.invert(value);\r\n    };\r\n    Log.prototype.defaultTicks = function () {\r\n        return this._d3Scale.ticks(Log._DEFAULT_NUM_TICKS);\r\n    };\r\n    Log.prototype._niceDomain = function (domain, count) {\r\n        return this._d3Scale.copy().domain(domain).nice().domain();\r\n    };\r\n    return Log;\r\n}(quantitativeScale_1.QuantitativeScale));\r\nexports.Log = Log;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/scales/logScale.ts\n// module id = 110\n// module chunks = 0","\"use strict\";\r\n/**\r\n * Copyright 2014-present Palantir Technologies\r\n * @license MIT\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\nvar d3 = require(\"d3\");\r\nvar Utils = require(\"../utils\");\r\nvar Scales = require(\"./\");\r\nvar quantitativeScale_1 = require(\"./quantitativeScale\");\r\nvar ModifiedLog = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ModifiedLog, _super);\r\n    /**\r\n     * A ModifiedLog Scale acts as a regular log scale for large numbers.\r\n     * As it approaches 0, it gradually becomes linear.\r\n     * Consequently, a ModifiedLog Scale can process 0 and negative numbers.\r\n     *\r\n     * For x >= base, scale(x) = log(x).\r\n     *\r\n     * For 0 < x < base, scale(x) will become more and more\r\n     * linear as it approaches 0.\r\n     *\r\n     * At x == 0, scale(x) == 0.\r\n     *\r\n     * For negative values, scale(-x) = -scale(x).\r\n     *\r\n     * The range and domain for the scale should also be set, using the\r\n     * range() and domain() accessors, respectively.\r\n     *\r\n     * For `range`, provide a two-element array giving the minimum and\r\n     * maximum of values produced when scaling.\r\n     *\r\n     * For `domain` provide a two-element array giving the minimum and\r\n     * maximum of the values that will be scaled.\r\n     *\r\n     * @constructor\r\n     * @param {number} [base=10]\r\n     *        The base of the log. Must be > 1.\r\n     *\r\n     */\r\n    function ModifiedLog(base) {\r\n        if (base === void 0) { base = 10; }\r\n        var _this = _super.call(this) || this;\r\n        _this._logTickGenerator = function (scale) {\r\n            // Say your domain is [-100, 100] and your pivot is 10.\r\n            // then we're going to draw negative log ticks from -100 to -10,\r\n            // linear ticks from -10 to 10, and positive log ticks from 10 to 100.\r\n            var middle = function (x, y, z) { return [x, y, z].sort(function (a, b) { return a - b; })[1]; };\r\n            var min = Utils.Math.min(_this._untransformedDomain, 0);\r\n            var max = Utils.Math.max(_this._untransformedDomain, 0);\r\n            var negativeLower = min;\r\n            var negativeUpper = middle(min, max, -_this._pivot);\r\n            var positiveLower = middle(min, max, _this._pivot);\r\n            var positiveUpper = max;\r\n            var negativeLogTicks = _this._logTicks(-negativeUpper, -negativeLower).map(function (x) { return -x; }).reverse();\r\n            var positiveLogTicks = _this._logTicks(positiveLower, positiveUpper);\r\n            var linearMin = Math.max(min, -_this._pivot);\r\n            var linearMax = Math.min(max, _this._pivot);\r\n            var linearTicks = d3.scaleLinear().domain([linearMin, linearMax]).ticks(_this._howManyTicks(linearMin, linearMax));\r\n            var ticks = negativeLogTicks.concat(linearTicks).concat(positiveLogTicks);\r\n            // If you only have 1 tick, you can't tell how big the scale is.\r\n            if (ticks.length <= 1) {\r\n                ticks = d3.scaleLinear().domain([min, max]).ticks(Scales.ModifiedLog._DEFAULT_NUM_TICKS);\r\n            }\r\n            return ticks;\r\n        };\r\n        _this._d3Scale = d3.scaleLinear();\r\n        _this._base = base;\r\n        _this._pivot = _this._base;\r\n        _this._setDomain(_this._defaultExtent());\r\n        _this.tickGenerator(_this._logTickGenerator);\r\n        if (base <= 1) {\r\n            throw new Error(\"ModifiedLogScale: The base must be > 1\");\r\n        }\r\n        return _this;\r\n    }\r\n    /**\r\n     * Returns an adjusted log10 value for graphing purposes.  The first\r\n     * adjustment is that negative values are changed to positive during\r\n     * the calculations, and then the answer is negated at the end.  The\r\n     * second is that, for values less than 10, an increasingly large\r\n     * (0 to 1) scaling factor is added such that at 0 the value is\r\n     * adjusted to 1, resulting in a returned result of 0.\r\n     */\r\n    ModifiedLog.prototype._adjustedLog = function (x) {\r\n        var negationFactor = x < 0 ? -1 : 1;\r\n        x *= negationFactor;\r\n        if (x < this._pivot) {\r\n            x += (this._pivot - x) / this._pivot;\r\n        }\r\n        x = Math.log(x) / Math.log(this._base);\r\n        x *= negationFactor;\r\n        return x;\r\n    };\r\n    ModifiedLog.prototype._invertedAdjustedLog = function (x) {\r\n        var negationFactor = x < 0 ? -1 : 1;\r\n        x *= negationFactor;\r\n        x = Math.pow(this._base, x);\r\n        if (x < this._pivot) {\r\n            x = (this._pivot * (x - 1)) / (this._pivot - 1);\r\n        }\r\n        x *= negationFactor;\r\n        return x;\r\n    };\r\n    ModifiedLog.prototype.scale = function (x) {\r\n        return this._d3Scale(this._adjustedLog(x));\r\n    };\r\n    ModifiedLog.prototype.invert = function (x) {\r\n        return this._invertedAdjustedLog(this._d3Scale.invert(x));\r\n    };\r\n    ModifiedLog.prototype.scaleTransformation = function (value) {\r\n        return this.scale(value);\r\n    };\r\n    ModifiedLog.prototype.invertedTransformation = function (value) {\r\n        return this.invert(value);\r\n    };\r\n    ModifiedLog.prototype.getTransformationExtent = function () {\r\n        return this._getUnboundedExtent(true);\r\n    };\r\n    ModifiedLog.prototype.getTransformationDomain = function () {\r\n        return this.domain();\r\n    };\r\n    ModifiedLog.prototype.setTransformationDomain = function (domain) {\r\n        this.domain(domain);\r\n    };\r\n    ModifiedLog.prototype._getDomain = function () {\r\n        return this._untransformedDomain;\r\n    };\r\n    ModifiedLog.prototype._setDomain = function (values) {\r\n        this._untransformedDomain = values;\r\n        var transformedDomain = [this._adjustedLog(values[0]), this._adjustedLog(values[1])];\r\n        _super.prototype._setDomain.call(this, transformedDomain);\r\n    };\r\n    ModifiedLog.prototype._backingScaleDomain = function (values) {\r\n        if (values == null) {\r\n            return this._d3Scale.domain();\r\n        }\r\n        else {\r\n            this._d3Scale.domain(values);\r\n            return this;\r\n        }\r\n    };\r\n    /**\r\n     * Return an appropriate number of ticks from lower to upper.\r\n     *\r\n     * This will first try to fit as many powers of this.base as it can from\r\n     * lower to upper.\r\n     *\r\n     * If it still has ticks after that, it will generate ticks in \"clusters\",\r\n     * e.g. [20, 30, ... 90, 100] would be a cluster, [200, 300, ... 900, 1000]\r\n     * would be another cluster.\r\n     *\r\n     * This function will generate clusters as large as it can while not\r\n     * drastically exceeding its number of ticks.\r\n     */\r\n    ModifiedLog.prototype._logTicks = function (lower, upper) {\r\n        var _this = this;\r\n        var nTicks = this._howManyTicks(lower, upper);\r\n        if (nTicks === 0) {\r\n            return [];\r\n        }\r\n        var startLogged = Math.floor(Math.log(lower) / Math.log(this._base));\r\n        var endLogged = Math.ceil(Math.log(upper) / Math.log(this._base));\r\n        var bases = d3.range(endLogged, startLogged, -Math.ceil((endLogged - startLogged) / nTicks));\r\n        var multiples = d3.range(this._base, 1, -(this._base - 1)).map(Math.floor);\r\n        var uniqMultiples = Utils.Array.uniq(multiples);\r\n        var clusters = bases.map(function (b) { return uniqMultiples.map(function (x) { return Math.pow(_this._base, b - 1) * x; }); });\r\n        var flattened = Utils.Array.flatten(clusters);\r\n        var filtered = flattened.filter(function (x) { return lower <= x && x <= upper; });\r\n        var sorted = filtered.sort(function (x, y) { return x - y; });\r\n        return sorted;\r\n    };\r\n    /**\r\n     * How many ticks does the range [lower, upper] deserve?\r\n     *\r\n     * e.g. if your domain was [10, 1000] and I asked _howManyTicks(10, 100),\r\n     * I would get 1/2 of the ticks. The range 10, 100 takes up 1/2 of the\r\n     * distance when plotted.\r\n     */\r\n    ModifiedLog.prototype._howManyTicks = function (lower, upper) {\r\n        var adjustedMin = this._adjustedLog(Utils.Math.min(this._untransformedDomain, 0));\r\n        var adjustedMax = this._adjustedLog(Utils.Math.max(this._untransformedDomain, 0));\r\n        var adjustedLower = this._adjustedLog(lower);\r\n        var adjustedUpper = this._adjustedLog(upper);\r\n        var proportion = (adjustedUpper - adjustedLower) / (adjustedMax - adjustedMin);\r\n        var ticks = Math.ceil(proportion * Scales.ModifiedLog._DEFAULT_NUM_TICKS);\r\n        return ticks;\r\n    };\r\n    ModifiedLog.prototype._niceDomain = function (domain, count) {\r\n        return domain;\r\n    };\r\n    ModifiedLog.prototype._defaultExtent = function () {\r\n        return [0, this._base];\r\n    };\r\n    ModifiedLog.prototype._expandSingleValueDomain = function (singleValueDomain) {\r\n        if (singleValueDomain[0] === singleValueDomain[1]) {\r\n            var singleValue = singleValueDomain[0];\r\n            if (singleValue > 0) {\r\n                return [singleValue / this._base, singleValue * this._base];\r\n            }\r\n            else if (singleValue === 0) {\r\n                return [-this._base, this._base];\r\n            }\r\n            else {\r\n                return [singleValue * this._base, singleValue / this._base];\r\n            }\r\n        }\r\n        return singleValueDomain;\r\n    };\r\n    ModifiedLog.prototype._getRange = function () {\r\n        return this._d3Scale.range();\r\n    };\r\n    ModifiedLog.prototype._setRange = function (values) {\r\n        this._d3Scale.range(values);\r\n    };\r\n    ModifiedLog.prototype.defaultTicks = function () {\r\n        return this._d3Scale.ticks(Scales.ModifiedLog._DEFAULT_NUM_TICKS);\r\n    };\r\n    return ModifiedLog;\r\n}(quantitativeScale_1.QuantitativeScale));\r\nexports.ModifiedLog = ModifiedLog;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/scales/modifiedLogScale.ts\n// module id = 111\n// module chunks = 0","\"use strict\";\r\n/**\r\n * Copyright 2014-present Palantir Technologies\r\n * @license MIT\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Utils = require(\"../utils\");\r\n/**\r\n * Creates a TickGenerator using the specified interval.\r\n *\r\n * Generates ticks at multiples of the interval while also including the domain boundaries.\r\n *\r\n * @param {number} interval\r\n * @returns {TickGenerator}\r\n */\r\nfunction intervalTickGenerator(interval) {\r\n    if (interval <= 0) {\r\n        throw new Error(\"interval must be positive number\");\r\n    }\r\n    return function (s) {\r\n        var domain = s.domain();\r\n        var low = Math.min(domain[0], domain[1]);\r\n        var high = Math.max(domain[0], domain[1]);\r\n        var firstTick = Math.ceil(low / interval) * interval;\r\n        var numTicks = Math.floor((high - firstTick) / interval) + 1;\r\n        var lowTicks = low % interval === 0 ? [] : [low];\r\n        var middleTicks = Utils.Math.range(0, numTicks).map(function (t) { return firstTick + t * interval; });\r\n        var highTicks = high % interval === 0 ? [] : [high];\r\n        return lowTicks.concat(middleTicks).concat(highTicks);\r\n    };\r\n}\r\nexports.intervalTickGenerator = intervalTickGenerator;\r\n/**\r\n * Creates a TickGenerator returns only integer tick values.\r\n *\r\n * @returns {TickGenerator}\r\n */\r\nfunction integerTickGenerator() {\r\n    return function (s) {\r\n        var defaultTicks = s.defaultTicks();\r\n        return defaultTicks.filter(function (tick, i) { return (tick % 1 === 0) || (i === 0) || (i === defaultTicks.length - 1); });\r\n    };\r\n}\r\nexports.integerTickGenerator = integerTickGenerator;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/scales/tickGenerators.ts\n// module id = 112\n// module chunks = 0","\"use strict\";\r\n/**\r\n * Copyright 2014-present Palantir Technologies\r\n * @license MIT\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\nvar d3 = require(\"d3\");\r\nvar timeAxis_1 = require(\"../axes/timeAxis\");\r\nvar quantitativeScale_1 = require(\"./quantitativeScale\");\r\nvar Time = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Time, _super);\r\n    /**\r\n     * A Time Scale maps Date objects to numbers.\r\n     *\r\n     * @constructor\r\n     */\r\n    function Time() {\r\n        var _this = _super.call(this) || this;\r\n        _this._d3Scale = d3.scaleTime();\r\n        _this.autoDomain();\r\n        return _this;\r\n    }\r\n    /**\r\n     * Returns an array of ticks values separated by the specified interval.\r\n     *\r\n     * @param {string} interval A string specifying the interval unit.\r\n     * @param {number?} [step] The number of multiples of the interval between consecutive ticks.\r\n     * @return {Date[]}\r\n     */\r\n    Time.prototype.tickInterval = function (interval, step, useUTC) {\r\n        if (step === void 0) { step = 1; }\r\n        if (useUTC === void 0) { useUTC = false; }\r\n        // temporarily creats a time scale from our linear scale into a time scale so we can get access to its api\r\n        var tempScale = d3.scaleTime();\r\n        var d3Interval = Time.timeIntervalToD3Time(interval, useUTC).every(step);\r\n        tempScale.domain(this.domain());\r\n        tempScale.range(this.range());\r\n        return tempScale.ticks(d3Interval);\r\n    };\r\n    Time.prototype._setDomain = function (values) {\r\n        if (values[1] < values[0]) {\r\n            throw new Error(\"Scale.Time domain values must be in chronological order\");\r\n        }\r\n        return _super.prototype._setDomain.call(this, values);\r\n    };\r\n    Time.prototype._defaultExtent = function () {\r\n        return [new Date(\"1970-01-01\"), new Date(\"1970-01-02\")];\r\n    };\r\n    Time.prototype._expandSingleValueDomain = function (singleValueDomain) {\r\n        var startTime = singleValueDomain[0].getTime();\r\n        var endTime = singleValueDomain[1].getTime();\r\n        if (startTime === endTime) {\r\n            var startDate = new Date(startTime);\r\n            startDate.setDate(startDate.getDate() - 1);\r\n            var endDate = new Date(endTime);\r\n            endDate.setDate(endDate.getDate() + 1);\r\n            return [startDate, endDate];\r\n        }\r\n        return singleValueDomain;\r\n    };\r\n    Time.prototype.scale = function (value) {\r\n        return this._d3Scale(value);\r\n    };\r\n    Time.prototype.scaleTransformation = function (value) {\r\n        return this.scale(new Date(value));\r\n    };\r\n    Time.prototype.invertedTransformation = function (value) {\r\n        return this.invert(value).getTime();\r\n    };\r\n    Time.prototype.getTransformationExtent = function () {\r\n        var extent = this._getUnboundedExtent(true);\r\n        return [extent[0].valueOf(), extent[1].valueOf()];\r\n    };\r\n    Time.prototype.getTransformationDomain = function () {\r\n        var dates = this.domain();\r\n        return [dates[0].valueOf(), dates[1].valueOf()];\r\n    };\r\n    Time.prototype.setTransformationDomain = function (_a) {\r\n        var domainMin = _a[0], domainMax = _a[1];\r\n        this.domain([new Date(domainMin), new Date(domainMax)]);\r\n    };\r\n    Time.prototype._getDomain = function () {\r\n        return this._backingScaleDomain();\r\n    };\r\n    Time.prototype._backingScaleDomain = function (values) {\r\n        if (values == null) {\r\n            return this._d3Scale.domain();\r\n        }\r\n        else {\r\n            this._d3Scale.domain(values);\r\n            return this;\r\n        }\r\n    };\r\n    Time.prototype._getRange = function () {\r\n        return this._d3Scale.range();\r\n    };\r\n    Time.prototype._setRange = function (values) {\r\n        this._d3Scale.range(values);\r\n    };\r\n    Time.prototype.invert = function (value) {\r\n        return this._d3Scale.invert(value);\r\n    };\r\n    Time.prototype.defaultTicks = function () {\r\n        return this._d3Scale.ticks(Time._DEFAULT_NUM_TICKS);\r\n    };\r\n    Time.prototype._niceDomain = function (domain) {\r\n        return this._d3Scale.copy().domain(domain).nice().domain();\r\n    };\r\n    /**\r\n     * Transforms the Plottable TimeInterval string into a d3 time interval equivalent.\r\n     * If the provided TimeInterval is incorrect, the default is d3.timeYear\r\n     */\r\n    Time.timeIntervalToD3Time = function (timeInterval, useUTC) {\r\n        switch (timeInterval) {\r\n            case timeAxis_1.TimeInterval.second:\r\n                return useUTC ? d3.utcSecond : d3.timeSecond;\r\n            case timeAxis_1.TimeInterval.minute:\r\n                return useUTC ? d3.utcMinute : d3.timeMinute;\r\n            case timeAxis_1.TimeInterval.hour:\r\n                return useUTC ? d3.utcHour : d3.timeHour;\r\n            case timeAxis_1.TimeInterval.day:\r\n                return useUTC ? d3.utcDay : d3.timeDay;\r\n            case timeAxis_1.TimeInterval.week:\r\n                return useUTC ? d3.utcWeek : d3.timeWeek;\r\n            case timeAxis_1.TimeInterval.month:\r\n                return useUTC ? d3.utcMonth : d3.timeMonth;\r\n            case timeAxis_1.TimeInterval.year:\r\n                return useUTC ? d3.utcYear : d3.timeYear;\r\n            default:\r\n                throw Error(\"TimeInterval specified does not exist: \" + timeInterval);\r\n        }\r\n    };\r\n    return Time;\r\n}(quantitativeScale_1.QuantitativeScale));\r\nexports.Time = Time;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/scales/timeScale.ts\n// module id = 113\n// module chunks = 0","\"use strict\";\r\n/**\r\n * Copyright 2014-present Palantir Technologies\r\n * @license MIT\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar d3 = require(\"d3\");\r\nvar nativeArray = window.Array;\r\n/**\r\n * Takes two arrays of numbers and adds them together\r\n *\r\n * @param {number[]} aList The first array of numbers\r\n * @param {number[]} bList The second array of numbers\r\n * @return {number[]} An array of numbers where x[i] = aList[i] + bList[i]\r\n */\r\nfunction add(aList, bList) {\r\n    if (aList.length !== bList.length) {\r\n        throw new Error(\"attempted to add arrays of unequal length\");\r\n    }\r\n    return aList.map(function (_, i) { return aList[i] + bList[i]; });\r\n}\r\nexports.add = add;\r\n/**\r\n * Take an array of values, and return the unique values.\r\n * Will work iff ∀ a, b, a.toString() == b.toString() => a == b; will break on Object inputs\r\n *\r\n * @param {T[]} values The values to find uniqueness for\r\n * @return {T[]} The unique values\r\n */\r\nfunction uniq(arr) {\r\n    var seen = d3.set();\r\n    var result = [];\r\n    arr.forEach(function (x) {\r\n        if (!seen.has(String(x))) {\r\n            seen.add(String(x));\r\n            result.push(x);\r\n        }\r\n    });\r\n    return result;\r\n}\r\nexports.uniq = uniq;\r\n/**\r\n * @param {T[][]} a The 2D array that will have its elements joined together.\r\n * @return {T[]} Every array in a, concatenated together in the order they appear.\r\n */\r\nfunction flatten(a) {\r\n    return nativeArray.prototype.concat.apply([], a);\r\n}\r\nexports.flatten = flatten;\r\n/**\r\n * Creates an array of length `count`, filled with value or (if value is a function), value()\r\n *\r\n * @param {T | ((index?: number) => T)} value The value to fill the array with or a value generator (called with index as arg)\r\n * @param {number} count The length of the array to generate\r\n * @return {any[]}\r\n */\r\nfunction createFilledArray(value, count) {\r\n    var out = [];\r\n    for (var i = 0; i < count; i++) {\r\n        out[i] = typeof (value) === \"function\" ? value(i) : value;\r\n    }\r\n    return out;\r\n}\r\nexports.createFilledArray = createFilledArray;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/utils/arrayUtils.ts\n// module id = 114\n// module chunks = 0","\"use strict\";\r\n/**\r\n * Copyright 2017-present Palantir Technologies\r\n * @license MIT\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * This class keeps track of bucketing state while collapsing dense line\r\n * geometry in a line and area plots.\r\n */\r\nvar Bucket = /** @class */ (function () {\r\n    function Bucket(index, xValue, yValue) {\r\n        this.entryIndex = index;\r\n        this.exitIndex = index;\r\n        this.minIndex = index;\r\n        this.maxIndex = index;\r\n        this.bucketValue = xValue;\r\n        this.minValue = yValue;\r\n        this.maxValue = yValue;\r\n    }\r\n    Bucket.prototype.isInBucket = function (value) {\r\n        return value == this.bucketValue;\r\n    };\r\n    Bucket.prototype.addToBucket = function (value, index) {\r\n        if (value < this.minValue) {\r\n            this.minValue = value;\r\n            this.minIndex = index;\r\n        }\r\n        if (value > this.maxValue) {\r\n            this.maxValue = value;\r\n            this.maxIndex = index;\r\n        }\r\n        this.exitIndex = index;\r\n    };\r\n    Bucket.prototype.getUniqueIndices = function () {\r\n        var idxs = [this.entryIndex, this.maxIndex, this.minIndex, this.exitIndex];\r\n        return idxs.filter(function (idx, i) { return i == 0 || idx != idxs[i - 1]; });\r\n    };\r\n    return Bucket;\r\n}());\r\nexports.Bucket = Bucket;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/utils/bucket.ts\n// module id = 115\n// module chunks = 0","\"use strict\";\r\n/**\r\n * Copyright 2014-present Palantir Technologies\r\n * @license MIT\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\nvar set_1 = require(\"./set\");\r\n/**\r\n * A set of callbacks which can be all invoked at once.\r\n * Each callback exists at most once in the set (based on reference equality).\r\n * All callbacks should have the same signature.\r\n */\r\nvar CallbackSet = /** @class */ (function (_super) {\r\n    tslib_1.__extends(CallbackSet, _super);\r\n    function CallbackSet() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    CallbackSet.prototype.callCallbacks = function () {\r\n        var _this = this;\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        this.forEach(function (callback) {\r\n            callback.apply(_this, args);\r\n        });\r\n        return this;\r\n    };\r\n    return CallbackSet;\r\n}(set_1.Set));\r\nexports.CallbackSet = CallbackSet;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/utils/callbackSet.ts\n// module id = 116\n// module chunks = 0","\"use strict\";\r\n/**\r\n * Copyright 2014-present Palantir Technologies\r\n * @license MIT\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar d3 = require(\"d3\");\r\nvar nativeMath = window.Math;\r\n/**\r\n * Return contrast ratio between two colors\r\n * Based on implementation from chroma.js by Gregor Aisch (gka) (licensed under BSD)\r\n * chroma.js may be found here: https://github.com/gka/chroma.js\r\n * License may be found here: https://github.com/gka/chroma.js/blob/master/LICENSE\r\n * see http://www.w3.org/TR/2008/REC-WCAG20-20081211/#contrast-ratiodef\r\n */\r\nfunction contrast(a, b) {\r\n    var l1 = luminance(a) + 0.05;\r\n    var l2 = luminance(b) + 0.05;\r\n    return l1 > l2 ? l1 / l2 : l2 / l1;\r\n}\r\nexports.contrast = contrast;\r\n/**\r\n * Returns a brighter copy of this color. Each channel is multiplied by 0.7 ^ -factor.\r\n * Channel values are capped at the maximum value of 255, and the minimum value of 30.\r\n */\r\nfunction lightenColor(color, factor) {\r\n    var brightened = d3.color(color).brighter(factor);\r\n    return brightened.rgb().toString();\r\n}\r\nexports.lightenColor = lightenColor;\r\n/**\r\n * Gets the Hex Code of the color resulting by applying the className CSS class to the\r\n * colorTester selection. Returns null if the tester is transparent.\r\n *\r\n * @param {d3.Selection<void>} colorTester The d3 selection to apply the CSS class to\r\n * @param {string} className The name of the class to be applied\r\n * @return {string} The hex code of the computed color\r\n */\r\nfunction colorTest(colorTester, className) {\r\n    colorTester.classed(className, true);\r\n    // Use regex to get the text inside the rgb parentheses\r\n    var colorStyle = colorTester.style(\"background-color\");\r\n    if (colorStyle === \"transparent\") {\r\n        return null;\r\n    }\r\n    var match = /\\((.+)\\)/.exec(colorStyle);\r\n    if (!match) {\r\n        return null;\r\n    }\r\n    var rgb = match[1]\r\n        .split(\",\")\r\n        .map(function (colorValue) {\r\n        var colorNumber = +colorValue;\r\n        var hexValue = colorNumber.toString(16);\r\n        return colorNumber < 16 ? \"0\" + hexValue : hexValue;\r\n    });\r\n    if (rgb.length === 4 && rgb[3] === \"00\") {\r\n        return null;\r\n    }\r\n    var hexCode = \"#\" + rgb.join(\"\");\r\n    colorTester.classed(className, false);\r\n    return hexCode;\r\n}\r\nexports.colorTest = colorTest;\r\n/**\r\n * Return relative luminance (defined here: http://www.w3.org/TR/2008/REC-WCAG20-20081211/#relativeluminancedef)\r\n * Based on implementation from chroma.js by Gregor Aisch (gka) (licensed under BSD)\r\n * chroma.js may be found here: https://github.com/gka/chroma.js\r\n * License may be found here: https://github.com/gka/chroma.js/blob/master/LICENSE\r\n */\r\nfunction luminance(color) {\r\n    var rgb = d3.rgb(color);\r\n    var lum = function (x) {\r\n        x = x / 255;\r\n        return x <= 0.03928 ? x / 12.92 : nativeMath.pow((x + 0.055) / 1.055, 2.4);\r\n    };\r\n    var r = lum(rgb.r);\r\n    var g = lum(rgb.g);\r\n    var b = lum(rgb.b);\r\n    return 0.2126 * r + 0.7152 * g + 0.0722 * b;\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/utils/colorUtils.ts\n// module id = 117\n// module chunks = 0","\"use strict\";\r\n/**\r\n * Copyright 2014-present Palantir Technologies\r\n * @license MIT\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar rTree_1 = require(\"./rTree\");\r\n/**\r\n * Implementation of {IEntityStore} that uses an array for easy iteration as\r\n * well as a quad tree for fast nearest-point queries.\r\n *\r\n * Note that if the position of your entities changes, you MUST rebuild the\r\n * entity store for the `entityNearest` method to work since the quadtree does\r\n * not know that its nodes have moved.\r\n */\r\nvar EntityStore = /** @class */ (function () {\r\n    function EntityStore() {\r\n        this._entities = [];\r\n        this._rtree = new rTree_1.RTree();\r\n    }\r\n    EntityStore.prototype.addAll = function (entities, entityBoundsFactory, bounds) {\r\n        this._entities = this._entities.concat(entities);\r\n        // filter out of bounds entities if bounds is defined\r\n        if (bounds !== undefined) {\r\n            var filterBounds = rTree_1.RTreeBounds.bounds(bounds);\r\n            for (var i = 0; i < entities.length; i++) {\r\n                var entity = entities[i];\r\n                var entityBounds = rTree_1.RTreeBounds.entityBounds(entityBoundsFactory(entity));\r\n                if (rTree_1.RTreeBounds.isBoundsOverlapBounds(filterBounds, entityBounds)) {\r\n                    this._rtree.insert(entityBounds, entity);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            for (var i = 0; i < entities.length; i++) {\r\n                var entity = entities[i];\r\n                var entityBounds = rTree_1.RTreeBounds.entityBounds(entityBoundsFactory(entity));\r\n                this._rtree.insert(entityBounds, entity);\r\n            }\r\n        }\r\n    };\r\n    EntityStore.prototype.entityNearest = function (queryPoint) {\r\n        return this._rtree.locateNearest(queryPoint).pop();\r\n    };\r\n    EntityStore.prototype.entityNearestX = function (queryPoint) {\r\n        return this._rtree.locateNearestX(queryPoint).pop();\r\n    };\r\n    EntityStore.prototype.entityNearestY = function (queryPoint) {\r\n        return this._rtree.locateNearestY(queryPoint).pop();\r\n    };\r\n    EntityStore.prototype.entitiesInBounds = function (bounds) {\r\n        return this._rtree.intersect(rTree_1.RTreeBounds.entityBounds(bounds));\r\n    };\r\n    EntityStore.prototype.entitiesInXBounds = function (bounds) {\r\n        return this._rtree.intersectX(rTree_1.RTreeBounds.entityBounds(bounds));\r\n    };\r\n    EntityStore.prototype.entitiesInYBounds = function (bounds) {\r\n        return this._rtree.intersectY(rTree_1.RTreeBounds.entityBounds(bounds));\r\n    };\r\n    EntityStore.prototype.entities = function () {\r\n        return this._entities;\r\n    };\r\n    return EntityStore;\r\n}());\r\nexports.EntityStore = EntityStore;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/utils/entityStore.ts\n// module id = 118\n// module chunks = 0","\"use strict\";\r\n/**\r\n * Copyright 2014-present Palantir Technologies\r\n * @license MIT\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Math = require(\"./mathUtils\");\r\n/**\r\n * Shim for ES6 map.\r\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map\r\n */\r\nvar Map = /** @class */ (function () {\r\n    function Map() {\r\n        if (typeof window.Map === \"function\") {\r\n            this._es6Map = new window.Map();\r\n        }\r\n        else {\r\n            this._keyValuePairs = [];\r\n        }\r\n    }\r\n    Map.prototype.set = function (key, value) {\r\n        if (Math.isNaN(key)) {\r\n            throw new Error(\"NaN may not be used as a key to the Map\");\r\n        }\r\n        if (this._es6Map != null) {\r\n            this._es6Map.set(key, value);\r\n            return this;\r\n        }\r\n        for (var i = 0; i < this._keyValuePairs.length; i++) {\r\n            if (this._keyValuePairs[i].key === key) {\r\n                this._keyValuePairs[i].value = value;\r\n                return this;\r\n            }\r\n        }\r\n        this._keyValuePairs.push({ key: key, value: value });\r\n        return this;\r\n    };\r\n    Map.prototype.get = function (key) {\r\n        if (this._es6Map != null) {\r\n            return this._es6Map.get(key);\r\n        }\r\n        for (var i = 0; i < this._keyValuePairs.length; i++) {\r\n            if (this._keyValuePairs[i].key === key) {\r\n                return this._keyValuePairs[i].value;\r\n            }\r\n        }\r\n        return undefined;\r\n    };\r\n    Map.prototype.has = function (key) {\r\n        if (this._es6Map != null) {\r\n            return this._es6Map.has(key);\r\n        }\r\n        for (var i = 0; i < this._keyValuePairs.length; i++) {\r\n            if (this._keyValuePairs[i].key === key) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    Map.prototype.forEach = function (callbackFn, thisArg) {\r\n        var _this = this;\r\n        if (this._es6Map != null) {\r\n            var callbackWrapper = function (value, key) { return callbackFn.call(thisArg, value, key, _this); };\r\n            this._es6Map.forEach(callbackWrapper, thisArg);\r\n            return;\r\n        }\r\n        this._keyValuePairs.forEach(function (keyValuePair) {\r\n            callbackFn.call(thisArg, keyValuePair.value, keyValuePair.key, _this);\r\n        });\r\n    };\r\n    Map.prototype.delete = function (key) {\r\n        if (this._es6Map != null) {\r\n            return this._es6Map.delete(key);\r\n        }\r\n        for (var i = 0; i < this._keyValuePairs.length; i++) {\r\n            if (this._keyValuePairs[i].key === key) {\r\n                this._keyValuePairs.splice(i, 1);\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    return Map;\r\n}());\r\nexports.Map = Map;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/utils/map.ts\n// module id = 119\n// module chunks = 0","\"use strict\";\r\n/**\r\n * Copyright 2017-present Palantir Technologies\r\n * @license MIT\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * Polyfill for Object.assign\r\n */\r\nfunction assign() {\r\n    var objs = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        objs[_i] = arguments[_i];\r\n    }\r\n    var result = {};\r\n    for (var _a = 0, objs_1 = objs; _a < objs_1.length; _a++) {\r\n        var obj = objs_1[_a];\r\n        var keys = Object.keys(obj);\r\n        for (var _b = 0, keys_1 = keys; _b < keys_1.length; _b++) {\r\n            var key = keys_1[_b];\r\n            result[key] = obj[key];\r\n        }\r\n    }\r\n    return result;\r\n}\r\nexports.assign = assign;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/utils/objectUtils.ts\n// module id = 120\n// module chunks = 0","\"use strict\";\r\n/**\r\n * Copyright 2017-present Palantir Technologies\r\n * @license MIT\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar SplitStrategyTrivial = /** @class */ (function () {\r\n    function SplitStrategyTrivial() {\r\n    }\r\n    SplitStrategyTrivial.prototype.split = function (entries, nodes) {\r\n        // Create simple middle split\r\n        var mid = Math.ceil(entries.length / 2);\r\n        for (var i = 0; i < mid; i++) {\r\n            nodes[0].insert(entries[i]);\r\n        }\r\n        for (var i = mid; i < entries.length; i++) {\r\n            nodes[1].insert(entries[i]);\r\n        }\r\n    };\r\n    return SplitStrategyTrivial;\r\n}());\r\nexports.SplitStrategyTrivial = SplitStrategyTrivial;\r\n// Linear split method adapted from https://github.com/imbcmdth/RTree/blob/master/src/rtree.js\r\nvar SplitStrategyLinear = /** @class */ (function () {\r\n    function SplitStrategyLinear() {\r\n    }\r\n    SplitStrategyLinear.prototype.split = function (entries, nodes) {\r\n        // copy entries before we mutate it\r\n        entries = entries.slice();\r\n        this.chooseFirstSplit(entries, nodes);\r\n        while (entries.length > 0) {\r\n            this.addNext(entries, nodes);\r\n        }\r\n    };\r\n    /**\r\n     * Choose the two farthest-apart entries to begin the split.\r\n     */\r\n    SplitStrategyLinear.prototype.chooseFirstSplit = function (entries, nodes) {\r\n        // Determine entry indices that have min/max x/y coordinates\r\n        var minXH = 0;\r\n        var minYH = 0;\r\n        var maxXL = entries.length - 1;\r\n        var maxYL = entries.length - 1;\r\n        for (var i = 1; i < entries.length - 1; i++) {\r\n            var entry = entries[i];\r\n            if (entry.bounds.xl > entries[maxXL].bounds.xl) {\r\n                maxXL = i;\r\n            }\r\n            else if (entry.bounds.xh < entries[minXH].bounds.xh) {\r\n                minXH = i;\r\n            }\r\n            if (entry.bounds.yl > entries[maxYL].bounds.yl) {\r\n                maxYL = i;\r\n            }\r\n            else if (entry.bounds.yh < entries[minYH].bounds.yh) {\r\n                minYH = i;\r\n            }\r\n        }\r\n        // Choose to split x or y based on greatest difference\r\n        var dx = Math.abs(entries[minXH].bounds.xh - entries[maxXL].bounds.xl);\r\n        var dy = Math.abs(entries[minYH].bounds.yh - entries[maxYL].bounds.yl);\r\n        var _a = dx > dy ? [minXH, maxXL] : [minYH, maxYL], i0 = _a[0], i1 = _a[1];\r\n        // if no detectable split, just use first/last entries\r\n        if (i0 === i1) {\r\n            i0 = 0;\r\n            i1 = entries.length - 1;\r\n        }\r\n        // Split off nodes. We splice with the max index first to make sure we\r\n        // don't change the index of the second splice call\r\n        nodes[0].insert(entries.splice(Math.max(i0, i1), 1)[0]);\r\n        nodes[1].insert(entries.splice(Math.min(i0, i1), 1)[0]);\r\n    };\r\n    /**\r\n     * Split the next entry. Choose the entry that expands its parent node's\r\n     * area the least.\r\n     */\r\n    SplitStrategyLinear.prototype.addNext = function (entries, nodes) {\r\n        var index = null;\r\n        var minDiff = null;\r\n        var minDiffNode = null;\r\n        for (var i = 0; i < entries.length; i++) {\r\n            var entry = entries[i];\r\n            var areaDiff0 = nodes[0].unionAreaDifference(entry.bounds);\r\n            var areaDiff1 = nodes[1].unionAreaDifference(entry.bounds);\r\n            if (areaDiff0 < minDiff || index == null) {\r\n                index = i;\r\n                minDiff = areaDiff0;\r\n                minDiffNode = nodes[0];\r\n            }\r\n            if (areaDiff1 < minDiff) {\r\n                index = i;\r\n                minDiff = areaDiff1;\r\n                minDiffNode = nodes[1];\r\n            }\r\n        }\r\n        minDiffNode.insert(entries.splice(index, 1)[0]);\r\n    };\r\n    return SplitStrategyLinear;\r\n}());\r\nexports.SplitStrategyLinear = SplitStrategyLinear;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/utils/rTreeSplitStrategies.ts\n// module id = 121\n// module chunks = 0","\"use strict\";\r\n/**\r\n * Copyright 2014-present Palantir Technologies\r\n * @license MIT\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar d3 = require(\"d3\");\r\nvar lodash_1 = require(\"lodash\");\r\nvar Utils = require(\"./\");\r\nvar makeEnum_1 = require(\"./makeEnum\");\r\n/**\r\n * Option type for stacking direction. By default, stacked bar and area charts\r\n * put the first data series at the bottom of the axis (\"bottomup\"), but this\r\n * can be reversed with the \"topdown\" option, which produces a stacking order\r\n * that matches the order of series in the legend.\r\n */\r\nexports.IStackingOrder = makeEnum_1.makeEnum([\"topdown\", \"bottomup\"]);\r\nvar nativeMath = window.Math;\r\n/**\r\n * Computes the StackingResult (value and offset) for each data point in each Dataset.\r\n *\r\n * @param {Dataset[]} datasets The Datasets to be stacked on top of each other in the order of stacking\r\n * @param {Accessor<any>} keyAccessor Accessor for the key of the data\r\n * @param {Accessor<number>} valueAccessor Accessor for the value of the data\r\n * @param {IStackingOrder} stackingOrder The order of stacking (default \"bottomup\")\r\n * @return {StackingResult} value and offset for each datapoint in each Dataset\r\n */\r\nfunction stack(datasets, keyAccessor, valueAccessor, stackingOrder) {\r\n    if (stackingOrder === void 0) { stackingOrder = \"bottomup\"; }\r\n    var positiveOffsets = d3.map();\r\n    var negativeOffsets = d3.map();\r\n    var datasetToKeyToStackedDatum = new Utils.Map();\r\n    if (stackingOrder === \"topdown\") {\r\n        datasets = datasets.slice();\r\n        datasets.reverse();\r\n    }\r\n    for (var _i = 0, datasets_1 = datasets; _i < datasets_1.length; _i++) {\r\n        var dataset = datasets_1[_i];\r\n        var keyToStackedDatum = new Utils.Map();\r\n        var data = dataset.data();\r\n        var dataLen = data.length;\r\n        for (var index = 0; index < dataLen; index++) {\r\n            var datum = data[index];\r\n            var accessedKey = keyAccessor(datum, index, dataset);\r\n            var key = exports.normalizeKey(accessedKey);\r\n            var value = +valueAccessor(datum, index, dataset);\r\n            var offset = void 0;\r\n            var offsetMap = (value >= 0) ? positiveOffsets : negativeOffsets;\r\n            if (offsetMap.has(key)) {\r\n                offset = offsetMap.get(key);\r\n                offsetMap.set(key, offset + value);\r\n            }\r\n            else {\r\n                offset = 0;\r\n                offsetMap.set(key, value);\r\n            }\r\n            keyToStackedDatum.set(key, {\r\n                offset: offset,\r\n                value: value,\r\n                axisValue: accessedKey,\r\n                originalDatum: datum,\r\n                originalDataset: dataset,\r\n                originalIndex: index,\r\n            });\r\n        }\r\n        datasetToKeyToStackedDatum.set(dataset, keyToStackedDatum);\r\n    }\r\n    return datasetToKeyToStackedDatum;\r\n}\r\nexports.stack = stack;\r\n/**\r\n * Computes the maximum and minimum extents of each stack individually.\r\n *\r\n * @param {GenericStackingResult} stackingResult The value and offset information for each datapoint in each dataset\r\n * @return { { maximumExtents: Utils.Map<D, number>, minimumExtents: Utils.Map<D, number> } } The maximum and minimum extents\r\n * of each individual stack.\r\n */\r\nfunction stackedExtents(stackingResult) {\r\n    var maximumExtents = new Utils.Map();\r\n    var minimumExtents = new Utils.Map();\r\n    stackingResult.forEach(function (stack) {\r\n        stack.forEach(function (datum, key) {\r\n            // correctly handle negative bar stacks\r\n            var offsetValue = datum.offset + datum.value;\r\n            var maximalValue = Utils.Math.max([offsetValue, datum.offset], datum.offset);\r\n            var minimalValue = Utils.Math.min([offsetValue, datum.offset], datum.offset);\r\n            var axisValue = datum.axisValue;\r\n            if (!maximumExtents.has(key)) {\r\n                maximumExtents.set(key, { extent: maximalValue, axisValue: axisValue, stackedDatum: datum });\r\n            }\r\n            else if (maximumExtents.get(key).extent < maximalValue) {\r\n                maximumExtents.set(key, { extent: maximalValue, axisValue: axisValue, stackedDatum: datum });\r\n            }\r\n            if (!minimumExtents.has(key)) {\r\n                minimumExtents.set(key, { extent: minimalValue, axisValue: axisValue, stackedDatum: datum });\r\n            }\r\n            else if (minimumExtents.get(key).extent > (minimalValue)) {\r\n                minimumExtents.set(key, { extent: minimalValue, axisValue: axisValue, stackedDatum: datum });\r\n            }\r\n        });\r\n    });\r\n    return { maximumExtents: maximumExtents, minimumExtents: minimumExtents };\r\n}\r\nexports.stackedExtents = stackedExtents;\r\n/**\r\n * Computes the total extent over all data points in all Datasets, taking stacking into consideration.\r\n *\r\n * @param {StackingResult} stackingResult The value and offset information for each datapoint in each dataset\r\n * @param {Accessor<any>} keyAccessor Accessor for the key of the data existent in the stackingResult\r\n * @param {Accessor<boolean>} filter A filter for data to be considered when computing the total extent\r\n * @return {[number, number]} The total extent\r\n */\r\nfunction stackedExtent(stackingResult, keyAccessor, filter) {\r\n    var extents = [];\r\n    stackingResult.forEach(function (stackedDatumMap, dataset) {\r\n        var data = dataset.data();\r\n        var dataLen = data.length;\r\n        for (var index = 0; index < dataLen; index++) {\r\n            var datum = data[index];\r\n            if (filter != null && !filter(datum, index, dataset)) {\r\n                continue;\r\n            }\r\n            var stackedDatum = stackedDatumMap.get(exports.normalizeKey(keyAccessor(datum, index, dataset)));\r\n            extents.push(stackedDatum.value + stackedDatum.offset);\r\n        }\r\n    });\r\n    var maxStackExtent = Utils.Math.max(extents, 0);\r\n    var minStackExtent = Utils.Math.min(extents, 0);\r\n    return [nativeMath.min(minStackExtent, 0), nativeMath.max(0, maxStackExtent)];\r\n}\r\nexports.stackedExtent = stackedExtent;\r\n/**\r\n * Normalizes a key used for stacking\r\n *\r\n * @param {any} key The key to be normalized\r\n * @return {string} The stringified key\r\n */\r\nexports.normalizeKey = lodash_1.memoize(function (key) {\r\n    return String(key);\r\n});\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/utils/stackingUtils.ts\n// module id = 122\n// module chunks = 0","\"use strict\";\r\n/**\r\n * Copyright 2017-present Palantir Technologies\r\n * @license MIT\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Utils = require(\"../utils\");\r\nvar _TRANSLATOR_KEY = \"__Plottable_ClientTranslator\";\r\n/**\r\n * Returns a singleton-ized `Translator` instance associated with the component.\r\n */\r\nfunction getTranslator(component) {\r\n    var rootElement = component.root().rootElement().node();\r\n    var translator = rootElement[_TRANSLATOR_KEY];\r\n    if (translator == null) {\r\n        translator = new Translator(rootElement);\r\n        rootElement[_TRANSLATOR_KEY] = translator;\r\n    }\r\n    return translator;\r\n}\r\nexports.getTranslator = getTranslator;\r\n/**\r\n * The translator implements CSS transform aware position measuring. We manually\r\n * compute a cumulative CSS3 of the root element ancestors up to `<body>`.\r\n */\r\nvar Translator = /** @class */ (function () {\r\n    function Translator(_rootElement) {\r\n        this._rootElement = _rootElement;\r\n    }\r\n    /**\r\n     * Given `document` client coordinates, computes the position relative to the\r\n     * `Component`'s root element, taking into account the cumulative CSS3\r\n     * transforms of the root element ancestors up to `<body>`.\r\n     *\r\n     * This triggers a layout but doesn't further modify the DOM, so causes a\r\n     * maximum of one layout per frame.\r\n     *\r\n     * Does not support `transform-origin` CSS property other than the default.\r\n     */\r\n    Translator.prototype.computePosition = function (clientX, clientY) {\r\n        var clientPosition = {\r\n            x: clientX,\r\n            y: clientY,\r\n        };\r\n        var transform = Utils.Math.getCumulativeTransform(this._rootElement);\r\n        if (transform == null) {\r\n            return clientPosition;\r\n        }\r\n        var transformed = Utils.Math.applyTransform(transform, clientPosition);\r\n        return transformed;\r\n    };\r\n    /**\r\n     * Is the event's target part of the given component's DOM tree?\r\n     */\r\n    Translator.isEventInside = function (component, e) {\r\n        return Utils.DOM.contains(component.root().rootElement().node(), e.target);\r\n    };\r\n    return Translator;\r\n}());\r\nexports.Translator = Translator;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/utils/transformAwareTranslator.ts\n// module id = 123\n// module chunks = 0","export {\n  linear as easeLinear\n} from \"./src/linear\";\n\nexport {\n  quadInOut as easeQuad,\n  quadIn as easeQuadIn,\n  quadOut as easeQuadOut,\n  quadInOut as easeQuadInOut\n} from \"./src/quad\";\n\nexport {\n  cubicInOut as easeCubic,\n  cubicIn as easeCubicIn,\n  cubicOut as easeCubicOut,\n  cubicInOut as easeCubicInOut\n} from \"./src/cubic\";\n\nexport {\n  polyInOut as easePoly,\n  polyIn as easePolyIn,\n  polyOut as easePolyOut,\n  polyInOut as easePolyInOut\n} from \"./src/poly\";\n\nexport {\n  sinInOut as easeSin,\n  sinIn as easeSinIn,\n  sinOut as easeSinOut,\n  sinInOut as easeSinInOut\n} from \"./src/sin\";\n\nexport {\n  expInOut as easeExp,\n  expIn as easeExpIn,\n  expOut as easeExpOut,\n  expInOut as easeExpInOut\n} from \"./src/exp\";\n\nexport {\n  circleInOut as easeCircle,\n  circleIn as easeCircleIn,\n  circleOut as easeCircleOut,\n  circleInOut as easeCircleInOut\n} from \"./src/circle\";\n\nexport {\n  bounceOut as easeBounce,\n  bounceIn as easeBounceIn,\n  bounceOut as easeBounceOut,\n  bounceInOut as easeBounceInOut\n} from \"./src/bounce\";\n\nexport {\n  backInOut as easeBack,\n  backIn as easeBackIn,\n  backOut as easeBackOut,\n  backInOut as easeBackInOut\n} from \"./src/back\";\n\nexport {\n  elasticOut as easeElastic,\n  elasticIn as easeElasticIn,\n  elasticOut as easeElasticOut,\n  elasticInOut as easeElasticInOut\n} from \"./src/elastic\";\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3-ease/index.js\n// module id = 124\n// module chunks = 0","var overshoot = 1.70158;\n\nexport var backIn = (function custom(s) {\n  s = +s;\n\n  function backIn(t) {\n    return t * t * ((s + 1) * t - s);\n  }\n\n  backIn.overshoot = custom;\n\n  return backIn;\n})(overshoot);\n\nexport var backOut = (function custom(s) {\n  s = +s;\n\n  function backOut(t) {\n    return --t * t * ((s + 1) * t + s) + 1;\n  }\n\n  backOut.overshoot = custom;\n\n  return backOut;\n})(overshoot);\n\nexport var backInOut = (function custom(s) {\n  s = +s;\n\n  function backInOut(t) {\n    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n  }\n\n  backInOut.overshoot = custom;\n\n  return backInOut;\n})(overshoot);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3-ease/src/back.js\n// module id = 125\n// module chunks = 0","var b1 = 4 / 11,\n    b2 = 6 / 11,\n    b3 = 8 / 11,\n    b4 = 3 / 4,\n    b5 = 9 / 11,\n    b6 = 10 / 11,\n    b7 = 15 / 16,\n    b8 = 21 / 22,\n    b9 = 63 / 64,\n    b0 = 1 / b1 / b1;\n\nexport function bounceIn(t) {\n  return 1 - bounceOut(1 - t);\n}\n\nexport function bounceOut(t) {\n  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\n}\n\nexport function bounceInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3-ease/src/bounce.js\n// module id = 126\n// module chunks = 0","export function circleIn(t) {\n  return 1 - Math.sqrt(1 - t * t);\n}\n\nexport function circleOut(t) {\n  return Math.sqrt(1 - --t * t);\n}\n\nexport function circleInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3-ease/src/circle.js\n// module id = 127\n// module chunks = 0","export function cubicIn(t) {\n  return t * t * t;\n}\n\nexport function cubicOut(t) {\n  return --t * t * t + 1;\n}\n\nexport function cubicInOut(t) {\n  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3-ease/src/cubic.js\n// module id = 128\n// module chunks = 0","var tau = 2 * Math.PI,\n    amplitude = 1,\n    period = 0.3;\n\nexport var elasticIn = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticIn(t) {\n    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n  }\n\n  elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n  elasticIn.period = function(p) { return custom(a, p); };\n\n  return elasticIn;\n})(amplitude, period);\n\nexport var elasticOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticOut(t) {\n    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n  }\n\n  elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticOut.period = function(p) { return custom(a, p); };\n\n  return elasticOut;\n})(amplitude, period);\n\nexport var elasticInOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticInOut(t) {\n    return ((t = t * 2 - 1) < 0\n        ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)\n        : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n  }\n\n  elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticInOut.period = function(p) { return custom(a, p); };\n\n  return elasticInOut;\n})(amplitude, period);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3-ease/src/elastic.js\n// module id = 129\n// module chunks = 0","export function expIn(t) {\n  return Math.pow(2, 10 * t - 10);\n}\n\nexport function expOut(t) {\n  return 1 - Math.pow(2, -10 * t);\n}\n\nexport function expInOut(t) {\n  return ((t *= 2) <= 1 ? Math.pow(2, 10 * t - 10) : 2 - Math.pow(2, 10 - 10 * t)) / 2;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3-ease/src/exp.js\n// module id = 130\n// module chunks = 0","export function linear(t) {\n  return +t;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3-ease/src/linear.js\n// module id = 131\n// module chunks = 0","var exponent = 3;\n\nexport var polyIn = (function custom(e) {\n  e = +e;\n\n  function polyIn(t) {\n    return Math.pow(t, e);\n  }\n\n  polyIn.exponent = custom;\n\n  return polyIn;\n})(exponent);\n\nexport var polyOut = (function custom(e) {\n  e = +e;\n\n  function polyOut(t) {\n    return 1 - Math.pow(1 - t, e);\n  }\n\n  polyOut.exponent = custom;\n\n  return polyOut;\n})(exponent);\n\nexport var polyInOut = (function custom(e) {\n  e = +e;\n\n  function polyInOut(t) {\n    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n  }\n\n  polyInOut.exponent = custom;\n\n  return polyInOut;\n})(exponent);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3-ease/src/poly.js\n// module id = 132\n// module chunks = 0","export function quadIn(t) {\n  return t * t;\n}\n\nexport function quadOut(t) {\n  return t * (2 - t);\n}\n\nexport function quadInOut(t) {\n  return ((t *= 2) <= 1 ? t * t : --t * (2 - t) + 1) / 2;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3-ease/src/quad.js\n// module id = 133\n// module chunks = 0","var pi = Math.PI,\n    halfPi = pi / 2;\n\nexport function sinIn(t) {\n  return 1 - Math.cos(t * halfPi);\n}\n\nexport function sinOut(t) {\n  return Math.sin(t * halfPi);\n}\n\nexport function sinInOut(t) {\n  return (1 - Math.cos(pi * t)) / 2;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3-ease/src/sin.js\n// module id = 134\n// module chunks = 0","/*!\n * is-plain-object <https://github.com/jonschlinkert/is-plain-object>\n *\n * Copyright (c) 2014-2017, Jon Schlinkert.\n * Released under the MIT License.\n */\n\n'use strict';\n\nvar isObject = require('isobject');\n\nfunction isObjectObject(o) {\n  return isObject(o) === true\n    && Object.prototype.toString.call(o) === '[object Object]';\n}\n\nmodule.exports = function isPlainObject(o) {\n  var ctor,prot;\n\n  if (isObjectObject(o) === false) return false;\n\n  // If has modified constructor\n  ctor = o.constructor;\n  if (typeof ctor !== 'function') return false;\n\n  // If has modified prototype\n  prot = ctor.prototype;\n  if (isObjectObject(prot) === false) return false;\n\n  // If constructor does not have an Object-specific method\n  if (prot.hasOwnProperty('isPrototypeOf') === false) {\n    return false;\n  }\n\n  // Most likely a plain Object\n  return true;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/is-plain-object/index.js\n// module id = 135\n// module chunks = 0","/*!\n * isobject <https://github.com/jonschlinkert/isobject>\n *\n * Copyright (c) 2014-2017, Jon Schlinkert.\n * Released under the MIT License.\n */\n\n'use strict';\n\nmodule.exports = function isObject(val) {\n  return val != null && typeof val === 'object' && Array.isArray(val) === false;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/isobject/index.js\n// module id = 136\n// module chunks = 0","\"use strict\";\n/**\n * Copyright 2017-present Palantir Technologies, Inc. All rights reserved.\n * Licensed under the MIT License (the \"License\"); you may obtain a copy of the\n * license at https://github.com/palantir/typesettable/blob/develop/LICENSE\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar writers_1 = require(\"../writers\");\nvar DEFAULT_FILL_COLOR = \"#444\";\n/**\n * A typesetter context for HTML5 Canvas.\n *\n * Due to the Canvas API, you must explicitly define the line height, and any\n * styling for the font must also be explicitly defined in the optional\n * `ICanvasFontStyle` object.\n */\nvar CanvasContext = (function () {\n    function CanvasContext(ctx, lineHeight, style) {\n        if (lineHeight === void 0) { lineHeight = 10; }\n        if (style === void 0) { style = {}; }\n        var _this = this;\n        this.ctx = ctx;\n        this.lineHeight = lineHeight;\n        this.style = style;\n        this.createRuler = function () {\n            return function (text) {\n                _this.ctx.font = _this.style.font;\n                var width = _this.ctx.measureText(text).width;\n                return { width: width, height: _this.lineHeight };\n            };\n        };\n        this.createPen = function (_text, transform, ctx) {\n            if (ctx == null) {\n                ctx = _this.ctx;\n            }\n            ctx.save();\n            ctx.translate(transform.translate[0], transform.translate[1]);\n            ctx.rotate(transform.rotate * Math.PI / 180.0);\n            return _this.createCanvasPen(ctx);\n        };\n        if (this.style.fill === undefined) {\n            this.style.fill = DEFAULT_FILL_COLOR;\n        }\n    }\n    CanvasContext.prototype.createCanvasPen = function (ctx) {\n        var _this = this;\n        return {\n            destroy: function () {\n                ctx.restore();\n            },\n            write: function (line, width, xAlign, xOffset, yOffset) {\n                xOffset += width * writers_1.Writer.XOffsetFactor[xAlign];\n                ctx.textAlign = xAlign;\n                if (_this.style.font != null) {\n                    ctx.font = _this.style.font;\n                }\n                if (_this.style.fill != null) {\n                    ctx.fillStyle = _this.style.fill;\n                    ctx.fillText(line, xOffset, yOffset);\n                }\n                if (_this.style.stroke != null) {\n                    ctx.strokeStyle = _this.style.fill;\n                    ctx.strokeText(line, xOffset, yOffset);\n                }\n            },\n        };\n    };\n    return CanvasContext;\n}());\nexports.CanvasContext = CanvasContext;\n//# sourceMappingURL=canvas.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/typesettable/build/src/contexts/canvas.js\n// module id = 137\n// module chunks = 0","\"use strict\";\n/**\n * Copyright 2017-present Palantir Technologies, Inc. All rights reserved.\n * Licensed under the MIT License (the \"License\"); you may obtain a copy of the\n * license at https://github.com/palantir/typesettable/blob/develop/LICENSE\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar writers_1 = require(\"../writers\");\nvar html_1 = require(\"./html\");\nvar SvgUtils = (function () {\n    function SvgUtils() {\n    }\n    /**\n     * Appends an SVG element with the specified tag name to the provided element.\n     * The variadic classnames are added to the new element.\n     *\n     * Returns the new element.\n     */\n    SvgUtils.append = function (element, tagName) {\n        var classNames = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            classNames[_i - 2] = arguments[_i];\n        }\n        var child = SvgUtils.create.apply(SvgUtils, [tagName].concat(classNames));\n        element.appendChild(child);\n        return child;\n    };\n    /**\n     * Creates and returns a new SVGElement with the attached classnames.\n     */\n    SvgUtils.create = function (tagName) {\n        var classNames = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            classNames[_i - 1] = arguments[_i];\n        }\n        var element = document.createElementNS(SvgUtils.SVG_NS, tagName);\n        html_1.HtmlUtils.addClasses.apply(html_1.HtmlUtils, [element].concat(classNames));\n        return element;\n    };\n    /**\n     * Returns the width/height of svg element's bounding box\n     */\n    SvgUtils.getDimensions = function (element) {\n        // using feature detection, safely return the bounding box dimensions of the\n        // provided svg element\n        if (element.getBBox) {\n            try {\n                var _a = element.getBBox(), width = _a.width, height = _a.height;\n                // copy to prevent NoModificationAllowedError\n                return { width: width, height: height };\n            }\n            catch (err) {\n                // swallow any errors that occur (Firefox Linux)\n            }\n        }\n        // if can't get valid bbox, return 0,0\n        return { height: 0, width: 0 };\n    };\n    return SvgUtils;\n}());\nSvgUtils.SVG_NS = \"http://www.w3.org/2000/svg\";\nexports.SvgUtils = SvgUtils;\n/**\n * A typesetter context for SVG.\n *\n * @param element - The CSS font styles applied to `element` will determine the\n * size of text measurements. Also the default text block container.\n * @param className - added to new text blocks\n * @param addTitleElement - enable title tags to be added to new text blocks.\n */\nvar SvgContext = (function () {\n    function SvgContext(element, className, addTitleElement) {\n        if (addTitleElement === void 0) { addTitleElement = false; }\n        var _this = this;\n        this.element = element;\n        this.className = className;\n        this.addTitleElement = addTitleElement;\n        this.createRuler = function () {\n            var _a = _this.getTextElements(_this.element), parentElement = _a.parentElement, containerElement = _a.containerElement, textElement = _a.textElement;\n            return function (text) {\n                parentElement.appendChild(containerElement);\n                textElement.textContent = text;\n                var dimensions = SvgUtils.getDimensions(textElement);\n                parentElement.removeChild(containerElement); // element.remove() doesn't work in IE11\n                return dimensions;\n            };\n        };\n        this.createPen = function (text, transform, element) {\n            if (element == null) {\n                element = _this.element;\n            }\n            var textContainer = SvgUtils.append(element, \"g\", \"text-container\", _this.className);\n            // attach optional title\n            if (_this.addTitleElement) {\n                SvgUtils.append(textContainer, \"title\").textContent = text;\n                textContainer.setAttribute(\"title\", text);\n            }\n            // create and transform text block group\n            var textBlockGroup = SvgUtils.append(textContainer, \"g\", \"text-area\");\n            textBlockGroup.setAttribute(\"transform\", \"translate(\" + transform.translate[0] + \",\" + transform.translate[1] + \")\" +\n                (\"rotate(\" + transform.rotate + \")\"));\n            return _this.createSvgLinePen(textBlockGroup);\n        };\n    }\n    SvgContext.prototype.setAddTitleElement = function (addTitleElement) {\n        this.addTitleElement = addTitleElement;\n    };\n    SvgContext.prototype.createSvgLinePen = function (textBlockGroup) {\n        return {\n            write: function (line, width, xAlign, xOffset, yOffset) {\n                xOffset += width * writers_1.Writer.XOffsetFactor[xAlign];\n                var element = SvgUtils.append(textBlockGroup, \"text\", \"text-line\");\n                element.textContent = line;\n                element.setAttribute(\"text-anchor\", SvgContext.AnchorMap[xAlign]);\n                element.setAttribute(\"transform\", \"translate(\" + xOffset + \",\" + yOffset + \")\");\n                element.setAttribute(\"y\", \"-0.25em\");\n            },\n        };\n    };\n    SvgContext.prototype.getTextElements = function (element) {\n        // if element is already a text element, return it\n        if (element.tagName === \"text\") {\n            var parentElement = element.parentElement;\n            if (parentElement == null) {\n                parentElement = element.parentNode;\n            }\n            // must be removed from parent since we re-add it on every measurement\n            parentElement.removeChild(element);\n            return {\n                containerElement: element,\n                parentElement: parentElement,\n                textElement: element,\n            };\n        }\n        // if element has a text element descendent, select it and return it\n        var selected = element.querySelector(\"text\");\n        if (selected != null) {\n            var parentElement = selected.parentElement;\n            if (parentElement == null) {\n                parentElement = selected.parentNode;\n            }\n            // must be removed from parent since we re-add it on every measurement\n            parentElement.removeChild(selected);\n            return {\n                containerElement: selected,\n                parentElement: parentElement,\n                textElement: selected,\n            };\n        }\n        // otherwise create a new text element\n        var created = SvgUtils.create(\"text\", this.className);\n        return {\n            containerElement: created,\n            parentElement: element,\n            textElement: created,\n        };\n    };\n    return SvgContext;\n}());\nSvgContext.AnchorMap = {\n    center: \"middle\",\n    left: \"start\",\n    right: \"end\",\n};\nexports.SvgContext = SvgContext;\n//# sourceMappingURL=svg.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/typesettable/build/src/contexts/svg.js\n// module id = 138\n// module chunks = 0","\"use strict\";\n/**\n * Copyright 2017-present Palantir Technologies, Inc. All rights reserved.\n * Licensed under the MIT License (the \"License\"); you may obtain a copy of the\n * license at https://github.com/palantir/typesettable/blob/develop/LICENSE\n */\n/* istanbul ignore next */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar utils_1 = require(\"../utils\");\nvar abstractMeasurer_1 = require(\"./abstractMeasurer\");\nvar cacheCharacterMeasurer_1 = require(\"./cacheCharacterMeasurer\");\nvar CacheMeasurer = (function (_super) {\n    __extends(CacheMeasurer, _super);\n    function CacheMeasurer(ruler) {\n        var _this = _super.call(this, ruler) || this;\n        _this.dimCache = new utils_1.Cache(function (s) {\n            return _this._measureNotFromCache(s);\n        });\n        return _this;\n    }\n    CacheMeasurer.prototype._measureNotFromCache = function (s) {\n        return _super.prototype.measure.call(this, s);\n    };\n    CacheMeasurer.prototype.measure = function (s) {\n        if (s === void 0) { s = abstractMeasurer_1.AbstractMeasurer.HEIGHT_TEXT; }\n        return this.dimCache.get(s);\n    };\n    CacheMeasurer.prototype.reset = function () {\n        this.dimCache.clear();\n        _super.prototype.reset.call(this);\n    };\n    return CacheMeasurer;\n}(cacheCharacterMeasurer_1.CacheCharacterMeasurer));\nexports.CacheMeasurer = CacheMeasurer;\n//# sourceMappingURL=cacheMeasurer.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/typesettable/build/src/measurers/cacheMeasurer.js\n// module id = 139\n// module chunks = 0","\"use strict\";\n/**\n * Copyright 2017-present Palantir Technologies, Inc. All rights reserved.\n * Licensed under the MIT License (the \"License\"); you may obtain a copy of the\n * license at https://github.com/palantir/typesettable/blob/develop/LICENSE\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar contexts_1 = require(\"./contexts\");\nvar measurers_1 = require(\"./measurers\");\nvar wrappers_1 = require(\"./wrappers\");\nvar writers_1 = require(\"./writers\");\n/**\n * This is a convenience interface for typesetting strings using the default\n * measurer/wrapper/writer setup.\n */\nvar Typesetter = (function () {\n    function Typesetter(context) {\n        this.context = context;\n        this.measurer = new measurers_1.CacheMeasurer(this.context);\n        this.wrapper = new wrappers_1.Wrapper();\n        this.writer = new writers_1.Writer(this.measurer, this.context, this.wrapper);\n    }\n    Typesetter.svg = function (element, className, addTitleElement) {\n        return new Typesetter(new contexts_1.SvgContext(element, className, addTitleElement));\n    };\n    Typesetter.canvas = function (ctx, lineHeight, style) {\n        return new Typesetter(new contexts_1.CanvasContext(ctx, lineHeight, style));\n    };\n    Typesetter.html = function (element, className, addTitle) {\n        return new Typesetter(new contexts_1.HtmlContext(element, className, addTitle));\n    };\n    /**\n     * Wraps the given string into the width/height and writes it into the\n     * canvas or SVG (depending on context).\n     *\n     * Delegates to `Writer.write` using the internal `ITypesetterContext`.\n     */\n    Typesetter.prototype.write = function (text, width, height, options, into) {\n        this.writer.write(text, width, height, options, into);\n    };\n    /**\n     * Clears the `Measurer`'s CacheMeasurer.\n     *\n     * Call this if your font style changee in SVG.\n     */\n    Typesetter.prototype.clearMeasurerCache = function () {\n        this.measurer.reset();\n    };\n    return Typesetter;\n}());\nexports.Typesetter = Typesetter;\n//# sourceMappingURL=typesetter.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/typesettable/build/src/typesetter.js\n// module id = 140\n// module chunks = 0","\"use strict\";\n/**\n * Copyright 2017-present Palantir Technologies, Inc. All rights reserved.\n * Licensed under the MIT License (the \"License\"); you may obtain a copy of the\n * license at https://github.com/palantir/typesettable/blob/develop/LICENSE\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Cache = (function () {\n    /**\n     * @constructor\n     *\n     * @param {string} compute The function whose results will be cached.\n     */\n    function Cache(compute) {\n        this.cache = {};\n        this.compute = compute;\n    }\n    /**\n     * Attempt to look up k in the cache, computing the result if it isn't\n     * found.\n     *\n     * @param {string} k The key to look up in the cache.\n     * @return {T} The value associated with k; the result of compute(k).\n     */\n    Cache.prototype.get = function (k) {\n        if (!this.cache.hasOwnProperty(k)) {\n            this.cache[k] = this.compute(k);\n        }\n        return this.cache[k];\n    };\n    /**\n     * Reset the cache empty.\n     *\n     * @return {Cache<T>} The calling Cache.\n     */\n    Cache.prototype.clear = function () {\n        this.cache = {};\n        return this;\n    };\n    return Cache;\n}());\nexports.Cache = Cache;\n//# sourceMappingURL=cache.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/typesettable/build/src/utils/cache.js\n// module id = 141\n// module chunks = 0","\"use strict\";\n/**\n * Copyright 2017-present Palantir Technologies, Inc. All rights reserved.\n * Licensed under the MIT License (the \"License\"); you may obtain a copy of the\n * license at https://github.com/palantir/typesettable/blob/develop/LICENSE\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Methods = (function () {\n    function Methods() {\n    }\n    /**\n     * Check if two arrays are equal by strict equality.\n     */\n    Methods.arrayEq = function (a, b) {\n        // Technically, null and undefined are arrays too\n        if (a == null || b == null) {\n            return a === b;\n        }\n        if (a.length !== b.length) {\n            return false;\n        }\n        for (var i = 0; i < a.length; i++) {\n            if (a[i] !== b[i]) {\n                return false;\n            }\n        }\n        return true;\n    };\n    /**\n     * @param {any} a Object to check against b for equality.\n     * @param {any} b Object to check against a for equality.\n     *\n     * @returns {boolean} whether or not two objects share the same keys, and\n     *          values associated with those keys. Values will be compared\n     *          with ===.\n     */\n    Methods.objEq = function (a, b) {\n        if (a == null || b == null) {\n            return a === b;\n        }\n        var keysA = Object.keys(a).sort();\n        var keysB = Object.keys(b).sort();\n        var valuesA = keysA.map(function (k) { return a[k]; });\n        var valuesB = keysB.map(function (k) { return b[k]; });\n        return Methods.arrayEq(keysA, keysB) && Methods.arrayEq(valuesA, valuesB);\n    };\n    Methods.strictEq = function (a, b) {\n        return a === b;\n    };\n    /**\n     * Shim for _.defaults\n     */\n    Methods.defaults = function (target) {\n        var objects = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            objects[_i - 1] = arguments[_i];\n        }\n        if (target == null) {\n            throw new TypeError(\"Cannot convert undefined or null to object\");\n        }\n        var result = Object(target);\n        objects.forEach(function (obj) {\n            if (obj != null) {\n                for (var key in obj) {\n                    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n                        result[key] = obj[key];\n                    }\n                }\n            }\n        });\n        return result;\n    };\n    return Methods;\n}());\nexports.Methods = Methods;\n//# sourceMappingURL=methods.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/typesettable/build/src/utils/methods.js\n// module id = 142\n// module chunks = 0","\"use strict\";\n/**\n * Copyright 2017-present Palantir Technologies, Inc. All rights reserved.\n * Licensed under the MIT License (the \"License\"); you may obtain a copy of the\n * license at https://github.com/palantir/typesettable/blob/develop/LICENSE\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar StringMethods = (function () {\n    function StringMethods() {\n    }\n    /**\n     * Treat all sequences of consecutive spaces as a single \" \".\n     */\n    StringMethods.combineWhitespace = function (str) {\n        return str.replace(/[ \\t]+/g, \" \");\n    };\n    StringMethods.isNotEmptyString = function (str) {\n        return str && str.trim() !== \"\";\n    };\n    StringMethods.trimStart = function (str, splitter) {\n        if (!str) {\n            return str;\n        }\n        var chars = str.split(\"\");\n        var reduceFunction = splitter ? function (s) { return s.split(splitter).some(StringMethods.isNotEmptyString); }\n            : StringMethods.isNotEmptyString;\n        return chars.reduce(function (s, c) { return reduceFunction(s + c) ? s + c : s; }, \"\");\n    };\n    StringMethods.trimEnd = function (str, c) {\n        if (!str) {\n            return str;\n        }\n        var reversedChars = str.split(\"\");\n        reversedChars.reverse();\n        reversedChars = StringMethods.trimStart(reversedChars.join(\"\"), c).split(\"\");\n        reversedChars.reverse();\n        return reversedChars.join(\"\");\n    };\n    return StringMethods;\n}());\nexports.StringMethods = StringMethods;\n//# sourceMappingURL=stringMethods.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/typesettable/build/src/utils/stringMethods.js\n// module id = 143\n// module chunks = 0","\"use strict\";\n/**\n * Copyright 2017-present Palantir Technologies, Inc. All rights reserved.\n * Licensed under the MIT License (the \"License\"); you may obtain a copy of the\n * license at https://github.com/palantir/typesettable/blob/develop/LICENSE\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Tokenizer = (function () {\n    function Tokenizer() {\n        this.WordDividerRegExp = new RegExp(\"\\\\W\");\n        this.WhitespaceRegExp = new RegExp(\"\\\\s\");\n    }\n    Tokenizer.prototype.tokenize = function (line) {\n        var _this = this;\n        return line.split(\"\").reduce(function (tokens, c) {\n            return tokens.slice(0, -1).concat(_this.shouldCreateNewToken(tokens[tokens.length - 1], c));\n        }, [\"\"]);\n    };\n    Tokenizer.prototype.shouldCreateNewToken = function (token, newCharacter) {\n        if (!token) {\n            return [newCharacter];\n        }\n        var lastCharacter = token[token.length - 1];\n        if (this.WhitespaceRegExp.test(lastCharacter) && this.WhitespaceRegExp.test(newCharacter)) {\n            return [token + newCharacter];\n        }\n        else if (this.WhitespaceRegExp.test(lastCharacter) || this.WhitespaceRegExp.test(newCharacter)) {\n            return [token, newCharacter];\n        }\n        else if (!(this.WordDividerRegExp.test(lastCharacter))) {\n            return [token + newCharacter];\n        }\n        else if (lastCharacter === newCharacter) {\n            return [token + newCharacter];\n        }\n        else {\n            return [token, newCharacter];\n        }\n    };\n    return Tokenizer;\n}());\nexports.Tokenizer = Tokenizer;\n//# sourceMappingURL=tokenizer.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/typesettable/build/src/utils/tokenizer.js\n// module id = 144\n// module chunks = 0","\"use strict\";\n/**\n * Copyright 2017-present Palantir Technologies, Inc. All rights reserved.\n * Licensed under the MIT License (the \"License\"); you may obtain a copy of the\n * license at https://github.com/palantir/typesettable/blob/develop/LICENSE\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar wrapper_1 = require(\"./wrapper\");\nvar SingleLineWrapper = (function (_super) {\n    __extends(SingleLineWrapper, _super);\n    function SingleLineWrapper() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    SingleLineWrapper.prototype.wrap = function (text, measurer, width, height) {\n        var _this = this;\n        if (height === void 0) { height = Infinity; }\n        var lines = text.split(\"\\n\");\n        if (lines.length > 1) {\n            throw new Error(\"SingleLineWrapper is designed to work only on single line\");\n        }\n        var wrapFN = function (w) { return _super.prototype.wrap.call(_this, text, measurer, w, height); };\n        var result = wrapFN(width);\n        if (result.noLines < 2) {\n            return result;\n        }\n        var left = 0;\n        var right = width;\n        for (var i = 0; i < SingleLineWrapper.NO_WRAP_ITERATIONS && right > left; ++i) {\n            var currentWidth = (right + left) / 2;\n            var currentResult = wrapFN(currentWidth);\n            if (this.areSameResults(result, currentResult)) {\n                right = currentWidth;\n                result = currentResult;\n            }\n            else {\n                left = currentWidth;\n            }\n        }\n        return result;\n    };\n    SingleLineWrapper.prototype.areSameResults = function (one, two) {\n        return one.noLines === two.noLines && one.truncatedText === two.truncatedText;\n    };\n    return SingleLineWrapper;\n}(wrapper_1.Wrapper));\nSingleLineWrapper.NO_WRAP_ITERATIONS = 5;\nexports.SingleLineWrapper = SingleLineWrapper;\n//# sourceMappingURL=singleLineWrapper.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/typesettable/build/src/wrappers/singleLineWrapper.js\n// module id = 145\n// module chunks = 0","\"use strict\";\n/**\n * Copyright 2017-present Palantir Technologies, Inc. All rights reserved.\n * Licensed under the MIT License (the \"License\"); you may obtain a copy of the\n * license at https://github.com/palantir/typesettable/blob/develop/LICENSE\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar utils_1 = require(\"../utils\");\nvar DEFAULT_WRITE_OPTIONS = {\n    textRotation: 0,\n    textShear: 0,\n    xAlign: \"left\",\n    yAlign: \"top\",\n};\nvar Writer = (function () {\n    function Writer(_measurer, _penFactory, _wrapper) {\n        this._measurer = _measurer;\n        this._penFactory = _penFactory;\n        this._wrapper = _wrapper;\n    }\n    Writer.prototype.measurer = function (newMeasurer) {\n        this._measurer = newMeasurer;\n        return this;\n    };\n    Writer.prototype.wrapper = function (newWrapper) {\n        this._wrapper = newWrapper;\n        return this;\n    };\n    Writer.prototype.penFactory = function (newPenFactory) {\n        this._penFactory = newPenFactory;\n        return this;\n    };\n    /**\n     * Writes the text into the container. If no container is specified, the pen's\n     * default container will be used.\n     */\n    Writer.prototype.write = function (text, width, height, options, container) {\n        if (options === void 0) { options = {}; }\n        // apply default options\n        options = utils_1.Methods.defaults({}, DEFAULT_WRITE_OPTIONS, options);\n        // validate input\n        if (Writer.SupportedRotation.indexOf(options.textRotation) === -1) {\n            throw new Error(\"unsupported rotation - \" + options.textRotation +\n                \". Supported rotations are \" + Writer.SupportedRotation.join(\", \"));\n        }\n        if (options.textShear != null && options.textShear < -80 || options.textShear > 80) {\n            throw new Error(\"unsupported shear angle - \" + options.textShear + \". Must be between -80 and 80\");\n        }\n        var orientHorizontally = Math.abs(Math.abs(options.textRotation) - 90) > 45;\n        var primaryDimension = orientHorizontally ? width : height;\n        var secondaryDimension = orientHorizontally ? height : width;\n        // compute shear parameters\n        var shearDegrees = options.textShear;\n        var shearRadians = shearDegrees * Math.PI / 180;\n        var lineHeight = this._measurer.measure().height;\n        var shearShift = lineHeight * Math.tan(shearRadians);\n        // When we apply text shear, the primary axis grows and the secondary axis\n        // shrinks, due to trigonometry. The text shear feature uses the normal\n        // wrapping logic with a subsituted bounding box of the corrected size\n        // (computed below). When rendering the wrapped lines, we rotate the text\n        // container by the text rotation angle AND the shear angle then carefully\n        // offset each one so that they are still aligned to the primary alignment\n        // option.\n        var shearCorrectedPrimaryDimension = primaryDimension / Math.cos(shearRadians) - Math.abs(shearShift);\n        var shearCorrectedSecondaryDimension = secondaryDimension * Math.cos(shearRadians);\n        // normalize and wrap text\n        var normalizedText = utils_1.StringMethods.combineWhitespace(text);\n        var wrappedText = this._wrapper ?\n            this._wrapper.wrap(normalizedText, this._measurer, shearCorrectedPrimaryDimension, shearCorrectedSecondaryDimension).wrappedText : normalizedText;\n        var lines = wrappedText.split(\"\\n\");\n        // correct the intial x/y offset of the text container accounting shear and alignment\n        var shearCorrectedXOffset = Writer.XOffsetFactor[options.xAlign] *\n            shearCorrectedPrimaryDimension * Math.sin(shearRadians);\n        var shearCorrectedYOffset = Writer.YOffsetFactor[options.yAlign] *\n            (shearCorrectedSecondaryDimension - lines.length * lineHeight);\n        var shearCorrection = shearCorrectedXOffset - shearCorrectedYOffset;\n        // compute transform\n        var translate = [0, 0];\n        var rotate = options.textRotation + shearDegrees;\n        switch (options.textRotation) {\n            case 90:\n                translate = [width + shearCorrection, 0];\n                break;\n            case -90:\n                translate = [-shearCorrection, height];\n                break;\n            case 180:\n                translate = [width, height + shearCorrection];\n                break;\n            default:\n                translate = [0, -shearCorrection];\n                break;\n        }\n        // create a new pen and write the lines\n        var linePen = this._penFactory.createPen(text, { translate: translate, rotate: rotate }, container);\n        this.writeLines(lines, linePen, shearCorrectedPrimaryDimension, lineHeight, shearShift, options.xAlign);\n        if (linePen.destroy != null) {\n            linePen.destroy();\n        }\n    };\n    Writer.prototype.writeLines = function (lines, linePen, width, lineHeight, shearShift, xAlign) {\n        lines.forEach(function (line, i) {\n            var xShearOffset = (shearShift > 0) ? (i + 1) * shearShift : (i) * shearShift;\n            linePen.write(line, width, xAlign, xShearOffset, (i + 1) * lineHeight);\n        });\n    };\n    return Writer;\n}());\nWriter.XOffsetFactor = {\n    center: 0.5,\n    left: 0,\n    right: 1,\n};\nWriter.YOffsetFactor = {\n    bottom: 1,\n    center: 0.5,\n    top: 0,\n};\nWriter.SupportedRotation = [-90, 0, 180, 90];\nexports.Writer = Writer;\n//# sourceMappingURL=writer.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/typesettable/build/src/writers/writer.js\n// module id = 146\n// module chunks = 0","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 147\n// module chunks = 0","module.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tif(!module.children) module.children = [];\r\n\t\tObject.defineProperty(module, \"loaded\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.l;\r\n\t\t\t}\r\n\t\t});\r\n\t\tObject.defineProperty(module, \"id\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.i;\r\n\t\t\t}\r\n\t\t});\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/module.js\n// module id = 148\n// module chunks = 0"],"sourceRoot":""}