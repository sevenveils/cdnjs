{"version":3,"sources":["webpack://pnp.sp/webpack/universalModuleDefinition","webpack://pnp.sp/webpack/bootstrap","webpack://pnp.sp/./build/packages-es5/common/src/adalclient.js","webpack://pnp.sp/./build/packages-es5/common/src/collections.js","webpack://pnp.sp/./build/packages-es5/common/src/libconfig.js","webpack://pnp.sp/./build/packages-es5/common/src/storage.js","webpack://pnp.sp/./build/packages-es5/common/index.js","webpack://pnp.sp/./node_modules/tslib/tslib.es6.js","webpack://pnp.sp/./build/packages-es5/common/src/util.js","webpack://pnp.sp/./build/packages-es5/sp/src/config/splibconfig.js","webpack://pnp.sp/./build/packages-es5/sp/src/utils/toabsoluteurl.js","webpack://pnp.sp/./build/packages-es5/common/src/netutil.js","webpack://pnp.sp/(webpack)/buildin/global.js","webpack://pnp.sp/./node_modules/adal-angular/dist/adal.min.js","webpack://pnp.sp/./build/packages-es5/logging/src/loglevel.js","webpack://pnp.sp/./build/packages-es5/logging/src/logger.js","webpack://pnp.sp/./build/packages-es5/logging/src/listeners.js","webpack://pnp.sp/./build/packages-es5/odata/src/caching.js","webpack://pnp.sp/./build/packages-es5/odata/src/parsers.js","webpack://pnp.sp/./build/packages-es5/odata/src/pipeline.js","webpack://pnp.sp/./build/packages-es5/odata/src/queryable.js","webpack://pnp.sp/./build/packages-es5/odata/src/odatabatch.js","webpack://pnp.sp/./build/packages-es5/sp/src/utils/extractweburl.js","webpack://pnp.sp/./build/packages-es5/sp/src/odata.js","webpack://pnp.sp/./build/packages-es5/sp/src/net/digestcache.js","webpack://pnp.sp/./build/packages-es5/sp/src/net/sphttpclient.js","webpack://pnp.sp/./build/packages-es5/sp/src/utils/metadata.js","webpack://pnp.sp/./build/packages-es5/sp/src/sharepointqueryable.js","webpack://pnp.sp/./build/packages-es5/sp/src/siteusers.js","webpack://pnp.sp/./build/packages-es5/sp/src/sitegroups.js","webpack://pnp.sp/./build/packages-es5/sp/src/types.js","webpack://pnp.sp/./build/packages-es5/sp/src/roles.js","webpack://pnp.sp/./build/packages-es5/sp/src/sharepointqueryablesecurable.js","webpack://pnp.sp/./build/packages-es5/sp/src/files.js","webpack://pnp.sp/./build/packages-es5/sp/src/sharepointqueryableshareable.js","webpack://pnp.sp/./build/packages-es5/sp/src/webparts.js","webpack://pnp.sp/./build/packages-es5/sp/src/folders.js","webpack://pnp.sp/./build/packages-es5/sp/src/contenttypes.js","webpack://pnp.sp/./build/packages-es5/sp/src/attachmentfiles.js","webpack://pnp.sp/./build/packages-es5/sp/src/views.js","webpack://pnp.sp/./build/packages-es5/sp/src/fields.js","webpack://pnp.sp/./build/packages-es5/sp/src/forms.js","webpack://pnp.sp/./build/packages-es5/sp/src/subscriptions.js","webpack://pnp.sp/./build/packages-es5/sp/src/usercustomactions.js","webpack://pnp.sp/./build/packages-es5/sp/src/lists.js","webpack://pnp.sp/./build/packages-es5/sp/src/comments.js","webpack://pnp.sp/./build/packages-es5/sp/src/items.js","webpack://pnp.sp/./build/packages-es5/sp/src/appcatalog.js","webpack://pnp.sp/./build/packages-es5/sp/src/clientsidepages.js","webpack://pnp.sp/./build/packages-es5/sp/src/batch.js","webpack://pnp.sp/./build/packages-es5/sp/src/features.js","webpack://pnp.sp/./build/packages-es5/sp/src/site.js","webpack://pnp.sp/./build/packages-es5/sp/src/navigation.js","webpack://pnp.sp/./build/packages-es5/sp/src/relateditems.js","webpack://pnp.sp/./build/packages-es5/sp/src/regionalsettings.js","webpack://pnp.sp/./build/packages-es5/sp/src/webs.js","webpack://pnp.sp/./build/packages-es5/sp/src/search.js","webpack://pnp.sp/./build/packages-es5/sp/src/social.js","webpack://pnp.sp/./build/packages-es5/sp/src/searchsuggest.js","webpack://pnp.sp/./build/packages-es5/sp/src/userprofiles.js","webpack://pnp.sp/./build/packages-es5/sp/src/sitescripts.js","webpack://pnp.sp/./build/packages-es5/sp/src/sitedesigns.js","webpack://pnp.sp/./build/packages-es5/sp/src/utilities.js","webpack://pnp.sp/./build/packages-es5/sp/src/hubsites.js","webpack://pnp.sp/./build/packages-es5/sp/src/rest.js","webpack://pnp.sp/./build/packages-es5/sp/index.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","getResource","url","parser","document","createElement","href","protocol","hostname","_super","AdalClient","clientId","tenant","redirectUri","_this","this","_displayCallback","_loginPromise","tslib_es6","fromSPFxContext","spfxContext","adalclient_SPFxAdalClient","fetch","options","util","Error","getToken","then","token","resource","Promise","resolve","reject","ensureAuthContext","_","login","_authContext","acquireToken","message","catch","adal_min","displayCall","navigateToLoginRequestUrl","getCachedUser","popupWindow","open","focus","pollTimer","setInterval","closed","undefined","clearInterval","URL","indexOf","handleWindowCallback","location","hash","close","e","_loginInProgress","netutil","SPFxAdalClient","context","aadTokenProviderFactory","getTokenProvider","provider","objectEntries","entries","keys","map","k","RuntimeConfig","RuntimeConfigImpl","_v","Map","set","extend","config","target","maps","_i","arguments","length","forEach","v","mergeMaps","objectToMap","configurable","storage_PnPClientStorageWrapper","PnPClientStorageWrapper","store","defaultTimeoutMinutes","enabled","test","enableCacheExpiration","cacheExpirationHandler","getItem","persistable","JSON","parse","Date","expiration","delete","put","expire","setItem","createPersistable","removeItem","getOrPut","deleteExpired","defaultTimeout","defaultCachingTimeoutSeconds","pnp","setTimeout","cacheExpirationIntervalMilliseconds","console","error","MemoryStorage","_store","size","clear","index","Array","from","data","PnPClientStorage","_local","_session","getStore","localStorage","sessionStorage","__webpack_exports__","__extends","__decorate","__awaiter","__generator","extendStatics","b","setPrototypeOf","__proto__","__","constructor","decorators","desc","getOwnPropertyDescriptor","Reflect","decorate","thisArg","_arguments","P","generator","fulfilled","step","next","rejected","result","done","apply","body","f","y","g","label","sent","trys","ops","verb","throw","return","iterator","op","TypeError","pop","push","getCtxCallback","method","params","dateAdd","date","interval","units","ret","toLowerCase","setFullYear","getFullYear","setMonth","getMonth","setDate","getDate","setTime","getTime","combine","paths","filter","path","stringIsNullOrEmpty","replace","join","getGUID","now","performance","Math","random","floor","toString","isFunc","cf","objectDefinedNotNull","obj","isArray","array","source","noOverwrite","check","getOwnPropertyNames","reduce","isUrlAbsolute","jsS","stringify","hOP","getHashCode","charCodeAt","setup","SPRuntimeConfig","_pnp_common__WEBPACK_IMPORTED_MODULE_0__","SPRuntimeConfigImpl","spPart","headers","baseUrl","pageContext","web","absoluteUrl","fetchClientFactory","global","toAbsoluteUrl","_config_splibconfig__WEBPACK_IMPORTED_MODULE_1__","candidateUrl","_spPageContextInfo","webAbsoluteUrl","webServerRelativeUrl","baseUrl_1","substr","mergeHeaders","mergeOptions","FetchClient","BearerTokenFetchClient","tslib__WEBPACK_IMPORTED_MODULE_0__","_util__WEBPACK_IMPORTED_MODULE_1__","Request","append","_token","Headers","Function","eval","AuthenticationContext","a","REQUEST_TYPE","LOGIN","RENEW_TOKEN","UNKNOWN","RESPONSE_TYPE","ID_TOKEN_TOKEN","TOKEN","CONSTANTS","ACCESS_TOKEN","EXPIRES_IN","ID_TOKEN","ERROR_DESCRIPTION","SESSION_STATE","ERROR","STORAGE","TOKEN_KEYS","ACCESS_TOKEN_KEY","EXPIRATION_KEY","STATE_LOGIN","STATE_RENEW","NONCE_IDTOKEN","USERNAME","IDTOKEN","LOGIN_REQUEST","LOGIN_ERROR","RENEW_STATUS","ANGULAR_LOGIN_REQUEST","RESOURCE_DELIMETER","CACHE_DELIMETER","LOADFRAME_TIMEOUT","TOKEN_RENEW_STATUS_CANCELED","TOKEN_RENEW_STATUS_COMPLETED","TOKEN_RENEW_STATUS_IN_PROGRESS","LOGGING_LEVEL","WARN","INFO","VERBOSE","LEVEL_STRING_MAP","0","1","2","3","POPUP_WIDTH","POPUP_HEIGHT","_singletonInstance","instance","callback","popUp","isAngular","_user","_activeRenewals","_acquireTokenInProgress","_renewStates","_callBackMappedToRenewStates","_callBacksMappedToRenewStates","_openedWindows","_requestType","_adalInstance","_cloneConfig","loginResource","split","postLogoutRedirectUri","anonymousEndpoints","loadFrameTimeout","Logging","piiLoggingEnabled","level","log","info","_guid","state","_idTokenNonce","_getItem","_saveItem","verbose","_getNavigateUrl","encodeURIComponent","registerCallback","_loginPopup","promptUser","_openPopup","screenLeft","screenX","screenTop","screenY","innerWidth","documentElement","clientWidth","h","innerHeight","clientHeight","j","warn","_handlePopupError","_broadcast","encodeURI","bubbles","cancelable","detail","createEvent","initCustomEvent","CustomEvent","Event","dispatchEvent","loginInProgress","_hasResource","_isEmpty","getCachedToken","expireOffsetSeconds","_now","_createUser","_renewToken","_addAdalFrame","_urlRemoveQueryStringParameter","_addHintParameters","verbosePii","src","_loadFrameTimeout","_renewIdToken","_urlContainsQueryStringParameter","RegExp","_loadFrame","extraQueryParameter","acquireTokenPopup","acquireTokenRedirect","infoPii","clearCache","clearCacheForResource","logOut","logOutUri","getUser","profile","sid","upn","_extractIdToken","aud","userName","email","_getHash","substring","isCallback","_deserialize","getLoginError","getRequestInfo","valid","parameters","stateMatch","stateResponse","requestType","_matchState","parent","_matchNonce","nonce","_getResourceFromState","saveTokenFromHash","error_description","_expiresIn","exp","getResourceForEndpoint","endpoints","_getHostFromUri","String","opener","_serialize","_addLibMetadata","_decodeJwt","JWSPayload","_base64DecodeStringUrlSafe","atob","decodeURIComponent","escape","_decode","charAt","fromCharCode","exec","header","JWSSig","_convertUrlSafeToRegularBase64EncodedString","slice","correlationId","_decimalToHex","crypto","msCrypto","getRandomValues","Uint8Array","parseInt","round","getElementById","opera","navigator","userAgent","setAttribute","style","visibility","position","width","height","borderWidth","getElementsByTagName","appendChild","insertAdjacentHTML","frames","cacheLocation","_supportsLocalStorage","_supportsSessionStorage","_libVersion","toUTCString","stack","errorPii","warnPii","inject","LogLevel","Logger","activeLogLevel","_instance","LoggerImpl","subscribe","listeners","listener","clearSubscribers","count","write","writeJSON","json","entry","err","subscribers","subscriber","ConsoleListener","msg","format","FunctionListener","caching_CachingOptions","CachingOptions","common","storeName","defaultCachingStore","storage","local","session","CachingParserWrapper","cacheOptions","response","cacheData","parsers_HttpRequestError","HttpRequestError","status","statusText","isHttpRequestError","init","clone","text","parsers_ODataParserBase","ODataParserBase","handleError","parseImpl","has","parseFloat","txt","parseODataJSON","ok","results","parsers_ODataDefaultParser","ODataDefaultParser","parsers_TextParser","TextParser","parsers_BlobParser","BlobParser","blob","parsers_JSONParser","JSONParser","parsers_BufferParser","BufferParser","arrayBuffer","buffer","LambdaParser","setResult","hasResult","pipeline","shift","pipe","requestId","promise","ctx","returnResult","isBatched","batch","addResolveBatchDependency","requestPipelineMethod","alwaysRun","propertyKey","descriptor","args","pipeline_PipelineMethods","PipelineMethods","logStart","requestAbsoluteUrl","caching","isCached","cachingOptions","batchDependency","hydrate","send","add","batchId","client","clientFactory","opts","logEnd","queryable_ODataQueryable","ODataQueryable","_batch","_batchDependency","inBatch","toUrl","_url","getCore","postCore","patchCore","deleteCore","putCore","reqImpl","hasBatch","addBatchDependency","addDependency","_clone","cloneSettings","includeBatch","Queryable","_query","_options","_parentUrl","_useCaching","_cachingOptions","_cloneParentWasCaching","_cloneParentCacheOptions","_requestPipeline","concat","pathPart","configure","configureFrom","usingCaching","globalCacheDisable","withPipeline","getRequestPipeline","toRequestContext","_0","odatabatch_ODataBatch","ODataBatch","_batchId","_reqs","_deps","_rDeps","id","toUpperCase","resolver","execute","all","executeImpl","extractWebUrl","odataUrlFrom","candidate","parts","__metadata","uri","odata_SPODataEntityParserImpl","SPODataEntityParserImpl","odata_SPODataEntityArrayParserImpl","SPODataEntityArrayParserImpl","spODataEntity","spODataEntityArray","CachedDigest","digests","digestcache_DigestCache","DigestCache","_httpClient","_digests","getDigest","webUrl","cachedDigest","fetchRaw","cache","credentials","Accept","Content-Type","splibconfig","GetContextWebInformation","newCachedDigest","FormDigestValue","seconds","FormDigestTimeoutSeconds","sphttpclient_SPHttpClient","SPHttpClient","_impl","_digestCache","digest","rawHeaders","retry","setRetry","delay","attempts","retryCount","retryContext","post","patch","metadata","type","sharepointqueryable_SharePointQueryable","SharePointQueryable","_forceCaching","lastIndexOf","query","as","toUrlAndQuery","aliasedParams","match","labelName","select","selects","expand","expands","getParent","parentUrl","additionalPath","dependencyDispose","toabsoluteurl","sharepointqueryable_SharePointQueryableCollection","SharePointQueryableCollection","orderBy","ascending","skip","top","sharepointqueryable_SharePointQueryableInstance","SharePointQueryableInstance","_update","mapper","props","X-HTTP-Method","_delete","_deleteWithETag","eTag","IF-Match","defaultPath","class_1","PrincipalType","siteusers_SiteUsers","SiteUsers","SiteUsers_1","getById","siteusers_SiteUser","getByEmail","getByLoginName","loginName","su","removeById","removeByLoginName","LoginName","siteusers_UserBase","UserBase","sitegroups_SiteGroups","SiteUser","update","user","siteusers_CurrentUser","CurrentUser","ControlMode","FieldTypes","DateTimeFieldFormatType","DateTimeFieldFriendlyFormatType","AddFieldOptions","CalendarType","UrlFieldFormatType","PermissionKind","types_PrincipalType","PrincipalSource","RoleType","PageType","SharingLinkKind","SharingRole","SharingOperationStatusCode","SPSharedObjectType","SharingDomainRestrictionMode","RenderListDataOptions","FieldUserSelectionMode","ChoiceFieldFormatType","UrlZone","SiteGroups","SiteGroups_1","sg","sitegroups_SiteGroup","properties","postBody","group","Id","getByName","groupName","SiteGroup","retGroup","roles_RoleAssignments","RoleAssignments","RoleAssignments_1","ra","roles_RoleAssignment","principalId","roleDefId","remove","RoleAssignment","roles_RoleDefinitionBindings","roles_RoleDefinitions","RoleDefinitions","roles_RoleDefinition","getByType","roleTypeKind","description","order","basePermissions","BasePermissions","Description","Name","Order","definition","RoleDefinition","retDef","RoleDefinitionBindings","CheckinType","WebPartsPersonalizationScope","MoveOperations","TemplateFileType","sharepointqueryablesecurable_SharePointQueryableSecurable","SharePointQueryableSecurable","getUserEffectivePermissions","q","GetUserEffectivePermissions","getCurrentUserEffectivePermissions","breakRoleInheritance","copyRoleAssignments","clearSubscopes","resetRoleInheritance","userHasPermissions","permission","perms","hasPermissions","currentUserHasPermissions","perm","FullMask","High","Low","num","sharepointqueryableshareable_SharePointQueryableShareable","SharePointQueryableShareable","getShareLink","kind","expString","toISOString","request","createLink","emailData","settings","linkKind","shareWith","loginNames","role","requireSignin","propagateAcl","userStr","Key","roleFilter","Edit","Contributor","Reader","def","includeAnonymousLinkInEmail","peoplePickerInput","roleValue","useSimplifiedRoles","emailBody","emailSubject","subject","sendEmail","shareObject","bypass","sendShareObjectRequest","getRoleValue","unshareObjectWeb","checkPermissions","recipients","getSharingInformation","getObjectSharingSettings","unshareObject","deleteLinkByKind","unshareLink","shareId","Guest","getShareObjectWeb","sharepointqueryableshareable_SharePointQueryableShareableWeb","SharePointQueryableShareableWeb","View","dependency","shareObjectRaw","sharepointqueryableshareable_SharePointQueryableShareableItem","SharePointQueryableShareableItem","OrganizationView","checkSharingPermissions","unshare","deleteSharingLinkByKind","sharepointqueryableshareable_FileFolderShared","FileFolderShared","getShareable","shareable","sharepointqueryableshareable_SharePointQueryableShareableFile","SharePointQueryableShareableFile","sharepointqueryableshareable_SharePointQueryableShareableFolder","SharePointQueryableShareableFolder","shareEverything","webparts_LimitedWebPartManager","LimitedWebPartManager","webparts_WebPartDefinitions","export","webPartId","import","xml","webPartXml","WebPartDefinitions","webparts_WebPartDefinition","getByControlId","WebPartDefinition","webparts_WebPart","saveChanges","moveTo","zoneId","zoneIndex","WebPart","folders_Folders","Folders","Folders_1","folders_Folder","folder","Folder","files_Files","recycle","listItemAllFields","items_Item","destUrl","_a","srcUrl","ServerRelativeUrl","webBaseUrl","hostUrl","methodUrl","contenttypes_ContentTypes","ContentTypes","ContentTypes_1","addAvailableContentType","contentTypeId","contentType","ct","contenttypes_ContentType","additionalSettings","assign","Group","StringValue","ContentType","contenttypes_FieldLinks","FieldLinks","fl","contenttypes_FieldLink","FieldLink","attachmentfiles_AttachmentFiles","AttachmentFiles","AttachmentFiles_1","attachmentfiles_AttachmentFile","content","file","addMultiple","files","chain","deleteMultiple","recycleMultiple","AttachmentFile","getText","getParsed","getBlob","getBuffer","getJSON","setContent","views_Views","Views","Views_1","views_View","getByTitle","title","personalView","PersonalView","Title","view","views_ViewFields","renderAsHtml","setViewXml","viewXml","ViewFields","ViewFields_1","getSchemaXml","fieldTitleOrInternalName","move","fieldInternalName","field","removeAll","fields_Fields","Fields","Fields_1","fields_Field","getByInternalNameOrTitle","createFieldAsXml","SchemaXml","fieldType","addText","maxLength","FieldTypeKind","MaxLength","addCalculated","formula","dateFormat","outputType","Text","DateFormat","Formula","OutputType","addDateTime","displayFormat","calendarType","friendlyDisplayFormat","DateOnly","Gregorian","Unspecified","DateTimeCalendarType","DisplayFormat","FriendlyDisplayFormat","addNumber","minValue","maxValue","MinimumValue","MaximumValue","addCurrency","currencyLocalId","CurrencyLocaleId","addMultilineText","numberOfLines","richText","restrictedMode","appendOnly","allowHyperlink","AllowHyperlink","AppendOnly","NumberOfLines","RestrictedMode","RichText","addUrl","Hyperlink","addUser","selectionMode","SelectionMode","addLookup","lookupListId","lookupFieldName","LookupFieldName","LookupListId","addChoice","choices","fillIn","Dropdown","Choices","EditFormat","FillInChoice","addMultiChoice","addBoolean","addDependentLookupField","displayName","primaryLookupFieldId","showField","addLocation","Field","setShowInDisplayForm","show","setShowInEditForm","setShowInNewForm","forms_Forms","Forms","forms_Form","Form","subscriptions_Subscriptions","Subscriptions","subscriptionId","subscriptions_Subscription","notificationUrl","expirationDate","clientState","expirationDateTime","subscription","Subscription","usercustomactions_UserCustomActions","UserCustomActions","UserCustomActions_1","uca","usercustomactions_UserCustomAction","action","UserCustomAction","lists_Lists","Lists","Lists_1","list","lists_List","template","enableContentTypes","addSettings","AllowContentTypes","BaseTemplate","ContentTypesEnabled","ensure","addOrUpdateSettings","created","ensureSiteAssetsLibrary","ensureSitePagesLibrary","List","items_Items","getView","viewId","retList","getChanges","getItemsByCAMLQuery","getListItemChangesSinceToken","Recycle","renderListData","RenderListData","renderListDataAsStream","overrideParameters","renderListFormData","itemId","formId","RenderListFormData","reserveListItemId","ReserveListItemId","getListItemEntityTypeFullName","ListItemEntityTypeFullName","addValidateUpdateItemUsingPath","formValues","decodedUrl","bNewDocumentUpdate","checkInComment","listItemCreateInfo","FolderPath","DecodedUrl","res","AddValidateUpdateItemUsingPath","comments_Comments","Comments","Comments_1","comments_Comment","Comment","comments_Replies","like","unlike","Replies","Replies_1","Items","Items_1","getItemByStringId","stringId","reverse","getPaged","items_PagedItemCollectionParser","getAll","requestSize","acceptHeader","items","itemsCollector","gatherer","last","hasNext","getNext","listItemEntityTypeFullName","removeDependency","ensureListItemEntityTypeName","listItemEntityType","item","candidatelistItemEntityTypeFullName","Item","files_File","items_ItemVersions","items_ItemUpdatedParser","getLikedBy","getWopiFrameUrl","GetWOPIFrameUrl","validateUpdateListItem","newDocumentUpdate","getLikedByInformation","ItemVersions","versionId","items_ItemVersion","ItemVersion","PagedItemCollection","nextUrl","PagedItemCollectionParser","_parent","__next","ItemUpdatedParser","odata.etag","Files","Files_1","shouldOverWrite","addChunked","progress","chunkSize","setContentChunked","addTemplateFile","fileUrl","templateFileType","File","files_Versions","approve","comment","cancelUpload","uploadId","checkin","checkinType","Major","checkout","copyTo","deny","getLimitedWebPartManager","scope","Shared","moveOperations","Overwrite","publish","undoCheckout","unpublish","binaryStringResponseBody","fileSize","blockCount","blockNumber","currentPointer","stage","totalBlocks","startUpload","_loop_1","pointer","continueUpload","finishUpload","fragment","StartUpload","fileOffset","ContinueUpload","Versions","Versions_1","files_Version","deleteAll","deleteById","recycleByID","deleteByLabel","recycleByLabel","restoreByLabel","Version","PromotedState","appcatalog_AppCatalog","AppCatalog","getAppById","appcatalog_App","filename","catalog","App","deploy","skipFeatureDeployment","retract","install","uninstall","upgrade","batch_SPBatch","SPBatch","ParseResponse","responses","statusRegExp","lines","line","trim","Response","requests","absoluteRequestUrl","batchBody","currentChangeSetId","reqInfo","castHeaders","batchOptions","features_Features","Features","Features_1","force","featdefScope","featureId","feature","features_Feature","Feature","deactivate","DefinitionId","site_Site","Site","Site_1","webs_Web","getRootWeb","rootWeb","Url","getContextInfo","SupportedSchemaVersions","getDocumentLibraries","absoluteWebUrl","GetDocumentLibraries","getWebUrlFromPageUrl","absolutePageUrl","GetWebUrlFromPageUrl","createBatch","openWebById","webId","fromUrl","joinHubSite","siteId","registerHubSite","unRegisterHubSite","createCommunicationSite","lcid","shareByEmailEnabled","classification","siteDesignId","hubSiteId","Classification","HubSiteId","Lcid","ShareByEmailEnabled","SiteDesignId","WebTemplate","WebTemplateExtensionId","createModernTeamSite","alias","isPublic","owners","optionalParams","CreationOptions","Owners","navigation_NavigationNodes","NavigationNodes","node","navigation_NavigationNode","visible","IsVisible","moveAfter","nodeId","previousNodeId","NavigationNode","navigation_Navigation","Navigation","navigation_NavigationService","NavigationService","getMenuState","menuNodeKey","depth","mapProviderName","customProperties","getMenuNodeKey","currentUrl","relateditems_RelatedItemManagerImpl","RelatedItemManagerImpl","RelatedItemManagerImpl_1","FromUrl","getRelatedItems","sourceListName","sourceItemId","SourceItemID","SourceListName","getPageOneRelatedItems","addSingleLink","sourceWebUrl","targetListName","targetItemID","targetWebUrl","tryAddReverseLink","SourceWebUrl","TargetItemID","TargetListName","TargetWebUrl","TryAddReverseLink","addSingleLinkToUrl","targetItemUrl","TargetItemUrl","addSingleLinkFromUrl","sourceItemUrl","targetItemId","SourceItemUrl","deleteSingleLink","tryDeleteReverseLink","TryDeleteReverseLink","regionalsettings_RegionalSettings","RegionalSettings","regionalsettings_InstalledLanguages","regionalsettings_TimeZone","regionalsettings_TimeZones","InstalledLanguages","TimeZone","TimeZone_1","utcToLocalTime","utcTime","dateIsoString","UTCToLocalTime","localTimeToUTC","localTime","getTimezoneOffset","LocalTimeToUTC","TimeZones","TimeZones_1","webs_Webs","Webs","Webs_1","language","inheritPermissions","Language","UseSamePermissionsAsParentSite","webs_WebInfos","WebInfos","Web","Web_1","getParentWeb","ParentWeb","getSubwebsFilteredForCurrentUser","nWebTemplateFilter","nConfigurationFilter","getFolderById","uniqueId","getFolderByServerRelativeUrl","folderRelativeUrl","getFolderByServerRelativePath","getFileById","getFileByServerRelativeUrl","fileRelativeUrl","getFileByServerRelativePath","getList","listRelativeUrl","applyTheme","colorPaletteUrl","fontSchemeUrl","backgroundImageUrl","shareGenerated","applyWebTemplate","ensureUser","logonName","availableWebTemplates","includeCrossLanugage","getCatalog","getUserById","mapToIcon","progId","getStorageEntity","setStorageEntity","comments","removeStorageEntity","getAppCatalog","getSiteCollectionAppCatalog","getClientSideWebParts","addClientSidePage","pageName","clientsidepages_ClientSidePage","addClientSidePageByPath","createDefaultAssociatedGroups","siteOwner","siteOwner2","groupNameSeed","hubSiteData","forceRefresh","syncHubSiteTheme","getNextOrder","collection","max","reindex","columns","controls","ClientSidePage","noInit","sections","commentsDisabled","_bannerImageDirty","initFrom","_pageSettings","controlType","pageSettingsSlice","isDefaultDescription","isDefaultThumbnail","_layoutPart","getDefaultLayoutPart","fromJSON","pageLayoutType","pageInitData","newPage","PageLayoutType","save","fromFile","load","dataVersion","instanceId","authors","layoutType","showPublishDate","showTopicHeader","textAlignment","topicHeader","serverProcessedContent","htmlStrings","searchablePlainTexts","imageSources","links","BannerImageUrl","imageSourceType","TopicHeader","addSection","section","clientsidepages_CanvasSection","pageData","canvasControls","CanvasContent1","layouts","LayoutWebpartsContent","setControls","CommentsDisabled","origImgUrl","site","imgFile","imgId","listId","UniqueId","ParentList","bannerImageUrl","imageSource","customMetadata","IsPageCheckedOutToCurrentUser","saveBody","AuthorByline","getCanvasContent1","getLayoutWebpartsContent","updater","if-match","discardPageCheckout","enableComments","setCommentsOn","disableComments","findControlById","findControl","predicate","copyPage","page","pageLayout","getControls","setBannerImage","bannerImageSourceType","translateX","translateY","altText","mergeColumnToTree","clientsidepages_CanvasColumn","part","clientsidepages_ClientSideWebpart","mergePartToTree","textData","clientsidepages_ClientSideText","innerHTML","canvasData","column","displayMode","emphasis","getEmphasisObj","control","zoneEmphasis","on","positionData","sectionFactor","sectionIndex","addColumn","addControl","listData","CanvasSection","_emphasis","_memId","_order","factor","defaultColumn","CanvasColumn","Default","_section","getControl","layoutIndex","ColumnControl","_column","onColumnChange","setData","ClientSideText","anchorComponentId","startsWith","controlIndex","col","addedFromPersistedData","editorType","ClientSideWebpart","fromComponentDef","webPartData","reservedHeight","reservedWidth","setProperties","getProperties","component","componendId","preconfiguredEntries","Manifest","default","funcs","search_props","toPropCase","str","$1","SearchQueryBuilder","queryText","Proxy","Querytext","self","proxy","pk","mappedPk","propKey","SortDirection","ReorderingRuleMatchType","QueryPropertyValueType","search_Search","Search","queryInit","parseQuery","HitHighlightedProperties","fixArrProp","Properties","RefinementFilters","ReorderingRules","SelectProperties","SortList","cacheKey","search_SearchResults","prop","toSearchQuery","SearchResults","rawResponse","_raw","_primary","postquery","RawSearchResults","ElapsedTime","PrimaryQueryResult","RelevantResults","RowCount","TotalRows","TotalRowsIncludingDuplicates","formatSearchResults","Table","Rows","getPage","pageNumber","pageSize","rows","RowLimit","StartRow","rawResults","tempResults_1","tempResult","cells","Cells","cell","Value","writable","SocialActorType","SocialActorTypes","SocialFollowResult","SocialStatusCode","SearchBuiltInSourceId","Documents","ItemsMatchingContentType","ItemsMatchingTag","ItemsRelatedToCurrentUser","ItemsWithSameKeywordAsThisItem","LocalPeopleResults","LocalReportsAndDataResults","LocalSharePointResults","LocalVideoResults","Pages","Pictures","Popular","RecentlyChangedItems","RecommendedItems","Wiki","searchsuggest_SearchSuggest","SearchSuggest","mapQueryToQueryString","suggest","PeopleNames","PersonalResults","Queries","querytext","querySetter","checkProp","sp","setProp","userprofiles_UserProfileQuery","UserProfileQuery","clientPeoplePickerQuery","userprofiles_ClientPeoplePickerQuery","profileLoader","userprofiles_ProfileLoader","amIFollowedBy","amIFollowing","getFollowedTags","maxCount","getFollowersFor","getPeopleFollowedBy","getPropertiesFor","getUserProfilePropertyFor","propertyName","hideSuggestion","isFollowing","follower","followee","setMyProfilePic","profilePicSource","reader","FileReader","onload","readAsArrayBuffer","Uint16Array","setSingleValueProfileProperty","accountName","propertyValue","setMultiValuedProfileProperty","propertyValues","createPersonalSiteEnqueueBulk","emails","ownerUserProfile","userProfile","createPersonalSite","interactiveRequest","shareAllSocialData","share","clientPeoplePickerResolveUser","queryParams","clientPeoplePickerSearchUser","ProfileLoader","ProfileLoader_1","emailIDs","ClientPeoplePickerQuery","ClientPeoplePickerQuery_1","createClientPeoplePickerQueryParametersRequestBody","ClientPeoplePickerResolveUser","ClientPeoplePickerSearchUser","social_SocialQuery","SocialQuery","SocialQuery_1","social_MySocialQuery","getFollowedSitesUri","FollowedSitesUri","getFollowedDocumentsUri","FollowedDocumentsUri","follow","actorInfo","createSocialActorInfoRequestBody","isFollowed","stopFollowing","actor","MySocialQuery","MySocialQuery_1","followed","types","Followed","followedCount","FollowedCount","followers","Followers","suggestions","Suggestions","sitescripts_SiteScripts","SiteScripts","methodName","getBaseUrl","getSiteScripts","createSiteScript","getSiteScriptMetadata","deleteSiteScript","updateSiteScript","siteScriptUpdateInfo","Content","updateInfo","sitedesigns_SiteDesigns","SiteDesigns","createSiteDesign","creationInfo","applySiteDesign","getSiteDesigns","getSiteDesignMetadata","updateSiteDesign","deleteSiteDesign","getSiteDesignRights","grantSiteDesignRights","principalNames","grantedRights","revokeSiteDesignRights","utilities_UtilityMethod","UtilityMethod","excute","Body","From","Subject","To","CC","BCC","AdditionalHeaders","getCurrentUserEmailAddresses","GetCurrentUserEmailAddresses","resolvePrincipal","input","scopes","sources","inputIsEmailOnly","addToUserInfoList","matchUserInfoList","ResolvePrincipalInCurrentContext","searchPrincipals","SearchPrincipalsUsingContextWeb","createEmailBodyForInvitation","pageAddress","CreateEmailBodyForInvitation","expandGroupsToPrincipals","inputs","ExpandGroupsToPrincipals","createWikiPage","CreateWikiPageInContextWeb","containsInvalidFileFolderChars","onPremise","InvalidFileFolderNameCharsOnPremiseRegex","InvalidFileFolderNameCharsOnlineRegex","stripInvalidFileFolderChars","replacer","hubsites_HubSites","HubSites","hubsites_HubSite","HubSite","rest_SPRest","SPRest","_baseUrl","searchSuggest","finalQuery","search","searchWithCaching","getTenantAppCatalogWeb","CorporateCatalogUrl","fm","rest_sp"],"mappings":"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","file":"sp.es5.umd.bundle.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"pnp.sp\"] = factory();\n\telse\n\t\troot[\"pnp.sp\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 8);\n","import * as tslib_1 from \"tslib\";\r\nimport { BearerTokenFetchClient } from \"./netutil\";\r\nimport { isUrlAbsolute } from \"./util\";\r\n// @ts-ignore\r\nimport * as adal from \"adal-angular/dist/adal.min.js\";\r\n/**\r\n * Parses out the root of the request url to use as the resource when getting the token\r\n *\r\n * After: https://gist.github.com/jlong/2428561\r\n * @param url The url to parse\r\n */\r\nfunction getResource(url) {\r\n    var parser = document.createElement(\"a\");\r\n    parser.href = url;\r\n    return parser.protocol + \"//\" + parser.hostname;\r\n}\r\n/**\r\n * Azure AD Client for use in the browser\r\n */\r\nvar AdalClient = /** @class */ (function (_super) {\r\n    tslib_1.__extends(AdalClient, _super);\r\n    /**\r\n     * Creates a new instance of AdalClient\r\n     * @param clientId Azure App Id\r\n     * @param tenant Office 365 tenant (Ex: {tenant}.onmicrosoft.com)\r\n     * @param redirectUri The redirect url used to authenticate the\r\n     */\r\n    function AdalClient(clientId, tenant, redirectUri) {\r\n        var _this = _super.call(this, null) || this;\r\n        _this.clientId = clientId;\r\n        _this.tenant = tenant;\r\n        _this.redirectUri = redirectUri;\r\n        _this._displayCallback = null;\r\n        _this._loginPromise = null;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Creates a new AdalClient using the values of the supplied SPFx context (requires SPFx >= 1.6)\r\n     *\r\n     * @param spfxContext Current SPFx context\r\n     * @description Using this method requires that the features described in this article\r\n     * https://docs.microsoft.com/en-us/sharepoint/dev/spfx/use-aadhttpclient are activated in the tenant.\r\n     */\r\n    AdalClient.fromSPFxContext = function (spfxContext) {\r\n        return new SPFxAdalClient(spfxContext);\r\n    };\r\n    /**\r\n     * Conducts the fetch opertation against the AAD secured resource\r\n     *\r\n     * @param url Absolute URL for the request\r\n     * @param options Any fetch options passed to the underlying fetch implementation\r\n     */\r\n    AdalClient.prototype.fetch = function (url, options) {\r\n        var _this = this;\r\n        if (!isUrlAbsolute(url)) {\r\n            throw Error(\"You must supply absolute urls to AdalClient.fetch.\");\r\n        }\r\n        // the url we are calling is the resource\r\n        return this.getToken(getResource(url)).then(function (token) {\r\n            _this.token = token;\r\n            return _super.prototype.fetch.call(_this, url, options);\r\n        });\r\n    };\r\n    /**\r\n     * Gets a token based on the current user\r\n     *\r\n     * @param resource The resource for which we are requesting a token\r\n     */\r\n    AdalClient.prototype.getToken = function (resource) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            _this.ensureAuthContext().then(function (_) { return _this.login(); }).then(function (_) {\r\n                AdalClient._authContext.acquireToken(resource, function (message, token) {\r\n                    if (message) {\r\n                        return reject(Error(message));\r\n                    }\r\n                    resolve(token);\r\n                });\r\n            }).catch(reject);\r\n        });\r\n    };\r\n    /**\r\n     * Ensures we have created and setup the adal AuthenticationContext instance\r\n     */\r\n    AdalClient.prototype.ensureAuthContext = function () {\r\n        var _this = this;\r\n        return new Promise(function (resolve) {\r\n            if (AdalClient._authContext === null) {\r\n                AdalClient._authContext = adal.inject({\r\n                    clientId: _this.clientId,\r\n                    displayCall: function (url) {\r\n                        if (_this._displayCallback) {\r\n                            _this._displayCallback(url);\r\n                        }\r\n                    },\r\n                    navigateToLoginRequestUrl: false,\r\n                    redirectUri: _this.redirectUri,\r\n                    tenant: _this.tenant,\r\n                });\r\n            }\r\n            resolve();\r\n        });\r\n    };\r\n    /**\r\n     * Ensures the current user is logged in\r\n     */\r\n    AdalClient.prototype.login = function () {\r\n        var _this = this;\r\n        if (this._loginPromise) {\r\n            return this._loginPromise;\r\n        }\r\n        this._loginPromise = new Promise(function (resolve, reject) {\r\n            if (AdalClient._authContext.getCachedUser()) {\r\n                return resolve();\r\n            }\r\n            _this._displayCallback = function (url) {\r\n                var popupWindow = window.open(url, \"login\", \"width=483, height=600\");\r\n                if (!popupWindow) {\r\n                    return reject(Error(\"Could not open pop-up window for auth. Likely pop-ups are blocked by the browser.\"));\r\n                }\r\n                if (popupWindow && popupWindow.focus) {\r\n                    popupWindow.focus();\r\n                }\r\n                var pollTimer = window.setInterval(function () {\r\n                    if (!popupWindow || popupWindow.closed || popupWindow.closed === undefined) {\r\n                        window.clearInterval(pollTimer);\r\n                    }\r\n                    try {\r\n                        if (popupWindow.document.URL.indexOf(_this.redirectUri) !== -1) {\r\n                            window.clearInterval(pollTimer);\r\n                            AdalClient._authContext.handleWindowCallback(popupWindow.location.hash);\r\n                            popupWindow.close();\r\n                            resolve();\r\n                        }\r\n                    }\r\n                    catch (e) {\r\n                        reject(e);\r\n                    }\r\n                }, 30);\r\n            };\r\n            // this triggers the login process\r\n            _this.ensureAuthContext().then(function (_) {\r\n                AdalClient._authContext._loginInProgress = false;\r\n                AdalClient._authContext.login();\r\n                _this._displayCallback = null;\r\n            });\r\n        });\r\n        return this._loginPromise;\r\n    };\r\n    /**\r\n     * Our auth context\r\n     */\r\n    AdalClient._authContext = null;\r\n    return AdalClient;\r\n}(BearerTokenFetchClient));\r\nexport { AdalClient };\r\n/**\r\n * Client wrapping the aadTokenProvider available from SPFx >= 1.6\r\n */\r\nvar SPFxAdalClient = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SPFxAdalClient, _super);\r\n    /**\r\n     *\r\n     * @param context provide the appropriate SPFx Context object\r\n     */\r\n    function SPFxAdalClient(context) {\r\n        var _this = _super.call(this, null) || this;\r\n        _this.context = context;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Executes a fetch request using the supplied url and options\r\n     *\r\n     * @param url Absolute url of the request\r\n     * @param options Any options\r\n     */\r\n    SPFxAdalClient.prototype.fetch = function (url, options) {\r\n        var _this = this;\r\n        return this.getToken(getResource(url)).then(function (token) {\r\n            _this.token = token;\r\n            return _super.prototype.fetch.call(_this, url, options);\r\n        });\r\n    };\r\n    /**\r\n     * Gets an AAD token for the provided resource using the SPFx AADTokenProvider\r\n     *\r\n     * @param resource Resource for which a token is to be requested (ex: https://graph.microsoft.com)\r\n     */\r\n    SPFxAdalClient.prototype.getToken = function (resource) {\r\n        return this.context.aadTokenProviderFactory.getTokenProvider().then(function (provider) {\r\n            return provider.getToken(resource);\r\n        });\r\n    };\r\n    return SPFxAdalClient;\r\n}(BearerTokenFetchClient));\r\nexport { SPFxAdalClient };\r\n//# sourceMappingURL=adalclient.js.map","import { isFunc } from \"./util\";\r\n/**\r\n * Used to calculate the object properties, with polyfill if needed\r\n */\r\nvar objectEntries = isFunc(Object.entries) ? Object.entries : function (o) { return Object.keys(o).map(function (k) { return [k, o[k]]; }); };\r\n/**\r\n * Converts the supplied object to a map\r\n *\r\n * @param o The object to map\r\n */\r\nexport function objectToMap(o) {\r\n    if (o !== undefined && o !== null) {\r\n        return new Map(objectEntries(o));\r\n    }\r\n    return new Map();\r\n}\r\n/**\r\n * Merges to Map instances together, overwriting values in target with matching keys, last in wins\r\n *\r\n * @param target map into which the other maps are merged\r\n * @param maps One or more maps to merge into the target\r\n */\r\nexport function mergeMaps(target) {\r\n    var maps = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        maps[_i - 1] = arguments[_i];\r\n    }\r\n    for (var i = 0; i < maps.length; i++) {\r\n        maps[i].forEach(function (v, k) {\r\n            target.set(k, v);\r\n        });\r\n    }\r\n    return target;\r\n}\r\n//# sourceMappingURL=collections.js.map","import { mergeMaps, objectToMap } from \"./collections\";\r\nexport function setup(config) {\r\n    RuntimeConfig.extend(config);\r\n}\r\n// lable mapping for known config values\r\nvar s = [\r\n    \"defaultCachingStore\",\r\n    \"defaultCachingTimeoutSeconds\",\r\n    \"globalCacheDisable\",\r\n    \"enableCacheExpiration\",\r\n    \"cacheExpirationIntervalMilliseconds\",\r\n    \"spfxContext\",\r\n];\r\nvar RuntimeConfigImpl = /** @class */ (function () {\r\n    function RuntimeConfigImpl(_v) {\r\n        if (_v === void 0) { _v = new Map(); }\r\n        this._v = _v;\r\n        // setup defaults\r\n        this._v.set(s[0], \"session\");\r\n        this._v.set(s[1], 60);\r\n        this._v.set(s[2], false);\r\n        this._v.set(s[3], false);\r\n        this._v.set(s[4], 750);\r\n        this._v.set(s[5], null);\r\n    }\r\n    /**\r\n     *\r\n     * @param config The set of properties to add to the globa configuration instance\r\n     */\r\n    RuntimeConfigImpl.prototype.extend = function (config) {\r\n        this._v = mergeMaps(this._v, objectToMap(config));\r\n    };\r\n    RuntimeConfigImpl.prototype.get = function (key) {\r\n        return this._v.get(key);\r\n    };\r\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"defaultCachingStore\", {\r\n        get: function () {\r\n            return this.get(s[0]);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"defaultCachingTimeoutSeconds\", {\r\n        get: function () {\r\n            return this.get(s[1]);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"globalCacheDisable\", {\r\n        get: function () {\r\n            return this.get(s[2]);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"enableCacheExpiration\", {\r\n        get: function () {\r\n            return this.get(s[3]);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"cacheExpirationIntervalMilliseconds\", {\r\n        get: function () {\r\n            return this.get(s[4]);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"spfxContext\", {\r\n        get: function () {\r\n            return this.get(s[5]);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return RuntimeConfigImpl;\r\n}());\r\nexport { RuntimeConfigImpl };\r\nvar _runtimeConfig = new RuntimeConfigImpl();\r\nexport var RuntimeConfig = _runtimeConfig;\r\n//# sourceMappingURL=libconfig.js.map","import { dateAdd, getCtxCallback, jsS, objectDefinedNotNull } from \"./util\";\r\nimport { RuntimeConfig } from \"./libconfig\";\r\n/**\r\n * A wrapper class to provide a consistent interface to browser based storage\r\n *\r\n */\r\nvar PnPClientStorageWrapper = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of the PnPClientStorageWrapper class\r\n     *\r\n     * @constructor\r\n     */\r\n    function PnPClientStorageWrapper(store, defaultTimeoutMinutes) {\r\n        if (defaultTimeoutMinutes === void 0) { defaultTimeoutMinutes = -1; }\r\n        this.store = store;\r\n        this.defaultTimeoutMinutes = defaultTimeoutMinutes;\r\n        this.enabled = this.test();\r\n        // if the cache timeout is enabled call the handler\r\n        // this will clear any expired items and set the timeout function\r\n        if (RuntimeConfig.enableCacheExpiration) {\r\n            this.cacheExpirationHandler();\r\n        }\r\n    }\r\n    /**\r\n     * Get a value from storage, or null if that value does not exist\r\n     *\r\n     * @param key The key whose value we want to retrieve\r\n     */\r\n    PnPClientStorageWrapper.prototype.get = function (key) {\r\n        if (!this.enabled) {\r\n            return null;\r\n        }\r\n        var o = this.store.getItem(key);\r\n        if (!objectDefinedNotNull(o)) {\r\n            return null;\r\n        }\r\n        var persistable = JSON.parse(o);\r\n        if (new Date(persistable.expiration) <= new Date()) {\r\n            this.delete(key);\r\n            return null;\r\n        }\r\n        else {\r\n            return persistable.value;\r\n        }\r\n    };\r\n    /**\r\n     * Adds a value to the underlying storage\r\n     *\r\n     * @param key The key to use when storing the provided value\r\n     * @param o The value to store\r\n     * @param expire Optional, if provided the expiration of the item, otherwise the default is used\r\n     */\r\n    PnPClientStorageWrapper.prototype.put = function (key, o, expire) {\r\n        if (this.enabled) {\r\n            this.store.setItem(key, this.createPersistable(o, expire));\r\n        }\r\n    };\r\n    /**\r\n     * Deletes a value from the underlying storage\r\n     *\r\n     * @param key The key of the pair we want to remove from storage\r\n     */\r\n    PnPClientStorageWrapper.prototype.delete = function (key) {\r\n        if (this.enabled) {\r\n            this.store.removeItem(key);\r\n        }\r\n    };\r\n    /**\r\n     * Gets an item from the underlying storage, or adds it if it does not exist using the supplied getter function\r\n     *\r\n     * @param key The key to use when storing the provided value\r\n     * @param getter A function which will upon execution provide the desired value\r\n     * @param expire Optional, if provided the expiration of the item, otherwise the default is used\r\n     */\r\n    PnPClientStorageWrapper.prototype.getOrPut = function (key, getter, expire) {\r\n        var _this = this;\r\n        if (!this.enabled) {\r\n            return getter();\r\n        }\r\n        var o = this.get(key);\r\n        if (o === null) {\r\n            return getter().then(function (d) {\r\n                _this.put(key, d, expire);\r\n                return d;\r\n            });\r\n        }\r\n        return Promise.resolve(o);\r\n    };\r\n    /**\r\n     * Deletes any expired items placed in the store by the pnp library, leaves other items untouched\r\n     */\r\n    PnPClientStorageWrapper.prototype.deleteExpired = function () {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            if (!_this.enabled) {\r\n                resolve();\r\n            }\r\n            try {\r\n                for (var i = 0; i < _this.store.length; i++) {\r\n                    var key = _this.store.key(i);\r\n                    if (key !== null) {\r\n                        // test the stored item to see if we stored it\r\n                        if (/[\"|']?pnp[\"|']? ?: ?1/i.test(_this.store.getItem(key))) {\r\n                            // get those items as get will delete from cache if they are expired\r\n                            _this.get(key);\r\n                        }\r\n                    }\r\n                }\r\n                resolve();\r\n            }\r\n            catch (e) {\r\n                reject(e);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Used to determine if the wrapped storage is available currently\r\n     */\r\n    PnPClientStorageWrapper.prototype.test = function () {\r\n        var str = \"t\";\r\n        try {\r\n            this.store.setItem(str, str);\r\n            this.store.removeItem(str);\r\n            return true;\r\n        }\r\n        catch (e) {\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * Creates the persistable to store\r\n     */\r\n    PnPClientStorageWrapper.prototype.createPersistable = function (o, expire) {\r\n        if (expire === undefined) {\r\n            // ensure we are by default inline with the global library setting\r\n            var defaultTimeout = RuntimeConfig.defaultCachingTimeoutSeconds;\r\n            if (this.defaultTimeoutMinutes > 0) {\r\n                defaultTimeout = this.defaultTimeoutMinutes * 60;\r\n            }\r\n            expire = dateAdd(new Date(), \"second\", defaultTimeout);\r\n        }\r\n        return jsS({ pnp: 1, expiration: expire, value: o });\r\n    };\r\n    /**\r\n     * Deletes expired items added by this library in this.store and sets a timeout to call itself\r\n     */\r\n    PnPClientStorageWrapper.prototype.cacheExpirationHandler = function () {\r\n        var _this = this;\r\n        this.deleteExpired().then(function (_) {\r\n            // call ourself in the future\r\n            setTimeout(getCtxCallback(_this, _this.cacheExpirationHandler), RuntimeConfig.cacheExpirationIntervalMilliseconds);\r\n        }).catch(function (e) {\r\n            console.error(e);\r\n        });\r\n    };\r\n    return PnPClientStorageWrapper;\r\n}());\r\nexport { PnPClientStorageWrapper };\r\n/**\r\n * A thin implementation of in-memory storage for use in nodejs\r\n */\r\nvar MemoryStorage = /** @class */ (function () {\r\n    function MemoryStorage(_store) {\r\n        if (_store === void 0) { _store = new Map(); }\r\n        this._store = _store;\r\n    }\r\n    Object.defineProperty(MemoryStorage.prototype, \"length\", {\r\n        get: function () {\r\n            return this._store.size;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    MemoryStorage.prototype.clear = function () {\r\n        this._store.clear();\r\n    };\r\n    MemoryStorage.prototype.getItem = function (key) {\r\n        return this._store.get(key);\r\n    };\r\n    MemoryStorage.prototype.key = function (index) {\r\n        return Array.from(this._store)[index][0];\r\n    };\r\n    MemoryStorage.prototype.removeItem = function (key) {\r\n        this._store.delete(key);\r\n    };\r\n    MemoryStorage.prototype.setItem = function (key, data) {\r\n        this._store.set(key, data);\r\n    };\r\n    return MemoryStorage;\r\n}());\r\n/**\r\n * A class that will establish wrappers for both local and session storage\r\n */\r\nvar PnPClientStorage = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of the PnPClientStorage class\r\n     *\r\n     * @constructor\r\n     */\r\n    function PnPClientStorage(_local, _session) {\r\n        if (_local === void 0) { _local = null; }\r\n        if (_session === void 0) { _session = null; }\r\n        this._local = _local;\r\n        this._session = _session;\r\n    }\r\n    Object.defineProperty(PnPClientStorage.prototype, \"local\", {\r\n        /**\r\n         * Provides access to the local storage of the browser\r\n         */\r\n        get: function () {\r\n            if (this._local === null) {\r\n                this._local = this.getStore(\"local\");\r\n            }\r\n            return this._local;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PnPClientStorage.prototype, \"session\", {\r\n        /**\r\n         * Provides access to the session storage of the browser\r\n         */\r\n        get: function () {\r\n            if (this._session === null) {\r\n                this._session = this.getStore(\"session\");\r\n            }\r\n            return this._session;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    PnPClientStorage.prototype.getStore = function (name) {\r\n        if (name === \"local\") {\r\n            return new PnPClientStorageWrapper(typeof (localStorage) === \"undefined\" ? new MemoryStorage() : localStorage);\r\n        }\r\n        return new PnPClientStorageWrapper(typeof (sessionStorage) === \"undefined\" ? new MemoryStorage() : sessionStorage);\r\n    };\r\n    return PnPClientStorage;\r\n}());\r\nexport { PnPClientStorage };\r\n//# sourceMappingURL=storage.js.map","export * from \"./src/common\";\r\n//# sourceMappingURL=index.js.map","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/**\r\n * Gets a callback function which will maintain context across async calls.\r\n * Allows for the calling pattern getCtxCallback(thisobj, method, methodarg1, methodarg2, ...)\r\n *\r\n * @param context The object that will be the 'this' value in the callback\r\n * @param method The method to which we will apply the context and parameters\r\n * @param params Optional, additional arguments to supply to the wrapped method when it is invoked\r\n */\r\nexport function getCtxCallback(context, method) {\r\n    var params = [];\r\n    for (var _i = 2; _i < arguments.length; _i++) {\r\n        params[_i - 2] = arguments[_i];\r\n    }\r\n    return function () {\r\n        method.apply(context, params);\r\n    };\r\n}\r\n/**\r\n * Adds a value to a date\r\n *\r\n * @param date The date to which we will add units, done in local time\r\n * @param interval The name of the interval to add, one of: ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second']\r\n * @param units The amount to add to date of the given interval\r\n *\r\n * http://stackoverflow.com/questions/1197928/how-to-add-30-minutes-to-a-javascript-date-object\r\n */\r\nexport function dateAdd(date, interval, units) {\r\n    var ret = new Date(date); // don't change original date\r\n    switch (interval.toLowerCase()) {\r\n        case \"year\":\r\n            ret.setFullYear(ret.getFullYear() + units);\r\n            break;\r\n        case \"quarter\":\r\n            ret.setMonth(ret.getMonth() + 3 * units);\r\n            break;\r\n        case \"month\":\r\n            ret.setMonth(ret.getMonth() + units);\r\n            break;\r\n        case \"week\":\r\n            ret.setDate(ret.getDate() + 7 * units);\r\n            break;\r\n        case \"day\":\r\n            ret.setDate(ret.getDate() + units);\r\n            break;\r\n        case \"hour\":\r\n            ret.setTime(ret.getTime() + units * 3600000);\r\n            break;\r\n        case \"minute\":\r\n            ret.setTime(ret.getTime() + units * 60000);\r\n            break;\r\n        case \"second\":\r\n            ret.setTime(ret.getTime() + units * 1000);\r\n            break;\r\n        default:\r\n            ret = undefined;\r\n            break;\r\n    }\r\n    return ret;\r\n}\r\n/**\r\n * Combines an arbitrary set of paths ensuring and normalizes the slashes\r\n *\r\n * @param paths 0 to n path parts to combine\r\n */\r\nexport function combine() {\r\n    var paths = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        paths[_i] = arguments[_i];\r\n    }\r\n    return paths\r\n        .filter(function (path) { return !stringIsNullOrEmpty(path); })\r\n        .map(function (path) { return path.replace(/^[\\\\|\\/]/, \"\").replace(/[\\\\|\\/]$/, \"\"); })\r\n        .join(\"/\")\r\n        .replace(/\\\\/g, \"/\");\r\n}\r\n/**\r\n * Gets a random string of chars length\r\n *\r\n * https://stackoverflow.com/questions/1349404/generate-random-string-characters-in-javascript\r\n *\r\n * @param chars The length of the random string to generate\r\n */\r\nexport function getRandomString(chars) {\r\n    var text = new Array(chars);\r\n    var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n    for (var i = 0; i < chars; i++) {\r\n        text[i] = possible.charAt(Math.floor(Math.random() * possible.length));\r\n    }\r\n    return text.join(\"\");\r\n}\r\n/**\r\n * Gets a random GUID value\r\n *\r\n * http://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\r\n * https://stackoverflow.com/a/8809472 updated to prevent collisions.\r\n */\r\n/* tslint:disable no-bitwise */\r\nexport function getGUID() {\r\n    var d = Date.now();\r\n    if (typeof performance !== \"undefined\" && typeof performance.now === \"function\") {\r\n        d += performance.now(); // use high-precision timer if available\r\n    }\r\n    var guid = \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function (c) {\r\n        var r = (d + Math.random() * 16) % 16 | 0;\r\n        d = Math.floor(d / 16);\r\n        return (c === \"x\" ? r : (r & 0x3 | 0x8)).toString(16);\r\n    });\r\n    return guid;\r\n}\r\n/* tslint:enable */\r\n/**\r\n * Determines if a given value is a function\r\n *\r\n * @param cf The thing to test for functionness\r\n */\r\nexport function isFunc(cf) {\r\n    return typeof cf === \"function\";\r\n}\r\n/**\r\n * Determines if an object is both defined and not null\r\n * @param obj Object to test\r\n */\r\nexport function objectDefinedNotNull(obj) {\r\n    return typeof obj !== \"undefined\" && obj !== null;\r\n}\r\n/**\r\n * @returns whether the provided parameter is a JavaScript Array or not.\r\n*/\r\nexport function isArray(array) {\r\n    if (Array.isArray) {\r\n        return Array.isArray(array);\r\n    }\r\n    return array && typeof array.length === \"number\" && array.constructor === Array;\r\n}\r\n/**\r\n * Provides functionality to extend the given object by doing a shallow copy\r\n *\r\n * @param target The object to which properties will be copied\r\n * @param source The source object from which properties will be copied\r\n * @param noOverwrite If true existing properties on the target are not overwritten from the source\r\n * @param filter If provided allows additional filtering on what properties are copied (propName: string) => boolean\r\n *\r\n */\r\nexport function extend(target, source, noOverwrite, filter) {\r\n    if (noOverwrite === void 0) { noOverwrite = false; }\r\n    if (filter === void 0) { filter = function () { return true; }; }\r\n    if (!objectDefinedNotNull(source)) {\r\n        return target;\r\n    }\r\n    // ensure we don't overwrite things we don't want overwritten\r\n    var check = noOverwrite ? function (o, i) { return !(i in o); } : function () { return true; };\r\n    // final filter we will use\r\n    var f = function (v) { return check(target, v) && filter(v); };\r\n    return Object.getOwnPropertyNames(source)\r\n        .filter(f)\r\n        .reduce(function (t, v) {\r\n        t[v] = source[v];\r\n        return t;\r\n    }, target);\r\n}\r\n/**\r\n * Determines if a given url is absolute\r\n *\r\n * @param url The url to check to see if it is absolute\r\n */\r\nexport function isUrlAbsolute(url) {\r\n    return /^https?:\\/\\/|^\\/\\//i.test(url);\r\n}\r\n/**\r\n * Determines if a string is null or empty or undefined\r\n *\r\n * @param s The string to test\r\n */\r\nexport function stringIsNullOrEmpty(s) {\r\n    return s === undefined || s === null || s.length < 1;\r\n}\r\n/**\r\n * Gets an attribute value from an html/xml string block. NOTE: if the input attribute value has\r\n * RegEx special characters they will be escaped in the returned string\r\n *\r\n * @param html HTML to search\r\n * @param attrName The name of the attribute to find\r\n */\r\nexport function getAttrValueFromString(html, attrName) {\r\n    // make the input safe for regex\r\n    html = html.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\r\n    var reg = new RegExp(attrName + \"\\\\s*?=\\\\s*?(\\\"|')([^\\\\1]*?)\\\\1\", \"i\");\r\n    var match = reg.exec(html);\r\n    return match !== null && match.length > 0 ? match[2] : null;\r\n}\r\n/**\r\n * Ensures guid values are represented consistently as \"ea123463-137d-4ae3-89b8-cf3fc578ca05\"\r\n *\r\n * @param guid The candidate guid\r\n */\r\nexport function sanitizeGuid(guid) {\r\n    if (stringIsNullOrEmpty(guid)) {\r\n        return guid;\r\n    }\r\n    var matches = /([0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12})/i.exec(guid);\r\n    return matches === null ? guid : matches[1];\r\n}\r\n/**\r\n * Shorthand for JSON.stringify\r\n *\r\n * @param o Any type of object\r\n */\r\nexport function jsS(o) {\r\n    return JSON.stringify(o);\r\n}\r\n/**\r\n * Shorthand for Object.hasOwnProperty\r\n *\r\n * @param o Object to check for\r\n * @param p Name of the property\r\n */\r\nexport function hOP(o, p) {\r\n    return Object.hasOwnProperty.call(o, p);\r\n}\r\n/**\r\n * Generates a ~unique hash code\r\n *\r\n * From: https://stackoverflow.com/questions/6122571/simple-non-secure-hash-function-for-javascript\r\n */\r\n// tslint:disable:no-bitwise\r\nexport function getHashCode(s) {\r\n    var hash = 0;\r\n    if (s.length === 0) {\r\n        return hash;\r\n    }\r\n    for (var i = 0; i < s.length; i++) {\r\n        var chr = s.charCodeAt(i);\r\n        hash = ((hash << 5) - hash) + chr;\r\n        hash |= 0; // Convert to 32bit integer\r\n    }\r\n    return hash;\r\n}\r\n// tslint:enable:no-bitwise\r\n//# sourceMappingURL=util.js.map","import { RuntimeConfig, FetchClient, } from \"@pnp/common\";\r\nexport function setup(config) {\r\n    RuntimeConfig.extend(config);\r\n}\r\nvar SPRuntimeConfigImpl = /** @class */ (function () {\r\n    function SPRuntimeConfigImpl() {\r\n    }\r\n    Object.defineProperty(SPRuntimeConfigImpl.prototype, \"headers\", {\r\n        get: function () {\r\n            var spPart = RuntimeConfig.get(\"sp\");\r\n            if (spPart !== undefined && spPart.headers !== undefined) {\r\n                return spPart.headers;\r\n            }\r\n            return {};\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SPRuntimeConfigImpl.prototype, \"baseUrl\", {\r\n        get: function () {\r\n            var spPart = RuntimeConfig.get(\"sp\");\r\n            if (spPart !== undefined && spPart.baseUrl !== undefined) {\r\n                return spPart.baseUrl;\r\n            }\r\n            if (RuntimeConfig.spfxContext !== undefined && RuntimeConfig.spfxContext !== null) {\r\n                return RuntimeConfig.spfxContext.pageContext.web.absoluteUrl;\r\n            }\r\n            return null;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SPRuntimeConfigImpl.prototype, \"fetchClientFactory\", {\r\n        get: function () {\r\n            var spPart = RuntimeConfig.get(\"sp\");\r\n            if (spPart !== undefined && spPart.fetchClientFactory !== undefined) {\r\n                return spPart.fetchClientFactory;\r\n            }\r\n            else {\r\n                return function () { return new FetchClient(); };\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return SPRuntimeConfigImpl;\r\n}());\r\nexport { SPRuntimeConfigImpl };\r\nexport var SPRuntimeConfig = new SPRuntimeConfigImpl();\r\n//# sourceMappingURL=splibconfig.js.map","import { combine, isUrlAbsolute, hOP } from \"@pnp/common\";\r\nimport { SPRuntimeConfig } from \"../config/splibconfig\";\r\n/**\r\n * Ensures that a given url is absolute for the current web based on context\r\n *\r\n * @param candidateUrl The url to make absolute\r\n *\r\n */\r\nexport function toAbsoluteUrl(candidateUrl) {\r\n    return new Promise(function (resolve) {\r\n        if (isUrlAbsolute(candidateUrl)) {\r\n            // if we are already absolute, then just return the url\r\n            return resolve(candidateUrl);\r\n        }\r\n        if (SPRuntimeConfig.baseUrl !== null) {\r\n            // base url specified either with baseUrl of spfxContext config property\r\n            return resolve(combine(SPRuntimeConfig.baseUrl, candidateUrl));\r\n        }\r\n        if (global._spPageContextInfo !== undefined) {\r\n            // operating in classic pages\r\n            if (hOP(global._spPageContextInfo, \"webAbsoluteUrl\")) {\r\n                return resolve(combine(global._spPageContextInfo.webAbsoluteUrl, candidateUrl));\r\n            }\r\n            else if (hOP(global._spPageContextInfo, \"webServerRelativeUrl\")) {\r\n                return resolve(combine(global._spPageContextInfo.webServerRelativeUrl, candidateUrl));\r\n            }\r\n        }\r\n        // does window.location exist and have a certain path part in it?\r\n        if (global.location !== undefined) {\r\n            var baseUrl_1 = global.location.toString().toLowerCase();\r\n            [\"/_layouts/\", \"/siteassets/\"].forEach(function (s) {\r\n                var index = baseUrl_1.indexOf(s);\r\n                if (index > 0) {\r\n                    return resolve(combine(baseUrl_1.substr(0, index), candidateUrl));\r\n                }\r\n            });\r\n        }\r\n        return resolve(candidateUrl);\r\n    });\r\n}\r\n//# sourceMappingURL=toabsoluteurl.js.map","import * as tslib_1 from \"tslib\";\r\nimport { extend, objectDefinedNotNull } from \"./util\";\r\nexport function mergeHeaders(target, source) {\r\n    if (source !== undefined && source !== null) {\r\n        var temp = new Request(\"\", { headers: source });\r\n        temp.headers.forEach(function (value, name) {\r\n            target.append(name, value);\r\n        });\r\n    }\r\n}\r\nexport function mergeOptions(target, source) {\r\n    if (objectDefinedNotNull(source)) {\r\n        var headers = extend(target.headers || {}, source.headers);\r\n        target = extend(target, source);\r\n        target.headers = headers;\r\n    }\r\n}\r\n/**\r\n * Makes requests using the global/window fetch API\r\n */\r\nvar FetchClient = /** @class */ (function () {\r\n    function FetchClient() {\r\n    }\r\n    FetchClient.prototype.fetch = function (url, options) {\r\n        return global.fetch(url, options);\r\n    };\r\n    return FetchClient;\r\n}());\r\nexport { FetchClient };\r\n/**\r\n * Makes requests using the fetch API adding the supplied token to the Authorization header\r\n */\r\nvar BearerTokenFetchClient = /** @class */ (function (_super) {\r\n    tslib_1.__extends(BearerTokenFetchClient, _super);\r\n    function BearerTokenFetchClient(_token) {\r\n        var _this = _super.call(this) || this;\r\n        _this._token = _token;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(BearerTokenFetchClient.prototype, \"token\", {\r\n        get: function () {\r\n            return this._token || \"\";\r\n        },\r\n        set: function (token) {\r\n            this._token = token;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    BearerTokenFetchClient.prototype.fetch = function (url, options) {\r\n        if (options === void 0) { options = {}; }\r\n        var headers = new Headers();\r\n        mergeHeaders(headers, options.headers);\r\n        headers.set(\"Authorization\", \"Bearer \" + this._token);\r\n        options.headers = headers;\r\n        return _super.prototype.fetch.call(this, url, options);\r\n    };\r\n    return BearerTokenFetchClient;\r\n}(FetchClient));\r\nexport { BearerTokenFetchClient };\r\n//# sourceMappingURL=netutil.js.map","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","/*! adal-angular v1.0.17 2018-02-27 */\r\nvar AuthenticationContext=function(){\"use strict\";return AuthenticationContext=function(a){if(this.REQUEST_TYPE={LOGIN:\"LOGIN\",RENEW_TOKEN:\"RENEW_TOKEN\",UNKNOWN:\"UNKNOWN\"},this.RESPONSE_TYPE={ID_TOKEN_TOKEN:\"id_token token\",TOKEN:\"token\"},this.CONSTANTS={ACCESS_TOKEN:\"access_token\",EXPIRES_IN:\"expires_in\",ID_TOKEN:\"id_token\",ERROR_DESCRIPTION:\"error_description\",SESSION_STATE:\"session_state\",ERROR:\"error\",STORAGE:{TOKEN_KEYS:\"adal.token.keys\",ACCESS_TOKEN_KEY:\"adal.access.token.key\",EXPIRATION_KEY:\"adal.expiration.key\",STATE_LOGIN:\"adal.state.login\",STATE_RENEW:\"adal.state.renew\",NONCE_IDTOKEN:\"adal.nonce.idtoken\",SESSION_STATE:\"adal.session.state\",USERNAME:\"adal.username\",IDTOKEN:\"adal.idtoken\",ERROR:\"adal.error\",ERROR_DESCRIPTION:\"adal.error.description\",LOGIN_REQUEST:\"adal.login.request\",LOGIN_ERROR:\"adal.login.error\",RENEW_STATUS:\"adal.token.renew.status\",ANGULAR_LOGIN_REQUEST:\"adal.angular.login.request\"},RESOURCE_DELIMETER:\"|\",CACHE_DELIMETER:\"||\",LOADFRAME_TIMEOUT:6e3,TOKEN_RENEW_STATUS_CANCELED:\"Canceled\",TOKEN_RENEW_STATUS_COMPLETED:\"Completed\",TOKEN_RENEW_STATUS_IN_PROGRESS:\"In Progress\",LOGGING_LEVEL:{ERROR:0,WARN:1,INFO:2,VERBOSE:3},LEVEL_STRING_MAP:{0:\"ERROR:\",1:\"WARNING:\",2:\"INFO:\",3:\"VERBOSE:\"},POPUP_WIDTH:483,POPUP_HEIGHT:600},AuthenticationContext.prototype._singletonInstance)return AuthenticationContext.prototype._singletonInstance;if(AuthenticationContext.prototype._singletonInstance=this,this.instance=\"https://login.microsoftonline.com/\",this.config={},this.callback=null,this.popUp=!1,this.isAngular=!1,this._user=null,this._activeRenewals={},this._loginInProgress=!1,this._acquireTokenInProgress=!1,this._renewStates=[],this._callBackMappedToRenewStates={},this._callBacksMappedToRenewStates={},this._openedWindows=[],this._requestType=this.REQUEST_TYPE.LOGIN,window._adalInstance=this,a.displayCall&&\"function\"!=typeof a.displayCall)throw new Error(\"displayCall is not a function\");if(!a.clientId)throw new Error(\"clientId is required\");this.config=this._cloneConfig(a),void 0===this.config.navigateToLoginRequestUrl&&(this.config.navigateToLoginRequestUrl=!0),this.config.popUp&&(this.popUp=!0),this.config.callback&&\"function\"==typeof this.config.callback&&(this.callback=this.config.callback),this.config.instance&&(this.instance=this.config.instance),this.config.loginResource||(this.config.loginResource=this.config.clientId),this.config.redirectUri||(this.config.redirectUri=window.location.href.split(\"?\")[0].split(\"#\")[0]),this.config.postLogoutRedirectUri||(this.config.postLogoutRedirectUri=window.location.href.split(\"?\")[0].split(\"#\")[0]),this.config.anonymousEndpoints||(this.config.anonymousEndpoints=[]),this.config.isAngular&&(this.isAngular=this.config.isAngular),this.config.loadFrameTimeout&&(this.CONSTANTS.LOADFRAME_TIMEOUT=this.config.loadFrameTimeout)},\"undefined\"!=typeof window&&(window.Logging={piiLoggingEnabled:!1,level:0,log:function(a){}}),AuthenticationContext.prototype.login=function(){if(this._loginInProgress)return void this.info(\"Login in progress\");this._loginInProgress=!0;var a=this._guid();this.config.state=a,this._idTokenNonce=this._guid();var b=this._getItem(this.CONSTANTS.STORAGE.ANGULAR_LOGIN_REQUEST);b&&\"\"!==b?this._saveItem(this.CONSTANTS.STORAGE.ANGULAR_LOGIN_REQUEST,\"\"):b=window.location.href,this.verbose(\"Expected state: \"+a+\" startPage:\"+b),this._saveItem(this.CONSTANTS.STORAGE.LOGIN_REQUEST,b),this._saveItem(this.CONSTANTS.STORAGE.LOGIN_ERROR,\"\"),this._saveItem(this.CONSTANTS.STORAGE.STATE_LOGIN,a,!0),this._saveItem(this.CONSTANTS.STORAGE.NONCE_IDTOKEN,this._idTokenNonce,!0),this._saveItem(this.CONSTANTS.STORAGE.ERROR,\"\"),this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION,\"\");var c=this._getNavigateUrl(\"id_token\",null)+\"&nonce=\"+encodeURIComponent(this._idTokenNonce);this.config.displayCall?this.config.displayCall(c):this.popUp?(this._saveItem(this.CONSTANTS.STORAGE.STATE_LOGIN,\"\"),this._renewStates.push(a),this.registerCallback(a,this.config.clientId,this.callback),this._loginPopup(c)):this.promptUser(c)},AuthenticationContext.prototype._openPopup=function(a,b,c,d){try{var e=window.screenLeft?window.screenLeft:window.screenX,f=window.screenTop?window.screenTop:window.screenY,g=window.innerWidth||document.documentElement.clientWidth||document.body.clientWidth,h=window.innerHeight||document.documentElement.clientHeight||document.body.clientHeight,i=g/2-c/2+e,j=h/2-d/2+f,k=window.open(a,b,\"width=\"+c+\", height=\"+d+\", top=\"+j+\", left=\"+i);return k.focus&&k.focus(),k}catch(a){return this.warn(\"Error opening popup, \"+a.message),this._loginInProgress=!1,this._acquireTokenInProgress=!1,null}},AuthenticationContext.prototype._handlePopupError=function(a,b,c,d,e){this.warn(d),this._saveItem(this.CONSTANTS.STORAGE.ERROR,c),this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION,d),this._saveItem(this.CONSTANTS.STORAGE.LOGIN_ERROR,e),b&&this._activeRenewals[b]&&(this._activeRenewals[b]=null),this._loginInProgress=!1,this._acquireTokenInProgress=!1,a&&a(d,null,c)},AuthenticationContext.prototype._loginPopup=function(a,b,c){var d=this._openPopup(a,\"login\",this.CONSTANTS.POPUP_WIDTH,this.CONSTANTS.POPUP_HEIGHT),e=c||this.callback;if(null==d){var f=\"Popup Window is null. This can happen if you are using IE\";return void this._handlePopupError(e,b,\"Error opening popup\",f,f)}if(this._openedWindows.push(d),-1!=this.config.redirectUri.indexOf(\"#\"))var g=this.config.redirectUri.split(\"#\")[0];else var g=this.config.redirectUri;var h=this,i=window.setInterval(function(){if(!d||d.closed||void 0===d.closed){var a=\"Popup Window closed\",c=\"Popup Window closed by UI action/ Popup Window handle destroyed due to cross zone navigation in IE/Edge\";return h.isAngular&&h._broadcast(\"adal:popUpClosed\",c+h.CONSTANTS.RESOURCE_DELIMETER+a),h._handlePopupError(e,b,a,c,c),void window.clearInterval(i)}try{var f=d.location;if(-1!=encodeURI(f.href).indexOf(encodeURI(g)))return h.isAngular?h._broadcast(\"adal:popUpHashChanged\",f.hash):h.handleWindowCallback(f.hash),window.clearInterval(i),h._loginInProgress=!1,h._acquireTokenInProgress=!1,h.info(\"Closing popup window\"),h._openedWindows=[],void d.close()}catch(a){}},1)},AuthenticationContext.prototype._broadcast=function(a,b){!function(){function a(a,b){b=b||{bubbles:!1,cancelable:!1,detail:void 0};var c=document.createEvent(\"CustomEvent\");return c.initCustomEvent(a,b.bubbles,b.cancelable,b.detail),c}if(\"function\"==typeof window.CustomEvent)return!1;a.prototype=window.Event.prototype,window.CustomEvent=a}();var c=new CustomEvent(a,{detail:b});window.dispatchEvent(c)},AuthenticationContext.prototype.loginInProgress=function(){return this._loginInProgress},AuthenticationContext.prototype._hasResource=function(a){var b=this._getItem(this.CONSTANTS.STORAGE.TOKEN_KEYS);return b&&!this._isEmpty(b)&&b.indexOf(a+this.CONSTANTS.RESOURCE_DELIMETER)>-1},AuthenticationContext.prototype.getCachedToken=function(a){if(!this._hasResource(a))return null;var b=this._getItem(this.CONSTANTS.STORAGE.ACCESS_TOKEN_KEY+a),c=this._getItem(this.CONSTANTS.STORAGE.EXPIRATION_KEY+a),d=this.config.expireOffsetSeconds||300;return c&&c>this._now()+d?b:(this._saveItem(this.CONSTANTS.STORAGE.ACCESS_TOKEN_KEY+a,\"\"),this._saveItem(this.CONSTANTS.STORAGE.EXPIRATION_KEY+a,0),null)},AuthenticationContext.prototype.getCachedUser=function(){if(this._user)return this._user;var a=this._getItem(this.CONSTANTS.STORAGE.IDTOKEN);return this._user=this._createUser(a),this._user},AuthenticationContext.prototype.registerCallback=function(a,b,c){this._activeRenewals[b]=a,this._callBacksMappedToRenewStates[a]||(this._callBacksMappedToRenewStates[a]=[]);var d=this;this._callBacksMappedToRenewStates[a].push(c),this._callBackMappedToRenewStates[a]||(this._callBackMappedToRenewStates[a]=function(c,e,f,g){d._activeRenewals[b]=null;for(var h=0;h<d._callBacksMappedToRenewStates[a].length;++h)try{d._callBacksMappedToRenewStates[a][h](c,e,f,g)}catch(f){d.warn(f)}d._callBacksMappedToRenewStates[a]=null,d._callBackMappedToRenewStates[a]=null})},AuthenticationContext.prototype._renewToken=function(a,b,c){this.info(\"renewToken is called for resource:\"+a);var d=this._addAdalFrame(\"adalRenewFrame\"+a),e=this._guid()+\"|\"+a;this.config.state=e,this._renewStates.push(e),this.verbose(\"Renew token Expected state: \"+e),c=c||\"token\";var f=this._urlRemoveQueryStringParameter(this._getNavigateUrl(c,a),\"prompt\");c===this.RESPONSE_TYPE.ID_TOKEN_TOKEN&&(this._idTokenNonce=this._guid(),this._saveItem(this.CONSTANTS.STORAGE.NONCE_IDTOKEN,this._idTokenNonce,!0),f+=\"&nonce=\"+encodeURIComponent(this._idTokenNonce)),f+=\"&prompt=none\",f=this._addHintParameters(f),this.registerCallback(e,a,b),this.verbosePii(\"Navigate to:\"+f),d.src=\"about:blank\",this._loadFrameTimeout(f,\"adalRenewFrame\"+a,a)},AuthenticationContext.prototype._renewIdToken=function(a,b){this.info(\"renewIdToken is called\");var c=this._addAdalFrame(\"adalIdTokenFrame\"),d=this._guid()+\"|\"+this.config.clientId;this._idTokenNonce=this._guid(),this._saveItem(this.CONSTANTS.STORAGE.NONCE_IDTOKEN,this._idTokenNonce,!0),this.config.state=d,this._renewStates.push(d),this.verbose(\"Renew Idtoken Expected state: \"+d);var e=null===b||void 0===b?null:this.config.clientId,b=b||\"id_token\",f=this._urlRemoveQueryStringParameter(this._getNavigateUrl(b,e),\"prompt\");f+=\"&prompt=none\",f=this._addHintParameters(f),f+=\"&nonce=\"+encodeURIComponent(this._idTokenNonce),this.registerCallback(d,this.config.clientId,a),this.verbosePii(\"Navigate to:\"+f),c.src=\"about:blank\",this._loadFrameTimeout(f,\"adalIdTokenFrame\",this.config.clientId)},AuthenticationContext.prototype._urlContainsQueryStringParameter=function(a,b){return new RegExp(\"[\\\\?&]\"+a+\"=\").test(b)},AuthenticationContext.prototype._urlRemoveQueryStringParameter=function(a,b){var c=new RegExp(\"(\\\\&\"+b+\"=)[^&]+\");return a=a.replace(c,\"\"),c=new RegExp(\"(\"+b+\"=)[^&]+&\"),a=a.replace(c,\"\"),c=new RegExp(\"(\"+b+\"=)[^&]+\"),a=a.replace(c,\"\")},AuthenticationContext.prototype._loadFrameTimeout=function(a,b,c){this.verbose(\"Set loading state to pending for: \"+c),this._saveItem(this.CONSTANTS.STORAGE.RENEW_STATUS+c,this.CONSTANTS.TOKEN_RENEW_STATUS_IN_PROGRESS),this._loadFrame(a,b);var d=this;setTimeout(function(){if(d._getItem(d.CONSTANTS.STORAGE.RENEW_STATUS+c)===d.CONSTANTS.TOKEN_RENEW_STATUS_IN_PROGRESS){d.verbose(\"Loading frame has timed out after: \"+d.CONSTANTS.LOADFRAME_TIMEOUT/1e3+\" seconds for resource \"+c);var a=d._activeRenewals[c];a&&d._callBackMappedToRenewStates[a]&&d._callBackMappedToRenewStates[a](\"Token renewal operation failed due to timeout\",null,\"Token Renewal Failed\"),d._saveItem(d.CONSTANTS.STORAGE.RENEW_STATUS+c,d.CONSTANTS.TOKEN_RENEW_STATUS_CANCELED)}},d.CONSTANTS.LOADFRAME_TIMEOUT)},AuthenticationContext.prototype._loadFrame=function(a,b){var c=this;c.info(\"LoadFrame: \"+b);var d=b;setTimeout(function(){var b=c._addAdalFrame(d);\"\"!==b.src&&\"about:blank\"!==b.src||(b.src=a,c._loadFrame(a,d))},500)},AuthenticationContext.prototype.acquireToken=function(a,b){if(this._isEmpty(a))return this.warn(\"resource is required\"),void b(\"resource is required\",null,\"resource is required\");var c=this.getCachedToken(a);return c?(this.info(\"Token is already in cache for resource:\"+a),void b(null,c,null)):this._user||this.config.extraQueryParameter&&-1!==this.config.extraQueryParameter.indexOf(\"login_hint\")?void(this._activeRenewals[a]?this.registerCallback(this._activeRenewals[a],a,b):(this._requestType=this.REQUEST_TYPE.RENEW_TOKEN,a===this.config.clientId?this._user?(this.verbose(\"renewing idtoken\"),this._renewIdToken(b)):(this.verbose(\"renewing idtoken and access_token\"),this._renewIdToken(b,this.RESPONSE_TYPE.ID_TOKEN_TOKEN)):this._user?(this.verbose(\"renewing access_token\"),this._renewToken(a,b)):(this.verbose(\"renewing idtoken and access_token\"),this._renewToken(a,b,this.RESPONSE_TYPE.ID_TOKEN_TOKEN)))):(this.warn(\"User login is required\"),void b(\"User login is required\",null,\"login required\"))},AuthenticationContext.prototype.acquireTokenPopup=function(a,b,c,d){if(this._isEmpty(a))return this.warn(\"resource is required\"),void d(\"resource is required\",null,\"resource is required\");if(!this._user)return this.warn(\"User login is required\"),void d(\"User login is required\",null,\"login required\");if(this._acquireTokenInProgress)return this.warn(\"Acquire token interactive is already in progress\"),void d(\"Acquire token interactive is already in progress\",null,\"Acquire token interactive is already in progress\");var e=this._guid()+\"|\"+a;this.config.state=e,this._renewStates.push(e),this._requestType=this.REQUEST_TYPE.RENEW_TOKEN,this.verbose(\"Renew token Expected state: \"+e);var f=this._urlRemoveQueryStringParameter(this._getNavigateUrl(\"token\",a),\"prompt\");if(f+=\"&prompt=select_account\",b&&(f+=b),c&&-1===f.indexOf(\"&claims\"))f+=\"&claims=\"+encodeURIComponent(c);else if(c&&-1!==f.indexOf(\"&claims\"))throw new Error(\"Claims cannot be passed as an extraQueryParameter\");f=this._addHintParameters(f),this._acquireTokenInProgress=!0,this.info(\"acquireToken interactive is called for the resource \"+a),this.registerCallback(e,a,d),this._loginPopup(f,a,d)},AuthenticationContext.prototype.acquireTokenRedirect=function(a,b,c){if(this._isEmpty(a))return this.warn(\"resource is required\"),void d(\"resource is required\",null,\"resource is required\");var d=this.callback;if(!this._user)return this.warn(\"User login is required\"),void d(\"User login is required\",null,\"login required\");if(this._acquireTokenInProgress)return this.warn(\"Acquire token interactive is already in progress\"),void d(\"Acquire token interactive is already in progress\",null,\"Acquire token interactive is already in progress\");var e=this._guid()+\"|\"+a;this.config.state=e,this.verbose(\"Renew token Expected state: \"+e);var f=this._urlRemoveQueryStringParameter(this._getNavigateUrl(\"token\",a),\"prompt\");if(f+=\"&prompt=select_account\",b&&(f+=b),c&&-1===f.indexOf(\"&claims\"))f+=\"&claims=\"+encodeURIComponent(c);else if(c&&-1!==f.indexOf(\"&claims\"))throw new Error(\"Claims cannot be passed as an extraQueryParameter\");f=this._addHintParameters(f),this._acquireTokenInProgress=!0,this.info(\"acquireToken interactive is called for the resource \"+a),this._saveItem(this.CONSTANTS.STORAGE.LOGIN_REQUEST,window.location.href),this._saveItem(this.CONSTANTS.STORAGE.STATE_RENEW,e,!0),this.promptUser(f)},AuthenticationContext.prototype.promptUser=function(a){a?(this.infoPii(\"Navigate to:\"+a),window.location.replace(a)):this.info(\"Navigate url is empty\")},AuthenticationContext.prototype.clearCache=function(){this._saveItem(this.CONSTANTS.STORAGE.LOGIN_REQUEST,\"\"),this._saveItem(this.CONSTANTS.STORAGE.ANGULAR_LOGIN_REQUEST,\"\"),this._saveItem(this.CONSTANTS.STORAGE.SESSION_STATE,\"\"),this._saveItem(this.CONSTANTS.STORAGE.STATE_LOGIN,\"\"),this._saveItem(this.CONSTANTS.STORAGE.STATE_RENEW,\"\"),this._renewStates=[],this._saveItem(this.CONSTANTS.STORAGE.NONCE_IDTOKEN,\"\"),this._saveItem(this.CONSTANTS.STORAGE.IDTOKEN,\"\"),this._saveItem(this.CONSTANTS.STORAGE.ERROR,\"\"),this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION,\"\"),this._saveItem(this.CONSTANTS.STORAGE.LOGIN_ERROR,\"\"),this._saveItem(this.CONSTANTS.STORAGE.LOGIN_ERROR,\"\");var a=this._getItem(this.CONSTANTS.STORAGE.TOKEN_KEYS);if(!this._isEmpty(a)){a=a.split(this.CONSTANTS.RESOURCE_DELIMETER);for(var b=0;b<a.length&&\"\"!==a[b];b++)this._saveItem(this.CONSTANTS.STORAGE.ACCESS_TOKEN_KEY+a[b],\"\"),this._saveItem(this.CONSTANTS.STORAGE.EXPIRATION_KEY+a[b],0)}this._saveItem(this.CONSTANTS.STORAGE.TOKEN_KEYS,\"\")},AuthenticationContext.prototype.clearCacheForResource=function(a){this._saveItem(this.CONSTANTS.STORAGE.STATE_RENEW,\"\"),this._saveItem(this.CONSTANTS.STORAGE.ERROR,\"\"),this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION,\"\"),this._hasResource(a)&&(this._saveItem(this.CONSTANTS.STORAGE.ACCESS_TOKEN_KEY+a,\"\"),this._saveItem(this.CONSTANTS.STORAGE.EXPIRATION_KEY+a,0))},AuthenticationContext.prototype.logOut=function(){this.clearCache(),this._user=null;var a;if(this.config.logOutUri)a=this.config.logOutUri;else{var b=\"common\",c=\"\";this.config.tenant&&(b=this.config.tenant),this.config.postLogoutRedirectUri&&(c=\"post_logout_redirect_uri=\"+encodeURIComponent(this.config.postLogoutRedirectUri)),a=this.instance+b+\"/oauth2/logout?\"+c}this.infoPii(\"Logout navigate to: \"+a),this.promptUser(a)},AuthenticationContext.prototype._isEmpty=function(a){return void 0===a||!a||0===a.length},AuthenticationContext.prototype.getUser=function(a){if(\"function\"!=typeof a)throw new Error(\"callback is not a function\");if(this._user)return void a(null,this._user);var b=this._getItem(this.CONSTANTS.STORAGE.IDTOKEN);this._isEmpty(b)?(this.warn(\"User information is not available\"),a(\"User information is not available\",null)):(this.info(\"User exists in cache: \"),this._user=this._createUser(b),a(null,this._user))},AuthenticationContext.prototype._addHintParameters=function(a){if(this._user&&this._user.profile)if(this._user.profile.sid&&-1!==a.indexOf(\"&prompt=none\"))this._urlContainsQueryStringParameter(\"sid\",a)||(a+=\"&sid=\"+encodeURIComponent(this._user.profile.sid));else if(this._user.profile.upn&&(this._urlContainsQueryStringParameter(\"login_hint\",a)||(a+=\"&login_hint=\"+encodeURIComponent(this._user.profile.upn)),!this._urlContainsQueryStringParameter(\"domain_hint\",a)&&this._user.profile.upn.indexOf(\"@\")>-1)){var b=this._user.profile.upn.split(\"@\");a+=\"&domain_hint=\"+encodeURIComponent(b[b.length-1])}return a},AuthenticationContext.prototype._createUser=function(a){var b=null,c=this._extractIdToken(a);return c&&c.hasOwnProperty(\"aud\")&&(c.aud.toLowerCase()===this.config.clientId.toLowerCase()?(b={userName:\"\",profile:c},c.hasOwnProperty(\"upn\")?b.userName=c.upn:c.hasOwnProperty(\"email\")&&(b.userName=c.email)):this.warn(\"IdToken has invalid aud field\")),b},AuthenticationContext.prototype._getHash=function(a){return a.indexOf(\"#/\")>-1?a=a.substring(a.indexOf(\"#/\")+2):a.indexOf(\"#\")>-1&&(a=a.substring(1)),a},AuthenticationContext.prototype.isCallback=function(a){a=this._getHash(a);var b=this._deserialize(a);return b.hasOwnProperty(this.CONSTANTS.ERROR_DESCRIPTION)||b.hasOwnProperty(this.CONSTANTS.ACCESS_TOKEN)||b.hasOwnProperty(this.CONSTANTS.ID_TOKEN)},AuthenticationContext.prototype.getLoginError=function(){return this._getItem(this.CONSTANTS.STORAGE.LOGIN_ERROR)},AuthenticationContext.prototype.getRequestInfo=function(a){a=this._getHash(a);var b=this._deserialize(a),c={valid:!1,parameters:{},stateMatch:!1,stateResponse:\"\",requestType:this.REQUEST_TYPE.UNKNOWN};if(b&&(c.parameters=b,b.hasOwnProperty(this.CONSTANTS.ERROR_DESCRIPTION)||b.hasOwnProperty(this.CONSTANTS.ACCESS_TOKEN)||b.hasOwnProperty(this.CONSTANTS.ID_TOKEN))){c.valid=!0;var d=\"\";if(!b.hasOwnProperty(\"state\"))return this.warn(\"No state returned\"),c;if(this.verbose(\"State: \"+b.state),d=b.state,c.stateResponse=d,this._matchState(c))return c;if(!c.stateMatch&&window.parent){c.requestType=this._requestType;for(var e=this._renewStates,f=0;f<e.length;f++)if(e[f]===c.stateResponse){c.stateMatch=!0;break}}}return c},AuthenticationContext.prototype._matchNonce=function(a){var b=this._getItem(this.CONSTANTS.STORAGE.NONCE_IDTOKEN);if(b){b=b.split(this.CONSTANTS.CACHE_DELIMETER);for(var c=0;c<b.length;c++)if(b[c]===a.profile.nonce)return!0}return!1},AuthenticationContext.prototype._matchState=function(a){var b=this._getItem(this.CONSTANTS.STORAGE.STATE_LOGIN);if(b){b=b.split(this.CONSTANTS.CACHE_DELIMETER);for(var c=0;c<b.length;c++)if(b[c]===a.stateResponse)return a.requestType=this.REQUEST_TYPE.LOGIN,a.stateMatch=!0,!0}var d=this._getItem(this.CONSTANTS.STORAGE.STATE_RENEW);if(d){d=d.split(this.CONSTANTS.CACHE_DELIMETER);for(var c=0;c<d.length;c++)if(d[c]===a.stateResponse)return a.requestType=this.REQUEST_TYPE.RENEW_TOKEN,a.stateMatch=!0,!0}return!1},AuthenticationContext.prototype._getResourceFromState=function(a){if(a){var b=a.indexOf(\"|\");if(b>-1&&b+1<a.length)return a.substring(b+1)}return\"\"},AuthenticationContext.prototype.saveTokenFromHash=function(a){this.info(\"State status:\"+a.stateMatch+\"; Request type:\"+a.requestType),this._saveItem(this.CONSTANTS.STORAGE.ERROR,\"\"),this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION,\"\");var b=this._getResourceFromState(a.stateResponse);if(a.parameters.hasOwnProperty(this.CONSTANTS.ERROR_DESCRIPTION))this.infoPii(\"Error :\"+a.parameters.error+\"; Error description:\"+a.parameters[this.CONSTANTS.ERROR_DESCRIPTION]),this._saveItem(this.CONSTANTS.STORAGE.ERROR,a.parameters.error),this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION,a.parameters[this.CONSTANTS.ERROR_DESCRIPTION]),a.requestType===this.REQUEST_TYPE.LOGIN&&(this._loginInProgress=!1,this._saveItem(this.CONSTANTS.STORAGE.LOGIN_ERROR,a.parameters.error_description));else if(a.stateMatch){this.info(\"State is right\"),a.parameters.hasOwnProperty(this.CONSTANTS.SESSION_STATE)&&this._saveItem(this.CONSTANTS.STORAGE.SESSION_STATE,a.parameters[this.CONSTANTS.SESSION_STATE]);var c;a.parameters.hasOwnProperty(this.CONSTANTS.ACCESS_TOKEN)&&(this.info(\"Fragment has access token\"),this._hasResource(b)||(c=this._getItem(this.CONSTANTS.STORAGE.TOKEN_KEYS)||\"\",this._saveItem(this.CONSTANTS.STORAGE.TOKEN_KEYS,c+b+this.CONSTANTS.RESOURCE_DELIMETER)),this._saveItem(this.CONSTANTS.STORAGE.ACCESS_TOKEN_KEY+b,a.parameters[this.CONSTANTS.ACCESS_TOKEN]),this._saveItem(this.CONSTANTS.STORAGE.EXPIRATION_KEY+b,this._expiresIn(a.parameters[this.CONSTANTS.EXPIRES_IN]))),a.parameters.hasOwnProperty(this.CONSTANTS.ID_TOKEN)&&(this.info(\"Fragment has id token\"),this._loginInProgress=!1,this._user=this._createUser(a.parameters[this.CONSTANTS.ID_TOKEN]),this._user&&this._user.profile?this._matchNonce(this._user)?(this._saveItem(this.CONSTANTS.STORAGE.IDTOKEN,a.parameters[this.CONSTANTS.ID_TOKEN]),b=this.config.loginResource?this.config.loginResource:this.config.clientId,this._hasResource(b)||(c=this._getItem(this.CONSTANTS.STORAGE.TOKEN_KEYS)||\"\",this._saveItem(this.CONSTANTS.STORAGE.TOKEN_KEYS,c+b+this.CONSTANTS.RESOURCE_DELIMETER)),this._saveItem(this.CONSTANTS.STORAGE.ACCESS_TOKEN_KEY+b,a.parameters[this.CONSTANTS.ID_TOKEN]),this._saveItem(this.CONSTANTS.STORAGE.EXPIRATION_KEY+b,this._user.profile.exp)):(this._saveItem(this.CONSTANTS.STORAGE.LOGIN_ERROR,\"Nonce received: \"+this._user.profile.nonce+\" is not same as requested: \"+this._getItem(this.CONSTANTS.STORAGE.NONCE_IDTOKEN)),this._user=null):(a.parameters.error=\"invalid id_token\",a.parameters.error_description=\"Invalid id_token. id_token: \"+a.parameters[this.CONSTANTS.ID_TOKEN],this._saveItem(this.CONSTANTS.STORAGE.ERROR,\"invalid id_token\"),this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION,\"Invalid id_token. id_token: \"+a.parameters[this.CONSTANTS.ID_TOKEN])))}else a.parameters.error=\"Invalid_state\",a.parameters.error_description=\"Invalid_state. state: \"+a.stateResponse,this._saveItem(this.CONSTANTS.STORAGE.ERROR,\"Invalid_state\"),this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION,\"Invalid_state. state: \"+a.stateResponse);this._saveItem(this.CONSTANTS.STORAGE.RENEW_STATUS+b,this.CONSTANTS.TOKEN_RENEW_STATUS_COMPLETED)},AuthenticationContext.prototype.getResourceForEndpoint=function(a){if(this.config&&this.config.anonymousEndpoints)for(var b=0;b<this.config.anonymousEndpoints.length;b++)if(a.indexOf(this.config.anonymousEndpoints[b])>-1)return null;if(this.config&&this.config.endpoints)for(var c in this.config.endpoints)if(a.indexOf(c)>-1)return this.config.endpoints[c];return a.indexOf(\"http://\")>-1||a.indexOf(\"https://\")>-1?this._getHostFromUri(a)===this._getHostFromUri(this.config.redirectUri)?this.config.loginResource:null:this.config.loginResource},AuthenticationContext.prototype._getHostFromUri=function(a){var b=String(a).replace(/^(https?:)\\/\\//,\"\");return b=b.split(\"/\")[0]},AuthenticationContext.prototype.handleWindowCallback=function(a){if(null==a&&(a=window.location.hash),this.isCallback(a)){var b=null,c=!1;this._openedWindows.length>0&&this._openedWindows[this._openedWindows.length-1].opener&&this._openedWindows[this._openedWindows.length-1].opener._adalInstance?(b=this._openedWindows[this._openedWindows.length-1].opener._adalInstance,c=!0):window.parent&&window.parent._adalInstance&&(b=window.parent._adalInstance);var d,e,f=b.getRequestInfo(a),g=null;e=c||window.parent!==window?b._callBackMappedToRenewStates[f.stateResponse]:b.callback,b.info(\"Returned from redirect url\"),b.saveTokenFromHash(f),f.requestType===this.REQUEST_TYPE.RENEW_TOKEN&&window.parent?(window.parent!==window?b.verbose(\"Window is in iframe, acquiring token silently\"):b.verbose(\"acquiring token interactive in progress\"),d=f.parameters[b.CONSTANTS.ACCESS_TOKEN]||f.parameters[b.CONSTANTS.ID_TOKEN],g=b.CONSTANTS.ACCESS_TOKEN):f.requestType===this.REQUEST_TYPE.LOGIN&&(d=f.parameters[b.CONSTANTS.ID_TOKEN],g=b.CONSTANTS.ID_TOKEN);var h=f.parameters[b.CONSTANTS.ERROR_DESCRIPTION],i=f.parameters[b.CONSTANTS.ERROR];try{e&&e(h,d,i,g)}catch(a){b.error(\"Error occurred in user defined callback function: \"+a)}window.parent!==window||c||(b.config.navigateToLoginRequestUrl?window.location.href=b._getItem(b.CONSTANTS.STORAGE.LOGIN_REQUEST):window.location.hash=\"\")}},AuthenticationContext.prototype._getNavigateUrl=function(a,b){var c=\"common\";this.config.tenant&&(c=this.config.tenant);var d=this.instance+c+\"/oauth2/authorize\"+this._serialize(a,this.config,b)+this._addLibMetadata();return this.info(\"Navigate url:\"+d),d},AuthenticationContext.prototype._extractIdToken=function(a){var b=this._decodeJwt(a);if(!b)return null;try{var c=b.JWSPayload,d=this._base64DecodeStringUrlSafe(c);return d?JSON.parse(d):(this.info(\"The returned id_token could not be base64 url safe decoded.\"),null)}catch(a){this.error(\"The returned id_token could not be decoded\",a)}return null},AuthenticationContext.prototype._base64DecodeStringUrlSafe=function(a){return a=a.replace(/-/g,\"+\").replace(/_/g,\"/\"),window.atob?decodeURIComponent(escape(window.atob(a))):decodeURIComponent(escape(this._decode(a)))},AuthenticationContext.prototype._decode=function(a){var b=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";a=String(a).replace(/=+$/,\"\");var c=a.length;if(c%4==1)throw new Error(\"The token to be decoded is not correctly encoded.\");for(var d,e,f,g,h,i,j,k,l=\"\",m=0;m<c;m+=4){if(d=b.indexOf(a.charAt(m)),e=b.indexOf(a.charAt(m+1)),f=b.indexOf(a.charAt(m+2)),g=b.indexOf(a.charAt(m+3)),m+2===c-1){h=d<<18|e<<12|f<<6,i=h>>16&255,j=h>>8&255,l+=String.fromCharCode(i,j);break}if(m+1===c-1){h=d<<18|e<<12,i=h>>16&255,l+=String.fromCharCode(i);break}h=d<<18|e<<12|f<<6|g,i=h>>16&255,j=h>>8&255,k=255&h,l+=String.fromCharCode(i,j,k)}return l},AuthenticationContext.prototype._decodeJwt=function(a){if(this._isEmpty(a))return null;var b=/^([^\\.\\s]*)\\.([^\\.\\s]+)\\.([^\\.\\s]*)$/,c=b.exec(a);return!c||c.length<4?(this.warn(\"The returned id_token is not parseable.\"),null):{header:c[1],JWSPayload:c[2],JWSSig:c[3]}},AuthenticationContext.prototype._convertUrlSafeToRegularBase64EncodedString=function(a){return a.replace(\"-\",\"+\").replace(\"_\",\"/\")},AuthenticationContext.prototype._serialize=function(a,b,c){var d=[];if(null!==b){d.push(\"?response_type=\"+a),d.push(\"client_id=\"+encodeURIComponent(b.clientId)),c&&d.push(\"resource=\"+encodeURIComponent(c)),d.push(\"redirect_uri=\"+encodeURIComponent(b.redirectUri)),d.push(\"state=\"+encodeURIComponent(b.state)),b.hasOwnProperty(\"slice\")&&d.push(\"slice=\"+encodeURIComponent(b.slice)),b.hasOwnProperty(\"extraQueryParameter\")&&d.push(b.extraQueryParameter);var e=b.correlationId?b.correlationId:this._guid();d.push(\"client-request-id=\"+encodeURIComponent(e))}return d.join(\"&\")},AuthenticationContext.prototype._deserialize=function(a){var b,c=/\\+/g,d=/([^&=]+)=([^&]*)/g,e=function(a){return decodeURIComponent(a.replace(c,\" \"))},f={};for(b=d.exec(a);b;)f[e(b[1])]=e(b[2]),b=d.exec(a);return f},AuthenticationContext.prototype._decimalToHex=function(a){for(var b=a.toString(16);b.length<2;)b=\"0\"+b;return b},AuthenticationContext.prototype._guid=function(){var a=window.crypto||window.msCrypto;if(a&&a.getRandomValues){var b=new Uint8Array(16);return a.getRandomValues(b),b[6]|=64,b[6]&=79,b[8]|=128,b[8]&=191,this._decimalToHex(b[0])+this._decimalToHex(b[1])+this._decimalToHex(b[2])+this._decimalToHex(b[3])+\"-\"+this._decimalToHex(b[4])+this._decimalToHex(b[5])+\"-\"+this._decimalToHex(b[6])+this._decimalToHex(b[7])+\"-\"+this._decimalToHex(b[8])+this._decimalToHex(b[9])+\"-\"+this._decimalToHex(b[10])+this._decimalToHex(b[11])+this._decimalToHex(b[12])+this._decimalToHex(b[13])+this._decimalToHex(b[14])+this._decimalToHex(b[15])}for(var c=\"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\",d=\"0123456789abcdef\",e=0,f=\"\",g=0;g<36;g++)\"-\"!==c[g]&&\"4\"!==c[g]&&(e=16*Math.random()|0),\"x\"===c[g]?f+=d[e]:\"y\"===c[g]?(e&=3,e|=8,f+=d[e]):f+=c[g];return f},AuthenticationContext.prototype._expiresIn=function(a){return a||(a=3599),this._now()+parseInt(a,10)},AuthenticationContext.prototype._now=function(){return Math.round((new Date).getTime()/1e3)},AuthenticationContext.prototype._addAdalFrame=function(a){if(void 0!==a){this.info(\"Add adal frame to document:\"+a);var b=document.getElementById(a);if(!b){if(document.createElement&&document.documentElement&&(window.opera||-1===window.navigator.userAgent.indexOf(\"MSIE 5.0\"))){var c=document.createElement(\"iframe\");c.setAttribute(\"id\",a),c.setAttribute(\"aria-hidden\",\"true\"),c.style.visibility=\"hidden\",c.style.position=\"absolute\",c.style.width=c.style.height=c.borderWidth=\"0px\",b=document.getElementsByTagName(\"body\")[0].appendChild(c)}else document.body&&document.body.insertAdjacentHTML&&document.body.insertAdjacentHTML(\"beforeEnd\",'<iframe name=\"'+a+'\" id=\"'+a+'\" style=\"display:none\"></iframe>');window.frames&&window.frames[a]&&(b=window.frames[a])}return b}},AuthenticationContext.prototype._saveItem=function(a,b,c){if(this.config&&this.config.cacheLocation&&\"localStorage\"===this.config.cacheLocation){if(!this._supportsLocalStorage())return this.info(\"Local storage is not supported\"),!1;if(c){var d=this._getItem(a)||\"\";localStorage.setItem(a,d+b+this.CONSTANTS.CACHE_DELIMETER)}else localStorage.setItem(a,b);return!0}return this._supportsSessionStorage()?(sessionStorage.setItem(a,b),!0):(this.info(\"Session storage is not supported\"),!1)},AuthenticationContext.prototype._getItem=function(a){return this.config&&this.config.cacheLocation&&\"localStorage\"===this.config.cacheLocation?this._supportsLocalStorage()?localStorage.getItem(a):(this.info(\"Local storage is not supported\"),null):this._supportsSessionStorage()?sessionStorage.getItem(a):(this.info(\"Session storage is not supported\"),null)},AuthenticationContext.prototype._supportsLocalStorage=function(){try{return!!window.localStorage&&(window.localStorage.setItem(\"storageTest\",\"A\"),\"A\"==window.localStorage.getItem(\"storageTest\")&&(window.localStorage.removeItem(\"storageTest\"),!window.localStorage.getItem(\"storageTest\")))}catch(a){return!1}},AuthenticationContext.prototype._supportsSessionStorage=function(){try{return!!window.sessionStorage&&(window.sessionStorage.setItem(\"storageTest\",\"A\"),\"A\"==window.sessionStorage.getItem(\"storageTest\")&&(window.sessionStorage.removeItem(\"storageTest\"),!window.sessionStorage.getItem(\"storageTest\")))}catch(a){return!1}},AuthenticationContext.prototype._cloneConfig=function(a){if(null===a||\"object\"!=typeof a)return a;var b={};for(var c in a)a.hasOwnProperty(c)&&(b[c]=a[c]);return b},AuthenticationContext.prototype._addLibMetadata=function(){return\"&x-client-SKU=Js&x-client-Ver=\"+this._libVersion()},AuthenticationContext.prototype.log=function(a,b,c,d){if(a<=Logging.level){if(!Logging.piiLoggingEnabled&&d)return;var e=(new Date).toUTCString(),f=\"\";f=this.config.correlationId?e+\":\"+this.config.correlationId+\"-\"+this._libVersion()+\"-\"+this.CONSTANTS.LEVEL_STRING_MAP[a]+\" \"+b:e+\":\"+this._libVersion()+\"-\"+this.CONSTANTS.LEVEL_STRING_MAP[a]+\" \"+b,c&&(f+=\"\\nstack:\\n\"+c.stack),Logging.log(f)}},AuthenticationContext.prototype.error=function(a,b){this.log(this.CONSTANTS.LOGGING_LEVEL.ERROR,a,b)},AuthenticationContext.prototype.warn=function(a){this.log(this.CONSTANTS.LOGGING_LEVEL.WARN,a,null)},AuthenticationContext.prototype.info=function(a){\r\nthis.log(this.CONSTANTS.LOGGING_LEVEL.INFO,a,null)},AuthenticationContext.prototype.verbose=function(a){this.log(this.CONSTANTS.LOGGING_LEVEL.VERBOSE,a,null)},AuthenticationContext.prototype.errorPii=function(a,b){this.log(this.CONSTANTS.LOGGING_LEVEL.ERROR,a,b,!0)},AuthenticationContext.prototype.warnPii=function(a){this.log(this.CONSTANTS.LOGGING_LEVEL.WARN,a,null,!0)},AuthenticationContext.prototype.infoPii=function(a){this.log(this.CONSTANTS.LOGGING_LEVEL.INFO,a,null,!0)},AuthenticationContext.prototype.verbosePii=function(a){this.log(this.CONSTANTS.LOGGING_LEVEL.VERBOSE,a,null,!0)},AuthenticationContext.prototype._libVersion=function(){return\"1.0.17\"},\"undefined\"!=typeof module&&module.exports&&(module.exports=AuthenticationContext,module.exports.inject=function(a){return new AuthenticationContext(a)}),AuthenticationContext}();","/**\r\n * A set of logging levels\r\n */\r\nexport var LogLevel;\r\n(function (LogLevel) {\r\n    LogLevel[LogLevel[\"Verbose\"] = 0] = \"Verbose\";\r\n    LogLevel[LogLevel[\"Info\"] = 1] = \"Info\";\r\n    LogLevel[LogLevel[\"Warning\"] = 2] = \"Warning\";\r\n    LogLevel[LogLevel[\"Error\"] = 3] = \"Error\";\r\n    LogLevel[LogLevel[\"Off\"] = 99] = \"Off\";\r\n})(LogLevel || (LogLevel = {}));\r\n//# sourceMappingURL=loglevel.js.map","/**\r\n * Class used to subscribe ILogListener and log messages throughout an application\r\n *\r\n */\r\nvar Logger = /** @class */ (function () {\r\n    function Logger() {\r\n    }\r\n    Object.defineProperty(Logger, \"activeLogLevel\", {\r\n        /**\r\n         * Gets or sets the active log level to apply for log filtering\r\n         */\r\n        get: function () {\r\n            return Logger.instance.activeLogLevel;\r\n        },\r\n        set: function (value) {\r\n            Logger.instance.activeLogLevel = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Logger, \"instance\", {\r\n        get: function () {\r\n            if (Logger._instance === undefined || Logger._instance === null) {\r\n                Logger._instance = new LoggerImpl();\r\n            }\r\n            return Logger._instance;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Adds ILogListener instances to the set of subscribed listeners\r\n     *\r\n     * @param listeners One or more listeners to subscribe to this log\r\n     */\r\n    Logger.subscribe = function () {\r\n        var listeners = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            listeners[_i] = arguments[_i];\r\n        }\r\n        listeners.map(function (listener) { return Logger.instance.subscribe(listener); });\r\n    };\r\n    /**\r\n     * Clears the subscribers collection, returning the collection before modifiction\r\n     */\r\n    Logger.clearSubscribers = function () {\r\n        return Logger.instance.clearSubscribers();\r\n    };\r\n    Object.defineProperty(Logger, \"count\", {\r\n        /**\r\n         * Gets the current subscriber count\r\n         */\r\n        get: function () {\r\n            return Logger.instance.count;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Writes the supplied string to the subscribed listeners\r\n     *\r\n     * @param message The message to write\r\n     * @param level [Optional] if supplied will be used as the level of the entry (Default: LogLevel.Info)\r\n     */\r\n    Logger.write = function (message, level) {\r\n        if (level === void 0) { level = 1 /* Info */; }\r\n        Logger.instance.log({ level: level, message: message });\r\n    };\r\n    /**\r\n     * Writes the supplied string to the subscribed listeners\r\n     *\r\n     * @param json The json object to stringify and write\r\n     * @param level [Optional] if supplied will be used as the level of the entry (Default: LogLevel.Info)\r\n     */\r\n    Logger.writeJSON = function (json, level) {\r\n        if (level === void 0) { level = 1 /* Info */; }\r\n        this.write(JSON.stringify(json), level);\r\n    };\r\n    /**\r\n     * Logs the supplied entry to the subscribed listeners\r\n     *\r\n     * @param entry The message to log\r\n     */\r\n    Logger.log = function (entry) {\r\n        Logger.instance.log(entry);\r\n    };\r\n    /**\r\n     * Logs an error object to the subscribed listeners\r\n     *\r\n     * @param err The error object\r\n     */\r\n    Logger.error = function (err) {\r\n        Logger.instance.log({ data: err, level: 3 /* Error */, message: err.message });\r\n    };\r\n    return Logger;\r\n}());\r\nexport { Logger };\r\nvar LoggerImpl = /** @class */ (function () {\r\n    function LoggerImpl(activeLogLevel, subscribers) {\r\n        if (activeLogLevel === void 0) { activeLogLevel = 2 /* Warning */; }\r\n        if (subscribers === void 0) { subscribers = []; }\r\n        this.activeLogLevel = activeLogLevel;\r\n        this.subscribers = subscribers;\r\n    }\r\n    LoggerImpl.prototype.subscribe = function (listener) {\r\n        this.subscribers.push(listener);\r\n    };\r\n    LoggerImpl.prototype.clearSubscribers = function () {\r\n        var s = this.subscribers.slice(0);\r\n        this.subscribers.length = 0;\r\n        return s;\r\n    };\r\n    Object.defineProperty(LoggerImpl.prototype, \"count\", {\r\n        get: function () {\r\n            return this.subscribers.length;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    LoggerImpl.prototype.write = function (message, level) {\r\n        if (level === void 0) { level = 1 /* Info */; }\r\n        this.log({ level: level, message: message });\r\n    };\r\n    LoggerImpl.prototype.log = function (entry) {\r\n        if (entry !== undefined && this.activeLogLevel <= entry.level) {\r\n            this.subscribers.map(function (subscriber) { return subscriber.log(entry); });\r\n        }\r\n    };\r\n    return LoggerImpl;\r\n}());\r\n//# sourceMappingURL=logger.js.map","/**\r\n * Implementation of LogListener which logs to the console\r\n *\r\n */\r\nvar ConsoleListener = /** @class */ (function () {\r\n    function ConsoleListener() {\r\n    }\r\n    /**\r\n     * Any associated data that a given logging listener may choose to log or ignore\r\n     *\r\n     * @param entry The information to be logged\r\n     */\r\n    ConsoleListener.prototype.log = function (entry) {\r\n        var msg = this.format(entry);\r\n        switch (entry.level) {\r\n            case 0 /* Verbose */:\r\n            case 1 /* Info */:\r\n                console.log(msg);\r\n                break;\r\n            case 2 /* Warning */:\r\n                console.warn(msg);\r\n                break;\r\n            case 3 /* Error */:\r\n                console.error(msg);\r\n                break;\r\n        }\r\n    };\r\n    /**\r\n     * Formats the message\r\n     *\r\n     * @param entry The information to format into a string\r\n     */\r\n    ConsoleListener.prototype.format = function (entry) {\r\n        var msg = [];\r\n        msg.push(\"Message: \" + entry.message);\r\n        if (entry.data !== undefined) {\r\n            try {\r\n                msg.push(\" Data: \" + JSON.stringify(entry.data));\r\n            }\r\n            catch (e) {\r\n                msg.push(\" Data: Error in stringify of supplied data \" + e);\r\n            }\r\n        }\r\n        return msg.join(\"\");\r\n    };\r\n    return ConsoleListener;\r\n}());\r\nexport { ConsoleListener };\r\n/**\r\n * Implementation of LogListener which logs to the supplied function\r\n *\r\n */\r\nvar FunctionListener = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of the FunctionListener class\r\n     *\r\n     * @constructor\r\n     * @param  method The method to which any logging data will be passed\r\n     */\r\n    function FunctionListener(method) {\r\n        this.method = method;\r\n    }\r\n    /**\r\n     * Any associated data that a given logging listener may choose to log or ignore\r\n     *\r\n     * @param entry The information to be logged\r\n     */\r\n    FunctionListener.prototype.log = function (entry) {\r\n        this.method(entry);\r\n    };\r\n    return FunctionListener;\r\n}());\r\nexport { FunctionListener };\r\n//# sourceMappingURL=listeners.js.map","import { RuntimeConfig, dateAdd, PnPClientStorage } from \"@pnp/common\";\r\nvar CachingOptions = /** @class */ (function () {\r\n    function CachingOptions(key) {\r\n        this.key = key;\r\n        this.expiration = dateAdd(new Date(), \"second\", RuntimeConfig.defaultCachingTimeoutSeconds);\r\n        this.storeName = RuntimeConfig.defaultCachingStore;\r\n    }\r\n    Object.defineProperty(CachingOptions.prototype, \"store\", {\r\n        get: function () {\r\n            if (this.storeName === \"local\") {\r\n                return CachingOptions.storage.local;\r\n            }\r\n            else {\r\n                return CachingOptions.storage.session;\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    CachingOptions.storage = new PnPClientStorage();\r\n    return CachingOptions;\r\n}());\r\nexport { CachingOptions };\r\nvar CachingParserWrapper = /** @class */ (function () {\r\n    function CachingParserWrapper(parser, cacheOptions) {\r\n        this.parser = parser;\r\n        this.cacheOptions = cacheOptions;\r\n    }\r\n    CachingParserWrapper.prototype.parse = function (response) {\r\n        var _this = this;\r\n        return this.parser.parse(response).then(function (r) { return _this.cacheData(r); });\r\n    };\r\n    CachingParserWrapper.prototype.cacheData = function (data) {\r\n        if (this.cacheOptions.store !== null) {\r\n            this.cacheOptions.store.put(this.cacheOptions.key, data, this.cacheOptions.expiration);\r\n        }\r\n        return data;\r\n    };\r\n    return CachingParserWrapper;\r\n}());\r\nexport { CachingParserWrapper };\r\n//# sourceMappingURL=caching.js.map","import * as tslib_1 from \"tslib\";\r\nimport { isFunc, hOP } from \"@pnp/common\";\r\nvar HttpRequestError = /** @class */ (function (_super) {\r\n    tslib_1.__extends(HttpRequestError, _super);\r\n    function HttpRequestError(message, response, status, statusText) {\r\n        if (status === void 0) { status = response.status; }\r\n        if (statusText === void 0) { statusText = response.statusText; }\r\n        var _this = _super.call(this, message) || this;\r\n        _this.response = response;\r\n        _this.status = status;\r\n        _this.statusText = statusText;\r\n        _this.isHttpRequestError = true;\r\n        return _this;\r\n    }\r\n    HttpRequestError.init = function (r) {\r\n        return r.clone().text().then(function (t) {\r\n            return new HttpRequestError(\"Error making HttpClient request in queryable [\" + r.status + \"] \" + r.statusText + \" ::> \" + t, r.clone());\r\n        });\r\n    };\r\n    return HttpRequestError;\r\n}(Error));\r\nexport { HttpRequestError };\r\nvar ODataParserBase = /** @class */ (function () {\r\n    function ODataParserBase() {\r\n    }\r\n    ODataParserBase.prototype.parse = function (r) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            if (_this.handleError(r, reject)) {\r\n                _this.parseImpl(r, resolve, reject);\r\n            }\r\n        });\r\n    };\r\n    ODataParserBase.prototype.parseImpl = function (r, resolve, reject) {\r\n        var _this = this;\r\n        if ((r.headers.has(\"Content-Length\") && parseFloat(r.headers.get(\"Content-Length\")) === 0) || r.status === 204) {\r\n            resolve({});\r\n        }\r\n        else {\r\n            // patch to handle cases of 200 response with no or whitespace only bodies (#487 & #545)\r\n            r.text()\r\n                .then(function (txt) { return txt.replace(/\\s/ig, \"\").length > 0 ? JSON.parse(txt) : {}; })\r\n                .then(function (json) { return resolve(_this.parseODataJSON(json)); })\r\n                .catch(function (e) { return reject(e); });\r\n        }\r\n    };\r\n    /**\r\n     * Handles a response with ok === false by parsing the body and creating a ProcessHttpClientResponseException\r\n     * which is passed to the reject delegate. This method returns true if there is no error, otherwise false\r\n     *\r\n     * @param r Current response object\r\n     * @param reject reject delegate for the surrounding promise\r\n     */\r\n    ODataParserBase.prototype.handleError = function (r, reject) {\r\n        if (!r.ok) {\r\n            HttpRequestError.init(r).then(reject);\r\n        }\r\n        return r.ok;\r\n    };\r\n    /**\r\n     * Normalizes the json response by removing the various nested levels\r\n     *\r\n     * @param json json object to parse\r\n     */\r\n    ODataParserBase.prototype.parseODataJSON = function (json) {\r\n        var result = json;\r\n        if (hOP(json, \"d\")) {\r\n            if (hOP(json.d, \"results\")) {\r\n                result = json.d.results;\r\n            }\r\n            else {\r\n                result = json.d;\r\n            }\r\n        }\r\n        else if (hOP(json, \"value\")) {\r\n            result = json.value;\r\n        }\r\n        return result;\r\n    };\r\n    return ODataParserBase;\r\n}());\r\nexport { ODataParserBase };\r\nvar ODataDefaultParser = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ODataDefaultParser, _super);\r\n    function ODataDefaultParser() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    return ODataDefaultParser;\r\n}(ODataParserBase));\r\nexport { ODataDefaultParser };\r\nvar TextParser = /** @class */ (function (_super) {\r\n    tslib_1.__extends(TextParser, _super);\r\n    function TextParser() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    TextParser.prototype.parseImpl = function (r, resolve) {\r\n        r.text().then(resolve);\r\n    };\r\n    return TextParser;\r\n}(ODataParserBase));\r\nexport { TextParser };\r\nvar BlobParser = /** @class */ (function (_super) {\r\n    tslib_1.__extends(BlobParser, _super);\r\n    function BlobParser() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    BlobParser.prototype.parseImpl = function (r, resolve) {\r\n        r.blob().then(resolve);\r\n    };\r\n    return BlobParser;\r\n}(ODataParserBase));\r\nexport { BlobParser };\r\nvar JSONParser = /** @class */ (function (_super) {\r\n    tslib_1.__extends(JSONParser, _super);\r\n    function JSONParser() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    JSONParser.prototype.parseImpl = function (r, resolve) {\r\n        r.json().then(resolve);\r\n    };\r\n    return JSONParser;\r\n}(ODataParserBase));\r\nexport { JSONParser };\r\nvar BufferParser = /** @class */ (function (_super) {\r\n    tslib_1.__extends(BufferParser, _super);\r\n    function BufferParser() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    BufferParser.prototype.parseImpl = function (r, resolve) {\r\n        if (isFunc(r.arrayBuffer)) {\r\n            r.arrayBuffer().then(resolve);\r\n        }\r\n        else {\r\n            r.buffer().then(resolve);\r\n        }\r\n    };\r\n    return BufferParser;\r\n}(ODataParserBase));\r\nexport { BufferParser };\r\nvar LambdaParser = /** @class */ (function (_super) {\r\n    tslib_1.__extends(LambdaParser, _super);\r\n    function LambdaParser(parser) {\r\n        var _this = _super.call(this) || this;\r\n        _this.parser = parser;\r\n        return _this;\r\n    }\r\n    LambdaParser.prototype.parseImpl = function (r, resolve) {\r\n        this.parser(r).then(resolve);\r\n    };\r\n    return LambdaParser;\r\n}(ODataParserBase));\r\nexport { LambdaParser };\r\n//# sourceMappingURL=parsers.js.map","import * as tslib_1 from \"tslib\";\r\nimport { extend, isFunc, hOP } from \"@pnp/common\";\r\nimport { Logger } from \"@pnp/logging\";\r\nimport { CachingOptions, CachingParserWrapper } from \"./caching\";\r\n/**\r\n * Resolves the context's result value\r\n *\r\n * @param context The current context\r\n */\r\nfunction returnResult(context) {\r\n    Logger.log({\r\n        data: Logger.activeLogLevel === 0 /* Verbose */ ? context.result : {},\r\n        level: 1 /* Info */,\r\n        message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Returning result from pipeline. Set logging to verbose to see data.\",\r\n    });\r\n    return Promise.resolve(context.result);\r\n}\r\n/**\r\n * Sets the result on the context\r\n */\r\nexport function setResult(context, value) {\r\n    return new Promise(function (resolve) {\r\n        context.result = value;\r\n        context.hasResult = true;\r\n        resolve(context);\r\n    });\r\n}\r\n/**\r\n * Invokes the next method in the provided context's pipeline\r\n *\r\n * @param c The current request context\r\n */\r\nfunction next(c) {\r\n    if (c.pipeline.length > 0) {\r\n        return c.pipeline.shift()(c);\r\n    }\r\n    else {\r\n        return Promise.resolve(c);\r\n    }\r\n}\r\n/**\r\n * Executes the current request context's pipeline\r\n *\r\n * @param context Current context\r\n */\r\nexport function pipe(context) {\r\n    if (context.pipeline.length < 1) {\r\n        Logger.write(\"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Request pipeline contains no methods!\", 2 /* Warning */);\r\n    }\r\n    var promise = next(context).then(function (ctx) { return returnResult(ctx); }).catch(function (e) {\r\n        Logger.error(e);\r\n        throw e;\r\n    });\r\n    if (context.isBatched) {\r\n        // this will block the batch's execute method from returning until the child requets have been resolved\r\n        context.batch.addResolveBatchDependency(promise);\r\n    }\r\n    return promise;\r\n}\r\n/**\r\n * decorator factory applied to methods in the pipeline to control behavior\r\n */\r\nexport function requestPipelineMethod(alwaysRun) {\r\n    if (alwaysRun === void 0) { alwaysRun = false; }\r\n    return function (target, propertyKey, descriptor) {\r\n        var method = descriptor.value;\r\n        descriptor.value = function () {\r\n            var args = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                args[_i] = arguments[_i];\r\n            }\r\n            // if we have a result already in the pipeline, pass it along and don't call the tagged method\r\n            if (!alwaysRun && args.length > 0 && hOP(args[0], \"hasResult\") && args[0].hasResult) {\r\n                Logger.write(\"[\" + args[0].requestId + \"] (\" + (new Date()).getTime() + \") Skipping request pipeline method \" + propertyKey + \", existing result in pipeline.\", 0 /* Verbose */);\r\n                return Promise.resolve(args[0]);\r\n            }\r\n            // apply the tagged method\r\n            Logger.write(\"[\" + args[0].requestId + \"] (\" + (new Date()).getTime() + \") Calling request pipeline method \" + propertyKey + \".\", 0 /* Verbose */);\r\n            // then chain the next method in the context's pipeline - allows for dynamic pipeline\r\n            return method.apply(target, args).then(function (ctx) { return next(ctx); });\r\n        };\r\n    };\r\n}\r\n/**\r\n * Contains the methods used within the request pipeline\r\n */\r\nvar PipelineMethods = /** @class */ (function () {\r\n    function PipelineMethods() {\r\n    }\r\n    /**\r\n     * Logs the start of the request\r\n     */\r\n    PipelineMethods.logStart = function (context) {\r\n        return new Promise(function (resolve) {\r\n            Logger.log({\r\n                data: Logger.activeLogLevel === 1 /* Info */ ? {} : context,\r\n                level: 1 /* Info */,\r\n                message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Beginning \" + context.verb + \" request (\" + context.requestAbsoluteUrl + \")\",\r\n            });\r\n            resolve(context);\r\n        });\r\n    };\r\n    /**\r\n     * Handles caching of the request\r\n     */\r\n    PipelineMethods.caching = function (context) {\r\n        return new Promise(function (resolve) {\r\n            // handle caching, if applicable\r\n            if (context.isCached) {\r\n                Logger.write(\"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Caching is enabled for request, checking cache...\", 1 /* Info */);\r\n                var cacheOptions = new CachingOptions(context.requestAbsoluteUrl.toLowerCase());\r\n                if (context.cachingOptions !== undefined) {\r\n                    cacheOptions = extend(cacheOptions, context.cachingOptions);\r\n                }\r\n                // we may not have a valid store\r\n                if (cacheOptions.store !== null) {\r\n                    // check if we have the data in cache and if so resolve the promise and return\r\n                    var data = cacheOptions.store.get(cacheOptions.key);\r\n                    if (data !== null) {\r\n                        // ensure we clear any held batch dependency we are resolving from the cache\r\n                        Logger.log({\r\n                            data: Logger.activeLogLevel === 1 /* Info */ ? {} : data,\r\n                            level: 1 /* Info */,\r\n                            message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Value returned from cache.\",\r\n                        });\r\n                        if (isFunc(context.batchDependency)) {\r\n                            context.batchDependency();\r\n                        }\r\n                        // handle the case where a parser needs to take special actions with a cached result\r\n                        if (hOP(context.parser, \"hydrate\")) {\r\n                            data = context.parser.hydrate(data);\r\n                        }\r\n                        return setResult(context, data).then(function (ctx) { return resolve(ctx); });\r\n                    }\r\n                }\r\n                Logger.write(\"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Value not found in cache.\", 1 /* Info */);\r\n                // if we don't then wrap the supplied parser in the caching parser wrapper\r\n                // and send things on their way\r\n                context.parser = new CachingParserWrapper(context.parser, cacheOptions);\r\n            }\r\n            return resolve(context);\r\n        });\r\n    };\r\n    /**\r\n     * Sends the request\r\n     */\r\n    PipelineMethods.send = function (context) {\r\n        return new Promise(function (resolve, reject) {\r\n            // send or batch the request\r\n            if (context.isBatched) {\r\n                // we are in a batch, so add to batch, remove dependency, and resolve with the batch's promise\r\n                var p = context.batch.add(context.requestAbsoluteUrl, context.verb, context.options, context.parser, context.requestId);\r\n                // we release the dependency here to ensure the batch does not execute until the request is added to the batch\r\n                if (isFunc(context.batchDependency)) {\r\n                    context.batchDependency();\r\n                }\r\n                Logger.write(\"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Batching request in batch \" + context.batch.batchId + \".\", 1 /* Info */);\r\n                // we set the result as the promise which will be resolved by the batch's execution\r\n                resolve(setResult(context, p));\r\n            }\r\n            else {\r\n                Logger.write(\"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Sending request.\", 1 /* Info */);\r\n                // we are not part of a batch, so proceed as normal\r\n                var client = context.clientFactory();\r\n                var opts = extend(context.options || {}, { method: context.verb });\r\n                client.fetch(context.requestAbsoluteUrl, opts)\r\n                    .then(function (response) { return context.parser.parse(response); })\r\n                    .then(function (result) { return setResult(context, result); })\r\n                    .then(function (ctx) { return resolve(ctx); })\r\n                    .catch(function (e) { return reject(e); });\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Logs the end of the request\r\n     */\r\n    PipelineMethods.logEnd = function (context) {\r\n        return new Promise(function (resolve) {\r\n            if (context.isBatched) {\r\n                Logger.log({\r\n                    data: Logger.activeLogLevel === 1 /* Info */ ? {} : context,\r\n                    level: 1 /* Info */,\r\n                    message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") \" + context.verb + \" request will complete in batch \" + context.batch.batchId + \".\",\r\n                });\r\n            }\r\n            else {\r\n                Logger.log({\r\n                    data: Logger.activeLogLevel === 1 /* Info */ ? {} : context,\r\n                    level: 1 /* Info */,\r\n                    message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Completing \" + context.verb + \" request.\",\r\n                });\r\n            }\r\n            resolve(context);\r\n        });\r\n    };\r\n    tslib_1.__decorate([\r\n        requestPipelineMethod(true)\r\n    ], PipelineMethods, \"logStart\", null);\r\n    tslib_1.__decorate([\r\n        requestPipelineMethod()\r\n    ], PipelineMethods, \"caching\", null);\r\n    tslib_1.__decorate([\r\n        requestPipelineMethod()\r\n    ], PipelineMethods, \"send\", null);\r\n    tslib_1.__decorate([\r\n        requestPipelineMethod(true)\r\n    ], PipelineMethods, \"logEnd\", null);\r\n    return PipelineMethods;\r\n}());\r\nexport { PipelineMethods };\r\nexport function getDefaultPipeline() {\r\n    return [\r\n        PipelineMethods.logStart,\r\n        PipelineMethods.caching,\r\n        PipelineMethods.send,\r\n        PipelineMethods.logEnd,\r\n    ].slice(0);\r\n}\r\n//# sourceMappingURL=pipeline.js.map","import * as tslib_1 from \"tslib\";\r\nimport { combine, RuntimeConfig, mergeOptions, objectDefinedNotNull, isArray, } from \"@pnp/common\";\r\nimport { ODataDefaultParser, JSONParser } from \"./parsers\";\r\nimport { getDefaultPipeline, pipe, } from \"./pipeline\";\r\nvar Queryable = /** @class */ (function () {\r\n    function Queryable() {\r\n        this._query = new Map();\r\n        this._options = {};\r\n        this._url = \"\";\r\n        this._parentUrl = \"\";\r\n        this._useCaching = false;\r\n        this._cachingOptions = null;\r\n        this._cloneParentWasCaching = false;\r\n        this._cloneParentCacheOptions = null;\r\n        this._requestPipeline = null;\r\n    }\r\n    /**\r\n    * Gets the currentl url\r\n    *\r\n    */\r\n    Queryable.prototype.toUrl = function () {\r\n        return this._url;\r\n    };\r\n    /**\r\n     * Directly concatonates the supplied string to the current url, not normalizing \"/\" chars\r\n     *\r\n     * @param pathPart The string to concatonate to the url\r\n     */\r\n    Queryable.prototype.concat = function (pathPart) {\r\n        this._url += pathPart;\r\n        return this;\r\n    };\r\n    Object.defineProperty(Queryable.prototype, \"query\", {\r\n        /**\r\n         * Provides access to the query builder for this url\r\n         *\r\n         */\r\n        get: function () {\r\n            return this._query;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Sets custom options for current object and all derived objects accessible via chaining\r\n     *\r\n     * @param options custom options\r\n     */\r\n    Queryable.prototype.configure = function (options) {\r\n        mergeOptions(this._options, options);\r\n        return this;\r\n    };\r\n    /**\r\n     * Configures this instance from the configure options of the supplied instance\r\n     *\r\n     * @param o Instance from which options should be taken\r\n     */\r\n    Queryable.prototype.configureFrom = function (o) {\r\n        mergeOptions(this._options, o._options);\r\n        return this;\r\n    };\r\n    /**\r\n     * Enables caching for this request\r\n     *\r\n     * @param options Defines the options used when caching this request\r\n     */\r\n    Queryable.prototype.usingCaching = function (options) {\r\n        if (!RuntimeConfig.globalCacheDisable) {\r\n            this._useCaching = true;\r\n            if (options !== undefined) {\r\n                this._cachingOptions = options;\r\n            }\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Allows you to set a request specific processing pipeline\r\n     *\r\n     * @param pipeline The set of methods, in order, to execute a given request\r\n     */\r\n    Queryable.prototype.withPipeline = function (pipeline) {\r\n        this._requestPipeline = pipeline.slice(0);\r\n        return this;\r\n    };\r\n    Queryable.prototype.getCore = function (parser, options) {\r\n        if (parser === void 0) { parser = new JSONParser(); }\r\n        if (options === void 0) { options = {}; }\r\n        // Fix for #304 - when we clone objects we in some cases then execute a get request\r\n        // in these cases the caching settings were getting dropped from the request\r\n        // this tracks if the object from which this was cloned was caching and applies that to an immediate get request\r\n        // does not affect objects cloned from this as we are using different fields to track the settings so it won't\r\n        // be triggered\r\n        if (this._cloneParentWasCaching) {\r\n            this.usingCaching(this._cloneParentCacheOptions);\r\n        }\r\n        return this.reqImpl(\"GET\", options, parser);\r\n    };\r\n    Queryable.prototype.postCore = function (options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (parser === void 0) { parser = new JSONParser(); }\r\n        return this.reqImpl(\"POST\", options, parser);\r\n    };\r\n    Queryable.prototype.patchCore = function (options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (parser === void 0) { parser = new JSONParser(); }\r\n        return this.reqImpl(\"PATCH\", options, parser);\r\n    };\r\n    Queryable.prototype.deleteCore = function (options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (parser === void 0) { parser = new JSONParser(); }\r\n        return this.reqImpl(\"DELETE\", options, parser);\r\n    };\r\n    Queryable.prototype.putCore = function (options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (parser === void 0) { parser = new JSONParser(); }\r\n        return this.reqImpl(\"PUT\", options, parser);\r\n    };\r\n    Queryable.prototype.reqImpl = function (method, options, parser) {\r\n        var _this = this;\r\n        if (options === void 0) { options = {}; }\r\n        return this.getRequestPipeline(method, options, parser)\r\n            .then(function (pipeline) { return _this.toRequestContext(method, options, parser, pipeline); })\r\n            .then(function (context) { return pipe(context); });\r\n    };\r\n    /**\r\n     * Appends the given string and normalizes \"/\" chars\r\n     *\r\n     * @param pathPart The string to append\r\n     */\r\n    Queryable.prototype.append = function (pathPart) {\r\n        this._url = combine(this._url, pathPart);\r\n    };\r\n    Object.defineProperty(Queryable.prototype, \"parentUrl\", {\r\n        /**\r\n         * Gets the parent url used when creating this instance\r\n         *\r\n         */\r\n        get: function () {\r\n            return this._parentUrl;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Extends this queryable from the provided parent\r\n     *\r\n     * @param parent Parent queryable from which we will derive a base url\r\n     * @param path Additional path\r\n     */\r\n    Queryable.prototype.extend = function (parent, path) {\r\n        this._parentUrl = parent._url;\r\n        this._url = combine(this._parentUrl, path || \"\");\r\n        this.configureFrom(parent);\r\n    };\r\n    /**\r\n     * Configures a cloned object from this instance\r\n     *\r\n     * @param clone\r\n     */\r\n    Queryable.prototype._clone = function (clone, _0) {\r\n        clone.configureFrom(this);\r\n        if (this._useCaching) {\r\n            clone._cloneParentWasCaching = true;\r\n            clone._cloneParentCacheOptions = this._cachingOptions;\r\n        }\r\n        return clone;\r\n    };\r\n    /**\r\n     * Handles getting the request pipeline to run for a given request\r\n     */\r\n    // @ts-ignore\r\n    // justified because we want to show that all these arguments are passed to the method so folks inheriting and potentially overriding\r\n    // clearly see how the method is invoked inside the class\r\n    Queryable.prototype.getRequestPipeline = function (method, options, parser) {\r\n        var _this = this;\r\n        if (options === void 0) { options = {}; }\r\n        return new Promise(function (resolve) {\r\n            if (objectDefinedNotNull(_this._requestPipeline) && isArray(_this._requestPipeline)) {\r\n                resolve(_this._requestPipeline);\r\n            }\r\n            else {\r\n                resolve(getDefaultPipeline());\r\n            }\r\n        });\r\n    };\r\n    return Queryable;\r\n}());\r\nexport { Queryable };\r\nvar ODataQueryable = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ODataQueryable, _super);\r\n    function ODataQueryable() {\r\n        var _this = _super.call(this) || this;\r\n        _this._batch = null;\r\n        _this._batchDependency = null;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Adds this query to the supplied batch\r\n     *\r\n     * @example\r\n     * ```\r\n     *\r\n     * let b = pnp.sp.createBatch();\r\n     * pnp.sp.web.inBatch(b).get().then(...);\r\n     * b.execute().then(...)\r\n     * ```\r\n     */\r\n    ODataQueryable.prototype.inBatch = function (batch) {\r\n        if (this.batch !== null) {\r\n            throw Error(\"This query is already part of a batch.\");\r\n        }\r\n        if (objectDefinedNotNull(batch)) {\r\n            this._batch = batch;\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Gets the currentl url\r\n     *\r\n     */\r\n    ODataQueryable.prototype.toUrl = function () {\r\n        return this._url;\r\n    };\r\n    /**\r\n     * Executes the currently built request\r\n     *\r\n     * @param parser Allows you to specify a parser to handle the result\r\n     * @param getOptions The options used for this request\r\n     */\r\n    ODataQueryable.prototype.get = function (parser, options) {\r\n        if (parser === void 0) { parser = new ODataDefaultParser(); }\r\n        if (options === void 0) { options = {}; }\r\n        return this.getCore(parser, options);\r\n    };\r\n    ODataQueryable.prototype.getCore = function (parser, options) {\r\n        if (parser === void 0) { parser = new ODataDefaultParser(); }\r\n        if (options === void 0) { options = {}; }\r\n        return _super.prototype.getCore.call(this, parser, options);\r\n    };\r\n    ODataQueryable.prototype.postCore = function (options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (parser === void 0) { parser = new ODataDefaultParser(); }\r\n        return _super.prototype.postCore.call(this, options, parser);\r\n    };\r\n    ODataQueryable.prototype.patchCore = function (options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (parser === void 0) { parser = new ODataDefaultParser(); }\r\n        return _super.prototype.patchCore.call(this, options, parser);\r\n    };\r\n    ODataQueryable.prototype.deleteCore = function (options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (parser === void 0) { parser = new ODataDefaultParser(); }\r\n        return _super.prototype.deleteCore.call(this, options, parser);\r\n    };\r\n    ODataQueryable.prototype.putCore = function (options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (parser === void 0) { parser = new ODataDefaultParser(); }\r\n        return _super.prototype.putCore.call(this, options, parser);\r\n    };\r\n    ODataQueryable.prototype.reqImpl = function (method, options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (this.hasBatch) {\r\n            this._batchDependency = this.addBatchDependency();\r\n        }\r\n        return _super.prototype.reqImpl.call(this, method, options, parser);\r\n    };\r\n    /**\r\n     * Blocks a batch call from occuring, MUST be cleared by calling the returned function\r\n    */\r\n    ODataQueryable.prototype.addBatchDependency = function () {\r\n        if (this._batch !== null) {\r\n            return this._batch.addDependency();\r\n        }\r\n        return function () { return null; };\r\n    };\r\n    Object.defineProperty(ODataQueryable.prototype, \"hasBatch\", {\r\n        /**\r\n         * Indicates if the current query has a batch associated\r\n         *\r\n         */\r\n        get: function () {\r\n            return objectDefinedNotNull(this._batch);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ODataQueryable.prototype, \"batch\", {\r\n        /**\r\n         * The batch currently associated with this query or null\r\n         *\r\n         */\r\n        get: function () {\r\n            return this.hasBatch ? this._batch : null;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Configures a cloned object from this instance\r\n     *\r\n     * @param clone\r\n     */\r\n    ODataQueryable.prototype._clone = function (clone, cloneSettings) {\r\n        clone = _super.prototype._clone.call(this, clone, cloneSettings);\r\n        if (cloneSettings.includeBatch) {\r\n            clone = clone.inBatch(this._batch);\r\n        }\r\n        return clone;\r\n    };\r\n    return ODataQueryable;\r\n}(Queryable));\r\nexport { ODataQueryable };\r\n//# sourceMappingURL=queryable.js.map","import { getGUID } from \"@pnp/common\";\r\nvar ODataBatch = /** @class */ (function () {\r\n    function ODataBatch(_batchId) {\r\n        if (_batchId === void 0) { _batchId = getGUID(); }\r\n        this._batchId = _batchId;\r\n        this._reqs = [];\r\n        this._deps = [];\r\n        this._rDeps = [];\r\n    }\r\n    Object.defineProperty(ODataBatch.prototype, \"batchId\", {\r\n        get: function () {\r\n            return this._batchId;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ODataBatch.prototype, \"requests\", {\r\n        /**\r\n         * The requests contained in this batch\r\n         */\r\n        get: function () {\r\n            return this._reqs;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     *\r\n     * @param url Request url\r\n     * @param method Request method (GET, POST, etc)\r\n     * @param options Any request options\r\n     * @param parser The parser used to handle the eventual return from the query\r\n     * @param id An identifier used to track a request within a batch\r\n     */\r\n    ODataBatch.prototype.add = function (url, method, options, parser, id) {\r\n        var info = {\r\n            id: id,\r\n            method: method.toUpperCase(),\r\n            options: options,\r\n            parser: parser,\r\n            reject: null,\r\n            resolve: null,\r\n            url: url,\r\n        };\r\n        var p = new Promise(function (resolve, reject) {\r\n            info.resolve = resolve;\r\n            info.reject = reject;\r\n        });\r\n        this._reqs.push(info);\r\n        return p;\r\n    };\r\n    /**\r\n     * Adds a dependency insuring that some set of actions will occur before a batch is processed.\r\n     * MUST be cleared using the returned resolve delegate to allow batches to run\r\n     */\r\n    ODataBatch.prototype.addDependency = function () {\r\n        var resolver = function () { return void (0); };\r\n        this._deps.push(new Promise(function (resolve) {\r\n            resolver = resolve;\r\n        }));\r\n        return resolver;\r\n    };\r\n    /**\r\n     * The batch's execute method will not resolve util any promises added here resolve\r\n     *\r\n     * @param p The dependent promise\r\n     */\r\n    ODataBatch.prototype.addResolveBatchDependency = function (p) {\r\n        this._rDeps.push(p);\r\n    };\r\n    /**\r\n     * Execute the current batch and resolve the associated promises\r\n     *\r\n     * @returns A promise which will be resolved once all of the batch's child promises have resolved\r\n     */\r\n    ODataBatch.prototype.execute = function () {\r\n        var _this = this;\r\n        // we need to check the dependencies twice due to how different engines handle things.\r\n        // We can get a second set of promises added during the first set resolving\r\n        return Promise.all(this._deps)\r\n            .then(function () { return Promise.all(_this._deps); })\r\n            .then(function () { return _this.executeImpl(); })\r\n            .then(function () { return Promise.all(_this._rDeps); })\r\n            .then(function () { return void (0); });\r\n    };\r\n    return ODataBatch;\r\n}());\r\nexport { ODataBatch };\r\n//# sourceMappingURL=odatabatch.js.map","import { stringIsNullOrEmpty } from \"@pnp/common\";\r\nexport function extractWebUrl(candidateUrl) {\r\n    if (stringIsNullOrEmpty(candidateUrl)) {\r\n        return \"\";\r\n    }\r\n    var index = candidateUrl.indexOf(\"_api/\");\r\n    if (index < 0) {\r\n        index = candidateUrl.indexOf(\"_vti_bin/\");\r\n    }\r\n    if (index > -1) {\r\n        return candidateUrl.substr(0, index);\r\n    }\r\n    // if all else fails just give them what they gave us back\r\n    return candidateUrl;\r\n}\r\n//# sourceMappingURL=extractweburl.js.map","import * as tslib_1 from \"tslib\";\r\nimport { extend, combine, hOP } from \"@pnp/common\";\r\nimport { Logger } from \"@pnp/logging\";\r\nimport { ODataParserBase } from \"@pnp/odata\";\r\nimport { extractWebUrl } from \"./utils/extractweburl\";\r\nexport function odataUrlFrom(candidate) {\r\n    var parts = [];\r\n    var s = [\"odata.type\", \"odata.editLink\", \"__metadata\", \"odata.metadata\"];\r\n    if (hOP(candidate, s[0]) && candidate[s[0]] === \"SP.Web\") {\r\n        // webs return an absolute url in the editLink\r\n        if (hOP(candidate, s[1])) {\r\n            parts.push(candidate[s[1]]);\r\n        }\r\n        else if (hOP(candidate, s[2])) {\r\n            // we are dealing with verbose, which has an absolute uri\r\n            parts.push(candidate.__metadata.uri);\r\n        }\r\n    }\r\n    else {\r\n        if (hOP(candidate, s[3]) && hOP(candidate, s[1])) {\r\n            // we are dealign with minimal metadata (default)\r\n            parts.push(extractWebUrl(candidate[s[3]]), \"_api\", candidate[s[1]]);\r\n        }\r\n        else if (hOP(candidate, s[1])) {\r\n            parts.push(\"_api\", candidate[s[1]]);\r\n        }\r\n        else if (hOP(candidate, s[2])) {\r\n            // we are dealing with verbose, which has an absolute uri\r\n            parts.push(candidate.__metadata.uri);\r\n        }\r\n    }\r\n    if (parts.length < 1) {\r\n        Logger.write(\"No uri information found in ODataEntity parsing, chaining will fail for this object.\", 2 /* Warning */);\r\n        return \"\";\r\n    }\r\n    return combine.apply(void 0, parts);\r\n}\r\nvar SPODataEntityParserImpl = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SPODataEntityParserImpl, _super);\r\n    function SPODataEntityParserImpl(factory) {\r\n        var _this = _super.call(this) || this;\r\n        _this.factory = factory;\r\n        _this.hydrate = function (d) {\r\n            var o = new _this.factory(odataUrlFrom(d), null);\r\n            return extend(o, d);\r\n        };\r\n        return _this;\r\n    }\r\n    SPODataEntityParserImpl.prototype.parse = function (r) {\r\n        var _this = this;\r\n        return _super.prototype.parse.call(this, r).then(function (d) {\r\n            var o = new _this.factory(odataUrlFrom(d), null);\r\n            return extend(o, d);\r\n        });\r\n    };\r\n    return SPODataEntityParserImpl;\r\n}(ODataParserBase));\r\nvar SPODataEntityArrayParserImpl = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SPODataEntityArrayParserImpl, _super);\r\n    function SPODataEntityArrayParserImpl(factory) {\r\n        var _this = _super.call(this) || this;\r\n        _this.factory = factory;\r\n        _this.hydrate = function (d) {\r\n            return d.map(function (v) {\r\n                var o = new _this.factory(odataUrlFrom(v), null);\r\n                return extend(o, v);\r\n            });\r\n        };\r\n        return _this;\r\n    }\r\n    SPODataEntityArrayParserImpl.prototype.parse = function (r) {\r\n        var _this = this;\r\n        return _super.prototype.parse.call(this, r).then(function (d) {\r\n            return d.map(function (v) {\r\n                var o = new _this.factory(odataUrlFrom(v), null);\r\n                return extend(o, v);\r\n            });\r\n        });\r\n    };\r\n    return SPODataEntityArrayParserImpl;\r\n}(ODataParserBase));\r\nexport function spODataEntity(factory) {\r\n    return new SPODataEntityParserImpl(factory);\r\n}\r\nexport function spODataEntityArray(factory) {\r\n    return new SPODataEntityArrayParserImpl(factory);\r\n}\r\n//# sourceMappingURL=odata.js.map","import { combine, extend } from \"@pnp/common\";\r\nimport { ODataDefaultParser } from \"@pnp/odata\";\r\nimport { SPRuntimeConfig } from \"../config/splibconfig\";\r\nvar CachedDigest = /** @class */ (function () {\r\n    function CachedDigest() {\r\n    }\r\n    return CachedDigest;\r\n}());\r\nexport { CachedDigest };\r\n// allows for the caching of digests across all HttpClient's which each have their own DigestCache wrapper.\r\nvar digests = new Map();\r\nvar DigestCache = /** @class */ (function () {\r\n    function DigestCache(_httpClient, _digests) {\r\n        if (_digests === void 0) { _digests = digests; }\r\n        this._httpClient = _httpClient;\r\n        this._digests = _digests;\r\n    }\r\n    DigestCache.prototype.getDigest = function (webUrl) {\r\n        var _this = this;\r\n        var cachedDigest = this._digests.get(webUrl);\r\n        if (cachedDigest !== undefined) {\r\n            var now = new Date();\r\n            if (now < cachedDigest.expiration) {\r\n                return Promise.resolve(cachedDigest.value);\r\n            }\r\n        }\r\n        var url = combine(webUrl, \"/_api/contextinfo\");\r\n        var headers = {\r\n            \"Accept\": \"application/json;odata=verbose\",\r\n            \"Content-Type\": \"application/json;odata=verbose;charset=utf-8\",\r\n        };\r\n        return this._httpClient.fetchRaw(url, {\r\n            cache: \"no-cache\",\r\n            credentials: \"same-origin\",\r\n            headers: extend(headers, SPRuntimeConfig.headers, true),\r\n            method: \"POST\",\r\n        }).then(function (response) {\r\n            var parser = new ODataDefaultParser();\r\n            return parser.parse(response).then(function (d) { return d.GetContextWebInformation; });\r\n        }).then(function (data) {\r\n            var newCachedDigest = new CachedDigest();\r\n            newCachedDigest.value = data.FormDigestValue;\r\n            var seconds = data.FormDigestTimeoutSeconds;\r\n            var expiration = new Date();\r\n            expiration.setTime(expiration.getTime() + 1000 * seconds);\r\n            newCachedDigest.expiration = expiration;\r\n            _this._digests.set(webUrl, newCachedDigest);\r\n            return newCachedDigest.value;\r\n        });\r\n    };\r\n    DigestCache.prototype.clear = function () {\r\n        this._digests.clear();\r\n    };\r\n    return DigestCache;\r\n}());\r\nexport { DigestCache };\r\n//# sourceMappingURL=digestcache.js.map","import { DigestCache } from \"./digestcache\";\r\nimport { extend, mergeHeaders, getCtxCallback, } from \"@pnp/common\";\r\nimport { SPRuntimeConfig } from \"../config/splibconfig\";\r\nimport { extractWebUrl } from \"../utils/extractweburl\";\r\nvar SPHttpClient = /** @class */ (function () {\r\n    function SPHttpClient(_impl) {\r\n        if (_impl === void 0) { _impl = SPRuntimeConfig.fetchClientFactory(); }\r\n        this._impl = _impl;\r\n        this._digestCache = new DigestCache(this);\r\n    }\r\n    SPHttpClient.prototype.fetch = function (url, options) {\r\n        var _this = this;\r\n        if (options === void 0) { options = {}; }\r\n        var opts = extend(options, { cache: \"no-cache\", credentials: \"same-origin\" }, true);\r\n        var headers = new Headers();\r\n        // first we add the global headers so they can be overwritten by any passed in locally to this call\r\n        mergeHeaders(headers, SPRuntimeConfig.headers);\r\n        // second we add the local options so we can overwrite the globals\r\n        mergeHeaders(headers, options.headers);\r\n        // lastly we apply any default headers we need that may not exist\r\n        if (!headers.has(\"Accept\")) {\r\n            headers.append(\"Accept\", \"application/json\");\r\n        }\r\n        if (!headers.has(\"Content-Type\")) {\r\n            headers.append(\"Content-Type\", \"application/json;odata=verbose;charset=utf-8\");\r\n        }\r\n        if (!headers.has(\"X-ClientService-ClientTag\")) {\r\n            headers.append(\"X-ClientService-ClientTag\", \"PnPCoreJS:@pnp-1.3.2\");\r\n        }\r\n        if (!headers.has(\"User-Agent\")) {\r\n            // this marks the requests for understanding by the service\r\n            headers.append(\"User-Agent\", \"NONISV|SharePointPnP|PnPCoreJS/1.3.2\");\r\n        }\r\n        opts = extend(opts, { headers: headers });\r\n        if (opts.method && opts.method.toUpperCase() !== \"GET\") {\r\n            // if we have either a request digest or an authorization header we don't need a digest\r\n            if (!headers.has(\"X-RequestDigest\") && !headers.has(\"Authorization\")) {\r\n                return this._digestCache.getDigest(extractWebUrl(url))\r\n                    .then(function (digest) {\r\n                    headers.append(\"X-RequestDigest\", digest);\r\n                    return _this.fetchRaw(url, opts);\r\n                });\r\n            }\r\n        }\r\n        return this.fetchRaw(url, opts);\r\n    };\r\n    SPHttpClient.prototype.fetchRaw = function (url, options) {\r\n        var _this = this;\r\n        if (options === void 0) { options = {}; }\r\n        // here we need to normalize the headers\r\n        var rawHeaders = new Headers();\r\n        mergeHeaders(rawHeaders, options.headers);\r\n        options = extend(options, { headers: rawHeaders });\r\n        var retry = function (ctx) {\r\n            // handles setting the proper timeout for a retry\r\n            var setRetry = function (response) {\r\n                var delay;\r\n                if (response.headers.has(\"Retry-After\")) {\r\n                    // if we have gotten a header, use that value as the delay value\r\n                    delay = parseInt(response.headers.get(\"Retry-After\"), 10);\r\n                }\r\n                else {\r\n                    // grab our current delay\r\n                    delay = ctx.delay;\r\n                    // Increment our counters.\r\n                    ctx.delay *= 2;\r\n                }\r\n                ctx.attempts++;\r\n                // If we have exceeded the retry count, reject.\r\n                if (ctx.retryCount <= ctx.attempts) {\r\n                    ctx.reject(Error(\"Retry count exceeded (\" + ctx.retryCount + \") for request. Response status: [\" + response.status + \"] \" + response.statusText));\r\n                }\r\n                else {\r\n                    // Set our retry timeout for {delay} milliseconds.\r\n                    setTimeout(getCtxCallback(_this, retry, ctx), delay);\r\n                }\r\n            };\r\n            // send the actual request\r\n            _this._impl.fetch(url, options).then(function (response) {\r\n                if (response.status === 429) {\r\n                    // we have been throttled\r\n                    setRetry(response);\r\n                }\r\n                else {\r\n                    ctx.resolve(response);\r\n                }\r\n            }).catch(function (response) {\r\n                if (response.status === 503) {\r\n                    // http status code 503, we can retry this\r\n                    setRetry(response);\r\n                }\r\n                else {\r\n                    ctx.reject(response);\r\n                }\r\n            });\r\n        };\r\n        return new Promise(function (resolve, reject) {\r\n            var retryContext = {\r\n                attempts: 0,\r\n                delay: 100,\r\n                reject: reject,\r\n                resolve: resolve,\r\n                retryCount: 7,\r\n            };\r\n            retry.call(_this, retryContext);\r\n        });\r\n    };\r\n    SPHttpClient.prototype.get = function (url, options) {\r\n        if (options === void 0) { options = {}; }\r\n        var opts = extend(options, { method: \"GET\" });\r\n        return this.fetch(url, opts);\r\n    };\r\n    SPHttpClient.prototype.post = function (url, options) {\r\n        if (options === void 0) { options = {}; }\r\n        var opts = extend(options, { method: \"POST\" });\r\n        return this.fetch(url, opts);\r\n    };\r\n    SPHttpClient.prototype.patch = function (url, options) {\r\n        if (options === void 0) { options = {}; }\r\n        var opts = extend(options, { method: \"PATCH\" });\r\n        return this.fetch(url, opts);\r\n    };\r\n    SPHttpClient.prototype.delete = function (url, options) {\r\n        if (options === void 0) { options = {}; }\r\n        var opts = extend(options, { method: \"DELETE\" });\r\n        return this.fetch(url, opts);\r\n    };\r\n    return SPHttpClient;\r\n}());\r\nexport { SPHttpClient };\r\n//# sourceMappingURL=sphttpclient.js.map","export function metadata(type) {\r\n    return {\r\n        \"__metadata\": { \"type\": type },\r\n    };\r\n}\r\n//# sourceMappingURL=metadata.js.map","import * as tslib_1 from \"tslib\";\r\nimport { combine, isUrlAbsolute, mergeOptions, extend, getGUID, jsS, } from \"@pnp/common\";\r\nimport { ODataQueryable, } from \"@pnp/odata\";\r\nimport { Logger } from \"@pnp/logging\";\r\nimport { SPHttpClient } from \"./net/sphttpclient\";\r\nimport { toAbsoluteUrl } from \"./utils/toabsoluteurl\";\r\nimport { metadata } from \"./utils/metadata\";\r\n/**\r\n * SharePointQueryable Base Class\r\n *\r\n */\r\nvar SharePointQueryable = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SharePointQueryable, _super);\r\n    /**\r\n     * Creates a new instance of the SharePointQueryable class\r\n     *\r\n     * @constructor\r\n     * @param baseUrl A string or SharePointQueryable that should form the base part of the url\r\n     *\r\n     */\r\n    function SharePointQueryable(baseUrl, path) {\r\n        var _this = _super.call(this) || this;\r\n        _this._forceCaching = false;\r\n        if (typeof baseUrl === \"string\") {\r\n            // we need to do some extra parsing to get the parent url correct if we are\r\n            // being created from just a string.\r\n            if (isUrlAbsolute(baseUrl) || baseUrl.lastIndexOf(\"/\") < 0) {\r\n                _this._parentUrl = baseUrl;\r\n                _this._url = combine(baseUrl, path);\r\n            }\r\n            else if (baseUrl.lastIndexOf(\"/\") > baseUrl.lastIndexOf(\"(\")) {\r\n                // .../items(19)/fields\r\n                var index = baseUrl.lastIndexOf(\"/\");\r\n                _this._parentUrl = baseUrl.slice(0, index);\r\n                path = combine(baseUrl.slice(index), path);\r\n                _this._url = combine(_this._parentUrl, path);\r\n            }\r\n            else {\r\n                // .../items(19)\r\n                var index = baseUrl.lastIndexOf(\"(\");\r\n                _this._parentUrl = baseUrl.slice(0, index);\r\n                _this._url = combine(baseUrl, path);\r\n            }\r\n        }\r\n        else {\r\n            _this.extend(baseUrl, path);\r\n            var target = baseUrl.query.get(\"@target\");\r\n            if (target !== undefined) {\r\n                _this.query.set(\"@target\", target);\r\n            }\r\n        }\r\n        return _this;\r\n    }\r\n    /**\r\n     * Creates a new instance of the supplied factory and extends this into that new instance\r\n     *\r\n     * @param factory constructor for the new SharePointQueryable\r\n     */\r\n    SharePointQueryable.prototype.as = function (factory) {\r\n        var o = new factory(this._url, null);\r\n        return extend(o, this, true);\r\n    };\r\n    /**\r\n     * Gets the full url with query information\r\n     *\r\n     */\r\n    SharePointQueryable.prototype.toUrlAndQuery = function () {\r\n        var aliasedParams = new Map(this.query);\r\n        var url = this.toUrl().replace(/'!(@.*?)::(.*?)'/ig, function (match, labelName, value) {\r\n            Logger.write(\"Rewriting aliased parameter from match \" + match + \" to label: \" + labelName + \" value: \" + value, 0 /* Verbose */);\r\n            aliasedParams.set(labelName, \"'\" + value + \"'\");\r\n            return labelName;\r\n        });\r\n        if (aliasedParams.size > 0) {\r\n            var char = url.indexOf(\"?\") > -1 ? \"&\" : \"?\";\r\n            url += \"\" + char + Array.from(aliasedParams).map(function (v) { return v[0] + \"=\" + v[1]; }).join(\"&\");\r\n        }\r\n        return url;\r\n    };\r\n    /**\r\n     * Choose which fields to return\r\n     *\r\n     * @param selects One or more fields to return\r\n     */\r\n    SharePointQueryable.prototype.select = function () {\r\n        var selects = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            selects[_i] = arguments[_i];\r\n        }\r\n        if (selects.length > 0) {\r\n            this.query.set(\"$select\", selects.join(\",\"));\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Expands fields such as lookups to get additional data\r\n     *\r\n     * @param expands The Fields for which to expand the values\r\n     */\r\n    SharePointQueryable.prototype.expand = function () {\r\n        var expands = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            expands[_i] = arguments[_i];\r\n        }\r\n        if (expands.length > 0) {\r\n            this.query.set(\"$expand\", expands.join(\",\"));\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Gets a parent for this instance as specified\r\n     *\r\n     * @param factory The contructor for the class to create\r\n     */\r\n    SharePointQueryable.prototype.getParent = function (factory, baseUrl, path, batch) {\r\n        if (baseUrl === void 0) { baseUrl = this.parentUrl; }\r\n        var parent = new factory(baseUrl, path).configureFrom(this);\r\n        var t = \"@target\";\r\n        if (this.query.has(t)) {\r\n            parent.query.set(t, this.query.get(t));\r\n        }\r\n        if (batch !== undefined) {\r\n            parent = parent.inBatch(batch);\r\n        }\r\n        return parent;\r\n    };\r\n    /**\r\n     * Clones this SharePointQueryable into a new SharePointQueryable instance of T\r\n     * @param factory Constructor used to create the new instance\r\n     * @param additionalPath Any additional path to include in the clone\r\n     * @param includeBatch If true this instance's batch will be added to the cloned instance\r\n     */\r\n    SharePointQueryable.prototype.clone = function (factory, additionalPath, includeBatch) {\r\n        if (includeBatch === void 0) { includeBatch = true; }\r\n        var clone = _super.prototype._clone.call(this, new factory(this, additionalPath), { includeBatch: includeBatch });\r\n        // handle sp specific clone actions\r\n        var t = \"@target\";\r\n        if (this.query.has(t)) {\r\n            clone.query.set(t, this.query.get(t));\r\n        }\r\n        return clone;\r\n    };\r\n    /**\r\n     * Converts the current instance to a request context\r\n     *\r\n     * @param verb The request verb\r\n     * @param options The set of supplied request options\r\n     * @param parser The supplied ODataParser instance\r\n     * @param pipeline Optional request processing pipeline\r\n     */\r\n    SharePointQueryable.prototype.toRequestContext = function (verb, options, parser, pipeline) {\r\n        var _this = this;\r\n        if (options === void 0) { options = {}; }\r\n        var dependencyDispose = this.hasBatch ? this._batchDependency : function () { return; };\r\n        return toAbsoluteUrl(this.toUrlAndQuery()).then(function (url) {\r\n            mergeOptions(options, _this._options);\r\n            // build our request context\r\n            var context = {\r\n                batch: _this.batch,\r\n                batchDependency: dependencyDispose,\r\n                cachingOptions: _this._cachingOptions,\r\n                clientFactory: function () { return new SPHttpClient(); },\r\n                isBatched: _this.hasBatch,\r\n                isCached: _this._forceCaching || (_this._useCaching && /^get$/i.test(verb)),\r\n                options: options,\r\n                parser: parser,\r\n                pipeline: pipeline,\r\n                requestAbsoluteUrl: url,\r\n                requestId: getGUID(),\r\n                verb: verb,\r\n            };\r\n            return context;\r\n        });\r\n    };\r\n    return SharePointQueryable;\r\n}(ODataQueryable));\r\nexport { SharePointQueryable };\r\n/**\r\n * Represents a REST collection which can be filtered, paged, and selected\r\n *\r\n */\r\nvar SharePointQueryableCollection = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SharePointQueryableCollection, _super);\r\n    function SharePointQueryableCollection() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Filters the returned collection (https://msdn.microsoft.com/en-us/library/office/fp142385.aspx#bk_supported)\r\n     *\r\n     * @param filter The string representing the filter query\r\n     */\r\n    SharePointQueryableCollection.prototype.filter = function (filter) {\r\n        this.query.set(\"$filter\", filter);\r\n        return this;\r\n    };\r\n    /**\r\n     * Orders based on the supplied fields\r\n     *\r\n     * @param orderby The name of the field on which to sort\r\n     * @param ascending If false DESC is appended, otherwise ASC (default)\r\n     */\r\n    SharePointQueryableCollection.prototype.orderBy = function (orderBy, ascending) {\r\n        if (ascending === void 0) { ascending = true; }\r\n        var o = \"$orderby\";\r\n        var query = this.query.has(o) ? this.query.get(o).split(\",\") : [];\r\n        query.push(orderBy + \" \" + (ascending ? \"asc\" : \"desc\"));\r\n        this.query.set(o, query.join(\",\"));\r\n        return this;\r\n    };\r\n    /**\r\n     * Skips the specified number of items\r\n     *\r\n     * @param skip The number of items to skip\r\n     */\r\n    SharePointQueryableCollection.prototype.skip = function (skip) {\r\n        this.query.set(\"$skip\", skip.toString());\r\n        return this;\r\n    };\r\n    /**\r\n     * Limits the query to only return the specified number of items\r\n     *\r\n     * @param top The query row limit\r\n     */\r\n    SharePointQueryableCollection.prototype.top = function (top) {\r\n        this.query.set(\"$top\", top.toString());\r\n        return this;\r\n    };\r\n    return SharePointQueryableCollection;\r\n}(SharePointQueryable));\r\nexport { SharePointQueryableCollection };\r\n/**\r\n * Represents an instance that can be selected\r\n *\r\n */\r\nvar SharePointQueryableInstance = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SharePointQueryableInstance, _super);\r\n    function SharePointQueryableInstance() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Curries the update function into the common pieces\r\n     *\r\n     * @param type\r\n     * @param mapper\r\n     */\r\n    SharePointQueryableInstance.prototype._update = function (type, mapper) {\r\n        var _this = this;\r\n        return function (props) { return _this.postCore({\r\n            body: jsS(extend(metadata(type), props)),\r\n            headers: {\r\n                \"X-HTTP-Method\": \"MERGE\",\r\n            },\r\n        }).then(function (d) { return mapper(d, props); }); };\r\n    };\r\n    /**\r\n    * Deletes this instance\r\n    *\r\n    */\r\n    SharePointQueryableInstance.prototype._delete = function () {\r\n        return this.postCore({\r\n            headers: {\r\n                \"X-HTTP-Method\": \"DELETE\",\r\n            },\r\n        });\r\n    };\r\n    /**\r\n     * Deletes this instance with an etag value in the headers\r\n     *\r\n     * @param eTag eTag to delete\r\n     */\r\n    SharePointQueryableInstance.prototype._deleteWithETag = function (eTag) {\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        return this.postCore({\r\n            headers: {\r\n                \"IF-Match\": eTag,\r\n                \"X-HTTP-Method\": \"DELETE\",\r\n            },\r\n        });\r\n    };\r\n    return SharePointQueryableInstance;\r\n}(SharePointQueryable));\r\nexport { SharePointQueryableInstance };\r\n/**\r\n * Decorator used to specify the default path for SharePointQueryable objects\r\n *\r\n * @param path\r\n */\r\nexport function defaultPath(path) {\r\n    return function (target) {\r\n        return /** @class */ (function (_super) {\r\n            tslib_1.__extends(class_1, _super);\r\n            function class_1() {\r\n                var args = [];\r\n                for (var _i = 0; _i < arguments.length; _i++) {\r\n                    args[_i] = arguments[_i];\r\n                }\r\n                return _super.call(this, args[0], args.length > 1 && args[1] !== undefined ? args[1] : path) || this;\r\n            }\r\n            return class_1;\r\n        }(target));\r\n    };\r\n}\r\n//# sourceMappingURL=sharepointqueryable.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryableInstance, SharePointQueryableCollection, defaultPath } from \"./sharepointqueryable\";\r\nimport { SiteGroups } from \"./sitegroups\";\r\nimport { jsS, extend } from \"@pnp/common\";\r\nimport { metadata } from \"./utils/metadata\";\r\n/**\r\n * Describes a collection of all site collection users\r\n *\r\n */\r\nvar SiteUsers = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SiteUsers, _super);\r\n    function SiteUsers() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    SiteUsers_1 = SiteUsers;\r\n    /**\r\n     * Gets a user from the collection by id\r\n     *\r\n     * @param id The id of the user to retrieve\r\n     */\r\n    SiteUsers.prototype.getById = function (id) {\r\n        return new SiteUser(this, \"getById(\" + id + \")\");\r\n    };\r\n    /**\r\n     * Gets a user from the collection by email\r\n     *\r\n     * @param email The email address of the user to retrieve\r\n     */\r\n    SiteUsers.prototype.getByEmail = function (email) {\r\n        return new SiteUser(this, \"getByEmail('\" + email + \"')\");\r\n    };\r\n    /**\r\n     * Gets a user from the collection by login name\r\n     *\r\n     * @param loginName The login name of the user to retrieve\r\n     */\r\n    SiteUsers.prototype.getByLoginName = function (loginName) {\r\n        var su = new SiteUser(this);\r\n        su.concat(\"('!@v::\" + encodeURIComponent(loginName) + \"')\");\r\n        return su;\r\n    };\r\n    /**\r\n     * Removes a user from the collection by id\r\n     *\r\n     * @param id The id of the user to remove\r\n     */\r\n    SiteUsers.prototype.removeById = function (id) {\r\n        return this.clone(SiteUsers_1, \"removeById(\" + id + \")\").postCore();\r\n    };\r\n    /**\r\n     * Removes a user from the collection by login name\r\n     *\r\n     * @param loginName The login name of the user to remove\r\n     */\r\n    SiteUsers.prototype.removeByLoginName = function (loginName) {\r\n        var o = this.clone(SiteUsers_1, \"removeByLoginName(@v)\");\r\n        o.query.set(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return o.postCore();\r\n    };\r\n    /**\r\n     * Adds a user to a group\r\n     *\r\n     * @param loginName The login name of the user to add to the group\r\n     *\r\n     */\r\n    SiteUsers.prototype.add = function (loginName) {\r\n        var _this = this;\r\n        return this.clone(SiteUsers_1, null).postCore({\r\n            body: jsS(extend(metadata(\"SP.User\"), { LoginName: loginName })),\r\n        }).then(function () { return _this.getByLoginName(loginName); });\r\n    };\r\n    var SiteUsers_1;\r\n    SiteUsers = SiteUsers_1 = tslib_1.__decorate([\r\n        defaultPath(\"siteusers\")\r\n    ], SiteUsers);\r\n    return SiteUsers;\r\n}(SharePointQueryableCollection));\r\nexport { SiteUsers };\r\n/**\r\n * Base class for a user\r\n *\r\n */\r\nvar UserBase = /** @class */ (function (_super) {\r\n    tslib_1.__extends(UserBase, _super);\r\n    function UserBase() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(UserBase.prototype, \"groups\", {\r\n        /**\r\n         * Gets the groups for this user\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteGroups(this, \"groups\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return UserBase;\r\n}(SharePointQueryableInstance));\r\nexport { UserBase };\r\n/**\r\n * Describes a single user\r\n *\r\n */\r\nvar SiteUser = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SiteUser, _super);\r\n    function SiteUser() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n        * Updates this user instance with the supplied properties\r\n        *\r\n        * @param properties A plain object of property names and values to update for the user\r\n        */\r\n        _this.update = _this._update(\"SP.User\", function (data) { return ({ data: data, user: _this }); });\r\n        /**\r\n         * Delete this user\r\n         *\r\n         */\r\n        _this.delete = _this._delete;\r\n        return _this;\r\n    }\r\n    return SiteUser;\r\n}(UserBase));\r\nexport { SiteUser };\r\n/**\r\n * Represents the current user\r\n */\r\nvar CurrentUser = /** @class */ (function (_super) {\r\n    tslib_1.__extends(CurrentUser, _super);\r\n    function CurrentUser() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    CurrentUser = tslib_1.__decorate([\r\n        defaultPath(\"currentuser\")\r\n    ], CurrentUser);\r\n    return CurrentUser;\r\n}(UserBase));\r\nexport { CurrentUser };\r\n//# sourceMappingURL=siteusers.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryableInstance, SharePointQueryableCollection, defaultPath } from \"./sharepointqueryable\";\r\nimport { SiteUsers } from \"./siteusers\";\r\nimport { extend, jsS, hOP } from \"@pnp/common\";\r\nimport { metadata } from \"./utils/metadata\";\r\n/**\r\n * Principal Type enum\r\n *\r\n */\r\nexport var PrincipalType;\r\n(function (PrincipalType) {\r\n    PrincipalType[PrincipalType[\"None\"] = 0] = \"None\";\r\n    PrincipalType[PrincipalType[\"User\"] = 1] = \"User\";\r\n    PrincipalType[PrincipalType[\"DistributionList\"] = 2] = \"DistributionList\";\r\n    PrincipalType[PrincipalType[\"SecurityGroup\"] = 4] = \"SecurityGroup\";\r\n    PrincipalType[PrincipalType[\"SharePointGroup\"] = 8] = \"SharePointGroup\";\r\n    PrincipalType[PrincipalType[\"All\"] = 15] = \"All\";\r\n})(PrincipalType || (PrincipalType = {}));\r\n/**\r\n * Describes a collection of site groups\r\n *\r\n */\r\nvar SiteGroups = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SiteGroups, _super);\r\n    function SiteGroups() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    SiteGroups_1 = SiteGroups;\r\n    /**\r\n     * Gets a group from the collection by id\r\n     *\r\n     * @param id The id of the group to retrieve\r\n     */\r\n    SiteGroups.prototype.getById = function (id) {\r\n        var sg = new SiteGroup(this);\r\n        sg.concat(\"(\" + id + \")\");\r\n        return sg;\r\n    };\r\n    /**\r\n     * Adds a new group to the site collection\r\n     *\r\n     * @param props The group properties object of property names and values to be set for the group\r\n     */\r\n    SiteGroups.prototype.add = function (properties) {\r\n        var _this = this;\r\n        var postBody = jsS(extend(metadata(\"SP.Group\"), properties));\r\n        return this.postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                group: _this.getById(data.Id),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Gets a group from the collection by name\r\n     *\r\n     * @param groupName The name of the group to retrieve\r\n     */\r\n    SiteGroups.prototype.getByName = function (groupName) {\r\n        return new SiteGroup(this, \"getByName('\" + groupName + \"')\");\r\n    };\r\n    /**\r\n     * Removes the group with the specified member id from the collection\r\n     *\r\n     * @param id The id of the group to remove\r\n     */\r\n    SiteGroups.prototype.removeById = function (id) {\r\n        return this.clone(SiteGroups_1, \"removeById('\" + id + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Removes the cross-site group with the specified name from the collection\r\n     *\r\n     * @param loginName The name of the group to remove\r\n     */\r\n    SiteGroups.prototype.removeByLoginName = function (loginName) {\r\n        return this.clone(SiteGroups_1, \"removeByLoginName('\" + loginName + \"')\").postCore();\r\n    };\r\n    var SiteGroups_1;\r\n    SiteGroups = SiteGroups_1 = tslib_1.__decorate([\r\n        defaultPath(\"sitegroups\")\r\n    ], SiteGroups);\r\n    return SiteGroups;\r\n}(SharePointQueryableCollection));\r\nexport { SiteGroups };\r\n/**\r\n * Describes a single group\r\n *\r\n */\r\nvar SiteGroup = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SiteGroup, _super);\r\n    function SiteGroup() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.update = _this._update(\"SP.Group\", function (d, p) {\r\n            var retGroup = _this;\r\n            if (hOP(p, \"Title\")) {\r\n                /* tslint:disable-next-line no-string-literal */\r\n                retGroup = _this.getParent(SiteGroup, _this.parentUrl, \"getByName('\" + p[\"Title\"] + \"')\");\r\n            }\r\n            return {\r\n                data: d,\r\n                group: retGroup,\r\n            };\r\n        });\r\n        return _this;\r\n    }\r\n    Object.defineProperty(SiteGroup.prototype, \"users\", {\r\n        /**\r\n         * Gets the users for this group\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteUsers(this, \"users\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return SiteGroup;\r\n}(SharePointQueryableInstance));\r\nexport { SiteGroup };\r\n//# sourceMappingURL=sitegroups.js.map","/**\r\n * Determines the display mode of the given control or view\r\n */\r\nexport var ControlMode;\r\n(function (ControlMode) {\r\n    ControlMode[ControlMode[\"Display\"] = 1] = \"Display\";\r\n    ControlMode[ControlMode[\"Edit\"] = 2] = \"Edit\";\r\n    ControlMode[ControlMode[\"New\"] = 3] = \"New\";\r\n})(ControlMode || (ControlMode = {}));\r\n/**\r\n * Specifies the type of the field.\r\n */\r\nexport var FieldTypes;\r\n(function (FieldTypes) {\r\n    FieldTypes[FieldTypes[\"Invalid\"] = 0] = \"Invalid\";\r\n    FieldTypes[FieldTypes[\"Integer\"] = 1] = \"Integer\";\r\n    FieldTypes[FieldTypes[\"Text\"] = 2] = \"Text\";\r\n    FieldTypes[FieldTypes[\"Note\"] = 3] = \"Note\";\r\n    FieldTypes[FieldTypes[\"DateTime\"] = 4] = \"DateTime\";\r\n    FieldTypes[FieldTypes[\"Counter\"] = 5] = \"Counter\";\r\n    FieldTypes[FieldTypes[\"Choice\"] = 6] = \"Choice\";\r\n    FieldTypes[FieldTypes[\"Lookup\"] = 7] = \"Lookup\";\r\n    FieldTypes[FieldTypes[\"Boolean\"] = 8] = \"Boolean\";\r\n    FieldTypes[FieldTypes[\"Number\"] = 9] = \"Number\";\r\n    FieldTypes[FieldTypes[\"Currency\"] = 10] = \"Currency\";\r\n    FieldTypes[FieldTypes[\"URL\"] = 11] = \"URL\";\r\n    FieldTypes[FieldTypes[\"Computed\"] = 12] = \"Computed\";\r\n    FieldTypes[FieldTypes[\"Threading\"] = 13] = \"Threading\";\r\n    FieldTypes[FieldTypes[\"Guid\"] = 14] = \"Guid\";\r\n    FieldTypes[FieldTypes[\"MultiChoice\"] = 15] = \"MultiChoice\";\r\n    FieldTypes[FieldTypes[\"GridChoice\"] = 16] = \"GridChoice\";\r\n    FieldTypes[FieldTypes[\"Calculated\"] = 17] = \"Calculated\";\r\n    FieldTypes[FieldTypes[\"File\"] = 18] = \"File\";\r\n    FieldTypes[FieldTypes[\"Attachments\"] = 19] = \"Attachments\";\r\n    FieldTypes[FieldTypes[\"User\"] = 20] = \"User\";\r\n    FieldTypes[FieldTypes[\"Recurrence\"] = 21] = \"Recurrence\";\r\n    FieldTypes[FieldTypes[\"CrossProjectLink\"] = 22] = \"CrossProjectLink\";\r\n    FieldTypes[FieldTypes[\"ModStat\"] = 23] = \"ModStat\";\r\n    FieldTypes[FieldTypes[\"Error\"] = 24] = \"Error\";\r\n    FieldTypes[FieldTypes[\"ContentTypeId\"] = 25] = \"ContentTypeId\";\r\n    FieldTypes[FieldTypes[\"PageSeparator\"] = 26] = \"PageSeparator\";\r\n    FieldTypes[FieldTypes[\"ThreadIndex\"] = 27] = \"ThreadIndex\";\r\n    FieldTypes[FieldTypes[\"WorkflowStatus\"] = 28] = \"WorkflowStatus\";\r\n    FieldTypes[FieldTypes[\"AllDayEvent\"] = 29] = \"AllDayEvent\";\r\n    FieldTypes[FieldTypes[\"WorkflowEventType\"] = 30] = \"WorkflowEventType\";\r\n})(FieldTypes || (FieldTypes = {}));\r\nexport var DateTimeFieldFormatType;\r\n(function (DateTimeFieldFormatType) {\r\n    DateTimeFieldFormatType[DateTimeFieldFormatType[\"DateOnly\"] = 0] = \"DateOnly\";\r\n    DateTimeFieldFormatType[DateTimeFieldFormatType[\"DateTime\"] = 1] = \"DateTime\";\r\n})(DateTimeFieldFormatType || (DateTimeFieldFormatType = {}));\r\nexport var DateTimeFieldFriendlyFormatType;\r\n(function (DateTimeFieldFriendlyFormatType) {\r\n    DateTimeFieldFriendlyFormatType[DateTimeFieldFriendlyFormatType[\"Unspecified\"] = 0] = \"Unspecified\";\r\n    DateTimeFieldFriendlyFormatType[DateTimeFieldFriendlyFormatType[\"Disabled\"] = 1] = \"Disabled\";\r\n    DateTimeFieldFriendlyFormatType[DateTimeFieldFriendlyFormatType[\"Relative\"] = 2] = \"Relative\";\r\n})(DateTimeFieldFriendlyFormatType || (DateTimeFieldFriendlyFormatType = {}));\r\n/**\r\n * Specifies the control settings while adding a field.\r\n */\r\nexport var AddFieldOptions;\r\n(function (AddFieldOptions) {\r\n    /**\r\n     *  Specify that a new field added to the list must also be added to the default content type in the site collection\r\n     */\r\n    AddFieldOptions[AddFieldOptions[\"DefaultValue\"] = 0] = \"DefaultValue\";\r\n    /**\r\n     * Specify that a new field added to the list must also be added to the default content type in the site collection.\r\n     */\r\n    AddFieldOptions[AddFieldOptions[\"AddToDefaultContentType\"] = 1] = \"AddToDefaultContentType\";\r\n    /**\r\n     * Specify that a new field must not be added to any other content type\r\n     */\r\n    AddFieldOptions[AddFieldOptions[\"AddToNoContentType\"] = 2] = \"AddToNoContentType\";\r\n    /**\r\n     *  Specify that a new field that is added to the specified list must also be added to all content types in the site collection\r\n     */\r\n    AddFieldOptions[AddFieldOptions[\"AddToAllContentTypes\"] = 4] = \"AddToAllContentTypes\";\r\n    /**\r\n     * Specify adding an internal field name hint for the purpose of avoiding possible database locking or field renaming operations\r\n     */\r\n    AddFieldOptions[AddFieldOptions[\"AddFieldInternalNameHint\"] = 8] = \"AddFieldInternalNameHint\";\r\n    /**\r\n     * Specify that a new field that is added to the specified list must also be added to the default list view\r\n     */\r\n    AddFieldOptions[AddFieldOptions[\"AddFieldToDefaultView\"] = 16] = \"AddFieldToDefaultView\";\r\n    /**\r\n     * Specify to confirm that no other field has the same display name\r\n     */\r\n    AddFieldOptions[AddFieldOptions[\"AddFieldCheckDisplayName\"] = 32] = \"AddFieldCheckDisplayName\";\r\n})(AddFieldOptions || (AddFieldOptions = {}));\r\nexport var CalendarType;\r\n(function (CalendarType) {\r\n    CalendarType[CalendarType[\"Gregorian\"] = 1] = \"Gregorian\";\r\n    CalendarType[CalendarType[\"Japan\"] = 3] = \"Japan\";\r\n    CalendarType[CalendarType[\"Taiwan\"] = 4] = \"Taiwan\";\r\n    CalendarType[CalendarType[\"Korea\"] = 5] = \"Korea\";\r\n    CalendarType[CalendarType[\"Hijri\"] = 6] = \"Hijri\";\r\n    CalendarType[CalendarType[\"Thai\"] = 7] = \"Thai\";\r\n    CalendarType[CalendarType[\"Hebrew\"] = 8] = \"Hebrew\";\r\n    CalendarType[CalendarType[\"GregorianMEFrench\"] = 9] = \"GregorianMEFrench\";\r\n    CalendarType[CalendarType[\"GregorianArabic\"] = 10] = \"GregorianArabic\";\r\n    CalendarType[CalendarType[\"GregorianXLITEnglish\"] = 11] = \"GregorianXLITEnglish\";\r\n    CalendarType[CalendarType[\"GregorianXLITFrench\"] = 12] = \"GregorianXLITFrench\";\r\n    CalendarType[CalendarType[\"KoreaJapanLunar\"] = 14] = \"KoreaJapanLunar\";\r\n    CalendarType[CalendarType[\"ChineseLunar\"] = 15] = \"ChineseLunar\";\r\n    CalendarType[CalendarType[\"SakaEra\"] = 16] = \"SakaEra\";\r\n    CalendarType[CalendarType[\"UmAlQura\"] = 23] = \"UmAlQura\";\r\n})(CalendarType || (CalendarType = {}));\r\nexport var UrlFieldFormatType;\r\n(function (UrlFieldFormatType) {\r\n    UrlFieldFormatType[UrlFieldFormatType[\"Hyperlink\"] = 0] = \"Hyperlink\";\r\n    UrlFieldFormatType[UrlFieldFormatType[\"Image\"] = 1] = \"Image\";\r\n})(UrlFieldFormatType || (UrlFieldFormatType = {}));\r\nexport var PermissionKind;\r\n(function (PermissionKind) {\r\n    /**\r\n     * Has no permissions on the Site. Not available through the user interface.\r\n     */\r\n    PermissionKind[PermissionKind[\"EmptyMask\"] = 0] = \"EmptyMask\";\r\n    /**\r\n     * View items in lists, documents in document libraries, and Web discussion comments.\r\n     */\r\n    PermissionKind[PermissionKind[\"ViewListItems\"] = 1] = \"ViewListItems\";\r\n    /**\r\n     * Add items to lists, documents to document libraries, and Web discussion comments.\r\n     */\r\n    PermissionKind[PermissionKind[\"AddListItems\"] = 2] = \"AddListItems\";\r\n    /**\r\n     * Edit items in lists, edit documents in document libraries, edit Web discussion comments\r\n     * in documents, and customize Web Part Pages in document libraries.\r\n     */\r\n    PermissionKind[PermissionKind[\"EditListItems\"] = 3] = \"EditListItems\";\r\n    /**\r\n     * Delete items from a list, documents from a document library, and Web discussion\r\n     * comments in documents.\r\n     */\r\n    PermissionKind[PermissionKind[\"DeleteListItems\"] = 4] = \"DeleteListItems\";\r\n    /**\r\n     * Approve a minor version of a list item or document.\r\n     */\r\n    PermissionKind[PermissionKind[\"ApproveItems\"] = 5] = \"ApproveItems\";\r\n    /**\r\n     * View the source of documents with server-side file handlers.\r\n     */\r\n    PermissionKind[PermissionKind[\"OpenItems\"] = 6] = \"OpenItems\";\r\n    /**\r\n     * View past versions of a list item or document.\r\n     */\r\n    PermissionKind[PermissionKind[\"ViewVersions\"] = 7] = \"ViewVersions\";\r\n    /**\r\n     * Delete past versions of a list item or document.\r\n     */\r\n    PermissionKind[PermissionKind[\"DeleteVersions\"] = 8] = \"DeleteVersions\";\r\n    /**\r\n     * Discard or check in a document which is checked out to another user.\r\n     */\r\n    PermissionKind[PermissionKind[\"CancelCheckout\"] = 9] = \"CancelCheckout\";\r\n    /**\r\n     * Create, change, and delete personal views of lists.\r\n     */\r\n    PermissionKind[PermissionKind[\"ManagePersonalViews\"] = 10] = \"ManagePersonalViews\";\r\n    /**\r\n     * Create and delete lists, add or remove columns in a list, and add or remove public views of a list.\r\n     */\r\n    PermissionKind[PermissionKind[\"ManageLists\"] = 12] = \"ManageLists\";\r\n    /**\r\n     * View forms, views, and application pages, and enumerate lists.\r\n     */\r\n    PermissionKind[PermissionKind[\"ViewFormPages\"] = 13] = \"ViewFormPages\";\r\n    /**\r\n     * Make content of a list or document library retrieveable for anonymous users through SharePoint search.\r\n     * The list permissions in the site do not change.\r\n     */\r\n    PermissionKind[PermissionKind[\"AnonymousSearchAccessList\"] = 14] = \"AnonymousSearchAccessList\";\r\n    /**\r\n     * Allow users to open a Site, list, or folder to access items inside that container.\r\n     */\r\n    PermissionKind[PermissionKind[\"Open\"] = 17] = \"Open\";\r\n    /**\r\n     * View pages in a Site.\r\n     */\r\n    PermissionKind[PermissionKind[\"ViewPages\"] = 18] = \"ViewPages\";\r\n    /**\r\n     * Add, change, or delete HTML pages or Web Part Pages, and edit the Site using\r\n     * a Windows SharePoint Services compatible editor.\r\n     */\r\n    PermissionKind[PermissionKind[\"AddAndCustomizePages\"] = 19] = \"AddAndCustomizePages\";\r\n    /**\r\n     * Apply a theme or borders to the entire Site.\r\n     */\r\n    PermissionKind[PermissionKind[\"ApplyThemeAndBorder\"] = 20] = \"ApplyThemeAndBorder\";\r\n    /**\r\n     * Apply a style sheet (.css file) to the Site.\r\n     */\r\n    PermissionKind[PermissionKind[\"ApplyStyleSheets\"] = 21] = \"ApplyStyleSheets\";\r\n    /**\r\n     * View reports on Site usage.\r\n     */\r\n    PermissionKind[PermissionKind[\"ViewUsageData\"] = 22] = \"ViewUsageData\";\r\n    /**\r\n     * Create a Site using Self-Service Site Creation.\r\n     */\r\n    PermissionKind[PermissionKind[\"CreateSSCSite\"] = 23] = \"CreateSSCSite\";\r\n    /**\r\n     * Create subsites such as team sites, Meeting Workspace sites, and Document Workspace sites.\r\n     */\r\n    PermissionKind[PermissionKind[\"ManageSubwebs\"] = 24] = \"ManageSubwebs\";\r\n    /**\r\n     * Create a group of users that can be used anywhere within the site collection.\r\n     */\r\n    PermissionKind[PermissionKind[\"CreateGroups\"] = 25] = \"CreateGroups\";\r\n    /**\r\n     * Create and change permission levels on the Site and assign permissions to users\r\n     * and groups.\r\n     */\r\n    PermissionKind[PermissionKind[\"ManagePermissions\"] = 26] = \"ManagePermissions\";\r\n    /**\r\n     * Enumerate files and folders in a Site using Microsoft Office SharePoint Designer\r\n     * and WebDAV interfaces.\r\n     */\r\n    PermissionKind[PermissionKind[\"BrowseDirectories\"] = 27] = \"BrowseDirectories\";\r\n    /**\r\n     * View information about users of the Site.\r\n     */\r\n    PermissionKind[PermissionKind[\"BrowseUserInfo\"] = 28] = \"BrowseUserInfo\";\r\n    /**\r\n     * Add or remove personal Web Parts on a Web Part Page.\r\n     */\r\n    PermissionKind[PermissionKind[\"AddDelPrivateWebParts\"] = 29] = \"AddDelPrivateWebParts\";\r\n    /**\r\n     * Update Web Parts to display personalized information.\r\n     */\r\n    PermissionKind[PermissionKind[\"UpdatePersonalWebParts\"] = 30] = \"UpdatePersonalWebParts\";\r\n    /**\r\n     * Grant the ability to perform all administration tasks for the Site as well as\r\n     * manage content, activate, deactivate, or edit properties of Site scoped Features\r\n     * through the object model or through the user interface (UI). When granted on the\r\n     * root Site of a Site Collection, activate, deactivate, or edit properties of\r\n     * site collection scoped Features through the object model. To browse to the Site\r\n     * Collection Features page and activate or deactivate Site Collection scoped Features\r\n     * through the UI, you must be a Site Collection administrator.\r\n     */\r\n    PermissionKind[PermissionKind[\"ManageWeb\"] = 31] = \"ManageWeb\";\r\n    /**\r\n     * Content of lists and document libraries in the Web site will be retrieveable for anonymous users through\r\n     * SharePoint search if the list or document library has AnonymousSearchAccessList set.\r\n     */\r\n    PermissionKind[PermissionKind[\"AnonymousSearchAccessWebLists\"] = 32] = \"AnonymousSearchAccessWebLists\";\r\n    /**\r\n     * Use features that launch client applications. Otherwise, users must work on documents\r\n     * locally and upload changes.\r\n     */\r\n    PermissionKind[PermissionKind[\"UseClientIntegration\"] = 37] = \"UseClientIntegration\";\r\n    /**\r\n     * Use SOAP, WebDAV, or Microsoft Office SharePoint Designer interfaces to access the Site.\r\n     */\r\n    PermissionKind[PermissionKind[\"UseRemoteAPIs\"] = 38] = \"UseRemoteAPIs\";\r\n    /**\r\n     * Manage alerts for all users of the Site.\r\n     */\r\n    PermissionKind[PermissionKind[\"ManageAlerts\"] = 39] = \"ManageAlerts\";\r\n    /**\r\n     * Create e-mail alerts.\r\n     */\r\n    PermissionKind[PermissionKind[\"CreateAlerts\"] = 40] = \"CreateAlerts\";\r\n    /**\r\n     * Allows a user to change his or her user information, such as adding a picture.\r\n     */\r\n    PermissionKind[PermissionKind[\"EditMyUserInfo\"] = 41] = \"EditMyUserInfo\";\r\n    /**\r\n     * Enumerate permissions on Site, list, folder, document, or list item.\r\n     */\r\n    PermissionKind[PermissionKind[\"EnumeratePermissions\"] = 63] = \"EnumeratePermissions\";\r\n    /**\r\n     * Has all permissions on the Site. Not available through the user interface.\r\n     */\r\n    PermissionKind[PermissionKind[\"FullMask\"] = 65] = \"FullMask\";\r\n})(PermissionKind || (PermissionKind = {}));\r\n/**\r\n * Specifies the type of a principal.\r\n */\r\n/* tslint:disable:no-bitwise */\r\nexport var PrincipalType;\r\n(function (PrincipalType) {\r\n    /**\r\n     * Enumeration whose value specifies no principal type.\r\n     */\r\n    PrincipalType[PrincipalType[\"None\"] = 0] = \"None\";\r\n    /**\r\n     * Enumeration whose value specifies a user as the principal type.\r\n     */\r\n    PrincipalType[PrincipalType[\"User\"] = 1] = \"User\";\r\n    /**\r\n     * Enumeration whose value specifies a distribution list as the principal type.\r\n     */\r\n    PrincipalType[PrincipalType[\"DistributionList\"] = 2] = \"DistributionList\";\r\n    /**\r\n     * Enumeration whose value specifies a security group as the principal type.\r\n     */\r\n    PrincipalType[PrincipalType[\"SecurityGroup\"] = 4] = \"SecurityGroup\";\r\n    /**\r\n     * Enumeration whose value specifies a group as the principal type.\r\n     */\r\n    PrincipalType[PrincipalType[\"SharePointGroup\"] = 8] = \"SharePointGroup\";\r\n    /**\r\n     * Enumeration whose value specifies all principal types.\r\n     */\r\n    PrincipalType[PrincipalType[\"All\"] = 15] = \"All\";\r\n})(PrincipalType || (PrincipalType = {}));\r\n/* tslint:enable:no-bitwise */\r\n/**\r\n * Specifies the source of a principal.\r\n */\r\n/* tslint:disable:no-bitwise */\r\nexport var PrincipalSource;\r\n(function (PrincipalSource) {\r\n    /**\r\n     * Enumeration whose value specifies no principal source.\r\n     */\r\n    PrincipalSource[PrincipalSource[\"None\"] = 0] = \"None\";\r\n    /**\r\n     * Enumeration whose value specifies user information list as the principal source.\r\n     */\r\n    PrincipalSource[PrincipalSource[\"UserInfoList\"] = 1] = \"UserInfoList\";\r\n    /**\r\n     * Enumeration whose value specifies Active Directory as the principal source.\r\n     */\r\n    PrincipalSource[PrincipalSource[\"Windows\"] = 2] = \"Windows\";\r\n    /**\r\n     * Enumeration whose value specifies the current membership provider as the principal source.\r\n     */\r\n    PrincipalSource[PrincipalSource[\"MembershipProvider\"] = 4] = \"MembershipProvider\";\r\n    /**\r\n     * Enumeration whose value specifies the current role provider as the principal source.\r\n     */\r\n    PrincipalSource[PrincipalSource[\"RoleProvider\"] = 8] = \"RoleProvider\";\r\n    /**\r\n     * Enumeration whose value specifies all principal sources.\r\n     */\r\n    PrincipalSource[PrincipalSource[\"All\"] = 15] = \"All\";\r\n})(PrincipalSource || (PrincipalSource = {}));\r\n/* tslint:enable:no-bitwise */\r\nexport var RoleType;\r\n(function (RoleType) {\r\n    RoleType[RoleType[\"None\"] = 0] = \"None\";\r\n    RoleType[RoleType[\"Guest\"] = 1] = \"Guest\";\r\n    RoleType[RoleType[\"Reader\"] = 2] = \"Reader\";\r\n    RoleType[RoleType[\"Contributor\"] = 3] = \"Contributor\";\r\n    RoleType[RoleType[\"WebDesigner\"] = 4] = \"WebDesigner\";\r\n    RoleType[RoleType[\"Administrator\"] = 5] = \"Administrator\";\r\n})(RoleType || (RoleType = {}));\r\nexport var PageType;\r\n(function (PageType) {\r\n    PageType[PageType[\"Invalid\"] = -1] = \"Invalid\";\r\n    PageType[PageType[\"DefaultView\"] = 0] = \"DefaultView\";\r\n    PageType[PageType[\"NormalView\"] = 1] = \"NormalView\";\r\n    PageType[PageType[\"DialogView\"] = 2] = \"DialogView\";\r\n    PageType[PageType[\"View\"] = 3] = \"View\";\r\n    PageType[PageType[\"DisplayForm\"] = 4] = \"DisplayForm\";\r\n    PageType[PageType[\"DisplayFormDialog\"] = 5] = \"DisplayFormDialog\";\r\n    PageType[PageType[\"EditForm\"] = 6] = \"EditForm\";\r\n    PageType[PageType[\"EditFormDialog\"] = 7] = \"EditFormDialog\";\r\n    PageType[PageType[\"NewForm\"] = 8] = \"NewForm\";\r\n    PageType[PageType[\"NewFormDialog\"] = 9] = \"NewFormDialog\";\r\n    PageType[PageType[\"SolutionForm\"] = 10] = \"SolutionForm\";\r\n    PageType[PageType[\"PAGE_MAXITEMS\"] = 11] = \"PAGE_MAXITEMS\";\r\n})(PageType || (PageType = {}));\r\nexport var SharingLinkKind;\r\n(function (SharingLinkKind) {\r\n    /**\r\n     * Uninitialized link\r\n     */\r\n    SharingLinkKind[SharingLinkKind[\"Uninitialized\"] = 0] = \"Uninitialized\";\r\n    /**\r\n     * Direct link to the object being shared\r\n     */\r\n    SharingLinkKind[SharingLinkKind[\"Direct\"] = 1] = \"Direct\";\r\n    /**\r\n     * Organization-shareable link to the object being shared with view permissions\r\n     */\r\n    SharingLinkKind[SharingLinkKind[\"OrganizationView\"] = 2] = \"OrganizationView\";\r\n    /**\r\n     * Organization-shareable link to the object being shared with edit permissions\r\n     */\r\n    SharingLinkKind[SharingLinkKind[\"OrganizationEdit\"] = 3] = \"OrganizationEdit\";\r\n    /**\r\n     * View only anonymous link\r\n     */\r\n    SharingLinkKind[SharingLinkKind[\"AnonymousView\"] = 4] = \"AnonymousView\";\r\n    /**\r\n     * Read/Write anonymous link\r\n     */\r\n    SharingLinkKind[SharingLinkKind[\"AnonymousEdit\"] = 5] = \"AnonymousEdit\";\r\n    /**\r\n     * Flexible sharing Link where properties can change without affecting link URL\r\n     */\r\n    SharingLinkKind[SharingLinkKind[\"Flexible\"] = 6] = \"Flexible\";\r\n})(SharingLinkKind || (SharingLinkKind = {}));\r\n/**\r\n * Indicates the role of the sharing link\r\n */\r\nexport var SharingRole;\r\n(function (SharingRole) {\r\n    SharingRole[SharingRole[\"None\"] = 0] = \"None\";\r\n    SharingRole[SharingRole[\"View\"] = 1] = \"View\";\r\n    SharingRole[SharingRole[\"Edit\"] = 2] = \"Edit\";\r\n    SharingRole[SharingRole[\"Owner\"] = 3] = \"Owner\";\r\n})(SharingRole || (SharingRole = {}));\r\nexport var SharingOperationStatusCode;\r\n(function (SharingOperationStatusCode) {\r\n    /**\r\n     * The share operation completed without errors.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"CompletedSuccessfully\"] = 0] = \"CompletedSuccessfully\";\r\n    /**\r\n     * The share operation completed and generated requests for access.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"AccessRequestsQueued\"] = 1] = \"AccessRequestsQueued\";\r\n    /**\r\n     * The share operation failed as there were no resolved users.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"NoResolvedUsers\"] = -1] = \"NoResolvedUsers\";\r\n    /**\r\n     * The share operation failed due to insufficient permissions.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"AccessDenied\"] = -2] = \"AccessDenied\";\r\n    /**\r\n     * The share operation failed when attempting a cross site share, which is not supported.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"CrossSiteRequestNotSupported\"] = -3] = \"CrossSiteRequestNotSupported\";\r\n    /**\r\n     * The sharing operation failed due to an unknown error.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"UnknowError\"] = -4] = \"UnknowError\";\r\n    /**\r\n     * The text you typed is too long. Please shorten it.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"EmailBodyTooLong\"] = -5] = \"EmailBodyTooLong\";\r\n    /**\r\n     * The maximum number of unique scopes in the list has been exceeded.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"ListUniqueScopesExceeded\"] = -6] = \"ListUniqueScopesExceeded\";\r\n    /**\r\n     * The share operation failed because a sharing capability is disabled in the site.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"CapabilityDisabled\"] = -7] = \"CapabilityDisabled\";\r\n    /**\r\n     * The specified object for the share operation is not supported.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"ObjectNotSupported\"] = -8] = \"ObjectNotSupported\";\r\n    /**\r\n     * A SharePoint group cannot contain another SharePoint group.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"NestedGroupsNotSupported\"] = -9] = \"NestedGroupsNotSupported\";\r\n})(SharingOperationStatusCode || (SharingOperationStatusCode = {}));\r\nexport var SPSharedObjectType;\r\n(function (SPSharedObjectType) {\r\n    SPSharedObjectType[SPSharedObjectType[\"Unknown\"] = 0] = \"Unknown\";\r\n    SPSharedObjectType[SPSharedObjectType[\"File\"] = 1] = \"File\";\r\n    SPSharedObjectType[SPSharedObjectType[\"Folder\"] = 2] = \"Folder\";\r\n    SPSharedObjectType[SPSharedObjectType[\"Item\"] = 3] = \"Item\";\r\n    SPSharedObjectType[SPSharedObjectType[\"List\"] = 4] = \"List\";\r\n    SPSharedObjectType[SPSharedObjectType[\"Web\"] = 5] = \"Web\";\r\n    SPSharedObjectType[SPSharedObjectType[\"Max\"] = 6] = \"Max\";\r\n})(SPSharedObjectType || (SPSharedObjectType = {}));\r\nexport var SharingDomainRestrictionMode;\r\n(function (SharingDomainRestrictionMode) {\r\n    SharingDomainRestrictionMode[SharingDomainRestrictionMode[\"None\"] = 0] = \"None\";\r\n    SharingDomainRestrictionMode[SharingDomainRestrictionMode[\"AllowList\"] = 1] = \"AllowList\";\r\n    SharingDomainRestrictionMode[SharingDomainRestrictionMode[\"BlockList\"] = 2] = \"BlockList\";\r\n})(SharingDomainRestrictionMode || (SharingDomainRestrictionMode = {}));\r\nexport var RenderListDataOptions;\r\n(function (RenderListDataOptions) {\r\n    RenderListDataOptions[RenderListDataOptions[\"None\"] = 0] = \"None\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ContextInfo\"] = 1] = \"ContextInfo\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ListData\"] = 2] = \"ListData\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ListSchema\"] = 4] = \"ListSchema\";\r\n    RenderListDataOptions[RenderListDataOptions[\"MenuView\"] = 8] = \"MenuView\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ListContentType\"] = 16] = \"ListContentType\";\r\n    RenderListDataOptions[RenderListDataOptions[\"FileSystemItemId\"] = 32] = \"FileSystemItemId\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ClientFormSchema\"] = 64] = \"ClientFormSchema\";\r\n    RenderListDataOptions[RenderListDataOptions[\"QuickLaunch\"] = 128] = \"QuickLaunch\";\r\n    RenderListDataOptions[RenderListDataOptions[\"Spotlight\"] = 256] = \"Spotlight\";\r\n    RenderListDataOptions[RenderListDataOptions[\"Visualization\"] = 512] = \"Visualization\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ViewMetadata\"] = 1024] = \"ViewMetadata\";\r\n    RenderListDataOptions[RenderListDataOptions[\"DisableAutoHyperlink\"] = 2048] = \"DisableAutoHyperlink\";\r\n    RenderListDataOptions[RenderListDataOptions[\"EnableMediaTAUrls\"] = 4096] = \"EnableMediaTAUrls\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ParentInfo\"] = 8192] = \"ParentInfo\";\r\n    RenderListDataOptions[RenderListDataOptions[\"PageContextInfo\"] = 16384] = \"PageContextInfo\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ClientSideComponentManifest\"] = 32768] = \"ClientSideComponentManifest\";\r\n})(RenderListDataOptions || (RenderListDataOptions = {}));\r\nexport var FieldUserSelectionMode;\r\n(function (FieldUserSelectionMode) {\r\n    FieldUserSelectionMode[FieldUserSelectionMode[\"PeopleAndGroups\"] = 1] = \"PeopleAndGroups\";\r\n    FieldUserSelectionMode[FieldUserSelectionMode[\"PeopleOnly\"] = 0] = \"PeopleOnly\";\r\n})(FieldUserSelectionMode || (FieldUserSelectionMode = {}));\r\nexport var ChoiceFieldFormatType;\r\n(function (ChoiceFieldFormatType) {\r\n    ChoiceFieldFormatType[ChoiceFieldFormatType[\"Dropdown\"] = 0] = \"Dropdown\";\r\n    ChoiceFieldFormatType[ChoiceFieldFormatType[\"RadioButtons\"] = 1] = \"RadioButtons\";\r\n})(ChoiceFieldFormatType || (ChoiceFieldFormatType = {}));\r\n/**\r\n * Specifies the originating zone of a request received.\r\n */\r\nexport var UrlZone;\r\n(function (UrlZone) {\r\n    /**\r\n     * Specifies the default zone used for requests unless another zone is specified.\r\n     */\r\n    UrlZone[UrlZone[\"DefaultZone\"] = 0] = \"DefaultZone\";\r\n    /**\r\n     * Specifies an intranet zone.\r\n     */\r\n    UrlZone[UrlZone[\"Intranet\"] = 1] = \"Intranet\";\r\n    /**\r\n     * Specifies an Internet zone.\r\n     */\r\n    UrlZone[UrlZone[\"Internet\"] = 2] = \"Internet\";\r\n    /**\r\n     * Specifies a custom zone.\r\n     */\r\n    UrlZone[UrlZone[\"Custom\"] = 3] = \"Custom\";\r\n    /**\r\n     * Specifies an extranet zone.\r\n     */\r\n    UrlZone[UrlZone[\"Extranet\"] = 4] = \"Extranet\";\r\n})(UrlZone || (UrlZone = {}));\r\n//# sourceMappingURL=types.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryableInstance, SharePointQueryableCollection, defaultPath } from \"./sharepointqueryable\";\r\nimport { SiteGroups } from \"./sitegroups\";\r\nimport { extend, jsS, hOP } from \"@pnp/common\";\r\nimport { metadata } from \"./utils/metadata\";\r\n/**\r\n * Describes a set of role assignments for the current scope\r\n *\r\n */\r\nvar RoleAssignments = /** @class */ (function (_super) {\r\n    tslib_1.__extends(RoleAssignments, _super);\r\n    function RoleAssignments() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    RoleAssignments_1 = RoleAssignments;\r\n    /**\r\n     * Gets the role assignment associated with the specified principal id from the collection.\r\n     *\r\n     * @param id The id of the role assignment\r\n     */\r\n    RoleAssignments.prototype.getById = function (id) {\r\n        var ra = new RoleAssignment(this);\r\n        ra.concat(\"(\" + id + \")\");\r\n        return ra;\r\n    };\r\n    /**\r\n     * Adds a new role assignment with the specified principal and role definitions to the collection\r\n     *\r\n     * @param principalId The id of the user or group to assign permissions to\r\n     * @param roleDefId The id of the role definition that defines the permissions to assign\r\n     *\r\n     */\r\n    RoleAssignments.prototype.add = function (principalId, roleDefId) {\r\n        return this.clone(RoleAssignments_1, \"addroleassignment(principalid=\" + principalId + \", roledefid=\" + roleDefId + \")\").postCore();\r\n    };\r\n    /**\r\n     * Removes the role assignment with the specified principal and role definition from the collection\r\n     *\r\n     * @param principalId The id of the user or group in the role assignment\r\n     * @param roleDefId The id of the role definition in the role assignment\r\n     *\r\n     */\r\n    RoleAssignments.prototype.remove = function (principalId, roleDefId) {\r\n        return this.clone(RoleAssignments_1, \"removeroleassignment(principalid=\" + principalId + \", roledefid=\" + roleDefId + \")\").postCore();\r\n    };\r\n    var RoleAssignments_1;\r\n    RoleAssignments = RoleAssignments_1 = tslib_1.__decorate([\r\n        defaultPath(\"roleassignments\")\r\n    ], RoleAssignments);\r\n    return RoleAssignments;\r\n}(SharePointQueryableCollection));\r\nexport { RoleAssignments };\r\n/**\r\n * Describes a role assignment\r\n *\r\n */\r\nvar RoleAssignment = /** @class */ (function (_super) {\r\n    tslib_1.__extends(RoleAssignment, _super);\r\n    function RoleAssignment() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * Deletes this role assignment\r\n         *\r\n         */\r\n        _this.delete = _this._delete;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(RoleAssignment.prototype, \"groups\", {\r\n        /**\r\n         * Gets the groups that directly belong to the access control list (ACL) for this securable object\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteGroups(this, \"groups\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RoleAssignment.prototype, \"bindings\", {\r\n        /**\r\n         * Gets the role definition bindings for this role assignment\r\n         *\r\n         */\r\n        get: function () {\r\n            return new RoleDefinitionBindings(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return RoleAssignment;\r\n}(SharePointQueryableInstance));\r\nexport { RoleAssignment };\r\n/**\r\n * Describes a collection of role definitions\r\n *\r\n */\r\nvar RoleDefinitions = /** @class */ (function (_super) {\r\n    tslib_1.__extends(RoleDefinitions, _super);\r\n    function RoleDefinitions() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets the role definition with the specified id from the collection\r\n     *\r\n     * @param id The id of the role definition\r\n     *\r\n     */\r\n    RoleDefinitions.prototype.getById = function (id) {\r\n        return new RoleDefinition(this, \"getById(\" + id + \")\");\r\n    };\r\n    /**\r\n     * Gets the role definition with the specified name\r\n     *\r\n     * @param name The name of the role definition\r\n     *\r\n     */\r\n    RoleDefinitions.prototype.getByName = function (name) {\r\n        return new RoleDefinition(this, \"getbyname('\" + name + \"')\");\r\n    };\r\n    /**\r\n     * Gets the role definition with the specified role type\r\n     *\r\n     * @param roleTypeKind The roletypekind of the role definition (None=0, Guest=1, Reader=2, Contributor=3, WebDesigner=4, Administrator=5, Editor=6, System=7)\r\n     *\r\n     */\r\n    RoleDefinitions.prototype.getByType = function (roleTypeKind) {\r\n        return new RoleDefinition(this, \"getbytype(\" + roleTypeKind + \")\");\r\n    };\r\n    /**\r\n     * Creates a role definition\r\n     *\r\n     * @param name The new role definition's name\r\n     * @param description The new role definition's description\r\n     * @param order The order in which the role definition appears\r\n     * @param basePermissions The permissions mask for this role definition\r\n     *\r\n     */\r\n    RoleDefinitions.prototype.add = function (name, description, order, basePermissions) {\r\n        var _this = this;\r\n        var postBody = jsS({\r\n            BasePermissions: extend({ __metadata: { type: \"SP.BasePermissions\" } }, basePermissions),\r\n            Description: description,\r\n            Name: name,\r\n            Order: order,\r\n            __metadata: { \"type\": \"SP.RoleDefinition\" },\r\n        });\r\n        return this.postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                definition: _this.getById(data.Id),\r\n            };\r\n        });\r\n    };\r\n    RoleDefinitions = tslib_1.__decorate([\r\n        defaultPath(\"roledefinitions\")\r\n    ], RoleDefinitions);\r\n    return RoleDefinitions;\r\n}(SharePointQueryableCollection));\r\nexport { RoleDefinitions };\r\n/**\r\n * Describes a role definition\r\n *\r\n */\r\nvar RoleDefinition = /** @class */ (function (_super) {\r\n    tslib_1.__extends(RoleDefinition, _super);\r\n    function RoleDefinition() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * Deletes this role definition\r\n         *\r\n         */\r\n        _this.delete = _this._delete;\r\n        return _this;\r\n        /* tslint:enable */\r\n    }\r\n    /**\r\n     * Updates this role definition with the supplied properties\r\n     *\r\n     * @param properties A plain object hash of values to update for the role definition\r\n     */\r\n    /* tslint:disable no-string-literal */\r\n    RoleDefinition.prototype.update = function (properties) {\r\n        var _this = this;\r\n        var s = [\"BasePermissions\"];\r\n        if (hOP(properties, s[0]) !== undefined) {\r\n            properties[s[0]] = extend({ __metadata: { type: \"SP.\" + s[0] } }, properties[s[0]]);\r\n        }\r\n        var postBody = jsS(extend(metadata(\"SP.RoleDefinition\"), properties));\r\n        return this.postCore({\r\n            body: postBody,\r\n            headers: {\r\n                \"X-HTTP-Method\": \"MERGE\",\r\n            },\r\n        }).then(function (data) {\r\n            var retDef = _this;\r\n            if (hOP(properties, \"Name\")) {\r\n                var parent_1 = _this.getParent(RoleDefinitions, _this.parentUrl, \"\");\r\n                retDef = parent_1.getByName(properties[\"Name\"]);\r\n            }\r\n            return {\r\n                data: data,\r\n                definition: retDef,\r\n            };\r\n        });\r\n    };\r\n    return RoleDefinition;\r\n}(SharePointQueryableInstance));\r\nexport { RoleDefinition };\r\n/**\r\n * Describes the role definitons bound to a role assignment object\r\n *\r\n */\r\nvar RoleDefinitionBindings = /** @class */ (function (_super) {\r\n    tslib_1.__extends(RoleDefinitionBindings, _super);\r\n    function RoleDefinitionBindings() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    RoleDefinitionBindings = tslib_1.__decorate([\r\n        defaultPath(\"roledefinitionbindings\")\r\n    ], RoleDefinitionBindings);\r\n    return RoleDefinitionBindings;\r\n}(SharePointQueryableCollection));\r\nexport { RoleDefinitionBindings };\r\n//# sourceMappingURL=roles.js.map","import * as tslib_1 from \"tslib\";\r\nimport { RoleAssignments } from \"./roles\";\r\nimport { PermissionKind } from \"./types\";\r\nimport { SharePointQueryable, SharePointQueryableInstance } from \"./sharepointqueryable\";\r\nimport { hOP } from \"@pnp/common\";\r\nvar SharePointQueryableSecurable = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SharePointQueryableSecurable, _super);\r\n    function SharePointQueryableSecurable() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(SharePointQueryableSecurable.prototype, \"roleAssignments\", {\r\n        /**\r\n         * Gets the set of role assignments for this item\r\n         *\r\n         */\r\n        get: function () {\r\n            return new RoleAssignments(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SharePointQueryableSecurable.prototype, \"firstUniqueAncestorSecurableObject\", {\r\n        /**\r\n         * Gets the closest securable up the security hierarchy whose permissions are applied to this list item\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableInstance(this, \"FirstUniqueAncestorSecurableObject\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets the effective permissions for the user supplied\r\n     *\r\n     * @param loginName The claims username for the user (ex: i:0#.f|membership|user@domain.com)\r\n     */\r\n    SharePointQueryableSecurable.prototype.getUserEffectivePermissions = function (loginName) {\r\n        var q = this.clone(SharePointQueryable, \"getUserEffectivePermissions(@user)\");\r\n        q.query.set(\"@user\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.get().then(function (r) {\r\n            // handle verbose mode\r\n            return hOP(r, \"GetUserEffectivePermissions\") ? r.GetUserEffectivePermissions : r;\r\n        });\r\n    };\r\n    /**\r\n     * Gets the effective permissions for the current user\r\n     */\r\n    SharePointQueryableSecurable.prototype.getCurrentUserEffectivePermissions = function () {\r\n        var _this = this;\r\n        // remove need to reference Web here, which created a circular build issue\r\n        var w = new SharePointQueryableInstance(\"_api/web\", \"currentuser\");\r\n        return w.configureFrom(this).select(\"LoginName\").get().then(function (user) {\r\n            return _this.getUserEffectivePermissions(user.LoginName);\r\n        });\r\n    };\r\n    /**\r\n     * Breaks the security inheritance at this level optinally copying permissions and clearing subscopes\r\n     *\r\n     * @param copyRoleAssignments If true the permissions are copied from the current parent scope\r\n     * @param clearSubscopes Optional. true to make all child securable objects inherit role assignments from the current object\r\n     */\r\n    SharePointQueryableSecurable.prototype.breakRoleInheritance = function (copyRoleAssignments, clearSubscopes) {\r\n        if (copyRoleAssignments === void 0) { copyRoleAssignments = false; }\r\n        if (clearSubscopes === void 0) { clearSubscopes = false; }\r\n        return this.clone(SharePointQueryableSecurable, \"breakroleinheritance(copyroleassignments=\" + copyRoleAssignments + \", clearsubscopes=\" + clearSubscopes + \")\").postCore();\r\n    };\r\n    /**\r\n     * Removes the local role assignments so that it re-inherit role assignments from the parent object.\r\n     *\r\n     */\r\n    SharePointQueryableSecurable.prototype.resetRoleInheritance = function () {\r\n        return this.clone(SharePointQueryableSecurable, \"resetroleinheritance\").postCore();\r\n    };\r\n    /**\r\n     * Determines if a given user has the appropriate permissions\r\n     *\r\n     * @param loginName The user to check\r\n     * @param permission The permission being checked\r\n     */\r\n    SharePointQueryableSecurable.prototype.userHasPermissions = function (loginName, permission) {\r\n        var _this = this;\r\n        return this.getUserEffectivePermissions(loginName).then(function (perms) {\r\n            return _this.hasPermissions(perms, permission);\r\n        });\r\n    };\r\n    /**\r\n     * Determines if the current user has the requested permissions\r\n     *\r\n     * @param permission The permission we wish to check\r\n     */\r\n    SharePointQueryableSecurable.prototype.currentUserHasPermissions = function (permission) {\r\n        var _this = this;\r\n        return this.getCurrentUserEffectivePermissions().then(function (perms) {\r\n            return _this.hasPermissions(perms, permission);\r\n        });\r\n    };\r\n    /**\r\n     * Taken from sp.js, checks the supplied permissions against the mask\r\n     *\r\n     * @param value The security principal's permissions on the given object\r\n     * @param perm The permission checked against the value\r\n     */\r\n    /* tslint:disable:no-bitwise */\r\n    SharePointQueryableSecurable.prototype.hasPermissions = function (value, perm) {\r\n        if (!perm) {\r\n            return true;\r\n        }\r\n        if (perm === PermissionKind.FullMask) {\r\n            return (value.High & 32767) === 32767 && value.Low === 65535;\r\n        }\r\n        perm = perm - 1;\r\n        var num = 1;\r\n        if (perm >= 0 && perm < 32) {\r\n            num = num << perm;\r\n            return 0 !== (value.Low & num);\r\n        }\r\n        else if (perm >= 32 && perm < 64) {\r\n            num = num << perm - 32;\r\n            return 0 !== (value.High & num);\r\n        }\r\n        return false;\r\n    };\r\n    return SharePointQueryableSecurable;\r\n}(SharePointQueryableInstance));\r\nexport { SharePointQueryableSecurable };\r\n//# sourceMappingURL=sharepointqueryablesecurable.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryableCollection, SharePointQueryableInstance, defaultPath } from \"./sharepointqueryable\";\r\nimport { TextParser, BlobParser, JSONParser, BufferParser } from \"@pnp/odata\";\r\nimport { extend, getGUID } from \"@pnp/common\";\r\nimport { LimitedWebPartManager } from \"./webparts\";\r\nimport { Item } from \"./items\";\r\nimport { SharePointQueryableShareableFile } from \"./sharepointqueryableshareable\";\r\nimport { odataUrlFrom } from \"./odata\";\r\n/**\r\n * Describes a collection of File objects\r\n *\r\n */\r\nvar Files = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Files, _super);\r\n    function Files() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Files_1 = Files;\r\n    /**\r\n     * Gets a File by filename\r\n     *\r\n     * @param name The name of the file, including extension.\r\n     */\r\n    Files.prototype.getByName = function (name) {\r\n        var f = new File(this);\r\n        f.concat(\"('\" + name + \"')\");\r\n        return f;\r\n    };\r\n    /**\r\n     * Uploads a file. Not supported for batching\r\n     *\r\n     * @param url The folder-relative url of the file.\r\n     * @param content The file contents blob.\r\n     * @param shouldOverWrite Should a file with the same name in the same location be overwritten? (default: true)\r\n     * @returns The new File and the raw response.\r\n     */\r\n    Files.prototype.add = function (url, content, shouldOverWrite) {\r\n        var _this = this;\r\n        if (shouldOverWrite === void 0) { shouldOverWrite = true; }\r\n        return new Files_1(this, \"add(overwrite=\" + shouldOverWrite + \",url='\" + url + \"')\")\r\n            .postCore({\r\n            body: content,\r\n        }).then(function (response) {\r\n            return {\r\n                data: response,\r\n                file: _this.getByName(url),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Uploads a file. Not supported for batching\r\n     *\r\n     * @param url The folder-relative url of the file.\r\n     * @param content The Blob file content to add\r\n     * @param progress A callback function which can be used to track the progress of the upload\r\n     * @param shouldOverWrite Should a file with the same name in the same location be overwritten? (default: true)\r\n     * @param chunkSize The size of each file slice, in bytes (default: 10485760)\r\n     * @returns The new File and the raw response.\r\n     */\r\n    Files.prototype.addChunked = function (url, content, progress, shouldOverWrite, chunkSize) {\r\n        var _this = this;\r\n        if (shouldOverWrite === void 0) { shouldOverWrite = true; }\r\n        if (chunkSize === void 0) { chunkSize = 10485760; }\r\n        var adder = this.clone(Files_1, \"add(overwrite=\" + shouldOverWrite + \",url='\" + url + \"')\", false);\r\n        return adder.postCore()\r\n            .then(function () { return _this.getByName(url); })\r\n            .then(function (file) { return file.setContentChunked(content, progress, chunkSize); });\r\n    };\r\n    /**\r\n     * Adds a ghosted file to an existing list or document library. Not supported for batching.\r\n     *\r\n     * @param fileUrl The server-relative url where you want to save the file.\r\n     * @param templateFileType The type of use to create the file.\r\n     * @returns The template file that was added and the raw response.\r\n     */\r\n    Files.prototype.addTemplateFile = function (fileUrl, templateFileType) {\r\n        var _this = this;\r\n        return this.clone(Files_1, \"addTemplateFile(urloffile='\" + fileUrl + \"',templatefiletype=\" + templateFileType + \")\", false)\r\n            .postCore().then(function (response) {\r\n            return {\r\n                data: response,\r\n                file: _this.getByName(fileUrl),\r\n            };\r\n        });\r\n    };\r\n    var Files_1;\r\n    Files = Files_1 = tslib_1.__decorate([\r\n        defaultPath(\"files\")\r\n    ], Files);\r\n    return Files;\r\n}(SharePointQueryableCollection));\r\nexport { Files };\r\n/**\r\n * Describes a single File instance\r\n *\r\n */\r\nvar File = /** @class */ (function (_super) {\r\n    tslib_1.__extends(File, _super);\r\n    function File() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(File.prototype, \"listItemAllFields\", {\r\n        /**\r\n         * Gets a value that specifies the list item field values for the list item corresponding to the file.\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableInstance(this, \"listItemAllFields\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(File.prototype, \"versions\", {\r\n        /**\r\n         * Gets a collection of versions\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Versions(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Approves the file submitted for content approval with the specified comment.\r\n     * Only documents in lists that are enabled for content approval can be approved.\r\n     *\r\n     * @param comment The comment for the approval.\r\n     */\r\n    File.prototype.approve = function (comment) {\r\n        if (comment === void 0) { comment = \"\"; }\r\n        return this.clone(File, \"approve(comment='\" + comment + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Stops the chunk upload session without saving the uploaded data. Does not support batching.\r\n     * If the file doesn’t already exist in the library, the partially uploaded file will be deleted.\r\n     * Use this in response to user action (as in a request to cancel an upload) or an error or exception.\r\n     * Use the uploadId value that was passed to the StartUpload method that started the upload session.\r\n     * This method is currently available only on Office 365.\r\n     *\r\n     * @param uploadId The unique identifier of the upload session.\r\n     */\r\n    File.prototype.cancelUpload = function (uploadId) {\r\n        return this.clone(File, \"cancelUpload(uploadId=guid'\" + uploadId + \"')\", false).postCore();\r\n    };\r\n    /**\r\n     * Checks the file in to a document library based on the check-in type.\r\n     *\r\n     * @param comment A comment for the check-in. Its length must be <= 1023.\r\n     * @param checkinType The check-in type for the file.\r\n     */\r\n    File.prototype.checkin = function (comment, checkinType) {\r\n        if (comment === void 0) { comment = \"\"; }\r\n        if (checkinType === void 0) { checkinType = CheckinType.Major; }\r\n        if (comment.length > 1023) {\r\n            throw Error(\"The maximum comment length is 1023 characters.\");\r\n        }\r\n        return this.clone(File, \"checkin(comment='\" + comment + \"',checkintype=\" + checkinType + \")\").postCore();\r\n    };\r\n    /**\r\n     * Checks out the file from a document library.\r\n     */\r\n    File.prototype.checkout = function () {\r\n        return this.clone(File, \"checkout\").postCore();\r\n    };\r\n    /**\r\n     * Copies the file to the destination url.\r\n     *\r\n     * @param url The absolute url or server relative url of the destination file path to copy to.\r\n     * @param shouldOverWrite Should a file with the same name in the same location be overwritten?\r\n     */\r\n    File.prototype.copyTo = function (url, shouldOverWrite) {\r\n        if (shouldOverWrite === void 0) { shouldOverWrite = true; }\r\n        return this.clone(File, \"copyTo(strnewurl='\" + url + \"',boverwrite=\" + shouldOverWrite + \")\").postCore();\r\n    };\r\n    /**\r\n     * Delete this file.\r\n     *\r\n     * @param eTag Value used in the IF-Match header, by default \"*\"\r\n     */\r\n    File.prototype.delete = function (eTag) {\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        return this.clone(File, null).postCore({\r\n            headers: {\r\n                \"IF-Match\": eTag,\r\n                \"X-HTTP-Method\": \"DELETE\",\r\n            },\r\n        });\r\n    };\r\n    /**\r\n     * Denies approval for a file that was submitted for content approval.\r\n     * Only documents in lists that are enabled for content approval can be denied.\r\n     *\r\n     * @param comment The comment for the denial.\r\n     */\r\n    File.prototype.deny = function (comment) {\r\n        if (comment === void 0) { comment = \"\"; }\r\n        if (comment.length > 1023) {\r\n            throw Error(\"The maximum comment length is 1023 characters.\");\r\n        }\r\n        return this.clone(File, \"deny(comment='\" + comment + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Specifies the control set used to access, modify, or add Web Parts associated with this Web Part Page and view.\r\n     * An exception is thrown if the file is not an ASPX page.\r\n     *\r\n     * @param scope The WebPartsPersonalizationScope view on the Web Parts page.\r\n     */\r\n    File.prototype.getLimitedWebPartManager = function (scope) {\r\n        if (scope === void 0) { scope = WebPartsPersonalizationScope.Shared; }\r\n        return new LimitedWebPartManager(this, \"getLimitedWebPartManager(scope=\" + scope + \")\");\r\n    };\r\n    /**\r\n     * Moves the file to the specified destination url.\r\n     *\r\n     * @param url The absolute url or server relative url of the destination file path to move to.\r\n     * @param moveOperations The bitwise MoveOperations value for how to move the file.\r\n     */\r\n    File.prototype.moveTo = function (url, moveOperations) {\r\n        if (moveOperations === void 0) { moveOperations = MoveOperations.Overwrite; }\r\n        return this.clone(File, \"moveTo(newurl='\" + url + \"',flags=\" + moveOperations + \")\").postCore();\r\n    };\r\n    /**\r\n     * Submits the file for content approval with the specified comment.\r\n     *\r\n     * @param comment The comment for the published file. Its length must be <= 1023.\r\n     */\r\n    File.prototype.publish = function (comment) {\r\n        if (comment === void 0) { comment = \"\"; }\r\n        if (comment.length > 1023) {\r\n            throw Error(\"The maximum comment length is 1023 characters.\");\r\n        }\r\n        return this.clone(File, \"publish(comment='\" + comment + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Moves the file to the Recycle Bin and returns the identifier of the new Recycle Bin item.\r\n     *\r\n     * @returns The GUID of the recycled file.\r\n     */\r\n    File.prototype.recycle = function () {\r\n        return this.clone(File, \"recycle\").postCore();\r\n    };\r\n    /**\r\n     * Reverts an existing checkout for the file.\r\n     *\r\n     */\r\n    File.prototype.undoCheckout = function () {\r\n        return this.clone(File, \"undoCheckout\").postCore();\r\n    };\r\n    /**\r\n     * Removes the file from content approval or unpublish a major version.\r\n     *\r\n     * @param comment The comment for the unpublish operation. Its length must be <= 1023.\r\n     */\r\n    File.prototype.unpublish = function (comment) {\r\n        if (comment === void 0) { comment = \"\"; }\r\n        if (comment.length > 1023) {\r\n            throw Error(\"The maximum comment length is 1023 characters.\");\r\n        }\r\n        return this.clone(File, \"unpublish(comment='\" + comment + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Gets the contents of the file as text. Not supported in batching.\r\n     *\r\n     */\r\n    File.prototype.getText = function () {\r\n        return this.clone(File, \"$value\", false).get(new TextParser(), { headers: { \"binaryStringResponseBody\": \"true\" } });\r\n    };\r\n    /**\r\n     * Gets the contents of the file as a blob, does not work in Node.js. Not supported in batching.\r\n     *\r\n     */\r\n    File.prototype.getBlob = function () {\r\n        return this.clone(File, \"$value\", false).get(new BlobParser(), { headers: { \"binaryStringResponseBody\": \"true\" } });\r\n    };\r\n    /**\r\n     * Gets the contents of a file as an ArrayBuffer, works in Node.js. Not supported in batching.\r\n     */\r\n    File.prototype.getBuffer = function () {\r\n        return this.clone(File, \"$value\", false).get(new BufferParser(), { headers: { \"binaryStringResponseBody\": \"true\" } });\r\n    };\r\n    /**\r\n     * Gets the contents of a file as an ArrayBuffer, works in Node.js. Not supported in batching.\r\n     */\r\n    File.prototype.getJSON = function () {\r\n        return this.clone(File, \"$value\", false).get(new JSONParser(), { headers: { \"binaryStringResponseBody\": \"true\" } });\r\n    };\r\n    /**\r\n     * Sets the content of a file, for large files use setContentChunked. Not supported in batching.\r\n     *\r\n     * @param content The file content\r\n     *\r\n     */\r\n    File.prototype.setContent = function (content) {\r\n        var _this = this;\r\n        return this.clone(File, \"$value\", false).postCore({\r\n            body: content,\r\n            headers: {\r\n                \"X-HTTP-Method\": \"PUT\",\r\n            },\r\n        }).then(function (_) { return new File(_this); });\r\n    };\r\n    /**\r\n     * Gets the associated list item for this folder, loading the default properties\r\n     */\r\n    File.prototype.getItem = function () {\r\n        var _this = this;\r\n        var selects = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            selects[_i] = arguments[_i];\r\n        }\r\n        var q = this.listItemAllFields;\r\n        return q.select.apply(q, selects).get().then(function (d) {\r\n            return extend((new Item(odataUrlFrom(d))).configureFrom(_this), d);\r\n        });\r\n    };\r\n    /**\r\n     * Sets the contents of a file using a chunked upload approach. Not supported in batching.\r\n     *\r\n     * @param file The file to upload\r\n     * @param progress A callback function which can be used to track the progress of the upload\r\n     * @param chunkSize The size of each file slice, in bytes (default: 10485760)\r\n     */\r\n    File.prototype.setContentChunked = function (file, progress, chunkSize) {\r\n        var _this = this;\r\n        if (chunkSize === void 0) { chunkSize = 10485760; }\r\n        if (progress === undefined) {\r\n            progress = function () { return null; };\r\n        }\r\n        var fileSize = file.size;\r\n        var blockCount = parseInt((file.size / chunkSize).toString(), 10) + ((file.size % chunkSize === 0) ? 1 : 0);\r\n        var uploadId = getGUID();\r\n        // start the chain with the first fragment\r\n        progress({ uploadId: uploadId, blockNumber: 1, chunkSize: chunkSize, currentPointer: 0, fileSize: fileSize, stage: \"starting\", totalBlocks: blockCount });\r\n        var chain = this.startUpload(uploadId, file.slice(0, chunkSize));\r\n        var _loop_1 = function (i) {\r\n            chain = chain.then(function (pointer) {\r\n                progress({ uploadId: uploadId, blockNumber: i, chunkSize: chunkSize, currentPointer: pointer, fileSize: fileSize, stage: \"continue\", totalBlocks: blockCount });\r\n                return _this.continueUpload(uploadId, pointer, file.slice(pointer, pointer + chunkSize));\r\n            });\r\n        };\r\n        // skip the first and last blocks\r\n        for (var i = 2; i < blockCount; i++) {\r\n            _loop_1(i);\r\n        }\r\n        return chain.then(function (pointer) {\r\n            progress({ uploadId: uploadId, blockNumber: blockCount, chunkSize: chunkSize, currentPointer: pointer, fileSize: fileSize, stage: \"finishing\", totalBlocks: blockCount });\r\n            return _this.finishUpload(uploadId, pointer, file.slice(pointer));\r\n        });\r\n    };\r\n    /**\r\n     * Starts a new chunk upload session and uploads the first fragment.\r\n     * The current file content is not changed when this method completes.\r\n     * The method is idempotent (and therefore does not change the result) as long as you use the same values for uploadId and stream.\r\n     * The upload session ends either when you use the CancelUpload method or when you successfully\r\n     * complete the upload session by passing the rest of the file contents through the ContinueUpload and FinishUpload methods.\r\n     * The StartUpload and ContinueUpload methods return the size of the running total of uploaded data in bytes,\r\n     * so you can pass those return values to subsequent uses of ContinueUpload and FinishUpload.\r\n     * This method is currently available only on Office 365.\r\n     *\r\n     * @param uploadId The unique identifier of the upload session.\r\n     * @param fragment The file contents.\r\n     * @returns The size of the total uploaded data in bytes.\r\n     */\r\n    File.prototype.startUpload = function (uploadId, fragment) {\r\n        return this.clone(File, \"startUpload(uploadId=guid'\" + uploadId + \"')\", false)\r\n            .postCore({ body: fragment })\r\n            .then(function (n) {\r\n            // When OData=verbose the payload has the following shape:\r\n            // { StartUpload: \"10485760\" }\r\n            if (typeof n === \"object\") {\r\n                n = n.StartUpload;\r\n            }\r\n            return parseFloat(n);\r\n        });\r\n    };\r\n    /**\r\n     * Continues the chunk upload session with an additional fragment.\r\n     * The current file content is not changed.\r\n     * Use the uploadId value that was passed to the StartUpload method that started the upload session.\r\n     * This method is currently available only on Office 365.\r\n     *\r\n     * @param uploadId The unique identifier of the upload session.\r\n     * @param fileOffset The size of the offset into the file where the fragment starts.\r\n     * @param fragment The file contents.\r\n     * @returns The size of the total uploaded data in bytes.\r\n     */\r\n    File.prototype.continueUpload = function (uploadId, fileOffset, fragment) {\r\n        return this.clone(File, \"continueUpload(uploadId=guid'\" + uploadId + \"',fileOffset=\" + fileOffset + \")\", false)\r\n            .postCore({ body: fragment })\r\n            .then(function (n) {\r\n            // When OData=verbose the payload has the following shape:\r\n            // { ContinueUpload: \"20971520\" }\r\n            if (typeof n === \"object\") {\r\n                n = n.ContinueUpload;\r\n            }\r\n            return parseFloat(n);\r\n        });\r\n    };\r\n    /**\r\n     * Uploads the last file fragment and commits the file. The current file content is changed when this method completes.\r\n     * Use the uploadId value that was passed to the StartUpload method that started the upload session.\r\n     * This method is currently available only on Office 365.\r\n     *\r\n     * @param uploadId The unique identifier of the upload session.\r\n     * @param fileOffset The size of the offset into the file where the fragment starts.\r\n     * @param fragment The file contents.\r\n     * @returns The newly uploaded file.\r\n     */\r\n    File.prototype.finishUpload = function (uploadId, fileOffset, fragment) {\r\n        return this.clone(File, \"finishUpload(uploadId=guid'\" + uploadId + \"',fileOffset=\" + fileOffset + \")\", false)\r\n            .postCore({ body: fragment })\r\n            .then(function (response) {\r\n            return {\r\n                data: response,\r\n                file: new File(odataUrlFrom(response)),\r\n            };\r\n        });\r\n    };\r\n    return File;\r\n}(SharePointQueryableShareableFile));\r\nexport { File };\r\n/**\r\n * Describes a collection of Version objects\r\n *\r\n */\r\nvar Versions = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Versions, _super);\r\n    function Versions() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Versions_1 = Versions;\r\n    /**\r\n     * Gets a version by id\r\n     *\r\n     * @param versionId The id of the version to retrieve\r\n     */\r\n    Versions.prototype.getById = function (versionId) {\r\n        var v = new Version(this);\r\n        v.concat(\"(\" + versionId + \")\");\r\n        return v;\r\n    };\r\n    /**\r\n     * Deletes all the file version objects in the collection.\r\n     *\r\n     */\r\n    Versions.prototype.deleteAll = function () {\r\n        return new Versions_1(this, \"deleteAll\").postCore();\r\n    };\r\n    /**\r\n     * Deletes the specified version of the file.\r\n     *\r\n     * @param versionId The ID of the file version to delete.\r\n     */\r\n    Versions.prototype.deleteById = function (versionId) {\r\n        return this.clone(Versions_1, \"deleteById(vid=\" + versionId + \")\").postCore();\r\n    };\r\n    /**\r\n     * Recycles the specified version of the file.\r\n     *\r\n     * @param versionId The ID of the file version to delete.\r\n     */\r\n    Versions.prototype.recycleByID = function (versionId) {\r\n        return this.clone(Versions_1, \"recycleByID(vid=\" + versionId + \")\").postCore();\r\n    };\r\n    /**\r\n     * Deletes the file version object with the specified version label.\r\n     *\r\n     * @param label The version label of the file version to delete, for example: 1.2\r\n     */\r\n    Versions.prototype.deleteByLabel = function (label) {\r\n        return this.clone(Versions_1, \"deleteByLabel(versionlabel='\" + label + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Recycles the file version object with the specified version label.\r\n     *\r\n     * @param label The version label of the file version to delete, for example: 1.2\r\n     */\r\n    Versions.prototype.recycleByLabel = function (label) {\r\n        return this.clone(Versions_1, \"recycleByLabel(versionlabel='\" + label + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Creates a new file version from the file specified by the version label.\r\n     *\r\n     * @param label The version label of the file version to restore, for example: 1.2\r\n     */\r\n    Versions.prototype.restoreByLabel = function (label) {\r\n        return this.clone(Versions_1, \"restoreByLabel(versionlabel='\" + label + \"')\").postCore();\r\n    };\r\n    var Versions_1;\r\n    Versions = Versions_1 = tslib_1.__decorate([\r\n        defaultPath(\"versions\")\r\n    ], Versions);\r\n    return Versions;\r\n}(SharePointQueryableCollection));\r\nexport { Versions };\r\n/**\r\n * Describes a single Version instance\r\n *\r\n */\r\nvar Version = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Version, _super);\r\n    function Version() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n        * Delete a specific version of a file.\r\n        *\r\n        * @param eTag Value used in the IF-Match header, by default \"*\"\r\n        */\r\n        _this.delete = _this._deleteWithETag;\r\n        return _this;\r\n        // /**\r\n        // * Delete a specific version of a file.\r\n        // *\r\n        // * @param eTag Value used in the IF-Match header, by default \"*\"\r\n        // */\r\n        // public delete(eTag = \"*\"): Promise<void> {\r\n        //     return this.postCore({\r\n        //         headers: {\r\n        //             \"IF-Match\": eTag,\r\n        //             \"X-HTTP-Method\": \"DELETE\",\r\n        //         },\r\n        //     });\r\n        // }\r\n    }\r\n    return Version;\r\n}(SharePointQueryableInstance));\r\nexport { Version };\r\nexport var CheckinType;\r\n(function (CheckinType) {\r\n    CheckinType[CheckinType[\"Minor\"] = 0] = \"Minor\";\r\n    CheckinType[CheckinType[\"Major\"] = 1] = \"Major\";\r\n    CheckinType[CheckinType[\"Overwrite\"] = 2] = \"Overwrite\";\r\n})(CheckinType || (CheckinType = {}));\r\nexport var WebPartsPersonalizationScope;\r\n(function (WebPartsPersonalizationScope) {\r\n    WebPartsPersonalizationScope[WebPartsPersonalizationScope[\"User\"] = 0] = \"User\";\r\n    WebPartsPersonalizationScope[WebPartsPersonalizationScope[\"Shared\"] = 1] = \"Shared\";\r\n})(WebPartsPersonalizationScope || (WebPartsPersonalizationScope = {}));\r\nexport var MoveOperations;\r\n(function (MoveOperations) {\r\n    MoveOperations[MoveOperations[\"Overwrite\"] = 1] = \"Overwrite\";\r\n    MoveOperations[MoveOperations[\"AllowBrokenThickets\"] = 8] = \"AllowBrokenThickets\";\r\n})(MoveOperations || (MoveOperations = {}));\r\nexport var TemplateFileType;\r\n(function (TemplateFileType) {\r\n    TemplateFileType[TemplateFileType[\"StandardPage\"] = 0] = \"StandardPage\";\r\n    TemplateFileType[TemplateFileType[\"WikiPage\"] = 1] = \"WikiPage\";\r\n    TemplateFileType[TemplateFileType[\"FormPage\"] = 2] = \"FormPage\";\r\n    TemplateFileType[TemplateFileType[\"ClientSidePage\"] = 3] = \"ClientSidePage\";\r\n})(TemplateFileType || (TemplateFileType = {}));\r\n//# sourceMappingURL=files.js.map","import * as tslib_1 from \"tslib\";\r\nimport { extend, combine, jsS } from \"@pnp/common\";\r\nimport { odataUrlFrom } from \"./odata\";\r\nimport { SharePointQueryable, SharePointQueryableInstance, SharePointQueryableCollection, } from \"./sharepointqueryable\";\r\nimport { SharePointQueryableSecurable } from \"./sharepointqueryablesecurable\";\r\nimport { RoleType, SharingLinkKind, SharingRole, } from \"./types\";\r\nimport { extractWebUrl } from \"./utils/extractweburl\";\r\n/**\r\n * Internal helper class used to augment classes to include sharing functionality\r\n */\r\nvar SharePointQueryableShareable = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SharePointQueryableShareable, _super);\r\n    function SharePointQueryableShareable() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets a sharing link for the supplied\r\n     *\r\n     * @param kind The kind of link to share\r\n     * @param expiration The optional expiration for this link\r\n     */\r\n    SharePointQueryableShareable.prototype.getShareLink = function (kind, expiration) {\r\n        if (expiration === void 0) { expiration = null; }\r\n        // date needs to be an ISO string or null\r\n        var expString = expiration !== null ? expiration.toISOString() : null;\r\n        // clone using the factory and send the request\r\n        return this.clone(SharePointQueryableShareable, \"shareLink\").postCore({\r\n            body: jsS({\r\n                request: {\r\n                    createLink: true,\r\n                    emailData: null,\r\n                    settings: {\r\n                        expiration: expString,\r\n                        linkKind: kind,\r\n                    },\r\n                },\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Shares this instance with the supplied users\r\n     *\r\n     * @param loginNames Resolved login names to share\r\n     * @param role The role\r\n     * @param requireSignin True to require the user is authenticated, otherwise false\r\n     * @param propagateAcl True to apply this share to all children\r\n     * @param emailData If supplied an email will be sent with the indicated properties\r\n     */\r\n    SharePointQueryableShareable.prototype.shareWith = function (loginNames, role, requireSignin, propagateAcl, emailData) {\r\n        var _this = this;\r\n        if (requireSignin === void 0) { requireSignin = false; }\r\n        if (propagateAcl === void 0) { propagateAcl = false; }\r\n        // handle the multiple input types\r\n        if (!Array.isArray(loginNames)) {\r\n            loginNames = [loginNames];\r\n        }\r\n        var userStr = jsS(loginNames.map(function (login) { return { Key: login }; }));\r\n        var roleFilter = role === SharingRole.Edit ? RoleType.Contributor : RoleType.Reader;\r\n        // start by looking up the role definition id we need to set the roleValue\r\n        // remove need to reference Web here, which created a circular build issue\r\n        var w = new SharePointQueryableCollection(\"_api/web\", \"roledefinitions\");\r\n        return w.select(\"Id\").filter(\"RoleTypeKind eq \" + roleFilter).get().then(function (def) {\r\n            if (!Array.isArray(def) || def.length < 1) {\r\n                throw Error(\"Could not locate a role defintion with RoleTypeKind \" + roleFilter);\r\n            }\r\n            var postBody = {\r\n                includeAnonymousLinkInEmail: requireSignin,\r\n                peoplePickerInput: userStr,\r\n                propagateAcl: propagateAcl,\r\n                roleValue: \"role:\" + def[0].Id,\r\n                useSimplifiedRoles: true,\r\n            };\r\n            if (emailData !== undefined) {\r\n                postBody = extend(postBody, {\r\n                    emailBody: emailData.body,\r\n                    emailSubject: emailData.subject !== undefined ? emailData.subject : \"\",\r\n                    sendEmail: true,\r\n                });\r\n            }\r\n            return _this.clone(SharePointQueryableShareable, \"shareObject\").postCore({\r\n                body: jsS(postBody),\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Shares an object based on the supplied options\r\n     *\r\n     * @param options The set of options to send to the ShareObject method\r\n     * @param bypass If true any processing is skipped and the options are sent directly to the ShareObject method\r\n     */\r\n    SharePointQueryableShareable.prototype.shareObject = function (options, bypass) {\r\n        var _this = this;\r\n        if (bypass === void 0) { bypass = false; }\r\n        if (bypass) {\r\n            // if the bypass flag is set send the supplied parameters directly to the service\r\n            return this.sendShareObjectRequest(options);\r\n        }\r\n        // extend our options with some defaults\r\n        options = extend(options, {\r\n            group: null,\r\n            includeAnonymousLinkInEmail: false,\r\n            propagateAcl: false,\r\n            useSimplifiedRoles: true,\r\n        }, true);\r\n        return this.getRoleValue(options.role, options.group).then(function (roleValue) {\r\n            // handle the multiple input types\r\n            if (!Array.isArray(options.loginNames)) {\r\n                options.loginNames = [options.loginNames];\r\n            }\r\n            var userStr = jsS(options.loginNames.map(function (login) { return { Key: login }; }));\r\n            var postBody = {\r\n                peoplePickerInput: userStr,\r\n                roleValue: roleValue,\r\n                url: options.url,\r\n            };\r\n            if (options.emailData !== undefined && options.emailData !== null) {\r\n                postBody = extend(postBody, {\r\n                    emailBody: options.emailData.body,\r\n                    emailSubject: options.emailData.subject !== undefined ? options.emailData.subject : \"Shared with you.\",\r\n                    sendEmail: true,\r\n                });\r\n            }\r\n            return _this.sendShareObjectRequest(postBody);\r\n        });\r\n    };\r\n    /**\r\n     * Calls the web's UnshareObject method\r\n     *\r\n     * @param url The url of the object to unshare\r\n     */\r\n    SharePointQueryableShareable.prototype.unshareObjectWeb = function (url) {\r\n        return this.clone(SharePointQueryableShareable, \"unshareObject\").postCore({\r\n            body: jsS({\r\n                url: url,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Checks Permissions on the list of Users and returns back role the users have on the Item.\r\n     *\r\n     * @param recipients The array of Entities for which Permissions need to be checked.\r\n     */\r\n    SharePointQueryableShareable.prototype.checkPermissions = function (recipients) {\r\n        return this.clone(SharePointQueryableShareable, \"checkPermissions\").postCore({\r\n            body: jsS({\r\n                recipients: recipients,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Get Sharing Information.\r\n     *\r\n     * @param request The SharingInformationRequest Object.\r\n     * @param expands Expand more fields.\r\n     *\r\n     */\r\n    SharePointQueryableShareable.prototype.getSharingInformation = function (request, expands) {\r\n        if (request === void 0) { request = null; }\r\n        var q = this.clone(SharePointQueryableShareable, \"getSharingInformation\");\r\n        return q.expand.apply(q, expands).postCore({\r\n            body: jsS({\r\n                request: request,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Gets the sharing settings of an item.\r\n     *\r\n     * @param useSimplifiedRoles Determines whether to use simplified roles.\r\n     */\r\n    SharePointQueryableShareable.prototype.getObjectSharingSettings = function (useSimplifiedRoles) {\r\n        if (useSimplifiedRoles === void 0) { useSimplifiedRoles = true; }\r\n        return this.clone(SharePointQueryableShareable, \"getObjectSharingSettings\").postCore({\r\n            body: jsS({\r\n                useSimplifiedRoles: useSimplifiedRoles,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Unshares this object\r\n     */\r\n    SharePointQueryableShareable.prototype.unshareObject = function () {\r\n        return this.clone(SharePointQueryableShareable, \"unshareObject\").postCore();\r\n    };\r\n    /**\r\n     * Deletes a link by type\r\n     *\r\n     * @param kind Deletes a sharing link by the kind of link\r\n     */\r\n    SharePointQueryableShareable.prototype.deleteLinkByKind = function (kind) {\r\n        return this.clone(SharePointQueryableShareable, \"deleteLinkByKind\").postCore({\r\n            body: jsS({ linkKind: kind }),\r\n        });\r\n    };\r\n    /**\r\n     * Removes the specified link to the item.\r\n     *\r\n     * @param kind The kind of link to be deleted.\r\n     * @param shareId\r\n     */\r\n    SharePointQueryableShareable.prototype.unshareLink = function (kind, shareId) {\r\n        if (shareId === void 0) { shareId = \"00000000-0000-0000-0000-000000000000\"; }\r\n        return this.clone(SharePointQueryableShareable, \"unshareLink\").postCore({\r\n            body: jsS({ linkKind: kind, shareId: shareId }),\r\n        });\r\n    };\r\n    /**\r\n     * Calculates the roleValue string used in the sharing query\r\n     *\r\n     * @param role The Sharing Role\r\n     * @param group The Group type\r\n     */\r\n    SharePointQueryableShareable.prototype.getRoleValue = function (role, group) {\r\n        // we will give group precedence, because we had to make a choice\r\n        if (group !== undefined && group !== null) {\r\n            switch (group) {\r\n                case RoleType.Contributor:\r\n                    // remove need to reference Web here, which created a circular build issue\r\n                    var memberGroup = new SharePointQueryableInstance(\"_api/web\", \"associatedmembergroup\");\r\n                    return memberGroup.select(\"Id\").get().then(function (g) { return \"group: \" + g.Id; });\r\n                case RoleType.Reader:\r\n                case RoleType.Guest:\r\n                    // remove need to reference Web here, which created a circular build issue\r\n                    var visitorGroup = new SharePointQueryableInstance(\"_api/web\", \"associatedvisitorgroup\");\r\n                    return visitorGroup.select(\"Id\").get().then(function (g) { return \"group: \" + g.Id; });\r\n                default:\r\n                    throw Error(\"Could not determine role value for supplied value. Contributor, Reader, and Guest are supported\");\r\n            }\r\n        }\r\n        else {\r\n            var roleFilter = role === SharingRole.Edit ? RoleType.Contributor : RoleType.Reader;\r\n            // remove need to reference Web here, which created a circular build issue\r\n            var roleDefs = new SharePointQueryableCollection(\"_api/web\", \"roledefinitions\");\r\n            return roleDefs.select(\"Id\").top(1).filter(\"RoleTypeKind eq \" + roleFilter).get().then(function (def) {\r\n                if (def.length < 1) {\r\n                    throw Error(\"Could not locate associated role definition for supplied role. Edit and View are supported\");\r\n                }\r\n                return \"role: \" + def[0].Id;\r\n            });\r\n        }\r\n    };\r\n    SharePointQueryableShareable.prototype.getShareObjectWeb = function (candidate) {\r\n        return Promise.resolve(new SharePointQueryableInstance(extractWebUrl(candidate), \"/_api/SP.Web.ShareObject\"));\r\n    };\r\n    SharePointQueryableShareable.prototype.sendShareObjectRequest = function (options) {\r\n        return this.getShareObjectWeb(this.toUrl()).then(function (web) {\r\n            return web.expand(\"UsersWithAccessRequests\", \"GroupsSharedWith\").as(SharePointQueryableShareable).postCore({\r\n                body: jsS(options),\r\n            });\r\n        });\r\n    };\r\n    return SharePointQueryableShareable;\r\n}(SharePointQueryable));\r\nexport { SharePointQueryableShareable };\r\nvar SharePointQueryableShareableWeb = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SharePointQueryableShareableWeb, _super);\r\n    function SharePointQueryableShareableWeb() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Shares this web with the supplied users\r\n     * @param loginNames The resolved login names to share\r\n     * @param role The role to share this web\r\n     * @param emailData Optional email data\r\n     */\r\n    SharePointQueryableShareableWeb.prototype.shareWith = function (loginNames, role, emailData) {\r\n        var _this = this;\r\n        if (role === void 0) { role = SharingRole.View; }\r\n        var dependency = this.addBatchDependency();\r\n        // remove need to reference Web here, which created a circular build issue\r\n        var web = new SharePointQueryableInstance(extractWebUrl(this.toUrl()), \"/_api/web/url\");\r\n        return web.get().then(function (url) {\r\n            dependency();\r\n            return _this.shareObject(combine(url, \"/_layouts/15/aclinv.aspx?forSharing=1&mbypass=1\"), loginNames, role, emailData);\r\n        });\r\n    };\r\n    /**\r\n     * Provides direct access to the static web.ShareObject method\r\n     *\r\n     * @param url The url to share\r\n     * @param loginNames Resolved loginnames string[] of a single login name string\r\n     * @param roleValue Role value\r\n     * @param emailData Optional email data\r\n     * @param groupId Optional group id\r\n     * @param propagateAcl\r\n     * @param includeAnonymousLinkInEmail\r\n     * @param useSimplifiedRoles\r\n     */\r\n    SharePointQueryableShareableWeb.prototype.shareObject = function (url, loginNames, role, emailData, group, propagateAcl, includeAnonymousLinkInEmail, useSimplifiedRoles) {\r\n        if (propagateAcl === void 0) { propagateAcl = false; }\r\n        if (includeAnonymousLinkInEmail === void 0) { includeAnonymousLinkInEmail = false; }\r\n        if (useSimplifiedRoles === void 0) { useSimplifiedRoles = true; }\r\n        return this.clone(SharePointQueryableShareable, null).shareObject({\r\n            emailData: emailData,\r\n            group: group,\r\n            includeAnonymousLinkInEmail: includeAnonymousLinkInEmail,\r\n            loginNames: loginNames,\r\n            propagateAcl: propagateAcl,\r\n            role: role,\r\n            url: url,\r\n            useSimplifiedRoles: useSimplifiedRoles,\r\n        });\r\n    };\r\n    /**\r\n     * Supplies a method to pass any set of arguments to ShareObject\r\n     *\r\n     * @param options The set of options to send to ShareObject\r\n     */\r\n    SharePointQueryableShareableWeb.prototype.shareObjectRaw = function (options) {\r\n        return this.clone(SharePointQueryableShareable, null).shareObject(options, true);\r\n    };\r\n    /**\r\n     * Unshares the object\r\n     *\r\n     * @param url The url of the object to stop sharing\r\n     */\r\n    SharePointQueryableShareableWeb.prototype.unshareObject = function (url) {\r\n        return this.clone(SharePointQueryableShareable, null).unshareObjectWeb(url);\r\n    };\r\n    return SharePointQueryableShareableWeb;\r\n}(SharePointQueryableSecurable));\r\nexport { SharePointQueryableShareableWeb };\r\nvar SharePointQueryableShareableItem = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SharePointQueryableShareableItem, _super);\r\n    function SharePointQueryableShareableItem() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets a link suitable for sharing for this item\r\n     *\r\n     * @param kind The type of link to share\r\n     * @param expiration The optional expiration date\r\n     */\r\n    SharePointQueryableShareableItem.prototype.getShareLink = function (kind, expiration) {\r\n        if (kind === void 0) { kind = SharingLinkKind.OrganizationView; }\r\n        if (expiration === void 0) { expiration = null; }\r\n        return this.clone(SharePointQueryableShareable, null).getShareLink(kind, expiration);\r\n    };\r\n    /**\r\n     * Shares this item with one or more users\r\n     *\r\n     * @param loginNames string or string[] of resolved login names to which this item will be shared\r\n     * @param role The role (View | Edit) applied to the share\r\n     * @param emailData Optional, if inlucded an email will be sent. Note subject currently has no effect.\r\n     */\r\n    SharePointQueryableShareableItem.prototype.shareWith = function (loginNames, role, requireSignin, emailData) {\r\n        if (role === void 0) { role = SharingRole.View; }\r\n        if (requireSignin === void 0) { requireSignin = false; }\r\n        return this.clone(SharePointQueryableShareable, null).shareWith(loginNames, role, requireSignin, false, emailData);\r\n    };\r\n    /**\r\n     * Checks Permissions on the list of Users and returns back role the users have on the Item.\r\n     *\r\n     * @param recipients The array of Entities for which Permissions need to be checked.\r\n     */\r\n    SharePointQueryableShareableItem.prototype.checkSharingPermissions = function (recipients) {\r\n        return this.clone(SharePointQueryableShareable, null).checkPermissions(recipients);\r\n    };\r\n    /**\r\n     * Get Sharing Information.\r\n     *\r\n     * @param request The SharingInformationRequest Object.\r\n     * @param expands Expand more fields.\r\n     *\r\n     */\r\n    SharePointQueryableShareableItem.prototype.getSharingInformation = function (request, expands) {\r\n        if (request === void 0) { request = null; }\r\n        return this.clone(SharePointQueryableShareable, null).getSharingInformation(request, expands);\r\n    };\r\n    /**\r\n     * Gets the sharing settings of an item.\r\n     *\r\n     * @param useSimplifiedRoles Determines whether to use simplified roles.\r\n     */\r\n    SharePointQueryableShareableItem.prototype.getObjectSharingSettings = function (useSimplifiedRoles) {\r\n        if (useSimplifiedRoles === void 0) { useSimplifiedRoles = true; }\r\n        return this.clone(SharePointQueryableShareable, null).getObjectSharingSettings(useSimplifiedRoles);\r\n    };\r\n    /**\r\n     * Unshare this item\r\n     */\r\n    SharePointQueryableShareableItem.prototype.unshare = function () {\r\n        return this.clone(SharePointQueryableShareable, null).unshareObject();\r\n    };\r\n    /**\r\n     * Deletes a sharing link by kind\r\n     *\r\n     * @param kind Deletes a sharing link by the kind of link\r\n     */\r\n    SharePointQueryableShareableItem.prototype.deleteSharingLinkByKind = function (kind) {\r\n        return this.clone(SharePointQueryableShareable, null).deleteLinkByKind(kind);\r\n    };\r\n    /**\r\n     * Removes the specified link to the item.\r\n     *\r\n     * @param kind The kind of link to be deleted.\r\n     * @param shareId\r\n     */\r\n    SharePointQueryableShareableItem.prototype.unshareLink = function (kind, shareId) {\r\n        return this.clone(SharePointQueryableShareable, null).unshareLink(kind, shareId);\r\n    };\r\n    return SharePointQueryableShareableItem;\r\n}(SharePointQueryableSecurable));\r\nexport { SharePointQueryableShareableItem };\r\nvar FileFolderShared = /** @class */ (function (_super) {\r\n    tslib_1.__extends(FileFolderShared, _super);\r\n    function FileFolderShared() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets a link suitable for sharing\r\n     *\r\n     * @param kind The kind of link to get\r\n     * @param expiration Optional, an expiration for this link\r\n     */\r\n    FileFolderShared.prototype.getShareLink = function (kind, expiration) {\r\n        if (kind === void 0) { kind = SharingLinkKind.OrganizationView; }\r\n        if (expiration === void 0) { expiration = null; }\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.getShareLink(kind, expiration);\r\n        });\r\n    };\r\n    /**\r\n         * Checks Permissions on the list of Users and returns back role the users have on the Item.\r\n         *\r\n         * @param recipients The array of Entities for which Permissions need to be checked.\r\n         */\r\n    FileFolderShared.prototype.checkSharingPermissions = function (recipients) {\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.checkPermissions(recipients);\r\n        });\r\n    };\r\n    /**\r\n     * Get Sharing Information.\r\n     *\r\n     * @param request The SharingInformationRequest Object.\r\n     * @param expands Expand more fields.\r\n     *\r\n     */\r\n    FileFolderShared.prototype.getSharingInformation = function (request, expands) {\r\n        if (request === void 0) { request = null; }\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.getSharingInformation(request, expands);\r\n        });\r\n    };\r\n    /**\r\n     * Gets the sharing settings of an item.\r\n     *\r\n     * @param useSimplifiedRoles Determines whether to use simplified roles.\r\n     */\r\n    FileFolderShared.prototype.getObjectSharingSettings = function (useSimplifiedRoles) {\r\n        if (useSimplifiedRoles === void 0) { useSimplifiedRoles = true; }\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.getObjectSharingSettings(useSimplifiedRoles);\r\n        });\r\n    };\r\n    /**\r\n     * Unshare this item\r\n     */\r\n    FileFolderShared.prototype.unshare = function () {\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.unshareObject();\r\n        });\r\n    };\r\n    /**\r\n     * Deletes a sharing link by the kind of link\r\n     *\r\n     * @param kind The kind of link to be deleted.\r\n     */\r\n    FileFolderShared.prototype.deleteSharingLinkByKind = function (kind) {\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.deleteLinkByKind(kind);\r\n        });\r\n    };\r\n    /**\r\n     * Removes the specified link to the item.\r\n     *\r\n     * @param kind The kind of link to be deleted.\r\n     * @param shareId The share id to delete\r\n     */\r\n    FileFolderShared.prototype.unshareLink = function (kind, shareId) {\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.unshareLink(kind, shareId);\r\n        });\r\n    };\r\n    /**\r\n     * For files and folders we need to use the associated item end point\r\n     */\r\n    FileFolderShared.prototype.getShareable = function () {\r\n        var _this = this;\r\n        // sharing only works on the item end point, not the file one - so we create a folder instance with the item url internally\r\n        return this.clone(SharePointQueryableShareableFile, \"listItemAllFields\", false).select(\"odata.id\").get().then(function (d) {\r\n            var shareable = new SharePointQueryableShareable(odataUrlFrom(d));\r\n            // we need to handle batching\r\n            if (_this.hasBatch) {\r\n                shareable = shareable.inBatch(_this.batch);\r\n            }\r\n            return shareable;\r\n        });\r\n    };\r\n    return FileFolderShared;\r\n}(SharePointQueryableInstance));\r\nexport { FileFolderShared };\r\nvar SharePointQueryableShareableFile = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SharePointQueryableShareableFile, _super);\r\n    function SharePointQueryableShareableFile() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Shares this item with one or more users\r\n     *\r\n     * @param loginNames string or string[] of resolved login names to which this item will be shared\r\n     * @param role The role (View | Edit) applied to the share\r\n     * @param shareEverything Share everything in this folder, even items with unique permissions.\r\n     * @param requireSignin If true the user must signin to view link, otherwise anyone with the link can access the resource\r\n     * @param emailData Optional, if inlucded an email will be sent. Note subject currently has no effect.\r\n     */\r\n    SharePointQueryableShareableFile.prototype.shareWith = function (loginNames, role, requireSignin, emailData) {\r\n        if (role === void 0) { role = SharingRole.View; }\r\n        if (requireSignin === void 0) { requireSignin = false; }\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.shareWith(loginNames, role, requireSignin, false, emailData);\r\n        });\r\n    };\r\n    return SharePointQueryableShareableFile;\r\n}(FileFolderShared));\r\nexport { SharePointQueryableShareableFile };\r\nvar SharePointQueryableShareableFolder = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SharePointQueryableShareableFolder, _super);\r\n    function SharePointQueryableShareableFolder() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Shares this item with one or more users\r\n     *\r\n     * @param loginNames string or string[] of resolved login names to which this item will be shared\r\n     * @param role The role (View | Edit) applied to the share\r\n     * @param shareEverything Share everything in this folder, even items with unique permissions.\r\n     * @param requireSignin If true the user must signin to view link, otherwise anyone with the link can access the resource\r\n     * @param emailData Optional, if inlucded an email will be sent. Note subject currently has no effect.\r\n     */\r\n    SharePointQueryableShareableFolder.prototype.shareWith = function (loginNames, role, requireSignin, shareEverything, emailData) {\r\n        if (role === void 0) { role = SharingRole.View; }\r\n        if (requireSignin === void 0) { requireSignin = false; }\r\n        if (shareEverything === void 0) { shareEverything = false; }\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.shareWith(loginNames, role, requireSignin, shareEverything, emailData);\r\n        });\r\n    };\r\n    return SharePointQueryableShareableFolder;\r\n}(FileFolderShared));\r\nexport { SharePointQueryableShareableFolder };\r\n//# sourceMappingURL=sharepointqueryableshareable.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryable, SharePointQueryableInstance, SharePointQueryableCollection, defaultPath } from \"./sharepointqueryable\";\r\nimport { jsS } from \"@pnp/common\";\r\nvar LimitedWebPartManager = /** @class */ (function (_super) {\r\n    tslib_1.__extends(LimitedWebPartManager, _super);\r\n    function LimitedWebPartManager() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(LimitedWebPartManager.prototype, \"webparts\", {\r\n        /**\r\n         * Gets the set of web part definitions contained by this web part manager\r\n         *\r\n         */\r\n        get: function () {\r\n            return new WebPartDefinitions(this, \"webparts\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Exports a webpart definition\r\n     *\r\n     * @param id the GUID id of the definition to export\r\n     */\r\n    LimitedWebPartManager.prototype.export = function (id) {\r\n        return this.clone(LimitedWebPartManager, \"ExportWebPart\").postCore({\r\n            body: jsS({ webPartId: id }),\r\n        });\r\n    };\r\n    /**\r\n     * Imports a webpart\r\n     *\r\n     * @param xml webpart definition which must be valid XML in the .dwp or .webpart format\r\n     */\r\n    LimitedWebPartManager.prototype.import = function (xml) {\r\n        return this.clone(LimitedWebPartManager, \"ImportWebPart\").postCore({\r\n            body: jsS({ webPartXml: xml }),\r\n        });\r\n    };\r\n    return LimitedWebPartManager;\r\n}(SharePointQueryable));\r\nexport { LimitedWebPartManager };\r\nvar WebPartDefinitions = /** @class */ (function (_super) {\r\n    tslib_1.__extends(WebPartDefinitions, _super);\r\n    function WebPartDefinitions() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets a web part definition from the collection by id\r\n     *\r\n     * @param id The storage ID of the SPWebPartDefinition to retrieve\r\n     */\r\n    WebPartDefinitions.prototype.getById = function (id) {\r\n        return new WebPartDefinition(this, \"getbyid('\" + id + \"')\");\r\n    };\r\n    /**\r\n     * Gets a web part definition from the collection by storage id\r\n     *\r\n     * @param id The WebPart.ID of the SPWebPartDefinition to retrieve\r\n     */\r\n    WebPartDefinitions.prototype.getByControlId = function (id) {\r\n        return new WebPartDefinition(this, \"getByControlId('\" + id + \"')\");\r\n    };\r\n    return WebPartDefinitions;\r\n}(SharePointQueryableCollection));\r\nexport { WebPartDefinitions };\r\nvar WebPartDefinition = /** @class */ (function (_super) {\r\n    tslib_1.__extends(WebPartDefinition, _super);\r\n    function WebPartDefinition() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(WebPartDefinition.prototype, \"webpart\", {\r\n        /**\r\n         * Gets the webpart information associated with this definition\r\n         */\r\n        get: function () {\r\n            return new WebPart(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Saves changes to the Web Part made using other properties and methods on the SPWebPartDefinition object\r\n     */\r\n    WebPartDefinition.prototype.saveChanges = function () {\r\n        return this.clone(WebPartDefinition, \"SaveWebPartChanges\").postCore();\r\n    };\r\n    /**\r\n     * Moves the Web Part to a different location on a Web Part Page\r\n     *\r\n     * @param zoneId The ID of the Web Part Zone to which to move the Web Part\r\n     * @param zoneIndex A Web Part zone index that specifies the position at which the Web Part is to be moved within the destination Web Part zone\r\n     */\r\n    WebPartDefinition.prototype.moveTo = function (zoneId, zoneIndex) {\r\n        return this.clone(WebPartDefinition, \"MoveWebPartTo(zoneID='\" + zoneId + \"', zoneIndex=\" + zoneIndex + \")\").postCore();\r\n    };\r\n    /**\r\n     * Closes the Web Part. If the Web Part is already closed, this method does nothing\r\n     */\r\n    WebPartDefinition.prototype.close = function () {\r\n        return this.clone(WebPartDefinition, \"CloseWebPart\").postCore();\r\n    };\r\n    /**\r\n     * Opens the Web Part. If the Web Part is already closed, this method does nothing\r\n     */\r\n    WebPartDefinition.prototype.open = function () {\r\n        return this.clone(WebPartDefinition, \"OpenWebPart\").postCore();\r\n    };\r\n    /**\r\n     * Removes a webpart from a page, all settings will be lost\r\n     */\r\n    WebPartDefinition.prototype.delete = function () {\r\n        return this.clone(WebPartDefinition, \"DeleteWebPart\").postCore();\r\n    };\r\n    return WebPartDefinition;\r\n}(SharePointQueryableInstance));\r\nexport { WebPartDefinition };\r\nvar WebPart = /** @class */ (function (_super) {\r\n    tslib_1.__extends(WebPart, _super);\r\n    function WebPart() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    WebPart = tslib_1.__decorate([\r\n        defaultPath(\"webpart\")\r\n    ], WebPart);\r\n    return WebPart;\r\n}(SharePointQueryableInstance));\r\nexport { WebPart };\r\n//# sourceMappingURL=webparts.js.map","import * as tslib_1 from \"tslib\";\r\nimport { extend, jsS } from \"@pnp/common\";\r\nimport { SharePointQueryable, SharePointQueryableCollection, SharePointQueryableInstance, defaultPath } from \"./sharepointqueryable\";\r\nimport { SharePointQueryableShareableFolder } from \"./sharepointqueryableshareable\";\r\nimport { Files } from \"./files\";\r\nimport { odataUrlFrom } from \"./odata\";\r\nimport { Item } from \"./items\";\r\nimport { SPHttpClient } from \"./net/sphttpclient\";\r\n/**\r\n * Describes a collection of Folder objects\r\n *\r\n */\r\nvar Folders = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Folders, _super);\r\n    function Folders() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Folders_1 = Folders;\r\n    /**\r\n     * Gets a folder by folder name\r\n     *\r\n     */\r\n    Folders.prototype.getByName = function (name) {\r\n        var f = new Folder(this);\r\n        f.concat(\"('\" + name + \"')\");\r\n        return f;\r\n    };\r\n    /**\r\n     * Adds a new folder to the current folder (relative) or any folder (absolute)\r\n     *\r\n     * @param url The relative or absolute url where the new folder will be created. Urls starting with a forward slash are absolute.\r\n     * @returns The new Folder and the raw response.\r\n     */\r\n    Folders.prototype.add = function (url) {\r\n        var _this = this;\r\n        return this.clone(Folders_1, \"add('\" + url + \"')\").postCore().then(function (response) {\r\n            return {\r\n                data: response,\r\n                folder: _this.getByName(url),\r\n            };\r\n        });\r\n    };\r\n    var Folders_1;\r\n    Folders = Folders_1 = tslib_1.__decorate([\r\n        defaultPath(\"folders\")\r\n    ], Folders);\r\n    return Folders;\r\n}(SharePointQueryableCollection));\r\nexport { Folders };\r\n/**\r\n * Describes a single Folder instance\r\n *\r\n */\r\nvar Folder = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Folder, _super);\r\n    function Folder() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.update = _this._update(\"SP.Folder\", function (data) { return ({ data: data, folder: _this }); });\r\n        return _this;\r\n    }\r\n    Object.defineProperty(Folder.prototype, \"contentTypeOrder\", {\r\n        /**\r\n         * Specifies the sequence in which content types are displayed.\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableCollection(this, \"contentTypeOrder\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Folder.prototype, \"files\", {\r\n        /**\r\n         * Gets this folder's files\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Files(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Folder.prototype, \"folders\", {\r\n        /**\r\n         * Gets this folder's sub folders\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Folders(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Folder.prototype, \"listItemAllFields\", {\r\n        /**\r\n         * Gets this folder's list item field values\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableInstance(this, \"listItemAllFields\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Folder.prototype, \"parentFolder\", {\r\n        /**\r\n         * Gets the parent folder, if available\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Folder(this, \"parentFolder\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Folder.prototype, \"properties\", {\r\n        /**\r\n         * Gets this folder's properties\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableInstance(this, \"properties\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Folder.prototype, \"serverRelativeUrl\", {\r\n        /**\r\n         * Gets this folder's server relative url\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryable(this, \"serverRelativeUrl\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Folder.prototype, \"uniqueContentTypeOrder\", {\r\n        /**\r\n         * Gets a value that specifies the content type order.\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableCollection(this, \"uniqueContentTypeOrder\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n    * Delete this folder\r\n    *\r\n    * @param eTag Value used in the IF-Match header, by default \"*\"\r\n    */\r\n    Folder.prototype.delete = function (eTag) {\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        return this.clone(Folder, null).postCore({\r\n            headers: {\r\n                \"IF-Match\": eTag,\r\n                \"X-HTTP-Method\": \"DELETE\",\r\n            },\r\n        });\r\n    };\r\n    /**\r\n     * Moves the folder to the Recycle Bin and returns the identifier of the new Recycle Bin item.\r\n     */\r\n    Folder.prototype.recycle = function () {\r\n        return this.clone(Folder, \"recycle\").postCore();\r\n    };\r\n    /**\r\n     * Gets the associated list item for this folder, loading the default properties\r\n     */\r\n    Folder.prototype.getItem = function () {\r\n        var selects = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            selects[_i] = arguments[_i];\r\n        }\r\n        var q = this.listItemAllFields;\r\n        return q.select.apply(q, selects).get().then(function (d) {\r\n            return extend(new Item(odataUrlFrom(d)), d);\r\n        });\r\n    };\r\n    /**\r\n     * Moves a folder to destination path\r\n     *\r\n     * @param destUrl Absolute or relative URL of the destination path\r\n     */\r\n    Folder.prototype.moveTo = function (destUrl) {\r\n        var _this = this;\r\n        return this.select(\"ServerRelativeUrl\").get().then(function (_a) {\r\n            var srcUrl = _a.ServerRelativeUrl;\r\n            var client = new SPHttpClient();\r\n            var webBaseUrl = _this.toUrl().split(\"/_api\")[0];\r\n            var hostUrl = webBaseUrl.replace(\"://\", \"___\").split(\"/\")[0].replace(\"___\", \"://\");\r\n            var methodUrl = webBaseUrl + \"/_api/SP.MoveCopyUtil.MoveFolder()\";\r\n            return client.post(methodUrl, {\r\n                body: jsS({\r\n                    destUrl: destUrl.indexOf(\"http\") === 0 ? destUrl : \"\" + hostUrl + destUrl,\r\n                    srcUrl: \"\" + hostUrl + srcUrl,\r\n                }),\r\n            }).then(function (r) { return r.json(); });\r\n        });\r\n    };\r\n    return Folder;\r\n}(SharePointQueryableShareableFolder));\r\nexport { Folder };\r\n//# sourceMappingURL=folders.js.map","import * as tslib_1 from \"tslib\";\r\nimport { jsS } from \"@pnp/common\";\r\nimport { SharePointQueryableCollection, SharePointQueryableInstance, defaultPath } from \"./sharepointqueryable\";\r\nimport { metadata } from \"./utils/metadata\";\r\n/**\r\n * Describes a collection of content types\r\n *\r\n */\r\nvar ContentTypes = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ContentTypes, _super);\r\n    function ContentTypes() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    ContentTypes_1 = ContentTypes;\r\n    /**\r\n     * Adds an existing contenttype to a content type collection\r\n     *\r\n     * @param contentTypeId in the following format, for example: 0x010102\r\n     */\r\n    ContentTypes.prototype.addAvailableContentType = function (contentTypeId) {\r\n        var _this = this;\r\n        var postBody = jsS({\r\n            \"contentTypeId\": contentTypeId,\r\n        });\r\n        return this.clone(ContentTypes_1, \"addAvailableContentType\").postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                contentType: _this.getById(data.id),\r\n                data: data,\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Gets a ContentType by content type id\r\n     */\r\n    ContentTypes.prototype.getById = function (id) {\r\n        var ct = new ContentType(this);\r\n        ct.concat(\"('\" + id + \"')\");\r\n        return ct;\r\n    };\r\n    /**\r\n     * Adds a new content type to the collection\r\n     *\r\n     * @param id The desired content type id for the new content type (also determines the parent content type)\r\n     * @param name The name of the content type\r\n     * @param description The description of the content type\r\n     * @param group The group in which to add the content type\r\n     * @param additionalSettings Any additional settings to provide when creating the content type\r\n     *\r\n     */\r\n    ContentTypes.prototype.add = function (id, name, description, group, additionalSettings) {\r\n        var _this = this;\r\n        if (description === void 0) { description = \"\"; }\r\n        if (group === void 0) { group = \"Custom Content Types\"; }\r\n        if (additionalSettings === void 0) { additionalSettings = {}; }\r\n        var postBody = jsS(Object.assign(metadata(\"SP.ContentType\"), {\r\n            \"Description\": description,\r\n            \"Group\": group,\r\n            \"Id\": { \"StringValue\": id },\r\n            \"Name\": name,\r\n        }, additionalSettings));\r\n        return this.postCore({ body: postBody }).then(function (data) {\r\n            return { contentType: _this.getById(data.id), data: data };\r\n        });\r\n    };\r\n    var ContentTypes_1;\r\n    ContentTypes = ContentTypes_1 = tslib_1.__decorate([\r\n        defaultPath(\"contenttypes\")\r\n    ], ContentTypes);\r\n    return ContentTypes;\r\n}(SharePointQueryableCollection));\r\nexport { ContentTypes };\r\n/**\r\n * Describes a single ContentType instance\r\n *\r\n */\r\nvar ContentType = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ContentType, _super);\r\n    function ContentType() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * Delete this content type\r\n         */\r\n        _this.delete = _this._delete;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(ContentType.prototype, \"fieldLinks\", {\r\n        /**\r\n         * Gets the column (also known as field) references in the content type.\r\n        */\r\n        get: function () {\r\n            return new FieldLinks(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ContentType.prototype, \"fields\", {\r\n        /**\r\n         * Gets a value that specifies the collection of fields for the content type.\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableCollection(this, \"fields\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ContentType.prototype, \"parent\", {\r\n        /**\r\n         * Gets the parent content type of the content type.\r\n         */\r\n        get: function () {\r\n            return new ContentType(this, \"parent\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ContentType.prototype, \"workflowAssociations\", {\r\n        /**\r\n         * Gets a value that specifies the collection of workflow associations for the content type.\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableCollection(this, \"workflowAssociations\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return ContentType;\r\n}(SharePointQueryableInstance));\r\nexport { ContentType };\r\n/**\r\n * Represents a collection of field link instances\r\n */\r\nvar FieldLinks = /** @class */ (function (_super) {\r\n    tslib_1.__extends(FieldLinks, _super);\r\n    function FieldLinks() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets a FieldLink by GUID id\r\n     *\r\n     * @param id The GUID id of the field link\r\n     */\r\n    FieldLinks.prototype.getById = function (id) {\r\n        var fl = new FieldLink(this);\r\n        fl.concat(\"(guid'\" + id + \"')\");\r\n        return fl;\r\n    };\r\n    FieldLinks = tslib_1.__decorate([\r\n        defaultPath(\"fieldlinks\")\r\n    ], FieldLinks);\r\n    return FieldLinks;\r\n}(SharePointQueryableCollection));\r\nexport { FieldLinks };\r\n/**\r\n * Represents a field link instance\r\n */\r\nvar FieldLink = /** @class */ (function (_super) {\r\n    tslib_1.__extends(FieldLink, _super);\r\n    function FieldLink() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    return FieldLink;\r\n}(SharePointQueryableInstance));\r\nexport { FieldLink };\r\n//# sourceMappingURL=contenttypes.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryableInstance, SharePointQueryableCollection, defaultPath } from \"./sharepointqueryable\";\r\nimport { TextParser, BlobParser, JSONParser, BufferParser } from \"@pnp/odata\";\r\n/**\r\n * Describes a collection of Item objects\r\n *\r\n */\r\nvar AttachmentFiles = /** @class */ (function (_super) {\r\n    tslib_1.__extends(AttachmentFiles, _super);\r\n    function AttachmentFiles() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    AttachmentFiles_1 = AttachmentFiles;\r\n    /**\r\n     * Gets a Attachment File by filename\r\n     *\r\n     * @param name The name of the file, including extension.\r\n     */\r\n    AttachmentFiles.prototype.getByName = function (name) {\r\n        var f = new AttachmentFile(this);\r\n        f.concat(\"('\" + name + \"')\");\r\n        return f;\r\n    };\r\n    /**\r\n     * Adds a new attachment to the collection. Not supported for batching.\r\n     *\r\n     * @param name The name of the file, including extension.\r\n     * @param content The Base64 file content.\r\n     */\r\n    AttachmentFiles.prototype.add = function (name, content) {\r\n        var _this = this;\r\n        return this.clone(AttachmentFiles_1, \"add(FileName='\" + name + \"')\", false).postCore({\r\n            body: content,\r\n        }).then(function (response) {\r\n            return {\r\n                data: response,\r\n                file: _this.getByName(name),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Adds multiple new attachment to the collection. Not supported for batching.\r\n     *\r\n     * @param files The collection of files to add\r\n     */\r\n    AttachmentFiles.prototype.addMultiple = function (files) {\r\n        var _this = this;\r\n        // add the files in series so we don't get update conflicts\r\n        return files.reduce(function (chain, file) { return chain.then(function () { return _this.clone(AttachmentFiles_1, \"add(FileName='\" + file.name + \"')\", false).postCore({\r\n            body: file.content,\r\n        }); }); }, Promise.resolve());\r\n    };\r\n    /**\r\n     * Delete multiple attachments from the collection. Not supported for batching.\r\n     *\r\n     * @param files The collection of files to delete\r\n     */\r\n    AttachmentFiles.prototype.deleteMultiple = function () {\r\n        var _this = this;\r\n        var files = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            files[_i] = arguments[_i];\r\n        }\r\n        return files.reduce(function (chain, file) { return chain.then(function () { return _this.getByName(file).delete(); }); }, Promise.resolve());\r\n    };\r\n    /**\r\n     * Delete multiple attachments from the collection and send to recycle bin. Not supported for batching.\r\n     *\r\n     * @param files The collection of files to be deleted and sent to recycle bin\r\n     */\r\n    AttachmentFiles.prototype.recycleMultiple = function () {\r\n        var _this = this;\r\n        var files = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            files[_i] = arguments[_i];\r\n        }\r\n        return files.reduce(function (chain, file) { return chain.then(function () { return _this.getByName(file).recycle(); }); }, Promise.resolve());\r\n    };\r\n    var AttachmentFiles_1;\r\n    AttachmentFiles = AttachmentFiles_1 = tslib_1.__decorate([\r\n        defaultPath(\"AttachmentFiles\")\r\n    ], AttachmentFiles);\r\n    return AttachmentFiles;\r\n}(SharePointQueryableCollection));\r\nexport { AttachmentFiles };\r\n/**\r\n * Describes a single attachment file instance\r\n *\r\n */\r\nvar AttachmentFile = /** @class */ (function (_super) {\r\n    tslib_1.__extends(AttachmentFile, _super);\r\n    function AttachmentFile() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.delete = _this._deleteWithETag;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Gets the contents of the file as text\r\n     *\r\n     */\r\n    AttachmentFile.prototype.getText = function () {\r\n        return this.getParsed(new TextParser());\r\n    };\r\n    /**\r\n     * Gets the contents of the file as a blob, does not work in Node.js\r\n     *\r\n     */\r\n    AttachmentFile.prototype.getBlob = function () {\r\n        return this.getParsed(new BlobParser());\r\n    };\r\n    /**\r\n     * Gets the contents of a file as an ArrayBuffer, works in Node.js\r\n     */\r\n    AttachmentFile.prototype.getBuffer = function () {\r\n        return this.getParsed(new BufferParser());\r\n    };\r\n    /**\r\n     * Gets the contents of a file as an ArrayBuffer, works in Node.js\r\n     */\r\n    AttachmentFile.prototype.getJSON = function () {\r\n        return this.getParsed(new JSONParser());\r\n    };\r\n    /**\r\n     * Sets the content of a file. Not supported for batching\r\n     *\r\n     * @param content The value to set for the file contents\r\n     */\r\n    AttachmentFile.prototype.setContent = function (content) {\r\n        var _this = this;\r\n        return this.clone(AttachmentFile, \"$value\", false).postCore({\r\n            body: content,\r\n            headers: {\r\n                \"X-HTTP-Method\": \"PUT\",\r\n            },\r\n        }).then(function (_) { return new AttachmentFile(_this); });\r\n    };\r\n    /**\r\n     * Delete this attachment file and send it to recycle bin\r\n     *\r\n     * @param eTag Value used in the IF-Match header, by default \"*\"\r\n     */\r\n    AttachmentFile.prototype.recycle = function (eTag) {\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        return this.clone(AttachmentFile, \"recycleObject\").postCore({\r\n            headers: {\r\n                \"IF-Match\": eTag,\r\n                \"X-HTTP-Method\": \"DELETE\",\r\n            },\r\n        });\r\n    };\r\n    // /**\r\n    //  * Delete this attachment file\r\n    //  *\r\n    //  * @param eTag Value used in the IF-Match header, by default \"*\"\r\n    //  */\r\n    // public delete(eTag = \"*\"): Promise<void> {\r\n    //     return this.postCore({\r\n    //         headers: {\r\n    //             \"IF-Match\": eTag,\r\n    //             \"X-HTTP-Method\": \"DELETE\",\r\n    //         },\r\n    //     });\r\n    // }\r\n    AttachmentFile.prototype.getParsed = function (parser) {\r\n        return this.clone(AttachmentFile, \"$value\", false).get(parser);\r\n    };\r\n    return AttachmentFile;\r\n}(SharePointQueryableInstance));\r\nexport { AttachmentFile };\r\n//# sourceMappingURL=attachmentfiles.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryable, SharePointQueryableCollection, SharePointQueryableInstance, defaultPath } from \"./sharepointqueryable\";\r\nimport { jsS } from \"@pnp/common\";\r\nimport { metadata } from \"./utils/metadata\";\r\n/**\r\n * Describes the views available in the current context\r\n *\r\n */\r\nvar Views = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Views, _super);\r\n    function Views() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Views_1 = Views;\r\n    /**\r\n     * Gets a view by guid id\r\n     *\r\n     * @param id The GUID id of the view\r\n     */\r\n    Views.prototype.getById = function (id) {\r\n        var v = new View(this);\r\n        v.concat(\"('\" + id + \"')\");\r\n        return v;\r\n    };\r\n    /**\r\n     * Gets a view by title (case-sensitive)\r\n     *\r\n     * @param title The case-sensitive title of the view\r\n     */\r\n    Views.prototype.getByTitle = function (title) {\r\n        return new View(this, \"getByTitle('\" + title + \"')\");\r\n    };\r\n    /**\r\n     * Adds a new view to the collection\r\n     *\r\n     * @param title The new views's title\r\n     * @param personalView True if this is a personal view, otherwise false, default = false\r\n     * @param additionalSettings Will be passed as part of the view creation body\r\n     */\r\n    Views.prototype.add = function (title, personalView, additionalSettings) {\r\n        var _this = this;\r\n        if (personalView === void 0) { personalView = false; }\r\n        if (additionalSettings === void 0) { additionalSettings = {}; }\r\n        var postBody = jsS(Object.assign(metadata(\"SP.View\"), {\r\n            \"PersonalView\": personalView,\r\n            \"Title\": title,\r\n        }, additionalSettings));\r\n        return this.clone(Views_1, null).postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                view: _this.getById(data.Id),\r\n            };\r\n        });\r\n    };\r\n    var Views_1;\r\n    Views = Views_1 = tslib_1.__decorate([\r\n        defaultPath(\"views\")\r\n    ], Views);\r\n    return Views;\r\n}(SharePointQueryableCollection));\r\nexport { Views };\r\n/**\r\n * Describes a single View instance\r\n *\r\n */\r\nvar View = /** @class */ (function (_super) {\r\n    tslib_1.__extends(View, _super);\r\n    function View() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * Updates this view intance with the supplied properties\r\n         *\r\n         * @param properties A plain object hash of values to update for the view\r\n         */\r\n        _this.update = _this._update(\"SP.View\", function (data) { return ({ data: data, view: _this }); });\r\n        /**\r\n         * Delete this view\r\n         *\r\n         */\r\n        _this.delete = _this._delete;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(View.prototype, \"fields\", {\r\n        get: function () {\r\n            return new ViewFields(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Returns the list view as HTML.\r\n     *\r\n     */\r\n    View.prototype.renderAsHtml = function () {\r\n        return this.clone(SharePointQueryable, \"renderashtml\").get();\r\n    };\r\n    /**\r\n     * Sets the view schema\r\n     *\r\n     * @param viewXml The view XML to set\r\n     */\r\n    View.prototype.setViewXml = function (viewXml) {\r\n        return this.clone(View, \"SetViewXml\").postCore({\r\n            body: jsS({\r\n                viewXml: viewXml,\r\n            }),\r\n        });\r\n    };\r\n    return View;\r\n}(SharePointQueryableInstance));\r\nexport { View };\r\nvar ViewFields = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ViewFields, _super);\r\n    function ViewFields() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    ViewFields_1 = ViewFields;\r\n    /**\r\n     * Gets a value that specifies the XML schema that represents the collection.\r\n     */\r\n    ViewFields.prototype.getSchemaXml = function () {\r\n        return this.clone(SharePointQueryable, \"schemaxml\").get();\r\n    };\r\n    /**\r\n     * Adds the field with the specified field internal name or display name to the collection.\r\n     *\r\n     * @param fieldTitleOrInternalName The case-sensitive internal name or display name of the field to add.\r\n     */\r\n    ViewFields.prototype.add = function (fieldTitleOrInternalName) {\r\n        return this.clone(ViewFields_1, \"addviewfield('\" + fieldTitleOrInternalName + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Moves the field with the specified field internal name to the specified position in the collection.\r\n     *\r\n     * @param fieldInternalName The case-sensitive internal name of the field to move.\r\n     * @param index The zero-based index of the new position for the field.\r\n     */\r\n    ViewFields.prototype.move = function (fieldInternalName, index) {\r\n        return this.clone(ViewFields_1, \"moveviewfieldto\").postCore({\r\n            body: jsS({ \"field\": fieldInternalName, \"index\": index }),\r\n        });\r\n    };\r\n    /**\r\n     * Removes all the fields from the collection.\r\n     */\r\n    ViewFields.prototype.removeAll = function () {\r\n        return this.clone(ViewFields_1, \"removeallviewfields\").postCore();\r\n    };\r\n    /**\r\n     * Removes the field with the specified field internal name from the collection.\r\n     *\r\n     * @param fieldInternalName The case-sensitive internal name of the field to remove from the view.\r\n     */\r\n    ViewFields.prototype.remove = function (fieldInternalName) {\r\n        return this.clone(ViewFields_1, \"removeviewfield('\" + fieldInternalName + \"')\").postCore();\r\n    };\r\n    var ViewFields_1;\r\n    ViewFields = ViewFields_1 = tslib_1.__decorate([\r\n        defaultPath(\"viewfields\")\r\n    ], ViewFields);\r\n    return ViewFields;\r\n}(SharePointQueryableCollection));\r\nexport { ViewFields };\r\n//# sourceMappingURL=views.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryableCollection, SharePointQueryableInstance, defaultPath } from \"./sharepointqueryable\";\r\nimport { extend, jsS } from \"@pnp/common\";\r\nimport { DateTimeFieldFormatType, DateTimeFieldFriendlyFormatType, FieldTypes, CalendarType, UrlFieldFormatType, ChoiceFieldFormatType, } from \"./types\";\r\nimport { metadata } from \"./utils/metadata\";\r\n/**\r\n * Describes a collection of Field objects\r\n *\r\n */\r\nvar Fields = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Fields, _super);\r\n    function Fields() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Fields_1 = Fields;\r\n    /**\r\n     * Gets a field from the collection by id\r\n     *\r\n     * @param id The Id of the list\r\n     */\r\n    Fields.prototype.getById = function (id) {\r\n        var f = new Field(this);\r\n        f.concat(\"('\" + id + \"')\");\r\n        return f;\r\n    };\r\n    /**\r\n     * Gets a field from the collection by title\r\n     *\r\n     * @param title The case-sensitive title of the field\r\n     */\r\n    Fields.prototype.getByTitle = function (title) {\r\n        return new Field(this, \"getByTitle('\" + title + \"')\");\r\n    };\r\n    /**\r\n     * Gets a field from the collection by using internal name or title\r\n     *\r\n     * @param name The case-sensitive internal name or title of the field\r\n     */\r\n    Fields.prototype.getByInternalNameOrTitle = function (name) {\r\n        return new Field(this, \"getByInternalNameOrTitle('\" + name + \"')\");\r\n    };\r\n    /**\r\n     * Creates a field based on the specified schema\r\n     */\r\n    Fields.prototype.createFieldAsXml = function (xml) {\r\n        var _this = this;\r\n        var info;\r\n        if (typeof xml === \"string\") {\r\n            info = { SchemaXml: xml };\r\n        }\r\n        else {\r\n            info = xml;\r\n        }\r\n        var postBody = jsS({\r\n            \"parameters\": extend(metadata(\"SP.XmlSchemaFieldCreationInformation\"), info),\r\n        });\r\n        return this.clone(Fields_1, \"createfieldasxml\").postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                field: _this.getById(data.Id),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Adds a new field to the collection\r\n     *\r\n     * @param title The new field's title\r\n     * @param fieldType The new field's type (ex: SP.FieldText)\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.add = function (title, fieldType, properties) {\r\n        var _this = this;\r\n        var postBody = jsS(Object.assign(metadata(fieldType), {\r\n            \"Title\": title,\r\n        }, properties));\r\n        return this.clone(Fields_1, null).postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                field: _this.getById(data.Id),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldText to the collection\r\n     *\r\n     * @param title The field title\r\n     * @param maxLength The maximum number of characters allowed in the value of the field.\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addText = function (title, maxLength, properties) {\r\n        if (maxLength === void 0) { maxLength = 255; }\r\n        var props = {\r\n            FieldTypeKind: 2,\r\n            MaxLength: maxLength,\r\n        };\r\n        return this.add(title, \"SP.FieldText\", extend(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldCalculated to the collection\r\n     *\r\n     * @param title The field title.\r\n     * @param formula The formula for the field.\r\n     * @param dateFormat The date and time format that is displayed in the field.\r\n     * @param outputType Specifies the output format for the field. Represents a FieldType value.\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addCalculated = function (title, formula, dateFormat, outputType, properties) {\r\n        if (outputType === void 0) { outputType = FieldTypes.Text; }\r\n        var props = {\r\n            DateFormat: dateFormat,\r\n            FieldTypeKind: 17,\r\n            Formula: formula,\r\n            OutputType: outputType,\r\n        };\r\n        return this.add(title, \"SP.FieldCalculated\", extend(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldDateTime to the collection\r\n     *\r\n     * @param title The field title\r\n     * @param displayFormat The format of the date and time that is displayed in the field.\r\n     * @param calendarType Specifies the calendar type of the field.\r\n     * @param friendlyDisplayFormat The type of friendly display format that is used in the field.\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addDateTime = function (title, displayFormat, calendarType, friendlyDisplayFormat, properties) {\r\n        if (displayFormat === void 0) { displayFormat = DateTimeFieldFormatType.DateOnly; }\r\n        if (calendarType === void 0) { calendarType = CalendarType.Gregorian; }\r\n        if (friendlyDisplayFormat === void 0) { friendlyDisplayFormat = DateTimeFieldFriendlyFormatType.Unspecified; }\r\n        var props = {\r\n            DateTimeCalendarType: calendarType,\r\n            DisplayFormat: displayFormat,\r\n            FieldTypeKind: 4,\r\n            FriendlyDisplayFormat: friendlyDisplayFormat,\r\n        };\r\n        return this.add(title, \"SP.FieldDateTime\", extend(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldNumber to the collection\r\n     *\r\n     * @param title The field title\r\n     * @param minValue The field's minimum value\r\n     * @param maxValue The field's maximum value\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addNumber = function (title, minValue, maxValue, properties) {\r\n        var props = { FieldTypeKind: 9 };\r\n        if (minValue !== undefined) {\r\n            props = extend({ MinimumValue: minValue }, props);\r\n        }\r\n        if (maxValue !== undefined) {\r\n            props = extend({ MaximumValue: maxValue }, props);\r\n        }\r\n        return this.add(title, \"SP.FieldNumber\", extend(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldCurrency to the collection\r\n     *\r\n     * @param title The field title\r\n     * @param minValue The field's minimum value\r\n     * @param maxValue The field's maximum value\r\n     * @param currencyLocalId Specifies the language code identifier (LCID) used to format the value of the field\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addCurrency = function (title, minValue, maxValue, currencyLocalId, properties) {\r\n        if (currencyLocalId === void 0) { currencyLocalId = 1033; }\r\n        var props = {\r\n            CurrencyLocaleId: currencyLocalId,\r\n            FieldTypeKind: 10,\r\n        };\r\n        if (minValue !== undefined) {\r\n            props = extend({ MinimumValue: minValue }, props);\r\n        }\r\n        if (maxValue !== undefined) {\r\n            props = extend({ MaximumValue: maxValue }, props);\r\n        }\r\n        return this.add(title, \"SP.FieldCurrency\", extend(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldMultiLineText to the collection\r\n     *\r\n     * @param title The field title\r\n     * @param numberOfLines Specifies the number of lines of text to display for the field.\r\n     * @param richText Specifies whether the field supports rich formatting.\r\n     * @param restrictedMode Specifies whether the field supports a subset of rich formatting.\r\n     * @param appendOnly Specifies whether all changes to the value of the field are displayed in list forms.\r\n     * @param allowHyperlink Specifies whether a hyperlink is allowed as a value of the field.\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     *\r\n     */\r\n    Fields.prototype.addMultilineText = function (title, numberOfLines, richText, restrictedMode, appendOnly, allowHyperlink, properties) {\r\n        if (numberOfLines === void 0) { numberOfLines = 6; }\r\n        if (richText === void 0) { richText = true; }\r\n        if (restrictedMode === void 0) { restrictedMode = false; }\r\n        if (appendOnly === void 0) { appendOnly = false; }\r\n        if (allowHyperlink === void 0) { allowHyperlink = true; }\r\n        var props = {\r\n            AllowHyperlink: allowHyperlink,\r\n            AppendOnly: appendOnly,\r\n            FieldTypeKind: 3,\r\n            NumberOfLines: numberOfLines,\r\n            RestrictedMode: restrictedMode,\r\n            RichText: richText,\r\n        };\r\n        return this.add(title, \"SP.FieldMultiLineText\", extend(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldUrl to the collection\r\n     *\r\n     * @param title The field title\r\n     */\r\n    Fields.prototype.addUrl = function (title, displayFormat, properties) {\r\n        if (displayFormat === void 0) { displayFormat = UrlFieldFormatType.Hyperlink; }\r\n        var props = {\r\n            DisplayFormat: displayFormat,\r\n            FieldTypeKind: 11,\r\n        };\r\n        return this.add(title, \"SP.FieldUrl\", extend(props, properties));\r\n    };\r\n    /** Adds a user field to the colleciton\r\n    *\r\n    * @param title The new field's title\r\n    * @param selectionMode The selection mode of the field\r\n    * @param selectionGroup Value that specifies the identifier of the SharePoint group whose members can be selected as values of the field\r\n    * @param properties\r\n    */\r\n    Fields.prototype.addUser = function (title, selectionMode, properties) {\r\n        var props = {\r\n            FieldTypeKind: 20,\r\n            SelectionMode: selectionMode,\r\n        };\r\n        return this.add(title, \"SP.FieldUser\", extend(props, properties));\r\n    };\r\n    /**\r\n     * Adds a SP.FieldLookup to the collection\r\n     *\r\n     * @param title The new field's title\r\n     * @param lookupListId The guid id of the list where the source of the lookup is found\r\n     * @param lookupFieldName The internal name of the field in the source list\r\n     * @param properties Set of additional properties to set on the new field\r\n     */\r\n    Fields.prototype.addLookup = function (title, lookupListId, lookupFieldName, properties) {\r\n        var _this = this;\r\n        var props = extend({\r\n            FieldTypeKind: 7,\r\n            LookupFieldName: lookupFieldName,\r\n            LookupListId: lookupListId,\r\n            Title: title,\r\n        }, properties);\r\n        var postBody = jsS({\r\n            \"parameters\": extend(metadata(\"SP.FieldCreationInformation\"), props),\r\n        });\r\n        return this.clone(Fields_1, \"addfield\").postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                field: _this.getById(data.Id),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldChoice to the collection\r\n     *\r\n     * @param title The field title.\r\n     * @param choices The choices for the field.\r\n     * @param format The display format of the available options for the field.\r\n     * @param fillIn Specifies whether the field allows fill-in values.\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addChoice = function (title, choices, format, fillIn, properties) {\r\n        if (format === void 0) { format = ChoiceFieldFormatType.Dropdown; }\r\n        var props = {\r\n            Choices: {\r\n                results: choices,\r\n            },\r\n            EditFormat: format,\r\n            FieldTypeKind: 6,\r\n            FillInChoice: fillIn,\r\n        };\r\n        return this.add(title, \"SP.FieldChoice\", extend(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldMultiChoice to the collection\r\n     *\r\n     * @param title The field title.\r\n     * @param choices The choices for the field.\r\n     * @param fillIn Specifies whether the field allows fill-in values.\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addMultiChoice = function (title, choices, fillIn, properties) {\r\n        var props = {\r\n            Choices: {\r\n                results: choices,\r\n            },\r\n            FieldTypeKind: 15,\r\n            FillInChoice: fillIn,\r\n        };\r\n        return this.add(title, \"SP.FieldMultiChoice\", extend(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldBoolean to the collection\r\n     *\r\n     * @param title The field title.\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addBoolean = function (title, properties) {\r\n        var props = {\r\n            FieldTypeKind: 8,\r\n        };\r\n        return this.add(title, \"SP.Field\", extend(props, properties));\r\n    };\r\n    /**\r\n    * Creates a secondary (dependent) lookup field, based on the Id of the primary lookup field.\r\n    *\r\n    * @param displayName The display name of the new field.\r\n    * @param primaryLookupFieldId The guid of the primary Lookup Field.\r\n    * @param showField Which field to show from the lookup list.\r\n    */\r\n    Fields.prototype.addDependentLookupField = function (displayName, primaryLookupFieldId, showField) {\r\n        var _this = this;\r\n        return this.clone(Fields_1, \"adddependentlookupfield(displayName='\" + displayName + \"', primarylookupfieldid='\" + primaryLookupFieldId + \"', showfield='\" + showField + \"')\")\r\n            .postCore()\r\n            .then(function (data) {\r\n            return {\r\n                data: data,\r\n                field: _this.getById(data.Id),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldLocation to the collection\r\n     *\r\n     * @param title The field title.\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addLocation = function (title, properties) {\r\n        var props = { FieldTypeKind: 33 };\r\n        return this.add(title, \"SP.FieldLocation\", extend(props, properties));\r\n    };\r\n    var Fields_1;\r\n    Fields = Fields_1 = tslib_1.__decorate([\r\n        defaultPath(\"fields\")\r\n    ], Fields);\r\n    return Fields;\r\n}(SharePointQueryableCollection));\r\nexport { Fields };\r\n/**\r\n * Describes a single of Field instance\r\n *\r\n */\r\nvar Field = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Field, _super);\r\n    function Field() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * Delete this fields\r\n         *\r\n         */\r\n        _this.delete = _this._delete;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Updates this field intance with the supplied properties\r\n     *\r\n     * @param properties A plain object hash of values to update for the list\r\n     * @param fieldType The type value, required to update child field type properties\r\n     */\r\n    Field.prototype.update = function (properties, fieldType) {\r\n        var _this = this;\r\n        if (fieldType === void 0) { fieldType = \"SP.Field\"; }\r\n        var postBody = jsS(extend(metadata(fieldType), properties));\r\n        return this.postCore({\r\n            body: postBody,\r\n            headers: {\r\n                \"X-HTTP-Method\": \"MERGE\",\r\n            },\r\n        }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                field: _this,\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Sets the value of the ShowInDisplayForm property for this field.\r\n     */\r\n    Field.prototype.setShowInDisplayForm = function (show) {\r\n        return this.clone(Field, \"setshowindisplayform(\" + show + \")\").postCore();\r\n    };\r\n    /**\r\n     * Sets the value of the ShowInEditForm property for this field.\r\n     */\r\n    Field.prototype.setShowInEditForm = function (show) {\r\n        return this.clone(Field, \"setshowineditform(\" + show + \")\").postCore();\r\n    };\r\n    /**\r\n     * Sets the value of the ShowInNewForm property for this field.\r\n     */\r\n    Field.prototype.setShowInNewForm = function (show) {\r\n        return this.clone(Field, \"setshowinnewform(\" + show + \")\").postCore();\r\n    };\r\n    return Field;\r\n}(SharePointQueryableInstance));\r\nexport { Field };\r\n//# sourceMappingURL=fields.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryableCollection, SharePointQueryableInstance, defaultPath } from \"./sharepointqueryable\";\r\n/**\r\n * Describes a collection of Field objects\r\n *\r\n */\r\nvar Forms = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Forms, _super);\r\n    function Forms() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets a form by id\r\n     *\r\n     * @param id The guid id of the item to retrieve\r\n     */\r\n    Forms.prototype.getById = function (id) {\r\n        var i = new Form(this);\r\n        i.concat(\"('\" + id + \"')\");\r\n        return i;\r\n    };\r\n    Forms = tslib_1.__decorate([\r\n        defaultPath(\"forms\")\r\n    ], Forms);\r\n    return Forms;\r\n}(SharePointQueryableCollection));\r\nexport { Forms };\r\n/**\r\n * Describes a single of Form instance\r\n *\r\n */\r\nvar Form = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Form, _super);\r\n    function Form() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    return Form;\r\n}(SharePointQueryableInstance));\r\nexport { Form };\r\n//# sourceMappingURL=forms.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryableCollection, SharePointQueryableInstance, defaultPath } from \"./sharepointqueryable\";\r\nimport { jsS } from \"@pnp/common\";\r\n/**\r\n * Describes a collection of webhook subscriptions\r\n *\r\n */\r\nvar Subscriptions = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Subscriptions, _super);\r\n    function Subscriptions() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Returns all the webhook subscriptions or the specified webhook subscription\r\n     *\r\n     * @param subscriptionId The id of a specific webhook subscription to retrieve, omit to retrieve all the webhook subscriptions\r\n     */\r\n    Subscriptions.prototype.getById = function (subscriptionId) {\r\n        var s = new Subscription(this);\r\n        s.concat(\"('\" + subscriptionId + \"')\");\r\n        return s;\r\n    };\r\n    /**\r\n     * Creates a new webhook subscription\r\n     *\r\n     * @param notificationUrl The url to receive the notifications\r\n     * @param expirationDate The date and time to expire the subscription in the form YYYY-MM-ddTHH:mm:ss+00:00 (maximum of 6 months)\r\n     * @param clientState A client specific string (optional)\r\n     */\r\n    Subscriptions.prototype.add = function (notificationUrl, expirationDate, clientState) {\r\n        var _this = this;\r\n        var postBody = {\r\n            \"expirationDateTime\": expirationDate,\r\n            \"notificationUrl\": notificationUrl,\r\n            \"resource\": this.toUrl(),\r\n        };\r\n        if (clientState) {\r\n            postBody.clientState = clientState;\r\n        }\r\n        return this.postCore({ body: jsS(postBody), headers: { \"Content-Type\": \"application/json\" } }).then(function (result) {\r\n            return { data: result, subscription: _this.getById(result.id) };\r\n        });\r\n    };\r\n    Subscriptions = tslib_1.__decorate([\r\n        defaultPath(\"subscriptions\")\r\n    ], Subscriptions);\r\n    return Subscriptions;\r\n}(SharePointQueryableCollection));\r\nexport { Subscriptions };\r\n/**\r\n * Describes a single webhook subscription instance\r\n *\r\n */\r\nvar Subscription = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Subscription, _super);\r\n    function Subscription() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Renews this webhook subscription\r\n     *\r\n     * @param expirationDate The date and time to expire the subscription in the form YYYY-MM-ddTHH:mm:ss+00:00 (maximum of 6 months, optional)\r\n     * @param notificationUrl The url to receive the notifications (optional)\r\n     * @param clientState A client specific string (optional)\r\n     */\r\n    Subscription.prototype.update = function (expirationDate, notificationUrl, clientState) {\r\n        var _this = this;\r\n        var postBody = {};\r\n        if (expirationDate) {\r\n            postBody.expirationDateTime = expirationDate;\r\n        }\r\n        if (notificationUrl) {\r\n            postBody.notificationUrl = notificationUrl;\r\n        }\r\n        if (clientState) {\r\n            postBody.clientState = clientState;\r\n        }\r\n        return this.patchCore({ body: jsS(postBody), headers: { \"Content-Type\": \"application/json\" } }).then(function (data) {\r\n            return { data: data, subscription: _this };\r\n        });\r\n    };\r\n    /**\r\n     * Removes this webhook subscription\r\n     *\r\n     */\r\n    Subscription.prototype.delete = function () {\r\n        return _super.prototype.deleteCore.call(this);\r\n    };\r\n    return Subscription;\r\n}(SharePointQueryableInstance));\r\nexport { Subscription };\r\n//# sourceMappingURL=subscriptions.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryableInstance, SharePointQueryableCollection, defaultPath } from \"./sharepointqueryable\";\r\nimport { extend, jsS } from \"@pnp/common\";\r\n/**\r\n * Describes a collection of user custom actions\r\n *\r\n */\r\nvar UserCustomActions = /** @class */ (function (_super) {\r\n    tslib_1.__extends(UserCustomActions, _super);\r\n    function UserCustomActions() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    UserCustomActions_1 = UserCustomActions;\r\n    /**\r\n     * Returns the user custom action with the specified id\r\n     *\r\n     * @param id The GUID id of the user custom action to retrieve\r\n     */\r\n    UserCustomActions.prototype.getById = function (id) {\r\n        var uca = new UserCustomAction(this);\r\n        uca.concat(\"('\" + id + \"')\");\r\n        return uca;\r\n    };\r\n    /**\r\n     * Creates a user custom action\r\n     *\r\n     * @param properties The information object of property names and values which define the new user custom action\r\n     *\r\n     */\r\n    UserCustomActions.prototype.add = function (properties) {\r\n        var _this = this;\r\n        var postBody = jsS(extend({ __metadata: { \"type\": \"SP.UserCustomAction\" } }, properties));\r\n        return this.postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                action: _this.getById(data.Id),\r\n                data: data,\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Deletes all user custom actions in the collection\r\n     *\r\n     */\r\n    UserCustomActions.prototype.clear = function () {\r\n        return this.clone(UserCustomActions_1, \"clear\").postCore();\r\n    };\r\n    var UserCustomActions_1;\r\n    UserCustomActions = UserCustomActions_1 = tslib_1.__decorate([\r\n        defaultPath(\"usercustomactions\")\r\n    ], UserCustomActions);\r\n    return UserCustomActions;\r\n}(SharePointQueryableCollection));\r\nexport { UserCustomActions };\r\n/**\r\n * Describes a single user custom action\r\n *\r\n */\r\nvar UserCustomAction = /** @class */ (function (_super) {\r\n    tslib_1.__extends(UserCustomAction, _super);\r\n    function UserCustomAction() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n        * Updates this user custom action with the supplied properties\r\n        *\r\n        * @param properties An information object of property names and values to update for this user custom action\r\n        */\r\n        _this.update = _this._update(\"SP.UserCustomAction\", function (data) { return ({ data: data, action: _this }); });\r\n        return _this;\r\n    }\r\n    /**\r\n    * Removes this user custom action\r\n    *\r\n    */\r\n    UserCustomAction.prototype.delete = function () {\r\n        return _super.prototype.deleteCore.call(this);\r\n    };\r\n    return UserCustomAction;\r\n}(SharePointQueryableInstance));\r\nexport { UserCustomAction };\r\n//# sourceMappingURL=usercustomactions.js.map","import * as tslib_1 from \"tslib\";\r\nimport { Items } from \"./items\";\r\nimport { Views, View } from \"./views\";\r\nimport { ContentTypes } from \"./contenttypes\";\r\nimport { Fields } from \"./fields\";\r\nimport { Forms } from \"./forms\";\r\nimport { Subscriptions } from \"./subscriptions\";\r\nimport { SharePointQueryable, SharePointQueryableCollection, defaultPath } from \"./sharepointqueryable\";\r\nimport { SharePointQueryableSecurable } from \"./sharepointqueryablesecurable\";\r\nimport { extend, hOP, jsS } from \"@pnp/common\";\r\nimport { UserCustomActions } from \"./usercustomactions\";\r\nimport { odataUrlFrom } from \"./odata\";\r\nimport { Folder } from \"./folders\";\r\nimport { metadata } from \"./utils/metadata\";\r\n/**\r\n * Describes a collection of List objects\r\n *\r\n */\r\nvar Lists = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Lists, _super);\r\n    function Lists() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Lists_1 = Lists;\r\n    /**\r\n     * Gets a list from the collection by guid id\r\n     *\r\n     * @param id The Id of the list (GUID)\r\n     */\r\n    Lists.prototype.getById = function (id) {\r\n        var list = new List(this);\r\n        list.concat(\"('\" + id + \"')\");\r\n        return list;\r\n    };\r\n    /**\r\n     * Gets a list from the collection by title\r\n     *\r\n     * @param title The title of the list\r\n     */\r\n    Lists.prototype.getByTitle = function (title) {\r\n        return new List(this, \"getByTitle('\" + title + \"')\");\r\n    };\r\n    /**\r\n     * Adds a new list to the collection\r\n     *\r\n     * @param title The new list's title\r\n     * @param description The new list's description\r\n     * @param template The list template value\r\n     * @param enableContentTypes If true content types will be allowed and enabled, otherwise they will be disallowed and not enabled\r\n     * @param additionalSettings Will be passed as part of the list creation body\r\n     */\r\n    Lists.prototype.add = function (title, description, template, enableContentTypes, additionalSettings) {\r\n        var _this = this;\r\n        if (description === void 0) { description = \"\"; }\r\n        if (template === void 0) { template = 100; }\r\n        if (enableContentTypes === void 0) { enableContentTypes = false; }\r\n        if (additionalSettings === void 0) { additionalSettings = {}; }\r\n        var addSettings = extend({\r\n            \"AllowContentTypes\": enableContentTypes,\r\n            \"BaseTemplate\": template,\r\n            \"ContentTypesEnabled\": enableContentTypes,\r\n            \"Description\": description,\r\n            \"Title\": title,\r\n            \"__metadata\": { \"type\": \"SP.List\" },\r\n        }, additionalSettings);\r\n        return this.postCore({ body: jsS(addSettings) }).then(function (data) {\r\n            return { data: data, list: _this.getByTitle(addSettings.Title) };\r\n        });\r\n    };\r\n    /**\r\n     * Ensures that the specified list exists in the collection (note: this method not supported for batching)\r\n     *\r\n     * @param title The new list's title\r\n     * @param description The new list's description\r\n     * @param template The list template value\r\n     * @param enableContentTypes If true content types will be allowed and enabled, otherwise they will be disallowed and not enabled\r\n     * @param additionalSettings Will be passed as part of the list creation body or used to update an existing list\r\n     */\r\n    Lists.prototype.ensure = function (title, description, template, enableContentTypes, additionalSettings) {\r\n        var _this = this;\r\n        if (description === void 0) { description = \"\"; }\r\n        if (template === void 0) { template = 100; }\r\n        if (enableContentTypes === void 0) { enableContentTypes = false; }\r\n        if (additionalSettings === void 0) { additionalSettings = {}; }\r\n        if (this.hasBatch) {\r\n            throw Error(\"The ensure list method is not supported for use in a batch.\");\r\n        }\r\n        return new Promise(function (resolve, reject) {\r\n            var addOrUpdateSettings = extend(additionalSettings, { Title: title, Description: description, ContentTypesEnabled: enableContentTypes }, true);\r\n            var list = _this.getByTitle(addOrUpdateSettings.Title);\r\n            list.get().then(function (_) {\r\n                list.update(addOrUpdateSettings).then(function (d) {\r\n                    resolve({ created: false, data: d, list: _this.getByTitle(addOrUpdateSettings.Title) });\r\n                }).catch(function (e) { return reject(e); });\r\n            }).catch(function (_) {\r\n                _this.add(title, description, template, enableContentTypes, addOrUpdateSettings).then(function (r) {\r\n                    resolve({ created: true, data: r.data, list: _this.getByTitle(addOrUpdateSettings.Title) });\r\n                }).catch(function (e) { return reject(e); });\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Gets a list that is the default asset location for images or other files, which the users upload to their wiki pages.\r\n     */\r\n    Lists.prototype.ensureSiteAssetsLibrary = function () {\r\n        return this.clone(Lists_1, \"ensuresiteassetslibrary\").postCore().then(function (json) {\r\n            return new List(odataUrlFrom(json));\r\n        });\r\n    };\r\n    /**\r\n     * Gets a list that is the default location for wiki pages.\r\n     */\r\n    Lists.prototype.ensureSitePagesLibrary = function () {\r\n        return this.clone(Lists_1, \"ensuresitepageslibrary\").postCore().then(function (json) {\r\n            return new List(odataUrlFrom(json));\r\n        });\r\n    };\r\n    var Lists_1;\r\n    Lists = Lists_1 = tslib_1.__decorate([\r\n        defaultPath(\"lists\")\r\n    ], Lists);\r\n    return Lists;\r\n}(SharePointQueryableCollection));\r\nexport { Lists };\r\n/**\r\n * Describes a single List instance\r\n *\r\n */\r\nvar List = /** @class */ (function (_super) {\r\n    tslib_1.__extends(List, _super);\r\n    function List() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(List.prototype, \"contentTypes\", {\r\n        /**\r\n         * Gets the content types in this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new ContentTypes(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"items\", {\r\n        /**\r\n         * Gets the items in this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Items(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"views\", {\r\n        /**\r\n         * Gets the views in this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Views(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"fields\", {\r\n        /**\r\n         * Gets the fields in this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Fields(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"forms\", {\r\n        /**\r\n         * Gets the forms in this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Forms(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"defaultView\", {\r\n        /**\r\n         * Gets the default view of this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new View(this, \"DefaultView\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"userCustomActions\", {\r\n        /**\r\n         * Get all custom actions on a site collection\r\n         *\r\n         */\r\n        get: function () {\r\n            return new UserCustomActions(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"effectiveBasePermissions\", {\r\n        /**\r\n         * Gets the effective base permissions of this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryable(this, \"EffectiveBasePermissions\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"eventReceivers\", {\r\n        /**\r\n         * Gets the event receivers attached to this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableCollection(this, \"EventReceivers\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"relatedFields\", {\r\n        /**\r\n         * Gets the related fields of this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryable(this, \"getRelatedFields\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"informationRightsManagementSettings\", {\r\n        /**\r\n         * Gets the IRM settings for this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryable(this, \"InformationRightsManagementSettings\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"subscriptions\", {\r\n        /**\r\n         * Gets the webhook subscriptions of this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Subscriptions(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"rootFolder\", {\r\n        /**\r\n         * The root folder of the list\r\n         */\r\n        get: function () {\r\n            return new Folder(this, \"rootFolder\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets a view by view guid id\r\n     *\r\n     */\r\n    List.prototype.getView = function (viewId) {\r\n        return new View(this, \"getView('\" + viewId + \"')\");\r\n    };\r\n    /**\r\n     * Updates this list intance with the supplied properties\r\n     *\r\n     * @param properties A plain object hash of values to update for the list\r\n     * @param eTag Value used in the IF-Match header, by default \"*\"\r\n     */\r\n    /* tslint:disable no-string-literal */\r\n    List.prototype.update = function (properties, eTag) {\r\n        var _this = this;\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        var postBody = jsS(extend({\r\n            \"__metadata\": { \"type\": \"SP.List\" },\r\n        }, properties));\r\n        return this.postCore({\r\n            body: postBody,\r\n            headers: {\r\n                \"IF-Match\": eTag,\r\n                \"X-HTTP-Method\": \"MERGE\",\r\n            },\r\n        }).then(function (data) {\r\n            var retList = _this;\r\n            if (hOP(properties, \"Title\")) {\r\n                retList = _this.getParent(List, _this.parentUrl, \"getByTitle('\" + properties[\"Title\"] + \"')\");\r\n            }\r\n            return {\r\n                data: data,\r\n                list: retList,\r\n            };\r\n        });\r\n    };\r\n    /* tslint:enable */\r\n    /**\r\n     * Delete this list\r\n     *\r\n     * @param eTag Value used in the IF-Match header, by default \"*\"\r\n     */\r\n    List.prototype.delete = function (eTag) {\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        return this.postCore({\r\n            headers: {\r\n                \"IF-Match\": eTag,\r\n                \"X-HTTP-Method\": \"DELETE\",\r\n            },\r\n        });\r\n    };\r\n    /**\r\n     * Returns the collection of changes from the change log that have occurred within the list, based on the specified query.\r\n     */\r\n    List.prototype.getChanges = function (query) {\r\n        return this.clone(List, \"getchanges\").postCore({\r\n            body: jsS({ \"query\": extend(metadata(\"SP.ChangeQuery\"), query) }),\r\n        });\r\n    };\r\n    /**\r\n     * Returns a collection of items from the list based on the specified query.\r\n     *\r\n     * @param CamlQuery The Query schema of Collaborative Application Markup\r\n     * Language (CAML) is used in various ways within the context of Microsoft SharePoint Foundation\r\n     * to define queries against list data.\r\n     * see:\r\n     *\r\n     * https://msdn.microsoft.com/en-us/library/office/ms467521.aspx\r\n     *\r\n     * @param expands A URI with a $expand System Query Option indicates that Entries associated with\r\n     * the Entry or Collection of Entries identified by the Resource Path\r\n     * section of the URI must be represented inline (i.e. eagerly loaded).\r\n     * see:\r\n     *\r\n     * https://msdn.microsoft.com/en-us/library/office/fp142385.aspx\r\n     *\r\n     * http://www.odata.org/documentation/odata-version-2-0/uri-conventions/#ExpandSystemQueryOption\r\n     */\r\n    List.prototype.getItemsByCAMLQuery = function (query) {\r\n        var expands = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            expands[_i - 1] = arguments[_i];\r\n        }\r\n        var q = this.clone(List, \"getitems\");\r\n        return q.expand.apply(q, expands).postCore({\r\n            body: jsS({ \"query\": extend({ \"__metadata\": { \"type\": \"SP.CamlQuery\" } }, query) }),\r\n        });\r\n    };\r\n    /**\r\n     * See: https://msdn.microsoft.com/en-us/library/office/dn292554.aspx\r\n     */\r\n    List.prototype.getListItemChangesSinceToken = function (query) {\r\n        return this.clone(List, \"getlistitemchangessincetoken\").postCore({\r\n            body: jsS({ \"query\": extend({ \"__metadata\": { \"type\": \"SP.ChangeLogItemQuery\" } }, query) }),\r\n        }, { parse: function (r) { return r.text(); } });\r\n    };\r\n    /**\r\n     * Moves the list to the Recycle Bin and returns the identifier of the new Recycle Bin item.\r\n     */\r\n    List.prototype.recycle = function () {\r\n        return this.clone(List, \"recycle\").postCore().then(function (data) {\r\n            if (hOP(data, \"Recycle\")) {\r\n                return data.Recycle;\r\n            }\r\n            else {\r\n                return data;\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Renders list data based on the view xml provided\r\n     */\r\n    List.prototype.renderListData = function (viewXml) {\r\n        var q = this.clone(List, \"renderlistdata(@viewXml)\");\r\n        q.query.set(\"@viewXml\", \"'\" + viewXml + \"'\");\r\n        return q.postCore().then(function (data) {\r\n            // data will be a string, so we parse it again\r\n            return JSON.parse(hOP(data, \"RenderListData\") ? data.RenderListData : data);\r\n        });\r\n    };\r\n    /**\r\n     * Returns the data for the specified query view\r\n     *\r\n     * @param parameters The parameters to be used to render list data as JSON string.\r\n     * @param overrideParameters The parameters that are used to override and extend the regular SPRenderListDataParameters.\r\n     */\r\n    List.prototype.renderListDataAsStream = function (parameters, overrideParameters) {\r\n        if (overrideParameters === void 0) { overrideParameters = null; }\r\n        var postBody = {\r\n            overrideParameters: extend(metadata(\"SP.RenderListDataOverrideParameters\"), overrideParameters),\r\n            parameters: extend(metadata(\"SP.RenderListDataParameters\"), parameters),\r\n        };\r\n        return this.clone(List, \"RenderListDataAsStream\", true).postCore({\r\n            body: jsS(postBody),\r\n        });\r\n    };\r\n    /**\r\n     * Gets the field values and field schema attributes for a list item.\r\n     */\r\n    List.prototype.renderListFormData = function (itemId, formId, mode) {\r\n        return this.clone(List, \"renderlistformdata(itemid=\" + itemId + \", formid='\" + formId + \"', mode='\" + mode + \"')\").postCore().then(function (data) {\r\n            // data will be a string, so we parse it again\r\n            return JSON.parse(hOP(data, \"RenderListFormData\") ? data.RenderListFormData : data);\r\n        });\r\n    };\r\n    /**\r\n     * Reserves a list item ID for idempotent list item creation.\r\n     */\r\n    List.prototype.reserveListItemId = function () {\r\n        return this.clone(List, \"reservelistitemid\").postCore().then(function (data) {\r\n            if (hOP(data, \"ReserveListItemId\")) {\r\n                return data.ReserveListItemId;\r\n            }\r\n            else {\r\n                return data;\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Returns the ListItemEntityTypeFullName for this list, used when adding/updating list items. Does not support batching.\r\n     *\r\n     */\r\n    List.prototype.getListItemEntityTypeFullName = function () {\r\n        return this.clone(List, null, false).select(\"ListItemEntityTypeFullName\").get().then(function (o) { return o.ListItemEntityTypeFullName; });\r\n    };\r\n    /**\r\n     * Creates an item using path (in a folder), validates and sets its field values.\r\n     *\r\n     * @param formValues The fields to change and their new values.\r\n     * @param decodedUrl Path decoded url; folder's server relative path.\r\n     * @param bNewDocumentUpdate true if the list item is a document being updated after upload; otherwise false.\r\n     * @param checkInComment Optional check in comment.\r\n     */\r\n    List.prototype.addValidateUpdateItemUsingPath = function (formValues, decodedUrl, bNewDocumentUpdate, checkInComment) {\r\n        if (bNewDocumentUpdate === void 0) { bNewDocumentUpdate = false; }\r\n        return this.clone(List, \"AddValidateUpdateItemUsingPath()\").postCore({\r\n            body: jsS({\r\n                bNewDocumentUpdate: bNewDocumentUpdate,\r\n                checkInComment: checkInComment,\r\n                formValues: formValues,\r\n                listItemCreateInfo: {\r\n                    FolderPath: {\r\n                        DecodedUrl: decodedUrl,\r\n                        __metadata: { type: \"SP.ResourcePath\" },\r\n                    },\r\n                    __metadata: { type: \"SP.ListItemCreationInformationUsingPath\" },\r\n                },\r\n            }),\r\n        }).then(function (res) {\r\n            if (typeof res.AddValidateUpdateItemUsingPath !== \"undefined\") {\r\n                return res.AddValidateUpdateItemUsingPath.results;\r\n            }\r\n            return res;\r\n        });\r\n    };\r\n    return List;\r\n}(SharePointQueryableSecurable));\r\nexport { List };\r\n//# sourceMappingURL=lists.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryableCollection, SharePointQueryableInstance, defaultPath } from \"./sharepointqueryable\";\r\nimport { extend, jsS } from \"@pnp/common\";\r\nimport { odataUrlFrom } from \"./odata\";\r\nimport { metadata } from \"./utils/metadata\";\r\n/**\r\n * Represents a Collection of comments\r\n */\r\nvar Comments = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Comments, _super);\r\n    function Comments() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Comments_1 = Comments;\r\n    /**\r\n     * Adds a new comment to this collection\r\n     *\r\n     * @param info Comment information to add\r\n     */\r\n    Comments.prototype.add = function (info) {\r\n        var _this = this;\r\n        if (typeof info === \"string\") {\r\n            info = { text: info };\r\n        }\r\n        var postBody = jsS(extend(metadata(\"Microsoft.SharePoint.Comments.comment\"), info));\r\n        return this.clone(Comments_1, null).postCore({ body: postBody }).then(function (d) {\r\n            return extend(_this.getById(d.id), d);\r\n        });\r\n    };\r\n    /**\r\n     * Gets a comment by id\r\n     *\r\n     * @param id Id of the comment to load\r\n     */\r\n    Comments.prototype.getById = function (id) {\r\n        var c = new Comment(this);\r\n        c.concat(\"(\" + id + \")\");\r\n        return c;\r\n    };\r\n    /**\r\n     * Deletes all the comments in this collection\r\n     */\r\n    Comments.prototype.clear = function () {\r\n        return this.clone(Comments_1, \"DeleteAll\").postCore();\r\n    };\r\n    var Comments_1;\r\n    Comments = Comments_1 = tslib_1.__decorate([\r\n        defaultPath(\"comments\")\r\n    ], Comments);\r\n    return Comments;\r\n}(SharePointQueryableCollection));\r\nexport { Comments };\r\n/**\r\n * Represents a comment\r\n */\r\nvar Comment = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Comment, _super);\r\n    function Comment() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(Comment.prototype, \"replies\", {\r\n        get: function () {\r\n            return new Replies(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Likes the comment as the current user\r\n     */\r\n    Comment.prototype.like = function () {\r\n        return this.clone(Comment, \"Like\").postCore();\r\n    };\r\n    /**\r\n     * Unlikes the comment as the current user\r\n     */\r\n    Comment.prototype.unlike = function () {\r\n        return this.clone(Comment, \"Unlike\").postCore();\r\n    };\r\n    /**\r\n     * Deletes this comment\r\n     */\r\n    Comment.prototype.delete = function () {\r\n        return this.clone(Comment, \"DeleteComment\").postCore();\r\n    };\r\n    return Comment;\r\n}(SharePointQueryableInstance));\r\nexport { Comment };\r\n/**\r\n * Represents a Collection of comments\r\n */\r\nvar Replies = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Replies, _super);\r\n    function Replies() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Replies_1 = Replies;\r\n    /**\r\n     * Adds a new reply to this collection\r\n     *\r\n     * @param info Comment information to add\r\n     */\r\n    Replies.prototype.add = function (info) {\r\n        if (typeof info === \"string\") {\r\n            info = { text: info };\r\n        }\r\n        var postBody = jsS(extend(metadata(\"Microsoft.SharePoint.Comments.comment\"), info));\r\n        return this.clone(Replies_1, null).postCore({ body: postBody }).then(function (d) {\r\n            return extend(new Comment(odataUrlFrom(d)), d);\r\n        });\r\n    };\r\n    var Replies_1;\r\n    Replies = Replies_1 = tslib_1.__decorate([\r\n        defaultPath(\"replies\")\r\n    ], Replies);\r\n    return Replies;\r\n}(SharePointQueryableCollection));\r\nexport { Replies };\r\n//# sourceMappingURL=comments.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryable, SharePointQueryableCollection, SharePointQueryableInstance, defaultPath } from \"./sharepointqueryable\";\r\nimport { SharePointQueryableShareableItem } from \"./sharepointqueryableshareable\";\r\nimport { Folder } from \"./folders\";\r\nimport { File } from \"./files\";\r\nimport { ContentType } from \"./contenttypes\";\r\nimport { extend, jsS, hOP } from \"@pnp/common\";\r\nimport { ODataParserBase } from \"@pnp/odata\";\r\nimport { AttachmentFiles } from \"./attachmentfiles\";\r\nimport { List } from \"./lists\";\r\nimport { Logger } from \"@pnp/logging\";\r\nimport { Comments } from \"./comments\";\r\nimport { metadata } from \"./utils/metadata\";\r\n/**\r\n * Describes a collection of Item objects\r\n *\r\n */\r\nvar Items = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Items, _super);\r\n    function Items() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Items_1 = Items;\r\n    /**\r\n    * Gets an Item by id\r\n    *\r\n    * @param id The integer id of the item to retrieve\r\n    */\r\n    Items.prototype.getById = function (id) {\r\n        var i = new Item(this);\r\n        i.concat(\"(\" + id + \")\");\r\n        return i;\r\n    };\r\n    /**\r\n     * Gets BCS Item by string id\r\n     *\r\n     * @param stringId The string id of the BCS item to retrieve\r\n     */\r\n    Items.prototype.getItemByStringId = function (stringId) {\r\n        // creates an item with the parent list path and append out method call\r\n        return new Item(this.parentUrl, \"getItemByStringId('\" + stringId + \"')\");\r\n    };\r\n    /**\r\n     * Skips the specified number of items (https://msdn.microsoft.com/en-us/library/office/fp142385.aspx#sectionSection6)\r\n     *\r\n     * @param skip The starting id where the page should start, use with top to specify pages\r\n     * @param reverse It true the PagedPrev=true parameter is added allowing backwards navigation in the collection\r\n     */\r\n    Items.prototype.skip = function (skip, reverse) {\r\n        if (reverse === void 0) { reverse = false; }\r\n        if (reverse) {\r\n            this.query.set(\"$skiptoken\", encodeURIComponent(\"Paged=TRUE&PagedPrev=TRUE&p_ID=\" + skip));\r\n        }\r\n        else {\r\n            this.query.set(\"$skiptoken\", encodeURIComponent(\"Paged=TRUE&p_ID=\" + skip));\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Gets a collection designed to aid in paging through data\r\n     *\r\n     */\r\n    Items.prototype.getPaged = function () {\r\n        return this.get(new PagedItemCollectionParser(this));\r\n    };\r\n    /**\r\n     * Gets all the items in a list, regardless of count. Does not support batching or caching\r\n     *\r\n     *  @param requestSize Number of items to return in each request (Default: 2000)\r\n     *  @param acceptHeader Allows for setting the value of the Accept header for SP 2013 support\r\n     */\r\n    Items.prototype.getAll = function (requestSize, acceptHeader) {\r\n        if (requestSize === void 0) { requestSize = 2000; }\r\n        if (acceptHeader === void 0) { acceptHeader = \"application/json;odata=nometadata\"; }\r\n        Logger.write(\"Calling items.getAll should be done sparingly. Ensure this is the correct choice. If you are unsure, it is not.\", 2 /* Warning */);\r\n        // this will be used for the actual query\r\n        // and we set no metadata here to try and reduce traffic\r\n        var items = new Items_1(this, \"\").top(requestSize).configure({\r\n            headers: {\r\n                \"Accept\": acceptHeader,\r\n            },\r\n        });\r\n        // let's copy over the odata query params that can be applied\r\n        // $top - allow setting the page size this way (override what we did above)\r\n        // $select - allow picking the return fields (good behavior)\r\n        // $filter - allow setting a filter, though this may fail due for large lists\r\n        this.query.forEach(function (v, k) {\r\n            if (/^\\$select|filter|top|expand$/i.test(k)) {\r\n                items.query.set(k, v);\r\n            }\r\n        });\r\n        // give back the promise\r\n        return new Promise(function (resolve, reject) {\r\n            // this will eventually hold the items we return\r\n            var itemsCollector = [];\r\n            // action that will gather up our results recursively\r\n            var gatherer = function (last) {\r\n                // collect that set of results\r\n                [].push.apply(itemsCollector, last.results);\r\n                // if we have more, repeat - otherwise resolve with the collected items\r\n                if (last.hasNext) {\r\n                    last.getNext().then(gatherer).catch(reject);\r\n                }\r\n                else {\r\n                    resolve(itemsCollector);\r\n                }\r\n            };\r\n            // start the cycle\r\n            items.getPaged().then(gatherer).catch(reject);\r\n        });\r\n    };\r\n    /**\r\n     * Adds a new item to the collection\r\n     *\r\n     * @param properties The new items's properties\r\n     * @param listItemEntityTypeFullName The type name of the list's entities\r\n     */\r\n    Items.prototype.add = function (properties, listItemEntityTypeFullName) {\r\n        var _this = this;\r\n        if (properties === void 0) { properties = {}; }\r\n        if (listItemEntityTypeFullName === void 0) { listItemEntityTypeFullName = null; }\r\n        var removeDependency = this.addBatchDependency();\r\n        return this.ensureListItemEntityTypeName(listItemEntityTypeFullName).then(function (listItemEntityType) {\r\n            var postBody = jsS(extend(metadata(listItemEntityType), properties));\r\n            var promise = _this.clone(Items_1, \"\").postCore({ body: postBody }).then(function (data) {\r\n                return {\r\n                    data: data,\r\n                    item: _this.getById(data.Id),\r\n                };\r\n            });\r\n            removeDependency();\r\n            return promise;\r\n        });\r\n    };\r\n    /**\r\n     * Ensures we have the proper list item entity type name, either from the value provided or from the list\r\n     *\r\n     * @param candidatelistItemEntityTypeFullName The potential type name\r\n     */\r\n    Items.prototype.ensureListItemEntityTypeName = function (candidatelistItemEntityTypeFullName) {\r\n        return candidatelistItemEntityTypeFullName ?\r\n            Promise.resolve(candidatelistItemEntityTypeFullName) :\r\n            this.getParent(List).getListItemEntityTypeFullName();\r\n    };\r\n    var Items_1;\r\n    Items = Items_1 = tslib_1.__decorate([\r\n        defaultPath(\"items\")\r\n    ], Items);\r\n    return Items;\r\n}(SharePointQueryableCollection));\r\nexport { Items };\r\n/**\r\n * Descrines a single Item instance\r\n *\r\n */\r\nvar Item = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Item, _super);\r\n    function Item() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * Delete this item\r\n         *\r\n         * @param eTag Value used in the IF-Match header, by default \"*\"\r\n         */\r\n        _this.delete = _this._deleteWithETag;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(Item.prototype, \"attachmentFiles\", {\r\n        /**\r\n         * Gets the set of attachments for this item\r\n         *\r\n         */\r\n        get: function () {\r\n            return new AttachmentFiles(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"contentType\", {\r\n        /**\r\n         * Gets the content type for this item\r\n         *\r\n         */\r\n        get: function () {\r\n            return new ContentType(this, \"ContentType\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"comments\", {\r\n        /**\r\n         * Gets the collection of comments associated with this list item\r\n         */\r\n        get: function () {\r\n            return new Comments(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"effectiveBasePermissions\", {\r\n        /**\r\n         * Gets the effective base permissions for the item\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryable(this, \"EffectiveBasePermissions\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"effectiveBasePermissionsForUI\", {\r\n        /**\r\n         * Gets the effective base permissions for the item in a UI context\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryable(this, \"EffectiveBasePermissionsForUI\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"fieldValuesAsHTML\", {\r\n        /**\r\n         * Gets the field values for this list item in their HTML representation\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableInstance(this, \"FieldValuesAsHTML\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"fieldValuesAsText\", {\r\n        /**\r\n         * Gets the field values for this list item in their text representation\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableInstance(this, \"FieldValuesAsText\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"fieldValuesForEdit\", {\r\n        /**\r\n         * Gets the field values for this list item for use in editing controls\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableInstance(this, \"FieldValuesForEdit\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"folder\", {\r\n        /**\r\n         * Gets the folder associated with this list item (if this item represents a folder)\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Folder(this, \"folder\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"file\", {\r\n        /**\r\n         * Gets the folder associated with this list item (if this item represents a folder)\r\n         *\r\n         */\r\n        get: function () {\r\n            return new File(this, \"file\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"versions\", {\r\n        /**\r\n         * Gets the collection of versions associated with this item\r\n         */\r\n        get: function () {\r\n            return new ItemVersions(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"list\", {\r\n        get: function () {\r\n            return this.getParent(List, this.parentUrl.substr(0, this.parentUrl.lastIndexOf(\"/\")));\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Updates this list intance with the supplied properties\r\n     *\r\n     * @param properties A plain object hash of values to update for the list\r\n     * @param eTag Value used in the IF-Match header, by default \"*\"\r\n     * @param listItemEntityTypeFullName The type name of the list's entities\r\n     */\r\n    Item.prototype.update = function (properties, eTag, listItemEntityTypeFullName) {\r\n        var _this = this;\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        if (listItemEntityTypeFullName === void 0) { listItemEntityTypeFullName = null; }\r\n        return new Promise(function (resolve, reject) {\r\n            var removeDependency = _this.addBatchDependency();\r\n            return _this.ensureListItemEntityTypeName(listItemEntityTypeFullName).then(function (listItemEntityType) {\r\n                var postBody = jsS(extend(metadata(listItemEntityType), properties));\r\n                removeDependency();\r\n                return _this.postCore({\r\n                    body: postBody,\r\n                    headers: {\r\n                        \"IF-Match\": eTag,\r\n                        \"X-HTTP-Method\": \"MERGE\",\r\n                    },\r\n                }, new ItemUpdatedParser()).then(function (data) {\r\n                    resolve({\r\n                        data: data,\r\n                        item: _this,\r\n                    });\r\n                });\r\n            }).catch(function (e) { return reject(e); });\r\n        });\r\n    };\r\n    /**\r\n     * Gets the collection of people who have liked this item\r\n     */\r\n    Item.prototype.getLikedBy = function () {\r\n        return this.clone(Item, \"likedBy\").postCore();\r\n    };\r\n    /**\r\n     * Likes this item as the current user\r\n     */\r\n    Item.prototype.like = function () {\r\n        return this.clone(Item, \"like\").postCore();\r\n    };\r\n    /**\r\n     * Unlikes this item as the current user\r\n     */\r\n    Item.prototype.unlike = function () {\r\n        return this.clone(Item, \"unlike\").postCore();\r\n    };\r\n    /**\r\n     * Moves the list item to the Recycle Bin and returns the identifier of the new Recycle Bin item.\r\n     */\r\n    Item.prototype.recycle = function () {\r\n        return this.clone(Item, \"recycle\").postCore();\r\n    };\r\n    /**\r\n     * Gets a string representation of the full URL to the WOPI frame.\r\n     * If there is no associated WOPI application, or no associated action, an empty string is returned.\r\n     *\r\n     * @param action Display mode: 0: view, 1: edit, 2: mobileView, 3: interactivePreview\r\n     */\r\n    Item.prototype.getWopiFrameUrl = function (action) {\r\n        if (action === void 0) { action = 0; }\r\n        var i = this.clone(Item, \"getWOPIFrameUrl(@action)\");\r\n        i.query.set(\"@action\", action);\r\n        return i.postCore().then(function (data) {\r\n            // handle verbose mode\r\n            if (hOP(data, \"GetWOPIFrameUrl\")) {\r\n                return data.GetWOPIFrameUrl;\r\n            }\r\n            return data;\r\n        });\r\n    };\r\n    /**\r\n     * Validates and sets the values of the specified collection of fields for the list item.\r\n     *\r\n     * @param formValues The fields to change and their new values.\r\n     * @param newDocumentUpdate true if the list item is a document being updated after upload; otherwise false.\r\n     */\r\n    Item.prototype.validateUpdateListItem = function (formValues, newDocumentUpdate) {\r\n        if (newDocumentUpdate === void 0) { newDocumentUpdate = false; }\r\n        return this.clone(Item, \"validateupdatelistitem\").postCore({\r\n            body: jsS({ \"formValues\": formValues, bNewDocumentUpdate: newDocumentUpdate }),\r\n        });\r\n    };\r\n    /**\r\n     * Get the like by information for a modern site page\r\n     */\r\n    Item.prototype.getLikedByInformation = function () {\r\n        return this.clone(Item, \"likedByInformation\").expand(\"likedby\").getCore();\r\n    };\r\n    /**\r\n     * Ensures we have the proper list item entity type name, either from the value provided or from the list\r\n     *\r\n     * @param candidatelistItemEntityTypeFullName The potential type name\r\n     */\r\n    Item.prototype.ensureListItemEntityTypeName = function (candidatelistItemEntityTypeFullName) {\r\n        return candidatelistItemEntityTypeFullName ?\r\n            Promise.resolve(candidatelistItemEntityTypeFullName) :\r\n            this.list.getListItemEntityTypeFullName();\r\n    };\r\n    return Item;\r\n}(SharePointQueryableShareableItem));\r\nexport { Item };\r\n/**\r\n * Describes a collection of Version objects\r\n *\r\n */\r\nvar ItemVersions = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ItemVersions, _super);\r\n    function ItemVersions() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets a version by id\r\n     *\r\n     * @param versionId The id of the version to retrieve\r\n     */\r\n    ItemVersions.prototype.getById = function (versionId) {\r\n        var v = new ItemVersion(this);\r\n        v.concat(\"(\" + versionId + \")\");\r\n        return v;\r\n    };\r\n    ItemVersions = tslib_1.__decorate([\r\n        defaultPath(\"versions\")\r\n    ], ItemVersions);\r\n    return ItemVersions;\r\n}(SharePointQueryableCollection));\r\nexport { ItemVersions };\r\n/**\r\n * Describes a single Version instance\r\n *\r\n */\r\nvar ItemVersion = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ItemVersion, _super);\r\n    function ItemVersion() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n        * Delete a specific version of a file.\r\n        *\r\n        * @param eTag Value used in the IF-Match header, by default \"*\"\r\n        */\r\n        _this.delete = _this._deleteWithETag;\r\n        return _this;\r\n    }\r\n    return ItemVersion;\r\n}(SharePointQueryableInstance));\r\nexport { ItemVersion };\r\n/**\r\n * Provides paging functionality for list items\r\n */\r\nvar PagedItemCollection = /** @class */ (function () {\r\n    function PagedItemCollection(parent, nextUrl, results) {\r\n        this.parent = parent;\r\n        this.nextUrl = nextUrl;\r\n        this.results = results;\r\n    }\r\n    Object.defineProperty(PagedItemCollection.prototype, \"hasNext\", {\r\n        /**\r\n         * If true there are more results available in the set, otherwise there are not\r\n         */\r\n        get: function () {\r\n            return typeof this.nextUrl === \"string\" && this.nextUrl.length > 0;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets the next set of results, or resolves to null if no results are available\r\n     */\r\n    PagedItemCollection.prototype.getNext = function () {\r\n        if (this.hasNext) {\r\n            var items = new Items(this.nextUrl, null).configureFrom(this.parent);\r\n            return items.getPaged();\r\n        }\r\n        return new Promise(function (r) { return r(null); });\r\n    };\r\n    return PagedItemCollection;\r\n}());\r\nexport { PagedItemCollection };\r\nvar PagedItemCollectionParser = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PagedItemCollectionParser, _super);\r\n    function PagedItemCollectionParser(_parent) {\r\n        var _this = _super.call(this) || this;\r\n        _this._parent = _parent;\r\n        return _this;\r\n    }\r\n    PagedItemCollectionParser.prototype.parse = function (r) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            if (_this.handleError(r, reject)) {\r\n                r.json().then(function (json) {\r\n                    var nextUrl = hOP(json, \"d\") && hOP(json.d, \"__next\") ? json.d.__next : json[\"odata.nextLink\"];\r\n                    resolve(new PagedItemCollection(_this._parent, nextUrl, _this.parseODataJSON(json)));\r\n                });\r\n            }\r\n        });\r\n    };\r\n    return PagedItemCollectionParser;\r\n}(ODataParserBase));\r\nvar ItemUpdatedParser = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ItemUpdatedParser, _super);\r\n    function ItemUpdatedParser() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    ItemUpdatedParser.prototype.parse = function (r) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var _this = this;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                return [2 /*return*/, new Promise(function (resolve, reject) {\r\n                        if (_this.handleError(r, reject)) {\r\n                            resolve({\r\n                                \"odata.etag\": r.headers.get(\"etag\"),\r\n                            });\r\n                        }\r\n                    })];\r\n            });\r\n        });\r\n    };\r\n    return ItemUpdatedParser;\r\n}(ODataParserBase));\r\n//# sourceMappingURL=items.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryableInstance, SharePointQueryableCollection } from \"./sharepointqueryable\";\r\nimport { File } from \"./files\";\r\nimport { odataUrlFrom } from \"./odata\";\r\nimport { extractWebUrl } from \"./utils/extractweburl\";\r\n/**\r\n * Represents an app catalog\r\n */\r\nvar AppCatalog = /** @class */ (function (_super) {\r\n    tslib_1.__extends(AppCatalog, _super);\r\n    function AppCatalog(baseUrl, path) {\r\n        if (path === void 0) { path = \"_api/web/tenantappcatalog/AvailableApps\"; }\r\n        return _super.call(this, extractWebUrl(typeof baseUrl === \"string\" ? baseUrl : baseUrl.toUrl()), path) || this;\r\n    }\r\n    /**\r\n     * Get details of specific app from the app catalog\r\n     * @param id - Specify the guid of the app\r\n     */\r\n    AppCatalog.prototype.getAppById = function (id) {\r\n        return new App(this, \"getById('\" + id + \"')\");\r\n    };\r\n    /**\r\n     * Uploads an app package. Not supported for batching\r\n     *\r\n     * @param filename Filename to create.\r\n     * @param content app package data (eg: the .app or .sppkg file).\r\n     * @param shouldOverWrite Should an app with the same name in the same location be overwritten? (default: true)\r\n     * @returns Promise<AppAddResult>\r\n     */\r\n    AppCatalog.prototype.add = function (filename, content, shouldOverWrite) {\r\n        if (shouldOverWrite === void 0) { shouldOverWrite = true; }\r\n        var catalog = this.toUrl().indexOf(\"tenantappcatalog\") > 0 ? \"tenantappcatalog\" : \"sitecollectionappcatalog\";\r\n        // you don't add to the availableapps collection\r\n        var adder = new AppCatalog(extractWebUrl(this.toUrl()), \"_api/web/\" + catalog + \"/add(overwrite=\" + shouldOverWrite + \",url='\" + filename + \"')\");\r\n        return adder.postCore({\r\n            body: content,\r\n        }).then(function (r) {\r\n            return {\r\n                data: r,\r\n                file: new File(odataUrlFrom(r)),\r\n            };\r\n        });\r\n    };\r\n    return AppCatalog;\r\n}(SharePointQueryableCollection));\r\nexport { AppCatalog };\r\n/**\r\n * Represents the actions you can preform on a given app within the catalog\r\n */\r\nvar App = /** @class */ (function (_super) {\r\n    tslib_1.__extends(App, _super);\r\n    function App() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * This method deploys an app on the app catalog.  It must be called in the context\r\n     * of the tenant app catalog web or it will fail.\r\n     *\r\n     * @param skipFeatureDeployment Deploy the app to the entire tenant\r\n     */\r\n    App.prototype.deploy = function (skipFeatureDeployment) {\r\n        if (skipFeatureDeployment === void 0) { skipFeatureDeployment = false; }\r\n        return this.clone(App, \"Deploy(\" + skipFeatureDeployment + \")\").postCore();\r\n    };\r\n    /**\r\n     * This method retracts a deployed app on the app catalog.  It must be called in the context\r\n     * of the tenant app catalog web or it will fail.\r\n     */\r\n    App.prototype.retract = function () {\r\n        return this.clone(App, \"Retract\").postCore();\r\n    };\r\n    /**\r\n     * This method allows an app which is already deployed to be installed on a web\r\n     */\r\n    App.prototype.install = function () {\r\n        return this.clone(App, \"Install\").postCore();\r\n    };\r\n    /**\r\n     * This method allows an app which is already insatlled to be uninstalled on a web\r\n     */\r\n    App.prototype.uninstall = function () {\r\n        return this.clone(App, \"Uninstall\").postCore();\r\n    };\r\n    /**\r\n     * This method allows an app which is already insatlled to be upgraded on a web\r\n     */\r\n    App.prototype.upgrade = function () {\r\n        return this.clone(App, \"Upgrade\").postCore();\r\n    };\r\n    /**\r\n     * This method removes an app from the app catalog.  It must be called in the context\r\n     * of the tenant app catalog web or it will fail.\r\n     */\r\n    App.prototype.remove = function () {\r\n        return this.clone(App, \"Remove\").postCore();\r\n    };\r\n    return App;\r\n}(SharePointQueryableInstance));\r\nexport { App };\r\n//# sourceMappingURL=appcatalog.js.map","import * as tslib_1 from \"tslib\";\r\nimport { Item } from \"./items\";\r\nimport { extend, getGUID, jsS, hOP, stringIsNullOrEmpty, objectDefinedNotNull, combine } from \"@pnp/common\";\r\nimport { SharePointQueryable } from \"./sharepointqueryable\";\r\nimport { metadata } from \"./utils/metadata\";\r\nimport { List } from \"./lists\";\r\nimport { odataUrlFrom } from \"./odata\";\r\nimport { Web } from \"./webs\";\r\nimport { extractWebUrl } from \"./utils/extractweburl\";\r\nimport { Site } from \"./site\";\r\n/**\r\n * Page promotion state\r\n */\r\nexport var PromotedState;\r\n(function (PromotedState) {\r\n    /**\r\n     * Regular client side page\r\n     */\r\n    PromotedState[PromotedState[\"NotPromoted\"] = 0] = \"NotPromoted\";\r\n    /**\r\n     * Page that will be promoted as news article after publishing\r\n     */\r\n    PromotedState[PromotedState[\"PromoteOnPublish\"] = 1] = \"PromoteOnPublish\";\r\n    /**\r\n     * Page that is promoted as news article\r\n     */\r\n    PromotedState[PromotedState[\"Promoted\"] = 2] = \"Promoted\";\r\n})(PromotedState || (PromotedState = {}));\r\n/**\r\n * Gets the next order value 1 based for the provided collection\r\n *\r\n * @param collection Collection of orderable things\r\n */\r\nfunction getNextOrder(collection) {\r\n    if (collection.length < 1) {\r\n        return 1;\r\n    }\r\n    return Math.max.apply(null, collection.map(function (i) { return i.order; })) + 1;\r\n}\r\n/**\r\n * Normalizes the order value for all the sections, columns, and controls to be 1 based and stepped (1, 2, 3...)\r\n *\r\n * @param collection The collection to normalize\r\n */\r\nfunction reindex(collection) {\r\n    for (var i = 0; i < collection.length; i++) {\r\n        collection[i].order = i + 1;\r\n        if (hOP(collection[i], \"columns\")) {\r\n            reindex(collection[i].columns);\r\n        }\r\n        else if (hOP(collection[i], \"controls\")) {\r\n            reindex(collection[i].controls);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Represents the data and methods associated with client side \"modern\" pages\r\n */\r\nvar ClientSidePage = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ClientSidePage, _super);\r\n    /**\r\n     * PLEASE DON'T USE THIS CONSTRUCTOR DIRECTLY\r\n     *\r\n     */\r\n    function ClientSidePage(baseUrl, path, json, noInit, sections, commentsDisabled) {\r\n        if (noInit === void 0) { noInit = false; }\r\n        if (sections === void 0) { sections = []; }\r\n        if (commentsDisabled === void 0) { commentsDisabled = false; }\r\n        var _this = _super.call(this, baseUrl, path) || this;\r\n        _this.json = json;\r\n        _this.sections = sections;\r\n        _this.commentsDisabled = commentsDisabled;\r\n        _this._bannerImageDirty = false;\r\n        // ensure we have a good url to build on for the pages api\r\n        if (typeof baseUrl === \"string\") {\r\n            _this._parentUrl = \"\";\r\n            _this._url = combine(extractWebUrl(baseUrl), path);\r\n        }\r\n        else {\r\n            _this.extend(ClientSidePage.initFrom(baseUrl, null), path);\r\n        }\r\n        // set a default page settings slice\r\n        _this._pageSettings = { controlType: 0, pageSettingsSlice: { isDefaultDescription: true, isDefaultThumbnail: true } };\r\n        // set a default layout part\r\n        _this._layoutPart = ClientSidePage.getDefaultLayoutPart();\r\n        if (typeof json !== \"undefined\" && !noInit) {\r\n            _this.fromJSON(json);\r\n        }\r\n        return _this;\r\n    }\r\n    /**\r\n     * Creates a new blank page within the supplied library [does not work with batching]\r\n     *\r\n     * @param web Parent web in which we will create the page (we allow list here too matching the old api)\r\n     * @param pageName Filename of the page, such as \"page\"\r\n     * @param title The display title of the page\r\n     * @param pageLayoutType Layout type of the page to use\r\n     */\r\n    ClientSidePage.create = function (web, pageName, title, pageLayoutType) {\r\n        if (pageLayoutType === void 0) { pageLayoutType = \"Article\"; }\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var pageInitData, newPage;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        // patched because previously we used the full page name with the .aspx at the end\r\n                        // this allows folk's existing code to work after the re-write to the new API\r\n                        pageName = pageName.replace(/\\.aspx$/i, \"\");\r\n                        return [4 /*yield*/, ClientSidePage.initFrom(web, \"_api/sitepages/pages\").postCore({\r\n                                body: jsS(Object.assign(metadata(\"SP.Publishing.SitePage\"), {\r\n                                    PageLayoutType: pageLayoutType,\r\n                                })),\r\n                            })];\r\n                    case 1:\r\n                        pageInitData = _a.sent();\r\n                        newPage = new ClientSidePage(web, \"\", pageInitData);\r\n                        // newPage.authors = [currentUserLogin.UserPrincipalName];\r\n                        newPage.title = pageName;\r\n                        return [4 /*yield*/, newPage.save(false)];\r\n                    case 2:\r\n                        _a.sent();\r\n                        newPage.title = title;\r\n                        return [2 /*return*/, newPage];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Creates a new ClientSidePage instance from the provided html content string\r\n     *\r\n     * @param html HTML markup representing the page\r\n     */\r\n    ClientSidePage.fromFile = function (file) {\r\n        return file.getItem().then(function (i) {\r\n            var page = new ClientSidePage(extractWebUrl(file.toUrl()), \"\", { Id: i.Id }, true);\r\n            return page.configureFrom(file).load();\r\n        });\r\n    };\r\n    ClientSidePage.getDefaultLayoutPart = function () {\r\n        return {\r\n            dataVersion: \"1.4\",\r\n            description: \"Title Region Description\",\r\n            id: \"cbe7b0a9-3504-44dd-a3a3-0e5cacd07788\",\r\n            instanceId: \"cbe7b0a9-3504-44dd-a3a3-0e5cacd07788\",\r\n            properties: {\r\n                authors: [],\r\n                layoutType: \"FullWidthImage\",\r\n                showPublishDate: false,\r\n                showTopicHeader: false,\r\n                textAlignment: \"Left\",\r\n                title: \"\",\r\n                topicHeader: \"\",\r\n            },\r\n            serverProcessedContent: { htmlStrings: {}, searchablePlainTexts: {}, imageSources: {}, links: {} },\r\n            title: \"Title area\",\r\n        };\r\n    };\r\n    ClientSidePage.initFrom = function (o, url) {\r\n        return (new ClientSidePage(extractWebUrl(o.toUrl()), url)).configureFrom(o);\r\n    };\r\n    Object.defineProperty(ClientSidePage.prototype, \"pageLayout\", {\r\n        get: function () {\r\n            return this.json.PageLayoutType;\r\n        },\r\n        set: function (value) {\r\n            this.json.PageLayoutType = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ClientSidePage.prototype, \"bannerImageUrl\", {\r\n        get: function () {\r\n            return this.json.BannerImageUrl;\r\n        },\r\n        set: function (value) {\r\n            this.json.BannerImageUrl = value;\r\n            this._bannerImageDirty = true;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ClientSidePage.prototype, \"bannerImageSourceType\", {\r\n        get: function () {\r\n            return this._layoutPart.properties.imageSourceType;\r\n        },\r\n        set: function (value) {\r\n            this._layoutPart.properties.imageSourceType = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ClientSidePage.prototype, \"topicHeader\", {\r\n        get: function () {\r\n            return objectDefinedNotNull(this.json.TopicHeader) ? this.json.TopicHeader : \"\";\r\n        },\r\n        set: function (value) {\r\n            this.json.TopicHeader = value;\r\n            this._layoutPart.properties.topicHeader = value;\r\n            if (stringIsNullOrEmpty(value)) {\r\n                this.showTopicHeader = false;\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ClientSidePage.prototype, \"title\", {\r\n        // public get authors(): string[] {\r\n        //     return this._layoutPart.properties.authorByline;\r\n        // }\r\n        // public set authors(value: string[]) {\r\n        //     this.json.AuthorByline = value;\r\n        //     this._layoutPart.properties.authorByline = value;\r\n        //     this._layoutPart.properties.authors = null;\r\n        // }\r\n        get: function () {\r\n            return this._layoutPart.properties.title;\r\n        },\r\n        set: function (value) {\r\n            this.json.Title = value;\r\n            this._layoutPart.properties.title = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ClientSidePage.prototype, \"layoutType\", {\r\n        get: function () {\r\n            return this._layoutPart.properties.layoutType;\r\n        },\r\n        set: function (value) {\r\n            this._layoutPart.properties.layoutType = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ClientSidePage.prototype, \"headerTextAlignment\", {\r\n        get: function () {\r\n            return this._layoutPart.properties.textAlignment;\r\n        },\r\n        set: function (value) {\r\n            this._layoutPart.properties.textAlignment = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ClientSidePage.prototype, \"showTopicHeader\", {\r\n        get: function () {\r\n            return this._layoutPart.properties.showTopicHeader;\r\n        },\r\n        set: function (value) {\r\n            this._layoutPart.properties.showTopicHeader = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ClientSidePage.prototype, \"showPublishDate\", {\r\n        get: function () {\r\n            return this._layoutPart.properties.showPublishDate;\r\n        },\r\n        set: function (value) {\r\n            this._layoutPart.properties.showPublishDate = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Add a section to this page\r\n     */\r\n    ClientSidePage.prototype.addSection = function () {\r\n        var section = new CanvasSection(this, getNextOrder(this.sections));\r\n        this.sections.push(section);\r\n        return section;\r\n    };\r\n    ClientSidePage.prototype.fromJSON = function (pageData) {\r\n        this.json = pageData;\r\n        var canvasControls = JSON.parse(pageData.CanvasContent1);\r\n        var layouts = JSON.parse(pageData.LayoutWebpartsContent);\r\n        if (layouts && layouts.length > 0) {\r\n            this._layoutPart = layouts[0];\r\n        }\r\n        this.setControls(canvasControls);\r\n        return this;\r\n    };\r\n    /**\r\n     * Loads this page's content from the server\r\n     */\r\n    ClientSidePage.prototype.load = function () {\r\n        var _this = this;\r\n        // load item id, then load page data from new pages api\r\n        return this.getItem(\"Id\", \"CommentsDisabled\").then(function (item) {\r\n            return (new SharePointQueryable(_this, \"_api/sitepages/pages(\" + item.Id + \")\")).get().then(function (pageData) {\r\n                _this.commentsDisabled = item.CommentsDisabled;\r\n                return _this.fromJSON(pageData);\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Persists the content changes (sections, columns, and controls) [does not work with batching]\r\n     *\r\n     * @param publish If true the page is published, if false the changes are persisted to SharePoint but not published\r\n     */\r\n    ClientSidePage.prototype.save = function (publish) {\r\n        var _this = this;\r\n        if (publish === void 0) { publish = true; }\r\n        if (this.json.Id === null) {\r\n            throw Error(\"The id for this page is null. If you want to create a new page, please use ClientSidePage.Create\");\r\n        }\r\n        // we will chain our work on this promise\r\n        var promise = Promise.resolve({});\r\n        if (this._bannerImageDirty) {\r\n            // we have to do these gymnastics to set the banner image url\r\n            promise = promise.then(function (_) { return new Promise(function (resolve, reject) {\r\n                var origImgUrl = _this.json.BannerImageUrl;\r\n                var site = new Site(extractWebUrl(_this.toUrl()));\r\n                var web = new Web(extractWebUrl(_this.toUrl()));\r\n                var imgFile = web.getFileByServerRelativePath(origImgUrl);\r\n                var siteId = \"\";\r\n                var webId = \"\";\r\n                var imgId = \"\";\r\n                var listId = \"\";\r\n                var webUrl = \"\";\r\n                Promise.all([\r\n                    site.select(\"Id\", \"Url\").get().then(function (r) { return siteId = r.Id; }),\r\n                    web.select(\"Id\", \"Url\").get().then(function (r) { webId = r.Id; webUrl = r.Url; }),\r\n                    imgFile.listItemAllFields.select(\"UniqueId\", \"ParentList/Id\").expand(\"ParentList\").get().then(function (r) { imgId = r.UniqueId; listId = r.ParentList.Id; }),\r\n                ]).then(function () {\r\n                    var f = new SharePointQueryable(webUrl, \"_layouts/15/getpreview.ashx\");\r\n                    f.query.set(\"guidSite\", \"\" + siteId);\r\n                    f.query.set(\"guidWeb\", \"\" + webId);\r\n                    f.query.set(\"guidFile\", \"\" + imgId);\r\n                    _this.bannerImageUrl = f.toUrlAndQuery();\r\n                    if (!objectDefinedNotNull(_this._layoutPart.serverProcessedContent)) {\r\n                        _this._layoutPart.serverProcessedContent = {};\r\n                    }\r\n                    _this._layoutPart.serverProcessedContent.imageSources = { imageSource: origImgUrl };\r\n                    if (!objectDefinedNotNull(_this._layoutPart.serverProcessedContent.customMetadata)) {\r\n                        _this._layoutPart.serverProcessedContent.customMetadata = {};\r\n                    }\r\n                    _this._layoutPart.serverProcessedContent.customMetadata.imageSource = {\r\n                        listId: listId,\r\n                        siteId: siteId,\r\n                        uniqueId: imgId,\r\n                        webId: webId,\r\n                    };\r\n                    _this._layoutPart.properties.webId = webId;\r\n                    _this._layoutPart.properties.siteId = siteId;\r\n                    _this._layoutPart.properties.listId = listId;\r\n                    _this._layoutPart.properties.uniqueId = imgId;\r\n                    resolve();\r\n                }).catch(reject);\r\n            }); });\r\n        }\r\n        // we need to update our authors if they have changed\r\n        // if (this._layoutPart.properties.authors === null && this._layoutPart.properties.authorByline.length > 0) {\r\n        //     promise = promise.then(_ => new Promise(resolve => {\r\n        //         const collector: any[] = [];\r\n        //         const userResolver = ClientSidePage.getPoster(\"/_api/SP.UI.ApplicationPages.ClientPeoplePickerWebServiceInterface.ClientPeoplePickerResolveUser\");\r\n        //         this._layoutPart.properties.authorByline.forEach(async author => {\r\n        //             const userData = await userResolver.postCore({\r\n        //                 body: jsS({\r\n        //                     queryParams: {\r\n        //                         AllowEmailAddresses: false,\r\n        //                         MaximumEntitySuggestions: 1,\r\n        //                         PrincipalSource: 15,\r\n        //                         PrincipalType: 1,\r\n        //                         QueryString: author,\r\n        //                         SharePointGroupID: 0,\r\n        //                     },\r\n        //                 }),\r\n        //             });\r\n        //             collector.push({\r\n        //                 email: userData.EntityData.Email,\r\n        //                 id: userData.Key,\r\n        //                 name: userData.DisplayName,\r\n        //                 role: \"\",\r\n        //                 upn: userData.EntityData.Email,\r\n        //             });\r\n        //         });\r\n        //         this._layoutPart.properties.authors = collector;\r\n        //         resolve();\r\n        //     }));\r\n        // }\r\n        // we try and check out the page for the user\r\n        if (!this.json.IsPageCheckedOutToCurrentUser) {\r\n            promise = promise.then(function (_) { return (ClientSidePage.initFrom(_this, \"_api/sitepages/pages(\" + _this.json.Id + \")/checkoutpage\")).postCore(); });\r\n        }\r\n        promise = promise.then(function (_) {\r\n            var saveBody = Object.assign(metadata(\"SP.Publishing.SitePage\"), {\r\n                AuthorByline: _this.json.AuthorByline || [],\r\n                BannerImageUrl: _this.bannerImageUrl,\r\n                CanvasContent1: _this.getCanvasContent1(),\r\n                LayoutWebpartsContent: _this.getLayoutWebpartsContent(),\r\n                Title: _this.title,\r\n                TopicHeader: _this.topicHeader,\r\n            });\r\n            var updater = ClientSidePage.initFrom(_this, \"_api/sitepages/pages(\" + _this.json.Id + \")/savepage\");\r\n            updater.configure({\r\n                headers: {\r\n                    \"if-match\": \"*\",\r\n                },\r\n            });\r\n            return updater.postCore({ body: jsS(saveBody) });\r\n        });\r\n        if (publish) {\r\n            promise = promise.then(function (_) { return (ClientSidePage.initFrom(_this, \"_api/sitepages/pages(\" + _this.json.Id + \")/publish\")).postCore(); }).then(function (r) {\r\n                if (r) {\r\n                    _this.json.IsPageCheckedOutToCurrentUser = false;\r\n                }\r\n            });\r\n        }\r\n        promise = promise.then(function (_) {\r\n            // these are post-save actions\r\n            _this._bannerImageDirty = false;\r\n        });\r\n        return promise;\r\n    };\r\n    ClientSidePage.prototype.discardPageCheckout = function () {\r\n        var _this = this;\r\n        if (this.json.Id === null) {\r\n            throw Error(\"The id for this page is null. If you want to create a new page, please use ClientSidePage.Create\");\r\n        }\r\n        return ClientSidePage.initFrom(this, \"_api/sitepages/pages(\" + this.json.Id + \")/discardPage\").postCore({\r\n            body: jsS(metadata(\"SP.Publishing.SitePage\")),\r\n        }).then(function (d) {\r\n            _this.fromJSON(d);\r\n        });\r\n    };\r\n    /**\r\n     * Enables comments on this page\r\n     */\r\n    ClientSidePage.prototype.enableComments = function () {\r\n        var _this = this;\r\n        return this.setCommentsOn(true).then(function (r) {\r\n            _this.commentsDisabled = false;\r\n            return r;\r\n        });\r\n    };\r\n    /**\r\n     * Disables comments on this page\r\n     */\r\n    ClientSidePage.prototype.disableComments = function () {\r\n        var _this = this;\r\n        return this.setCommentsOn(false).then(function (r) {\r\n            _this.commentsDisabled = true;\r\n            return r;\r\n        });\r\n    };\r\n    /**\r\n     * Finds a control by the specified instance id\r\n     *\r\n     * @param id Instance id of the control to find\r\n     */\r\n    ClientSidePage.prototype.findControlById = function (id) {\r\n        return this.findControl(function (c) { return c.id === id; });\r\n    };\r\n    /**\r\n     * Finds a control within this page's control tree using the supplied predicate\r\n     *\r\n     * @param predicate Takes a control and returns true or false, if true that control is returned by findControl\r\n     */\r\n    ClientSidePage.prototype.findControl = function (predicate) {\r\n        // check all sections\r\n        for (var i = 0; i < this.sections.length; i++) {\r\n            // check all columns\r\n            for (var j = 0; j < this.sections[i].columns.length; j++) {\r\n                // check all controls\r\n                for (var k = 0; k < this.sections[i].columns[j].controls.length; k++) {\r\n                    // check to see if the predicate likes this control\r\n                    if (predicate(this.sections[i].columns[j].controls[k])) {\r\n                        return this.sections[i].columns[j].controls[k];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        // we found nothing so give nothing back\r\n        return null;\r\n    };\r\n    /**\r\n     * Like the modern site page\r\n     */\r\n    ClientSidePage.prototype.like = function () {\r\n        return this.getItem().then(function (i) {\r\n            return i.like();\r\n        });\r\n    };\r\n    /**\r\n     * Unlike the modern site page\r\n     */\r\n    ClientSidePage.prototype.unlike = function () {\r\n        return this.getItem().then(function (i) {\r\n            return i.unlike();\r\n        });\r\n    };\r\n    /**\r\n     * Get the liked by information for a modern site page\r\n     */\r\n    ClientSidePage.prototype.getLikedByInformation = function () {\r\n        return this.getItem().then(function (i) {\r\n            return i.getLikedByInformation();\r\n        });\r\n    };\r\n    /**\r\n     * Creates a copy of this page\r\n     *\r\n     * @param web The web where we will create the copy\r\n     * @param pageName The file name of the new page\r\n     * @param title The title of the new page\r\n     * @param publish If true the page will be published\r\n     */\r\n    ClientSidePage.prototype.copyPage = function (web, pageName, title, publish) {\r\n        if (publish === void 0) { publish = true; }\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var page;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, ClientSidePage.create(web, pageName, title, this.pageLayout)];\r\n                    case 1:\r\n                        page = _a.sent();\r\n                        page.setControls(this.getControls());\r\n                        return [4 /*yield*/, page.save(publish)];\r\n                    case 2:\r\n                        _a.sent();\r\n                        return [2 /*return*/, page];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Sets the modern page banner image\r\n     *\r\n     * @param url Url of the image to display\r\n     * @param altText Alt text to describe the image\r\n     * @param bannerProps Additional properties to control display of the banner\r\n     */\r\n    ClientSidePage.prototype.setBannerImage = function (url, props) {\r\n        this.bannerImageUrl = url;\r\n        this.bannerImageSourceType = 2; // this seems to always be true, so default?\r\n        if (objectDefinedNotNull(props)) {\r\n            if (hOP(props, \"translateX\")) {\r\n                this._layoutPart.properties.translateX = props.translateX;\r\n            }\r\n            if (hOP(props, \"translateY\")) {\r\n                this._layoutPart.properties.translateY = props.translateY;\r\n            }\r\n            if (hOP(props, \"imageSourceType\")) {\r\n                this.bannerImageSourceType = props.imageSourceType;\r\n            }\r\n            if (hOP(props, \"altText\")) {\r\n                this._layoutPart.properties.altText = props.altText;\r\n            }\r\n        }\r\n    };\r\n    ClientSidePage.prototype.getCanvasContent1 = function () {\r\n        return JSON.stringify(this.getControls());\r\n    };\r\n    ClientSidePage.prototype.getLayoutWebpartsContent = function () {\r\n        if (this._layoutPart) {\r\n            return JSON.stringify([this._layoutPart]);\r\n        }\r\n        else {\r\n            return JSON.stringify(null);\r\n        }\r\n    };\r\n    ClientSidePage.prototype.setControls = function (controls) {\r\n        if (controls && controls.length) {\r\n            for (var i = 0; i < controls.length; i++) {\r\n                // if no control type is present this is a column which we give type 0 to let us process it\r\n                var controlType = hOP(controls[i], \"controlType\") ? controls[i].controlType : 0;\r\n                switch (controlType) {\r\n                    case 0:\r\n                        // empty canvas column or page settings\r\n                        if (hOP(controls[i], \"pageSettingsSlice\")) {\r\n                            this._pageSettings = controls[i];\r\n                        }\r\n                        else {\r\n                            // we have an empty column\r\n                            this.mergeColumnToTree(new CanvasColumn(controls[i]));\r\n                        }\r\n                        break;\r\n                    case 3:\r\n                        var part = new ClientSideWebpart(controls[i]);\r\n                        this.mergePartToTree(part, part.data.position);\r\n                        break;\r\n                    case 4:\r\n                        var textData = controls[i];\r\n                        var text = new ClientSideText(textData.innerHTML, textData);\r\n                        this.mergePartToTree(text, text.data.position);\r\n                        break;\r\n                }\r\n            }\r\n            reindex(this.sections);\r\n        }\r\n    };\r\n    ClientSidePage.prototype.getControls = function () {\r\n        var _this = this;\r\n        // reindex things\r\n        reindex(this.sections);\r\n        // rollup the control changes\r\n        var canvasData = [];\r\n        this.sections.forEach(function (section) {\r\n            section.columns.forEach(function (column) {\r\n                if (column.controls.length < 1) {\r\n                    // empty column\r\n                    canvasData.push({\r\n                        displayMode: column.data.displayMode,\r\n                        emphasis: _this.getEmphasisObj(section.emphasis),\r\n                        position: column.data.position,\r\n                    });\r\n                }\r\n                else {\r\n                    column.controls.forEach(function (control) {\r\n                        control.data.emphasis = _this.getEmphasisObj(section.emphasis);\r\n                        canvasData.push(control.data);\r\n                    });\r\n                }\r\n            });\r\n        });\r\n        canvasData.push(this._pageSettings);\r\n        return canvasData;\r\n    };\r\n    ClientSidePage.prototype.getEmphasisObj = function (value) {\r\n        if (value < 1 || value > 3) {\r\n            return {};\r\n        }\r\n        return { zoneEmphasis: value };\r\n    };\r\n    /**\r\n     * Sets the comments flag for a page\r\n     *\r\n     * @param on If true comments are enabled, false they are disabled\r\n     */\r\n    ClientSidePage.prototype.setCommentsOn = function (on) {\r\n        return this.getItem().then(function (i) {\r\n            var updater = new Item(i, \"SetCommentsDisabled(\" + !on + \")\");\r\n            return updater.update({});\r\n        });\r\n    };\r\n    /**\r\n     * Merges the control into the tree of sections and columns for this page\r\n     *\r\n     * @param control The control to merge\r\n     */\r\n    ClientSidePage.prototype.mergePartToTree = function (control, positionData) {\r\n        var section = null;\r\n        var column = null;\r\n        var sectionFactor = 12;\r\n        var sectionIndex = 0;\r\n        var zoneIndex = 0;\r\n        // handle case where we don't have position data (shouldn't happen?)\r\n        if (positionData) {\r\n            if (hOP(positionData, \"zoneIndex\")) {\r\n                zoneIndex = positionData.zoneIndex;\r\n            }\r\n            if (hOP(positionData, \"sectionIndex\")) {\r\n                sectionIndex = positionData.sectionIndex;\r\n            }\r\n            if (hOP(positionData, \"sectionFactor\")) {\r\n                sectionFactor = positionData.sectionFactor;\r\n            }\r\n        }\r\n        var sections = this.sections.filter(function (s) { return s.order === zoneIndex; });\r\n        if (sections.length < 1) {\r\n            section = new CanvasSection(this, zoneIndex);\r\n            this.sections.push(section);\r\n        }\r\n        else {\r\n            section = sections[0];\r\n        }\r\n        section.emphasis = control.data.emphasis.zoneEmphasis || 0;\r\n        var columns = section.columns.filter(function (c) { return c.order === sectionIndex; });\r\n        if (columns.length < 1) {\r\n            column = section.addColumn(sectionFactor);\r\n        }\r\n        else {\r\n            column = columns[0];\r\n        }\r\n        control.column = column;\r\n        column.addControl(control);\r\n    };\r\n    /**\r\n     * Merges the supplied column into the tree\r\n     *\r\n     * @param column Column to merge\r\n     * @param position The position data for the column\r\n     */\r\n    ClientSidePage.prototype.mergeColumnToTree = function (column) {\r\n        var order = hOP(column.data, \"position\") && hOP(column.data.position, \"zoneIndex\") ? column.data.position.zoneIndex : 0;\r\n        var section = null;\r\n        var sections = this.sections.filter(function (s) { return s.order === order; });\r\n        if (sections.length < 1) {\r\n            section = new CanvasSection(this, order);\r\n            section.emphasis = column.data.emphasis.zoneEmphasis || 0;\r\n            this.sections.push(section);\r\n        }\r\n        else {\r\n            section = sections[0];\r\n        }\r\n        column.section = section;\r\n        section.columns.push(column);\r\n    };\r\n    ClientSidePage.prototype.getItem = function () {\r\n        var _this = this;\r\n        var selects = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            selects[_i] = arguments[_i];\r\n        }\r\n        var initer = ClientSidePage.initFrom(this, \"/_api/lists/EnsureClientRenderedSitePagesLibrary\").select(\"EnableModeration\", \"EnableMinorVersions\", \"Id\");\r\n        return initer.postCore().then(function (listData) {\r\n            var item = (new List(listData[\"odata.id\"])).configureFrom(_this).items.getById(_this.json.Id);\r\n            return item.select.apply(item, selects).get().then(function (d) {\r\n                return extend((new Item(odataUrlFrom(d))).configureFrom(_this), d);\r\n            });\r\n        });\r\n    };\r\n    return ClientSidePage;\r\n}(SharePointQueryable));\r\nexport { ClientSidePage };\r\nvar CanvasSection = /** @class */ (function () {\r\n    function CanvasSection(page, order, columns, _emphasis) {\r\n        if (columns === void 0) { columns = []; }\r\n        if (_emphasis === void 0) { _emphasis = 0; }\r\n        this.page = page;\r\n        this.columns = columns;\r\n        this._emphasis = _emphasis;\r\n        this._memId = getGUID();\r\n        this._order = order;\r\n    }\r\n    Object.defineProperty(CanvasSection.prototype, \"order\", {\r\n        get: function () {\r\n            return this._order;\r\n        },\r\n        set: function (value) {\r\n            this._order = value;\r\n            for (var i = 0; i < this.columns.length; i++) {\r\n                this.columns[i].data.position.zoneIndex = value;\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CanvasSection.prototype, \"defaultColumn\", {\r\n        /**\r\n         * Default column (this.columns[0]) for this section\r\n         */\r\n        get: function () {\r\n            if (this.columns.length < 1) {\r\n                this.addColumn(12);\r\n            }\r\n            return this.columns[0];\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Adds a new column to this section\r\n     */\r\n    CanvasSection.prototype.addColumn = function (factor) {\r\n        var column = new CanvasColumn();\r\n        column.section = this;\r\n        column.data.position.zoneIndex = this.order;\r\n        column.data.position.sectionFactor = factor;\r\n        column.order = getNextOrder(this.columns);\r\n        this.columns.push(column);\r\n        return column;\r\n    };\r\n    /**\r\n     * Adds a control to the default column for this section\r\n     *\r\n     * @param control Control to add to the default column\r\n     */\r\n    CanvasSection.prototype.addControl = function (control) {\r\n        this.defaultColumn.addControl(control);\r\n        return this;\r\n    };\r\n    Object.defineProperty(CanvasSection.prototype, \"emphasis\", {\r\n        get: function () {\r\n            return this._emphasis;\r\n        },\r\n        set: function (value) {\r\n            this._emphasis = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Removes this section and all contained columns and controls from the collection\r\n     */\r\n    CanvasSection.prototype.remove = function () {\r\n        var _this = this;\r\n        this.page.sections = this.page.sections.filter(function (section) { return section._memId !== _this._memId; });\r\n        reindex(this.page.sections);\r\n    };\r\n    return CanvasSection;\r\n}());\r\nexport { CanvasSection };\r\nvar CanvasColumn = /** @class */ (function () {\r\n    function CanvasColumn(json, controls) {\r\n        if (json === void 0) { json = JSON.parse(JSON.stringify(CanvasColumn.Default)); }\r\n        if (controls === void 0) { controls = []; }\r\n        this.json = json;\r\n        this.controls = controls;\r\n        this._section = null;\r\n        this._memId = getGUID();\r\n    }\r\n    Object.defineProperty(CanvasColumn.prototype, \"data\", {\r\n        get: function () {\r\n            return this.json;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CanvasColumn.prototype, \"section\", {\r\n        get: function () {\r\n            return this._section;\r\n        },\r\n        set: function (section) {\r\n            this._section = section;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CanvasColumn.prototype, \"order\", {\r\n        get: function () {\r\n            return this.data.position.sectionIndex;\r\n        },\r\n        set: function (value) {\r\n            this.data.position.sectionIndex = value;\r\n            for (var i = 0; i < this.controls.length; i++) {\r\n                this.controls[i].data.position.zoneIndex = this.data.position.zoneIndex;\r\n                this.controls[i].data.position.sectionIndex = value;\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CanvasColumn.prototype, \"factor\", {\r\n        get: function () {\r\n            return this.data.position.sectionFactor;\r\n        },\r\n        set: function (value) {\r\n            this.data.position.sectionFactor = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    CanvasColumn.prototype.addControl = function (control) {\r\n        control.column = this;\r\n        this.controls.push(control);\r\n        return this;\r\n    };\r\n    CanvasColumn.prototype.getControl = function (index) {\r\n        return this.controls[index];\r\n    };\r\n    CanvasColumn.prototype.remove = function () {\r\n        var _this = this;\r\n        this.section.columns = this.section.columns.filter(function (column) { return column._memId !== _this._memId; });\r\n        reindex(this.section.columns);\r\n    };\r\n    CanvasColumn.Default = {\r\n        controlType: 0,\r\n        displayMode: 2,\r\n        emphasis: {},\r\n        position: {\r\n            layoutIndex: 1,\r\n            sectionFactor: 12,\r\n            sectionIndex: 1,\r\n            zoneIndex: 1,\r\n        },\r\n    };\r\n    return CanvasColumn;\r\n}());\r\nexport { CanvasColumn };\r\nvar ColumnControl = /** @class */ (function () {\r\n    function ColumnControl(json) {\r\n        this.json = json;\r\n    }\r\n    Object.defineProperty(ColumnControl.prototype, \"id\", {\r\n        get: function () {\r\n            return this.json.id;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ColumnControl.prototype, \"data\", {\r\n        get: function () {\r\n            return this.json;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ColumnControl.prototype, \"column\", {\r\n        get: function () {\r\n            return this._column;\r\n        },\r\n        set: function (value) {\r\n            this._column = value;\r\n            this.onColumnChange(this._column);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ColumnControl.prototype.remove = function () {\r\n        var _this = this;\r\n        this.column.controls = this.column.controls.filter(function (control) { return control.id !== _this.id; });\r\n        reindex(this.column.controls);\r\n    };\r\n    ColumnControl.prototype.setData = function (data) {\r\n        this.json = data;\r\n    };\r\n    return ColumnControl;\r\n}());\r\nexport { ColumnControl };\r\nvar ClientSideText = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ClientSideText, _super);\r\n    function ClientSideText(text, json) {\r\n        if (json === void 0) { json = JSON.parse(JSON.stringify(ClientSideText.Default)); }\r\n        var _this = this;\r\n        if (stringIsNullOrEmpty(json.id)) {\r\n            json.id = getGUID();\r\n            json.anchorComponentId = json.id;\r\n        }\r\n        _this = _super.call(this, json) || this;\r\n        _this.text = text;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(ClientSideText.prototype, \"text\", {\r\n        get: function () {\r\n            return this.data.innerHTML;\r\n        },\r\n        set: function (value) {\r\n            if (!value.startsWith(\"<p>\")) {\r\n                value = \"<p>\" + value + \"</p>\";\r\n            }\r\n            this.data.innerHTML = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ClientSideText.prototype, \"order\", {\r\n        get: function () {\r\n            return this.data.position.controlIndex;\r\n        },\r\n        set: function (value) {\r\n            this.data.position.controlIndex = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ClientSideText.prototype.onColumnChange = function (col) {\r\n        this.data.position.sectionFactor = col.factor;\r\n        this.data.position.controlIndex = getNextOrder(col.controls);\r\n        this.data.position.zoneIndex = col.data.position.zoneIndex;\r\n        this.data.position.sectionIndex = col.order;\r\n    };\r\n    ClientSideText.Default = {\r\n        addedFromPersistedData: false,\r\n        anchorComponentId: \"\",\r\n        controlType: 4,\r\n        displayMode: 2,\r\n        editorType: \"CKEditor\",\r\n        emphasis: {},\r\n        id: \"\",\r\n        innerHTML: \"\",\r\n        position: {\r\n            controlIndex: 1,\r\n            layoutIndex: 1,\r\n            sectionFactor: 12,\r\n            sectionIndex: 1,\r\n            zoneIndex: 1,\r\n        },\r\n    };\r\n    return ClientSideText;\r\n}(ColumnControl));\r\nexport { ClientSideText };\r\nvar ClientSideWebpart = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ClientSideWebpart, _super);\r\n    function ClientSideWebpart(json) {\r\n        if (json === void 0) { json = JSON.parse(JSON.stringify(ClientSideWebpart.Default)); }\r\n        return _super.call(this, json) || this;\r\n    }\r\n    ClientSideWebpart.fromComponentDef = function (definition) {\r\n        var part = new ClientSideWebpart();\r\n        part.import(definition);\r\n        return part;\r\n    };\r\n    Object.defineProperty(ClientSideWebpart.prototype, \"title\", {\r\n        get: function () {\r\n            return this.data.webPartData.title;\r\n        },\r\n        set: function (value) {\r\n            this.data.webPartData.title = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ClientSideWebpart.prototype, \"description\", {\r\n        get: function () {\r\n            return this.data.webPartData.description;\r\n        },\r\n        set: function (value) {\r\n            this.data.webPartData.description = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ClientSideWebpart.prototype, \"order\", {\r\n        get: function () {\r\n            return this.data.position.controlIndex;\r\n        },\r\n        set: function (value) {\r\n            this.data.position.controlIndex = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ClientSideWebpart.prototype, \"height\", {\r\n        get: function () {\r\n            return this.data.reservedHeight;\r\n        },\r\n        set: function (value) {\r\n            this.data.reservedHeight = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ClientSideWebpart.prototype, \"width\", {\r\n        get: function () {\r\n            return this.data.reservedWidth;\r\n        },\r\n        set: function (value) {\r\n            this.data.reservedWidth = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ClientSideWebpart.prototype, \"dataVersion\", {\r\n        get: function () {\r\n            return this.data.webPartData.dataVersion;\r\n        },\r\n        set: function (value) {\r\n            this.data.webPartData.dataVersion = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ClientSideWebpart.prototype.setProperties = function (properties) {\r\n        this.data.webPartData.properties = extend(this.data.webPartData.properties, properties);\r\n        return this;\r\n    };\r\n    ClientSideWebpart.prototype.getProperties = function () {\r\n        return this.data.webPartData.properties;\r\n    };\r\n    ClientSideWebpart.prototype.onColumnChange = function (col) {\r\n        this.data.position.sectionFactor = col.factor;\r\n        this.data.position.controlIndex = getNextOrder(col.controls);\r\n        this.data.position.zoneIndex = col.data.position.zoneIndex;\r\n        this.data.position.sectionIndex = col.data.position.sectionIndex;\r\n    };\r\n    ClientSideWebpart.prototype.import = function (component) {\r\n        var id = getGUID();\r\n        var componendId = component.Id.replace(/^\\{|\\}$/g, \"\").toLowerCase();\r\n        var manifest = JSON.parse(component.Manifest);\r\n        var preconfiguredEntries = manifest.preconfiguredEntries[0];\r\n        this.setData(Object.assign({}, this.data, {\r\n            id: id,\r\n            webPartData: {\r\n                dataVersion: \"1.0\",\r\n                description: preconfiguredEntries.description.default,\r\n                id: componendId,\r\n                instanceId: id,\r\n                properties: preconfiguredEntries.properties,\r\n                title: preconfiguredEntries.title.default,\r\n            },\r\n            webPartId: componendId,\r\n        }));\r\n    };\r\n    ClientSideWebpart.Default = {\r\n        addedFromPersistedData: false,\r\n        controlType: 3,\r\n        displayMode: 2,\r\n        emphasis: {},\r\n        id: null,\r\n        position: {\r\n            controlIndex: 1,\r\n            sectionFactor: 12,\r\n            sectionIndex: 1,\r\n            zoneIndex: 1,\r\n        },\r\n        reservedHeight: 500,\r\n        reservedWidth: 500,\r\n        webPartData: null,\r\n        webPartId: null,\r\n    };\r\n    return ClientSideWebpart;\r\n}(ColumnControl));\r\nexport { ClientSideWebpart };\r\n//# sourceMappingURL=clientsidepages.js.map","import * as tslib_1 from \"tslib\";\r\nimport { ODataBatch } from \"@pnp/odata\";\r\nimport { getGUID, isUrlAbsolute, combine, mergeHeaders, hOP } from \"@pnp/common\";\r\nimport { Logger } from \"@pnp/logging\";\r\nimport { SPHttpClient } from \"./net/sphttpclient\";\r\nimport { SPRuntimeConfig } from \"./config/splibconfig\";\r\nimport { toAbsoluteUrl } from \"./utils/toabsoluteurl\";\r\n/**\r\n * Manages a batch of OData operations\r\n */\r\nvar SPBatch = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SPBatch, _super);\r\n    function SPBatch(baseUrl) {\r\n        var _this = _super.call(this) || this;\r\n        _this.baseUrl = baseUrl;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Parses the response from a batch request into an array of Response instances\r\n     *\r\n     * @param body Text body of the response from the batch request\r\n     */\r\n    SPBatch.ParseResponse = function (body) {\r\n        return new Promise(function (resolve, reject) {\r\n            var responses = [];\r\n            var header = \"--batchresponse_\";\r\n            // Ex. \"HTTP/1.1 500 Internal Server Error\"\r\n            var statusRegExp = new RegExp(\"^HTTP/[0-9.]+ +([0-9]+) +(.*)\", \"i\");\r\n            var lines = body.split(\"\\n\");\r\n            var state = \"batch\";\r\n            var status;\r\n            var statusText;\r\n            for (var i = 0; i < lines.length; ++i) {\r\n                var line = lines[i];\r\n                switch (state) {\r\n                    case \"batch\":\r\n                        if (line.substr(0, header.length) === header) {\r\n                            state = \"batchHeaders\";\r\n                        }\r\n                        else {\r\n                            if (line.trim() !== \"\") {\r\n                                throw Error(\"Invalid response, line \" + i);\r\n                            }\r\n                        }\r\n                        break;\r\n                    case \"batchHeaders\":\r\n                        if (line.trim() === \"\") {\r\n                            state = \"status\";\r\n                        }\r\n                        break;\r\n                    case \"status\":\r\n                        var parts = statusRegExp.exec(line);\r\n                        if (parts.length !== 3) {\r\n                            throw Error(\"Invalid status, line \" + i);\r\n                        }\r\n                        status = parseInt(parts[1], 10);\r\n                        statusText = parts[2];\r\n                        state = \"statusHeaders\";\r\n                        break;\r\n                    case \"statusHeaders\":\r\n                        if (line.trim() === \"\") {\r\n                            state = \"body\";\r\n                        }\r\n                        break;\r\n                    case \"body\":\r\n                        responses.push((status === 204) ? new Response() : new Response(line, { status: status, statusText: statusText }));\r\n                        state = \"batch\";\r\n                        break;\r\n                }\r\n            }\r\n            if (state !== \"status\") {\r\n                reject(Error(\"Unexpected end of input\"));\r\n            }\r\n            resolve(responses);\r\n        });\r\n    };\r\n    SPBatch.prototype.executeImpl = function () {\r\n        var _this = this;\r\n        Logger.write(\"[\" + this.batchId + \"] (\" + (new Date()).getTime() + \") Executing batch with \" + this.requests.length + \" requests.\", 1 /* Info */);\r\n        // if we don't have any requests, don't bother sending anything\r\n        // this could be due to caching further upstream, or just an empty batch\r\n        if (this.requests.length < 1) {\r\n            Logger.write(\"Resolving empty batch.\", 1 /* Info */);\r\n            return Promise.resolve();\r\n        }\r\n        // creating the client here allows the url to be populated for nodejs client as well as potentially\r\n        // any other hacks needed for other types of clients. Essentially allows the absoluteRequestUrl\r\n        // below to be correct\r\n        var client = new SPHttpClient();\r\n        // due to timing we need to get the absolute url here so we can use it for all the individual requests\r\n        // and for sending the entire batch\r\n        return toAbsoluteUrl(this.baseUrl).then(function (absoluteRequestUrl) {\r\n            // build all the requests, send them, pipe results in order to parsers\r\n            var batchBody = [];\r\n            var currentChangeSetId = \"\";\r\n            for (var i = 0; i < _this.requests.length; i++) {\r\n                var reqInfo = _this.requests[i];\r\n                if (reqInfo.method === \"GET\") {\r\n                    if (currentChangeSetId.length > 0) {\r\n                        // end an existing change set\r\n                        batchBody.push(\"--changeset_\" + currentChangeSetId + \"--\\n\\n\");\r\n                        currentChangeSetId = \"\";\r\n                    }\r\n                    batchBody.push(\"--batch_\" + _this.batchId + \"\\n\");\r\n                }\r\n                else {\r\n                    if (currentChangeSetId.length < 1) {\r\n                        // start new change set\r\n                        currentChangeSetId = getGUID();\r\n                        batchBody.push(\"--batch_\" + _this.batchId + \"\\n\");\r\n                        batchBody.push(\"Content-Type: multipart/mixed; boundary=\\\"changeset_\" + currentChangeSetId + \"\\\"\\n\\n\");\r\n                    }\r\n                    batchBody.push(\"--changeset_\" + currentChangeSetId + \"\\n\");\r\n                }\r\n                // common batch part prefix\r\n                batchBody.push(\"Content-Type: application/http\\n\");\r\n                batchBody.push(\"Content-Transfer-Encoding: binary\\n\\n\");\r\n                var headers = new Headers();\r\n                // this is the url of the individual request within the batch\r\n                var url = isUrlAbsolute(reqInfo.url) ? reqInfo.url : combine(absoluteRequestUrl, reqInfo.url);\r\n                Logger.write(\"[\" + _this.batchId + \"] (\" + (new Date()).getTime() + \") Adding request \" + reqInfo.method + \" \" + url + \" to batch.\", 0 /* Verbose */);\r\n                if (reqInfo.method !== \"GET\") {\r\n                    var method = reqInfo.method;\r\n                    var castHeaders = reqInfo.options.headers;\r\n                    if (hOP(reqInfo, \"options\") && hOP(reqInfo.options, \"headers\") && castHeaders[\"X-HTTP-Method\"] !== undefined) {\r\n                        method = castHeaders[\"X-HTTP-Method\"];\r\n                        delete castHeaders[\"X-HTTP-Method\"];\r\n                    }\r\n                    batchBody.push(method + \" \" + url + \" HTTP/1.1\\n\");\r\n                    headers.set(\"Content-Type\", \"application/json;odata=verbose;charset=utf-8\");\r\n                }\r\n                else {\r\n                    batchBody.push(reqInfo.method + \" \" + url + \" HTTP/1.1\\n\");\r\n                }\r\n                // merge global config headers\r\n                mergeHeaders(headers, SPRuntimeConfig.headers);\r\n                // merge per-request headers\r\n                if (reqInfo.options) {\r\n                    mergeHeaders(headers, reqInfo.options.headers);\r\n                }\r\n                // lastly we apply any default headers we need that may not exist\r\n                if (!headers.has(\"Accept\")) {\r\n                    headers.append(\"Accept\", \"application/json\");\r\n                }\r\n                if (!headers.has(\"Content-Type\")) {\r\n                    headers.append(\"Content-Type\", \"application/json;odata=verbose;charset=utf-8\");\r\n                }\r\n                if (!headers.has(\"X-ClientService-ClientTag\")) {\r\n                    headers.append(\"X-ClientService-ClientTag\", \"PnPCoreJS:@pnp-1.3.2\");\r\n                }\r\n                // write headers into batch body\r\n                headers.forEach(function (value, name) {\r\n                    batchBody.push(name + \": \" + value + \"\\n\");\r\n                });\r\n                batchBody.push(\"\\n\");\r\n                if (reqInfo.options.body) {\r\n                    batchBody.push(reqInfo.options.body + \"\\n\\n\");\r\n                }\r\n            }\r\n            if (currentChangeSetId.length > 0) {\r\n                // Close the changeset\r\n                batchBody.push(\"--changeset_\" + currentChangeSetId + \"--\\n\\n\");\r\n                currentChangeSetId = \"\";\r\n            }\r\n            batchBody.push(\"--batch_\" + _this.batchId + \"--\\n\");\r\n            var batchOptions = {\r\n                \"body\": batchBody.join(\"\"),\r\n                \"headers\": {\r\n                    \"Content-Type\": \"multipart/mixed; boundary=batch_\" + _this.batchId,\r\n                },\r\n                \"method\": \"POST\",\r\n            };\r\n            Logger.write(\"[\" + _this.batchId + \"] (\" + (new Date()).getTime() + \") Sending batch request.\", 1 /* Info */);\r\n            return client.fetch(combine(absoluteRequestUrl, \"/_api/$batch\"), batchOptions)\r\n                .then(function (r) { return r.text(); })\r\n                .then(SPBatch.ParseResponse)\r\n                .then(function (responses) {\r\n                if (responses.length !== _this.requests.length) {\r\n                    throw Error(\"Could not properly parse responses to match requests in batch.\");\r\n                }\r\n                Logger.write(\"[\" + _this.batchId + \"] (\" + (new Date()).getTime() + \") Resolving batched requests.\", 1 /* Info */);\r\n                return responses.reduce(function (chain, response, index) {\r\n                    var request = _this.requests[index];\r\n                    Logger.write(\"[\" + request.id + \"] (\" + (new Date()).getTime() + \") Resolving request in batch \" + _this.batchId + \".\", 1 /* Info */);\r\n                    return chain.then(function (_) { return request.parser.parse(response).then(request.resolve).catch(request.reject); });\r\n                }, Promise.resolve());\r\n            });\r\n        });\r\n    };\r\n    return SPBatch;\r\n}(ODataBatch));\r\nexport { SPBatch };\r\n//# sourceMappingURL=batch.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryableInstance, SharePointQueryableCollection, defaultPath } from \"./sharepointqueryable\";\r\nimport { jsS } from \"@pnp/common\";\r\n/**\r\n * Describes a collection of List objects\r\n *\r\n */\r\nvar Features = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Features, _super);\r\n    function Features() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Features_1 = Features;\r\n    /**\r\n     * Adds a new list to the collection\r\n     *\r\n     * @param id The Id of the feature (GUID)\r\n     * @param force If true the feature activation will be forced\r\n     */\r\n    Features.prototype.add = function (id, force) {\r\n        var _this = this;\r\n        if (force === void 0) { force = false; }\r\n        return this.clone(Features_1, \"add\").postCore({\r\n            body: jsS({\r\n                featdefScope: 0,\r\n                featureId: id,\r\n                force: force,\r\n            }),\r\n        }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                feature: _this.getById(id),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Gets a list from the collection by guid id\r\n     *\r\n     * @param id The Id of the feature (GUID)\r\n     */\r\n    Features.prototype.getById = function (id) {\r\n        var feature = new Feature(this);\r\n        feature.concat(\"('\" + id + \"')\");\r\n        return feature;\r\n    };\r\n    /**\r\n     * Removes (deactivates) a feature from the collection\r\n     *\r\n     * @param id The Id of the feature (GUID)\r\n     * @param force If true the feature deactivation will be forced\r\n     */\r\n    Features.prototype.remove = function (id, force) {\r\n        if (force === void 0) { force = false; }\r\n        return this.clone(Features_1, \"remove\").postCore({\r\n            body: jsS({\r\n                featureId: id,\r\n                force: force,\r\n            }),\r\n        });\r\n    };\r\n    var Features_1;\r\n    Features = Features_1 = tslib_1.__decorate([\r\n        defaultPath(\"features\")\r\n    ], Features);\r\n    return Features;\r\n}(SharePointQueryableCollection));\r\nexport { Features };\r\nvar Feature = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Feature, _super);\r\n    function Feature() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Removes (deactivates) a feature from the collection\r\n     *\r\n     * @param force If true the feature deactivation will be forced\r\n     */\r\n    Feature.prototype.deactivate = function (force) {\r\n        var _this = this;\r\n        if (force === void 0) { force = false; }\r\n        var removeDependency = this.addBatchDependency();\r\n        var idGet = new Feature(this).select(\"DefinitionId\");\r\n        return idGet.get().then(function (feature) {\r\n            var promise = _this.getParent(Features, _this.parentUrl, \"\", _this.batch).remove(feature.DefinitionId, force);\r\n            removeDependency();\r\n            return promise;\r\n        });\r\n    };\r\n    return Feature;\r\n}(SharePointQueryableInstance));\r\nexport { Feature };\r\n//# sourceMappingURL=features.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryable, SharePointQueryableInstance, defaultPath } from \"./sharepointqueryable\";\r\nimport { Web } from \"./webs\";\r\nimport { UserCustomActions } from \"./usercustomactions\";\r\nimport { SPBatch } from \"./batch\";\r\nimport { Features } from \"./features\";\r\nimport { hOP, jsS, extend } from \"@pnp/common\";\r\nimport { SPHttpClient } from \"./net/sphttpclient\";\r\n/**\r\n * Describes a site collection\r\n *\r\n */\r\nvar Site = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Site, _super);\r\n    function Site() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Site_1 = Site;\r\n    Object.defineProperty(Site.prototype, \"rootWeb\", {\r\n        /**\r\n         * Gets the root web of the site collection\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Web(this, \"rootweb\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Site.prototype, \"features\", {\r\n        /**\r\n         * Gets the active features for this site collection\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Features(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Site.prototype, \"userCustomActions\", {\r\n        /**\r\n         * Gets all custom actions for this site collection\r\n         *\r\n         */\r\n        get: function () {\r\n            return new UserCustomActions(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets a Web instance representing the root web of the site collection\r\n     * correctly setup for chaining within the library\r\n     */\r\n    Site.prototype.getRootWeb = function () {\r\n        return this.rootWeb.select(\"Url\").get().then(function (web) { return new Web(web.Url); });\r\n    };\r\n    /**\r\n     * Gets the context information for this site collection\r\n     */\r\n    Site.prototype.getContextInfo = function () {\r\n        var q = new Site_1(this.parentUrl, \"_api/contextinfo\");\r\n        return q.postCore().then(function (data) {\r\n            if (hOP(data, \"GetContextWebInformation\")) {\r\n                var info = data.GetContextWebInformation;\r\n                info.SupportedSchemaVersions = info.SupportedSchemaVersions.results;\r\n                return info;\r\n            }\r\n            else {\r\n                return data;\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Gets the document libraries on a site. Static method. (SharePoint Online only)\r\n     *\r\n     * @param absoluteWebUrl The absolute url of the web whose document libraries should be returned\r\n     */\r\n    Site.prototype.getDocumentLibraries = function (absoluteWebUrl) {\r\n        var q = new SharePointQueryable(\"\", \"_api/sp.web.getdocumentlibraries(@v)\");\r\n        q.query.set(\"@v\", \"'\" + absoluteWebUrl + \"'\");\r\n        return q.get().then(function (data) {\r\n            if (hOP(data, \"GetDocumentLibraries\")) {\r\n                return data.GetDocumentLibraries;\r\n            }\r\n            else {\r\n                return data;\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Gets the site url from a page url\r\n     *\r\n     * @param absolutePageUrl The absolute url of the page\r\n     */\r\n    Site.prototype.getWebUrlFromPageUrl = function (absolutePageUrl) {\r\n        var q = new SharePointQueryable(\"\", \"_api/sp.web.getweburlfrompageurl(@v)\");\r\n        q.query.set(\"@v\", \"'\" + absolutePageUrl + \"'\");\r\n        return q.get().then(function (data) {\r\n            if (hOP(data, \"GetWebUrlFromPageUrl\")) {\r\n                return data.GetWebUrlFromPageUrl;\r\n            }\r\n            else {\r\n                return data;\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Creates a new batch for requests within the context of this site collection\r\n     *\r\n     */\r\n    Site.prototype.createBatch = function () {\r\n        return new SPBatch(this.parentUrl);\r\n    };\r\n    /**\r\n     * Opens a web by id (using POST)\r\n     *\r\n     * @param webId The GUID id of the web to open\r\n     */\r\n    Site.prototype.openWebById = function (webId) {\r\n        return this.clone(Site_1, \"openWebById('\" + webId + \"')\").postCore().then(function (d) { return ({\r\n            data: d,\r\n            web: Web.fromUrl(d[\"odata.id\"] || d.__metadata.uri),\r\n        }); });\r\n    };\r\n    /**\r\n     * Associates a site collection to a hub site.\r\n     *\r\n     * @param siteId Id of the hub site collection you want to join.\r\n     * If you want to disassociate the site collection from hub site, then\r\n     * pass the siteId as 00000000-0000-0000-0000-000000000000\r\n     */\r\n    Site.prototype.joinHubSite = function (siteId) {\r\n        return this.clone(Site_1, \"joinHubSite('\" + siteId + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Registers the current site collection as hub site collection\r\n     */\r\n    Site.prototype.registerHubSite = function () {\r\n        return this.clone(Site_1, \"registerHubSite\").postCore();\r\n    };\r\n    /**\r\n     * Unregisters the current site collection as hub site collection.\r\n     */\r\n    Site.prototype.unRegisterHubSite = function () {\r\n        return this.clone(Site_1, \"unRegisterHubSite\").postCore();\r\n    };\r\n    /**\r\n     * Creates a Modern communication site.\r\n     *\r\n     * @param title The title of the site to create\r\n     * @param lcid The language to use for the site. If not specified will default to 1033 (English).\r\n     * @param shareByEmailEnabled If set to true, it will enable sharing files via Email. By default it is set to false\r\n     * @param url The fully qualified URL (e.g. https://yourtenant.sharepoint.com/sites/mysitecollection) of the site.\r\n     * @param description The description of the communication site.\r\n     * @param classification The Site classification to use. For instance 'Contoso Classified'. See https://www.youtube.com/watch?v=E-8Z2ggHcS0 for more information\r\n     * @param siteDesignId The Guid of the site design to be used.\r\n     *                     You can use the below default OOTB GUIDs:\r\n     *                     Topic: 00000000-0000-0000-0000-000000000000\r\n     *                     Showcase: 6142d2a0-63a5-4ba0-aede-d9fefca2c767\r\n     *                     Blank: f6cc5403-0d63-442e-96c0-285923709ffc\r\n     */\r\n    Site.prototype.createCommunicationSite = function (title, lcid, shareByEmailEnabled, url, description, classification, siteDesignId, hubSiteId) {\r\n        var _this = this;\r\n        if (lcid === void 0) { lcid = 1033; }\r\n        if (shareByEmailEnabled === void 0) { shareByEmailEnabled = false; }\r\n        if (description === void 0) { description = \"\"; }\r\n        if (classification === void 0) { classification = \"\"; }\r\n        if (siteDesignId === void 0) { siteDesignId = \"00000000-0000-0000-0000-000000000000\"; }\r\n        if (hubSiteId === void 0) { hubSiteId = \"00000000-0000-0000-0000-000000000000\"; }\r\n        var props = {\r\n            Classification: classification,\r\n            Description: description,\r\n            HubSiteId: hubSiteId,\r\n            Lcid: lcid,\r\n            ShareByEmailEnabled: shareByEmailEnabled,\r\n            SiteDesignId: siteDesignId,\r\n            Title: title,\r\n            Url: url,\r\n            WebTemplate: \"SITEPAGEPUBLISHING#0\",\r\n            WebTemplateExtensionId: \"00000000-0000-0000-0000-000000000000\",\r\n        };\r\n        var postBody = jsS({\r\n            \"request\": extend({\r\n                \"__metadata\": { \"type\": \"Microsoft.SharePoint.Portal.SPSiteCreationRequest\" },\r\n            }, props),\r\n        });\r\n        return this.getRootWeb().then(function (d) { return tslib_1.__awaiter(_this, void 0, void 0, function () {\r\n            var client, methodUrl;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                client = new SPHttpClient();\r\n                methodUrl = d.parentUrl + \"/_api/SPSiteManager/Create\";\r\n                return [2 /*return*/, client.post(methodUrl, {\r\n                        body: postBody,\r\n                        headers: {\r\n                            \"Accept\": \"application/json;odata=verbose\",\r\n                            \"Content-Type\": \"application/json;odata=verbose;charset=utf-8\",\r\n                        },\r\n                    }).then(function (r) { return r.json(); })];\r\n            });\r\n        }); });\r\n    };\r\n    /**\r\n     * Creates a Modern team site backed by Office 365 group. For use in SP Online only. This will not work with App-only tokens\r\n     *\r\n     * @param displayName The title or display name of the Modern team site to be created\r\n     * @param alias Alias of the underlying Office 365 Group\r\n     * @param isPublic Defines whether the Office 365 Group will be public (default), or private.\r\n     * @param lcid The language to use for the site. If not specified will default to English (1033).\r\n     * @param description The description of the site to be created.\r\n     * @param classification The Site classification to use. For instance 'Contoso Classified'. See https://www.youtube.com/watch?v=E-8Z2ggHcS0 for more information\r\n     * @param owners The Owners of the site to be created\r\n     */\r\n    Site.prototype.createModernTeamSite = function (displayName, alias, isPublic, lcid, description, classification, owners, hubSiteId) {\r\n        var _this = this;\r\n        if (isPublic === void 0) { isPublic = true; }\r\n        if (lcid === void 0) { lcid = 1033; }\r\n        if (description === void 0) { description = \"\"; }\r\n        if (classification === void 0) { classification = \"\"; }\r\n        if (hubSiteId === void 0) { hubSiteId = \"00000000-0000-0000-0000-000000000000\"; }\r\n        var postBody = jsS({\r\n            alias: alias,\r\n            displayName: displayName,\r\n            isPublic: isPublic,\r\n            optionalParams: {\r\n                Classification: classification,\r\n                CreationOptions: {\r\n                    \"results\": [\"SPSiteLanguage:\" + lcid, \"HubSiteId:\" + hubSiteId],\r\n                },\r\n                Description: description,\r\n                Owners: {\r\n                    \"results\": owners ? owners : [],\r\n                },\r\n            },\r\n        });\r\n        return this.getRootWeb().then(function (d) { return tslib_1.__awaiter(_this, void 0, void 0, function () {\r\n            var client, methodUrl;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                client = new SPHttpClient();\r\n                methodUrl = d.parentUrl + \"/_api/GroupSiteManager/CreateGroupEx\";\r\n                return [2 /*return*/, client.post(methodUrl, {\r\n                        body: postBody,\r\n                        headers: {\r\n                            \"Accept\": \"application/json;odata=verbose\",\r\n                            \"Content-Type\": \"application/json;odata=verbose;charset=utf-8\",\r\n                        },\r\n                    }).then(function (r) { return r.json(); })];\r\n            });\r\n        }); });\r\n    };\r\n    var Site_1;\r\n    Site = Site_1 = tslib_1.__decorate([\r\n        defaultPath(\"_api/site\")\r\n    ], Site);\r\n    return Site;\r\n}(SharePointQueryableInstance));\r\nexport { Site };\r\n//# sourceMappingURL=site.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryable, SharePointQueryableInstance, SharePointQueryableCollection, defaultPath } from \"./sharepointqueryable\";\r\nimport { jsS, extend } from \"@pnp/common\";\r\nimport { metadata } from \"./utils/metadata\";\r\n/**\r\n * Represents a collection of navigation nodes\r\n *\r\n */\r\nvar NavigationNodes = /** @class */ (function (_super) {\r\n    tslib_1.__extends(NavigationNodes, _super);\r\n    function NavigationNodes() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets a navigation node by id\r\n     *\r\n     * @param id The id of the node\r\n     */\r\n    NavigationNodes.prototype.getById = function (id) {\r\n        var node = new NavigationNode(this);\r\n        node.concat(\"(\" + id + \")\");\r\n        return node;\r\n    };\r\n    /**\r\n     * Adds a new node to the collection\r\n     *\r\n     * @param title Display name of the node\r\n     * @param url The url of the node\r\n     * @param visible If true the node is visible, otherwise it is hidden (default: true)\r\n     */\r\n    NavigationNodes.prototype.add = function (title, url, visible) {\r\n        var _this = this;\r\n        if (visible === void 0) { visible = true; }\r\n        var postBody = jsS(extend(metadata(\"SP.NavigationNode\"), {\r\n            IsVisible: visible,\r\n            Title: title,\r\n            Url: url,\r\n        }));\r\n        return this.clone(NavigationNodes, null).postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                node: _this.getById(data.Id),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Moves a node to be after another node in the navigation\r\n     *\r\n     * @param nodeId Id of the node to move\r\n     * @param previousNodeId Id of the node after which we move the node specified by nodeId\r\n     */\r\n    NavigationNodes.prototype.moveAfter = function (nodeId, previousNodeId) {\r\n        var postBody = jsS({\r\n            nodeId: nodeId,\r\n            previousNodeId: previousNodeId,\r\n        });\r\n        return this.clone(NavigationNodes, \"MoveAfter\").postCore({ body: postBody });\r\n    };\r\n    return NavigationNodes;\r\n}(SharePointQueryableCollection));\r\nexport { NavigationNodes };\r\n/**\r\n * Represents an instance of a navigation node\r\n *\r\n */\r\nvar NavigationNode = /** @class */ (function (_super) {\r\n    tslib_1.__extends(NavigationNode, _super);\r\n    function NavigationNode() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(NavigationNode.prototype, \"children\", {\r\n        /**\r\n         * Represents the child nodes of this node\r\n         */\r\n        get: function () {\r\n            return new NavigationNodes(this, \"Children\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Deletes this node and any child nodes\r\n     */\r\n    NavigationNode.prototype.delete = function () {\r\n        return _super.prototype.deleteCore.call(this);\r\n    };\r\n    /**\r\n     * Updates this node\r\n     *\r\n     * @param properties Properties used to update this node\r\n     */\r\n    NavigationNode.prototype.update = function (properties) {\r\n        var _this = this;\r\n        var postBody = jsS(extend({\r\n            \"__metadata\": { \"type\": \"SP.NavigationNode\" },\r\n        }, properties));\r\n        return this.postCore({\r\n            body: postBody,\r\n            headers: {\r\n                \"X-HTTP-Method\": \"MERGE\",\r\n            },\r\n        }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                node: _this,\r\n            };\r\n        });\r\n    };\r\n    return NavigationNode;\r\n}(SharePointQueryableInstance));\r\nexport { NavigationNode };\r\n/**\r\n * Exposes the navigation components\r\n *\r\n */\r\nvar Navigation = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Navigation, _super);\r\n    function Navigation() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(Navigation.prototype, \"quicklaunch\", {\r\n        /**\r\n         * Gets the quicklaunch navigation nodes for the current context\r\n         *\r\n         */\r\n        get: function () {\r\n            return new NavigationNodes(this, \"quicklaunch\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Navigation.prototype, \"topNavigationBar\", {\r\n        /**\r\n         * Gets the top bar navigation nodes for the current context\r\n         *\r\n         */\r\n        get: function () {\r\n            return new NavigationNodes(this, \"topnavigationbar\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Navigation = tslib_1.__decorate([\r\n        defaultPath(\"navigation\")\r\n    ], Navigation);\r\n    return Navigation;\r\n}(SharePointQueryable));\r\nexport { Navigation };\r\n/**\r\n * Represents the top level navigation service\r\n */\r\nvar NavigationService = /** @class */ (function (_super) {\r\n    tslib_1.__extends(NavigationService, _super);\r\n    function NavigationService(baseUrl, path) {\r\n        if (path === void 0) { path = null; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * The MenuState service operation returns a Menu-State (dump) of a SiteMapProvider on a site.\r\n     *\r\n     * @param menuNodeKey MenuNode.Key of the start node within the SiteMapProvider If no key is provided the SiteMapProvider.RootNode will be the root of the menu state.\r\n     * @param depth Depth of the dump. If no value is provided a dump with the depth of 10 is returned\r\n     * @param mapProviderName The name identifying the SiteMapProvider to be used\r\n     * @param customProperties comma seperated list of custom properties to be returned.\r\n     */\r\n    NavigationService.prototype.getMenuState = function (menuNodeKey, depth, mapProviderName, customProperties) {\r\n        if (menuNodeKey === void 0) { menuNodeKey = null; }\r\n        if (depth === void 0) { depth = 10; }\r\n        if (mapProviderName === void 0) { mapProviderName = null; }\r\n        if (customProperties === void 0) { customProperties = null; }\r\n        return (new NavigationService(this, \"_api/navigation/MenuState\")).postCore({\r\n            body: jsS({\r\n                customProperties: customProperties,\r\n                depth: depth,\r\n                mapProviderName: mapProviderName,\r\n                menuNodeKey: menuNodeKey,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Tries to get a SiteMapNode.Key for a given URL within a site collection.\r\n     *\r\n     * @param currentUrl A url representing the SiteMapNode\r\n     * @param mapProviderName The name identifying the SiteMapProvider to be used\r\n     */\r\n    NavigationService.prototype.getMenuNodeKey = function (currentUrl, mapProviderName) {\r\n        if (mapProviderName === void 0) { mapProviderName = null; }\r\n        return (new NavigationService(this, \"_api/navigation/MenuNodeKey\")).postCore({\r\n            body: jsS({\r\n                currentUrl: currentUrl,\r\n                mapProviderName: mapProviderName,\r\n            }),\r\n        });\r\n    };\r\n    return NavigationService;\r\n}(SharePointQueryable));\r\nexport { NavigationService };\r\n//# sourceMappingURL=navigation.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryable, defaultPath } from \"./sharepointqueryable\";\r\nimport { jsS } from \"@pnp/common\";\r\nvar RelatedItemManagerImpl = /** @class */ (function (_super) {\r\n    tslib_1.__extends(RelatedItemManagerImpl, _super);\r\n    function RelatedItemManagerImpl() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    RelatedItemManagerImpl_1 = RelatedItemManagerImpl;\r\n    RelatedItemManagerImpl.FromUrl = function (url) {\r\n        if (url === null) {\r\n            return new RelatedItemManagerImpl_1(\"\");\r\n        }\r\n        var index = url.indexOf(\"_api/\");\r\n        if (index > -1) {\r\n            return new RelatedItemManagerImpl_1(url.substr(0, index));\r\n        }\r\n        return new RelatedItemManagerImpl_1(url);\r\n    };\r\n    RelatedItemManagerImpl.prototype.getRelatedItems = function (sourceListName, sourceItemId) {\r\n        var query = this.clone(RelatedItemManagerImpl_1, null);\r\n        query.concat(\".GetRelatedItems\");\r\n        return query.postCore({\r\n            body: jsS({\r\n                SourceItemID: sourceItemId,\r\n                SourceListName: sourceListName,\r\n            }),\r\n        });\r\n    };\r\n    RelatedItemManagerImpl.prototype.getPageOneRelatedItems = function (sourceListName, sourceItemId) {\r\n        var query = this.clone(RelatedItemManagerImpl_1, null);\r\n        query.concat(\".GetPageOneRelatedItems\");\r\n        return query.postCore({\r\n            body: jsS({\r\n                SourceItemID: sourceItemId,\r\n                SourceListName: sourceListName,\r\n            }),\r\n        });\r\n    };\r\n    RelatedItemManagerImpl.prototype.addSingleLink = function (sourceListName, sourceItemId, sourceWebUrl, targetListName, targetItemID, targetWebUrl, tryAddReverseLink) {\r\n        if (tryAddReverseLink === void 0) { tryAddReverseLink = false; }\r\n        var query = this.clone(RelatedItemManagerImpl_1, null);\r\n        query.concat(\".AddSingleLink\");\r\n        return query.postCore({\r\n            body: jsS({\r\n                SourceItemID: sourceItemId,\r\n                SourceListName: sourceListName,\r\n                SourceWebUrl: sourceWebUrl,\r\n                TargetItemID: targetItemID,\r\n                TargetListName: targetListName,\r\n                TargetWebUrl: targetWebUrl,\r\n                TryAddReverseLink: tryAddReverseLink,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Adds a related item link from an item specified by list name and item id, to an item specified by url\r\n     *\r\n     * @param sourceListName The source list name or list id\r\n     * @param sourceItemId The source item id\r\n     * @param targetItemUrl The target item url\r\n     * @param tryAddReverseLink If set to true try to add the reverse link (will not return error if it fails)\r\n     */\r\n    RelatedItemManagerImpl.prototype.addSingleLinkToUrl = function (sourceListName, sourceItemId, targetItemUrl, tryAddReverseLink) {\r\n        if (tryAddReverseLink === void 0) { tryAddReverseLink = false; }\r\n        var query = this.clone(RelatedItemManagerImpl_1, null);\r\n        query.concat(\".AddSingleLinkToUrl\");\r\n        return query.postCore({\r\n            body: jsS({\r\n                SourceItemID: sourceItemId,\r\n                SourceListName: sourceListName,\r\n                TargetItemUrl: targetItemUrl,\r\n                TryAddReverseLink: tryAddReverseLink,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Adds a related item link from an item specified by url, to an item specified by list name and item id\r\n     *\r\n     * @param sourceItemUrl The source item url\r\n     * @param targetListName The target list name or list id\r\n     * @param targetItemId The target item id\r\n     * @param tryAddReverseLink If set to true try to add the reverse link (will not return error if it fails)\r\n     */\r\n    RelatedItemManagerImpl.prototype.addSingleLinkFromUrl = function (sourceItemUrl, targetListName, targetItemId, tryAddReverseLink) {\r\n        if (tryAddReverseLink === void 0) { tryAddReverseLink = false; }\r\n        var query = this.clone(RelatedItemManagerImpl_1, null);\r\n        query.concat(\".AddSingleLinkFromUrl\");\r\n        return query.postCore({\r\n            body: jsS({\r\n                SourceItemUrl: sourceItemUrl,\r\n                TargetItemID: targetItemId,\r\n                TargetListName: targetListName,\r\n                TryAddReverseLink: tryAddReverseLink,\r\n            }),\r\n        });\r\n    };\r\n    RelatedItemManagerImpl.prototype.deleteSingleLink = function (sourceListName, sourceItemId, sourceWebUrl, targetListName, targetItemId, targetWebUrl, tryDeleteReverseLink) {\r\n        if (tryDeleteReverseLink === void 0) { tryDeleteReverseLink = false; }\r\n        var query = this.clone(RelatedItemManagerImpl_1, null);\r\n        query.concat(\".DeleteSingleLink\");\r\n        return query.postCore({\r\n            body: jsS({\r\n                SourceItemID: sourceItemId,\r\n                SourceListName: sourceListName,\r\n                SourceWebUrl: sourceWebUrl,\r\n                TargetItemID: targetItemId,\r\n                TargetListName: targetListName,\r\n                TargetWebUrl: targetWebUrl,\r\n                TryDeleteReverseLink: tryDeleteReverseLink,\r\n            }),\r\n        });\r\n    };\r\n    var RelatedItemManagerImpl_1;\r\n    RelatedItemManagerImpl = RelatedItemManagerImpl_1 = tslib_1.__decorate([\r\n        defaultPath(\"_api/SP.RelatedItemManager\")\r\n    ], RelatedItemManagerImpl);\r\n    return RelatedItemManagerImpl;\r\n}(SharePointQueryable));\r\nexport { RelatedItemManagerImpl };\r\n//# sourceMappingURL=relateditems.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryableInstance, SharePointQueryableCollection, defaultPath, } from \"./sharepointqueryable\";\r\nimport { spODataEntity, } from \"./odata\";\r\nimport { dateAdd, hOP, } from \"@pnp/common\";\r\n/**\r\n * Describes regional settings ODada object\r\n */\r\nvar RegionalSettings = /** @class */ (function (_super) {\r\n    tslib_1.__extends(RegionalSettings, _super);\r\n    function RegionalSettings() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(RegionalSettings.prototype, \"installedLanguages\", {\r\n        /**\r\n         * Gets the collection of languages used in a server farm.\r\n         */\r\n        get: function () {\r\n            return new InstalledLanguages(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RegionalSettings.prototype, \"globalInstalledLanguages\", {\r\n        /**\r\n         * Gets the collection of language packs that are installed on the server.\r\n         */\r\n        get: function () {\r\n            return new InstalledLanguages(this, \"globalinstalledlanguages\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RegionalSettings.prototype, \"timeZone\", {\r\n        /**\r\n         * Gets time zone\r\n         */\r\n        get: function () {\r\n            return new TimeZone(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RegionalSettings.prototype, \"timeZones\", {\r\n        /**\r\n         * Gets time zones\r\n         */\r\n        get: function () {\r\n            return new TimeZones(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    RegionalSettings = tslib_1.__decorate([\r\n        defaultPath(\"regionalsettings\")\r\n    ], RegionalSettings);\r\n    return RegionalSettings;\r\n}(SharePointQueryableInstance));\r\nexport { RegionalSettings };\r\n/**\r\n * Describes installed languages ODada queriable collection\r\n */\r\nvar InstalledLanguages = /** @class */ (function (_super) {\r\n    tslib_1.__extends(InstalledLanguages, _super);\r\n    function InstalledLanguages() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    InstalledLanguages = tslib_1.__decorate([\r\n        defaultPath(\"installedlanguages\")\r\n    ], InstalledLanguages);\r\n    return InstalledLanguages;\r\n}(SharePointQueryableCollection));\r\nexport { InstalledLanguages };\r\n/**\r\n * Describes TimeZone ODada object\r\n */\r\nvar TimeZone = /** @class */ (function (_super) {\r\n    tslib_1.__extends(TimeZone, _super);\r\n    function TimeZone() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    TimeZone_1 = TimeZone;\r\n    /**\r\n     * Gets an Local Time by UTC Time\r\n     *\r\n     * @param utcTime UTC Time as Date or ISO String\r\n     */\r\n    TimeZone.prototype.utcToLocalTime = function (utcTime) {\r\n        var dateIsoString;\r\n        if (typeof utcTime === \"string\") {\r\n            dateIsoString = utcTime;\r\n        }\r\n        else {\r\n            dateIsoString = utcTime.toISOString();\r\n        }\r\n        return this.clone(TimeZone_1, \"utctolocaltime('\" + dateIsoString + \"')\")\r\n            .postCore()\r\n            .then(function (res) { return hOP(res, \"UTCToLocalTime\") ? res.UTCToLocalTime : res; });\r\n    };\r\n    /**\r\n     * Gets an UTC Time by Local Time\r\n     *\r\n     * @param localTime Local Time as Date or ISO String\r\n     */\r\n    TimeZone.prototype.localTimeToUTC = function (localTime) {\r\n        var dateIsoString;\r\n        if (typeof localTime === \"string\") {\r\n            dateIsoString = localTime;\r\n        }\r\n        else {\r\n            dateIsoString = dateAdd(localTime, \"minute\", localTime.getTimezoneOffset() * -1).toISOString();\r\n        }\r\n        return this.clone(TimeZone_1, \"localtimetoutc('\" + dateIsoString + \"')\")\r\n            .postCore()\r\n            .then(function (res) { return hOP(res, \"LocalTimeToUTC\") ? res.LocalTimeToUTC : res; });\r\n    };\r\n    var TimeZone_1;\r\n    TimeZone = TimeZone_1 = tslib_1.__decorate([\r\n        defaultPath(\"timezone\")\r\n    ], TimeZone);\r\n    return TimeZone;\r\n}(SharePointQueryableInstance));\r\nexport { TimeZone };\r\n/**\r\n * Describes time zones queriable collection\r\n */\r\nvar TimeZones = /** @class */ (function (_super) {\r\n    tslib_1.__extends(TimeZones, _super);\r\n    function TimeZones() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    TimeZones_1 = TimeZones;\r\n    // https://msdn.microsoft.com/en-us/library/office/jj247008.aspx - timezones ids\r\n    /**\r\n     * Gets an TimeZone by id\r\n     *\r\n     * @param id The integer id of the timezone to retrieve\r\n     */\r\n    TimeZones.prototype.getById = function (id) {\r\n        // do the post and merge the result into a TimeZone instance so the data and methods are available\r\n        return this.clone(TimeZones_1, \"GetById(\" + id + \")\").postCore({}, spODataEntity(TimeZone));\r\n    };\r\n    var TimeZones_1;\r\n    TimeZones = TimeZones_1 = tslib_1.__decorate([\r\n        defaultPath(\"timezones\")\r\n    ], TimeZones);\r\n    return TimeZones;\r\n}(SharePointQueryableCollection));\r\nexport { TimeZones };\r\n//# sourceMappingURL=regionalsettings.js.map","import * as tslib_1 from \"tslib\";\r\nimport { extend, jsS } from \"@pnp/common\";\r\nimport { SharePointQueryableInstance, SharePointQueryableCollection, defaultPath } from \"./sharepointqueryable\";\r\nimport { SharePointQueryableShareableWeb } from \"./sharepointqueryableshareable\";\r\nimport { Folders, Folder } from \"./folders\";\r\nimport { Lists, List } from \"./lists\";\r\nimport { Fields } from \"./fields\";\r\nimport { Site } from \"./site\";\r\nimport { Navigation } from \"./navigation\";\r\nimport { SiteGroups, SiteGroup } from \"./sitegroups\";\r\nimport { ContentTypes } from \"./contenttypes\";\r\nimport { RoleDefinitions } from \"./roles\";\r\nimport { File } from \"./files\";\r\nimport { extractWebUrl } from \"./utils/extractweburl\";\r\nimport { SiteUsers, SiteUser, CurrentUser } from \"./siteusers\";\r\nimport { UserCustomActions } from \"./usercustomactions\";\r\nimport { odataUrlFrom } from \"./odata\";\r\nimport { SPBatch } from \"./batch\";\r\nimport { Features } from \"./features\";\r\nimport { RelatedItemManagerImpl } from \"./relateditems\";\r\nimport { AppCatalog } from \"./appcatalog\";\r\nimport { RegionalSettings } from \"./regionalsettings\";\r\nimport { ClientSidePage } from \"./clientsidepages\";\r\n/**\r\n * Describes a collection of webs\r\n *\r\n */\r\nvar Webs = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Webs, _super);\r\n    function Webs() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Webs_1 = Webs;\r\n    /**\r\n     * Adds a new web to the collection\r\n     *\r\n     * @param title The new web's title\r\n     * @param url The new web's relative url\r\n     * @param description The new web's description\r\n     * @param template The new web's template internal name (default = STS)\r\n     * @param language The locale id that specifies the new web's language (default = 1033 [English, US])\r\n     * @param inheritPermissions When true, permissions will be inherited from the new web's parent (default = true)\r\n     */\r\n    Webs.prototype.add = function (title, url, description, template, language, inheritPermissions) {\r\n        if (description === void 0) { description = \"\"; }\r\n        if (template === void 0) { template = \"STS\"; }\r\n        if (language === void 0) { language = 1033; }\r\n        if (inheritPermissions === void 0) { inheritPermissions = true; }\r\n        var props = {\r\n            Description: description,\r\n            Language: language,\r\n            Title: title,\r\n            Url: url,\r\n            UseSamePermissionsAsParentSite: inheritPermissions,\r\n            WebTemplate: template,\r\n        };\r\n        var postBody = jsS({\r\n            \"parameters\": extend({\r\n                \"__metadata\": { \"type\": \"SP.WebCreationInformation\" },\r\n            }, props),\r\n        });\r\n        return this.clone(Webs_1, \"add\").postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                web: new Web(odataUrlFrom(data).replace(/_api\\/web\\/?/i, \"\")),\r\n            };\r\n        });\r\n    };\r\n    var Webs_1;\r\n    Webs = Webs_1 = tslib_1.__decorate([\r\n        defaultPath(\"webs\")\r\n    ], Webs);\r\n    return Webs;\r\n}(SharePointQueryableCollection));\r\nexport { Webs };\r\n/**\r\n * Describes a collection of web infos\r\n *\r\n */\r\nvar WebInfos = /** @class */ (function (_super) {\r\n    tslib_1.__extends(WebInfos, _super);\r\n    function WebInfos() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    WebInfos = tslib_1.__decorate([\r\n        defaultPath(\"webinfos\")\r\n    ], WebInfos);\r\n    return WebInfos;\r\n}(SharePointQueryableCollection));\r\nexport { WebInfos };\r\n/**\r\n * Describes a web\r\n *\r\n */\r\nvar Web = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Web, _super);\r\n    function Web() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Web_1 = Web;\r\n    /**\r\n     * Creates a new web instance from the given url by indexing the location of the /_api/\r\n     * segment. If this is not found the method creates a new web with the entire string as\r\n     * supplied.\r\n     *\r\n     * @param url\r\n     */\r\n    Web.fromUrl = function (url, path) {\r\n        return new Web_1(extractWebUrl(url), path);\r\n    };\r\n    Object.defineProperty(Web.prototype, \"webs\", {\r\n        /**\r\n         * Gets this web's subwebs\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Webs(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets this web's parent web and data\r\n     *\r\n     */\r\n    Web.prototype.getParentWeb = function () {\r\n        var _this = this;\r\n        return this.select(\"ParentWeb/Id\").expand(\"ParentWeb\").get()\r\n            .then(function (_a) {\r\n            var ParentWeb = _a.ParentWeb;\r\n            return ParentWeb ? new Site(_this.parentUrl).openWebById(ParentWeb.Id) : null;\r\n        });\r\n    };\r\n    /**\r\n    * Returns a collection of objects that contain metadata about subsites of the current site in which the current user is a member.\r\n    *\r\n    * @param nWebTemplateFilter Specifies the site definition (default = -1)\r\n    * @param nConfigurationFilter A 16-bit integer that specifies the identifier of a configuration (default = -1)\r\n    */\r\n    Web.prototype.getSubwebsFilteredForCurrentUser = function (nWebTemplateFilter, nConfigurationFilter) {\r\n        if (nWebTemplateFilter === void 0) { nWebTemplateFilter = -1; }\r\n        if (nConfigurationFilter === void 0) { nConfigurationFilter = -1; }\r\n        return this.clone(Webs, \"getSubwebsFilteredForCurrentUser(nWebTemplateFilter=\" + nWebTemplateFilter + \",nConfigurationFilter=\" + nConfigurationFilter + \")\");\r\n    };\r\n    Object.defineProperty(Web.prototype, \"allProperties\", {\r\n        /**\r\n         * Allows access to the web's all properties collection\r\n         */\r\n        get: function () {\r\n            return this.clone(SharePointQueryableInstance, \"allproperties\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"webinfos\", {\r\n        /**\r\n         * Gets a collection of WebInfos for this web's subwebs\r\n         *\r\n         */\r\n        get: function () {\r\n            return new WebInfos(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"contentTypes\", {\r\n        /**\r\n         * Gets the content types available in this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new ContentTypes(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"lists\", {\r\n        /**\r\n         * Gets the lists in this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Lists(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"fields\", {\r\n        /**\r\n         * Gets the fields in this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Fields(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"features\", {\r\n        /**\r\n         * Gets the active features for this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Features(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"availablefields\", {\r\n        /**\r\n         * Gets the available fields in this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Fields(this, \"availablefields\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"navigation\", {\r\n        /**\r\n         * Gets the navigation options in this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Navigation(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"siteUsers\", {\r\n        /**\r\n         * Gets the site users\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteUsers(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"siteGroups\", {\r\n        /**\r\n         * Gets the site groups\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteGroups(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"siteUserInfoList\", {\r\n        /**\r\n         * Gets site user info list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new List(this, \"siteuserinfolist\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"regionalSettings\", {\r\n        /**\r\n         * Gets regional settings\r\n         *\r\n         */\r\n        get: function () {\r\n            return new RegionalSettings(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"currentUser\", {\r\n        /**\r\n         * Gets the current user\r\n         */\r\n        get: function () {\r\n            return new CurrentUser(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"folders\", {\r\n        /**\r\n         * Gets the top-level folders in this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Folders(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"userCustomActions\", {\r\n        /**\r\n         * Gets all user custom actions for this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new UserCustomActions(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"roleDefinitions\", {\r\n        /**\r\n         * Gets the collection of RoleDefinition resources\r\n         *\r\n         */\r\n        get: function () {\r\n            return new RoleDefinitions(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"relatedItems\", {\r\n        /**\r\n         * Provides an interface to manage related items\r\n         *\r\n         */\r\n        get: function () {\r\n            return RelatedItemManagerImpl.FromUrl(this.toUrl());\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Creates a new batch for requests within the context of this web\r\n     *\r\n     */\r\n    Web.prototype.createBatch = function () {\r\n        return new SPBatch(this.parentUrl);\r\n    };\r\n    Object.defineProperty(Web.prototype, \"rootFolder\", {\r\n        /**\r\n         * Gets the root folder of this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Folder(this, \"rootFolder\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"associatedOwnerGroup\", {\r\n        /**\r\n         * Gets the associated owner group for this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteGroup(this, \"associatedownergroup\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"associatedMemberGroup\", {\r\n        /**\r\n         * Gets the associated member group for this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteGroup(this, \"associatedmembergroup\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"associatedVisitorGroup\", {\r\n        /**\r\n         * Gets the associated visitor group for this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteGroup(this, \"associatedvisitorgroup\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"defaultDocumentLibrary\", {\r\n        /**\r\n         * Gets the default document library for this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new List(this, \"DefaultDocumentLibrary\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets a folder by id\r\n     *\r\n     * @param uniqueId The uniqueId of the folder\r\n     */\r\n    Web.prototype.getFolderById = function (uniqueId) {\r\n        return new Folder(this, \"getFolderById('\" + uniqueId + \"')\");\r\n    };\r\n    /**\r\n     * Gets a folder by server relative url\r\n     *\r\n     * @param folderRelativeUrl The server relative path to the folder (including /sites/ if applicable)\r\n     */\r\n    Web.prototype.getFolderByServerRelativeUrl = function (folderRelativeUrl) {\r\n        return new Folder(this, \"getFolderByServerRelativeUrl('\" + folderRelativeUrl + \"')\");\r\n    };\r\n    /**\r\n     * Gets a folder by server relative relative path if your folder name contains # and % characters\r\n     * you need to first encode the file name using encodeURIComponent() and then pass the url\r\n     * let url = \"/sites/test/Shared Documents/\" + encodeURIComponent(\"%123\");\r\n     * This works only in SharePoint online.\r\n     *\r\n     * @param folderRelativeUrl The server relative path to the folder (including /sites/ if applicable)\r\n     */\r\n    Web.prototype.getFolderByServerRelativePath = function (folderRelativeUrl) {\r\n        return new Folder(this, \"getFolderByServerRelativePath(decodedUrl='\" + folderRelativeUrl + \"')\");\r\n    };\r\n    /**\r\n     * Gets a file by id\r\n     *\r\n     * @param uniqueId The uniqueId of the file\r\n     */\r\n    Web.prototype.getFileById = function (uniqueId) {\r\n        return new File(this, \"getFileById('\" + uniqueId + \"')\");\r\n    };\r\n    /**\r\n     * Gets a file by server relative url\r\n     *\r\n     * @param fileRelativeUrl The server relative path to the file (including /sites/ if applicable)\r\n     */\r\n    Web.prototype.getFileByServerRelativeUrl = function (fileRelativeUrl) {\r\n        return new File(this, \"getFileByServerRelativeUrl('\" + fileRelativeUrl + \"')\");\r\n    };\r\n    /**\r\n     * Gets a file by server relative url if your file name contains # and % characters\r\n     * you need to first encode the file name using encodeURIComponent() and then pass the url\r\n     * let url = \"/sites/test/Shared Documents/\" + encodeURIComponent(\"%123.docx\");\r\n     *\r\n     * @param fileRelativeUrl The server relative path to the file (including /sites/ if applicable)\r\n     */\r\n    Web.prototype.getFileByServerRelativePath = function (fileRelativeUrl) {\r\n        return new File(this, \"getFileByServerRelativePath(decodedUrl='\" + fileRelativeUrl + \"')\");\r\n    };\r\n    /**\r\n     * Gets a list by server relative url (list's root folder)\r\n     *\r\n     * @param listRelativeUrl The server relative path to the list's root folder (including /sites/ if applicable)\r\n     */\r\n    Web.prototype.getList = function (listRelativeUrl) {\r\n        return new List(this, \"getList('\" + listRelativeUrl + \"')\");\r\n    };\r\n    /**\r\n     * Updates this web instance with the supplied properties\r\n     *\r\n     * @param properties A plain object hash of values to update for the web\r\n     */\r\n    Web.prototype.update = function (properties) {\r\n        var _this = this;\r\n        var postBody = jsS(extend({\r\n            \"__metadata\": { \"type\": \"SP.Web\" },\r\n        }, properties));\r\n        return this.postCore({\r\n            body: postBody,\r\n            headers: {\r\n                \"X-HTTP-Method\": \"MERGE\",\r\n            },\r\n        }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                web: _this,\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Deletes this web\r\n     *\r\n     */\r\n    Web.prototype.delete = function () {\r\n        return _super.prototype.deleteCore.call(this);\r\n    };\r\n    /**\r\n     * Applies the theme specified by the contents of each of the files specified in the arguments to the site\r\n     *\r\n     * @param colorPaletteUrl The server-relative URL of the color palette file\r\n     * @param fontSchemeUrl The server-relative URL of the font scheme\r\n     * @param backgroundImageUrl The server-relative URL of the background image\r\n     * @param shareGenerated When true, the generated theme files are stored in the root site. When false, they are stored in this web\r\n     */\r\n    Web.prototype.applyTheme = function (colorPaletteUrl, fontSchemeUrl, backgroundImageUrl, shareGenerated) {\r\n        var postBody = jsS({\r\n            backgroundImageUrl: backgroundImageUrl,\r\n            colorPaletteUrl: colorPaletteUrl,\r\n            fontSchemeUrl: fontSchemeUrl,\r\n            shareGenerated: shareGenerated,\r\n        });\r\n        return this.clone(Web_1, \"applytheme\").postCore({ body: postBody });\r\n    };\r\n    /**\r\n     * Applies the specified site definition or site template to the Web site that has no template applied to it\r\n     *\r\n     * @param template Name of the site definition or the name of the site template\r\n     */\r\n    Web.prototype.applyWebTemplate = function (template) {\r\n        var q = this.clone(Web_1, \"applywebtemplate\");\r\n        q.concat(\"(@t)\");\r\n        q.query.set(\"@t\", template);\r\n        return q.postCore();\r\n    };\r\n    /**\r\n     * Checks whether the specified login name belongs to a valid user in the web. If the user doesn't exist, adds the user to the web.\r\n     *\r\n     * @param loginName The login name of the user (ex: i:0#.f|membership|user@domain.onmicrosoft.com)\r\n     */\r\n    Web.prototype.ensureUser = function (loginName) {\r\n        var postBody = jsS({\r\n            logonName: loginName,\r\n        });\r\n        return this.clone(Web_1, \"ensureuser\").postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                user: new SiteUser(odataUrlFrom(data)),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Returns a collection of site templates available for the site\r\n     *\r\n     * @param language The locale id of the site templates to retrieve (default = 1033 [English, US])\r\n     * @param includeCrossLanguage When true, includes language-neutral site templates; otherwise false (default = true)\r\n     */\r\n    Web.prototype.availableWebTemplates = function (language, includeCrossLanugage) {\r\n        if (language === void 0) { language = 1033; }\r\n        if (includeCrossLanugage === void 0) { includeCrossLanugage = true; }\r\n        return new SharePointQueryableCollection(this, \"getavailablewebtemplates(lcid=\" + language + \", doincludecrosslanguage=\" + includeCrossLanugage + \")\");\r\n    };\r\n    /**\r\n     * Returns the list gallery on the site\r\n     *\r\n     * @param type The gallery type - WebTemplateCatalog = 111, WebPartCatalog = 113 ListTemplateCatalog = 114,\r\n     * MasterPageCatalog = 116, SolutionCatalog = 121, ThemeCatalog = 123, DesignCatalog = 124, AppDataCatalog = 125\r\n     */\r\n    Web.prototype.getCatalog = function (type) {\r\n        return this.clone(Web_1, \"getcatalog(\" + type + \")\").select(\"Id\").get().then(function (data) {\r\n            return new List(odataUrlFrom(data));\r\n        });\r\n    };\r\n    /**\r\n     * Returns the collection of changes from the change log that have occurred within the list, based on the specified query\r\n     *\r\n     * @param query The change query\r\n     */\r\n    Web.prototype.getChanges = function (query) {\r\n        var postBody = jsS({ \"query\": extend({ \"__metadata\": { \"type\": \"SP.ChangeQuery\" } }, query) });\r\n        return this.clone(Web_1, \"getchanges\").postCore({ body: postBody });\r\n    };\r\n    Object.defineProperty(Web.prototype, \"customListTemplate\", {\r\n        /**\r\n         * Gets the custom list templates for the site\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableCollection(this, \"getcustomlisttemplates\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Returns the user corresponding to the specified member identifier for the current site\r\n     *\r\n     * @param id The id of the user\r\n     */\r\n    Web.prototype.getUserById = function (id) {\r\n        return new SiteUser(this, \"getUserById(\" + id + \")\");\r\n    };\r\n    /**\r\n     * Returns the name of the image file for the icon that is used to represent the specified file\r\n     *\r\n     * @param filename The file name. If this parameter is empty, the server returns an empty string\r\n     * @param size The size of the icon: 16x16 pixels = 0, 32x32 pixels = 1 (default = 0)\r\n     * @param progId The ProgID of the application that was used to create the file, in the form OLEServerName.ObjectName\r\n     */\r\n    Web.prototype.mapToIcon = function (filename, size, progId) {\r\n        if (size === void 0) { size = 0; }\r\n        if (progId === void 0) { progId = \"\"; }\r\n        return this.clone(Web_1, \"maptoicon(filename='\" + filename + \"', progid='\" + progId + \"', size=\" + size + \")\").get();\r\n    };\r\n    /**\r\n     * Returns the tenant property corresponding to the specified key in the app catalog site\r\n     *\r\n     * @param key Id of storage entity to be set\r\n     */\r\n    Web.prototype.getStorageEntity = function (key) {\r\n        return this.clone(Web_1, \"getStorageEntity('\" + key + \"')\").get();\r\n    };\r\n    /**\r\n     * This will set the storage entity identified by the given key (MUST be called in the context of the app catalog)\r\n     *\r\n     * @param key Id of storage entity to be set\r\n     * @param value Value of storage entity to be set\r\n     * @param description Description of storage entity to be set\r\n     * @param comments Comments of storage entity to be set\r\n     */\r\n    Web.prototype.setStorageEntity = function (key, value, description, comments) {\r\n        if (description === void 0) { description = \"\"; }\r\n        if (comments === void 0) { comments = \"\"; }\r\n        return this.clone(Web_1, \"setStorageEntity\").postCore({\r\n            body: jsS({\r\n                comments: comments,\r\n                description: description,\r\n                key: key,\r\n                value: value,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * This will remove the storage entity identified by the given key\r\n     *\r\n     * @param key Id of storage entity to be removed\r\n     */\r\n    Web.prototype.removeStorageEntity = function (key) {\r\n        return this.clone(Web_1, \"removeStorageEntity('\" + key + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Gets the tenant app catalog for this web\r\n     *\r\n     * @param url Optional url or web containing the app catalog (default: current web)\r\n     */\r\n    Web.prototype.getAppCatalog = function (url) {\r\n        return new AppCatalog(url || this);\r\n    };\r\n    /**\r\n     * Gets the site collection app catalog for this web\r\n     *\r\n     * @param url Optional url or web containing the app catalog (default: current web)\r\n     */\r\n    Web.prototype.getSiteCollectionAppCatalog = function (url) {\r\n        return new AppCatalog(url || this, \"_api/web/sitecollectionappcatalog/AvailableApps\");\r\n    };\r\n    /**\r\n     * Gets the collection of available client side web parts for this web instance\r\n     */\r\n    Web.prototype.getClientSideWebParts = function () {\r\n        return this.clone(SharePointQueryableCollection, \"GetClientSideWebParts\").get();\r\n    };\r\n    /**\r\n     * Creates a new client side page\r\n     *\r\n     * @param pageName Name of the new page\r\n     * @param title Display title of the new page\r\n     * @param libraryTitle Title of the library in which to create the new page. Default: \"Site Pages\"\r\n     */\r\n    Web.prototype.addClientSidePage = function (pageName, title) {\r\n        if (title === void 0) { title = pageName.replace(/\\.[^/.]+$/, \"\"); }\r\n        return ClientSidePage.create(this, pageName, title);\r\n    };\r\n    /**\r\n     * Creates a new client side page using the library path\r\n     *\r\n     * @param pageName Name of the new page\r\n     * @param listRelativePath The server relative path to the list's root folder (including /sites/ if applicable)\r\n     * @param title Display title of the new page\r\n     */\r\n    Web.prototype.addClientSidePageByPath = function (pageName, title) {\r\n        if (title === void 0) { title = pageName.replace(/\\.[^/.]+$/, \"\"); }\r\n        return ClientSidePage.create(this, pageName, title);\r\n    };\r\n    /**\r\n     * Creates the default associated groups (Members, Owners, Visitors) and gives them the default permissions on the site.\r\n     * The target site must have unique permissions and no associated members / owners / visitors groups\r\n     *\r\n     * @param siteOwner The user login name to be added to the site Owners group. Default is the current user\r\n     * @param siteOwner2 The second user login name to be added to the site Owners group. Default is empty\r\n     * @param groupNameSeed The base group name. E.g. 'TestSite' would produce 'TestSite Members' etc.\r\n     */\r\n    Web.prototype.createDefaultAssociatedGroups = function (siteOwner, siteOwner2, groupNameSeed) {\r\n        var q = this.clone(Web_1, \"createDefaultAssociatedGroups(userLogin=@u,userLogin2=@v,groupNameSeed=@s)\");\r\n        q.query.set(\"@u\", \"'\" + encodeURIComponent(siteOwner || \"\") + \"'\");\r\n        q.query.set(\"@v\", \"'\" + encodeURIComponent(siteOwner2 || \"\") + \"'\");\r\n        q.query.set(\"@s\", \"'\" + encodeURIComponent(groupNameSeed || \"\") + \"'\");\r\n        return q.postCore();\r\n    };\r\n    /**\r\n     * Gets hub site data for the current web.\r\n     *\r\n     * @param forceRefresh Default value is false. When false, the data is returned from the server's cache.\r\n     * When true, the cache is refreshed with the latest updates and then returned.\r\n     * Use this if you just made changes and need to see those changes right away.\r\n     */\r\n    Web.prototype.hubSiteData = function (forceRefresh) {\r\n        if (forceRefresh === void 0) { forceRefresh = false; }\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            return tslib_1.__generator(this, function (_a) {\r\n                return [2 /*return*/, this.clone(Web_1, \"hubSiteData(\" + forceRefresh + \")\").get().then(function (r) { return JSON.parse(r); })];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Applies theme updates from the parent hub site collection.\r\n     */\r\n    Web.prototype.syncHubSiteTheme = function () {\r\n        return this.clone(Web_1, \"syncHubSiteTheme\").postCore();\r\n    };\r\n    var Web_1;\r\n    Web = Web_1 = tslib_1.__decorate([\r\n        defaultPath(\"_api/web\")\r\n    ], Web);\r\n    return Web;\r\n}(SharePointQueryableShareableWeb));\r\nexport { Web };\r\n//# sourceMappingURL=webs.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryableInstance, defaultPath } from \"./sharepointqueryable\";\r\nimport { extend, jsS, hOP, getHashCode, objectDefinedNotNull, isArray } from \"@pnp/common\";\r\nimport { metadata } from \"./utils/metadata\";\r\nimport { CachingOptions } from \"@pnp/odata\";\r\nvar funcs = new Map([\r\n    [\"text\", \"Querytext\"],\r\n    [\"template\", \"QueryTemplate\"],\r\n    [\"sourceId\", \"SourceId\"],\r\n    [\"trimDuplicatesIncludeId\", \"\"],\r\n    [\"startRow\", \"\"],\r\n    [\"rowLimit\", \"\"],\r\n    [\"rankingModelId\", \"\"],\r\n    [\"rowsPerPage\", \"\"],\r\n    [\"selectProperties\", \"\"],\r\n    [\"culture\", \"\"],\r\n    [\"timeZoneId\", \"\"],\r\n    [\"refinementFilters\", \"\"],\r\n    [\"refiners\", \"\"],\r\n    [\"hiddenConstraints\", \"\"],\r\n    [\"sortList\", \"\"],\r\n    [\"timeout\", \"\"],\r\n    [\"hithighlightedProperties\", \"\"],\r\n    [\"clientType\", \"\"],\r\n    [\"personalizationData\", \"\"],\r\n    [\"resultsURL\", \"\"],\r\n    [\"queryTag\", \"\"],\r\n    [\"properties\", \"\"],\r\n    [\"queryTemplatePropertiesUrl\", \"\"],\r\n    [\"reorderingRules\", \"\"],\r\n    [\"hitHighlightedMultivaluePropertyLimit\", \"\"],\r\n    [\"collapseSpecification\", \"\"],\r\n    [\"uiLanguage\", \"\"],\r\n    [\"desiredSnippetLength\", \"\"],\r\n    [\"maxSnippetLength\", \"\"],\r\n    [\"summaryLength\", \"\"],\r\n]);\r\nvar props = new Map([]);\r\nfunction toPropCase(str) {\r\n    return str.replace(/^(.)/, function ($1) { return $1.toUpperCase(); });\r\n}\r\n/**\r\n * Creates a new instance of the SearchQueryBuilder\r\n *\r\n * @param queryText Initial query text\r\n * @param _query Any initial query configuration\r\n */\r\nexport function SearchQueryBuilder(queryText, _query) {\r\n    if (queryText === void 0) { queryText = \"\"; }\r\n    if (_query === void 0) { _query = {}; }\r\n    return new Proxy({\r\n        query: Object.assign({\r\n            Querytext: queryText,\r\n        }, _query),\r\n    }, {\r\n        get: function (self, propertyKey, proxy) {\r\n            var pk = propertyKey.toString();\r\n            if (pk === \"toSearchQuery\") {\r\n                return function () { return self.query; };\r\n            }\r\n            if (funcs.has(pk)) {\r\n                return function () {\r\n                    var value = [];\r\n                    for (var _i = 0; _i < arguments.length; _i++) {\r\n                        value[_i] = arguments[_i];\r\n                    }\r\n                    var mappedPk = funcs.get(pk);\r\n                    self.query[mappedPk.length > 0 ? mappedPk : toPropCase(pk)] = value.length > 1 ? value : value[0];\r\n                    return proxy;\r\n                };\r\n            }\r\n            var propKey = props.has(pk) ? props.get(pk) : toPropCase(pk);\r\n            self.query[propKey] = true;\r\n            return proxy;\r\n        },\r\n    });\r\n}\r\n/**\r\n * Describes the search API\r\n *\r\n */\r\nvar Search = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Search, _super);\r\n    function Search() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * @returns Promise\r\n     */\r\n    Search.prototype.execute = function (queryInit) {\r\n        var _this = this;\r\n        var query = this.parseQuery(queryInit);\r\n        var postBody = jsS({\r\n            request: extend(metadata(\"Microsoft.Office.Server.Search.REST.SearchRequest\"), Object.assign({}, query, {\r\n                HitHighlightedProperties: this.fixArrProp(query.HitHighlightedProperties),\r\n                Properties: this.fixArrProp(query.Properties),\r\n                RefinementFilters: this.fixArrProp(query.RefinementFilters),\r\n                ReorderingRules: this.fixArrProp(query.ReorderingRules),\r\n                SelectProperties: this.fixArrProp(query.SelectProperties),\r\n                SortList: this.fixArrProp(query.SortList),\r\n            })),\r\n        });\r\n        // if we are using caching with this search request, then we need to handle some work upfront to enable that\r\n        if (this._useCaching) {\r\n            // force use of the cache for this request if .usingCaching was called\r\n            this._forceCaching = true;\r\n            // because all the requests use the same url they would collide in the cache we use a special key\r\n            var cacheKey = \"PnPjs.SearchWithCaching(\" + getHashCode(postBody) + \")\";\r\n            if (objectDefinedNotNull(this._cachingOptions)) {\r\n                // if our key ends in the postquery url we overwrite it\r\n                if (/\\/_api\\/search\\/postquery$/i.test(this._cachingOptions.key)) {\r\n                    this._cachingOptions.key = cacheKey;\r\n                }\r\n            }\r\n            else {\r\n                this._cachingOptions = new CachingOptions(cacheKey);\r\n            }\r\n        }\r\n        return this.postCore({ body: postBody }).then(function (data) { return new SearchResults(data, _this.toUrl(), query); });\r\n    };\r\n    /**\r\n     * Fix array property\r\n     *\r\n     * @param prop property to fix for container struct\r\n     */\r\n    Search.prototype.fixArrProp = function (prop) {\r\n        if (typeof prop === \"undefined\") {\r\n            return ({ results: [] });\r\n        }\r\n        prop = isArray(prop) ? prop : [prop];\r\n        return hOP(prop, \"results\") ? prop : { results: prop };\r\n    };\r\n    /**\r\n     * Translates one of the query initializers into a SearchQuery instance\r\n     *\r\n     * @param query\r\n     */\r\n    Search.prototype.parseQuery = function (query) {\r\n        var finalQuery;\r\n        if (typeof query === \"string\") {\r\n            finalQuery = { Querytext: query };\r\n        }\r\n        else if (query.toSearchQuery) {\r\n            finalQuery = query.toSearchQuery();\r\n        }\r\n        else {\r\n            finalQuery = query;\r\n        }\r\n        return finalQuery;\r\n    };\r\n    Search = tslib_1.__decorate([\r\n        defaultPath(\"_api/search/postquery\")\r\n    ], Search);\r\n    return Search;\r\n}(SharePointQueryableInstance));\r\nexport { Search };\r\n/**\r\n * Describes the SearchResults class, which returns the formatted and raw version of the query response\r\n */\r\nvar SearchResults = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of the SearchResult class\r\n     *\r\n     */\r\n    function SearchResults(rawResponse, _url, _query, _raw, _primary) {\r\n        if (_raw === void 0) { _raw = null; }\r\n        if (_primary === void 0) { _primary = null; }\r\n        this._url = _url;\r\n        this._query = _query;\r\n        this._raw = _raw;\r\n        this._primary = _primary;\r\n        this._raw = rawResponse.postquery ? rawResponse.postquery : rawResponse;\r\n    }\r\n    Object.defineProperty(SearchResults.prototype, \"ElapsedTime\", {\r\n        get: function () {\r\n            return this.RawSearchResults.ElapsedTime;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchResults.prototype, \"RowCount\", {\r\n        get: function () {\r\n            return this.RawSearchResults.PrimaryQueryResult.RelevantResults.RowCount;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchResults.prototype, \"TotalRows\", {\r\n        get: function () {\r\n            return this.RawSearchResults.PrimaryQueryResult.RelevantResults.TotalRows;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchResults.prototype, \"TotalRowsIncludingDuplicates\", {\r\n        get: function () {\r\n            return this.RawSearchResults.PrimaryQueryResult.RelevantResults.TotalRowsIncludingDuplicates;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchResults.prototype, \"RawSearchResults\", {\r\n        get: function () {\r\n            return this._raw;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchResults.prototype, \"PrimarySearchResults\", {\r\n        get: function () {\r\n            if (this._primary === null) {\r\n                this._primary = this.formatSearchResults(this._raw.PrimaryQueryResult.RelevantResults.Table.Rows);\r\n            }\r\n            return this._primary;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets a page of results\r\n     *\r\n     * @param pageNumber Index of the page to return. Used to determine StartRow\r\n     * @param pageSize Optional, items per page (default = 10)\r\n     */\r\n    SearchResults.prototype.getPage = function (pageNumber, pageSize) {\r\n        // if we got all the available rows we don't have another page\r\n        if (this.TotalRows < this.RowCount) {\r\n            return Promise.resolve(null);\r\n        }\r\n        // if pageSize is supplied, then we use that regardless of any previous values\r\n        // otherwise get the previous RowLimit or default to 10\r\n        var rows = pageSize !== undefined ? pageSize : hOP(this._query, \"RowLimit\") ? this._query.RowLimit : 10;\r\n        var query = extend(this._query, {\r\n            RowLimit: rows,\r\n            StartRow: rows * (pageNumber - 1),\r\n        });\r\n        // we have reached the end\r\n        if (query.StartRow > this.TotalRows) {\r\n            return Promise.resolve(null);\r\n        }\r\n        var search = new Search(this._url, null);\r\n        return search.execute(query);\r\n    };\r\n    /**\r\n     * Formats a search results array\r\n     *\r\n     * @param rawResults The array to process\r\n     */\r\n    SearchResults.prototype.formatSearchResults = function (rawResults) {\r\n        var results = new Array();\r\n        var tempResults = rawResults.results ? rawResults.results : rawResults;\r\n        for (var _i = 0, tempResults_1 = tempResults; _i < tempResults_1.length; _i++) {\r\n            var tempResult = tempResults_1[_i];\r\n            var cells = tempResult.Cells.results ? tempResult.Cells.results : tempResult.Cells;\r\n            results.push(cells.reduce(function (res, cell) {\r\n                Object.defineProperty(res, cell.Key, {\r\n                    configurable: false,\r\n                    enumerable: true,\r\n                    value: cell.Value,\r\n                    writable: false,\r\n                });\r\n                return res;\r\n            }, {}));\r\n        }\r\n        return results;\r\n    };\r\n    return SearchResults;\r\n}());\r\nexport { SearchResults };\r\n/**\r\n * defines the SortDirection enum\r\n */\r\nexport var SortDirection;\r\n(function (SortDirection) {\r\n    SortDirection[SortDirection[\"Ascending\"] = 0] = \"Ascending\";\r\n    SortDirection[SortDirection[\"Descending\"] = 1] = \"Descending\";\r\n    SortDirection[SortDirection[\"FQLFormula\"] = 2] = \"FQLFormula\";\r\n})(SortDirection || (SortDirection = {}));\r\n/**\r\n * defines the ReorderingRuleMatchType  enum\r\n */\r\nexport var ReorderingRuleMatchType;\r\n(function (ReorderingRuleMatchType) {\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"ResultContainsKeyword\"] = 0] = \"ResultContainsKeyword\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"TitleContainsKeyword\"] = 1] = \"TitleContainsKeyword\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"TitleMatchesKeyword\"] = 2] = \"TitleMatchesKeyword\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"UrlStartsWith\"] = 3] = \"UrlStartsWith\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"UrlExactlyMatches\"] = 4] = \"UrlExactlyMatches\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"ContentTypeIs\"] = 5] = \"ContentTypeIs\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"FileExtensionMatches\"] = 6] = \"FileExtensionMatches\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"ResultHasTag\"] = 7] = \"ResultHasTag\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"ManualCondition\"] = 8] = \"ManualCondition\";\r\n})(ReorderingRuleMatchType || (ReorderingRuleMatchType = {}));\r\n/**\r\n * Specifies the type value for the property\r\n */\r\nexport var QueryPropertyValueType;\r\n(function (QueryPropertyValueType) {\r\n    QueryPropertyValueType[QueryPropertyValueType[\"None\"] = 0] = \"None\";\r\n    QueryPropertyValueType[QueryPropertyValueType[\"StringType\"] = 1] = \"StringType\";\r\n    QueryPropertyValueType[QueryPropertyValueType[\"Int32Type\"] = 2] = \"Int32Type\";\r\n    QueryPropertyValueType[QueryPropertyValueType[\"BooleanType\"] = 3] = \"BooleanType\";\r\n    QueryPropertyValueType[QueryPropertyValueType[\"StringArrayType\"] = 4] = \"StringArrayType\";\r\n    QueryPropertyValueType[QueryPropertyValueType[\"UnSupportedType\"] = 5] = \"UnSupportedType\";\r\n})(QueryPropertyValueType || (QueryPropertyValueType = {}));\r\nvar SearchBuiltInSourceId = /** @class */ (function () {\r\n    function SearchBuiltInSourceId() {\r\n    }\r\n    SearchBuiltInSourceId.Documents = \"e7ec8cee-ded8-43c9-beb5-436b54b31e84\";\r\n    SearchBuiltInSourceId.ItemsMatchingContentType = \"5dc9f503-801e-4ced-8a2c-5d1237132419\";\r\n    SearchBuiltInSourceId.ItemsMatchingTag = \"e1327b9c-2b8c-4b23-99c9-3730cb29c3f7\";\r\n    SearchBuiltInSourceId.ItemsRelatedToCurrentUser = \"48fec42e-4a92-48ce-8363-c2703a40e67d\";\r\n    SearchBuiltInSourceId.ItemsWithSameKeywordAsThisItem = \"5c069288-1d17-454a-8ac6-9c642a065f48\";\r\n    SearchBuiltInSourceId.LocalPeopleResults = \"b09a7990-05ea-4af9-81ef-edfab16c4e31\";\r\n    SearchBuiltInSourceId.LocalReportsAndDataResults = \"203fba36-2763-4060-9931-911ac8c0583b\";\r\n    SearchBuiltInSourceId.LocalSharePointResults = \"8413cd39-2156-4e00-b54d-11efd9abdb89\";\r\n    SearchBuiltInSourceId.LocalVideoResults = \"78b793ce-7956-4669-aa3b-451fc5defebf\";\r\n    SearchBuiltInSourceId.Pages = \"5e34578e-4d08-4edc-8bf3-002acf3cdbcc\";\r\n    SearchBuiltInSourceId.Pictures = \"38403c8c-3975-41a8-826e-717f2d41568a\";\r\n    SearchBuiltInSourceId.Popular = \"97c71db1-58ce-4891-8b64-585bc2326c12\";\r\n    SearchBuiltInSourceId.RecentlyChangedItems = \"ba63bbae-fa9c-42c0-b027-9a878f16557c\";\r\n    SearchBuiltInSourceId.RecommendedItems = \"ec675252-14fa-4fbe-84dd-8d098ed74181\";\r\n    SearchBuiltInSourceId.Wiki = \"9479bf85-e257-4318-b5a8-81a180f5faa1\";\r\n    return SearchBuiltInSourceId;\r\n}());\r\nexport { SearchBuiltInSourceId };\r\n//# sourceMappingURL=search.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryableInstance, defaultPath, } from \"./sharepointqueryable\";\r\nimport { jsS, hOP } from \"@pnp/common\";\r\nimport { metadata } from \"./utils/metadata\";\r\n/**\r\n * Exposes social following methods\r\n */\r\nvar SocialQuery = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SocialQuery, _super);\r\n    function SocialQuery() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    SocialQuery_1 = SocialQuery;\r\n    Object.defineProperty(SocialQuery.prototype, \"my\", {\r\n        get: function () {\r\n            return new MySocialQuery(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets a URI to a site that lists the current user's followed sites.\r\n     */\r\n    SocialQuery.prototype.getFollowedSitesUri = function () {\r\n        return this.clone(SocialQuery_1, \"FollowedSitesUri\").get().then(function (r) {\r\n            return r.FollowedSitesUri || r;\r\n        });\r\n    };\r\n    /**\r\n     * Gets a URI to a site that lists the current user's followed documents.\r\n     */\r\n    SocialQuery.prototype.getFollowedDocumentsUri = function () {\r\n        return this.clone(SocialQuery_1, \"FollowedDocumentsUri\").get().then(function (r) {\r\n            return r.FollowedDocumentsUri || r;\r\n        });\r\n    };\r\n    /**\r\n     * Makes the current user start following a user, document, site, or tag\r\n     *\r\n     * @param actorInfo The actor to start following\r\n     */\r\n    SocialQuery.prototype.follow = function (actorInfo) {\r\n        return this.clone(SocialQuery_1, \"follow\").postCore({ body: this.createSocialActorInfoRequestBody(actorInfo) });\r\n    };\r\n    /**\r\n     * Indicates whether the current user is following a specified user, document, site, or tag\r\n     *\r\n     * @param actorInfo The actor to find the following status for\r\n     */\r\n    SocialQuery.prototype.isFollowed = function (actorInfo) {\r\n        return this.clone(SocialQuery_1, \"isfollowed\").postCore({ body: this.createSocialActorInfoRequestBody(actorInfo) });\r\n    };\r\n    /**\r\n     * Makes the current user stop following a user, document, site, or tag\r\n     *\r\n     * @param actorInfo The actor to stop following\r\n     */\r\n    SocialQuery.prototype.stopFollowing = function (actorInfo) {\r\n        return this.clone(SocialQuery_1, \"stopfollowing\").postCore({ body: this.createSocialActorInfoRequestBody(actorInfo) });\r\n    };\r\n    /**\r\n     * Creates SocialActorInfo request body\r\n     *\r\n     * @param actorInfo The actor to create request body\r\n     */\r\n    SocialQuery.prototype.createSocialActorInfoRequestBody = function (actorInfo) {\r\n        return jsS({\r\n            \"actor\": Object.assign(metadata(\"SP.Social.SocialActorInfo\"), {\r\n                Id: null,\r\n            }, actorInfo),\r\n        });\r\n    };\r\n    var SocialQuery_1;\r\n    SocialQuery = SocialQuery_1 = tslib_1.__decorate([\r\n        defaultPath(\"_api/social.following\")\r\n    ], SocialQuery);\r\n    return SocialQuery;\r\n}(SharePointQueryableInstance));\r\nexport { SocialQuery };\r\nvar MySocialQuery = /** @class */ (function (_super) {\r\n    tslib_1.__extends(MySocialQuery, _super);\r\n    function MySocialQuery() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    MySocialQuery_1 = MySocialQuery;\r\n    /**\r\n     * Gets users, documents, sites, and tags that the current user is following.\r\n     *\r\n     * @param types Bitwise set of SocialActorTypes to retrieve\r\n     */\r\n    MySocialQuery.prototype.followed = function (types) {\r\n        return this.clone(MySocialQuery_1, \"followed(types=\" + types + \")\").get().then(function (r) {\r\n            return hOP(r, \"Followed\") ? r.Followed.results : r;\r\n        });\r\n    };\r\n    /**\r\n     * Gets the count of users, documents, sites, and tags that the current user is following.\r\n     *\r\n     * @param types Bitwise set of SocialActorTypes to retrieve\r\n     */\r\n    MySocialQuery.prototype.followedCount = function (types) {\r\n        return this.clone(MySocialQuery_1, \"followedcount(types=\" + types + \")\").get().then(function (r) {\r\n            return r.FollowedCount || r;\r\n        });\r\n    };\r\n    /**\r\n     * Gets the users who are following the current user.\r\n     */\r\n    MySocialQuery.prototype.followers = function () {\r\n        return this.clone(MySocialQuery_1, \"followers\").get().then(function (r) {\r\n            return hOP(r, \"Followers\") ? r.Followers.results : r;\r\n        });\r\n    };\r\n    /**\r\n     * Gets users who the current user might want to follow.\r\n     */\r\n    MySocialQuery.prototype.suggestions = function () {\r\n        return this.clone(MySocialQuery_1, \"suggestions\").get().then(function (r) {\r\n            return hOP(r, \"Suggestions\") ? r.Suggestions.results : r;\r\n        });\r\n    };\r\n    var MySocialQuery_1;\r\n    MySocialQuery = MySocialQuery_1 = tslib_1.__decorate([\r\n        defaultPath(\"my\")\r\n    ], MySocialQuery);\r\n    return MySocialQuery;\r\n}(SharePointQueryableInstance));\r\nexport { MySocialQuery };\r\n/**\r\n * Social actor type\r\n *\r\n */\r\nexport var SocialActorType;\r\n(function (SocialActorType) {\r\n    SocialActorType[SocialActorType[\"User\"] = 0] = \"User\";\r\n    SocialActorType[SocialActorType[\"Document\"] = 1] = \"Document\";\r\n    SocialActorType[SocialActorType[\"Site\"] = 2] = \"Site\";\r\n    SocialActorType[SocialActorType[\"Tag\"] = 3] = \"Tag\";\r\n})(SocialActorType || (SocialActorType = {}));\r\n/**\r\n * Social actor type\r\n *\r\n */\r\n/* tslint:disable:no-bitwise */\r\nexport var SocialActorTypes;\r\n(function (SocialActorTypes) {\r\n    SocialActorTypes[SocialActorTypes[\"None\"] = 0] = \"None\";\r\n    SocialActorTypes[SocialActorTypes[\"User\"] = 1] = \"User\";\r\n    SocialActorTypes[SocialActorTypes[\"Document\"] = 2] = \"Document\";\r\n    SocialActorTypes[SocialActorTypes[\"Site\"] = 4] = \"Site\";\r\n    SocialActorTypes[SocialActorTypes[\"Tag\"] = 8] = \"Tag\";\r\n    /**\r\n     * The set excludes documents and sites that do not have feeds.\r\n     */\r\n    SocialActorTypes[SocialActorTypes[\"ExcludeContentWithoutFeeds\"] = 268435456] = \"ExcludeContentWithoutFeeds\";\r\n    /**\r\n     * The set includes group sites\r\n     */\r\n    SocialActorTypes[SocialActorTypes[\"IncludeGroupsSites\"] = 536870912] = \"IncludeGroupsSites\";\r\n    /**\r\n     * The set includes only items created within the last 24 hours\r\n     */\r\n    SocialActorTypes[SocialActorTypes[\"WithinLast24Hours\"] = 1073741824] = \"WithinLast24Hours\";\r\n})(SocialActorTypes || (SocialActorTypes = {}));\r\n/* tslint:enable */\r\n/**\r\n * Result from following\r\n *\r\n */\r\nexport var SocialFollowResult;\r\n(function (SocialFollowResult) {\r\n    SocialFollowResult[SocialFollowResult[\"Ok\"] = 0] = \"Ok\";\r\n    SocialFollowResult[SocialFollowResult[\"AlreadyFollowing\"] = 1] = \"AlreadyFollowing\";\r\n    SocialFollowResult[SocialFollowResult[\"LimitReached\"] = 2] = \"LimitReached\";\r\n    SocialFollowResult[SocialFollowResult[\"InternalError\"] = 3] = \"InternalError\";\r\n})(SocialFollowResult || (SocialFollowResult = {}));\r\n/**\r\n * Specifies an exception or status code.\r\n */\r\nexport var SocialStatusCode;\r\n(function (SocialStatusCode) {\r\n    /**\r\n     * The operation completed successfully\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"OK\"] = 0] = \"OK\";\r\n    /**\r\n     * The request is invalid.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"InvalidRequest\"] = 1] = \"InvalidRequest\";\r\n    /**\r\n     *  The current user is not authorized to perform the operation.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"AccessDenied\"] = 2] = \"AccessDenied\";\r\n    /**\r\n     * The target of the operation was not found.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"ItemNotFound\"] = 3] = \"ItemNotFound\";\r\n    /**\r\n     * The operation is invalid for the target's current state.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"InvalidOperation\"] = 4] = \"InvalidOperation\";\r\n    /**\r\n     * The operation completed without modifying the target.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"ItemNotModified\"] = 5] = \"ItemNotModified\";\r\n    /**\r\n     * The operation failed because an internal error occurred.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"InternalError\"] = 6] = \"InternalError\";\r\n    /**\r\n     * The operation failed because the server could not access the distributed cache.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"CacheReadError\"] = 7] = \"CacheReadError\";\r\n    /**\r\n     * The operation succeeded but the server could not update the distributed cache.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"CacheUpdateError\"] = 8] = \"CacheUpdateError\";\r\n    /**\r\n     * No personal site exists for the current user, and no further information is available.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"PersonalSiteNotFound\"] = 9] = \"PersonalSiteNotFound\";\r\n    /**\r\n     * No personal site exists for the current user, and a previous attempt to create one failed.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"FailedToCreatePersonalSite\"] = 10] = \"FailedToCreatePersonalSite\";\r\n    /**\r\n     * No personal site exists for the current user, and a previous attempt to create one was not authorized.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"NotAuthorizedToCreatePersonalSite\"] = 11] = \"NotAuthorizedToCreatePersonalSite\";\r\n    /**\r\n     * No personal site exists for the current user, and no attempt should be made to create one.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"CannotCreatePersonalSite\"] = 12] = \"CannotCreatePersonalSite\";\r\n    /**\r\n     * The operation was rejected because an internal limit had been reached.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"LimitReached\"] = 13] = \"LimitReached\";\r\n    /**\r\n     * The operation failed because an error occurred during the processing of the specified attachment.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"AttachmentError\"] = 14] = \"AttachmentError\";\r\n    /**\r\n     * The operation succeeded with recoverable errors; the returned data is incomplete.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"PartialData\"] = 15] = \"PartialData\";\r\n    /**\r\n     * A required SharePoint feature is not enabled.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"FeatureDisabled\"] = 16] = \"FeatureDisabled\";\r\n    /**\r\n     * The site's storage quota has been exceeded.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"StorageQuotaExceeded\"] = 17] = \"StorageQuotaExceeded\";\r\n    /**\r\n     * The operation failed because the server could not access the database.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"DatabaseError\"] = 18] = \"DatabaseError\";\r\n})(SocialStatusCode || (SocialStatusCode = {}));\r\n//# sourceMappingURL=social.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryableInstance, defaultPath } from \"./sharepointqueryable\";\r\nimport { hOP } from \"@pnp/common\";\r\nvar SearchSuggest = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SearchSuggest, _super);\r\n    function SearchSuggest() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    SearchSuggest.prototype.execute = function (query) {\r\n        this.mapQueryToQueryString(query);\r\n        return this.get().then(function (response) {\r\n            var mapper = hOP(response, \"suggest\") ? function (s) { return response.suggest[s].results; } : function (s) { return response[s]; };\r\n            return {\r\n                PeopleNames: mapper(\"PeopleNames\"),\r\n                PersonalResults: mapper(\"PersonalResults\"),\r\n                Queries: mapper(\"Queries\"),\r\n            };\r\n        });\r\n    };\r\n    SearchSuggest.prototype.mapQueryToQueryString = function (query) {\r\n        var _this = this;\r\n        var setProp = function (q) { return function (checkProp) { return function (sp) {\r\n            if (hOP(q, checkProp)) {\r\n                _this.query.set(sp, q[checkProp].toString());\r\n            }\r\n        }; }; };\r\n        this.query.set(\"querytext\", \"'\" + query.querytext + \"'\");\r\n        var querySetter = setProp(query);\r\n        querySetter(\"count\")(\"inumberofquerysuggestions\");\r\n        querySetter(\"personalCount\")(\"inumberofresultsuggestions\");\r\n        querySetter(\"preQuery\")(\"fprequerysuggestions\");\r\n        querySetter(\"hitHighlighting\")(\"fhithighlighting\");\r\n        querySetter(\"capitalize\")(\"fcapitalizefirstletters\");\r\n        querySetter(\"culture\")(\"culture\");\r\n        querySetter(\"stemming\")(\"enablestemming\");\r\n        querySetter(\"includePeople\")(\"showpeoplenamesuggestions\");\r\n        querySetter(\"queryRules\")(\"enablequeryrules\");\r\n        querySetter(\"prefixMatch\")(\"fprefixmatchallterms\");\r\n    };\r\n    SearchSuggest = tslib_1.__decorate([\r\n        defaultPath(\"_api/search/suggest\")\r\n    ], SearchSuggest);\r\n    return SearchSuggest;\r\n}(SharePointQueryableInstance));\r\nexport { SearchSuggest };\r\n//# sourceMappingURL=searchsuggest.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryable, SharePointQueryableInstance, SharePointQueryableCollection, defaultPath } from \"./sharepointqueryable\";\r\nimport { extend, jsS } from \"@pnp/common\";\r\nimport { metadata } from \"./utils/metadata\";\r\nvar UserProfileQuery = /** @class */ (function (_super) {\r\n    tslib_1.__extends(UserProfileQuery, _super);\r\n    /**\r\n     * Creates a new instance of the UserProfileQuery class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this user profile query\r\n     */\r\n    function UserProfileQuery(baseUrl, path) {\r\n        if (path === void 0) { path = \"_api/sp.userprofiles.peoplemanager\"; }\r\n        var _this = _super.call(this, baseUrl, path) || this;\r\n        _this.clientPeoplePickerQuery = (new ClientPeoplePickerQuery(baseUrl)).configureFrom(_this);\r\n        _this.profileLoader = (new ProfileLoader(baseUrl)).configureFrom(_this);\r\n        return _this;\r\n    }\r\n    Object.defineProperty(UserProfileQuery.prototype, \"editProfileLink\", {\r\n        /**\r\n         * The url of the edit profile page for the current user\r\n         */\r\n        get: function () {\r\n            return this.clone(UserProfileQuery, \"EditProfileLink\").get();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(UserProfileQuery.prototype, \"isMyPeopleListPublic\", {\r\n        /**\r\n         * A boolean value that indicates whether the current user's \"People I'm Following\" list is public\r\n         */\r\n        get: function () {\r\n            return this.clone(UserProfileQuery, \"IsMyPeopleListPublic\").get();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * A boolean value that indicates whether the current user is being followed by the specified user\r\n     *\r\n     * @param loginName The account name of the user\r\n     */\r\n    UserProfileQuery.prototype.amIFollowedBy = function (loginName) {\r\n        var q = this.clone(UserProfileQuery, \"amifollowedby(@v)\");\r\n        q.query.set(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.get();\r\n    };\r\n    /**\r\n     * A boolean value that indicates whether the current user is following the specified user\r\n     *\r\n     * @param loginName The account name of the user\r\n     */\r\n    UserProfileQuery.prototype.amIFollowing = function (loginName) {\r\n        var q = this.clone(UserProfileQuery, \"amifollowing(@v)\");\r\n        q.query.set(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.get();\r\n    };\r\n    /**\r\n     * Gets tags that the current user is following\r\n     *\r\n     * @param maxCount The maximum number of tags to retrieve (default is 20)\r\n     */\r\n    UserProfileQuery.prototype.getFollowedTags = function (maxCount) {\r\n        if (maxCount === void 0) { maxCount = 20; }\r\n        return this.clone(UserProfileQuery, \"getfollowedtags(\" + maxCount + \")\").get();\r\n    };\r\n    /**\r\n     * Gets the people who are following the specified user\r\n     *\r\n     * @param loginName The account name of the user\r\n     */\r\n    UserProfileQuery.prototype.getFollowersFor = function (loginName) {\r\n        var q = this.clone(UserProfileQuery, \"getfollowersfor(@v)\");\r\n        q.query.set(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.get();\r\n    };\r\n    Object.defineProperty(UserProfileQuery.prototype, \"myFollowers\", {\r\n        /**\r\n         * Gets the people who are following the current user\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableCollection(this, \"getmyfollowers\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(UserProfileQuery.prototype, \"myProperties\", {\r\n        /**\r\n         * Gets user properties for the current user\r\n         *\r\n         */\r\n        get: function () {\r\n            return new UserProfileQuery(this, \"getmyproperties\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets the people who the specified user is following\r\n     *\r\n     * @param loginName The account name of the user.\r\n     */\r\n    UserProfileQuery.prototype.getPeopleFollowedBy = function (loginName) {\r\n        var q = this.clone(UserProfileQuery, \"getpeoplefollowedby(@v)\");\r\n        q.query.set(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.get();\r\n    };\r\n    /**\r\n     * Gets user properties for the specified user.\r\n     *\r\n     * @param loginName The account name of the user.\r\n     */\r\n    UserProfileQuery.prototype.getPropertiesFor = function (loginName) {\r\n        var q = this.clone(UserProfileQuery, \"getpropertiesfor(@v)\");\r\n        q.query.set(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.get();\r\n    };\r\n    Object.defineProperty(UserProfileQuery.prototype, \"trendingTags\", {\r\n        /**\r\n         * Gets the 20 most popular hash tags over the past week, sorted so that the most popular tag appears first\r\n         *\r\n         */\r\n        get: function () {\r\n            var q = this.clone(UserProfileQuery, null);\r\n            q.concat(\".gettrendingtags\");\r\n            return q.get();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets the specified user profile property for the specified user\r\n     *\r\n     * @param loginName The account name of the user\r\n     * @param propertyName The case-sensitive name of the property to get\r\n     */\r\n    UserProfileQuery.prototype.getUserProfilePropertyFor = function (loginName, propertyName) {\r\n        var q = this.clone(UserProfileQuery, \"getuserprofilepropertyfor(accountname=@v, propertyname='\" + propertyName + \"')\");\r\n        q.query.set(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.get();\r\n    };\r\n    /**\r\n     * Removes the specified user from the user's list of suggested people to follow\r\n     *\r\n     * @param loginName The account name of the user\r\n     */\r\n    UserProfileQuery.prototype.hideSuggestion = function (loginName) {\r\n        var q = this.clone(UserProfileQuery, \"hidesuggestion(@v)\");\r\n        q.query.set(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.postCore();\r\n    };\r\n    /**\r\n     * A boolean values that indicates whether the first user is following the second user\r\n     *\r\n     * @param follower The account name of the user who might be following the followee\r\n     * @param followee The account name of the user who might be followed by the follower\r\n     */\r\n    UserProfileQuery.prototype.isFollowing = function (follower, followee) {\r\n        var q = this.clone(UserProfileQuery, null);\r\n        q.concat(\".isfollowing(possiblefolloweraccountname=@v, possiblefolloweeaccountname=@y)\");\r\n        q.query.set(\"@v\", \"'\" + encodeURIComponent(follower) + \"'\");\r\n        q.query.set(\"@y\", \"'\" + encodeURIComponent(followee) + \"'\");\r\n        return q.get();\r\n    };\r\n    /**\r\n     * Uploads and sets the user profile picture (Users can upload a picture to their own profile only). Not supported for batching.\r\n     *\r\n     * @param profilePicSource Blob data representing the user's picture in BMP, JPEG, or PNG format of up to 4.76MB\r\n     */\r\n    UserProfileQuery.prototype.setMyProfilePic = function (profilePicSource) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            var buffer = null;\r\n            var reader = new FileReader();\r\n            reader.onload = function (e) { return buffer = e.target.result; };\r\n            reader.readAsArrayBuffer(profilePicSource);\r\n            var request = new UserProfileQuery(_this, \"setmyprofilepicture\");\r\n            request.postCore({\r\n                body: String.fromCharCode.apply(null, new Uint16Array(buffer)),\r\n            }).then(function (_) { return resolve(); }).catch(function (e) { return reject(e); });\r\n        });\r\n    };\r\n    /**\r\n     * Sets single value User Profile property\r\n     *\r\n     * @param accountName The account name of the user\r\n     * @param propertyName Property name\r\n     * @param propertyValue Property value\r\n     */\r\n    UserProfileQuery.prototype.setSingleValueProfileProperty = function (accountName, propertyName, propertyValue) {\r\n        var postBody = jsS({\r\n            accountName: accountName,\r\n            propertyName: propertyName,\r\n            propertyValue: propertyValue,\r\n        });\r\n        return this.clone(UserProfileQuery, \"SetSingleValueProfileProperty\")\r\n            .postCore({ body: postBody });\r\n    };\r\n    /**\r\n     * Sets multi valued User Profile property\r\n     *\r\n     * @param accountName The account name of the user\r\n     * @param propertyName Property name\r\n     * @param propertyValues Property values\r\n     */\r\n    UserProfileQuery.prototype.setMultiValuedProfileProperty = function (accountName, propertyName, propertyValues) {\r\n        var postBody = jsS({\r\n            accountName: accountName,\r\n            propertyName: propertyName,\r\n            propertyValues: propertyValues,\r\n        });\r\n        return this.clone(UserProfileQuery, \"SetMultiValuedProfileProperty\")\r\n            .postCore({ body: postBody });\r\n    };\r\n    /**\r\n     * Provisions one or more users' personal sites. (My Site administrator on SharePoint Online only)\r\n     *\r\n     * @param emails The email addresses of the users to provision sites for\r\n     */\r\n    UserProfileQuery.prototype.createPersonalSiteEnqueueBulk = function () {\r\n        var emails = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            emails[_i] = arguments[_i];\r\n        }\r\n        return this.profileLoader.createPersonalSiteEnqueueBulk(emails);\r\n    };\r\n    Object.defineProperty(UserProfileQuery.prototype, \"ownerUserProfile\", {\r\n        /**\r\n         * Gets the user profile of the site owner\r\n         *\r\n         */\r\n        get: function () {\r\n            return this.profileLoader.ownerUserProfile;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(UserProfileQuery.prototype, \"userProfile\", {\r\n        /**\r\n         * Gets the user profile for the current user\r\n         */\r\n        get: function () {\r\n            return this.profileLoader.userProfile;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Enqueues creating a personal site for this user, which can be used to share documents, web pages, and other files\r\n     *\r\n     * @param interactiveRequest true if interactively (web) initiated request, or false (default) if non-interactively (client) initiated request\r\n     */\r\n    UserProfileQuery.prototype.createPersonalSite = function (interactiveRequest) {\r\n        if (interactiveRequest === void 0) { interactiveRequest = false; }\r\n        return this.profileLoader.createPersonalSite(interactiveRequest);\r\n    };\r\n    /**\r\n     * Sets the privacy settings for this profile\r\n     *\r\n     * @param share true to make all social data public; false to make all social data private\r\n     */\r\n    UserProfileQuery.prototype.shareAllSocialData = function (share) {\r\n        return this.profileLoader.shareAllSocialData(share);\r\n    };\r\n    /**\r\n     * Resolves user or group using specified query parameters\r\n     *\r\n     * @param queryParams The query parameters used to perform resolve\r\n     */\r\n    UserProfileQuery.prototype.clientPeoplePickerResolveUser = function (queryParams) {\r\n        return this.clientPeoplePickerQuery.clientPeoplePickerResolveUser(queryParams);\r\n    };\r\n    /**\r\n     * Searches for users or groups using specified query parameters\r\n     *\r\n     * @param queryParams The query parameters used to perform search\r\n     */\r\n    UserProfileQuery.prototype.clientPeoplePickerSearchUser = function (queryParams) {\r\n        return this.clientPeoplePickerQuery.clientPeoplePickerSearchUser(queryParams);\r\n    };\r\n    return UserProfileQuery;\r\n}(SharePointQueryableInstance));\r\nexport { UserProfileQuery };\r\nvar ProfileLoader = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ProfileLoader, _super);\r\n    function ProfileLoader() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    ProfileLoader_1 = ProfileLoader;\r\n    /**\r\n     * Provisions one or more users' personal sites. (My Site administrator on SharePoint Online only) Doesn't support batching\r\n     *\r\n     * @param emails The email addresses of the users to provision sites for\r\n     */\r\n    ProfileLoader.prototype.createPersonalSiteEnqueueBulk = function (emails) {\r\n        return this.clone(ProfileLoader_1, \"createpersonalsiteenqueuebulk\", false).postCore({\r\n            body: jsS({ \"emailIDs\": emails }),\r\n        });\r\n    };\r\n    Object.defineProperty(ProfileLoader.prototype, \"ownerUserProfile\", {\r\n        /**\r\n         * Gets the user profile of the site owner.\r\n         *\r\n         */\r\n        get: function () {\r\n            var q = this.getParent(ProfileLoader_1, this.parentUrl, \"_api/sp.userprofiles.profileloader.getowneruserprofile\");\r\n            if (this.hasBatch) {\r\n                q = q.inBatch(this.batch);\r\n            }\r\n            return q.postCore();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ProfileLoader.prototype, \"userProfile\", {\r\n        /**\r\n         * Gets the user profile of the current user.\r\n         *\r\n         */\r\n        get: function () {\r\n            return this.clone(ProfileLoader_1, \"getuserprofile\").postCore();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Enqueues creating a personal site for this user, which can be used to share documents, web pages, and other files.\r\n     *\r\n     * @param interactiveRequest true if interactively (web) initiated request, or false (default) if non-interactively (client) initiated request\r\n     */\r\n    ProfileLoader.prototype.createPersonalSite = function (interactiveRequest) {\r\n        if (interactiveRequest === void 0) { interactiveRequest = false; }\r\n        return this.clone(ProfileLoader_1, \"getuserprofile/createpersonalsiteenque(\" + interactiveRequest + \")\").postCore();\r\n    };\r\n    /**\r\n     * Sets the privacy settings for this profile\r\n     *\r\n     * @param share true to make all social data public; false to make all social data private.\r\n     */\r\n    ProfileLoader.prototype.shareAllSocialData = function (share) {\r\n        return this.clone(ProfileLoader_1, \"getuserprofile/shareallsocialdata(\" + share + \")\").postCore();\r\n    };\r\n    var ProfileLoader_1;\r\n    ProfileLoader = ProfileLoader_1 = tslib_1.__decorate([\r\n        defaultPath(\"_api/sp.userprofiles.profileloader.getprofileloader\")\r\n    ], ProfileLoader);\r\n    return ProfileLoader;\r\n}(SharePointQueryable));\r\nvar ClientPeoplePickerQuery = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ClientPeoplePickerQuery, _super);\r\n    function ClientPeoplePickerQuery() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    ClientPeoplePickerQuery_1 = ClientPeoplePickerQuery;\r\n    /**\r\n     * Resolves user or group using specified query parameters\r\n     *\r\n     * @param queryParams The query parameters used to perform resolve\r\n     */\r\n    ClientPeoplePickerQuery.prototype.clientPeoplePickerResolveUser = function (queryParams) {\r\n        var q = this.clone(ClientPeoplePickerQuery_1, null);\r\n        q.concat(\".clientpeoplepickerresolveuser\");\r\n        return q.postCore({\r\n            body: this.createClientPeoplePickerQueryParametersRequestBody(queryParams),\r\n        })\r\n            .then(function (res) {\r\n            if (typeof res === \"object\") {\r\n                return res.ClientPeoplePickerResolveUser;\r\n            }\r\n            return res;\r\n        })\r\n            .then(JSON.parse);\r\n    };\r\n    /**\r\n     * Searches for users or groups using specified query parameters\r\n     *\r\n     * @param queryParams The query parameters used to perform search\r\n     */\r\n    ClientPeoplePickerQuery.prototype.clientPeoplePickerSearchUser = function (queryParams) {\r\n        var q = this.clone(ClientPeoplePickerQuery_1, null);\r\n        q.concat(\".clientpeoplepickersearchuser\");\r\n        return q.postCore({\r\n            body: this.createClientPeoplePickerQueryParametersRequestBody(queryParams),\r\n        })\r\n            .then(function (res) {\r\n            if (typeof res === \"object\") {\r\n                return res.ClientPeoplePickerSearchUser;\r\n            }\r\n            return res;\r\n        })\r\n            .then(JSON.parse);\r\n    };\r\n    /**\r\n     * Creates ClientPeoplePickerQueryParameters request body\r\n     *\r\n     * @param queryParams The query parameters to create request body\r\n     */\r\n    ClientPeoplePickerQuery.prototype.createClientPeoplePickerQueryParametersRequestBody = function (queryParams) {\r\n        return jsS({\r\n            \"queryParams\": extend(metadata(\"SP.UI.ApplicationPages.ClientPeoplePickerQueryParameters\"), queryParams),\r\n        });\r\n    };\r\n    var ClientPeoplePickerQuery_1;\r\n    ClientPeoplePickerQuery = ClientPeoplePickerQuery_1 = tslib_1.__decorate([\r\n        defaultPath(\"_api/sp.ui.applicationpages.clientpeoplepickerwebserviceinterface\")\r\n    ], ClientPeoplePickerQuery);\r\n    return ClientPeoplePickerQuery;\r\n}(SharePointQueryable));\r\n//# sourceMappingURL=userprofiles.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryable } from \"./sharepointqueryable\";\r\n/**\r\n * Implements the site script API REST methods\r\n *\r\n */\r\nvar SiteScripts = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SiteScripts, _super);\r\n    /**\r\n     * Creates a new instance of the SiteScripts method class\r\n     *\r\n     * @param baseUrl The parent url provider\r\n     * @param methodName The static method name to call on the utility class\r\n     */\r\n    function SiteScripts(baseUrl, methodName) {\r\n        return _super.call(this, SiteScripts.getBaseUrl(baseUrl), \"_api/Microsoft.Sharepoint.Utilities.WebTemplateExtensions.SiteScriptUtility.\" + methodName) || this;\r\n    }\r\n    SiteScripts.getBaseUrl = function (candidate) {\r\n        if (typeof candidate === \"string\") {\r\n            return candidate;\r\n        }\r\n        var c = candidate;\r\n        var url = c.toUrl();\r\n        var index = url.indexOf(\"_api/\");\r\n        if (index < 0) {\r\n            return url;\r\n        }\r\n        return url.substr(0, index);\r\n    };\r\n    SiteScripts.prototype.execute = function (props) {\r\n        return this.postCore({\r\n            body: JSON.stringify(props),\r\n        });\r\n    };\r\n    /**\r\n     * Gets a list of information on all existing site scripts.\r\n     */\r\n    SiteScripts.prototype.getSiteScripts = function () {\r\n        return this.clone(SiteScripts, \"GetSiteScripts\", true).execute({});\r\n    };\r\n    /**\r\n     * Creates a new site script.\r\n     *\r\n     * @param title The display name of the site design.\r\n     * @param content JSON value that describes the script. For more information, see JSON reference.\r\n     */\r\n    SiteScripts.prototype.createSiteScript = function (title, description, content) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.clone(SiteScripts, \"CreateSiteScript(Title=@title,Description=@desc)?@title='\" + encodeURIComponent(title) + \"'&@desc='\" + encodeURIComponent(description) + \"'\")\r\n                            .execute(content)];\r\n                    case 1: return [2 /*return*/, _a.sent()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Gets information about a specific site script. It also returns the JSON of the script.\r\n     *\r\n     * @param id The ID of the site script to get information about.\r\n     */\r\n    SiteScripts.prototype.getSiteScriptMetadata = function (id) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.clone(SiteScripts, \"GetSiteScriptMetadata\").execute({ id: id })];\r\n                    case 1: return [2 /*return*/, _a.sent()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Deletes a site script.\r\n     *\r\n     * @param id The ID of the site script to delete.\r\n     */\r\n    SiteScripts.prototype.deleteSiteScript = function (id) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.clone(SiteScripts, \"DeleteSiteScript\").execute({ id: id })];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Updates a site script with new values. In the REST call, all parameters are optional except the site script Id.\r\n     *\r\n     * @param siteScriptUpdateInfo Object that contains the information to update a site script.\r\n     *                             Make sure you stringify the content object or pass it in the second 'content' parameter\r\n     * @param content (Optional) A new JSON script defining the script actions. For more information, see Site design JSON schema.\r\n     */\r\n    SiteScripts.prototype.updateSiteScript = function (siteScriptUpdateInfo, content) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (content) {\r\n                            siteScriptUpdateInfo.Content = JSON.stringify(content);\r\n                        }\r\n                        return [4 /*yield*/, this.clone(SiteScripts, \"UpdateSiteScript\").execute({ updateInfo: siteScriptUpdateInfo })];\r\n                    case 1: return [2 /*return*/, _a.sent()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return SiteScripts;\r\n}(SharePointQueryable));\r\nexport { SiteScripts };\r\n//# sourceMappingURL=sitescripts.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryable } from \"./sharepointqueryable\";\r\n/**\r\n * Implements the site designs API REST methods\r\n *\r\n */\r\nvar SiteDesigns = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SiteDesigns, _super);\r\n    /**\r\n     * Creates a new instance of the SiteDesigns method class\r\n     *\r\n     * @param baseUrl The parent url provider\r\n     * @param methodName The static method name to call on the utility class\r\n     */\r\n    function SiteDesigns(baseUrl, methodName) {\r\n        return _super.call(this, SiteDesigns.getBaseUrl(baseUrl), \"_api/Microsoft.Sharepoint.Utilities.WebTemplateExtensions.SiteScriptUtility.\" + methodName) || this;\r\n    }\r\n    SiteDesigns.getBaseUrl = function (candidate) {\r\n        if (typeof candidate === \"string\") {\r\n            return candidate;\r\n        }\r\n        var c = candidate;\r\n        var url = c.toUrl();\r\n        var index = url.indexOf(\"_api/\");\r\n        if (index < 0) {\r\n            return url;\r\n        }\r\n        return url.substr(0, index);\r\n    };\r\n    SiteDesigns.prototype.execute = function (props) {\r\n        return this.postCore({\r\n            body: JSON.stringify(props),\r\n            headers: {\r\n                \"Content-Type\": \"application/json;charset=utf-8\",\r\n            },\r\n        });\r\n    };\r\n    /**\r\n     * Creates a new site design available to users when they create a new site from the SharePoint home page.\r\n     *\r\n     * @param creationInfo A sitedesign creation information object\r\n     */\r\n    SiteDesigns.prototype.createSiteDesign = function (creationInfo) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.clone(SiteDesigns, \"CreateSiteDesign\").execute({ info: creationInfo })];\r\n                    case 1: return [2 /*return*/, _a.sent()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Applies a site design to an existing site collection.\r\n     *\r\n     * @param siteDesignId The ID of the site design to apply.\r\n     * @param webUrl The URL of the site collection where you want to apply the site design.\r\n     */\r\n    SiteDesigns.prototype.applySiteDesign = function (siteDesignId, webUrl) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.clone(SiteDesigns, \"ApplySiteDesign\").execute({ siteDesignId: siteDesignId, \"webUrl\": webUrl })];\r\n                    case 1: return [2 /*return*/, _a.sent()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Gets a list of information about existing site designs.\r\n     */\r\n    SiteDesigns.prototype.getSiteDesigns = function () {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.clone(SiteDesigns, \"GetSiteDesigns\").execute({})];\r\n                    case 1: return [2 /*return*/, _a.sent()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Gets information about a specific site design.\r\n     * @param id The ID of the site design to get information about.\r\n     */\r\n    SiteDesigns.prototype.getSiteDesignMetadata = function (id) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.clone(SiteDesigns, \"GetSiteDesignMetadata\").execute({ id: id })];\r\n                    case 1: return [2 /*return*/, _a.sent()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Updates a site design with new values. In the REST call, all parameters are optional except the site script Id.\r\n     * If you had previously set the IsDefault parameter to TRUE and wish it to remain true, you must pass in this parameter again (otherwise it will be reset to FALSE).\r\n     * @param updateInfo A sitedesign update information object\r\n     */\r\n    SiteDesigns.prototype.updateSiteDesign = function (updateInfo) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.clone(SiteDesigns, \"UpdateSiteDesign\").execute({ updateInfo: updateInfo })];\r\n                    case 1: return [2 /*return*/, _a.sent()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Deletes a site design.\r\n     * @param id The ID of the site design to delete.\r\n     */\r\n    SiteDesigns.prototype.deleteSiteDesign = function (id) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.clone(SiteDesigns, \"DeleteSiteDesign\").execute({ id: id })];\r\n                    case 1: return [2 /*return*/, _a.sent()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Gets a list of principals that have access to a site design.\r\n     * @param id The ID of the site design to get rights information from.\r\n     */\r\n    SiteDesigns.prototype.getSiteDesignRights = function (id) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.clone(SiteDesigns, \"GetSiteDesignRights\").execute({ id: id })];\r\n                    case 1: return [2 /*return*/, _a.sent()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Grants access to a site design for one or more principals.\r\n     * @param id The ID of the site design to grant rights on.\r\n     * @param principalNames An array of one or more principals to grant view rights.\r\n     *                       Principals can be users or mail-enabled security groups in the form of \"alias\" or \"alias@<domain name>.com\"\r\n     * @param grantedRights Always set to 1. This represents the View right.\r\n     */\r\n    SiteDesigns.prototype.grantSiteDesignRights = function (id, principalNames, grantedRights) {\r\n        if (grantedRights === void 0) { grantedRights = 1; }\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.clone(SiteDesigns, \"GrantSiteDesignRights\")\r\n                            .execute({\r\n                            \"grantedRights\": grantedRights.toString(),\r\n                            \"id\": id,\r\n                            \"principalNames\": principalNames,\r\n                        })];\r\n                    case 1: return [2 /*return*/, _a.sent()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Revokes access from a site design for one or more principals.\r\n     * @param id The ID of the site design to revoke rights from.\r\n     * @param principalNames An array of one or more principals to revoke view rights from.\r\n     *                       If all principals have rights revoked on the site design, the site design becomes viewable to everyone.\r\n     */\r\n    SiteDesigns.prototype.revokeSiteDesignRights = function (id, principalNames) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.clone(SiteDesigns, \"RevokeSiteDesignRights\")\r\n                            .execute({\r\n                            \"id\": id,\r\n                            \"principalNames\": principalNames,\r\n                        })];\r\n                    case 1: return [2 /*return*/, _a.sent()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return SiteDesigns;\r\n}(SharePointQueryable));\r\nexport { SiteDesigns };\r\n//# sourceMappingURL=sitedesigns.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryable } from \"./sharepointqueryable\";\r\nimport { extend, jsS, hOP } from \"@pnp/common\";\r\nimport { File } from \"./files\";\r\nimport { odataUrlFrom } from \"./odata\";\r\nimport { metadata } from \"./utils/metadata\";\r\n/**\r\n * Allows for calling of the static SP.Utilities.Utility methods by supplying the method name\r\n */\r\nvar UtilityMethod = /** @class */ (function (_super) {\r\n    tslib_1.__extends(UtilityMethod, _super);\r\n    /**\r\n     * Creates a new instance of the Utility method class\r\n     *\r\n     * @param baseUrl The parent url provider\r\n     * @param methodName The static method name to call on the utility class\r\n     */\r\n    function UtilityMethod(baseUrl, methodName) {\r\n        return _super.call(this, UtilityMethod.getBaseUrl(baseUrl), \"_api/SP.Utilities.Utility.\" + methodName) || this;\r\n    }\r\n    UtilityMethod.getBaseUrl = function (candidate) {\r\n        if (typeof candidate === \"string\") {\r\n            return candidate;\r\n        }\r\n        var c = candidate;\r\n        var url = c.toUrl();\r\n        var index = url.indexOf(\"_api/\");\r\n        if (index < 0) {\r\n            return url;\r\n        }\r\n        return url.substr(0, index);\r\n    };\r\n    UtilityMethod.prototype.excute = function (props) {\r\n        return this.postCore({\r\n            body: jsS(props),\r\n        });\r\n    };\r\n    /**\r\n     * Sends an email based on the supplied properties\r\n     *\r\n     * @param props The properties of the email to send\r\n     */\r\n    UtilityMethod.prototype.sendEmail = function (props) {\r\n        var params = {\r\n            properties: extend(metadata(\"SP.Utilities.EmailProperties\"), {\r\n                Body: props.Body,\r\n                From: props.From,\r\n                Subject: props.Subject,\r\n            }),\r\n        };\r\n        if (props.To && props.To.length > 0) {\r\n            params.properties = extend(params.properties, {\r\n                To: { results: props.To },\r\n            });\r\n        }\r\n        if (props.CC && props.CC.length > 0) {\r\n            params.properties = extend(params.properties, {\r\n                CC: { results: props.CC },\r\n            });\r\n        }\r\n        if (props.BCC && props.BCC.length > 0) {\r\n            params.properties = extend(params.properties, {\r\n                BCC: { results: props.BCC },\r\n            });\r\n        }\r\n        if (props.AdditionalHeaders) {\r\n            params.properties = extend(params.properties, {\r\n                AdditionalHeaders: props.AdditionalHeaders,\r\n            });\r\n        }\r\n        return this.clone(UtilityMethod, \"SendEmail\", true).excute(params);\r\n    };\r\n    UtilityMethod.prototype.getCurrentUserEmailAddresses = function () {\r\n        return this.clone(UtilityMethod, \"GetCurrentUserEmailAddresses\", true).excute({}).then(function (r) {\r\n            return hOP(r, \"GetCurrentUserEmailAddresses\") ? r.GetCurrentUserEmailAddresses : r;\r\n        });\r\n    };\r\n    UtilityMethod.prototype.resolvePrincipal = function (input, scopes, sources, inputIsEmailOnly, addToUserInfoList, matchUserInfoList) {\r\n        if (matchUserInfoList === void 0) { matchUserInfoList = false; }\r\n        var params = {\r\n            addToUserInfoList: addToUserInfoList,\r\n            input: input,\r\n            inputIsEmailOnly: inputIsEmailOnly,\r\n            matchUserInfoList: matchUserInfoList,\r\n            scopes: scopes,\r\n            sources: sources,\r\n        };\r\n        return this.clone(UtilityMethod, \"ResolvePrincipalInCurrentContext\", true).excute(params).then(function (r) {\r\n            return hOP(r, \"ResolvePrincipalInCurrentContext\") ? r.ResolvePrincipalInCurrentContext : r;\r\n        });\r\n    };\r\n    UtilityMethod.prototype.searchPrincipals = function (input, scopes, sources, groupName, maxCount) {\r\n        var params = {\r\n            groupName: groupName,\r\n            input: input,\r\n            maxCount: maxCount,\r\n            scopes: scopes,\r\n            sources: sources,\r\n        };\r\n        return this.clone(UtilityMethod, \"SearchPrincipalsUsingContextWeb\", true).excute(params).then(function (r) {\r\n            return hOP(r, \"SearchPrincipalsUsingContextWeb\") ? r.SearchPrincipalsUsingContextWeb : r;\r\n        });\r\n    };\r\n    UtilityMethod.prototype.createEmailBodyForInvitation = function (pageAddress) {\r\n        var params = {\r\n            pageAddress: pageAddress,\r\n        };\r\n        return this.clone(UtilityMethod, \"CreateEmailBodyForInvitation\", true).excute(params).then(function (r) {\r\n            return hOP(r, \"CreateEmailBodyForInvitation\") ? r.CreateEmailBodyForInvitation : r;\r\n        });\r\n    };\r\n    UtilityMethod.prototype.expandGroupsToPrincipals = function (inputs, maxCount) {\r\n        if (maxCount === void 0) { maxCount = 30; }\r\n        var params = {\r\n            inputs: inputs,\r\n            maxCount: maxCount,\r\n        };\r\n        return this.clone(UtilityMethod, \"ExpandGroupsToPrincipals\", true).excute(params).then(function (r) {\r\n            return hOP(r, \"ExpandGroupsToPrincipals\") ? r.ExpandGroupsToPrincipals : r;\r\n        });\r\n    };\r\n    UtilityMethod.prototype.createWikiPage = function (info) {\r\n        return this.clone(UtilityMethod, \"CreateWikiPageInContextWeb\", true).excute({\r\n            parameters: info,\r\n        }).then(function (r) {\r\n            return {\r\n                data: hOP(r, \"CreateWikiPageInContextWeb\") ? r.CreateWikiPageInContextWeb : r,\r\n                file: new File(odataUrlFrom(r)),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Checks if file or folder name contains invalid characters\r\n     *\r\n     * @param input File or folder name to check\r\n     * @param onPremise Set to true for SharePoint On-Premise\r\n     * @returns True if contains invalid chars, false otherwise\r\n     */\r\n    UtilityMethod.prototype.containsInvalidFileFolderChars = function (input, onPremise) {\r\n        if (onPremise === void 0) { onPremise = false; }\r\n        if (onPremise) {\r\n            return UtilityMethod.InvalidFileFolderNameCharsOnPremiseRegex.test(input);\r\n        }\r\n        else {\r\n            return UtilityMethod.InvalidFileFolderNameCharsOnlineRegex.test(input);\r\n        }\r\n    };\r\n    /**\r\n     * Removes invalid characters from file or folder name\r\n     *\r\n     * @param input File or folder name\r\n     * @param replacer Value that will replace invalid characters\r\n     * @param onPremise Set to true for SharePoint On-Premise\r\n     * @returns File or folder name with replaced invalid characters\r\n     */\r\n    UtilityMethod.prototype.stripInvalidFileFolderChars = function (input, replacer, onPremise) {\r\n        if (replacer === void 0) { replacer = \"\"; }\r\n        if (onPremise === void 0) { onPremise = false; }\r\n        if (onPremise) {\r\n            return input.replace(UtilityMethod.InvalidFileFolderNameCharsOnPremiseRegex, replacer);\r\n        }\r\n        else {\r\n            return input.replace(UtilityMethod.InvalidFileFolderNameCharsOnlineRegex, replacer);\r\n        }\r\n    };\r\n    UtilityMethod.InvalidFileFolderNameCharsOnlineRegex = /[\"*:<>?/\\\\|\\x00-\\x1f\\x7f-\\x9f]/g;\r\n    UtilityMethod.InvalidFileFolderNameCharsOnPremiseRegex = /[\"#%*:<>?/\\\\|\\x00-\\x1f\\x7f-\\x9f]/g;\r\n    return UtilityMethod;\r\n}(SharePointQueryable));\r\nexport { UtilityMethod };\r\n//# sourceMappingURL=utilities.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryableInstance, SharePointQueryableCollection, defaultPath } from \"./sharepointqueryable\";\r\n/**\r\n * Describes a collection of Hub Sites\r\n *\r\n */\r\nvar HubSites = /** @class */ (function (_super) {\r\n    tslib_1.__extends(HubSites, _super);\r\n    function HubSites() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets a Hub Site from the collection by id\r\n     *\r\n     * @param id The Id of the Hub Site\r\n     */\r\n    HubSites.prototype.getById = function (id) {\r\n        return new HubSite(this, \"GetById?hubSiteId='\" + id + \"'\");\r\n    };\r\n    HubSites = tslib_1.__decorate([\r\n        defaultPath(\"_api/hubsites\")\r\n    ], HubSites);\r\n    return HubSites;\r\n}(SharePointQueryableCollection));\r\nexport { HubSites };\r\nvar HubSite = /** @class */ (function (_super) {\r\n    tslib_1.__extends(HubSite, _super);\r\n    function HubSite() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    return HubSite;\r\n}(SharePointQueryableInstance));\r\nexport { HubSite };\r\n//# sourceMappingURL=hubsites.js.map","import { Search } from \"./search\";\r\nimport { SearchSuggest } from \"./searchsuggest\";\r\nimport { Site } from \"./site\";\r\nimport { Web } from \"./webs\";\r\nimport { UserProfileQuery } from \"./userprofiles\";\r\nimport { NavigationService } from \"./navigation\";\r\nimport { SocialQuery } from \"./social\";\r\nimport { SiteScripts } from \"./sitescripts\";\r\nimport { SiteDesigns } from \"./sitedesigns\";\r\nimport { UtilityMethod } from \"./utilities\";\r\nimport { setup as _setup, } from \"./config/splibconfig\";\r\nimport { HubSites } from \"./hubsites\";\r\n/**\r\n * Root of the SharePoint REST module\r\n */\r\nvar SPRest = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of the SPRest class\r\n     *\r\n     * @param options Additional options\r\n     * @param baseUrl A string that should form the base part of the url\r\n     */\r\n    function SPRest(_options, _baseUrl) {\r\n        if (_options === void 0) { _options = {}; }\r\n        if (_baseUrl === void 0) { _baseUrl = \"\"; }\r\n        this._options = _options;\r\n        this._baseUrl = _baseUrl;\r\n    }\r\n    /**\r\n     * Configures instance with additional options and baseUrl.\r\n     * Provided configuration used by other objects in a chain\r\n     *\r\n     * @param options Additional options\r\n     * @param baseUrl A string that should form the base part of the url\r\n     */\r\n    SPRest.prototype.configure = function (options, baseUrl) {\r\n        if (baseUrl === void 0) { baseUrl = \"\"; }\r\n        return new SPRest(options, baseUrl);\r\n    };\r\n    /**\r\n     * Global SharePoint configuration options\r\n     *\r\n     * @param config The SharePoint configuration to apply\r\n     */\r\n    SPRest.prototype.setup = function (config) {\r\n        _setup(config);\r\n    };\r\n    /**\r\n     * Executes a search against this web context\r\n     *\r\n     * @param query The SearchQuery definition\r\n     */\r\n    SPRest.prototype.searchSuggest = function (query) {\r\n        var finalQuery;\r\n        if (typeof query === \"string\") {\r\n            finalQuery = { querytext: query };\r\n        }\r\n        else {\r\n            finalQuery = query;\r\n        }\r\n        return this.create(SearchSuggest).execute(finalQuery);\r\n    };\r\n    /**\r\n     * Executes a search against this web context\r\n     *\r\n     * @param query The SearchQuery definition\r\n     */\r\n    SPRest.prototype.search = function (query) {\r\n        return this.create(Search).execute(query);\r\n    };\r\n    /**\r\n     * Executes the provided search query, caching the results\r\n     *\r\n     * @param query The SearchQuery definition\r\n     * @param options The set of caching options used to store the results\r\n     */\r\n    SPRest.prototype.searchWithCaching = function (query, options) {\r\n        return this.create(Search).usingCaching(options).execute(query);\r\n    };\r\n    Object.defineProperty(SPRest.prototype, \"site\", {\r\n        /**\r\n         * Begins a site collection scoped REST request\r\n         *\r\n         */\r\n        get: function () {\r\n            return this.create(Site);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SPRest.prototype, \"web\", {\r\n        /**\r\n         * Begins a web scoped REST request\r\n         *\r\n         */\r\n        get: function () {\r\n            return this.create(Web);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SPRest.prototype, \"profiles\", {\r\n        /**\r\n         * Access to user profile methods\r\n         *\r\n         */\r\n        get: function () {\r\n            return this.create(UserProfileQuery);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SPRest.prototype, \"social\", {\r\n        /**\r\n         * Access to social methods\r\n         */\r\n        get: function () {\r\n            return this.create(SocialQuery);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SPRest.prototype, \"navigation\", {\r\n        /**\r\n         * Access to the site collection level navigation service\r\n         */\r\n        get: function () {\r\n            return this.create(NavigationService);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Creates a new batch object for use with the SharePointQueryable.addToBatch method\r\n     *\r\n     */\r\n    SPRest.prototype.createBatch = function () {\r\n        return this.web.createBatch();\r\n    };\r\n    Object.defineProperty(SPRest.prototype, \"utility\", {\r\n        /**\r\n         * Static utilities methods from SP.Utilities.Utility\r\n         */\r\n        get: function () {\r\n            return this.create(UtilityMethod, \"\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SPRest.prototype, \"siteScripts\", {\r\n        /**\r\n         * Access to sitescripts methods\r\n         */\r\n        get: function () {\r\n            return this.create(SiteScripts, \"\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SPRest.prototype, \"siteDesigns\", {\r\n        /**\r\n         * Access to sitedesigns methods\r\n         */\r\n        get: function () {\r\n            return this.create(SiteDesigns, \"\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SPRest.prototype, \"hubSites\", {\r\n        /**\r\n         * Access to Hub Site methods\r\n         */\r\n        get: function () {\r\n            return this.create(HubSites);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets the Web instance representing the tenant app catalog web\r\n     */\r\n    SPRest.prototype.getTenantAppCatalogWeb = function () {\r\n        var _this = this;\r\n        return this.create(Web, \"_api/SP_TenantSettings_Current\").get().then(function (r) {\r\n            return (new Web(r.CorporateCatalogUrl)).configure(_this._options);\r\n        });\r\n    };\r\n    /**\r\n     * Handles creating and configuring the objects returned from this class\r\n     *\r\n     * @param fm The factory method used to create the instance\r\n     * @param path Optional additional path information to pass to the factory method\r\n     */\r\n    SPRest.prototype.create = function (fm, path) {\r\n        return new fm(this._baseUrl, path).configure(this._options);\r\n    };\r\n    return SPRest;\r\n}());\r\nexport { SPRest };\r\nexport var sp = new SPRest();\r\n//# sourceMappingURL=rest.js.map","export * from \"./src/sp\";\r\n//# sourceMappingURL=index.js.map"],"sourceRoot":""}