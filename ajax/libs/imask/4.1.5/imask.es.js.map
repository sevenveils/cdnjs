{"version":3,"file":"imask.es.js","sources":["../src/core/utils.js","../src/core/action-details.js","../src/core/change-details.js","../src/masked/base.js","../src/masked/factory.js","../src/masked/pattern/input-definition.js","../src/masked/pattern/fixed-definition.js","../src/masked/pattern/chunk-tail-details.js","../src/masked/pattern.js","../src/masked/range.js","../src/masked/date.js","../src/controls/mask-element.js","../src/controls/html-mask-element.js","../src/controls/input.js","../src/masked/enum.js","../src/masked/number.js","../src/masked/regexp.js","../src/masked/function.js","../src/masked/dynamic.js","../src/imask.js"],"sourcesContent":["// @flow\r\n\r\n\r\n/** Checks if value is string */\r\nexport\r\nfunction isString (str: mixed): boolean %checks {\r\n  return typeof str === 'string' || str instanceof String;\r\n}\r\n\r\n/**\r\n  Direction\r\n  @prop {string} NONE\r\n  @prop {string} LEFT\r\n  @prop {string} FORCE_LEFT\r\n  @prop {string} RIGHT\r\n  @prop {string} FORCE_RIGHT\r\n*/\r\nexport\r\nconst DIRECTION = {\r\n  NONE: 'NONE',\r\n  LEFT: 'LEFT',\r\n  FORCE_LEFT: 'FORCE_LEFT',\r\n  RIGHT: 'RIGHT',\r\n  FORCE_RIGHT: 'FORCE_RIGHT',\r\n}\r\n/**\r\n  Direction\r\n  @enum {string}\r\n*/\r\nexport\r\ntype Direction = $Values<typeof DIRECTION>;\r\n\r\n/** Returns next char index in direction */\r\nexport\r\nfunction indexInDirection (pos: number, direction: Direction): number {\r\n  if (direction === DIRECTION.LEFT) --pos;\r\n  return pos;\r\n}\r\n\r\n/** Returns next char position in direction */\r\nexport\r\nfunction posInDirection (pos: number, direction: Direction): number {\r\n  switch (direction) {\r\n    case DIRECTION.LEFT:\r\n    case DIRECTION.FORCE_LEFT:\r\n      return --pos;\r\n    case DIRECTION.RIGHT:\r\n    case DIRECTION.FORCE_RIGHT:\r\n      return ++pos;\r\n    default:\r\n      return pos;\r\n  }\r\n}\r\n\r\n/** */\r\nexport\r\nfunction forceDirection (direction: Direction): Direction {\r\n  switch (direction) {\r\n    case DIRECTION.LEFT:\r\n      return DIRECTION.FORCE_LEFT;\r\n    case DIRECTION.RIGHT:\r\n      return DIRECTION.FORCE_RIGHT;\r\n    default:\r\n      return direction;\r\n  }\r\n}\r\n\r\n/** Escapes regular expression control chars */\r\nexport\r\nfunction escapeRegExp (str: string): string {\r\n  return str.replace(/([.*+?^=!:${}()|[\\]/\\\\])/g, '\\\\$1');\r\n}\r\n\r\n\r\n// cloned from https://github.com/epoberezkin/fast-deep-equal with small changes\r\nexport\r\nfunction objectIncludes (b: any, a: any): boolean {\r\n  if (a === b) return true;\r\n\r\n  var arrA = Array.isArray(a)\r\n    , arrB = Array.isArray(b)\r\n    , i;\r\n\r\n  if (arrA && arrB) {\r\n    if (a.length != b.length) return false;\r\n    for (i = 0; i < a.length; i++)\r\n      if (!objectIncludes(a[i], b[i])) return false;\r\n    return true;\r\n  }\r\n\r\n  if (arrA != arrB) return false;\r\n\r\n  if (a && b && typeof a === 'object' && typeof b === 'object') {\r\n    var dateA = a instanceof Date\r\n      , dateB = b instanceof Date;\r\n    if (dateA && dateB) return a.getTime() == b.getTime();\r\n    if (dateA != dateB) return false;\r\n\r\n    var regexpA = a instanceof RegExp\r\n      , regexpB = b instanceof RegExp;\r\n    if (regexpA && regexpB) return a.toString() == b.toString();\r\n    if (regexpA != regexpB) return false;\r\n\r\n    var keys = Object.keys(a);\r\n    // if (keys.length !== Object.keys(b).length) return false;\r\n\r\n    for (i = 0; i < keys.length; i++)\r\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\r\n\r\n    for (i = 0; i < keys.length; i++)\r\n      if(!objectIncludes(b[keys[i]], a[keys[i]])) return false;\r\n\r\n    return true;\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\n/* eslint-disable no-undef */\r\nexport\r\nconst g: any = typeof window !== 'undefined' && window ||\r\n  typeof global !== 'undefined' && global.global === global && global ||\r\n  typeof self !== 'undefined' && self.self === self && self ||\r\n  {};\r\n/* eslint-enable no-undef */\r\n\r\n/** Selection range */\r\nexport\r\ntype Selection = {\r\n  start: number;\r\n  end: number;\r\n};\r\n","// @flow\r\nimport {type Direction, type Selection, DIRECTION} from './utils.js';\r\n\r\n\r\n/** Provides details of changing input */\r\nexport default\r\nclass ActionDetails {\r\n  /** Current input value */\r\n  value: string;\r\n  /** Current cursor position */\r\n  cursorPos: number;\r\n  /** Old input value */\r\n  oldValue: string;\r\n  /** Old selection */\r\n  oldSelection: Selection;\r\n\r\n  constructor (\r\n    value: string,\r\n    cursorPos: number,\r\n    oldValue: string,\r\n    oldSelection: Selection\r\n  ) {\r\n    this.value = value;\r\n    this.cursorPos = cursorPos;\r\n    this.oldValue = oldValue;\r\n    this.oldSelection = oldSelection;\r\n\r\n    // double check if left part was changed (autofilling, other non-standard input triggers)\r\n    while (this.value.slice(0, this.startChangePos) !== this.oldValue.slice(0, this.startChangePos)) {\r\n      --this.oldSelection.start;\r\n    }\r\n  }\r\n\r\n  /**\r\n    Start changing position\r\n    @readonly\r\n  */\r\n  get startChangePos (): number {\r\n    return Math.min(this.cursorPos, this.oldSelection.start);\r\n  }\r\n\r\n  /**\r\n    Inserted symbols count\r\n    @readonly\r\n  */\r\n  get insertedCount (): number {\r\n    return this.cursorPos - this.startChangePos;\r\n  }\r\n\r\n  /**\r\n    Inserted symbols\r\n    @readonly\r\n  */\r\n  get inserted (): string {\r\n    return this.value.substr(this.startChangePos, this.insertedCount);\r\n  }\r\n\r\n  /**\r\n    Removed symbols count\r\n    @readonly\r\n  */\r\n  get removedCount (): number {\r\n    // Math.max for opposite operation\r\n    return Math.max((this.oldSelection.end - this.startChangePos) ||\r\n      // for Delete\r\n      this.oldValue.length - this.value.length, 0);\r\n  }\r\n\r\n  /**\r\n    Removed symbols\r\n    @readonly\r\n  */\r\n  get removed (): string {\r\n    return this.oldValue.substr(this.startChangePos, this.removedCount);\r\n  }\r\n\r\n  /**\r\n    Unchanged head symbols\r\n    @readonly\r\n  */\r\n  get head (): string {\r\n    return this.value.substring(0, this.startChangePos);\r\n  }\r\n\r\n  /**\r\n    Unchanged tail symbols\r\n    @readonly\r\n  */\r\n  get tail (): string {\r\n    return this.value.substring(this.startChangePos + this.insertedCount);\r\n  }\r\n\r\n  /**\r\n    Remove direction\r\n    @readonly\r\n  */\r\n  get removeDirection (): Direction {\r\n    if (!this.removedCount || this.insertedCount) return DIRECTION.NONE;\r\n\r\n    // align right if delete at right or if range removed (event with backspace)\r\n    return (this.oldSelection.end === this.cursorPos || this.oldSelection.start === this.cursorPos) ?\r\n      DIRECTION.RIGHT :\r\n      DIRECTION.LEFT;\r\n  }\r\n}\r\n","// @flow\r\n\r\n\r\n/**\r\n  Provides details of changing model value\r\n  @param {Object} [details]\r\n  @param {string} [details.inserted] - Inserted symbols\r\n  @param {boolean} [details.skip] - Can skip chars\r\n  @param {number} [details.removeCount] - Removed symbols count\r\n  @param {number} [details.tailShift] - Additional offset if any changes occurred before tail\r\n*/\r\nexport default\r\nclass ChangeDetails {\r\n  /** Inserted symbols */\r\n  inserted: string;\r\n  /** Can skip chars */\r\n  skip: boolean;\r\n  /** Additional offset if any changes occurred before tail */\r\n  tailShift: number;\r\n  /** Raw inserted is used by dynamic mask */\r\n  rawInserted: string;\r\n\r\n  constructor (details?: {\r\n    inserted?: $PropertyType<ChangeDetails, 'inserted'>,\r\n    rawInserted?: $PropertyType<ChangeDetails, 'rawInserted'>,\r\n    skip?: $PropertyType<ChangeDetails, 'skip'>,\r\n    tailShift?: $PropertyType<ChangeDetails, 'tailShift'>,\r\n  }) {\r\n    Object.assign(this, {\r\n      inserted: '',\r\n      rawInserted: '',\r\n      skip: false,\r\n      tailShift: 0,\r\n    }, details);\r\n  }\r\n\r\n  /**\r\n    Aggregate changes\r\n    @returns {ChangeDetails} `this`\r\n  */\r\n  aggregate (details: ChangeDetails): ChangeDetails {\r\n    this.rawInserted += details.rawInserted;\r\n    this.skip = this.skip || details.skip;\r\n    this.inserted += details.inserted;\r\n    this.tailShift += details.tailShift;\r\n    return this;\r\n  }\r\n\r\n  /** Total offset considering all changes */\r\n  get offset (): number {\r\n    return this.tailShift + this.inserted.length;\r\n  }\r\n}\r\n","// @flow\r\nimport ChangeDetails from '../core/change-details.js';\r\nimport {type Direction, DIRECTION} from '../core/utils.js';\r\nimport {type TailDetails} from '../core/tail-details.js';\r\n\r\n\r\n/** Supported mask type */\r\nexport\r\ntype Mask =\r\n  string |\r\n  String |\r\n  RegExp |\r\n  Class<Number> |\r\n  Class<Date> |\r\n  Array<any> |\r\n  $PropertyType<Masked<*>, 'validate'> |\r\n  Masked<*> |\r\n  Class<Masked<*>>;\r\n\r\nexport\r\ntype MaskedState = {|\r\n  _value: string,\r\n|};\r\n\r\n/** Append flags */\r\nexport\r\ntype AppendFlags = {\r\n  input?: boolean,\r\n  tail?: boolean,\r\n  raw?: boolean\r\n};\r\n\r\n/** Extract flags */\r\nexport\r\ntype ExtractFlags = {\r\n  raw?: boolean\r\n};\r\n\r\nexport\r\ntype MaskedOptions<MaskType> = {\r\n  mask: $PropertyType<Masked<MaskType>, 'mask'>,\r\n  parent?: $PropertyType<Masked<*>, 'parent'>,\r\n  prepare?: $PropertyType<Masked<MaskType>, 'prepare'>,\r\n  validate?: $PropertyType<Masked<MaskType>, 'validate'>,\r\n  commit?: $PropertyType<Masked<MaskType>, 'commit'>,\r\n};\r\n\r\n\r\n/** Provides common masking stuff */\r\nexport default\r\nclass Masked<MaskType> {\r\n  static DEFAULTS: any; // $Shape<MaskedOptions>; TODO after fix https://github.com/facebook/flow/issues/4773\r\n\r\n  /** @type {Mask} */\r\n  mask: MaskType;\r\n  /** */ // $FlowFixMe TODO no ideas\r\n  parent: ?Masked<*>;\r\n  /** Transforms value before mask processing */\r\n  prepare: (string, Masked<MaskType>, AppendFlags) => string;\r\n  /** Validates if value is acceptable */\r\n  validate: (string, Masked<MaskType>, AppendFlags) => boolean;\r\n  /** Does additional processing in the end of editing */\r\n  commit: (string, AppendFlags) => void;\r\n  /** */\r\n  isInitialized: boolean;\r\n  _value: string;\r\n  _refreshing: boolean;\r\n  _beforeTailState: ?MaskedState;\r\n\r\n  constructor (opts: {[string]: any}) {\r\n    this._value = '';\r\n    this._update(opts);\r\n    this.isInitialized = true;\r\n  }\r\n\r\n  /** Sets and applies new options */\r\n  updateOptions (opts: {[string]: any}) {\r\n    if (!Object.keys(opts).length) return;\r\n    this.withValueRefresh(this._update.bind(this, opts));\r\n  }\r\n\r\n  /**\r\n    Sets new options\r\n    @protected\r\n  */\r\n  _update (opts: {[string]: any}) {\r\n    Object.assign(this, opts);\r\n  }\r\n\r\n  /** Mask state */\r\n  get state (): any {\r\n    return {\r\n      _value: this.value,\r\n    };\r\n  }\r\n\r\n  set state (state: any) {\r\n    this._value = state._value;\r\n  }\r\n\r\n  /** Resets value */\r\n  reset () {\r\n    this._value = '';\r\n  }\r\n\r\n  /** */\r\n  get value (): string {\r\n    return this._value;\r\n  }\r\n\r\n  set value (value: string) {\r\n    this.resolve(value);\r\n  }\r\n\r\n  /** Resolve new value */\r\n  resolve (value: string): string {\r\n    this.reset();\r\n    this.append(value, {input: true}, {value: ''});\r\n    this.doCommit();\r\n    return this.value;\r\n  }\r\n\r\n  /** */\r\n  get unmaskedValue (): string {\r\n    return this.value;\r\n  }\r\n\r\n  set unmaskedValue (value: string) {\r\n    this.reset();\r\n    this.append(value, {}, {value: ''});\r\n    this.doCommit();\r\n  }\r\n\r\n  /** */\r\n  get typedValue (): any {\r\n    return this.unmaskedValue;\r\n  }\r\n\r\n  set typedValue (value: any) {\r\n    this.unmaskedValue = value;\r\n  }\r\n\r\n  /** Value that includes raw user input */\r\n  get rawInputValue (): string {\r\n    return this.extractInput(0, this.value.length, {raw: true});\r\n  }\r\n\r\n  set rawInputValue (value: string) {\r\n    this.reset();\r\n    this.append(value, {raw: true}, {value: ''});\r\n    this.doCommit();\r\n  }\r\n\r\n  /** */\r\n  get isComplete (): boolean {\r\n    return true;\r\n  }\r\n\r\n  /** Finds nearest input position in direction */\r\n  nearestInputPos (cursorPos: number, direction?: Direction): number {\r\n    return cursorPos;\r\n  }\r\n\r\n  /** Extracts value in range considering flags */\r\n  extractInput (fromPos?: number=0, toPos?: number=this.value.length, flags?: ExtractFlags): string {\r\n    return this.value.slice(fromPos, toPos);\r\n  }\r\n\r\n  /** Extracts tail in range */\r\n  extractTail (fromPos?: number=0, toPos?: number=this.value.length): TailDetails {\r\n    return {\r\n      value: this.extractInput(fromPos, toPos),\r\n    };\r\n  }\r\n\r\n  /** Stores state before tail */\r\n  _storeBeforeTailState () {\r\n    this._beforeTailState = this.state;\r\n  }\r\n\r\n  /** Restores state before tail */\r\n  _restoreBeforeTailState () {\r\n    this.state = this._beforeTailState;\r\n  }\r\n\r\n  /** Resets state before tail */\r\n  _resetBeforeTailState () {\r\n    this._beforeTailState = null;\r\n  }\r\n\r\n  /** Appends tail */\r\n  appendTail (tail?: TailDetails): ChangeDetails {\r\n    return this.append(tail ? tail.value: '', {tail: true});\r\n  }\r\n\r\n  /** Appends char */\r\n  _appendCharRaw (ch: string, flags: AppendFlags={}): ChangeDetails {\r\n    this._value += ch;\r\n    return new ChangeDetails({\r\n      inserted: ch,\r\n      rawInserted: ch,\r\n    });\r\n  }\r\n\r\n  /** Appends char */\r\n  _appendChar (ch: string, flags: AppendFlags={}, checkTail?: TailDetails): ChangeDetails {\r\n    ch = this.doPrepare(ch, flags);\r\n    if (!ch) return new ChangeDetails();\r\n\r\n    const consistentState: MaskedState = this.state;\r\n    const details: ChangeDetails = this._appendCharRaw(ch, flags);\r\n\r\n    if (details.inserted) {\r\n      let appended = this.doValidate(flags) !== false;\r\n\r\n      if (appended && checkTail != null) {\r\n        // validation ok, check tail\r\n        this._storeBeforeTailState();\r\n\r\n        const tailDetails = this.appendTail(checkTail);\r\n\r\n        appended = tailDetails.rawInserted === checkTail.value;\r\n\r\n        // if ok, rollback state after tail\r\n        if (appended && tailDetails.inserted) this._restoreBeforeTailState();\r\n      }\r\n\r\n      // revert all if something went wrong\r\n      if (!appended) {\r\n        details.rawInserted = details.inserted = '';\r\n        this.state = consistentState;\r\n      }\r\n    }\r\n    return details;\r\n  }\r\n\r\n  /** Appends symbols considering flags */\r\n  append (str: string, flags?: AppendFlags, tail?: TailDetails): ChangeDetails {\r\n    const oldValueLength = this.value.length;\r\n    const details = new ChangeDetails();\r\n\r\n    for (let ci=0; ci<str.length; ++ci) {\r\n      details.aggregate(this._appendChar(str[ci], flags, tail));\r\n    }\r\n\r\n    // append tail but aggregate only tailShift\r\n    if (tail != null) {\r\n      this._storeBeforeTailState();\r\n      details.tailShift += this.appendTail(tail).tailShift;\r\n      // TODO it's a good idea to clear state after appending ends\r\n      // but it causes bugs when one append calls another (when dynamic dispatch set rawInputValue)\r\n      // this._resetBeforeTailState();\r\n    }\r\n\r\n    return details;\r\n  }\r\n\r\n  /** */\r\n  remove (fromPos?: number=0, toPos?: number=this.value.length): ChangeDetails {\r\n    this._value = this.value.slice(0, fromPos) + this.value.slice(toPos);\r\n    return new ChangeDetails();\r\n  }\r\n\r\n  /** Calls function and reapplies current value */\r\n  withValueRefresh<T>(fn: () => T): T {\r\n    if (this._refreshing || !this.isInitialized) return fn();\r\n    this._refreshing = true;\r\n\r\n    const unmasked = this.unmaskedValue;\r\n    const value = this.value;\r\n\r\n    const ret = fn();\r\n\r\n    // try to update with raw value first to keep fixed chars\r\n    if (this.resolve(value) !== value) {\r\n      // or fallback to unmasked\r\n      this.unmaskedValue = unmasked;\r\n    }\r\n\r\n    delete this._refreshing;\r\n    return ret;\r\n  }\r\n\r\n  /**\r\n    Prepares string before mask processing\r\n    @protected\r\n  */\r\n  doPrepare (str: string, flags: AppendFlags={}): string {\r\n    return this.prepare ?\r\n      this.prepare(str, this, flags) :\r\n      str;\r\n  }\r\n\r\n  /**\r\n    Validates if value is acceptable\r\n    @protected\r\n  */\r\n  doValidate (flags: AppendFlags): boolean {\r\n    return (!this.validate || this.validate(this.value, this, flags)) &&\r\n      (!this.parent || this.parent.doValidate(flags));\r\n  }\r\n\r\n  /**\r\n    Does additional processing in the end of editing\r\n    @protected\r\n  */\r\n  doCommit () {\r\n    if (this.commit) this.commit(this.value, this);\r\n  }\r\n\r\n  /** */\r\n  splice (start: number, deleteCount: number, inserted: string, removeDirection: Direction): ChangeDetails {\r\n    const tailPos: number = start + deleteCount;\r\n    const tail: TailDetails = this.extractTail(tailPos);\r\n\r\n    let startChangePos: number = this.nearestInputPos(start, removeDirection);\r\n    const changeDetails: ChangeDetails = new ChangeDetails({\r\n      tailShift: startChangePos - start  // adjust tailShift if start was aligned\r\n    }).aggregate(this.remove(startChangePos))\r\n      .aggregate(this.append(inserted, {input: true}, tail));\r\n\r\n    return changeDetails;\r\n  }\r\n}\r\n","// @flow\r\nimport {g, isString} from '../core/utils.js';\r\nimport type Masked from './base.js';\r\nimport {type Mask} from './base.js';\r\n\r\n\r\n/** Get Masked class by mask type */\r\nexport\r\nfunction maskedClass (mask: Mask): Class<Masked<*>> {\r\n  if (mask == null) {\r\n    throw new Error('mask property should be defined');\r\n  }\r\n\r\n  if (mask instanceof RegExp) return g.IMask.MaskedRegExp;\r\n  if (isString(mask)) return g.IMask.MaskedPattern;\r\n  if (mask instanceof Date || mask === Date) return g.IMask.MaskedDate;\r\n  if (mask instanceof Number || typeof mask === 'number' || mask === Number) return g.IMask.MaskedNumber;\r\n  if (Array.isArray(mask) || mask === Array) return g.IMask.MaskedDynamic;\r\n  // $FlowFixMe\r\n  if (mask.prototype instanceof g.IMask.Masked) return mask;\r\n  // $FlowFixMe\r\n  if (mask instanceof Function) return g.IMask.MaskedFunction;\r\n\r\n  console.warn('Mask not found for mask', mask);  // eslint-disable-line no-console\r\n  return g.IMask.Masked;\r\n}\r\n\r\n/** Creates new {@link Masked} depending on mask type */\r\nexport default\r\nfunction createMask (opts: {mask: Mask}): Masked<*> {\r\n  opts = {...opts};\r\n  const mask = opts.mask;\r\n\r\n  if (mask instanceof g.IMask.Masked) return mask;\r\n\r\n  const MaskedClass = maskedClass(mask);\r\n  return new MaskedClass(opts);\r\n}\r\n","// @flow\r\nimport createMask from '../factory.js';\r\nimport type Masked from '../base.js';\r\nimport type MaskedPattern from '../pattern.js';\r\nimport {type TailDetails} from '../../core/tail-details.js';\r\nimport {type Mask, type ExtractFlags, type AppendFlags} from '../base.js';\r\nimport ChangeDetails from '../../core/change-details.js';\r\nimport {DIRECTION, type Direction} from '../../core/utils.js';\r\nimport {type PatternBlock} from './block.js';\r\n\r\n\r\nexport\r\ntype Definitions = {[string]: Mask};\r\n\r\n/** */\r\ntype PatternInputDefinitionOptions = {\r\n  parent: $PropertyType<PatternInputDefinition, 'parent'>,\r\n  mask: Mask,\r\n  isOptional: $PropertyType<PatternInputDefinition, 'isOptional'>,\r\n  lazy: $PropertyType<PatternInputDefinition, 'lazy'>,\r\n  placeholderChar: $PropertyType<PatternInputDefinition, 'placeholderChar'>,\r\n};\r\n\r\ntype PatternInputDefinitionState = {\r\n  masked: *,\r\n  _isFilled: boolean,\r\n};\r\n\r\nexport\r\nconst DEFAULT_INPUT_DEFINITIONS = {\r\n  '0': /\\d/,\r\n  'a': /[\\u0041-\\u005A\\u0061-\\u007A\\u00AA\\u00B5\\u00BA\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0\\u08A2-\\u08AC\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0977\\u0979-\\u097F\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C33\\u0C35-\\u0C39\\u0C3D\\u0C58\\u0C59\\u0C60\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D60\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191C\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19C1-\\u19C7\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2183\\u2184\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005\\u3006\\u3031-\\u3035\\u303B\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA697\\uA6A0-\\uA6E5\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA78E\\uA790-\\uA793\\uA7A0-\\uA7AA\\uA7F8-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA80-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uABC0-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]/,  // http://stackoverflow.com/a/22075070\r\n  '*': /./\r\n};\r\n\r\n\r\n/** */\r\nexport default\r\nclass PatternInputDefinition implements PatternBlock {\r\n  /** */\r\n  +masked: Masked<*>;\r\n  /** */\r\n  parent: Masked<*>;\r\n  /** */\r\n  isOptional: boolean;\r\n  /** */\r\n  _isFilled: boolean;\r\n  /** */\r\n  lazy: $PropertyType<MaskedPattern, 'lazy'>;\r\n  /** */\r\n  placeholderChar: $PropertyType<MaskedPattern, 'placeholderChar'>;\r\n\r\n\r\n  constructor(opts: PatternInputDefinitionOptions) {\r\n    const {mask, ...blockOpts} = opts;\r\n\r\n    this.masked = createMask({mask});\r\n    Object.assign(this, blockOpts);\r\n  }\r\n\r\n  reset () {\r\n    this._isFilled = false;\r\n    this.masked.reset();\r\n  }\r\n\r\n  remove (fromPos?: number=0, toPos?: number=this.value.length): ChangeDetails {\r\n    if (fromPos === 0 && toPos >= 1) {\r\n      this._isFilled = false;\r\n      return this.masked.remove(fromPos, toPos);\r\n    }\r\n\r\n    return new ChangeDetails();\r\n  }\r\n\r\n  get value (): string {\r\n    return this.masked.value ||\r\n      (this._isFilled && !this.isOptional ?\r\n        this.placeholderChar :\r\n        '');\r\n  }\r\n\r\n  get unmaskedValue (): string {\r\n    return this.masked.unmaskedValue;\r\n  }\r\n\r\n  get isComplete (): boolean {\r\n    return Boolean(this.masked.value) || this.isOptional;\r\n  }\r\n\r\n  _appendChar (str: string, flags: AppendFlags={}): ChangeDetails {\r\n    if (this._isFilled) return new ChangeDetails();\r\n\r\n    const state = this.masked.state;\r\n    // simulate input\r\n    const details = this.masked._appendChar(str, flags);\r\n\r\n    if (details.inserted && this.doValidate(flags) === false) {\r\n      details.inserted = details.rawInserted = '';\r\n      this.masked.state = state;\r\n    }\r\n\r\n    if (!details.inserted && !this.isOptional && !this.lazy && !flags.input) {\r\n      details.inserted = this.placeholderChar;\r\n    }\r\n    details.skip = !details.inserted && !this.isOptional;\r\n    this._isFilled = Boolean(details.inserted);\r\n\r\n    return details;\r\n  }\r\n\r\n  _appendPlaceholder (): ChangeDetails {\r\n    const details = new ChangeDetails();\r\n\r\n    if (this._isFilled || this.isOptional) return details;\r\n\r\n    this._isFilled = true;\r\n    details.inserted = this.placeholderChar;\r\n    return details;\r\n  }\r\n\r\n  extractTail (...args: *): TailDetails {\r\n    return this.masked.extractTail(...args);\r\n  }\r\n\r\n  appendTail (...args: *): ChangeDetails {\r\n    return this.masked.appendTail(...args);\r\n  }\r\n\r\n  extractInput (fromPos?: number=0, toPos?: number=this.value.length, flags?: ExtractFlags): string {\r\n    return this.masked.extractInput(fromPos, toPos, flags);\r\n  }\r\n\r\n  nearestInputPos (cursorPos: number, direction: Direction=DIRECTION.NONE): number {\r\n    const minPos = 0;\r\n    const maxPos = this.value.length;\r\n    const boundPos = Math.min(Math.max(cursorPos, minPos), maxPos);\r\n\r\n    switch (direction) {\r\n      case DIRECTION.LEFT:\r\n      case DIRECTION.FORCE_LEFT:\r\n        return this.isComplete ? boundPos : minPos;\r\n      case DIRECTION.RIGHT:\r\n      case DIRECTION.FORCE_RIGHT:\r\n        return this.isComplete ? boundPos : maxPos;\r\n      case DIRECTION.NONE:\r\n      default: return boundPos;\r\n    }\r\n  }\r\n\r\n  doValidate (...args: *) {\r\n    return this.masked.doValidate(...args) && (\r\n      !this.parent || this.parent.doValidate(...args));\r\n  }\r\n\r\n  doCommit () {\r\n    this.masked.doCommit();\r\n  }\r\n\r\n  get state (): PatternInputDefinitionState {\r\n    return {\r\n      masked: this.masked.state,\r\n      _isFilled: this._isFilled,\r\n    };\r\n  }\r\n\r\n  set state (state: PatternInputDefinitionState) {\r\n    this.masked.state = state.masked;\r\n    this._isFilled = state._isFilled;\r\n  }\r\n}\r\n","// @flow\r\nimport ChangeDetails from '../../core/change-details.js';\r\nimport {DIRECTION, type Direction} from '../../core/utils.js';\r\nimport {type TailDetails} from '../../core/tail-details.js';\r\nimport {type ExtractFlags, type AppendFlags, type MaskedState} from '../base.js';\r\nimport {type PatternBlock} from './block.js';\r\n\r\n\r\n/** */\r\ntype PatternFixedDefinitionOptions = {\r\n  char: $PropertyType<PatternFixedDefinition, 'char'>,\r\n  isUnmasking?: $PropertyType<PatternFixedDefinition, 'isUnmasking'>,\r\n};\r\n\r\ntype PatternFixedDefinitionState = {|\r\n  ...MaskedState,\r\n  _isRawInput: ?boolean,\r\n|};\r\n\r\nexport default\r\nclass PatternFixedDefinition implements PatternBlock {\r\n  /** */\r\n  _value: string;\r\n  /** */\r\n  char: string;\r\n  /** */\r\n  isUnmasking: ?boolean;\r\n  /** */\r\n  _isRawInput: ?boolean;\r\n\r\n  constructor(opts: PatternFixedDefinitionOptions) {\r\n    Object.assign(this, opts);\r\n    this._value = '';\r\n  }\r\n\r\n  get value (): string {\r\n    return this._value;\r\n  }\r\n\r\n  get unmaskedValue (): string {\r\n    return this.isUnmasking ? this.value : '';\r\n  }\r\n\r\n  reset () {\r\n    this._isRawInput = false;\r\n    this._value = '';\r\n  }\r\n\r\n  remove (fromPos?: number=0, toPos?: number=this._value.length): ChangeDetails {\r\n    this._value = this._value.slice(0, fromPos) + this._value.slice(toPos);\r\n    if (!this._value) this._isRawInput = false;\r\n\r\n    return new ChangeDetails();\r\n  }\r\n\r\n  nearestInputPos (cursorPos: number, direction: Direction=DIRECTION.NONE): number {\r\n    const minPos = 0;\r\n    const maxPos = this._value.length;\r\n\r\n    switch (direction) {\r\n      case DIRECTION.LEFT:\r\n      case DIRECTION.FORCE_LEFT:\r\n        return minPos;\r\n      case DIRECTION.NONE:\r\n      case DIRECTION.RIGHT:\r\n      case DIRECTION.FORCE_RIGHT:\r\n      default: return maxPos;\r\n    }\r\n  }\r\n\r\n  extractInput (fromPos?: number=0, toPos?: number=this._value.length, flags?: ExtractFlags={}) {\r\n    return flags.raw && this._isRawInput && this._value.slice(fromPos, toPos) || '';\r\n  }\r\n\r\n  get isComplete (): boolean {\r\n    return true;\r\n  }\r\n\r\n  _appendChar (str: string, flags: AppendFlags) {\r\n    const details = new ChangeDetails();\r\n\r\n    if (this._value) return details;\r\n\r\n    const appended = this.char === str[0];\r\n    const isResolved = appended && (this.isUnmasking || flags.input || flags.raw) && !flags.tail;\r\n    if (isResolved) details.rawInserted = this.char;\r\n    this._value = details.inserted = this.char;\r\n    this._isRawInput = isResolved && (flags.raw || flags.input);\r\n\r\n    return details;\r\n  }\r\n\r\n  _appendPlaceholder (): ChangeDetails {\r\n    const details = new ChangeDetails();\r\n    if (this._value) return details;\r\n\r\n    this._value = details.inserted = this.char;\r\n    return details;\r\n  }\r\n\r\n  extractTail (fromPos?: number=0, toPos?: number=this.value.length): TailDetails {\r\n    return {\r\n      value: '',\r\n    };\r\n  }\r\n\r\n  appendTail (tail?: TailDetails): ChangeDetails {\r\n    return this._appendChar(tail ? tail.value: '', {tail: true});\r\n  }\r\n\r\n  doCommit () {}\r\n\r\n  get state (): PatternFixedDefinitionState {\r\n    return {\r\n      _value: this._value,\r\n      _isRawInput: this._isRawInput,\r\n    };\r\n  }\r\n\r\n  set state (state: PatternFixedDefinitionState) {\r\n    Object.assign(this, state);\r\n  }\r\n}\r\n","// @flow\r\nimport {type TailDetails} from '../../core/tail-details.js';\r\n\r\n\r\nexport\r\ntype TailInputChunk = TailDetails | ChunksTailDetails;\r\n\r\nexport\r\nclass ChunksTailDetails implements TailDetails {\r\n  chunks: Array<TailInputChunk>;\r\n  index: ?number;\r\n\r\n  constructor (chunks: Array<TailInputChunk>) {\r\n    this.chunks = chunks;\r\n  }\r\n\r\n  get value (): string {\r\n    return this.chunks.map(c => c.value).join('');\r\n  }\r\n}\r\n","// @flow\r\nimport {DIRECTION, type Direction, forceDirection} from '../core/utils.js';\r\nimport ChangeDetails from '../core/change-details.js';\r\nimport Masked, {type AppendFlags, type ExtractFlags, type MaskedOptions, type MaskedState} from './base.js';\r\nimport PatternInputDefinition, {DEFAULT_INPUT_DEFINITIONS, type Definitions} from './pattern/input-definition.js';\r\nimport PatternFixedDefinition from './pattern/fixed-definition.js';\r\nimport {ChunksTailDetails, type TailInputChunk} from './pattern/chunk-tail-details.js';\r\nimport {type TailDetails} from '../core/tail-details.js';\r\nimport {type PatternBlock} from './pattern/block.js';\r\nimport createMask from './factory.js';\r\n\r\n\r\ntype MaskedPatternOptions = {\r\n  ...MaskedOptions<string>,\r\n  definitions: $PropertyType<MaskedPattern, 'definitions'>,\r\n  blocks: $PropertyType<MaskedPattern, 'blocks'>,\r\n  placeholderChar: $PropertyType<MaskedPattern, 'placeholderChar'>,\r\n  lazy: $PropertyType<MaskedPattern, 'lazy'>,\r\n};\r\n\r\ntype MaskedPatternState = {|\r\n  ...MaskedState,\r\n  _blocks: Array<*>,\r\n|};\r\n\r\ntype BlockPosData = {\r\n  index: number,\r\n  offset: number,\r\n};\r\n\r\n/**\r\n  Pattern mask\r\n  @param {Object} opts\r\n  @param {Object} opts.blocks\r\n  @param {Object} opts.definitions\r\n  @param {string} opts.placeholderChar\r\n  @param {boolean} opts.lazy\r\n*/\r\nexport default\r\nclass MaskedPattern extends Masked<string> {\r\n  static DEFAULTS: any;\r\n  static STOP_CHAR: string;\r\n  static ESCAPE_CHAR: string;\r\n  static InputDefinition: Class<PatternInputDefinition>;\r\n  static FixedDefinition: Class<PatternFixedDefinition>;\r\n\r\n  /** */\r\n  blocks: {[string]: Masked<*>};\r\n  /** */\r\n  definitions: Definitions;\r\n  /** Single char for empty input */\r\n  placeholderChar: string;\r\n  /** Show placeholder only when needed */\r\n  lazy: boolean;\r\n  _blocks: Array<PatternBlock>;\r\n  _maskedBlocks: {[string]: Array<number>};\r\n  _stops: Array<number>;\r\n\r\n  constructor (opts: any={}) {  // TODO type $Shape<MaskedPatternOptions>={} does not work\r\n    opts.definitions = Object.assign({}, DEFAULT_INPUT_DEFINITIONS, opts.definitions);\r\n    super({\r\n      ...MaskedPattern.DEFAULTS,\r\n      ...opts\r\n    });\r\n  }\r\n\r\n  /**\r\n    @override\r\n    @param {Object} opts\r\n  */\r\n  _update (opts: $Shape<MaskedPatternOptions>={}) {\r\n    opts.definitions = Object.assign({}, this.definitions, opts.definitions);\r\n    super._update(opts);\r\n    this._rebuildMask();\r\n  }\r\n\r\n  /** */\r\n  _rebuildMask () {\r\n    const defs = this.definitions;\r\n    this._blocks = [];\r\n    this._stops = [];\r\n    this._maskedBlocks = {};\r\n\r\n    let pattern = this.mask;\r\n    if (!pattern || !defs) return;\r\n\r\n    let unmaskingBlock = false;\r\n    let optionalBlock = false;\r\n\r\n    for (let i=0; i<pattern.length; ++i) {\r\n      if (this.blocks) {\r\n        const p = pattern.slice(i);\r\n        const bNames = Object.keys(this.blocks).filter(bName => p.indexOf(bName) === 0);\r\n        // order by key length\r\n        bNames.sort((a, b) => b.length - a.length);\r\n        // use block name with max length\r\n        const bName = bNames[0];\r\n        if (bName) {\r\n          const maskedBlock = createMask({\r\n            parent: this,\r\n            lazy: this.lazy,\r\n            placeholderChar: this.placeholderChar,\r\n            ...this.blocks[bName]\r\n          });\r\n\r\n          if (maskedBlock) {\r\n            this._blocks.push(maskedBlock);\r\n\r\n            // store block index\r\n            if (!this._maskedBlocks[bName]) this._maskedBlocks[bName] = [];\r\n            this._maskedBlocks[bName].push(this._blocks.length - 1);\r\n          }\r\n\r\n          i += bName.length - 1;\r\n          continue;\r\n        }\r\n      }\r\n\r\n      let char = pattern[i];\r\n      let isInput = char in defs;\r\n\r\n      if (char === MaskedPattern.STOP_CHAR) {\r\n        this._stops.push(this._blocks.length);\r\n        continue;\r\n      }\r\n\r\n      if (char === '{' || char === '}') {\r\n        unmaskingBlock = !unmaskingBlock;\r\n        continue;\r\n      }\r\n\r\n      if (char === '[' || char === ']') {\r\n        optionalBlock = !optionalBlock;\r\n        continue;\r\n      }\r\n\r\n      if (char === MaskedPattern.ESCAPE_CHAR) {\r\n        ++i;\r\n        char = pattern[i];\r\n        if (!char) break;\r\n        isInput = false;\r\n      }\r\n\r\n      let def;\r\n      if (isInput) {\r\n        def = new PatternInputDefinition({\r\n          parent: this,\r\n          lazy: this.lazy,\r\n          placeholderChar: this.placeholderChar,\r\n          mask: defs[char],\r\n          isOptional: optionalBlock,\r\n        });\r\n      } else {\r\n        def = new PatternFixedDefinition({\r\n          char,\r\n          isUnmasking: unmaskingBlock,\r\n        });\r\n      }\r\n\r\n      this._blocks.push(def);\r\n    }\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  get state (): MaskedPatternState {\r\n    return {\r\n      ...super.state,\r\n      _blocks: this._blocks.map(b => b.state),\r\n    };\r\n  }\r\n\r\n  set state (state: MaskedPatternState) {\r\n    const {_blocks, ...maskedState} = state;\r\n    this._blocks.forEach((b, bi) => b.state = _blocks[bi]);\r\n    super.state = maskedState;\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  _storeBeforeTailState () {\r\n    this._blocks.forEach(b => {\r\n      // $FlowFixMe _storeBeforeTailState is not exist in PatternBlock\r\n      if (typeof b._storeBeforeTailState === 'function') {\r\n        b._storeBeforeTailState();\r\n      }\r\n    });\r\n    super._storeBeforeTailState();\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  _restoreBeforeTailState () {\r\n    this._blocks.forEach(b => {\r\n      // $FlowFixMe _restoreBeforeTailState is not exist in PatternBlock\r\n      if (typeof b._restoreBeforeTailState === 'function') {\r\n        b._restoreBeforeTailState();\r\n      }\r\n    });\r\n    super._restoreBeforeTailState();\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  _resetBeforeTailState () {\r\n    this._blocks.forEach(b => {\r\n      // $FlowFixMe _resetBeforeTailState is not exist in PatternBlock\r\n      if (typeof b._resetBeforeTailState === 'function') {\r\n        b._resetBeforeTailState();\r\n      }\r\n    });\r\n    super._resetBeforeTailState();\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  reset () {\r\n    super.reset();\r\n    this._blocks.forEach(b => b.reset());\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  get isComplete (): boolean {\r\n    return this._blocks.every(b => b.isComplete);\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  doCommit () {\r\n    this._blocks.forEach(b => b.doCommit());\r\n    super.doCommit();\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  get unmaskedValue (): string {\r\n    return this._blocks.reduce((str, b) => str += b.unmaskedValue, '');\r\n  }\r\n\r\n  set unmaskedValue (unmaskedValue: string) {\r\n    super.unmaskedValue = unmaskedValue;\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  get value (): string {\r\n    // TODO return _value when not in change?\r\n    return this._blocks.reduce((str, b) => str += b.value, '');\r\n  }\r\n\r\n  set value (value: string) {\r\n    super.value = value;\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  appendTail (tail?: ChunksTailDetails | TailDetails): ChangeDetails {\r\n    const details = new ChangeDetails();\r\n    if (tail) {\r\n      details.aggregate(tail instanceof ChunksTailDetails ?\r\n        this._appendTailChunks(tail.chunks) :\r\n        super.appendTail(tail));\r\n    }\r\n    return details.aggregate(this._appendPlaceholder());\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  _appendCharRaw (ch: string, flags: AppendFlags={}): ChangeDetails {\r\n    const blockData = this._mapPosToBlock(this.value.length);\r\n    const details = new ChangeDetails();\r\n    if (!blockData) return details;\r\n\r\n    for (let bi=blockData.index; ; ++bi) {\r\n      const block = this._blocks[bi];\r\n      if (!block) break;\r\n\r\n      const blockDetails = block._appendChar(ch, flags);\r\n\r\n      const skip = blockDetails.skip;\r\n      details.aggregate(blockDetails);\r\n\r\n      if (skip || blockDetails.rawInserted) break; // go next char\r\n    }\r\n\r\n    return details;\r\n  }\r\n\r\n  /** Appends chunks splitted by stop chars */\r\n  _appendTailChunks (chunks: Array<TailInputChunk>) {\r\n    const details = new ChangeDetails();\r\n\r\n    for (let ci=0; ci < chunks.length && !details.skip; ++ci) {\r\n      const chunk = chunks[ci];\r\n\r\n      const lastBlock = this._mapPosToBlock(this.value.length);\r\n      const chunkBlock = chunk instanceof ChunksTailDetails &&\r\n        chunk.index != null &&\r\n        (!lastBlock || lastBlock.index <= chunk.index) &&\r\n        this._blocks[chunk.index];\r\n      if (chunkBlock) {\r\n        // $FlowFixMe we already check index above\r\n        details.aggregate(this._appendPlaceholder(chunk.index));\r\n\r\n        const tailDetails = chunkBlock.appendTail(chunk);\r\n        tailDetails.skip = false; // always ignore skip, it will be set on last\r\n        details.aggregate(tailDetails);\r\n        this._value += tailDetails.inserted;\r\n\r\n        // get not inserted chars\r\n        const remainChars = chunk.value.slice(tailDetails.rawInserted.length);\r\n        if (remainChars) details.aggregate(this.append(remainChars, {tail: true}));\r\n      } else {\r\n        const {stop, value} = (chunk: any);\r\n        if (stop != null && this._stops.indexOf(stop) >= 0) details.aggregate(this._appendPlaceholder(stop));\r\n        details.aggregate(this.append(value, {tail: true}));\r\n      }\r\n    };\r\n\r\n    return details;\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  extractTail (fromPos?: number=0, toPos?: number=this.value.length): ChunksTailDetails {\r\n    return new ChunksTailDetails(this._extractTailChunks(fromPos, toPos));\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  extractInput (fromPos?: number=0, toPos?: number=this.value.length, flags: ExtractFlags={}): string {\r\n    if (fromPos === toPos) return '';\r\n\r\n    let input = '';\r\n\r\n    this._forEachBlocksInRange(fromPos, toPos, (b, _, fromPos, toPos) => {\r\n      input += b.extractInput(fromPos, toPos, flags);\r\n    });\r\n\r\n    return input;\r\n  }\r\n\r\n  /** Extracts chunks from input splitted by stop chars */\r\n  _extractTailChunks (fromPos: number=0, toPos: number=this.value.length): Array<TailInputChunk> {\r\n    if (fromPos === toPos) return [];\r\n\r\n    const chunks = [];\r\n    let lastChunk;\r\n    this._forEachBlocksInRange(fromPos, toPos, (b, bi, fromPos, toPos) => {\r\n      const blockChunk = b.extractTail(fromPos, toPos);\r\n\r\n      let nearestStop;\r\n      for (let si=0; si<this._stops.length; ++si) {\r\n        const stop = this._stops[si];\r\n        if (stop <= bi) nearestStop = stop;\r\n        else break;\r\n      }\r\n\r\n      if (blockChunk instanceof ChunksTailDetails) {\r\n        // TODO append to lastChunk with same index\r\n        if (nearestStop == null) {\r\n          // try append floating chunks to existed lastChunk\r\n          let headFloatChunksCount = blockChunk.chunks.length;\r\n          for (let ci=0; ci< blockChunk.chunks.length; ++ci) {\r\n            if (blockChunk.chunks[ci].stop != null) {\r\n              headFloatChunksCount = ci;\r\n              break;\r\n            }\r\n          }\r\n\r\n          const headFloatChunks = blockChunk.chunks.splice(0, headFloatChunksCount);\r\n          headFloatChunks\r\n            .filter(chunk => chunk.value)\r\n            .forEach(chunk => {\r\n              if (lastChunk) lastChunk.value += chunk.value;\r\n              // will flat nested chunks\r\n              else lastChunk = ({value: chunk.value}: TailDetails);\r\n            });\r\n        }\r\n\r\n        // if block chunk has stops\r\n        if (blockChunk.chunks.length) {\r\n          if (lastChunk) chunks.push(lastChunk);\r\n          blockChunk.index = nearestStop;\r\n          chunks.push(blockChunk);\r\n          // we cant append to ChunksTailDetails, so just reset lastChunk to force adding new\r\n          lastChunk = null;\r\n        }\r\n      } else {\r\n        if (nearestStop != null) {\r\n          // on middle chunks consider stop flag and do not consider value\r\n          // add block even if it is empty\r\n          if (lastChunk) chunks.push(lastChunk);\r\n          blockChunk.stop = nearestStop;\r\n        } else if (lastChunk) {\r\n          lastChunk.value += blockChunk.value;\r\n          return;\r\n        }\r\n        lastChunk = blockChunk;\r\n      }\r\n    });\r\n\r\n    if (lastChunk && lastChunk.value) chunks.push(lastChunk);\r\n\r\n    return chunks;\r\n  }\r\n\r\n  /** Appends placeholder depending on laziness */\r\n  _appendPlaceholder (toBlockIndex: ?number): ChangeDetails {\r\n    const details = new ChangeDetails();\r\n    if (this.lazy && toBlockIndex == null) return details;\r\n\r\n    const startBlockData = this._mapPosToBlock(this.value.length);\r\n    if (!startBlockData) return details;\r\n\r\n    const startBlockIndex = startBlockData.index;\r\n    const endBlockIndex = toBlockIndex != null ? toBlockIndex : this._blocks.length;\r\n\r\n    this._blocks.slice(startBlockIndex, endBlockIndex)\r\n      .forEach(b => {\r\n        if (typeof b._appendPlaceholder === 'function') {\r\n          // $FlowFixMe `_blocks` may not be present\r\n          const args = b._blocks != null ? [b._blocks.length] : [];\r\n          const bDetails = b._appendPlaceholder.apply(b, args);\r\n          this._value += bDetails.inserted;\r\n          details.aggregate(bDetails);\r\n        }\r\n      });\r\n\r\n    return details;\r\n  }\r\n\r\n  /** Finds block in pos */\r\n  _mapPosToBlock (pos: number): ?BlockPosData {\r\n    let accVal = '';\r\n    for (let bi=0; bi<this._blocks.length; ++bi) {\r\n      const block = this._blocks[bi];\r\n      const blockStartPos = accVal.length;\r\n\r\n      accVal += block.value;\r\n\r\n      if (pos <= accVal.length) {\r\n        return {\r\n          index: bi,\r\n          offset: pos - blockStartPos,\r\n        };\r\n      }\r\n    }\r\n  }\r\n\r\n  /** */\r\n  _blockStartPos (blockIndex: number): number {\r\n    return this._blocks\r\n      .slice(0, blockIndex)\r\n      .reduce((pos, b) => pos += b.value.length, 0);\r\n  }\r\n\r\n  /** */\r\n  _forEachBlocksInRange (fromPos: number, toPos: number=this.value.length, fn: (block: PatternBlock, blockIndex: number, fromPos?: number, toPos?: number) => void) {\r\n    const fromBlock = this._mapPosToBlock(fromPos);\r\n\r\n    if (fromBlock) {\r\n      const toBlock = this._mapPosToBlock(toPos);\r\n      // process first block\r\n      const isSameBlock = toBlock && fromBlock.index === toBlock.index;\r\n      const fromBlockRemoveBegin = fromBlock.offset;\r\n      const fromBlockRemoveEnd = toBlock && isSameBlock ? toBlock.offset : undefined;\r\n      fn(this._blocks[fromBlock.index], fromBlock.index, fromBlockRemoveBegin, fromBlockRemoveEnd);\r\n\r\n      if (toBlock && !isSameBlock) {\r\n        // process intermediate blocks\r\n        for (let bi=fromBlock.index+1; bi<toBlock.index; ++bi) {\r\n          fn(this._blocks[bi], bi);\r\n        }\r\n\r\n        // process last block\r\n        fn(this._blocks[toBlock.index], toBlock.index, 0, toBlock.offset);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  remove (fromPos: number=0, toPos: number=this.value.length): ChangeDetails {\r\n    const removeDetails = super.remove(fromPos, toPos);\r\n    this._forEachBlocksInRange(fromPos, toPos, (b, _, bFromPos, bToPos) => {\r\n      removeDetails.aggregate(b.remove(bFromPos, bToPos));\r\n    });\r\n    return removeDetails;\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  nearestInputPos (cursorPos: number, direction: Direction=DIRECTION.NONE): number {\r\n    // TODO refactor - extract alignblock\r\n\r\n    const beginBlockData = this._mapPosToBlock(cursorPos) || {index: 0, offset: 0};\r\n    const {\r\n      offset: beginBlockOffset,\r\n      index: beginBlockIndex,\r\n    } = beginBlockData;\r\n    const beginBlock = this._blocks[beginBlockIndex];\r\n\r\n    if (!beginBlock) return cursorPos;\r\n\r\n    let beginBlockCursorPos = beginBlockOffset;\r\n    // if position inside block - try to adjust it\r\n    if (beginBlockCursorPos !== 0 && beginBlockCursorPos < beginBlock.value.length) {\r\n      beginBlockCursorPos = beginBlock.nearestInputPos(beginBlockOffset, forceDirection(direction));\r\n    }\r\n\r\n    const cursorAtRight = beginBlockCursorPos === beginBlock.value.length;\r\n    const cursorAtLeft = beginBlockCursorPos === 0;\r\n\r\n    //  cursor is INSIDE first block (not at bounds)\r\n    if (!cursorAtLeft && !cursorAtRight) return this._blockStartPos(beginBlockIndex) + beginBlockCursorPos;\r\n\r\n    const searchBlockIndex = cursorAtRight ? beginBlockIndex + 1 : beginBlockIndex;\r\n\r\n    if (direction === DIRECTION.NONE) {\r\n      // NONE direction used to calculate start input position if no chars were removed\r\n      // FOR NONE:\r\n      // -\r\n      // input|any\r\n      // ->\r\n      //  any|input\r\n      // <-\r\n      //  filled-input|any\r\n\r\n      // check if first block at left is input\r\n      if (searchBlockIndex > 0) {\r\n        const blockIndexAtLeft = searchBlockIndex-1;\r\n        const blockAtLeft = this._blocks[blockIndexAtLeft];\r\n        const blockInputPos = blockAtLeft.nearestInputPos(0, DIRECTION.NONE);\r\n        // is input\r\n        if (!blockAtLeft.value.length || blockInputPos !== blockAtLeft.value.length) {\r\n          return this._blockStartPos(searchBlockIndex);\r\n        }\r\n      }\r\n\r\n      // ->\r\n      let firstInputAtRight = searchBlockIndex;\r\n      for (let bi=firstInputAtRight; bi < this._blocks.length; ++bi) {\r\n        const block = this._blocks[bi];\r\n        const blockInputPos = block.nearestInputPos(0, DIRECTION.NONE);\r\n        if (blockInputPos !== block.value.length) {\r\n          return this._blockStartPos(bi) + blockInputPos;\r\n        }\r\n      }\r\n\r\n      return this.value.length;\r\n    }\r\n\r\n    if (direction === DIRECTION.LEFT || direction === DIRECTION.FORCE_LEFT) {\r\n      // -\r\n      //  any|filled-input\r\n      // <-\r\n      //  any|first not empty is not-len-aligned\r\n      //  not-0-aligned|any\r\n      // ->\r\n      //  any|not-len-aligned or end\r\n\r\n      // check if first block at right is filled input\r\n      let firstFilledBlockIndexAtRight;\r\n      for (let bi=searchBlockIndex; bi < this._blocks.length; ++bi) {\r\n        if (this._blocks[bi].value) {\r\n          firstFilledBlockIndexAtRight = bi;\r\n          break;\r\n        }\r\n      }\r\n      if (firstFilledBlockIndexAtRight != null) {\r\n        const filledBlock = this._blocks[firstFilledBlockIndexAtRight];\r\n        const blockInputPos = filledBlock.nearestInputPos(0, DIRECTION.RIGHT);\r\n        if (blockInputPos === 0 && filledBlock.unmaskedValue.length) {\r\n          // filled block is input\r\n          return this._blockStartPos(firstFilledBlockIndexAtRight) + blockInputPos;\r\n        }\r\n      }\r\n\r\n      // <-\r\n      // find this vars\r\n      let firstFilledInputBlockIndex = -1;\r\n      let firstEmptyInputBlockIndex;  // TODO consider nested empty inputs\r\n      for (let bi=searchBlockIndex-1; bi >= 0; --bi) {\r\n        const block = this._blocks[bi];\r\n        const blockInputPos = block.nearestInputPos(block.value.length, DIRECTION.FORCE_LEFT);\r\n        if (firstEmptyInputBlockIndex == null && (!block.value || blockInputPos !== 0)) {\r\n          firstEmptyInputBlockIndex = bi;\r\n        }\r\n        if (blockInputPos !== 0) {\r\n          if (blockInputPos !== block.value.length) {\r\n            // aligned inside block - return immediately\r\n            return this._blockStartPos(bi) + blockInputPos;\r\n          } else {\r\n            // found filled\r\n            firstFilledInputBlockIndex = bi;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      if (direction === DIRECTION.LEFT) {\r\n        // try find first empty input before start searching position only when not forced\r\n        for (let bi=firstFilledInputBlockIndex+1; bi <= Math.min(searchBlockIndex, this._blocks.length-1); ++bi) {\r\n          const block = this._blocks[bi];\r\n          const blockInputPos = block.nearestInputPos(0, DIRECTION.NONE);\r\n          const blockAlignedPos = this._blockStartPos(bi) + blockInputPos;\r\n          // if block is empty and last or not lazy input\r\n          if ((!block.value.length && blockAlignedPos === this.value.length || blockInputPos !== block.value.length) && blockAlignedPos <= cursorPos) {\r\n            return blockAlignedPos;\r\n          }\r\n        }\r\n      }\r\n\r\n      // process overflow\r\n      if (firstFilledInputBlockIndex >= 0) {\r\n        return this._blockStartPos(firstFilledInputBlockIndex) + this._blocks[firstFilledInputBlockIndex].value.length;\r\n      }\r\n\r\n      // for lazy if has aligned left inside fixed and has came to the start - use start position\r\n      if (\r\n        direction === DIRECTION.FORCE_LEFT ||\r\n        this.lazy && !this.extractInput() && !isInput(this._blocks[searchBlockIndex])\r\n      ) {\r\n        return 0;\r\n      }\r\n\r\n      if (firstEmptyInputBlockIndex != null) {\r\n        return this._blockStartPos(firstEmptyInputBlockIndex);\r\n      }\r\n\r\n      // find first input\r\n      for (let bi=searchBlockIndex; bi < this._blocks.length; ++bi) {\r\n        const block = this._blocks[bi];\r\n        const blockInputPos = block.nearestInputPos(0, DIRECTION.NONE);\r\n        // is input\r\n        if (!block.value.length || blockInputPos !== block.value.length) {\r\n          return this._blockStartPos(bi) + blockInputPos;\r\n        }\r\n      }\r\n\r\n      return 0;\r\n    }\r\n\r\n    if (direction === DIRECTION.RIGHT || direction === DIRECTION.FORCE_RIGHT) {\r\n      // ->\r\n      //  any|not-len-aligned and filled\r\n      //  any|not-len-aligned\r\n      // <-\r\n      //  not-0-aligned or start|any\r\n      let firstInputBlockAlignedIndex: ?number;\r\n      let firstInputBlockAlignedPos: ?number;\r\n      for (let bi=searchBlockIndex; bi < this._blocks.length; ++bi) {\r\n        const block = this._blocks[bi];\r\n        const blockInputPos = block.nearestInputPos(0, DIRECTION.NONE);\r\n        if (blockInputPos !== block.value.length) {\r\n          firstInputBlockAlignedPos = this._blockStartPos(bi) + blockInputPos;\r\n          firstInputBlockAlignedIndex = bi;\r\n          break;\r\n        }\r\n      }\r\n\r\n      if (firstInputBlockAlignedIndex != null && firstInputBlockAlignedPos != null) {\r\n        for (let bi=firstInputBlockAlignedIndex; bi < this._blocks.length; ++bi) {\r\n          const block = this._blocks[bi];\r\n          const blockInputPos = block.nearestInputPos(0, DIRECTION.FORCE_RIGHT);\r\n          if (blockInputPos !== block.value.length) {\r\n            return this._blockStartPos(bi) + blockInputPos;\r\n          }\r\n        }\r\n        return direction === DIRECTION.FORCE_RIGHT ?\r\n          this.value.length :\r\n          firstInputBlockAlignedPos;\r\n      }\r\n\r\n      for (let bi=Math.min(searchBlockIndex, this._blocks.length-1); bi >= 0; --bi) {\r\n        const block = this._blocks[bi];\r\n        const blockInputPos = block.nearestInputPos(block.value.length, DIRECTION.LEFT);\r\n        if (blockInputPos !== 0) {\r\n          const alignedPos = this._blockStartPos(bi) + blockInputPos;\r\n          if (alignedPos >= cursorPos) return alignedPos;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    return cursorPos;\r\n  }\r\n\r\n  /** Get block by name */\r\n  maskedBlock (name: string): ?PatternBlock {\r\n    return this.maskedBlocks(name)[0];\r\n  }\r\n\r\n  /** Get all blocks by name */\r\n  maskedBlocks (name: string): Array<PatternBlock> {\r\n    const indices = this._maskedBlocks[name];\r\n    if (!indices) return [];\r\n    return indices.map(gi => this._blocks[gi]);\r\n  }\r\n}\r\nMaskedPattern.DEFAULTS = {\r\n  lazy: true,\r\n  placeholderChar: '_'\r\n};\r\nMaskedPattern.STOP_CHAR = '`';\r\nMaskedPattern.ESCAPE_CHAR = '\\\\';\r\nMaskedPattern.InputDefinition = PatternInputDefinition;\r\nMaskedPattern.FixedDefinition = PatternFixedDefinition;\r\n\r\nfunction isInput (block: PatternBlock): boolean {\r\n  if (!block) return false;\r\n\r\n  const value = block.value;\r\n  return !value || block.nearestInputPos(0, DIRECTION.NONE) !== value.length;\r\n}\r\n","// @flow\r\nimport MaskedPattern from './pattern.js';\r\n\r\n\r\n/** Pattern which accepts ranges */\r\nexport default\r\nclass MaskedRange extends MaskedPattern {\r\n  /**\r\n    Optionally sets max length of pattern.\r\n    Used when pattern length is longer then `to` param length. Pads zeros at start in this case.\r\n  */\r\n  maxLength: number;\r\n  /** Min bound */\r\n  from: number;\r\n  /** Max bound */\r\n  to: number;\r\n\r\n  get _matchFrom (): number {\r\n    return this.maxLength - String(this.from).length;\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  _update (opts: any) {  // TODO type\r\n    opts = {\r\n      to: this.to || 0,\r\n      from: this.from || 0,\r\n      ...opts,\r\n    };\r\n\r\n    let maxLength = String(opts.to).length;\r\n    if (opts.maxLength != null) maxLength = Math.max(maxLength, opts.maxLength);\r\n    opts.maxLength = maxLength;\r\n\r\n    const toStr = String(opts.to).padStart(maxLength, '0');\r\n    const fromStr = String(opts.from).padStart(maxLength, '0');\r\n    let sameCharsCount = 0;\r\n    while (sameCharsCount < toStr.length && toStr[sameCharsCount] === fromStr[sameCharsCount]) ++sameCharsCount;\r\n    opts.mask = toStr.slice(0, sameCharsCount).replace(/0/g, '\\\\0') + '0'.repeat(maxLength - sameCharsCount);\r\n\r\n    super._update(opts);\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  get isComplete (): boolean {\r\n    return super.isComplete && Boolean(this.value);\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  doValidate (...args: *): boolean {\r\n    const str = this.value;\r\n    let minstr = '';\r\n    let maxstr = '';\r\n\r\n    const [, placeholder, num] = str.match(/^(\\D*)(\\d*)(\\D*)/) || [];\r\n    if (num) {\r\n      minstr = ('0'.repeat(placeholder.length) + num);\r\n      maxstr = ('9'.repeat(placeholder.length) + num);\r\n    }\r\n\r\n    const firstNonZero = str.search(/[^0]/);\r\n    if (firstNonZero === -1 && str.length <= this._matchFrom) return true;\r\n\r\n    minstr = minstr.padEnd(this.maxLength, '0');\r\n    maxstr = maxstr.padEnd(this.maxLength, '9');\r\n\r\n    return this.from <= Number(maxstr) && Number(minstr) <= this.to &&\r\n      super.doValidate(...args);\r\n  }\r\n}\r\n","// @flow\r\nimport MaskedPattern from './pattern.js';\r\nimport MaskedRange from './range.js';\r\n\r\n\r\n/** Date mask */\r\nexport default\r\nclass MaskedDate extends MaskedPattern {\r\n  static GET_DEFAULT_BLOCKS: () => {[string]: any};\r\n  static DEFAULTS: any;\r\n\r\n  /** Parse string to Date */\r\n  parse: (string) => Date;\r\n  /** Format Date to string */\r\n  format: (Date) => string;\r\n  /** Pattern mask for date according to {@link MaskedDate#format} */\r\n  pattern: string;\r\n  /** Start date */\r\n  min: ?Date;\r\n  /** End date */\r\n  max: ?Date;\r\n\r\n  /**\r\n    @param {Object} opts\r\n  */\r\n  constructor (opts: any) {\r\n    super({\r\n      ...MaskedDate.DEFAULTS,\r\n      ...opts\r\n    });\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  _update (opts: any) {\r\n    if (opts.mask === Date) delete opts.mask;\r\n    if (opts.pattern) {\r\n      opts.mask = opts.pattern;\r\n      delete opts.pattern;\r\n    }\r\n\r\n    const blocks = opts.blocks;\r\n    opts.blocks = Object.assign({}, MaskedDate.GET_DEFAULT_BLOCKS());\r\n    // adjust year block\r\n    if (opts.min) opts.blocks.Y.from = opts.min.getFullYear();\r\n    if (opts.max) opts.blocks.Y.to = opts.max.getFullYear();\r\n    if (opts.min && opts.max && opts.blocks.Y.from === opts.blocks.Y.to\r\n    ) {\r\n      opts.blocks.m.from = opts.min.getMonth() + 1;\r\n      opts.blocks.m.to = opts.max.getMonth() + 1;\r\n\r\n      if (opts.blocks.m.from === opts.blocks.m.to) {\r\n        opts.blocks.d.from = opts.min.getDate();\r\n        opts.blocks.d.to = opts.max.getDate();\r\n      }\r\n    }\r\n    Object.assign(opts.blocks, blocks);\r\n\r\n    super._update(opts);\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  doValidate (...args: *): boolean {\r\n    const date = this.date;\r\n\r\n    return super.doValidate(...args) &&\r\n      (!this.isComplete ||\r\n        this.isDateExist(this.value) && date != null &&\r\n        (this.min == null || this.min <= date) &&\r\n        (this.max == null || date <= this.max));\r\n  }\r\n\r\n  /** Checks if date is exists */\r\n  isDateExist (str: string): boolean {\r\n    return this.format(this.parse(str)) === str;\r\n  }\r\n\r\n  /** Parsed Date */\r\n  get date (): ?Date {\r\n    return this.isComplete ?\r\n      this.parse(this.value) :\r\n      null;\r\n  }\r\n  set date (date: Date) {\r\n    this.value = this.format(date);\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  get typedValue (): ?Date {\r\n    return this.date;\r\n  }\r\n  set typedValue (value: Date) {\r\n    this.date = value;\r\n  }\r\n}\r\nMaskedDate.DEFAULTS = {\r\n  pattern: 'd{.}`m{.}`Y',\r\n  format: date => {\r\n    const day = String(date.getDate()).padStart(2, '0');\r\n    const month = String(date.getMonth() + 1).padStart(2, '0');\r\n    const year = date.getFullYear();\r\n\r\n    return [day, month, year].join('.');\r\n  },\r\n  parse: str => {\r\n    const [day, month, year] = str.split('.');\r\n    return new Date(year, month - 1, day);\r\n  },\r\n};\r\nMaskedDate.GET_DEFAULT_BLOCKS = () => {\r\n  return {\r\n    d: {\r\n      mask: MaskedRange,\r\n      from: 1,\r\n      to: 31,\r\n      maxLength: 2,\r\n    },\r\n    m: {\r\n      mask: MaskedRange,\r\n      from: 1,\r\n      to: 12,\r\n      maxLength: 2,\r\n    },\r\n    Y: {\r\n      mask: MaskedRange,\r\n      from: 1900,\r\n      to: 9999,\r\n    }\r\n  };\r\n};\r\n","// @flow\r\n\r\nexport\r\ntype ElementEvent =\r\n  'selectionChange' |\r\n  'input' |\r\n  'drop' |\r\n  'click' |\r\n  'focus' |\r\n  'commit';\r\n\r\n/**\r\n  Generic element API to use with mask\r\n  @interface\r\n*/\r\nexport default\r\nclass MaskElement {\r\n  /** */\r\n  +_unsafeSelectionStart: number;\r\n  /** */\r\n  +_unsafeSelectionEnd: number;\r\n  /** */\r\n  value: string;\r\n\r\n  /** Safely returns selection start */\r\n  get selectionStart (): number {\r\n    let start;\r\n    try {\r\n      start = this._unsafeSelectionStart;\r\n    } catch (e) {}\r\n\r\n    return start != null ?\r\n      start :\r\n      this.value.length;\r\n  }\r\n\r\n  /** Safely returns selection end */\r\n  get selectionEnd (): number {\r\n    let end;\r\n    try {\r\n      end = this._unsafeSelectionEnd;\r\n    } catch (e) {}\r\n\r\n    return end != null ?\r\n      end :\r\n      this.value.length;\r\n  }\r\n\r\n  /** Safely sets element selection */\r\n  select (start: number, end: number) {\r\n    if (start == null || end == null ||\r\n      start === this.selectionStart && end === this.selectionEnd) return;\r\n\r\n    try {\r\n      this._unsafeSelect(start, end);\r\n    } catch (e) {}\r\n  }\r\n\r\n  /** Should be overriden in subclasses */\r\n  _unsafeSelect (start: number, end: number): void {}\r\n  /** Should be overriden in subclasses */\r\n  get isActive (): boolean { return false; }\r\n  /** Should be overriden in subclasses */\r\n  bindEvents (handlers: {[ElementEvent]: Function}) {}\r\n  /** Should be overriden in subclasses */\r\n  unbindEvents (): void {}\r\n}\r\n","// @flow\r\nimport MaskElement, {type ElementEvent} from './mask-element.js';\r\n\r\n\r\n/** Bridge between HTMLElement and {@link Masked} */\r\nexport default\r\nclass HTMLMaskElement extends MaskElement {\r\n  /** Mapping between HTMLElement events and mask internal events */\r\n  static EVENTS_MAP: {[ElementEvent]: string};\r\n  /** HTMLElement to use mask on */\r\n  input: HTMLTextAreaElement | HTMLInputElement;\r\n  _handlers: {[string]: Function};\r\n\r\n  /**\r\n    @param {HTMLInputElement|HTMLTextAreaElement} input\r\n  */\r\n  constructor (input: HTMLTextAreaElement | HTMLInputElement) {\r\n    super();\r\n    this.input = input;\r\n    this._handlers = {};\r\n  }\r\n\r\n  /**\r\n    Is element in focus\r\n    @readonly\r\n  */\r\n  get isActive (): boolean {\r\n    return this.input === document.activeElement;\r\n  }\r\n\r\n  /**\r\n    Returns HTMLElement selection start\r\n    @override\r\n  */\r\n  get _unsafeSelectionStart (): number {\r\n    return this.input.selectionStart;\r\n  }\r\n\r\n  /**\r\n    Returns HTMLElement selection end\r\n    @override\r\n  */\r\n  get _unsafeSelectionEnd (): number {\r\n    return this.input.selectionEnd;\r\n  }\r\n\r\n  /**\r\n    Sets HTMLElement selection\r\n    @override\r\n  */\r\n  _unsafeSelect (start: number, end: number) {\r\n    this.input.setSelectionRange(start, end);\r\n  }\r\n\r\n  /**\r\n    HTMLElement value\r\n    @override\r\n  */\r\n  get value (): string {\r\n    return this.input.value;\r\n  }\r\n  set value (value: string) {\r\n    this.input.value = value;\r\n  }\r\n\r\n  /**\r\n    Binds HTMLElement events to mask internal events\r\n    @override\r\n  */\r\n  bindEvents (handlers: {[ElementEvent]: Function}) {\r\n    Object.keys(handlers)\r\n      .forEach(event => this._toggleEventHandler(HTMLMaskElement.EVENTS_MAP[event], handlers[event]));\r\n  }\r\n\r\n  /**\r\n    Unbinds HTMLElement events to mask internal events\r\n    @override\r\n  */\r\n  unbindEvents () {\r\n    Object.keys(this._handlers)\r\n      .forEach(event => this._toggleEventHandler(event));\r\n  }\r\n\r\n  /** */\r\n  _toggleEventHandler (event: string, handler?: Function): void {\r\n    if (this._handlers[event]) {\r\n      this.input.removeEventListener(event, this._handlers[event]);\r\n      delete this._handlers[event];\r\n    }\r\n\r\n    if (handler) {\r\n      this.input.addEventListener(event, handler);\r\n      this._handlers[event] = handler;\r\n    }\r\n  }\r\n}\r\nHTMLMaskElement.EVENTS_MAP = {\r\n  selectionChange: 'keydown',\r\n  input: 'input',\r\n  drop: 'drop',\r\n  click: 'click',\r\n  focus: 'focus',\r\n  commit: 'change',\r\n};\r\n","// @flow\r\nimport {objectIncludes, DIRECTION, type Selection} from '../core/utils.js';\r\nimport ActionDetails from '../core/action-details.js';\r\nimport MaskedDate from '../masked/date.js';\r\nimport createMask, {maskedClass} from '../masked/factory.js';\r\nimport type Masked from '../masked/base.js';\r\nimport {type Mask} from '../masked/base.js';\r\nimport MaskElement from './mask-element.js';\r\nimport HTMLMaskElement from './html-mask-element.js';\r\n\r\n\r\n/** Listens to element events and controls changes between element and {@link Masked} */\r\nexport default\r\nclass InputMask {\r\n  /**\r\n    View element\r\n    @readonly\r\n  */\r\n  el: MaskElement;\r\n\r\n  /**\r\n    Internal {@link Masked} model\r\n    @readonly\r\n  */\r\n  masked: Masked<*>;\r\n  alignCursor: () => void;\r\n  alignCursorFriendly: () => void;\r\n\r\n  _listeners: {[string]: Array<Function>};\r\n  _value: string;\r\n  _changingCursorPos: number;\r\n  _unmaskedValue: string;\r\n  _saveSelection: (?Event) => void;\r\n  _selection: Selection;\r\n  _onInput: () => void;\r\n  _onChange: () => void;\r\n  _onDrop: (Event) => void;\r\n  _cursorChanging: TimeoutID;\r\n\r\n  /**\r\n    @param {MaskElement|HTMLInputElement|HTMLTextAreaElement} el\r\n    @param {Object} opts\r\n  */\r\n  constructor (el: MaskElement | HTMLTextAreaElement | HTMLInputElement, opts: {[string]: any}) {\r\n    this.el = (el instanceof MaskElement) ?\r\n      el :\r\n      new HTMLMaskElement(el);\r\n    this.masked = createMask(opts);\r\n\r\n    this._listeners = {};\r\n    this._value = '';\r\n    this._unmaskedValue = '';\r\n\r\n    this._saveSelection = this._saveSelection.bind(this);\r\n    this._onInput = this._onInput.bind(this);\r\n    this._onChange = this._onChange.bind(this);\r\n    this._onDrop = this._onDrop.bind(this);\r\n    this.alignCursor = this.alignCursor.bind(this);\r\n    this.alignCursorFriendly = this.alignCursorFriendly.bind(this);\r\n\r\n    this._bindEvents();\r\n\r\n    // refresh\r\n    this.updateValue();\r\n    this._onChange();\r\n  }\r\n\r\n  /** Read or update mask */\r\n  get mask (): Mask {\r\n    return this.masked.mask;\r\n  }\r\n\r\n  set mask (mask: Mask) {\r\n    if (mask == null ||\r\n      mask === this.masked.mask ||\r\n      mask === Date && this.masked instanceof MaskedDate) return;\r\n\r\n    if (this.masked.constructor === maskedClass(mask)) {\r\n      this.masked.updateOptions({mask});\r\n      return;\r\n    }\r\n\r\n    const masked = createMask({mask});\r\n    masked.unmaskedValue = this.masked.unmaskedValue;\r\n    this.masked = masked;\r\n  }\r\n\r\n  /** Raw value */\r\n  get value (): string {\r\n    return this._value;\r\n  }\r\n\r\n  set value (str: string) {\r\n    this.masked.value = str;\r\n    this.updateControl();\r\n    this.alignCursor();\r\n  }\r\n\r\n  /** Unmasked value */\r\n  get unmaskedValue (): string {\r\n    return this._unmaskedValue;\r\n  }\r\n\r\n  set unmaskedValue (str: string) {\r\n    this.masked.unmaskedValue = str;\r\n    this.updateControl();\r\n    this.alignCursor();\r\n  }\r\n\r\n  /** Typed unmasked value */\r\n  get typedValue (): any {\r\n    return this.masked.typedValue;\r\n  }\r\n\r\n  set typedValue (val: any) {\r\n    this.masked.typedValue = val;\r\n    this.updateControl();\r\n    this.alignCursor();\r\n  }\r\n\r\n  /**\r\n    Starts listening to element events\r\n    @protected\r\n  */\r\n  _bindEvents () {\r\n    this.el.bindEvents({\r\n      selectionChange: this._saveSelection,\r\n      input: this._onInput,\r\n      drop: this._onDrop,\r\n      click: this.alignCursorFriendly,\r\n      focus: this.alignCursorFriendly,\r\n      commit: this._onChange,\r\n    });\r\n  }\r\n\r\n  /**\r\n    Stops listening to element events\r\n    @protected\r\n   */\r\n  _unbindEvents () {\r\n    this.el.unbindEvents();\r\n  }\r\n\r\n  /**\r\n    Fires custom event\r\n    @protected\r\n   */\r\n  _fireEvent (ev: string) {\r\n    const listeners = this._listeners[ev];\r\n    if (!listeners) return;\r\n\r\n    listeners.forEach(l => l());\r\n  }\r\n\r\n  /**\r\n    Current selection start\r\n    @readonly\r\n  */\r\n  get selectionStart (): number {\r\n    return this._cursorChanging ?\r\n      this._changingCursorPos :\r\n\r\n      this.el.selectionStart;\r\n  }\r\n\r\n  /** Current cursor position */\r\n  get cursorPos (): number {\r\n    return this._cursorChanging ?\r\n      this._changingCursorPos :\r\n\r\n      this.el.selectionEnd;\r\n  }\r\n  set cursorPos (pos: number) {\r\n    if (!this.el.isActive) return;\r\n\r\n    this.el.select(pos, pos);\r\n    this._saveSelection();\r\n  }\r\n\r\n  /**\r\n    Stores current selection\r\n    @protected\r\n  */\r\n  _saveSelection (/* ev */) {\r\n    if (this.value !== this.el.value) {\r\n      console.warn('Element value was changed outside of mask. Syncronize mask using `mask.updateValue()` to work properly.'); // eslint-disable-line no-console\r\n    }\r\n    this._selection = {\r\n      start: this.selectionStart,\r\n      end: this.cursorPos\r\n    };\r\n  }\r\n\r\n  /** Syncronizes model value from view */\r\n  updateValue () {\r\n    this.masked.value = this.el.value;\r\n    this._value = this.masked.value;\r\n  }\r\n\r\n  /** Syncronizes view from model value, fires change events */\r\n  updateControl () {\r\n    const newUnmaskedValue = this.masked.unmaskedValue;\r\n    const newValue = this.masked.value;\r\n    const isChanged = (this.unmaskedValue !== newUnmaskedValue ||\r\n      this.value !== newValue);\r\n\r\n    this._unmaskedValue = newUnmaskedValue;\r\n    this._value = newValue;\r\n\r\n    if (this.el.value !== newValue) this.el.value = newValue;\r\n    if (isChanged) this._fireChangeEvents();\r\n  }\r\n\r\n  /** Updates options with deep equal check, recreates @{link Masked} model if mask type changes */\r\n  updateOptions (opts: {[string]: any}) {\r\n    if (objectIncludes(this.masked, opts)) return;\r\n\r\n    const { mask, ...restOpts } = opts;\r\n\r\n    this.mask = mask;\r\n    this.masked.updateOptions(restOpts);\r\n\r\n    this.updateControl();\r\n  }\r\n\r\n  /** Updates cursor */\r\n  updateCursor (cursorPos: number) {\r\n    if (cursorPos == null) return;\r\n    this.cursorPos = cursorPos;\r\n\r\n    // also queue change cursor for mobile browsers\r\n    this._delayUpdateCursor(cursorPos);\r\n  }\r\n\r\n  /**\r\n    Delays cursor update to support mobile browsers\r\n    @private\r\n  */\r\n  _delayUpdateCursor (cursorPos: number) {\r\n    this._abortUpdateCursor();\r\n    this._changingCursorPos = cursorPos;\r\n    this._cursorChanging = setTimeout(() => {\r\n      if (!this.el) return; // if was destroyed\r\n      this.cursorPos = this._changingCursorPos;\r\n      this._abortUpdateCursor();\r\n    }, 10);\r\n  }\r\n\r\n  /**\r\n    Fires custom events\r\n    @protected\r\n  */\r\n  _fireChangeEvents () {\r\n    this._fireEvent('accept');\r\n    if (this.masked.isComplete) this._fireEvent('complete');\r\n  }\r\n\r\n  /**\r\n    Aborts delayed cursor update\r\n    @private\r\n  */\r\n  _abortUpdateCursor () {\r\n    if (this._cursorChanging) {\r\n      clearTimeout(this._cursorChanging);\r\n      delete this._cursorChanging;\r\n    }\r\n  }\r\n\r\n  /** Aligns cursor to nearest available position */\r\n  alignCursor () {\r\n    this.cursorPos = this.masked.nearestInputPos(this.cursorPos, DIRECTION.LEFT);\r\n  }\r\n\r\n  /** Aligns cursor only if selection is empty */\r\n  alignCursorFriendly () {\r\n    if (this.selectionStart !== this.cursorPos) return;\r\n    this.alignCursor();\r\n  }\r\n\r\n  /** Adds listener on custom event */\r\n  on (ev: string, handler: Function) {\r\n    if (!this._listeners[ev]) this._listeners[ev] = [];\r\n    this._listeners[ev].push(handler);\r\n    return this;\r\n  }\r\n\r\n  /** Removes custom event listener */\r\n  off (ev: string, handler: Function) {\r\n    if (!this._listeners[ev]) return;\r\n    if (!handler) {\r\n      delete this._listeners[ev];\r\n      return;\r\n    }\r\n    const hIndex = this._listeners[ev].indexOf(handler);\r\n    if (hIndex >= 0) this._listeners[ev].splice(hIndex, 1);\r\n    return this;\r\n  }\r\n\r\n  /** Handles view input event */\r\n  _onInput () {\r\n    this._abortUpdateCursor();\r\n\r\n    // fix strange IE behavior\r\n    if (!this._selection) return this.updateValue();\r\n\r\n    const details = new ActionDetails(\r\n      // new state\r\n      this.el.value, this.cursorPos,\r\n      // old state\r\n      this.value, this._selection);\r\n\r\n    const oldRawValue = this.masked.rawInputValue;\r\n\r\n    const offset = this.masked.splice(\r\n      details.startChangePos,\r\n      details.removed.length,\r\n      details.inserted,\r\n      details.removeDirection).offset;\r\n\r\n    // force align in remove direction only if no input chars were removed\r\n    // otherwise we still need to align with NONE (to get out from fixed symbols for instance)\r\n    const removeDirection = oldRawValue === this.masked.rawInputValue ?\r\n      details.removeDirection :\r\n      DIRECTION.NONE;\r\n\r\n    const cursorPos = this.masked.nearestInputPos(\r\n      details.startChangePos + offset,\r\n      removeDirection,\r\n    );\r\n\r\n    this.updateControl();\r\n    this.updateCursor(cursorPos);\r\n  }\r\n\r\n  /** Handles view change event and commits model value */\r\n  _onChange () {\r\n    if (this.value !== this.el.value) {\r\n      this.updateValue();\r\n    }\r\n    this.masked.doCommit();\r\n    this.updateControl();\r\n  }\r\n\r\n  /** Handles view drop event, prevents by default */\r\n  _onDrop (ev: Event) {\r\n    ev.preventDefault();\r\n    ev.stopPropagation();\r\n  }\r\n\r\n  /** Unbind view events and removes element reference */\r\n  destroy () {\r\n    this._unbindEvents();\r\n    // $FlowFixMe why not do so?\r\n    this._listeners.length = 0;\r\n    delete this.el;\r\n  }\r\n}\r\n","// @flow\r\nimport MaskedPattern from './pattern.js';\r\n\r\n\r\n/** Pattern which validates enum values */\r\nexport default\r\nclass MaskedEnum extends MaskedPattern {\r\n  enum: Array<string>;\r\n\r\n  /**\r\n    @override\r\n    @param {Object} opts\r\n  */\r\n  _update (opts: any) {  // TODO type\r\n    if (opts.enum) opts.mask = '*'.repeat(opts.enum[0].length);\r\n\r\n    super._update(opts);\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  doValidate (...args: *): boolean {\r\n    return this.enum.some(e => e.indexOf(this.unmaskedValue) >= 0) &&\r\n      super.doValidate(...args);\r\n  }\r\n}\r\n","// @flow\r\nimport {escapeRegExp, indexInDirection, posInDirection, type Direction, DIRECTION} from '../core/utils.js';\r\nimport ChangeDetails from '../core/change-details.js';\r\nimport {type TailDetails} from '../core/tail-details.js';\r\n\r\nimport Masked, {type MaskedOptions, type AppendFlags} from './base.js';\r\n\r\n\r\ntype MaskedNumberOptions = {\r\n  ...MaskedOptions<Number>,\r\n  radix: $PropertyType<MaskedNumber, 'radix'>,\r\n  thousandsSeparator: $PropertyType<MaskedNumber, 'thousandsSeparator'>,\r\n  mapToRadix: $PropertyType<MaskedNumber, 'mapToRadix'>,\r\n  scale: $PropertyType<MaskedNumber, 'scale'>,\r\n  signed: $PropertyType<MaskedNumber, 'signed'>,\r\n  normalizeZeros: $PropertyType<MaskedNumber, 'normalizeZeros'>,\r\n  padFractionalZeros: $PropertyType<MaskedNumber, 'padFractionalZeros'>,\r\n};\r\n\r\n/**\r\n  Number mask\r\n  @param {Object} opts\r\n  @param {string} opts.radix - Single char\r\n  @param {string} opts.thousandsSeparator - Single char\r\n  @param {Array<string>} opts.mapToRadix - Array of single chars\r\n  @param {number} opts.min\r\n  @param {number} opts.max\r\n  @param {number} opts.scale - Digits after point\r\n  @param {boolean} opts.signed - Allow negative\r\n  @param {boolean} opts.normalizeZeros - Flag to remove leading and trailing zeros in the end of editing\r\n  @param {boolean} opts.padFractionalZeros - Flag to pad trailing zeros after point in the end of editing\r\n*/\r\nexport default\r\nclass MaskedNumber extends Masked<Number> {\r\n  static DEFAULTS: $Shape<MaskedNumberOptions>;\r\n\r\n  /** Single char */\r\n  radix: string;\r\n  /** Single char */\r\n  thousandsSeparator: string;\r\n  /** Array of single chars */\r\n  mapToRadix: Array<string>;\r\n  /** */\r\n  min: number;\r\n  /** */\r\n  max: number;\r\n  /** Digits after point */\r\n  scale: number;\r\n  /** */\r\n  signed: boolean;\r\n  /** Flag to remove leading and trailing zeros in the end of editing */\r\n  normalizeZeros: boolean;\r\n  /** Flag to pad trailing zeros after point in the end of editing */\r\n  padFractionalZeros: boolean;\r\n  _numberRegExp: RegExp;\r\n  _numberRegExpInput: RegExp;\r\n  _thousandsSeparatorRegExp: RegExp;\r\n  _mapToRadixRegExp: RegExp;\r\n  _separatorsProcessed: boolean;\r\n\r\n  constructor (opts: $Shape<MaskedNumberOptions>) {\r\n    super({\r\n      ...MaskedNumber.DEFAULTS,\r\n      ...opts\r\n    });\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  _update (opts: MaskedNumberOptions) {\r\n    super._update(opts);\r\n    this._updateRegExps();\r\n  }\r\n\r\n  /** */\r\n  _updateRegExps () {\r\n    // use different regexp to process user input (more strict, input suffix) and tail shifting\r\n    const start = '^'\r\n\r\n    let midInput = '';\r\n    let mid = '';\r\n    if (this.allowNegative) {\r\n      midInput += '([+|\\\\-]?|([+|\\\\-]?(0|([1-9]+\\\\d*))))';\r\n      mid += '[+|\\\\-]?';\r\n    } else {\r\n      midInput += '(0|([1-9]+\\\\d*))';\r\n    }\r\n    mid += '\\\\d*';\r\n\r\n    let end = (this.scale ?\r\n      '(' + escapeRegExp(this.radix) + '\\\\d{0,' + this.scale + '})?' :\r\n      '') + '$';\r\n\r\n    this._numberRegExpInput = new RegExp(start + midInput + end);\r\n    this._numberRegExp = new RegExp(start + mid + end);\r\n    this._mapToRadixRegExp = new RegExp('[' +\r\n      this.mapToRadix.map(escapeRegExp).join('') +\r\n    ']', 'g');\r\n    this._thousandsSeparatorRegExp = new RegExp(escapeRegExp(this.thousandsSeparator), 'g');\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  extractTail (fromPos: number=0, toPos: number=this.value.length): TailDetails {\r\n    const tail = super.extractTail(fromPos, toPos);\r\n\r\n    // $FlowFixMe no ideas\r\n    return {\r\n      ...tail,\r\n      value: this._removeThousandsSeparators(tail.value),\r\n    };\r\n  }\r\n\r\n  /** */\r\n  _removeThousandsSeparators (value: string): string {\r\n    return value.replace(this._thousandsSeparatorRegExp, '');\r\n  }\r\n\r\n  /** */\r\n  _insertThousandsSeparators (value: string): string {\r\n    // https://stackoverflow.com/questions/2901102/how-to-print-a-number-with-commas-as-thousands-separators-in-javascript\r\n    const parts = value.split(this.radix);\r\n    parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, this.thousandsSeparator);\r\n    return parts.join(this.radix);\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  doPrepare (str: string, ...args: *) {\r\n    return super.doPrepare(this._removeThousandsSeparators(str.replace(this._mapToRadixRegExp, this.radix)), ...args);\r\n  }\r\n\r\n  /** */\r\n  _separatorsCount (value: string=this._value) {\r\n    let rawValueLength = this._removeThousandsSeparators(value).length;\r\n\r\n    let valueWithSeparatorsLength = rawValueLength;\r\n    for (let pos = 0; pos <= valueWithSeparatorsLength; ++pos) {\r\n      if (this._value[pos] === this.thousandsSeparator) ++valueWithSeparatorsLength;\r\n    }\r\n\r\n    return valueWithSeparatorsLength - rawValueLength;\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  extractInput (...args: *): string {\r\n    return this._removeThousandsSeparators(super.extractInput(...args));\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  _appendCharRaw (ch: string, flags: AppendFlags={}): ChangeDetails {\r\n    if (!this.thousandsSeparator) return super._appendCharRaw(ch, flags);\r\n\r\n    const previousBeforeTailSeparatorsCount = this._separatorsCount(flags.tail && this._beforeTailState ?\r\n      this._beforeTailState._value :\r\n      this._value);\r\n    this._value = this._removeThousandsSeparators(this.value);\r\n    const appendDetails = super._appendCharRaw(ch, flags);\r\n\r\n    this._value = this._insertThousandsSeparators(this._value);\r\n    const beforeTailSeparatorsCount = this._separatorsCount(flags.tail && this._beforeTailState ?\r\n      this._beforeTailState._value :\r\n      this._value);\r\n\r\n    appendDetails.tailShift += beforeTailSeparatorsCount - previousBeforeTailSeparatorsCount;\r\n    return appendDetails;\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  remove (fromPos?: number=0, toPos?: number=this.value.length): ChangeDetails {\r\n    const valueBeforePos = this.value.slice(0, fromPos);\r\n    const valueAfterPos = this.value.slice(toPos);\r\n\r\n    const previousBeforeTailSeparatorsCount = this._separatorsCount(valueBeforePos);\r\n    this._value = this._insertThousandsSeparators(this._removeThousandsSeparators(valueBeforePos + valueAfterPos));\r\n    const beforeTailSeparatorsCount = this._separatorsCount(valueBeforePos);\r\n\r\n    return new ChangeDetails({\r\n      tailShift: beforeTailSeparatorsCount - previousBeforeTailSeparatorsCount,\r\n    });\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  nearestInputPos (cursorPos: number, direction?: Direction): number {\r\n    if (!direction || direction === DIRECTION.LEFT) return cursorPos;\r\n\r\n    const nextPos = indexInDirection(cursorPos, direction);\r\n    if (this.value[nextPos] === this.thousandsSeparator) cursorPos = posInDirection(cursorPos, direction);\r\n\r\n    return cursorPos;\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  doValidate (flags: AppendFlags) {\r\n    const regexp = flags.input ? this._numberRegExpInput : this._numberRegExp;\r\n\r\n    // validate as string\r\n    let valid = regexp.test(this._removeThousandsSeparators(this.value));\r\n\r\n    if (valid) {\r\n      // validate as number\r\n      const number = this.number;\r\n      valid = valid && !isNaN(number) &&\r\n        // check min bound for negative values\r\n        (this.min == null || this.min >= 0 || this.min <= this.number) &&\r\n        // check max bound for positive values\r\n        (this.max == null || this.max <= 0 || this.number <= this.max);\r\n    }\r\n\r\n    return valid && super.doValidate(flags);\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  doCommit () {\r\n    const number = this.number;\r\n    let validnum = number;\r\n\r\n    // check bounds\r\n    if (this.min != null) validnum = Math.max(validnum, this.min);\r\n    if (this.max != null) validnum = Math.min(validnum, this.max);\r\n\r\n    if (validnum !== number) this.unmaskedValue = String(validnum);\r\n\r\n    let formatted = this.value;\r\n\r\n    if (this.normalizeZeros) formatted = this._normalizeZeros(formatted);\r\n    if (this.padFractionalZeros) formatted = this._padFractionalZeros(formatted);\r\n\r\n    this._value = this._insertThousandsSeparators(formatted);\r\n    super.doCommit();\r\n  }\r\n\r\n  /** */\r\n  _normalizeZeros (value: string): string {\r\n    const parts = this._removeThousandsSeparators(value).split(this.radix);\r\n\r\n    // remove leading zeros\r\n    parts[0] = parts[0].replace(/^(\\D*)(0*)(\\d*)/, (match, sign, zeros, num) => sign + num);\r\n    // add leading zero\r\n    if (value.length && !/\\d$/.test(parts[0])) parts[0] = parts[0] + '0';\r\n\r\n    if (parts.length > 1) {\r\n      parts[1] = parts[1].replace(/0*$/, '');  // remove trailing zeros\r\n      if (!parts[1].length) parts.length = 1;  // remove fractional\r\n    }\r\n\r\n    return this._insertThousandsSeparators(parts.join(this.radix));\r\n  }\r\n\r\n  /** */\r\n  _padFractionalZeros (value: string): string {\r\n    if (!value) return value;\r\n\r\n    const parts = value.split(this.radix);\r\n    if (parts.length < 2) parts.push('');\r\n    parts[1] = parts[1].padEnd(this.scale, '0');\r\n    return parts.join(this.radix);\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  get unmaskedValue (): string {\r\n    return this._removeThousandsSeparators(\r\n      this._normalizeZeros(\r\n        this.value))\r\n      .replace(this.radix, '.');\r\n  }\r\n\r\n  set unmaskedValue (unmaskedValue: string) {\r\n    super.unmaskedValue = unmaskedValue.replace('.', this.radix);\r\n  }\r\n\r\n  /** Parsed Number */\r\n  get number (): number {\r\n    return Number(this.unmaskedValue);\r\n  }\r\n\r\n  set number (number: number) {\r\n    this.unmaskedValue = String(number);\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  get typedValue (): number {\r\n    return this.number;\r\n  }\r\n\r\n  set typedValue (value: number) {\r\n    this.number = value;\r\n  }\r\n\r\n  /**\r\n    Is negative allowed\r\n    @readonly\r\n  */\r\n  get allowNegative (): boolean {\r\n    return this.signed ||\r\n      (this.min != null && this.min < 0) ||\r\n      (this.max != null && this.max < 0);\r\n  }\r\n}\r\nMaskedNumber.DEFAULTS = {\r\n  radix: ',',\r\n  thousandsSeparator: '',\r\n  mapToRadix: ['.'],\r\n  scale: 2,\r\n  signed: false,\r\n  normalizeZeros: true,\r\n  padFractionalZeros: false,\r\n};\r\n","// @flow\r\nimport Masked, {type MaskedOptions} from './base.js';\r\n\r\n\r\n/** Masking by RegExp */\r\nexport default\r\nclass MaskedRegExp extends Masked<RegExp> {\r\n  /**\r\n    @override\r\n    @param {Object} opts\r\n  */\r\n  _update (opts: $Shape<MaskedOptions<RegExp>>) {\r\n    if (opts.mask) opts.validate = (value) => value.search(opts.mask) >= 0;\r\n    super._update(opts);\r\n  }\r\n}\r\n","// @flow\r\nimport Masked, {type MaskedOptions} from './base.js';\r\n\r\n\r\n/** Masking by custom Function */\r\nexport default\r\nclass MaskedFunction extends Masked<Function> {\r\n  /**\r\n    @override\r\n    @param {Object} opts\r\n  */\r\n  _update (opts: MaskedOptions<Function>) {\r\n    if (opts.mask) opts.validate = opts.mask;\r\n    super._update(opts);\r\n  }\r\n}\r\n","// @flow\r\nimport ChangeDetails from '../core/change-details.js';\r\nimport createMask from './factory.js';\r\nimport Masked, {type AppendFlags, type MaskedState} from './base.js';\r\nimport {type TailDetails} from '../core/tail-details.js';\r\n\r\ntype MaskedDynamicState = {|\r\n  ...MaskedState,\r\n  _rawInputValue: string,\r\n  compiledMasks: Array<*>,\r\n  currentMaskRef: ?Masked<*>,\r\n  currentMask: *,\r\n|};\r\n\r\ntype DynamicMaskType = Array<{[string]: any}>;\r\n/** Dynamic mask for choosing apropriate mask in run-time */\r\nexport default\r\nclass MaskedDynamic extends Masked<DynamicMaskType> {\r\n  /** Currently chosen mask */\r\n  currentMask: ?Masked<*>;\r\n  /** Compliled {@link Masked} options */\r\n  compiledMasks: Array<Masked<*>>;\r\n  /** Chooses {@link Masked} depending on input value */\r\n  dispatch: (string, Masked<*>, AppendFlags) => Masked<*>;\r\n\r\n  /**\r\n    @param {Object} opts\r\n  */\r\n  constructor (opts: any) {\r\n    super({\r\n      ...MaskedDynamic.DEFAULTS,\r\n      ...opts\r\n    });\r\n\r\n    this.currentMask = null;\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  _update (opts: any) {\r\n    super._update(opts);\r\n    if ('mask' in opts) {\r\n      // mask could be totally dynamic with only `dispatch` option\r\n      this.compiledMasks = Array.isArray(opts.mask) ?\r\n        opts.mask.map(m => createMask(m)) :\r\n        [];\r\n    }\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  _appendCharRaw (...args: *): ChangeDetails {\r\n    const details = this._applyDispatch(...args);\r\n\r\n    if (this.currentMask) {\r\n      details.aggregate(this.currentMask._appendChar(...args));\r\n    }\r\n\r\n    return details;\r\n  }\r\n\r\n  _applyDispatch (appended: string='', flags: AppendFlags={}) {\r\n    const prevValueBeforeTail = flags.tail && this._beforeTailState ?\r\n      this._beforeTailState._value :\r\n      this.value;\r\n    const inputValue = this.rawInputValue;\r\n    const insertValue = flags.tail && this._beforeTailState ?\r\n      // $FlowFixMe - tired to fight with type system\r\n      this._beforeTailState._rawInputValue :\r\n      inputValue;\r\n    const tailValue = inputValue.slice(insertValue.length);\r\n    const prevMask = this.currentMask;\r\n    const details = new ChangeDetails();\r\n\r\n    const prevMaskState = prevMask && prevMask.state;\r\n    const prevMaskBeforeTailState = prevMask && prevMask._beforeTailState;\r\n\r\n    this.currentMask = this.doDispatch(appended, flags);\r\n\r\n    // restore state after dispatch\r\n    if (this.currentMask) {\r\n      if (this.currentMask !== prevMask) {\r\n        // if mask changed reapply input\r\n        this.currentMask.reset();\r\n\r\n        // $FlowFixMe - it's ok, we don't change current mask above\r\n        const d = this.currentMask.append(insertValue, {raw: true});\r\n        details.tailShift = d.inserted.length - prevValueBeforeTail.length;\r\n\r\n        if (tailValue) {\r\n          // $FlowFixMe - it's ok, we don't change current mask above\r\n          details.tailShift += this.currentMask.append(tailValue, {raw: true, tail: true}).tailShift;\r\n        }\r\n      } else {\r\n        // Dispatch can do something bad with state, so\r\n        // restore prev mask state\r\n        this.currentMask.state = prevMaskState;\r\n        this.currentMask._beforeTailState = prevMaskBeforeTailState;\r\n      }\r\n    }\r\n\r\n    return details;\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  doDispatch(appended: string, flags: AppendFlags={}) {\r\n    return this.dispatch(appended, this, flags);\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  doValidate (...args: *): boolean {\r\n    return super.doValidate(...args) && (\r\n      !this.currentMask || this.currentMask.doValidate(...args));\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  reset () {\r\n    if (this.currentMask) this.currentMask.reset();\r\n    this.compiledMasks.forEach(m => m.reset());\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  get value (): string {\r\n    return this.currentMask ? this.currentMask.value : '';\r\n  }\r\n\r\n  set value (value: string) {\r\n    super.value = value;\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  get unmaskedValue (): string {\r\n    return this.currentMask ? this.currentMask.unmaskedValue : '';\r\n  }\r\n\r\n  set unmaskedValue (unmaskedValue: string) {\r\n    super.unmaskedValue = unmaskedValue;\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  get typedValue (): any {\r\n    return this.currentMask ? this.currentMask.typedValue : '';\r\n  }\r\n\r\n  // probably typedValue should not be used with dynamic\r\n  set typedValue (value: any) {\r\n    let unmaskedValue = String(value);\r\n\r\n    // double check it\r\n    if (this.currentMask) {\r\n      this.currentMask.typedValue = value;\r\n      unmaskedValue = this.currentMask.unmaskedValue;\r\n    }\r\n    this.unmaskedValue = unmaskedValue;\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  get isComplete (): boolean {\r\n    return !!this.currentMask && this.currentMask.isComplete;\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  remove (...args: *): ChangeDetails {\r\n    const details: ChangeDetails = new ChangeDetails();\r\n    if (this.currentMask) {\r\n      details.aggregate(this.currentMask.remove(...args))\r\n        // update with dispatch\r\n        .aggregate(this._applyDispatch());\r\n    }\r\n\r\n    return details;\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  get state (): MaskedDynamicState {\r\n    return {\r\n      ...super.state,\r\n      _rawInputValue: this.rawInputValue,\r\n      compiledMasks: this.compiledMasks.map(m => m.state),\r\n      currentMaskRef: this.currentMask,\r\n      currentMask: this.currentMask && this.currentMask.state,\r\n    };\r\n  }\r\n\r\n  set state (state: MaskedDynamicState) {\r\n    const {compiledMasks, currentMaskRef, currentMask, ...maskedState} = state;\r\n    this.compiledMasks.forEach((m, mi) => m.state = compiledMasks[mi]);\r\n    if (currentMaskRef != null) {\r\n      this.currentMask = currentMaskRef;\r\n      this.currentMask.state = currentMask;\r\n    }\r\n    super.state = maskedState;\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  extractInput (...args: *): string {\r\n    return this.currentMask ?\r\n      this.currentMask.extractInput(...args) :\r\n      '';\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  extractTail (...args: *): TailDetails {\r\n    return this.currentMask ?\r\n      this.currentMask.extractTail(...args) :\r\n      super.extractTail(...args);\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  doCommit () {\r\n    if (this.currentMask) this.currentMask.doCommit();\r\n    super.doCommit();\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  nearestInputPos(...args: *): number {\r\n    return this.currentMask ?\r\n      this.currentMask.nearestInputPos(...args) :\r\n      super.nearestInputPos(...args);\r\n  }\r\n}\r\n\r\nMaskedDynamic.DEFAULTS = {\r\n  dispatch: (appended, masked, flags) => {\r\n    if (!masked.compiledMasks.length) return;\r\n\r\n    const inputValue = masked.rawInputValue;\r\n\r\n    // simulate input\r\n    const inputs = masked.compiledMasks.map((m, index) => {\r\n      m.rawInputValue = inputValue;\r\n      m.append(appended, flags);\r\n      const weight = m.rawInputValue.length;\r\n\r\n      return {weight, index};\r\n    });\r\n\r\n    // pop masks with longer values first\r\n    inputs.sort((i1, i2) => i2.weight - i1.weight);\r\n\r\n    return masked.compiledMasks[inputs[0].index];\r\n  }\r\n};\r\n","import {g} from './core/utils.js';\r\n\r\nimport InputMask from './controls/input.js';\r\n\r\nimport Masked from './masked/base.js';\r\nimport MaskedPattern from './masked/pattern.js';\r\nimport MaskedEnum from './masked/enum.js';\r\nimport MaskedRange from './masked/range.js';\r\nimport MaskedNumber from './masked/number.js';\r\nimport MaskedDate from './masked/date.js';\r\nimport MaskedRegExp from './masked/regexp.js';\r\nimport MaskedFunction from './masked/function.js';\r\nimport MaskedDynamic from './masked/dynamic.js';\r\nimport createMask from './masked/factory.js';\r\nimport MaskElement from './controls/mask-element.js';\r\nimport HTMLMaskElement from './controls/html-mask-element.js';\r\n\r\n\r\n/**\r\n * Applies mask on element.\r\n * @constructor\r\n * @param {HTMLInputElement|HTMLTextAreaElement|MaskElement} el - Element to apply mask\r\n * @param {Object} opts - Custom mask options\r\n * @return {InputMask}\r\n */\r\nexport default\r\nfunction IMask (el, opts={}) {\r\n\t// currently available only for input-like elements\r\n  return new InputMask(el, opts);\r\n}\r\n\r\n/** {@link InputMask} */\r\nIMask.InputMask = InputMask;\r\n\r\n/** {@link Masked} */\r\nIMask.Masked = Masked;\r\n/** {@link MaskedPattern} */\r\nIMask.MaskedPattern = MaskedPattern;\r\n/** {@link MaskedEnum} */\r\nIMask.MaskedEnum = MaskedEnum;\r\n/** {@link MaskedRange} */\r\nIMask.MaskedRange = MaskedRange;\r\n/** {@link MaskedNumber} */\r\nIMask.MaskedNumber = MaskedNumber;\r\n/** {@link MaskedDate} */\r\nIMask.MaskedDate = MaskedDate;\r\n/** {@link MaskedRegExp} */\r\nIMask.MaskedRegExp = MaskedRegExp;\r\n/** {@link MaskedFunction} */\r\nIMask.MaskedFunction = MaskedFunction;\r\n/** {@link MaskedDynamic} */\r\nIMask.MaskedDynamic = MaskedDynamic;\r\n/** {@link createMask} */\r\nIMask.createMask = createMask;\r\n/** {@link MaskElement} */\r\nIMask.MaskElement = MaskElement;\r\n/** {@link HTMLMaskElement} */\r\nIMask.HTMLMaskElement = HTMLMaskElement;\r\n\r\ng.IMask = IMask;\r\n"],"names":["isString","str","String","DIRECTION","NONE","LEFT","FORCE_LEFT","RIGHT","FORCE_RIGHT","indexInDirection","pos","direction","posInDirection","forceDirection","escapeRegExp","replace","objectIncludes","b","a","arrA","Array","isArray","arrB","i","length","dateA","Date","dateB","getTime","regexpA","RegExp","regexpB","toString","keys","Object","prototype","hasOwnProperty","call","g","window","global","self","ActionDetails","constructor","value","cursorPos","oldValue","oldSelection","slice","startChangePos","start","Math","min","insertedCount","inserted","substr","removedCount","max","end","removed","head","substring","tail","removeDirection","ChangeDetails","details","assign","rawInserted","skip","tailShift","aggregate","offset","Masked","opts","_value","_update","isInitialized","updateOptions","withValueRefresh","bind","state","reset","resolve","append","input","doCommit","unmaskedValue","typedValue","rawInputValue","extractInput","raw","isComplete","nearestInputPos","fromPos","toPos","extractTail","_storeBeforeTailState","_beforeTailState","_restoreBeforeTailState","_resetBeforeTailState","appendTail","_appendCharRaw","ch","_appendChar","flags","checkTail","doPrepare","consistentState","appended","doValidate","tailDetails","oldValueLength","ci","remove","fn","_refreshing","unmasked","ret","prepare","validate","parent","commit","splice","deleteCount","tailPos","changeDetails","maskedClass","mask","Error","IMask","MaskedRegExp","MaskedPattern","MaskedDate","Number","MaskedNumber","MaskedDynamic","Function","MaskedFunction","console","warn","createMask","MaskedClass","DEFAULT_INPUT_DEFINITIONS","PatternInputDefinition","blockOpts","masked","_isFilled","isOptional","placeholderChar","Boolean","lazy","_appendPlaceholder","minPos","maxPos","boundPos","PatternFixedDefinition","isUnmasking","_isRawInput","char","isResolved","ChunksTailDetails","chunks","map","c","join","definitions","DEFAULTS","_rebuildMask","defs","_blocks","_stops","_maskedBlocks","pattern","unmaskingBlock","optionalBlock","blocks","p","bNames","filter","bName","indexOf","sort","maskedBlock","push","isInput","STOP_CHAR","ESCAPE_CHAR","def","maskedState","forEach","bi","every","reduce","_appendTailChunks","blockData","_mapPosToBlock","index","block","blockDetails","chunk","lastBlock","chunkBlock","remainChars","stop","_extractTailChunks","_forEachBlocksInRange","_","lastChunk","blockChunk","nearestStop","si","headFloatChunksCount","headFloatChunks","toBlockIndex","startBlockData","startBlockIndex","endBlockIndex","args","bDetails","apply","accVal","blockStartPos","_blockStartPos","blockIndex","fromBlock","toBlock","isSameBlock","fromBlockRemoveBegin","fromBlockRemoveEnd","undefined","removeDetails","bFromPos","bToPos","beginBlockData","beginBlockOffset","beginBlockIndex","beginBlock","beginBlockCursorPos","cursorAtRight","cursorAtLeft","searchBlockIndex","blockIndexAtLeft","blockAtLeft","blockInputPos","firstInputAtRight","firstFilledBlockIndexAtRight","filledBlock","firstFilledInputBlockIndex","firstEmptyInputBlockIndex","blockAlignedPos","firstInputBlockAlignedIndex","firstInputBlockAlignedPos","alignedPos","name","maskedBlocks","indices","gi","InputDefinition","FixedDefinition","MaskedRange","_matchFrom","maxLength","from","to","toStr","padStart","fromStr","sameCharsCount","repeat","minstr","maxstr","match","placeholder","num","firstNonZero","search","padEnd","GET_DEFAULT_BLOCKS","Y","getFullYear","m","getMonth","d","getDate","date","isDateExist","format","parse","day","month","year","split","MaskElement","selectionStart","_unsafeSelectionStart","e","selectionEnd","_unsafeSelectionEnd","select","_unsafeSelect","isActive","bindEvents","handlers","unbindEvents","HTMLMaskElement","_handlers","document","activeElement","setSelectionRange","event","_toggleEventHandler","EVENTS_MAP","handler","removeEventListener","addEventListener","selectionChange","drop","click","focus","InputMask","el","_listeners","_unmaskedValue","_saveSelection","_onInput","_onChange","_onDrop","alignCursor","alignCursorFriendly","_bindEvents","updateValue","updateControl","val","_unbindEvents","_fireEvent","ev","listeners","l","_cursorChanging","_changingCursorPos","_selection","newUnmaskedValue","newValue","isChanged","_fireChangeEvents","restOpts","updateCursor","_delayUpdateCursor","_abortUpdateCursor","setTimeout","clearTimeout","on","off","hIndex","oldRawValue","preventDefault","stopPropagation","destroy","MaskedEnum","enum","some","_updateRegExps","midInput","mid","allowNegative","scale","radix","_numberRegExpInput","_numberRegExp","_mapToRadixRegExp","mapToRadix","_thousandsSeparatorRegExp","thousandsSeparator","_removeThousandsSeparators","_insertThousandsSeparators","parts","_separatorsCount","rawValueLength","valueWithSeparatorsLength","previousBeforeTailSeparatorsCount","appendDetails","beforeTailSeparatorsCount","valueBeforePos","valueAfterPos","nextPos","regexp","valid","test","number","isNaN","validnum","formatted","normalizeZeros","_normalizeZeros","padFractionalZeros","_padFractionalZeros","sign","zeros","signed","currentMask","compiledMasks","_applyDispatch","prevValueBeforeTail","inputValue","insertValue","_rawInputValue","tailValue","prevMask","prevMaskState","prevMaskBeforeTailState","doDispatch","dispatch","currentMaskRef","mi","inputs","weight","i1","i2"],"mappings":"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"}