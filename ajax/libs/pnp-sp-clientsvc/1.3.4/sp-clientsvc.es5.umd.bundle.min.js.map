{"version":3,"sources":["webpack://pnp.sp-clientsvc/webpack/universalModuleDefinition","webpack://pnp.sp-clientsvc/webpack/bootstrap","webpack://pnp.sp-clientsvc/./build/packages-es5/common/src/adalclient.js","webpack://pnp.sp-clientsvc/./build/packages-es5/common/src/collections.js","webpack://pnp.sp-clientsvc/./build/packages-es5/common/src/libconfig.js","webpack://pnp.sp-clientsvc/./build/packages-es5/common/src/storage.js","webpack://pnp.sp-clientsvc/./build/packages-es5/common/index.js","webpack://pnp.sp-clientsvc/./node_modules/tslib/tslib.es6.js","webpack://pnp.sp-clientsvc/./build/packages-es5/common/src/util.js","webpack://pnp.sp-clientsvc/./build/packages-es5/sp/src/config/splibconfig.js","webpack://pnp.sp-clientsvc/./build/packages-es5/sp/src/utils/toabsoluteurl.js","webpack://pnp.sp-clientsvc/./build/packages-es5/common/src/netutil.js","webpack://pnp.sp-clientsvc/(webpack)/buildin/global.js","webpack://pnp.sp-clientsvc/./node_modules/adal-angular/dist/adal.min.js","webpack://pnp.sp-clientsvc/./build/packages-es5/logging/src/loglevel.js","webpack://pnp.sp-clientsvc/./build/packages-es5/logging/src/logger.js","webpack://pnp.sp-clientsvc/./build/packages-es5/logging/src/listeners.js","webpack://pnp.sp-clientsvc/./build/packages-es5/odata/src/caching.js","webpack://pnp.sp-clientsvc/./build/packages-es5/odata/src/parsers.js","webpack://pnp.sp-clientsvc/./build/packages-es5/odata/src/pipeline.js","webpack://pnp.sp-clientsvc/./build/packages-es5/odata/src/queryable.js","webpack://pnp.sp-clientsvc/./build/packages-es5/odata/src/odatabatch.js","webpack://pnp.sp-clientsvc/./build/packages-es5/sp/src/utils/extractweburl.js","webpack://pnp.sp-clientsvc/./build/packages-es5/sp/src/odata.js","webpack://pnp.sp-clientsvc/./build/packages-es5/sp/src/net/digestcache.js","webpack://pnp.sp-clientsvc/./build/packages-es5/sp/src/net/sphttpclient.js","webpack://pnp.sp-clientsvc/./build/packages-es5/sp/src/utils/metadata.js","webpack://pnp.sp-clientsvc/./build/packages-es5/sp/src/sharepointqueryable.js","webpack://pnp.sp-clientsvc/./build/packages-es5/sp/src/siteusers.js","webpack://pnp.sp-clientsvc/./build/packages-es5/sp/src/sitegroups.js","webpack://pnp.sp-clientsvc/./build/packages-es5/sp/src/types.js","webpack://pnp.sp-clientsvc/./build/packages-es5/sp/src/roles.js","webpack://pnp.sp-clientsvc/./build/packages-es5/sp/src/sharepointqueryablesecurable.js","webpack://pnp.sp-clientsvc/./build/packages-es5/sp/src/files.js","webpack://pnp.sp-clientsvc/./build/packages-es5/sp/src/sharepointqueryableshareable.js","webpack://pnp.sp-clientsvc/./build/packages-es5/sp/src/webparts.js","webpack://pnp.sp-clientsvc/./build/packages-es5/sp/src/folders.js","webpack://pnp.sp-clientsvc/./build/packages-es5/sp/src/contenttypes.js","webpack://pnp.sp-clientsvc/./build/packages-es5/sp/src/attachmentfiles.js","webpack://pnp.sp-clientsvc/./build/packages-es5/sp/src/views.js","webpack://pnp.sp-clientsvc/./build/packages-es5/sp/src/fields.js","webpack://pnp.sp-clientsvc/./build/packages-es5/sp/src/forms.js","webpack://pnp.sp-clientsvc/./build/packages-es5/sp/src/subscriptions.js","webpack://pnp.sp-clientsvc/./build/packages-es5/sp/src/usercustomactions.js","webpack://pnp.sp-clientsvc/./build/packages-es5/sp/src/lists.js","webpack://pnp.sp-clientsvc/./build/packages-es5/sp/src/comments.js","webpack://pnp.sp-clientsvc/./build/packages-es5/sp/src/items.js","webpack://pnp.sp-clientsvc/./build/packages-es5/sp/src/appcatalog.js","webpack://pnp.sp-clientsvc/./build/packages-es5/sp/src/clientsidepages.js","webpack://pnp.sp-clientsvc/./build/packages-es5/sp/src/batch.js","webpack://pnp.sp-clientsvc/./build/packages-es5/sp/src/features.js","webpack://pnp.sp-clientsvc/./build/packages-es5/sp/src/site.js","webpack://pnp.sp-clientsvc/./build/packages-es5/sp/src/navigation.js","webpack://pnp.sp-clientsvc/./build/packages-es5/sp/src/relateditems.js","webpack://pnp.sp-clientsvc/./build/packages-es5/sp/src/regionalsettings.js","webpack://pnp.sp-clientsvc/./build/packages-es5/sp/src/sitedesigns.js","webpack://pnp.sp-clientsvc/./build/packages-es5/sp/src/sitescripts.js","webpack://pnp.sp-clientsvc/./build/packages-es5/sp/src/webs.js","webpack://pnp.sp-clientsvc/./build/packages-es5/sp/src/search.js","webpack://pnp.sp-clientsvc/./build/packages-es5/sp/src/social.js","webpack://pnp.sp-clientsvc/./build/packages-es5/sp/src/searchsuggest.js","webpack://pnp.sp-clientsvc/./build/packages-es5/sp/src/userprofiles.js","webpack://pnp.sp-clientsvc/./build/packages-es5/sp/src/utilities.js","webpack://pnp.sp-clientsvc/./build/packages-es5/sp/src/hubsites.js","webpack://pnp.sp-clientsvc/./build/packages-es5/sp/src/rest.js","webpack://pnp.sp-clientsvc/./build/packages-es5/sp-clientsvc/src/opactionbuilders.js","webpack://pnp.sp-clientsvc/./build/packages-es5/sp-clientsvc/src/opbuilders.js","webpack://pnp.sp-clientsvc/./build/packages-es5/sp-clientsvc/src/utils.js","webpack://pnp.sp-clientsvc/./build/packages-es5/sp-clientsvc/src/objectpath.js","webpack://pnp.sp-clientsvc/./build/packages-es5/sp-clientsvc/src/parsers.js","webpack://pnp.sp-clientsvc/./build/packages-es5/sp-clientsvc/src/clintsvcqueryable.js","webpack://pnp.sp-clientsvc/./build/packages-es5/sp-clientsvc/src/batch.js","webpack://pnp.sp-clientsvc/./build/packages-es5/sp-clientsvc/index.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","getResource","url","parser","document","createElement","href","protocol","hostname","_super","AdalClient","clientId","tenant","redirectUri","_this","this","_displayCallback","_loginPromise","tslib_es6","fromSPFxContext","spfxContext","adalclient_SPFxAdalClient","fetch","options","util","Error","getToken","then","token","resource","Promise","resolve","reject","ensureAuthContext","_","login","_authContext","acquireToken","message","catch","adal_min","displayCall","navigateToLoginRequestUrl","getCachedUser","popupWindow","open","focus","pollTimer","setInterval","closed","undefined","clearInterval","URL","indexOf","handleWindowCallback","location","hash","close","e","_loginInProgress","netutil","SPFxAdalClient","context","aadTokenProviderFactory","getTokenProvider","provider","objectEntries","entries","keys","map","k","RuntimeConfig","RuntimeConfigImpl","_v","Map","set","extend","config","target","maps","_i","arguments","length","forEach","v","mergeMaps","configurable","storage_PnPClientStorageWrapper","PnPClientStorageWrapper","store","defaultTimeoutMinutes","enabled","test","enableCacheExpiration","cacheExpirationHandler","getItem","persistable","JSON","parse","Date","expiration","delete","put","expire","setItem","createPersistable","removeItem","getOrPut","deleteExpired","defaultTimeout","defaultCachingTimeoutSeconds","pnp","setTimeout","cacheExpirationIntervalMilliseconds","console","error","MemoryStorage","_store","size","clear","index","Array","from","data","PnPClientStorage","_local","_session","getStore","localStorage","sessionStorage","__webpack_exports__","__extends","__decorate","__awaiter","__generator","extendStatics","b","setPrototypeOf","__proto__","__","constructor","decorators","desc","getOwnPropertyDescriptor","Reflect","decorate","thisArg","_arguments","P","generator","fulfilled","step","next","rejected","result","done","apply","body","f","y","g","label","sent","trys","ops","verb","throw","return","iterator","op","TypeError","pop","push","getCtxCallback","method","params","dateAdd","date","interval","units","ret","toLowerCase","setFullYear","getFullYear","setMonth","getMonth","setDate","getDate","setTime","getTime","combine","paths","filter","path","stringIsNullOrEmpty","replace","join","getGUID","now","performance","Math","random","floor","toString","isFunc","cf","objectDefinedNotNull","obj","isArray","array","source","noOverwrite","check","getOwnPropertyNames","reduce","isUrlAbsolute","getAttrValueFromString","html","attrName","match","RegExp","exec","jsS","stringify","hOP","getHashCode","charCodeAt","setup","SPRuntimeConfig","_pnp_common__WEBPACK_IMPORTED_MODULE_0__","SPRuntimeConfigImpl","spPart","headers","baseUrl","pageContext","web","absoluteUrl","fetchClientFactory","global","toAbsoluteUrl","_config_splibconfig__WEBPACK_IMPORTED_MODULE_1__","candidateUrl","_spPageContextInfo","webAbsoluteUrl","webServerRelativeUrl","baseUrl_1","substr","mergeHeaders","mergeOptions","FetchClient","BearerTokenFetchClient","tslib__WEBPACK_IMPORTED_MODULE_0__","_util__WEBPACK_IMPORTED_MODULE_1__","Request","append","_token","Headers","Function","AuthenticationContext","a","REQUEST_TYPE","LOGIN","RENEW_TOKEN","UNKNOWN","RESPONSE_TYPE","ID_TOKEN_TOKEN","TOKEN","CONSTANTS","ACCESS_TOKEN","EXPIRES_IN","ID_TOKEN","ERROR_DESCRIPTION","SESSION_STATE","ERROR","STORAGE","TOKEN_KEYS","ACCESS_TOKEN_KEY","EXPIRATION_KEY","STATE_LOGIN","STATE_RENEW","NONCE_IDTOKEN","USERNAME","IDTOKEN","LOGIN_REQUEST","LOGIN_ERROR","RENEW_STATUS","ANGULAR_LOGIN_REQUEST","RESOURCE_DELIMETER","CACHE_DELIMETER","LOADFRAME_TIMEOUT","TOKEN_RENEW_STATUS_CANCELED","TOKEN_RENEW_STATUS_COMPLETED","TOKEN_RENEW_STATUS_IN_PROGRESS","LOGGING_LEVEL","WARN","INFO","VERBOSE","LEVEL_STRING_MAP","0","1","2","3","POPUP_WIDTH","POPUP_HEIGHT","_singletonInstance","instance","callback","popUp","isAngular","_user","_activeRenewals","_acquireTokenInProgress","_renewStates","_callBackMappedToRenewStates","_callBacksMappedToRenewStates","_openedWindows","_requestType","_adalInstance","_cloneConfig","loginResource","split","postLogoutRedirectUri","anonymousEndpoints","loadFrameTimeout","Logging","piiLoggingEnabled","level","log","info","_guid","state","_idTokenNonce","_getItem","_saveItem","verbose","_getNavigateUrl","encodeURIComponent","registerCallback","_loginPopup","promptUser","_openPopup","screenLeft","screenX","screenTop","screenY","innerWidth","documentElement","clientWidth","h","innerHeight","clientHeight","j","warn","_handlePopupError","_broadcast","encodeURI","bubbles","cancelable","detail","createEvent","initCustomEvent","CustomEvent","Event","dispatchEvent","loginInProgress","_hasResource","_isEmpty","getCachedToken","expireOffsetSeconds","_now","_createUser","_renewToken","_addAdalFrame","_urlRemoveQueryStringParameter","_addHintParameters","verbosePii","src","_loadFrameTimeout","_renewIdToken","_urlContainsQueryStringParameter","_loadFrame","extraQueryParameter","acquireTokenPopup","acquireTokenRedirect","infoPii","clearCache","clearCacheForResource","logOut","logOutUri","getUser","profile","sid","upn","_extractIdToken","aud","userName","email","_getHash","substring","isCallback","_deserialize","getLoginError","getRequestInfo","valid","parameters","stateMatch","stateResponse","requestType","_matchState","parent","_matchNonce","nonce","_getResourceFromState","saveTokenFromHash","error_description","_expiresIn","exp","getResourceForEndpoint","endpoints","_getHostFromUri","String","opener","_serialize","_addLibMetadata","_decodeJwt","JWSPayload","_base64DecodeStringUrlSafe","atob","decodeURIComponent","escape","_decode","charAt","fromCharCode","header","JWSSig","_convertUrlSafeToRegularBase64EncodedString","slice","correlationId","_decimalToHex","crypto","msCrypto","getRandomValues","Uint8Array","parseInt","round","getElementById","opera","navigator","userAgent","setAttribute","style","visibility","position","width","height","borderWidth","getElementsByTagName","appendChild","insertAdjacentHTML","frames","cacheLocation","_supportsLocalStorage","_supportsSessionStorage","_libVersion","toUTCString","stack","errorPii","warnPii","inject","LogLevel","Logger","activeLogLevel","_instance","LoggerImpl","subscribe","listeners","listener","clearSubscribers","count","write","writeJSON","json","entry","err","subscribers","subscriber","ConsoleListener","msg","format","FunctionListener","caching_CachingOptions","CachingOptions","common","storeName","defaultCachingStore","storage","local","session","CachingParserWrapper","cacheOptions","response","cacheData","parsers_HttpRequestError","HttpRequestError","status","statusText","isHttpRequestError","init","clone","text","parsers_ODataParserBase","ODataParserBase","rawJson","handleError","parseImpl","has","parseFloat","txt","parseODataJSON","ok","results","parsers_ODataDefaultParser","ODataDefaultParser","parsers_TextParser","TextParser","parsers_BlobParser","BlobParser","blob","parsers_JSONParser","JSONParser","parsers_BufferParser","BufferParser","arrayBuffer","buffer","LambdaParser","setResult","hasResult","pipeline","shift","pipe","requestId","promise","ctx","returnResult","isBatched","batch","addResolveBatchDependency","requestPipelineMethod","alwaysRun","propertyKey","descriptor","args","pipeline_PipelineMethods","PipelineMethods","logStart","requestAbsoluteUrl","caching","isCached","cachingOptions","batchDependency","hydrate","send","add","batchId","client","clientFactory","opts","logEnd","queryable_Queryable","Queryable","_query","_options","_url","_parentUrl","_useCaching","_cachingOptions","_cloneParentWasCaching","_cloneParentCacheOptions","_requestPipeline","toUrl","concat","pathPart","configure","configureFrom","usingCaching","globalCacheDisable","withPipeline","getCore","reqImpl","postCore","patchCore","deleteCore","putCore","getRequestPipeline","toRequestContext","_clone","_0","queryable_ODataQueryable","ODataQueryable","_batch","_batchDependency","inBatch","hasBatch","addBatchDependency","addDependency","cloneSettings","includeBatch","odatabatch_ODataBatch","ODataBatch","_batchId","_reqs","_deps","_rDeps","id","toUpperCase","resolver","execute","all","executeImpl","extractWebUrl","odataUrlFrom","candidate","parts","__metadata","uri","odata_SPODataEntityParserImpl","SPODataEntityParserImpl","SPODataEntityArrayParserImpl","CachedDigest","digests","digestcache_DigestCache","DigestCache","_httpClient","_digests","getDigest","webUrl","cachedDigest","fetchRaw","cache","credentials","Accept","Content-Type","splibconfig","GetContextWebInformation","newCachedDigest","FormDigestValue","seconds","FormDigestTimeoutSeconds","sphttpclient_SPHttpClient","SPHttpClient","_impl","_digestCache","digest","rawHeaders","retry","setRetry","delay","attempts","retryCount","retryContext","post","patch","metadata","type","sharepointqueryable_SharePointQueryable","SharePointQueryable","_forceCaching","lastIndexOf","query","as","toUrlAndQuery","aliasedParams","labelName","char","select","selects","expand","expands","getParent","parentUrl","additionalPath","dependencyDispose","toabsoluteurl","sharepointqueryable_SharePointQueryableCollection","SharePointQueryableCollection","orderBy","ascending","skip","top","sharepointqueryable_SharePointQueryableInstance","SharePointQueryableInstance","_update","mapper","props","X-HTTP-Method","_delete","_deleteWithETag","eTag","IF-Match","defaultPath","class_1","PrincipalType","siteusers_SiteUsers","SiteUsers","SiteUsers_1","getById","siteusers_SiteUser","getByEmail","getByLoginName","loginName","su","removeById","removeByLoginName","LoginName","siteusers_UserBase","UserBase","sitegroups_SiteGroups","SiteUser","update","user","siteusers_CurrentUser","CurrentUser","ControlMode","FieldTypes","DateTimeFieldFormatType","DateTimeFieldFriendlyFormatType","AddFieldOptions","CalendarType","UrlFieldFormatType","PermissionKind","types_PrincipalType","PrincipalSource","RoleType","PageType","SharingLinkKind","SharingRole","SharingOperationStatusCode","SPSharedObjectType","SharingDomainRestrictionMode","RenderListDataOptions","FieldUserSelectionMode","ChoiceFieldFormatType","UrlZone","SiteGroups","SiteGroups_1","sg","sitegroups_SiteGroup","properties","postBody","group","Id","getByName","groupName","SiteGroup","retGroup","roles_RoleAssignments","RoleAssignments","RoleAssignments_1","ra","roles_RoleAssignment","principalId","roleDefId","remove","RoleAssignment","roles_RoleDefinitionBindings","roles_RoleDefinitions","RoleDefinitions","roles_RoleDefinition","getByType","roleTypeKind","description","order","basePermissions","BasePermissions","High","Low","Description","Name","Order","definition","RoleDefinition","retDef","RoleDefinitionBindings","CheckinType","WebPartsPersonalizationScope","MoveOperations","TemplateFileType","sharepointqueryablesecurable_SharePointQueryableSecurable","SharePointQueryableSecurable","getUserEffectivePermissions","q","GetUserEffectivePermissions","getCurrentUserEffectivePermissions","breakRoleInheritance","copyRoleAssignments","clearSubscopes","resetRoleInheritance","userHasPermissions","permission","perms","hasPermissions","currentUserHasPermissions","perm","FullMask","num","sharepointqueryableshareable_SharePointQueryableShareable","SharePointQueryableShareable","getShareLink","kind","expString","toISOString","request","createLink","emailData","settings","linkKind","shareWith","loginNames","role","requireSignin","propagateAcl","userStr","Key","roleFilter","Edit","Contributor","Reader","def","includeAnonymousLinkInEmail","peoplePickerInput","roleValue","useSimplifiedRoles","emailBody","emailSubject","subject","sendEmail","shareObject","bypass","sendShareObjectRequest","getRoleValue","unshareObjectWeb","checkPermissions","recipients","getSharingInformation","getObjectSharingSettings","unshareObject","deleteLinkByKind","unshareLink","shareId","Guest","getShareObjectWeb","sharepointqueryableshareable_SharePointQueryableShareableWeb","SharePointQueryableShareableWeb","View","dependency","shareObjectRaw","sharepointqueryableshareable_SharePointQueryableShareableItem","SharePointQueryableShareableItem","OrganizationView","checkSharingPermissions","unshare","deleteSharingLinkByKind","sharepointqueryableshareable_FileFolderShared","FileFolderShared","getShareable","shareable","sharepointqueryableshareable_SharePointQueryableShareableFile","SharePointQueryableShareableFile","sharepointqueryableshareable_SharePointQueryableShareableFolder","SharePointQueryableShareableFolder","shareEverything","webparts_LimitedWebPartManager","LimitedWebPartManager","webparts_WebPartDefinitions","export","webPartId","import","xml","webPartXml","WebPartDefinitions","webparts_WebPartDefinition","getByControlId","WebPartDefinition","webparts_WebPart","saveChanges","moveTo","zoneId","zoneIndex","WebPart","folders_Folders","Folders","Folders_1","folders_Folder","folder","Folder","files_Files","recycle","listItemAllFields","items_Item","destUrl","_a","srcUrl","ServerRelativeUrl","webBaseUrl","hostUrl","methodUrl","contenttypes_ContentTypes","ContentTypes","ContentTypes_1","addAvailableContentType","contentTypeId","contentType","ct","contenttypes_ContentType","additionalSettings","assign","Group","StringValue","ContentType","contenttypes_FieldLinks","FieldLinks","fl","contenttypes_FieldLink","FieldLink","attachmentfiles_AttachmentFiles","AttachmentFiles","AttachmentFiles_1","attachmentfiles_AttachmentFile","content","file","addMultiple","files","chain","deleteMultiple","recycleMultiple","AttachmentFile","getText","getParsed","getBlob","getBuffer","getJSON","setContent","views_Views","Views","Views_1","views_View","getByTitle","title","personalView","PersonalView","Title","view","views_ViewFields","renderAsHtml","setViewXml","viewXml","ViewFields","ViewFields_1","getSchemaXml","fieldTitleOrInternalName","move","fieldInternalName","field","removeAll","fields_Fields","Fields","Fields_1","fields_Field","getByInternalNameOrTitle","createFieldAsXml","SchemaXml","fieldType","addText","maxLength","FieldTypeKind","MaxLength","addCalculated","formula","dateFormat","outputType","Text","DateFormat","Formula","OutputType","addDateTime","displayFormat","calendarType","friendlyDisplayFormat","DateOnly","Gregorian","Unspecified","DateTimeCalendarType","DisplayFormat","FriendlyDisplayFormat","addNumber","minValue","maxValue","MinimumValue","MaximumValue","addCurrency","currencyLocalId","CurrencyLocaleId","addMultilineText","numberOfLines","richText","restrictedMode","appendOnly","allowHyperlink","AllowHyperlink","AppendOnly","NumberOfLines","RestrictedMode","RichText","addUrl","Hyperlink","addUser","selectionMode","SelectionMode","addLookup","lookupListId","lookupFieldName","LookupFieldName","LookupListId","addChoice","choices","fillIn","Dropdown","Choices","EditFormat","FillInChoice","addMultiChoice","addBoolean","addDependentLookupField","displayName","primaryLookupFieldId","showField","addLocation","Field","setShowInDisplayForm","show","setShowInEditForm","setShowInNewForm","forms_Forms","Forms","forms_Form","Form","subscriptions_Subscriptions","Subscriptions","subscriptionId","subscriptions_Subscription","notificationUrl","expirationDate","clientState","expirationDateTime","subscription","Subscription","usercustomactions_UserCustomActions","UserCustomActions","UserCustomActions_1","uca","usercustomactions_UserCustomAction","action","UserCustomAction","lists_Lists","Lists","Lists_1","list","lists_List","template","enableContentTypes","addSettings","AllowContentTypes","BaseTemplate","ContentTypesEnabled","ensure","addOrUpdateSettings","created","ensureSiteAssetsLibrary","ensureSitePagesLibrary","List","items_Items","getView","viewId","retList","getChanges","getItemsByCAMLQuery","getListItemChangesSinceToken","Recycle","renderListData","RenderListData","renderListDataAsStream","overrideParameters","renderListFormData","itemId","formId","RenderListFormData","reserveListItemId","ReserveListItemId","getListItemEntityTypeFullName","ListItemEntityTypeFullName","addValidateUpdateItemUsingPath","formValues","decodedUrl","bNewDocumentUpdate","checkInComment","listItemCreateInfo","FolderPath","DecodedUrl","res","AddValidateUpdateItemUsingPath","getSiteScript","rootFolder","absoluteListUrl","sitescripts_SiteScripts","getSiteScriptFromList","comments_Comments","Comments","Comments_1","comments_Comment","Comment","comments_Replies","like","unlike","Replies","Replies_1","Items","Items_1","getItemByStringId","stringId","reverse","getPaged","items_PagedItemCollectionParser","getAll","requestSize","acceptHeader","items","itemsCollector","gatherer","last","hasNext","getNext","listItemEntityTypeFullName","removeDependency","ensureListItemEntityTypeName","listItemEntityType","item","candidatelistItemEntityTypeFullName","Item","files_File","items_ItemVersions","items_ItemUpdatedParser","getLikedBy","getWopiFrameUrl","GetWOPIFrameUrl","validateUpdateListItem","newDocumentUpdate","getLikedByInformation","ItemVersions","versionId","items_ItemVersion","ItemVersion","PagedItemCollection","nextUrl","innerParser","PagedItemCollectionParser","_parent","__next","ItemUpdatedParser","odata.etag","Files","Files_1","shouldOverWrite","addChunked","progress","chunkSize","setContentChunked","addTemplateFile","fileUrl","templateFileType","File","files_Versions","approve","comment","cancelUpload","uploadId","checkin","checkinType","Major","checkout","copyTo","deny","getLimitedWebPartManager","scope","Shared","moveOperations","Overwrite","publish","undoCheckout","unpublish","binaryStringResponseBody","fileSize","blockCount","blockNumber","currentPointer","stage","totalBlocks","startUpload","_loop_1","pointer","continueUpload","finishUpload","fragment","StartUpload","fileOffset","ContinueUpload","Versions","Versions_1","files_Version","deleteAll","deleteById","recycleByID","deleteByLabel","recycleByLabel","restoreByLabel","Version","PromotedState","appcatalog_AppCatalog","AppCatalog","getAppById","appcatalog_App","filename","catalog","App","deploy","skipFeatureDeployment","retract","install","uninstall","upgrade","batch_SPBatch","SPBatch","ParseResponse","responses","statusRegExp","lines","line","trim","Response","requests","absoluteRequestUrl","batchBody","currentChangeSetId","reqInfo","castHeaders","batchOptions","features_Features","Features","Features_1","force","featdefScope","featureId","feature","features_Feature","Feature","deactivate","DefinitionId","site_Site","Site","Site_1","webs_Web","getRootWeb","rootWeb","Url","getContextInfo","SupportedSchemaVersions","getDocumentLibraries","absoluteWebUrl","GetDocumentLibraries","getWebUrlFromPageUrl","absolutePageUrl","GetWebUrlFromPageUrl","site","siteId","createBatch","openWebById","webId","fromUrl","joinHubSite","registerHubSite","unRegisterHubSite","createCommunicationSite","lcid","shareByEmailEnabled","classification","siteDesignId","hubSiteId","owner","Classification","HubSiteId","Lcid","Owner","ShareByEmailEnabled","SiteDesignId","WebTemplate","WebTemplateExtensionId","createModernTeamSite","alias","isPublic","owners","optionalParams","CreationOptions","Owners","navigation_NavigationNodes","NavigationNodes","node","navigation_NavigationNode","visible","IsVisible","moveAfter","nodeId","previousNodeId","NavigationNode","navigation_Navigation","Navigation","navigation_NavigationService","NavigationService","getMenuState","menuNodeKey","depth","mapProviderName","customProperties","getMenuNodeKey","currentUrl","relateditems_RelatedItemManagerImpl","RelatedItemManagerImpl","RelatedItemManagerImpl_1","FromUrl","getRelatedItems","sourceListName","sourceItemId","SourceItemID","SourceListName","getPageOneRelatedItems","addSingleLink","sourceWebUrl","targetListName","targetItemID","targetWebUrl","tryAddReverseLink","SourceWebUrl","TargetItemID","TargetListName","TargetWebUrl","TryAddReverseLink","addSingleLinkToUrl","targetItemUrl","TargetItemUrl","addSingleLinkFromUrl","sourceItemUrl","targetItemId","SourceItemUrl","deleteSingleLink","tryDeleteReverseLink","TryDeleteReverseLink","regionalsettings_RegionalSettings","RegionalSettings","regionalsettings_InstalledLanguages","regionalsettings_TimeZone","regionalsettings_TimeZones","InstalledLanguages","TimeZone","TimeZone_1","utcToLocalTime","utcTime","dateIsoString","UTCToLocalTime","localTimeToUTC","localTime","getTimezoneOffset","LocalTimeToUTC","TimeZones","TimeZones_1","sitedesigns_SiteDesigns","SiteDesigns","methodName","getBaseUrl","createSiteDesign","creationInfo","applySiteDesign","getSiteDesigns","getSiteDesignMetadata","updateSiteDesign","updateInfo","deleteSiteDesign","getSiteDesignRights","grantSiteDesignRights","principalNames","grantedRights","revokeSiteDesignRights","addSiteDesignTask","addSiteDesignTaskToCurrentWeb","getSiteDesignTask","task","taskId","getSiteDesignRun","getSiteDesignRunStatus","runId","SiteScripts","getSiteScripts","createSiteScript","getSiteScriptMetadata","deleteSiteScript","updateSiteScript","siteScriptUpdateInfo","Content","listUrl","getSiteScriptFromWeb","extractInfo","webs_Webs","Webs","Webs_1","language","inheritPermissions","Language","UseSamePermissionsAsParentSite","webs_WebInfos","WebInfos","Web","Web_1","getParentWeb","ParentWeb","getSubwebsFilteredForCurrentUser","nWebTemplateFilter","nConfigurationFilter","getFolderById","uniqueId","getFolderByServerRelativeUrl","folderRelativeUrl","getFolderByServerRelativePath","getFileById","getFileByServerRelativeUrl","fileRelativeUrl","getFileByServerRelativePath","getList","listRelativeUrl","applyTheme","colorPaletteUrl","fontSchemeUrl","backgroundImageUrl","shareGenerated","applyWebTemplate","ensureUser","logonName","availableWebTemplates","includeCrossLanugage","getCatalog","getUserById","mapToIcon","progId","getStorageEntity","setStorageEntity","comments","removeStorageEntity","getAppCatalog","getSiteCollectionAppCatalog","getClientSideWebParts","addClientSidePage","pageName","clientsidepages_ClientSidePage","addClientSidePageByPath","createDefaultAssociatedGroups","siteOwner","siteOwner2","groupNameSeed","hubSiteData","forceRefresh","syncHubSiteTheme","getSiteDesignRuns","getNextOrder","collection","max","reindex","columns","controls","ClientSidePage","noInit","sections","commentsDisabled","_bannerImageDirty","initFrom","_pageSettings","controlType","pageSettingsSlice","isDefaultDescription","isDefaultThumbnail","_layoutPart","getDefaultLayoutPart","fromJSON","pageLayoutType","pageInitData","newPage","PageLayoutType","save","fromFile","load","dataVersion","instanceId","authors","layoutType","showPublishDate","showTopicHeader","textAlignment","topicHeader","serverProcessedContent","htmlStrings","searchablePlainTexts","imageSources","links","BannerImageUrl","imageSourceType","TopicHeader","addSection","section","clientsidepages_CanvasSection","pageData","canvasControls","CanvasContent1","layouts","LayoutWebpartsContent","setControls","CommentsDisabled","origImgUrl","imgFile","imgId","listId","UniqueId","ParentList","bannerImageUrl","imageSource","customMetadata","IsPageCheckedOutToCurrentUser","saveBody","AuthorByline","getCanvasContent1","getLayoutWebpartsContent","updater","if-match","discardPageCheckout","promoteToNews","promoteNewsImpl","enableComments","setCommentsOn","disableComments","findControlById","findControl","predicate","copyPage","page","pageLayout","getControls","setBannerImage","bannerImageSourceType","translateX","translateY","altText","mergeColumnToTree","clientsidepages_CanvasColumn","part","clientsidepages_ClientSideWebpart","mergePartToTree","textData","clientsidepages_ClientSideText","innerHTML","canvasData","column","displayMode","emphasis","getEmphasisObj","control","zoneEmphasis","on","positionData","sectionFactor","sectionIndex","addColumn","addControl","initer","listData","CanvasSection","_emphasis","_memId","_order","factor","defaultColumn","CanvasColumn","Default","_section","getControl","layoutIndex","ColumnControl","_column","onColumnChange","setData","ClientSideText","anchorComponentId","startsWith","controlIndex","col","addedFromPersistedData","editorType","ClientSideWebpart","fromComponentDef","webPartData","reservedHeight","reservedWidth","setProperties","getProperties","component","componendId","preconfiguredEntries","Manifest","default","SortDirection","ReorderingRuleMatchType","QueryPropertyValueType","search_Search","Search","queryInit","parseQuery","HitHighlightedProperties","fixArrProp","Properties","RefinementFilters","ReorderingRules","SelectProperties","SortList","cacheKey","search_SearchResults","prop","Querytext","toSearchQuery","SearchResults","rawResponse","_raw","_primary","postquery","RawSearchResults","ElapsedTime","PrimaryQueryResult","RelevantResults","RowCount","TotalRows","TotalRowsIncludingDuplicates","formatSearchResults","Table","Rows","getPage","pageNumber","pageSize","rows","RowLimit","StartRow","rawResults","tempResults_1","tempResult","cells","Cells","cell","Value","writable","SearchBuiltInSourceId","Documents","ItemsMatchingContentType","ItemsMatchingTag","ItemsRelatedToCurrentUser","ItemsWithSameKeywordAsThisItem","LocalPeopleResults","LocalReportsAndDataResults","LocalSharePointResults","LocalVideoResults","Pages","Pictures","Popular","RecentlyChangedItems","RecommendedItems","Wiki","SocialActorType","SocialActorTypes","SocialFollowResult","SocialStatusCode","searchsuggest_SearchSuggest","SearchSuggest","mapQueryToQueryString","suggest","PeopleNames","PersonalResults","Queries","querytext","querySetter","checkProp","sp","userprofiles_UserProfileQuery","UserProfileQuery","clientPeoplePickerQuery","userprofiles_ClientPeoplePickerQuery","profileLoader","userprofiles_ProfileLoader","amIFollowedBy","amIFollowing","getFollowedTags","maxCount","getFollowersFor","getPeopleFollowedBy","getPropertiesFor","getUserProfilePropertyFor","propertyName","hideSuggestion","isFollowing","follower","followee","setMyProfilePic","profilePicSource","reader","FileReader","onload","readAsArrayBuffer","Uint16Array","setSingleValueProfileProperty","accountName","propertyValue","setMultiValuedProfileProperty","propertyValues","createPersonalSiteEnqueueBulk","emails","ownerUserProfile","userProfile","createPersonalSite","interactiveRequest","shareAllSocialData","share","clientPeoplePickerResolveUser","queryParams","clientPeoplePickerSearchUser","ProfileLoader","ProfileLoader_1","emailIDs","ClientPeoplePickerQuery","ClientPeoplePickerQuery_1","createClientPeoplePickerQueryParametersRequestBody","ClientPeoplePickerResolveUser","ClientPeoplePickerSearchUser","social_SocialQuery","SocialQuery","SocialQuery_1","social_MySocialQuery","getFollowedSitesUri","FollowedSitesUri","getFollowedDocumentsUri","FollowedDocumentsUri","follow","actorInfo","createSocialActorInfoRequestBody","isFollowed","stopFollowing","actor","MySocialQuery","MySocialQuery_1","followed","types","Followed","followedCount","FollowedCount","followers","Followers","suggestions","Suggestions","utilities_UtilityMethod","UtilityMethod","excute","Body","From","Subject","To","CC","BCC","AdditionalHeaders","getCurrentUserEmailAddresses","GetCurrentUserEmailAddresses","resolvePrincipal","input","scopes","sources","inputIsEmailOnly","addToUserInfoList","matchUserInfoList","ResolvePrincipalInCurrentContext","searchPrincipals","SearchPrincipalsUsingContextWeb","createEmailBodyForInvitation","pageAddress","CreateEmailBodyForInvitation","expandGroupsToPrincipals","inputs","ExpandGroupsToPrincipals","createWikiPage","CreateWikiPageInContextWeb","containsInvalidFileFolderChars","onPremise","InvalidFileFolderNameCharsOnPremiseRegex","InvalidFileFolderNameCharsOnlineRegex","stripInvalidFileFolderChars","replacer","hubsites_HubSites","HubSites","hubsites_HubSite","HubSite","SPRest","_baseUrl","searchSuggest","finalQuery","search","searchWithCaching","getTenantAppCatalogWeb","CorporateCatalogUrl","fm","objectPath","identityQuery","opQuery","selectProperties","childSelectProperties","builder","setProperty","methodAction","arrParams","toArray","objectProperties","actions","ObjectPath","staticMethod","typeId","staticProperty","objConstructor","MethodParams","_p","build","initValues","string","number","boolean","strArray","values","inputIndex","opbuilders_method","writeObjectPathBody","objectPaths","replaceAfter","opSetId","opSetPathId","opSetParentId","opSetPathParamId","indexMapper","matches","regex","objectpath_ObjectPathQueue","ObjectPathQueue","_paths","_relationships","_contextIndex","_siteIndex","_webIndex","dirty","lastIndex","addChildRelationship","parentIndex","childIndex","getChildRelationship","getChildRelationships","appendAction","appendActionToLast","copy","contextIndex","toBody","_xml","toIndexedTree","builderIndex","lastOpId","idIndexMap","arr","opId","parsers_ProcessQueryParser","ProcessQueryParser","parsed","ErrorInfo","findResult","getParsedResultById","IsNull","ProcessQueryPath","clintsvcqueryable_ClientSvcQueryable","ClientSvcQueryable","_objectPaths","_selects","getSelects","getChild","getChildProperty","clonedOps","clientsvc_ObjectPaths","sendGet","sendGetCollection","invokeMethod","invokeMethodImpl","invokeMethodAction","invokeNonQuery","invokeMethodCollection","invokeUpdate","accept","content-type","keyStr","queryAction","isAction","batch_ObjectPathBatch","ObjectPathBatch","executor","batch_BatchExecutor","appendRequests","BatchExecutor","_requests","_builderIndex","pathQueue","indexMappingFunction","opActions","obPaths","batch_ProcessQueryCachingParserWrapper","batch_BatchParser","BatchParser","ProcessQueryCachingParserWrapper","wrapper"],"mappings":"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","file":"sp-clientsvc.es5.umd.bundle.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"pnp.sp-clientsvc\"] = factory();\n\telse\n\t\troot[\"pnp.sp-clientsvc\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 8);\n","import * as tslib_1 from \"tslib\";\r\nimport { BearerTokenFetchClient } from \"./netutil\";\r\nimport { isUrlAbsolute } from \"./util\";\r\n// @ts-ignore\r\nimport * as adal from \"adal-angular/dist/adal.min.js\";\r\n/**\r\n * Parses out the root of the request url to use as the resource when getting the token\r\n *\r\n * After: https://gist.github.com/jlong/2428561\r\n * @param url The url to parse\r\n */\r\nfunction getResource(url) {\r\n    var parser = document.createElement(\"a\");\r\n    parser.href = url;\r\n    return parser.protocol + \"//\" + parser.hostname;\r\n}\r\n/**\r\n * Azure AD Client for use in the browser\r\n */\r\nvar AdalClient = /** @class */ (function (_super) {\r\n    tslib_1.__extends(AdalClient, _super);\r\n    /**\r\n     * Creates a new instance of AdalClient\r\n     * @param clientId Azure App Id\r\n     * @param tenant Office 365 tenant (Ex: {tenant}.onmicrosoft.com)\r\n     * @param redirectUri The redirect url used to authenticate the\r\n     */\r\n    function AdalClient(clientId, tenant, redirectUri) {\r\n        var _this = _super.call(this, null) || this;\r\n        _this.clientId = clientId;\r\n        _this.tenant = tenant;\r\n        _this.redirectUri = redirectUri;\r\n        _this._displayCallback = null;\r\n        _this._loginPromise = null;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Creates a new AdalClient using the values of the supplied SPFx context (requires SPFx >= 1.6)\r\n     *\r\n     * @param spfxContext Current SPFx context\r\n     * @description Using this method requires that the features described in this article\r\n     * https://docs.microsoft.com/en-us/sharepoint/dev/spfx/use-aadhttpclient are activated in the tenant.\r\n     */\r\n    AdalClient.fromSPFxContext = function (spfxContext) {\r\n        return new SPFxAdalClient(spfxContext);\r\n    };\r\n    /**\r\n     * Conducts the fetch opertation against the AAD secured resource\r\n     *\r\n     * @param url Absolute URL for the request\r\n     * @param options Any fetch options passed to the underlying fetch implementation\r\n     */\r\n    AdalClient.prototype.fetch = function (url, options) {\r\n        var _this = this;\r\n        if (!isUrlAbsolute(url)) {\r\n            throw Error(\"You must supply absolute urls to AdalClient.fetch.\");\r\n        }\r\n        // the url we are calling is the resource\r\n        return this.getToken(getResource(url)).then(function (token) {\r\n            _this.token = token;\r\n            return _super.prototype.fetch.call(_this, url, options);\r\n        });\r\n    };\r\n    /**\r\n     * Gets a token based on the current user\r\n     *\r\n     * @param resource The resource for which we are requesting a token\r\n     */\r\n    AdalClient.prototype.getToken = function (resource) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            _this.ensureAuthContext().then(function (_) { return _this.login(); }).then(function (_) {\r\n                AdalClient._authContext.acquireToken(resource, function (message, token) {\r\n                    if (message) {\r\n                        return reject(Error(message));\r\n                    }\r\n                    resolve(token);\r\n                });\r\n            }).catch(reject);\r\n        });\r\n    };\r\n    /**\r\n     * Ensures we have created and setup the adal AuthenticationContext instance\r\n     */\r\n    AdalClient.prototype.ensureAuthContext = function () {\r\n        var _this = this;\r\n        return new Promise(function (resolve) {\r\n            if (AdalClient._authContext === null) {\r\n                AdalClient._authContext = adal.inject({\r\n                    clientId: _this.clientId,\r\n                    displayCall: function (url) {\r\n                        if (_this._displayCallback) {\r\n                            _this._displayCallback(url);\r\n                        }\r\n                    },\r\n                    navigateToLoginRequestUrl: false,\r\n                    redirectUri: _this.redirectUri,\r\n                    tenant: _this.tenant,\r\n                });\r\n            }\r\n            resolve();\r\n        });\r\n    };\r\n    /**\r\n     * Ensures the current user is logged in\r\n     */\r\n    AdalClient.prototype.login = function () {\r\n        var _this = this;\r\n        if (this._loginPromise) {\r\n            return this._loginPromise;\r\n        }\r\n        this._loginPromise = new Promise(function (resolve, reject) {\r\n            if (AdalClient._authContext.getCachedUser()) {\r\n                return resolve();\r\n            }\r\n            _this._displayCallback = function (url) {\r\n                var popupWindow = window.open(url, \"login\", \"width=483, height=600\");\r\n                if (!popupWindow) {\r\n                    return reject(Error(\"Could not open pop-up window for auth. Likely pop-ups are blocked by the browser.\"));\r\n                }\r\n                if (popupWindow && popupWindow.focus) {\r\n                    popupWindow.focus();\r\n                }\r\n                var pollTimer = window.setInterval(function () {\r\n                    if (!popupWindow || popupWindow.closed || popupWindow.closed === undefined) {\r\n                        window.clearInterval(pollTimer);\r\n                    }\r\n                    try {\r\n                        if (popupWindow.document.URL.indexOf(_this.redirectUri) !== -1) {\r\n                            window.clearInterval(pollTimer);\r\n                            AdalClient._authContext.handleWindowCallback(popupWindow.location.hash);\r\n                            popupWindow.close();\r\n                            resolve();\r\n                        }\r\n                    }\r\n                    catch (e) {\r\n                        reject(e);\r\n                    }\r\n                }, 30);\r\n            };\r\n            // this triggers the login process\r\n            _this.ensureAuthContext().then(function (_) {\r\n                AdalClient._authContext._loginInProgress = false;\r\n                AdalClient._authContext.login();\r\n                _this._displayCallback = null;\r\n            });\r\n        });\r\n        return this._loginPromise;\r\n    };\r\n    /**\r\n     * Our auth context\r\n     */\r\n    AdalClient._authContext = null;\r\n    return AdalClient;\r\n}(BearerTokenFetchClient));\r\nexport { AdalClient };\r\n/**\r\n * Client wrapping the aadTokenProvider available from SPFx >= 1.6\r\n */\r\nvar SPFxAdalClient = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SPFxAdalClient, _super);\r\n    /**\r\n     *\r\n     * @param context provide the appropriate SPFx Context object\r\n     */\r\n    function SPFxAdalClient(context) {\r\n        var _this = _super.call(this, null) || this;\r\n        _this.context = context;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Executes a fetch request using the supplied url and options\r\n     *\r\n     * @param url Absolute url of the request\r\n     * @param options Any options\r\n     */\r\n    SPFxAdalClient.prototype.fetch = function (url, options) {\r\n        var _this = this;\r\n        return this.getToken(getResource(url)).then(function (token) {\r\n            _this.token = token;\r\n            return _super.prototype.fetch.call(_this, url, options);\r\n        });\r\n    };\r\n    /**\r\n     * Gets an AAD token for the provided resource using the SPFx AADTokenProvider\r\n     *\r\n     * @param resource Resource for which a token is to be requested (ex: https://graph.microsoft.com)\r\n     */\r\n    SPFxAdalClient.prototype.getToken = function (resource) {\r\n        return this.context.aadTokenProviderFactory.getTokenProvider().then(function (provider) {\r\n            return provider.getToken(resource);\r\n        });\r\n    };\r\n    return SPFxAdalClient;\r\n}(BearerTokenFetchClient));\r\nexport { SPFxAdalClient };\r\n//# sourceMappingURL=adalclient.js.map","import { isFunc } from \"./util\";\r\n/**\r\n * Used to calculate the object properties, with polyfill if needed\r\n */\r\nvar objectEntries = isFunc(Object.entries) ? Object.entries : function (o) { return Object.keys(o).map(function (k) { return [k, o[k]]; }); };\r\n/**\r\n * Converts the supplied object to a map\r\n *\r\n * @param o The object to map\r\n */\r\nexport function objectToMap(o) {\r\n    if (o !== undefined && o !== null) {\r\n        return new Map(objectEntries(o));\r\n    }\r\n    return new Map();\r\n}\r\n/**\r\n * Merges to Map instances together, overwriting values in target with matching keys, last in wins\r\n *\r\n * @param target map into which the other maps are merged\r\n * @param maps One or more maps to merge into the target\r\n */\r\nexport function mergeMaps(target) {\r\n    var maps = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        maps[_i - 1] = arguments[_i];\r\n    }\r\n    for (var i = 0; i < maps.length; i++) {\r\n        maps[i].forEach(function (v, k) {\r\n            target.set(k, v);\r\n        });\r\n    }\r\n    return target;\r\n}\r\n//# sourceMappingURL=collections.js.map","import { mergeMaps, objectToMap } from \"./collections\";\r\nexport function setup(config) {\r\n    RuntimeConfig.extend(config);\r\n}\r\n// lable mapping for known config values\r\nvar s = [\r\n    \"defaultCachingStore\",\r\n    \"defaultCachingTimeoutSeconds\",\r\n    \"globalCacheDisable\",\r\n    \"enableCacheExpiration\",\r\n    \"cacheExpirationIntervalMilliseconds\",\r\n    \"spfxContext\",\r\n];\r\nvar RuntimeConfigImpl = /** @class */ (function () {\r\n    function RuntimeConfigImpl(_v) {\r\n        if (_v === void 0) { _v = new Map(); }\r\n        this._v = _v;\r\n        // setup defaults\r\n        this._v.set(s[0], \"session\");\r\n        this._v.set(s[1], 60);\r\n        this._v.set(s[2], false);\r\n        this._v.set(s[3], false);\r\n        this._v.set(s[4], 750);\r\n        this._v.set(s[5], null);\r\n    }\r\n    /**\r\n     *\r\n     * @param config The set of properties to add to the globa configuration instance\r\n     */\r\n    RuntimeConfigImpl.prototype.extend = function (config) {\r\n        this._v = mergeMaps(this._v, objectToMap(config));\r\n    };\r\n    RuntimeConfigImpl.prototype.get = function (key) {\r\n        return this._v.get(key);\r\n    };\r\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"defaultCachingStore\", {\r\n        get: function () {\r\n            return this.get(s[0]);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"defaultCachingTimeoutSeconds\", {\r\n        get: function () {\r\n            return this.get(s[1]);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"globalCacheDisable\", {\r\n        get: function () {\r\n            return this.get(s[2]);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"enableCacheExpiration\", {\r\n        get: function () {\r\n            return this.get(s[3]);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"cacheExpirationIntervalMilliseconds\", {\r\n        get: function () {\r\n            return this.get(s[4]);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"spfxContext\", {\r\n        get: function () {\r\n            return this.get(s[5]);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return RuntimeConfigImpl;\r\n}());\r\nexport { RuntimeConfigImpl };\r\nvar _runtimeConfig = new RuntimeConfigImpl();\r\nexport var RuntimeConfig = _runtimeConfig;\r\n//# sourceMappingURL=libconfig.js.map","import { dateAdd, getCtxCallback, jsS, objectDefinedNotNull } from \"./util\";\r\nimport { RuntimeConfig } from \"./libconfig\";\r\n/**\r\n * A wrapper class to provide a consistent interface to browser based storage\r\n *\r\n */\r\nvar PnPClientStorageWrapper = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of the PnPClientStorageWrapper class\r\n     *\r\n     * @constructor\r\n     */\r\n    function PnPClientStorageWrapper(store, defaultTimeoutMinutes) {\r\n        if (defaultTimeoutMinutes === void 0) { defaultTimeoutMinutes = -1; }\r\n        this.store = store;\r\n        this.defaultTimeoutMinutes = defaultTimeoutMinutes;\r\n        this.enabled = this.test();\r\n        // if the cache timeout is enabled call the handler\r\n        // this will clear any expired items and set the timeout function\r\n        if (RuntimeConfig.enableCacheExpiration) {\r\n            this.cacheExpirationHandler();\r\n        }\r\n    }\r\n    /**\r\n     * Get a value from storage, or null if that value does not exist\r\n     *\r\n     * @param key The key whose value we want to retrieve\r\n     */\r\n    PnPClientStorageWrapper.prototype.get = function (key) {\r\n        if (!this.enabled) {\r\n            return null;\r\n        }\r\n        var o = this.store.getItem(key);\r\n        if (!objectDefinedNotNull(o)) {\r\n            return null;\r\n        }\r\n        var persistable = JSON.parse(o);\r\n        if (new Date(persistable.expiration) <= new Date()) {\r\n            this.delete(key);\r\n            return null;\r\n        }\r\n        else {\r\n            return persistable.value;\r\n        }\r\n    };\r\n    /**\r\n     * Adds a value to the underlying storage\r\n     *\r\n     * @param key The key to use when storing the provided value\r\n     * @param o The value to store\r\n     * @param expire Optional, if provided the expiration of the item, otherwise the default is used\r\n     */\r\n    PnPClientStorageWrapper.prototype.put = function (key, o, expire) {\r\n        if (this.enabled) {\r\n            this.store.setItem(key, this.createPersistable(o, expire));\r\n        }\r\n    };\r\n    /**\r\n     * Deletes a value from the underlying storage\r\n     *\r\n     * @param key The key of the pair we want to remove from storage\r\n     */\r\n    PnPClientStorageWrapper.prototype.delete = function (key) {\r\n        if (this.enabled) {\r\n            this.store.removeItem(key);\r\n        }\r\n    };\r\n    /**\r\n     * Gets an item from the underlying storage, or adds it if it does not exist using the supplied getter function\r\n     *\r\n     * @param key The key to use when storing the provided value\r\n     * @param getter A function which will upon execution provide the desired value\r\n     * @param expire Optional, if provided the expiration of the item, otherwise the default is used\r\n     */\r\n    PnPClientStorageWrapper.prototype.getOrPut = function (key, getter, expire) {\r\n        var _this = this;\r\n        if (!this.enabled) {\r\n            return getter();\r\n        }\r\n        var o = this.get(key);\r\n        if (o === null) {\r\n            return getter().then(function (d) {\r\n                _this.put(key, d, expire);\r\n                return d;\r\n            });\r\n        }\r\n        return Promise.resolve(o);\r\n    };\r\n    /**\r\n     * Deletes any expired items placed in the store by the pnp library, leaves other items untouched\r\n     */\r\n    PnPClientStorageWrapper.prototype.deleteExpired = function () {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            if (!_this.enabled) {\r\n                resolve();\r\n            }\r\n            try {\r\n                for (var i = 0; i < _this.store.length; i++) {\r\n                    var key = _this.store.key(i);\r\n                    if (key !== null) {\r\n                        // test the stored item to see if we stored it\r\n                        if (/[\"|']?pnp[\"|']? ?: ?1/i.test(_this.store.getItem(key))) {\r\n                            // get those items as get will delete from cache if they are expired\r\n                            _this.get(key);\r\n                        }\r\n                    }\r\n                }\r\n                resolve();\r\n            }\r\n            catch (e) {\r\n                reject(e);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Used to determine if the wrapped storage is available currently\r\n     */\r\n    PnPClientStorageWrapper.prototype.test = function () {\r\n        var str = \"t\";\r\n        try {\r\n            this.store.setItem(str, str);\r\n            this.store.removeItem(str);\r\n            return true;\r\n        }\r\n        catch (e) {\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * Creates the persistable to store\r\n     */\r\n    PnPClientStorageWrapper.prototype.createPersistable = function (o, expire) {\r\n        if (expire === undefined) {\r\n            // ensure we are by default inline with the global library setting\r\n            var defaultTimeout = RuntimeConfig.defaultCachingTimeoutSeconds;\r\n            if (this.defaultTimeoutMinutes > 0) {\r\n                defaultTimeout = this.defaultTimeoutMinutes * 60;\r\n            }\r\n            expire = dateAdd(new Date(), \"second\", defaultTimeout);\r\n        }\r\n        return jsS({ pnp: 1, expiration: expire, value: o });\r\n    };\r\n    /**\r\n     * Deletes expired items added by this library in this.store and sets a timeout to call itself\r\n     */\r\n    PnPClientStorageWrapper.prototype.cacheExpirationHandler = function () {\r\n        var _this = this;\r\n        this.deleteExpired().then(function (_) {\r\n            // call ourself in the future\r\n            setTimeout(getCtxCallback(_this, _this.cacheExpirationHandler), RuntimeConfig.cacheExpirationIntervalMilliseconds);\r\n        }).catch(function (e) {\r\n            console.error(e);\r\n        });\r\n    };\r\n    return PnPClientStorageWrapper;\r\n}());\r\nexport { PnPClientStorageWrapper };\r\n/**\r\n * A thin implementation of in-memory storage for use in nodejs\r\n */\r\nvar MemoryStorage = /** @class */ (function () {\r\n    function MemoryStorage(_store) {\r\n        if (_store === void 0) { _store = new Map(); }\r\n        this._store = _store;\r\n    }\r\n    Object.defineProperty(MemoryStorage.prototype, \"length\", {\r\n        get: function () {\r\n            return this._store.size;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    MemoryStorage.prototype.clear = function () {\r\n        this._store.clear();\r\n    };\r\n    MemoryStorage.prototype.getItem = function (key) {\r\n        return this._store.get(key);\r\n    };\r\n    MemoryStorage.prototype.key = function (index) {\r\n        return Array.from(this._store)[index][0];\r\n    };\r\n    MemoryStorage.prototype.removeItem = function (key) {\r\n        this._store.delete(key);\r\n    };\r\n    MemoryStorage.prototype.setItem = function (key, data) {\r\n        this._store.set(key, data);\r\n    };\r\n    return MemoryStorage;\r\n}());\r\n/**\r\n * A class that will establish wrappers for both local and session storage\r\n */\r\nvar PnPClientStorage = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of the PnPClientStorage class\r\n     *\r\n     * @constructor\r\n     */\r\n    function PnPClientStorage(_local, _session) {\r\n        if (_local === void 0) { _local = null; }\r\n        if (_session === void 0) { _session = null; }\r\n        this._local = _local;\r\n        this._session = _session;\r\n    }\r\n    Object.defineProperty(PnPClientStorage.prototype, \"local\", {\r\n        /**\r\n         * Provides access to the local storage of the browser\r\n         */\r\n        get: function () {\r\n            if (this._local === null) {\r\n                this._local = this.getStore(\"local\");\r\n            }\r\n            return this._local;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PnPClientStorage.prototype, \"session\", {\r\n        /**\r\n         * Provides access to the session storage of the browser\r\n         */\r\n        get: function () {\r\n            if (this._session === null) {\r\n                this._session = this.getStore(\"session\");\r\n            }\r\n            return this._session;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    PnPClientStorage.prototype.getStore = function (name) {\r\n        if (name === \"local\") {\r\n            return new PnPClientStorageWrapper(typeof (localStorage) === \"undefined\" ? new MemoryStorage() : localStorage);\r\n        }\r\n        return new PnPClientStorageWrapper(typeof (sessionStorage) === \"undefined\" ? new MemoryStorage() : sessionStorage);\r\n    };\r\n    return PnPClientStorage;\r\n}());\r\nexport { PnPClientStorage };\r\n//# sourceMappingURL=storage.js.map","export * from \"./src/common\";\r\n//# sourceMappingURL=index.js.map","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/**\r\n * Gets a callback function which will maintain context across async calls.\r\n * Allows for the calling pattern getCtxCallback(thisobj, method, methodarg1, methodarg2, ...)\r\n *\r\n * @param context The object that will be the 'this' value in the callback\r\n * @param method The method to which we will apply the context and parameters\r\n * @param params Optional, additional arguments to supply to the wrapped method when it is invoked\r\n */\r\nexport function getCtxCallback(context, method) {\r\n    var params = [];\r\n    for (var _i = 2; _i < arguments.length; _i++) {\r\n        params[_i - 2] = arguments[_i];\r\n    }\r\n    return function () {\r\n        method.apply(context, params);\r\n    };\r\n}\r\n/**\r\n * Adds a value to a date\r\n *\r\n * @param date The date to which we will add units, done in local time\r\n * @param interval The name of the interval to add, one of: ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second']\r\n * @param units The amount to add to date of the given interval\r\n *\r\n * http://stackoverflow.com/questions/1197928/how-to-add-30-minutes-to-a-javascript-date-object\r\n */\r\nexport function dateAdd(date, interval, units) {\r\n    var ret = new Date(date); // don't change original date\r\n    switch (interval.toLowerCase()) {\r\n        case \"year\":\r\n            ret.setFullYear(ret.getFullYear() + units);\r\n            break;\r\n        case \"quarter\":\r\n            ret.setMonth(ret.getMonth() + 3 * units);\r\n            break;\r\n        case \"month\":\r\n            ret.setMonth(ret.getMonth() + units);\r\n            break;\r\n        case \"week\":\r\n            ret.setDate(ret.getDate() + 7 * units);\r\n            break;\r\n        case \"day\":\r\n            ret.setDate(ret.getDate() + units);\r\n            break;\r\n        case \"hour\":\r\n            ret.setTime(ret.getTime() + units * 3600000);\r\n            break;\r\n        case \"minute\":\r\n            ret.setTime(ret.getTime() + units * 60000);\r\n            break;\r\n        case \"second\":\r\n            ret.setTime(ret.getTime() + units * 1000);\r\n            break;\r\n        default:\r\n            ret = undefined;\r\n            break;\r\n    }\r\n    return ret;\r\n}\r\n/**\r\n * Combines an arbitrary set of paths ensuring and normalizes the slashes\r\n *\r\n * @param paths 0 to n path parts to combine\r\n */\r\nexport function combine() {\r\n    var paths = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        paths[_i] = arguments[_i];\r\n    }\r\n    return paths\r\n        .filter(function (path) { return !stringIsNullOrEmpty(path); })\r\n        .map(function (path) { return path.replace(/^[\\\\|\\/]/, \"\").replace(/[\\\\|\\/]$/, \"\"); })\r\n        .join(\"/\")\r\n        .replace(/\\\\/g, \"/\");\r\n}\r\n/**\r\n * Gets a random string of chars length\r\n *\r\n * https://stackoverflow.com/questions/1349404/generate-random-string-characters-in-javascript\r\n *\r\n * @param chars The length of the random string to generate\r\n */\r\nexport function getRandomString(chars) {\r\n    var text = new Array(chars);\r\n    var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n    for (var i = 0; i < chars; i++) {\r\n        text[i] = possible.charAt(Math.floor(Math.random() * possible.length));\r\n    }\r\n    return text.join(\"\");\r\n}\r\n/**\r\n * Gets a random GUID value\r\n *\r\n * http://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\r\n * https://stackoverflow.com/a/8809472 updated to prevent collisions.\r\n */\r\n/* tslint:disable no-bitwise */\r\nexport function getGUID() {\r\n    var d = Date.now();\r\n    if (typeof performance !== \"undefined\" && typeof performance.now === \"function\") {\r\n        d += performance.now(); // use high-precision timer if available\r\n    }\r\n    var guid = \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function (c) {\r\n        var r = (d + Math.random() * 16) % 16 | 0;\r\n        d = Math.floor(d / 16);\r\n        return (c === \"x\" ? r : (r & 0x3 | 0x8)).toString(16);\r\n    });\r\n    return guid;\r\n}\r\n/* tslint:enable */\r\n/**\r\n * Determines if a given value is a function\r\n *\r\n * @param cf The thing to test for functionness\r\n */\r\nexport function isFunc(cf) {\r\n    return typeof cf === \"function\";\r\n}\r\n/**\r\n * Determines if an object is both defined and not null\r\n * @param obj Object to test\r\n */\r\nexport function objectDefinedNotNull(obj) {\r\n    return typeof obj !== \"undefined\" && obj !== null;\r\n}\r\n/**\r\n * @returns whether the provided parameter is a JavaScript Array or not.\r\n*/\r\nexport function isArray(array) {\r\n    if (Array.isArray) {\r\n        return Array.isArray(array);\r\n    }\r\n    return array && typeof array.length === \"number\" && array.constructor === Array;\r\n}\r\n/**\r\n * Provides functionality to extend the given object by doing a shallow copy\r\n *\r\n * @param target The object to which properties will be copied\r\n * @param source The source object from which properties will be copied\r\n * @param noOverwrite If true existing properties on the target are not overwritten from the source\r\n * @param filter If provided allows additional filtering on what properties are copied (propName: string) => boolean\r\n *\r\n */\r\nexport function extend(target, source, noOverwrite, filter) {\r\n    if (noOverwrite === void 0) { noOverwrite = false; }\r\n    if (filter === void 0) { filter = function () { return true; }; }\r\n    if (!objectDefinedNotNull(source)) {\r\n        return target;\r\n    }\r\n    // ensure we don't overwrite things we don't want overwritten\r\n    var check = noOverwrite ? function (o, i) { return !(i in o); } : function () { return true; };\r\n    // final filter we will use\r\n    var f = function (v) { return check(target, v) && filter(v); };\r\n    return Object.getOwnPropertyNames(source)\r\n        .filter(f)\r\n        .reduce(function (t, v) {\r\n        t[v] = source[v];\r\n        return t;\r\n    }, target);\r\n}\r\n/**\r\n * Determines if a given url is absolute\r\n *\r\n * @param url The url to check to see if it is absolute\r\n */\r\nexport function isUrlAbsolute(url) {\r\n    return /^https?:\\/\\/|^\\/\\//i.test(url);\r\n}\r\n/**\r\n * Determines if a string is null or empty or undefined\r\n *\r\n * @param s The string to test\r\n */\r\nexport function stringIsNullOrEmpty(s) {\r\n    return s === undefined || s === null || s.length < 1;\r\n}\r\n/**\r\n * Gets an attribute value from an html/xml string block. NOTE: if the input attribute value has\r\n * RegEx special characters they will be escaped in the returned string\r\n *\r\n * @param html HTML to search\r\n * @param attrName The name of the attribute to find\r\n */\r\nexport function getAttrValueFromString(html, attrName) {\r\n    // make the input safe for regex\r\n    html = html.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\r\n    var reg = new RegExp(attrName + \"\\\\s*?=\\\\s*?(\\\"|')([^\\\\1]*?)\\\\1\", \"i\");\r\n    var match = reg.exec(html);\r\n    return match !== null && match.length > 0 ? match[2] : null;\r\n}\r\n/**\r\n * Ensures guid values are represented consistently as \"ea123463-137d-4ae3-89b8-cf3fc578ca05\"\r\n *\r\n * @param guid The candidate guid\r\n */\r\nexport function sanitizeGuid(guid) {\r\n    if (stringIsNullOrEmpty(guid)) {\r\n        return guid;\r\n    }\r\n    var matches = /([0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12})/i.exec(guid);\r\n    return matches === null ? guid : matches[1];\r\n}\r\n/**\r\n * Shorthand for JSON.stringify\r\n *\r\n * @param o Any type of object\r\n */\r\nexport function jsS(o) {\r\n    return JSON.stringify(o);\r\n}\r\n/**\r\n * Shorthand for Object.hasOwnProperty\r\n *\r\n * @param o Object to check for\r\n * @param p Name of the property\r\n */\r\nexport function hOP(o, p) {\r\n    return Object.hasOwnProperty.call(o, p);\r\n}\r\n/**\r\n * Generates a ~unique hash code\r\n *\r\n * From: https://stackoverflow.com/questions/6122571/simple-non-secure-hash-function-for-javascript\r\n */\r\n// tslint:disable:no-bitwise\r\nexport function getHashCode(s) {\r\n    var hash = 0;\r\n    if (s.length === 0) {\r\n        return hash;\r\n    }\r\n    for (var i = 0; i < s.length; i++) {\r\n        var chr = s.charCodeAt(i);\r\n        hash = ((hash << 5) - hash) + chr;\r\n        hash |= 0; // Convert to 32bit integer\r\n    }\r\n    return hash;\r\n}\r\n// tslint:enable:no-bitwise\r\n//# sourceMappingURL=util.js.map","import { RuntimeConfig, FetchClient, } from \"@pnp/common\";\r\nexport function setup(config) {\r\n    RuntimeConfig.extend(config);\r\n}\r\nvar SPRuntimeConfigImpl = /** @class */ (function () {\r\n    function SPRuntimeConfigImpl() {\r\n    }\r\n    Object.defineProperty(SPRuntimeConfigImpl.prototype, \"headers\", {\r\n        get: function () {\r\n            var spPart = RuntimeConfig.get(\"sp\");\r\n            if (spPart !== undefined && spPart.headers !== undefined) {\r\n                return spPart.headers;\r\n            }\r\n            return {};\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SPRuntimeConfigImpl.prototype, \"baseUrl\", {\r\n        get: function () {\r\n            var spPart = RuntimeConfig.get(\"sp\");\r\n            if (spPart !== undefined && spPart.baseUrl !== undefined) {\r\n                return spPart.baseUrl;\r\n            }\r\n            if (RuntimeConfig.spfxContext !== undefined && RuntimeConfig.spfxContext !== null) {\r\n                return RuntimeConfig.spfxContext.pageContext.web.absoluteUrl;\r\n            }\r\n            return null;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SPRuntimeConfigImpl.prototype, \"fetchClientFactory\", {\r\n        get: function () {\r\n            var spPart = RuntimeConfig.get(\"sp\");\r\n            if (spPart !== undefined && spPart.fetchClientFactory !== undefined) {\r\n                return spPart.fetchClientFactory;\r\n            }\r\n            else {\r\n                return function () { return new FetchClient(); };\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return SPRuntimeConfigImpl;\r\n}());\r\nexport { SPRuntimeConfigImpl };\r\nexport var SPRuntimeConfig = new SPRuntimeConfigImpl();\r\n//# sourceMappingURL=splibconfig.js.map","import { combine, isUrlAbsolute, hOP } from \"@pnp/common\";\r\nimport { SPRuntimeConfig } from \"../config/splibconfig\";\r\n/**\r\n * Ensures that a given url is absolute for the current web based on context\r\n *\r\n * @param candidateUrl The url to make absolute\r\n *\r\n */\r\nexport function toAbsoluteUrl(candidateUrl) {\r\n    return new Promise(function (resolve) {\r\n        if (isUrlAbsolute(candidateUrl)) {\r\n            // if we are already absolute, then just return the url\r\n            return resolve(candidateUrl);\r\n        }\r\n        if (SPRuntimeConfig.baseUrl !== null) {\r\n            // base url specified either with baseUrl of spfxContext config property\r\n            return resolve(combine(SPRuntimeConfig.baseUrl, candidateUrl));\r\n        }\r\n        if (global._spPageContextInfo !== undefined) {\r\n            // operating in classic pages\r\n            if (hOP(global._spPageContextInfo, \"webAbsoluteUrl\")) {\r\n                return resolve(combine(global._spPageContextInfo.webAbsoluteUrl, candidateUrl));\r\n            }\r\n            else if (hOP(global._spPageContextInfo, \"webServerRelativeUrl\")) {\r\n                return resolve(combine(global._spPageContextInfo.webServerRelativeUrl, candidateUrl));\r\n            }\r\n        }\r\n        // does window.location exist and have a certain path part in it?\r\n        if (global.location !== undefined) {\r\n            var baseUrl_1 = global.location.toString().toLowerCase();\r\n            [\"/_layouts/\", \"/siteassets/\"].forEach(function (s) {\r\n                var index = baseUrl_1.indexOf(s);\r\n                if (index > 0) {\r\n                    return resolve(combine(baseUrl_1.substr(0, index), candidateUrl));\r\n                }\r\n            });\r\n        }\r\n        return resolve(candidateUrl);\r\n    });\r\n}\r\n//# sourceMappingURL=toabsoluteurl.js.map","import * as tslib_1 from \"tslib\";\r\nimport { extend, objectDefinedNotNull } from \"./util\";\r\nexport function mergeHeaders(target, source) {\r\n    if (source !== undefined && source !== null) {\r\n        var temp = new Request(\"\", { headers: source });\r\n        temp.headers.forEach(function (value, name) {\r\n            target.append(name, value);\r\n        });\r\n    }\r\n}\r\nexport function mergeOptions(target, source) {\r\n    if (objectDefinedNotNull(source)) {\r\n        var headers = extend(target.headers || {}, source.headers);\r\n        target = extend(target, source);\r\n        target.headers = headers;\r\n    }\r\n}\r\n/**\r\n * Makes requests using the global/window fetch API\r\n */\r\nvar FetchClient = /** @class */ (function () {\r\n    function FetchClient() {\r\n    }\r\n    FetchClient.prototype.fetch = function (url, options) {\r\n        return global.fetch(url, options);\r\n    };\r\n    return FetchClient;\r\n}());\r\nexport { FetchClient };\r\n/**\r\n * Makes requests using the fetch API adding the supplied token to the Authorization header\r\n */\r\nvar BearerTokenFetchClient = /** @class */ (function (_super) {\r\n    tslib_1.__extends(BearerTokenFetchClient, _super);\r\n    function BearerTokenFetchClient(_token) {\r\n        var _this = _super.call(this) || this;\r\n        _this._token = _token;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(BearerTokenFetchClient.prototype, \"token\", {\r\n        get: function () {\r\n            return this._token || \"\";\r\n        },\r\n        set: function (token) {\r\n            this._token = token;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    BearerTokenFetchClient.prototype.fetch = function (url, options) {\r\n        if (options === void 0) { options = {}; }\r\n        var headers = new Headers();\r\n        mergeHeaders(headers, options.headers);\r\n        headers.set(\"Authorization\", \"Bearer \" + this._token);\r\n        options.headers = headers;\r\n        return _super.prototype.fetch.call(this, url, options);\r\n    };\r\n    return BearerTokenFetchClient;\r\n}(FetchClient));\r\nexport { BearerTokenFetchClient };\r\n//# sourceMappingURL=netutil.js.map","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","/*! adal-angular v1.0.17 2018-02-27 */\r\nvar AuthenticationContext=function(){\"use strict\";return AuthenticationContext=function(a){if(this.REQUEST_TYPE={LOGIN:\"LOGIN\",RENEW_TOKEN:\"RENEW_TOKEN\",UNKNOWN:\"UNKNOWN\"},this.RESPONSE_TYPE={ID_TOKEN_TOKEN:\"id_token token\",TOKEN:\"token\"},this.CONSTANTS={ACCESS_TOKEN:\"access_token\",EXPIRES_IN:\"expires_in\",ID_TOKEN:\"id_token\",ERROR_DESCRIPTION:\"error_description\",SESSION_STATE:\"session_state\",ERROR:\"error\",STORAGE:{TOKEN_KEYS:\"adal.token.keys\",ACCESS_TOKEN_KEY:\"adal.access.token.key\",EXPIRATION_KEY:\"adal.expiration.key\",STATE_LOGIN:\"adal.state.login\",STATE_RENEW:\"adal.state.renew\",NONCE_IDTOKEN:\"adal.nonce.idtoken\",SESSION_STATE:\"adal.session.state\",USERNAME:\"adal.username\",IDTOKEN:\"adal.idtoken\",ERROR:\"adal.error\",ERROR_DESCRIPTION:\"adal.error.description\",LOGIN_REQUEST:\"adal.login.request\",LOGIN_ERROR:\"adal.login.error\",RENEW_STATUS:\"adal.token.renew.status\",ANGULAR_LOGIN_REQUEST:\"adal.angular.login.request\"},RESOURCE_DELIMETER:\"|\",CACHE_DELIMETER:\"||\",LOADFRAME_TIMEOUT:6e3,TOKEN_RENEW_STATUS_CANCELED:\"Canceled\",TOKEN_RENEW_STATUS_COMPLETED:\"Completed\",TOKEN_RENEW_STATUS_IN_PROGRESS:\"In Progress\",LOGGING_LEVEL:{ERROR:0,WARN:1,INFO:2,VERBOSE:3},LEVEL_STRING_MAP:{0:\"ERROR:\",1:\"WARNING:\",2:\"INFO:\",3:\"VERBOSE:\"},POPUP_WIDTH:483,POPUP_HEIGHT:600},AuthenticationContext.prototype._singletonInstance)return AuthenticationContext.prototype._singletonInstance;if(AuthenticationContext.prototype._singletonInstance=this,this.instance=\"https://login.microsoftonline.com/\",this.config={},this.callback=null,this.popUp=!1,this.isAngular=!1,this._user=null,this._activeRenewals={},this._loginInProgress=!1,this._acquireTokenInProgress=!1,this._renewStates=[],this._callBackMappedToRenewStates={},this._callBacksMappedToRenewStates={},this._openedWindows=[],this._requestType=this.REQUEST_TYPE.LOGIN,window._adalInstance=this,a.displayCall&&\"function\"!=typeof a.displayCall)throw new Error(\"displayCall is not a function\");if(!a.clientId)throw new Error(\"clientId is required\");this.config=this._cloneConfig(a),void 0===this.config.navigateToLoginRequestUrl&&(this.config.navigateToLoginRequestUrl=!0),this.config.popUp&&(this.popUp=!0),this.config.callback&&\"function\"==typeof this.config.callback&&(this.callback=this.config.callback),this.config.instance&&(this.instance=this.config.instance),this.config.loginResource||(this.config.loginResource=this.config.clientId),this.config.redirectUri||(this.config.redirectUri=window.location.href.split(\"?\")[0].split(\"#\")[0]),this.config.postLogoutRedirectUri||(this.config.postLogoutRedirectUri=window.location.href.split(\"?\")[0].split(\"#\")[0]),this.config.anonymousEndpoints||(this.config.anonymousEndpoints=[]),this.config.isAngular&&(this.isAngular=this.config.isAngular),this.config.loadFrameTimeout&&(this.CONSTANTS.LOADFRAME_TIMEOUT=this.config.loadFrameTimeout)},\"undefined\"!=typeof window&&(window.Logging={piiLoggingEnabled:!1,level:0,log:function(a){}}),AuthenticationContext.prototype.login=function(){if(this._loginInProgress)return void this.info(\"Login in progress\");this._loginInProgress=!0;var a=this._guid();this.config.state=a,this._idTokenNonce=this._guid();var b=this._getItem(this.CONSTANTS.STORAGE.ANGULAR_LOGIN_REQUEST);b&&\"\"!==b?this._saveItem(this.CONSTANTS.STORAGE.ANGULAR_LOGIN_REQUEST,\"\"):b=window.location.href,this.verbose(\"Expected state: \"+a+\" startPage:\"+b),this._saveItem(this.CONSTANTS.STORAGE.LOGIN_REQUEST,b),this._saveItem(this.CONSTANTS.STORAGE.LOGIN_ERROR,\"\"),this._saveItem(this.CONSTANTS.STORAGE.STATE_LOGIN,a,!0),this._saveItem(this.CONSTANTS.STORAGE.NONCE_IDTOKEN,this._idTokenNonce,!0),this._saveItem(this.CONSTANTS.STORAGE.ERROR,\"\"),this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION,\"\");var c=this._getNavigateUrl(\"id_token\",null)+\"&nonce=\"+encodeURIComponent(this._idTokenNonce);this.config.displayCall?this.config.displayCall(c):this.popUp?(this._saveItem(this.CONSTANTS.STORAGE.STATE_LOGIN,\"\"),this._renewStates.push(a),this.registerCallback(a,this.config.clientId,this.callback),this._loginPopup(c)):this.promptUser(c)},AuthenticationContext.prototype._openPopup=function(a,b,c,d){try{var e=window.screenLeft?window.screenLeft:window.screenX,f=window.screenTop?window.screenTop:window.screenY,g=window.innerWidth||document.documentElement.clientWidth||document.body.clientWidth,h=window.innerHeight||document.documentElement.clientHeight||document.body.clientHeight,i=g/2-c/2+e,j=h/2-d/2+f,k=window.open(a,b,\"width=\"+c+\", height=\"+d+\", top=\"+j+\", left=\"+i);return k.focus&&k.focus(),k}catch(a){return this.warn(\"Error opening popup, \"+a.message),this._loginInProgress=!1,this._acquireTokenInProgress=!1,null}},AuthenticationContext.prototype._handlePopupError=function(a,b,c,d,e){this.warn(d),this._saveItem(this.CONSTANTS.STORAGE.ERROR,c),this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION,d),this._saveItem(this.CONSTANTS.STORAGE.LOGIN_ERROR,e),b&&this._activeRenewals[b]&&(this._activeRenewals[b]=null),this._loginInProgress=!1,this._acquireTokenInProgress=!1,a&&a(d,null,c)},AuthenticationContext.prototype._loginPopup=function(a,b,c){var d=this._openPopup(a,\"login\",this.CONSTANTS.POPUP_WIDTH,this.CONSTANTS.POPUP_HEIGHT),e=c||this.callback;if(null==d){var f=\"Popup Window is null. This can happen if you are using IE\";return void this._handlePopupError(e,b,\"Error opening popup\",f,f)}if(this._openedWindows.push(d),-1!=this.config.redirectUri.indexOf(\"#\"))var g=this.config.redirectUri.split(\"#\")[0];else var g=this.config.redirectUri;var h=this,i=window.setInterval(function(){if(!d||d.closed||void 0===d.closed){var a=\"Popup Window closed\",c=\"Popup Window closed by UI action/ Popup Window handle destroyed due to cross zone navigation in IE/Edge\";return h.isAngular&&h._broadcast(\"adal:popUpClosed\",c+h.CONSTANTS.RESOURCE_DELIMETER+a),h._handlePopupError(e,b,a,c,c),void window.clearInterval(i)}try{var f=d.location;if(-1!=encodeURI(f.href).indexOf(encodeURI(g)))return h.isAngular?h._broadcast(\"adal:popUpHashChanged\",f.hash):h.handleWindowCallback(f.hash),window.clearInterval(i),h._loginInProgress=!1,h._acquireTokenInProgress=!1,h.info(\"Closing popup window\"),h._openedWindows=[],void d.close()}catch(a){}},1)},AuthenticationContext.prototype._broadcast=function(a,b){!function(){function a(a,b){b=b||{bubbles:!1,cancelable:!1,detail:void 0};var c=document.createEvent(\"CustomEvent\");return c.initCustomEvent(a,b.bubbles,b.cancelable,b.detail),c}if(\"function\"==typeof window.CustomEvent)return!1;a.prototype=window.Event.prototype,window.CustomEvent=a}();var c=new CustomEvent(a,{detail:b});window.dispatchEvent(c)},AuthenticationContext.prototype.loginInProgress=function(){return this._loginInProgress},AuthenticationContext.prototype._hasResource=function(a){var b=this._getItem(this.CONSTANTS.STORAGE.TOKEN_KEYS);return b&&!this._isEmpty(b)&&b.indexOf(a+this.CONSTANTS.RESOURCE_DELIMETER)>-1},AuthenticationContext.prototype.getCachedToken=function(a){if(!this._hasResource(a))return null;var b=this._getItem(this.CONSTANTS.STORAGE.ACCESS_TOKEN_KEY+a),c=this._getItem(this.CONSTANTS.STORAGE.EXPIRATION_KEY+a),d=this.config.expireOffsetSeconds||300;return c&&c>this._now()+d?b:(this._saveItem(this.CONSTANTS.STORAGE.ACCESS_TOKEN_KEY+a,\"\"),this._saveItem(this.CONSTANTS.STORAGE.EXPIRATION_KEY+a,0),null)},AuthenticationContext.prototype.getCachedUser=function(){if(this._user)return this._user;var a=this._getItem(this.CONSTANTS.STORAGE.IDTOKEN);return this._user=this._createUser(a),this._user},AuthenticationContext.prototype.registerCallback=function(a,b,c){this._activeRenewals[b]=a,this._callBacksMappedToRenewStates[a]||(this._callBacksMappedToRenewStates[a]=[]);var d=this;this._callBacksMappedToRenewStates[a].push(c),this._callBackMappedToRenewStates[a]||(this._callBackMappedToRenewStates[a]=function(c,e,f,g){d._activeRenewals[b]=null;for(var h=0;h<d._callBacksMappedToRenewStates[a].length;++h)try{d._callBacksMappedToRenewStates[a][h](c,e,f,g)}catch(f){d.warn(f)}d._callBacksMappedToRenewStates[a]=null,d._callBackMappedToRenewStates[a]=null})},AuthenticationContext.prototype._renewToken=function(a,b,c){this.info(\"renewToken is called for resource:\"+a);var d=this._addAdalFrame(\"adalRenewFrame\"+a),e=this._guid()+\"|\"+a;this.config.state=e,this._renewStates.push(e),this.verbose(\"Renew token Expected state: \"+e),c=c||\"token\";var f=this._urlRemoveQueryStringParameter(this._getNavigateUrl(c,a),\"prompt\");c===this.RESPONSE_TYPE.ID_TOKEN_TOKEN&&(this._idTokenNonce=this._guid(),this._saveItem(this.CONSTANTS.STORAGE.NONCE_IDTOKEN,this._idTokenNonce,!0),f+=\"&nonce=\"+encodeURIComponent(this._idTokenNonce)),f+=\"&prompt=none\",f=this._addHintParameters(f),this.registerCallback(e,a,b),this.verbosePii(\"Navigate to:\"+f),d.src=\"about:blank\",this._loadFrameTimeout(f,\"adalRenewFrame\"+a,a)},AuthenticationContext.prototype._renewIdToken=function(a,b){this.info(\"renewIdToken is called\");var c=this._addAdalFrame(\"adalIdTokenFrame\"),d=this._guid()+\"|\"+this.config.clientId;this._idTokenNonce=this._guid(),this._saveItem(this.CONSTANTS.STORAGE.NONCE_IDTOKEN,this._idTokenNonce,!0),this.config.state=d,this._renewStates.push(d),this.verbose(\"Renew Idtoken Expected state: \"+d);var e=null===b||void 0===b?null:this.config.clientId,b=b||\"id_token\",f=this._urlRemoveQueryStringParameter(this._getNavigateUrl(b,e),\"prompt\");f+=\"&prompt=none\",f=this._addHintParameters(f),f+=\"&nonce=\"+encodeURIComponent(this._idTokenNonce),this.registerCallback(d,this.config.clientId,a),this.verbosePii(\"Navigate to:\"+f),c.src=\"about:blank\",this._loadFrameTimeout(f,\"adalIdTokenFrame\",this.config.clientId)},AuthenticationContext.prototype._urlContainsQueryStringParameter=function(a,b){return new RegExp(\"[\\\\?&]\"+a+\"=\").test(b)},AuthenticationContext.prototype._urlRemoveQueryStringParameter=function(a,b){var c=new RegExp(\"(\\\\&\"+b+\"=)[^&]+\");return a=a.replace(c,\"\"),c=new RegExp(\"(\"+b+\"=)[^&]+&\"),a=a.replace(c,\"\"),c=new RegExp(\"(\"+b+\"=)[^&]+\"),a=a.replace(c,\"\")},AuthenticationContext.prototype._loadFrameTimeout=function(a,b,c){this.verbose(\"Set loading state to pending for: \"+c),this._saveItem(this.CONSTANTS.STORAGE.RENEW_STATUS+c,this.CONSTANTS.TOKEN_RENEW_STATUS_IN_PROGRESS),this._loadFrame(a,b);var d=this;setTimeout(function(){if(d._getItem(d.CONSTANTS.STORAGE.RENEW_STATUS+c)===d.CONSTANTS.TOKEN_RENEW_STATUS_IN_PROGRESS){d.verbose(\"Loading frame has timed out after: \"+d.CONSTANTS.LOADFRAME_TIMEOUT/1e3+\" seconds for resource \"+c);var a=d._activeRenewals[c];a&&d._callBackMappedToRenewStates[a]&&d._callBackMappedToRenewStates[a](\"Token renewal operation failed due to timeout\",null,\"Token Renewal Failed\"),d._saveItem(d.CONSTANTS.STORAGE.RENEW_STATUS+c,d.CONSTANTS.TOKEN_RENEW_STATUS_CANCELED)}},d.CONSTANTS.LOADFRAME_TIMEOUT)},AuthenticationContext.prototype._loadFrame=function(a,b){var c=this;c.info(\"LoadFrame: \"+b);var d=b;setTimeout(function(){var b=c._addAdalFrame(d);\"\"!==b.src&&\"about:blank\"!==b.src||(b.src=a,c._loadFrame(a,d))},500)},AuthenticationContext.prototype.acquireToken=function(a,b){if(this._isEmpty(a))return this.warn(\"resource is required\"),void b(\"resource is required\",null,\"resource is required\");var c=this.getCachedToken(a);return c?(this.info(\"Token is already in cache for resource:\"+a),void b(null,c,null)):this._user||this.config.extraQueryParameter&&-1!==this.config.extraQueryParameter.indexOf(\"login_hint\")?void(this._activeRenewals[a]?this.registerCallback(this._activeRenewals[a],a,b):(this._requestType=this.REQUEST_TYPE.RENEW_TOKEN,a===this.config.clientId?this._user?(this.verbose(\"renewing idtoken\"),this._renewIdToken(b)):(this.verbose(\"renewing idtoken and access_token\"),this._renewIdToken(b,this.RESPONSE_TYPE.ID_TOKEN_TOKEN)):this._user?(this.verbose(\"renewing access_token\"),this._renewToken(a,b)):(this.verbose(\"renewing idtoken and access_token\"),this._renewToken(a,b,this.RESPONSE_TYPE.ID_TOKEN_TOKEN)))):(this.warn(\"User login is required\"),void b(\"User login is required\",null,\"login required\"))},AuthenticationContext.prototype.acquireTokenPopup=function(a,b,c,d){if(this._isEmpty(a))return this.warn(\"resource is required\"),void d(\"resource is required\",null,\"resource is required\");if(!this._user)return this.warn(\"User login is required\"),void d(\"User login is required\",null,\"login required\");if(this._acquireTokenInProgress)return this.warn(\"Acquire token interactive is already in progress\"),void d(\"Acquire token interactive is already in progress\",null,\"Acquire token interactive is already in progress\");var e=this._guid()+\"|\"+a;this.config.state=e,this._renewStates.push(e),this._requestType=this.REQUEST_TYPE.RENEW_TOKEN,this.verbose(\"Renew token Expected state: \"+e);var f=this._urlRemoveQueryStringParameter(this._getNavigateUrl(\"token\",a),\"prompt\");if(f+=\"&prompt=select_account\",b&&(f+=b),c&&-1===f.indexOf(\"&claims\"))f+=\"&claims=\"+encodeURIComponent(c);else if(c&&-1!==f.indexOf(\"&claims\"))throw new Error(\"Claims cannot be passed as an extraQueryParameter\");f=this._addHintParameters(f),this._acquireTokenInProgress=!0,this.info(\"acquireToken interactive is called for the resource \"+a),this.registerCallback(e,a,d),this._loginPopup(f,a,d)},AuthenticationContext.prototype.acquireTokenRedirect=function(a,b,c){if(this._isEmpty(a))return this.warn(\"resource is required\"),void d(\"resource is required\",null,\"resource is required\");var d=this.callback;if(!this._user)return this.warn(\"User login is required\"),void d(\"User login is required\",null,\"login required\");if(this._acquireTokenInProgress)return this.warn(\"Acquire token interactive is already in progress\"),void d(\"Acquire token interactive is already in progress\",null,\"Acquire token interactive is already in progress\");var e=this._guid()+\"|\"+a;this.config.state=e,this.verbose(\"Renew token Expected state: \"+e);var f=this._urlRemoveQueryStringParameter(this._getNavigateUrl(\"token\",a),\"prompt\");if(f+=\"&prompt=select_account\",b&&(f+=b),c&&-1===f.indexOf(\"&claims\"))f+=\"&claims=\"+encodeURIComponent(c);else if(c&&-1!==f.indexOf(\"&claims\"))throw new Error(\"Claims cannot be passed as an extraQueryParameter\");f=this._addHintParameters(f),this._acquireTokenInProgress=!0,this.info(\"acquireToken interactive is called for the resource \"+a),this._saveItem(this.CONSTANTS.STORAGE.LOGIN_REQUEST,window.location.href),this._saveItem(this.CONSTANTS.STORAGE.STATE_RENEW,e,!0),this.promptUser(f)},AuthenticationContext.prototype.promptUser=function(a){a?(this.infoPii(\"Navigate to:\"+a),window.location.replace(a)):this.info(\"Navigate url is empty\")},AuthenticationContext.prototype.clearCache=function(){this._saveItem(this.CONSTANTS.STORAGE.LOGIN_REQUEST,\"\"),this._saveItem(this.CONSTANTS.STORAGE.ANGULAR_LOGIN_REQUEST,\"\"),this._saveItem(this.CONSTANTS.STORAGE.SESSION_STATE,\"\"),this._saveItem(this.CONSTANTS.STORAGE.STATE_LOGIN,\"\"),this._saveItem(this.CONSTANTS.STORAGE.STATE_RENEW,\"\"),this._renewStates=[],this._saveItem(this.CONSTANTS.STORAGE.NONCE_IDTOKEN,\"\"),this._saveItem(this.CONSTANTS.STORAGE.IDTOKEN,\"\"),this._saveItem(this.CONSTANTS.STORAGE.ERROR,\"\"),this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION,\"\"),this._saveItem(this.CONSTANTS.STORAGE.LOGIN_ERROR,\"\"),this._saveItem(this.CONSTANTS.STORAGE.LOGIN_ERROR,\"\");var a=this._getItem(this.CONSTANTS.STORAGE.TOKEN_KEYS);if(!this._isEmpty(a)){a=a.split(this.CONSTANTS.RESOURCE_DELIMETER);for(var b=0;b<a.length&&\"\"!==a[b];b++)this._saveItem(this.CONSTANTS.STORAGE.ACCESS_TOKEN_KEY+a[b],\"\"),this._saveItem(this.CONSTANTS.STORAGE.EXPIRATION_KEY+a[b],0)}this._saveItem(this.CONSTANTS.STORAGE.TOKEN_KEYS,\"\")},AuthenticationContext.prototype.clearCacheForResource=function(a){this._saveItem(this.CONSTANTS.STORAGE.STATE_RENEW,\"\"),this._saveItem(this.CONSTANTS.STORAGE.ERROR,\"\"),this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION,\"\"),this._hasResource(a)&&(this._saveItem(this.CONSTANTS.STORAGE.ACCESS_TOKEN_KEY+a,\"\"),this._saveItem(this.CONSTANTS.STORAGE.EXPIRATION_KEY+a,0))},AuthenticationContext.prototype.logOut=function(){this.clearCache(),this._user=null;var a;if(this.config.logOutUri)a=this.config.logOutUri;else{var b=\"common\",c=\"\";this.config.tenant&&(b=this.config.tenant),this.config.postLogoutRedirectUri&&(c=\"post_logout_redirect_uri=\"+encodeURIComponent(this.config.postLogoutRedirectUri)),a=this.instance+b+\"/oauth2/logout?\"+c}this.infoPii(\"Logout navigate to: \"+a),this.promptUser(a)},AuthenticationContext.prototype._isEmpty=function(a){return void 0===a||!a||0===a.length},AuthenticationContext.prototype.getUser=function(a){if(\"function\"!=typeof a)throw new Error(\"callback is not a function\");if(this._user)return void a(null,this._user);var b=this._getItem(this.CONSTANTS.STORAGE.IDTOKEN);this._isEmpty(b)?(this.warn(\"User information is not available\"),a(\"User information is not available\",null)):(this.info(\"User exists in cache: \"),this._user=this._createUser(b),a(null,this._user))},AuthenticationContext.prototype._addHintParameters=function(a){if(this._user&&this._user.profile)if(this._user.profile.sid&&-1!==a.indexOf(\"&prompt=none\"))this._urlContainsQueryStringParameter(\"sid\",a)||(a+=\"&sid=\"+encodeURIComponent(this._user.profile.sid));else if(this._user.profile.upn&&(this._urlContainsQueryStringParameter(\"login_hint\",a)||(a+=\"&login_hint=\"+encodeURIComponent(this._user.profile.upn)),!this._urlContainsQueryStringParameter(\"domain_hint\",a)&&this._user.profile.upn.indexOf(\"@\")>-1)){var b=this._user.profile.upn.split(\"@\");a+=\"&domain_hint=\"+encodeURIComponent(b[b.length-1])}return a},AuthenticationContext.prototype._createUser=function(a){var b=null,c=this._extractIdToken(a);return c&&c.hasOwnProperty(\"aud\")&&(c.aud.toLowerCase()===this.config.clientId.toLowerCase()?(b={userName:\"\",profile:c},c.hasOwnProperty(\"upn\")?b.userName=c.upn:c.hasOwnProperty(\"email\")&&(b.userName=c.email)):this.warn(\"IdToken has invalid aud field\")),b},AuthenticationContext.prototype._getHash=function(a){return a.indexOf(\"#/\")>-1?a=a.substring(a.indexOf(\"#/\")+2):a.indexOf(\"#\")>-1&&(a=a.substring(1)),a},AuthenticationContext.prototype.isCallback=function(a){a=this._getHash(a);var b=this._deserialize(a);return b.hasOwnProperty(this.CONSTANTS.ERROR_DESCRIPTION)||b.hasOwnProperty(this.CONSTANTS.ACCESS_TOKEN)||b.hasOwnProperty(this.CONSTANTS.ID_TOKEN)},AuthenticationContext.prototype.getLoginError=function(){return this._getItem(this.CONSTANTS.STORAGE.LOGIN_ERROR)},AuthenticationContext.prototype.getRequestInfo=function(a){a=this._getHash(a);var b=this._deserialize(a),c={valid:!1,parameters:{},stateMatch:!1,stateResponse:\"\",requestType:this.REQUEST_TYPE.UNKNOWN};if(b&&(c.parameters=b,b.hasOwnProperty(this.CONSTANTS.ERROR_DESCRIPTION)||b.hasOwnProperty(this.CONSTANTS.ACCESS_TOKEN)||b.hasOwnProperty(this.CONSTANTS.ID_TOKEN))){c.valid=!0;var d=\"\";if(!b.hasOwnProperty(\"state\"))return this.warn(\"No state returned\"),c;if(this.verbose(\"State: \"+b.state),d=b.state,c.stateResponse=d,this._matchState(c))return c;if(!c.stateMatch&&window.parent){c.requestType=this._requestType;for(var e=this._renewStates,f=0;f<e.length;f++)if(e[f]===c.stateResponse){c.stateMatch=!0;break}}}return c},AuthenticationContext.prototype._matchNonce=function(a){var b=this._getItem(this.CONSTANTS.STORAGE.NONCE_IDTOKEN);if(b){b=b.split(this.CONSTANTS.CACHE_DELIMETER);for(var c=0;c<b.length;c++)if(b[c]===a.profile.nonce)return!0}return!1},AuthenticationContext.prototype._matchState=function(a){var b=this._getItem(this.CONSTANTS.STORAGE.STATE_LOGIN);if(b){b=b.split(this.CONSTANTS.CACHE_DELIMETER);for(var c=0;c<b.length;c++)if(b[c]===a.stateResponse)return a.requestType=this.REQUEST_TYPE.LOGIN,a.stateMatch=!0,!0}var d=this._getItem(this.CONSTANTS.STORAGE.STATE_RENEW);if(d){d=d.split(this.CONSTANTS.CACHE_DELIMETER);for(var c=0;c<d.length;c++)if(d[c]===a.stateResponse)return a.requestType=this.REQUEST_TYPE.RENEW_TOKEN,a.stateMatch=!0,!0}return!1},AuthenticationContext.prototype._getResourceFromState=function(a){if(a){var b=a.indexOf(\"|\");if(b>-1&&b+1<a.length)return a.substring(b+1)}return\"\"},AuthenticationContext.prototype.saveTokenFromHash=function(a){this.info(\"State status:\"+a.stateMatch+\"; Request type:\"+a.requestType),this._saveItem(this.CONSTANTS.STORAGE.ERROR,\"\"),this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION,\"\");var b=this._getResourceFromState(a.stateResponse);if(a.parameters.hasOwnProperty(this.CONSTANTS.ERROR_DESCRIPTION))this.infoPii(\"Error :\"+a.parameters.error+\"; Error description:\"+a.parameters[this.CONSTANTS.ERROR_DESCRIPTION]),this._saveItem(this.CONSTANTS.STORAGE.ERROR,a.parameters.error),this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION,a.parameters[this.CONSTANTS.ERROR_DESCRIPTION]),a.requestType===this.REQUEST_TYPE.LOGIN&&(this._loginInProgress=!1,this._saveItem(this.CONSTANTS.STORAGE.LOGIN_ERROR,a.parameters.error_description));else if(a.stateMatch){this.info(\"State is right\"),a.parameters.hasOwnProperty(this.CONSTANTS.SESSION_STATE)&&this._saveItem(this.CONSTANTS.STORAGE.SESSION_STATE,a.parameters[this.CONSTANTS.SESSION_STATE]);var c;a.parameters.hasOwnProperty(this.CONSTANTS.ACCESS_TOKEN)&&(this.info(\"Fragment has access token\"),this._hasResource(b)||(c=this._getItem(this.CONSTANTS.STORAGE.TOKEN_KEYS)||\"\",this._saveItem(this.CONSTANTS.STORAGE.TOKEN_KEYS,c+b+this.CONSTANTS.RESOURCE_DELIMETER)),this._saveItem(this.CONSTANTS.STORAGE.ACCESS_TOKEN_KEY+b,a.parameters[this.CONSTANTS.ACCESS_TOKEN]),this._saveItem(this.CONSTANTS.STORAGE.EXPIRATION_KEY+b,this._expiresIn(a.parameters[this.CONSTANTS.EXPIRES_IN]))),a.parameters.hasOwnProperty(this.CONSTANTS.ID_TOKEN)&&(this.info(\"Fragment has id token\"),this._loginInProgress=!1,this._user=this._createUser(a.parameters[this.CONSTANTS.ID_TOKEN]),this._user&&this._user.profile?this._matchNonce(this._user)?(this._saveItem(this.CONSTANTS.STORAGE.IDTOKEN,a.parameters[this.CONSTANTS.ID_TOKEN]),b=this.config.loginResource?this.config.loginResource:this.config.clientId,this._hasResource(b)||(c=this._getItem(this.CONSTANTS.STORAGE.TOKEN_KEYS)||\"\",this._saveItem(this.CONSTANTS.STORAGE.TOKEN_KEYS,c+b+this.CONSTANTS.RESOURCE_DELIMETER)),this._saveItem(this.CONSTANTS.STORAGE.ACCESS_TOKEN_KEY+b,a.parameters[this.CONSTANTS.ID_TOKEN]),this._saveItem(this.CONSTANTS.STORAGE.EXPIRATION_KEY+b,this._user.profile.exp)):(this._saveItem(this.CONSTANTS.STORAGE.LOGIN_ERROR,\"Nonce received: \"+this._user.profile.nonce+\" is not same as requested: \"+this._getItem(this.CONSTANTS.STORAGE.NONCE_IDTOKEN)),this._user=null):(a.parameters.error=\"invalid id_token\",a.parameters.error_description=\"Invalid id_token. id_token: \"+a.parameters[this.CONSTANTS.ID_TOKEN],this._saveItem(this.CONSTANTS.STORAGE.ERROR,\"invalid id_token\"),this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION,\"Invalid id_token. id_token: \"+a.parameters[this.CONSTANTS.ID_TOKEN])))}else a.parameters.error=\"Invalid_state\",a.parameters.error_description=\"Invalid_state. state: \"+a.stateResponse,this._saveItem(this.CONSTANTS.STORAGE.ERROR,\"Invalid_state\"),this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION,\"Invalid_state. state: \"+a.stateResponse);this._saveItem(this.CONSTANTS.STORAGE.RENEW_STATUS+b,this.CONSTANTS.TOKEN_RENEW_STATUS_COMPLETED)},AuthenticationContext.prototype.getResourceForEndpoint=function(a){if(this.config&&this.config.anonymousEndpoints)for(var b=0;b<this.config.anonymousEndpoints.length;b++)if(a.indexOf(this.config.anonymousEndpoints[b])>-1)return null;if(this.config&&this.config.endpoints)for(var c in this.config.endpoints)if(a.indexOf(c)>-1)return this.config.endpoints[c];return a.indexOf(\"http://\")>-1||a.indexOf(\"https://\")>-1?this._getHostFromUri(a)===this._getHostFromUri(this.config.redirectUri)?this.config.loginResource:null:this.config.loginResource},AuthenticationContext.prototype._getHostFromUri=function(a){var b=String(a).replace(/^(https?:)\\/\\//,\"\");return b=b.split(\"/\")[0]},AuthenticationContext.prototype.handleWindowCallback=function(a){if(null==a&&(a=window.location.hash),this.isCallback(a)){var b=null,c=!1;this._openedWindows.length>0&&this._openedWindows[this._openedWindows.length-1].opener&&this._openedWindows[this._openedWindows.length-1].opener._adalInstance?(b=this._openedWindows[this._openedWindows.length-1].opener._adalInstance,c=!0):window.parent&&window.parent._adalInstance&&(b=window.parent._adalInstance);var d,e,f=b.getRequestInfo(a),g=null;e=c||window.parent!==window?b._callBackMappedToRenewStates[f.stateResponse]:b.callback,b.info(\"Returned from redirect url\"),b.saveTokenFromHash(f),f.requestType===this.REQUEST_TYPE.RENEW_TOKEN&&window.parent?(window.parent!==window?b.verbose(\"Window is in iframe, acquiring token silently\"):b.verbose(\"acquiring token interactive in progress\"),d=f.parameters[b.CONSTANTS.ACCESS_TOKEN]||f.parameters[b.CONSTANTS.ID_TOKEN],g=b.CONSTANTS.ACCESS_TOKEN):f.requestType===this.REQUEST_TYPE.LOGIN&&(d=f.parameters[b.CONSTANTS.ID_TOKEN],g=b.CONSTANTS.ID_TOKEN);var h=f.parameters[b.CONSTANTS.ERROR_DESCRIPTION],i=f.parameters[b.CONSTANTS.ERROR];try{e&&e(h,d,i,g)}catch(a){b.error(\"Error occurred in user defined callback function: \"+a)}window.parent!==window||c||(b.config.navigateToLoginRequestUrl?window.location.href=b._getItem(b.CONSTANTS.STORAGE.LOGIN_REQUEST):window.location.hash=\"\")}},AuthenticationContext.prototype._getNavigateUrl=function(a,b){var c=\"common\";this.config.tenant&&(c=this.config.tenant);var d=this.instance+c+\"/oauth2/authorize\"+this._serialize(a,this.config,b)+this._addLibMetadata();return this.info(\"Navigate url:\"+d),d},AuthenticationContext.prototype._extractIdToken=function(a){var b=this._decodeJwt(a);if(!b)return null;try{var c=b.JWSPayload,d=this._base64DecodeStringUrlSafe(c);return d?JSON.parse(d):(this.info(\"The returned id_token could not be base64 url safe decoded.\"),null)}catch(a){this.error(\"The returned id_token could not be decoded\",a)}return null},AuthenticationContext.prototype._base64DecodeStringUrlSafe=function(a){return a=a.replace(/-/g,\"+\").replace(/_/g,\"/\"),window.atob?decodeURIComponent(escape(window.atob(a))):decodeURIComponent(escape(this._decode(a)))},AuthenticationContext.prototype._decode=function(a){var b=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";a=String(a).replace(/=+$/,\"\");var c=a.length;if(c%4==1)throw new Error(\"The token to be decoded is not correctly encoded.\");for(var d,e,f,g,h,i,j,k,l=\"\",m=0;m<c;m+=4){if(d=b.indexOf(a.charAt(m)),e=b.indexOf(a.charAt(m+1)),f=b.indexOf(a.charAt(m+2)),g=b.indexOf(a.charAt(m+3)),m+2===c-1){h=d<<18|e<<12|f<<6,i=h>>16&255,j=h>>8&255,l+=String.fromCharCode(i,j);break}if(m+1===c-1){h=d<<18|e<<12,i=h>>16&255,l+=String.fromCharCode(i);break}h=d<<18|e<<12|f<<6|g,i=h>>16&255,j=h>>8&255,k=255&h,l+=String.fromCharCode(i,j,k)}return l},AuthenticationContext.prototype._decodeJwt=function(a){if(this._isEmpty(a))return null;var b=/^([^\\.\\s]*)\\.([^\\.\\s]+)\\.([^\\.\\s]*)$/,c=b.exec(a);return!c||c.length<4?(this.warn(\"The returned id_token is not parseable.\"),null):{header:c[1],JWSPayload:c[2],JWSSig:c[3]}},AuthenticationContext.prototype._convertUrlSafeToRegularBase64EncodedString=function(a){return a.replace(\"-\",\"+\").replace(\"_\",\"/\")},AuthenticationContext.prototype._serialize=function(a,b,c){var d=[];if(null!==b){d.push(\"?response_type=\"+a),d.push(\"client_id=\"+encodeURIComponent(b.clientId)),c&&d.push(\"resource=\"+encodeURIComponent(c)),d.push(\"redirect_uri=\"+encodeURIComponent(b.redirectUri)),d.push(\"state=\"+encodeURIComponent(b.state)),b.hasOwnProperty(\"slice\")&&d.push(\"slice=\"+encodeURIComponent(b.slice)),b.hasOwnProperty(\"extraQueryParameter\")&&d.push(b.extraQueryParameter);var e=b.correlationId?b.correlationId:this._guid();d.push(\"client-request-id=\"+encodeURIComponent(e))}return d.join(\"&\")},AuthenticationContext.prototype._deserialize=function(a){var b,c=/\\+/g,d=/([^&=]+)=([^&]*)/g,e=function(a){return decodeURIComponent(a.replace(c,\" \"))},f={};for(b=d.exec(a);b;)f[e(b[1])]=e(b[2]),b=d.exec(a);return f},AuthenticationContext.prototype._decimalToHex=function(a){for(var b=a.toString(16);b.length<2;)b=\"0\"+b;return b},AuthenticationContext.prototype._guid=function(){var a=window.crypto||window.msCrypto;if(a&&a.getRandomValues){var b=new Uint8Array(16);return a.getRandomValues(b),b[6]|=64,b[6]&=79,b[8]|=128,b[8]&=191,this._decimalToHex(b[0])+this._decimalToHex(b[1])+this._decimalToHex(b[2])+this._decimalToHex(b[3])+\"-\"+this._decimalToHex(b[4])+this._decimalToHex(b[5])+\"-\"+this._decimalToHex(b[6])+this._decimalToHex(b[7])+\"-\"+this._decimalToHex(b[8])+this._decimalToHex(b[9])+\"-\"+this._decimalToHex(b[10])+this._decimalToHex(b[11])+this._decimalToHex(b[12])+this._decimalToHex(b[13])+this._decimalToHex(b[14])+this._decimalToHex(b[15])}for(var c=\"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\",d=\"0123456789abcdef\",e=0,f=\"\",g=0;g<36;g++)\"-\"!==c[g]&&\"4\"!==c[g]&&(e=16*Math.random()|0),\"x\"===c[g]?f+=d[e]:\"y\"===c[g]?(e&=3,e|=8,f+=d[e]):f+=c[g];return f},AuthenticationContext.prototype._expiresIn=function(a){return a||(a=3599),this._now()+parseInt(a,10)},AuthenticationContext.prototype._now=function(){return Math.round((new Date).getTime()/1e3)},AuthenticationContext.prototype._addAdalFrame=function(a){if(void 0!==a){this.info(\"Add adal frame to document:\"+a);var b=document.getElementById(a);if(!b){if(document.createElement&&document.documentElement&&(window.opera||-1===window.navigator.userAgent.indexOf(\"MSIE 5.0\"))){var c=document.createElement(\"iframe\");c.setAttribute(\"id\",a),c.setAttribute(\"aria-hidden\",\"true\"),c.style.visibility=\"hidden\",c.style.position=\"absolute\",c.style.width=c.style.height=c.borderWidth=\"0px\",b=document.getElementsByTagName(\"body\")[0].appendChild(c)}else document.body&&document.body.insertAdjacentHTML&&document.body.insertAdjacentHTML(\"beforeEnd\",'<iframe name=\"'+a+'\" id=\"'+a+'\" style=\"display:none\"></iframe>');window.frames&&window.frames[a]&&(b=window.frames[a])}return b}},AuthenticationContext.prototype._saveItem=function(a,b,c){if(this.config&&this.config.cacheLocation&&\"localStorage\"===this.config.cacheLocation){if(!this._supportsLocalStorage())return this.info(\"Local storage is not supported\"),!1;if(c){var d=this._getItem(a)||\"\";localStorage.setItem(a,d+b+this.CONSTANTS.CACHE_DELIMETER)}else localStorage.setItem(a,b);return!0}return this._supportsSessionStorage()?(sessionStorage.setItem(a,b),!0):(this.info(\"Session storage is not supported\"),!1)},AuthenticationContext.prototype._getItem=function(a){return this.config&&this.config.cacheLocation&&\"localStorage\"===this.config.cacheLocation?this._supportsLocalStorage()?localStorage.getItem(a):(this.info(\"Local storage is not supported\"),null):this._supportsSessionStorage()?sessionStorage.getItem(a):(this.info(\"Session storage is not supported\"),null)},AuthenticationContext.prototype._supportsLocalStorage=function(){try{return!!window.localStorage&&(window.localStorage.setItem(\"storageTest\",\"A\"),\"A\"==window.localStorage.getItem(\"storageTest\")&&(window.localStorage.removeItem(\"storageTest\"),!window.localStorage.getItem(\"storageTest\")))}catch(a){return!1}},AuthenticationContext.prototype._supportsSessionStorage=function(){try{return!!window.sessionStorage&&(window.sessionStorage.setItem(\"storageTest\",\"A\"),\"A\"==window.sessionStorage.getItem(\"storageTest\")&&(window.sessionStorage.removeItem(\"storageTest\"),!window.sessionStorage.getItem(\"storageTest\")))}catch(a){return!1}},AuthenticationContext.prototype._cloneConfig=function(a){if(null===a||\"object\"!=typeof a)return a;var b={};for(var c in a)a.hasOwnProperty(c)&&(b[c]=a[c]);return b},AuthenticationContext.prototype._addLibMetadata=function(){return\"&x-client-SKU=Js&x-client-Ver=\"+this._libVersion()},AuthenticationContext.prototype.log=function(a,b,c,d){if(a<=Logging.level){if(!Logging.piiLoggingEnabled&&d)return;var e=(new Date).toUTCString(),f=\"\";f=this.config.correlationId?e+\":\"+this.config.correlationId+\"-\"+this._libVersion()+\"-\"+this.CONSTANTS.LEVEL_STRING_MAP[a]+\" \"+b:e+\":\"+this._libVersion()+\"-\"+this.CONSTANTS.LEVEL_STRING_MAP[a]+\" \"+b,c&&(f+=\"\\nstack:\\n\"+c.stack),Logging.log(f)}},AuthenticationContext.prototype.error=function(a,b){this.log(this.CONSTANTS.LOGGING_LEVEL.ERROR,a,b)},AuthenticationContext.prototype.warn=function(a){this.log(this.CONSTANTS.LOGGING_LEVEL.WARN,a,null)},AuthenticationContext.prototype.info=function(a){\r\nthis.log(this.CONSTANTS.LOGGING_LEVEL.INFO,a,null)},AuthenticationContext.prototype.verbose=function(a){this.log(this.CONSTANTS.LOGGING_LEVEL.VERBOSE,a,null)},AuthenticationContext.prototype.errorPii=function(a,b){this.log(this.CONSTANTS.LOGGING_LEVEL.ERROR,a,b,!0)},AuthenticationContext.prototype.warnPii=function(a){this.log(this.CONSTANTS.LOGGING_LEVEL.WARN,a,null,!0)},AuthenticationContext.prototype.infoPii=function(a){this.log(this.CONSTANTS.LOGGING_LEVEL.INFO,a,null,!0)},AuthenticationContext.prototype.verbosePii=function(a){this.log(this.CONSTANTS.LOGGING_LEVEL.VERBOSE,a,null,!0)},AuthenticationContext.prototype._libVersion=function(){return\"1.0.17\"},\"undefined\"!=typeof module&&module.exports&&(module.exports=AuthenticationContext,module.exports.inject=function(a){return new AuthenticationContext(a)}),AuthenticationContext}();","/**\r\n * A set of logging levels\r\n */\r\nexport var LogLevel;\r\n(function (LogLevel) {\r\n    LogLevel[LogLevel[\"Verbose\"] = 0] = \"Verbose\";\r\n    LogLevel[LogLevel[\"Info\"] = 1] = \"Info\";\r\n    LogLevel[LogLevel[\"Warning\"] = 2] = \"Warning\";\r\n    LogLevel[LogLevel[\"Error\"] = 3] = \"Error\";\r\n    LogLevel[LogLevel[\"Off\"] = 99] = \"Off\";\r\n})(LogLevel || (LogLevel = {}));\r\n//# sourceMappingURL=loglevel.js.map","/**\r\n * Class used to subscribe ILogListener and log messages throughout an application\r\n *\r\n */\r\nvar Logger = /** @class */ (function () {\r\n    function Logger() {\r\n    }\r\n    Object.defineProperty(Logger, \"activeLogLevel\", {\r\n        /**\r\n         * Gets or sets the active log level to apply for log filtering\r\n         */\r\n        get: function () {\r\n            return Logger.instance.activeLogLevel;\r\n        },\r\n        set: function (value) {\r\n            Logger.instance.activeLogLevel = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Logger, \"instance\", {\r\n        get: function () {\r\n            if (Logger._instance === undefined || Logger._instance === null) {\r\n                Logger._instance = new LoggerImpl();\r\n            }\r\n            return Logger._instance;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Adds ILogListener instances to the set of subscribed listeners\r\n     *\r\n     * @param listeners One or more listeners to subscribe to this log\r\n     */\r\n    Logger.subscribe = function () {\r\n        var listeners = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            listeners[_i] = arguments[_i];\r\n        }\r\n        listeners.map(function (listener) { return Logger.instance.subscribe(listener); });\r\n    };\r\n    /**\r\n     * Clears the subscribers collection, returning the collection before modifiction\r\n     */\r\n    Logger.clearSubscribers = function () {\r\n        return Logger.instance.clearSubscribers();\r\n    };\r\n    Object.defineProperty(Logger, \"count\", {\r\n        /**\r\n         * Gets the current subscriber count\r\n         */\r\n        get: function () {\r\n            return Logger.instance.count;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Writes the supplied string to the subscribed listeners\r\n     *\r\n     * @param message The message to write\r\n     * @param level [Optional] if supplied will be used as the level of the entry (Default: LogLevel.Info)\r\n     */\r\n    Logger.write = function (message, level) {\r\n        if (level === void 0) { level = 1 /* Info */; }\r\n        Logger.instance.log({ level: level, message: message });\r\n    };\r\n    /**\r\n     * Writes the supplied string to the subscribed listeners\r\n     *\r\n     * @param json The json object to stringify and write\r\n     * @param level [Optional] if supplied will be used as the level of the entry (Default: LogLevel.Info)\r\n     */\r\n    Logger.writeJSON = function (json, level) {\r\n        if (level === void 0) { level = 1 /* Info */; }\r\n        this.write(JSON.stringify(json), level);\r\n    };\r\n    /**\r\n     * Logs the supplied entry to the subscribed listeners\r\n     *\r\n     * @param entry The message to log\r\n     */\r\n    Logger.log = function (entry) {\r\n        Logger.instance.log(entry);\r\n    };\r\n    /**\r\n     * Logs an error object to the subscribed listeners\r\n     *\r\n     * @param err The error object\r\n     */\r\n    Logger.error = function (err) {\r\n        Logger.instance.log({ data: err, level: 3 /* Error */, message: err.message });\r\n    };\r\n    return Logger;\r\n}());\r\nexport { Logger };\r\nvar LoggerImpl = /** @class */ (function () {\r\n    function LoggerImpl(activeLogLevel, subscribers) {\r\n        if (activeLogLevel === void 0) { activeLogLevel = 2 /* Warning */; }\r\n        if (subscribers === void 0) { subscribers = []; }\r\n        this.activeLogLevel = activeLogLevel;\r\n        this.subscribers = subscribers;\r\n    }\r\n    LoggerImpl.prototype.subscribe = function (listener) {\r\n        this.subscribers.push(listener);\r\n    };\r\n    LoggerImpl.prototype.clearSubscribers = function () {\r\n        var s = this.subscribers.slice(0);\r\n        this.subscribers.length = 0;\r\n        return s;\r\n    };\r\n    Object.defineProperty(LoggerImpl.prototype, \"count\", {\r\n        get: function () {\r\n            return this.subscribers.length;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    LoggerImpl.prototype.write = function (message, level) {\r\n        if (level === void 0) { level = 1 /* Info */; }\r\n        this.log({ level: level, message: message });\r\n    };\r\n    LoggerImpl.prototype.log = function (entry) {\r\n        if (entry !== undefined && this.activeLogLevel <= entry.level) {\r\n            this.subscribers.map(function (subscriber) { return subscriber.log(entry); });\r\n        }\r\n    };\r\n    return LoggerImpl;\r\n}());\r\n//# sourceMappingURL=logger.js.map","/**\r\n * Implementation of LogListener which logs to the console\r\n *\r\n */\r\nvar ConsoleListener = /** @class */ (function () {\r\n    function ConsoleListener() {\r\n    }\r\n    /**\r\n     * Any associated data that a given logging listener may choose to log or ignore\r\n     *\r\n     * @param entry The information to be logged\r\n     */\r\n    ConsoleListener.prototype.log = function (entry) {\r\n        var msg = this.format(entry);\r\n        switch (entry.level) {\r\n            case 0 /* Verbose */:\r\n            case 1 /* Info */:\r\n                console.log(msg);\r\n                break;\r\n            case 2 /* Warning */:\r\n                console.warn(msg);\r\n                break;\r\n            case 3 /* Error */:\r\n                console.error(msg);\r\n                break;\r\n        }\r\n    };\r\n    /**\r\n     * Formats the message\r\n     *\r\n     * @param entry The information to format into a string\r\n     */\r\n    ConsoleListener.prototype.format = function (entry) {\r\n        var msg = [];\r\n        msg.push(\"Message: \" + entry.message);\r\n        if (entry.data !== undefined) {\r\n            try {\r\n                msg.push(\" Data: \" + JSON.stringify(entry.data));\r\n            }\r\n            catch (e) {\r\n                msg.push(\" Data: Error in stringify of supplied data \" + e);\r\n            }\r\n        }\r\n        return msg.join(\"\");\r\n    };\r\n    return ConsoleListener;\r\n}());\r\nexport { ConsoleListener };\r\n/**\r\n * Implementation of LogListener which logs to the supplied function\r\n *\r\n */\r\nvar FunctionListener = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of the FunctionListener class\r\n     *\r\n     * @constructor\r\n     * @param  method The method to which any logging data will be passed\r\n     */\r\n    function FunctionListener(method) {\r\n        this.method = method;\r\n    }\r\n    /**\r\n     * Any associated data that a given logging listener may choose to log or ignore\r\n     *\r\n     * @param entry The information to be logged\r\n     */\r\n    FunctionListener.prototype.log = function (entry) {\r\n        this.method(entry);\r\n    };\r\n    return FunctionListener;\r\n}());\r\nexport { FunctionListener };\r\n//# sourceMappingURL=listeners.js.map","import { RuntimeConfig, dateAdd, PnPClientStorage } from \"@pnp/common\";\r\nvar CachingOptions = /** @class */ (function () {\r\n    function CachingOptions(key) {\r\n        this.key = key;\r\n        this.expiration = dateAdd(new Date(), \"second\", RuntimeConfig.defaultCachingTimeoutSeconds);\r\n        this.storeName = RuntimeConfig.defaultCachingStore;\r\n    }\r\n    Object.defineProperty(CachingOptions.prototype, \"store\", {\r\n        get: function () {\r\n            if (this.storeName === \"local\") {\r\n                return CachingOptions.storage.local;\r\n            }\r\n            else {\r\n                return CachingOptions.storage.session;\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    CachingOptions.storage = new PnPClientStorage();\r\n    return CachingOptions;\r\n}());\r\nexport { CachingOptions };\r\nvar CachingParserWrapper = /** @class */ (function () {\r\n    function CachingParserWrapper(parser, cacheOptions) {\r\n        this.parser = parser;\r\n        this.cacheOptions = cacheOptions;\r\n    }\r\n    CachingParserWrapper.prototype.parse = function (response) {\r\n        var _this = this;\r\n        return this.parser.parse(response).then(function (r) { return _this.cacheData(r); });\r\n    };\r\n    CachingParserWrapper.prototype.cacheData = function (data) {\r\n        if (this.cacheOptions.store !== null) {\r\n            this.cacheOptions.store.put(this.cacheOptions.key, data, this.cacheOptions.expiration);\r\n        }\r\n        return data;\r\n    };\r\n    return CachingParserWrapper;\r\n}());\r\nexport { CachingParserWrapper };\r\n//# sourceMappingURL=caching.js.map","import * as tslib_1 from \"tslib\";\r\nimport { isFunc, hOP } from \"@pnp/common\";\r\nvar HttpRequestError = /** @class */ (function (_super) {\r\n    tslib_1.__extends(HttpRequestError, _super);\r\n    function HttpRequestError(message, response, status, statusText) {\r\n        if (status === void 0) { status = response.status; }\r\n        if (statusText === void 0) { statusText = response.statusText; }\r\n        var _this = _super.call(this, message) || this;\r\n        _this.response = response;\r\n        _this.status = status;\r\n        _this.statusText = statusText;\r\n        _this.isHttpRequestError = true;\r\n        return _this;\r\n    }\r\n    HttpRequestError.init = function (r) {\r\n        return r.clone().text().then(function (t) {\r\n            return new HttpRequestError(\"Error making HttpClient request in queryable [\" + r.status + \"] \" + r.statusText + \" ::> \" + t, r.clone());\r\n        });\r\n    };\r\n    return HttpRequestError;\r\n}(Error));\r\nexport { HttpRequestError };\r\nvar ODataParserBase = /** @class */ (function () {\r\n    function ODataParserBase() {\r\n        this.rawJson = {};\r\n    }\r\n    ODataParserBase.prototype.parse = function (r) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            if (_this.handleError(r, reject)) {\r\n                _this.parseImpl(r, resolve, reject);\r\n            }\r\n        });\r\n    };\r\n    ODataParserBase.prototype.parseImpl = function (r, resolve, reject) {\r\n        var _this = this;\r\n        if ((r.headers.has(\"Content-Length\") && parseFloat(r.headers.get(\"Content-Length\")) === 0) || r.status === 204) {\r\n            resolve({});\r\n        }\r\n        else {\r\n            // patch to handle cases of 200 response with no or whitespace only bodies (#487 & #545)\r\n            r.text()\r\n                .then(function (txt) { return txt.replace(/\\s/ig, \"\").length > 0 ? JSON.parse(txt) : {}; })\r\n                .then(function (json) { return resolve(_this.parseODataJSON(json)); })\r\n                .catch(function (e) { return reject(e); });\r\n        }\r\n    };\r\n    /**\r\n     * Handles a response with ok === false by parsing the body and creating a ProcessHttpClientResponseException\r\n     * which is passed to the reject delegate. This method returns true if there is no error, otherwise false\r\n     *\r\n     * @param r Current response object\r\n     * @param reject reject delegate for the surrounding promise\r\n     */\r\n    ODataParserBase.prototype.handleError = function (r, reject) {\r\n        if (!r.ok) {\r\n            HttpRequestError.init(r).then(reject);\r\n        }\r\n        return r.ok;\r\n    };\r\n    /**\r\n     * Normalizes the json response by removing the various nested levels\r\n     *\r\n     * @param json json object to parse\r\n     */\r\n    ODataParserBase.prototype.parseODataJSON = function (json) {\r\n        this.rawJson = json;\r\n        var result = json;\r\n        if (hOP(json, \"d\")) {\r\n            if (hOP(json.d, \"results\")) {\r\n                result = json.d.results;\r\n            }\r\n            else {\r\n                result = json.d;\r\n            }\r\n        }\r\n        else if (hOP(json, \"value\")) {\r\n            result = json.value;\r\n        }\r\n        return result;\r\n    };\r\n    return ODataParserBase;\r\n}());\r\nexport { ODataParserBase };\r\nvar ODataDefaultParser = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ODataDefaultParser, _super);\r\n    function ODataDefaultParser() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    return ODataDefaultParser;\r\n}(ODataParserBase));\r\nexport { ODataDefaultParser };\r\nvar TextParser = /** @class */ (function (_super) {\r\n    tslib_1.__extends(TextParser, _super);\r\n    function TextParser() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    TextParser.prototype.parseImpl = function (r, resolve) {\r\n        r.text().then(resolve);\r\n    };\r\n    return TextParser;\r\n}(ODataParserBase));\r\nexport { TextParser };\r\nvar BlobParser = /** @class */ (function (_super) {\r\n    tslib_1.__extends(BlobParser, _super);\r\n    function BlobParser() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    BlobParser.prototype.parseImpl = function (r, resolve) {\r\n        r.blob().then(resolve);\r\n    };\r\n    return BlobParser;\r\n}(ODataParserBase));\r\nexport { BlobParser };\r\nvar JSONParser = /** @class */ (function (_super) {\r\n    tslib_1.__extends(JSONParser, _super);\r\n    function JSONParser() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    JSONParser.prototype.parseImpl = function (r, resolve) {\r\n        r.json().then(resolve);\r\n    };\r\n    return JSONParser;\r\n}(ODataParserBase));\r\nexport { JSONParser };\r\nvar BufferParser = /** @class */ (function (_super) {\r\n    tslib_1.__extends(BufferParser, _super);\r\n    function BufferParser() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    BufferParser.prototype.parseImpl = function (r, resolve) {\r\n        if (isFunc(r.arrayBuffer)) {\r\n            r.arrayBuffer().then(resolve);\r\n        }\r\n        else {\r\n            r.buffer().then(resolve);\r\n        }\r\n    };\r\n    return BufferParser;\r\n}(ODataParserBase));\r\nexport { BufferParser };\r\nvar LambdaParser = /** @class */ (function (_super) {\r\n    tslib_1.__extends(LambdaParser, _super);\r\n    function LambdaParser(parser) {\r\n        var _this = _super.call(this) || this;\r\n        _this.parser = parser;\r\n        return _this;\r\n    }\r\n    LambdaParser.prototype.parseImpl = function (r, resolve) {\r\n        this.parser(r).then(resolve);\r\n    };\r\n    return LambdaParser;\r\n}(ODataParserBase));\r\nexport { LambdaParser };\r\n//# sourceMappingURL=parsers.js.map","import * as tslib_1 from \"tslib\";\r\nimport { extend, isFunc, hOP } from \"@pnp/common\";\r\nimport { Logger } from \"@pnp/logging\";\r\nimport { CachingOptions, CachingParserWrapper } from \"./caching\";\r\n/**\r\n * Resolves the context's result value\r\n *\r\n * @param context The current context\r\n */\r\nfunction returnResult(context) {\r\n    Logger.log({\r\n        data: Logger.activeLogLevel === 0 /* Verbose */ ? context.result : {},\r\n        level: 1 /* Info */,\r\n        message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Returning result from pipeline. Set logging to verbose to see data.\",\r\n    });\r\n    return Promise.resolve(context.result);\r\n}\r\n/**\r\n * Sets the result on the context\r\n */\r\nexport function setResult(context, value) {\r\n    return new Promise(function (resolve) {\r\n        context.result = value;\r\n        context.hasResult = true;\r\n        resolve(context);\r\n    });\r\n}\r\n/**\r\n * Invokes the next method in the provided context's pipeline\r\n *\r\n * @param c The current request context\r\n */\r\nfunction next(c) {\r\n    if (c.pipeline.length > 0) {\r\n        return c.pipeline.shift()(c);\r\n    }\r\n    else {\r\n        return Promise.resolve(c);\r\n    }\r\n}\r\n/**\r\n * Executes the current request context's pipeline\r\n *\r\n * @param context Current context\r\n */\r\nexport function pipe(context) {\r\n    if (context.pipeline.length < 1) {\r\n        Logger.write(\"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Request pipeline contains no methods!\", 2 /* Warning */);\r\n    }\r\n    var promise = next(context).then(function (ctx) { return returnResult(ctx); }).catch(function (e) {\r\n        Logger.error(e);\r\n        throw e;\r\n    });\r\n    if (context.isBatched) {\r\n        // this will block the batch's execute method from returning until the child requets have been resolved\r\n        context.batch.addResolveBatchDependency(promise);\r\n    }\r\n    return promise;\r\n}\r\n/**\r\n * decorator factory applied to methods in the pipeline to control behavior\r\n */\r\nexport function requestPipelineMethod(alwaysRun) {\r\n    if (alwaysRun === void 0) { alwaysRun = false; }\r\n    return function (target, propertyKey, descriptor) {\r\n        var method = descriptor.value;\r\n        descriptor.value = function () {\r\n            var args = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                args[_i] = arguments[_i];\r\n            }\r\n            // if we have a result already in the pipeline, pass it along and don't call the tagged method\r\n            if (!alwaysRun && args.length > 0 && hOP(args[0], \"hasResult\") && args[0].hasResult) {\r\n                Logger.write(\"[\" + args[0].requestId + \"] (\" + (new Date()).getTime() + \") Skipping request pipeline method \" + propertyKey + \", existing result in pipeline.\", 0 /* Verbose */);\r\n                return Promise.resolve(args[0]);\r\n            }\r\n            // apply the tagged method\r\n            Logger.write(\"[\" + args[0].requestId + \"] (\" + (new Date()).getTime() + \") Calling request pipeline method \" + propertyKey + \".\", 0 /* Verbose */);\r\n            // then chain the next method in the context's pipeline - allows for dynamic pipeline\r\n            return method.apply(target, args).then(function (ctx) { return next(ctx); });\r\n        };\r\n    };\r\n}\r\n/**\r\n * Contains the methods used within the request pipeline\r\n */\r\nvar PipelineMethods = /** @class */ (function () {\r\n    function PipelineMethods() {\r\n    }\r\n    /**\r\n     * Logs the start of the request\r\n     */\r\n    PipelineMethods.logStart = function (context) {\r\n        return new Promise(function (resolve) {\r\n            Logger.log({\r\n                data: Logger.activeLogLevel === 1 /* Info */ ? {} : context,\r\n                level: 1 /* Info */,\r\n                message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Beginning \" + context.verb + \" request (\" + context.requestAbsoluteUrl + \")\",\r\n            });\r\n            resolve(context);\r\n        });\r\n    };\r\n    /**\r\n     * Handles caching of the request\r\n     */\r\n    PipelineMethods.caching = function (context) {\r\n        return new Promise(function (resolve) {\r\n            // handle caching, if applicable\r\n            if (context.isCached) {\r\n                Logger.write(\"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Caching is enabled for request, checking cache...\", 1 /* Info */);\r\n                var cacheOptions = new CachingOptions(context.requestAbsoluteUrl.toLowerCase());\r\n                if (context.cachingOptions !== undefined) {\r\n                    cacheOptions = extend(cacheOptions, context.cachingOptions);\r\n                }\r\n                // we may not have a valid store\r\n                if (cacheOptions.store !== null) {\r\n                    // check if we have the data in cache and if so resolve the promise and return\r\n                    var data = cacheOptions.store.get(cacheOptions.key);\r\n                    if (data !== null) {\r\n                        // ensure we clear any held batch dependency we are resolving from the cache\r\n                        Logger.log({\r\n                            data: Logger.activeLogLevel === 1 /* Info */ ? {} : data,\r\n                            level: 1 /* Info */,\r\n                            message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Value returned from cache.\",\r\n                        });\r\n                        if (isFunc(context.batchDependency)) {\r\n                            context.batchDependency();\r\n                        }\r\n                        // handle the case where a parser needs to take special actions with a cached result\r\n                        if (hOP(context.parser, \"hydrate\")) {\r\n                            data = context.parser.hydrate(data);\r\n                        }\r\n                        return setResult(context, data).then(function (ctx) { return resolve(ctx); });\r\n                    }\r\n                }\r\n                Logger.write(\"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Value not found in cache.\", 1 /* Info */);\r\n                // if we don't then wrap the supplied parser in the caching parser wrapper\r\n                // and send things on their way\r\n                context.parser = new CachingParserWrapper(context.parser, cacheOptions);\r\n            }\r\n            return resolve(context);\r\n        });\r\n    };\r\n    /**\r\n     * Sends the request\r\n     */\r\n    PipelineMethods.send = function (context) {\r\n        return new Promise(function (resolve, reject) {\r\n            // send or batch the request\r\n            if (context.isBatched) {\r\n                // we are in a batch, so add to batch, remove dependency, and resolve with the batch's promise\r\n                var p = context.batch.add(context.requestAbsoluteUrl, context.verb, context.options, context.parser, context.requestId);\r\n                // we release the dependency here to ensure the batch does not execute until the request is added to the batch\r\n                if (isFunc(context.batchDependency)) {\r\n                    context.batchDependency();\r\n                }\r\n                Logger.write(\"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Batching request in batch \" + context.batch.batchId + \".\", 1 /* Info */);\r\n                // we set the result as the promise which will be resolved by the batch's execution\r\n                resolve(setResult(context, p));\r\n            }\r\n            else {\r\n                Logger.write(\"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Sending request.\", 1 /* Info */);\r\n                // we are not part of a batch, so proceed as normal\r\n                var client = context.clientFactory();\r\n                var opts = extend(context.options || {}, { method: context.verb });\r\n                client.fetch(context.requestAbsoluteUrl, opts)\r\n                    .then(function (response) { return context.parser.parse(response); })\r\n                    .then(function (result) { return setResult(context, result); })\r\n                    .then(function (ctx) { return resolve(ctx); })\r\n                    .catch(function (e) { return reject(e); });\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Logs the end of the request\r\n     */\r\n    PipelineMethods.logEnd = function (context) {\r\n        return new Promise(function (resolve) {\r\n            if (context.isBatched) {\r\n                Logger.log({\r\n                    data: Logger.activeLogLevel === 1 /* Info */ ? {} : context,\r\n                    level: 1 /* Info */,\r\n                    message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") \" + context.verb + \" request will complete in batch \" + context.batch.batchId + \".\",\r\n                });\r\n            }\r\n            else {\r\n                Logger.log({\r\n                    data: Logger.activeLogLevel === 1 /* Info */ ? {} : context,\r\n                    level: 1 /* Info */,\r\n                    message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Completing \" + context.verb + \" request.\",\r\n                });\r\n            }\r\n            resolve(context);\r\n        });\r\n    };\r\n    tslib_1.__decorate([\r\n        requestPipelineMethod(true)\r\n    ], PipelineMethods, \"logStart\", null);\r\n    tslib_1.__decorate([\r\n        requestPipelineMethod()\r\n    ], PipelineMethods, \"caching\", null);\r\n    tslib_1.__decorate([\r\n        requestPipelineMethod()\r\n    ], PipelineMethods, \"send\", null);\r\n    tslib_1.__decorate([\r\n        requestPipelineMethod(true)\r\n    ], PipelineMethods, \"logEnd\", null);\r\n    return PipelineMethods;\r\n}());\r\nexport { PipelineMethods };\r\nexport function getDefaultPipeline() {\r\n    return [\r\n        PipelineMethods.logStart,\r\n        PipelineMethods.caching,\r\n        PipelineMethods.send,\r\n        PipelineMethods.logEnd,\r\n    ].slice(0);\r\n}\r\n//# sourceMappingURL=pipeline.js.map","import * as tslib_1 from \"tslib\";\r\nimport { combine, RuntimeConfig, mergeOptions, objectDefinedNotNull, isArray, } from \"@pnp/common\";\r\nimport { ODataDefaultParser, JSONParser } from \"./parsers\";\r\nimport { getDefaultPipeline, pipe, } from \"./pipeline\";\r\nvar Queryable = /** @class */ (function () {\r\n    function Queryable() {\r\n        this._query = new Map();\r\n        this._options = {};\r\n        this._url = \"\";\r\n        this._parentUrl = \"\";\r\n        this._useCaching = false;\r\n        this._cachingOptions = null;\r\n        this._cloneParentWasCaching = false;\r\n        this._cloneParentCacheOptions = null;\r\n        this._requestPipeline = null;\r\n    }\r\n    /**\r\n    * Gets the currentl url\r\n    *\r\n    */\r\n    Queryable.prototype.toUrl = function () {\r\n        return this._url;\r\n    };\r\n    /**\r\n     * Directly concatonates the supplied string to the current url, not normalizing \"/\" chars\r\n     *\r\n     * @param pathPart The string to concatonate to the url\r\n     */\r\n    Queryable.prototype.concat = function (pathPart) {\r\n        this._url += pathPart;\r\n        return this;\r\n    };\r\n    Object.defineProperty(Queryable.prototype, \"query\", {\r\n        /**\r\n         * Provides access to the query builder for this url\r\n         *\r\n         */\r\n        get: function () {\r\n            return this._query;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Sets custom options for current object and all derived objects accessible via chaining\r\n     *\r\n     * @param options custom options\r\n     */\r\n    Queryable.prototype.configure = function (options) {\r\n        mergeOptions(this._options, options);\r\n        return this;\r\n    };\r\n    /**\r\n     * Configures this instance from the configure options of the supplied instance\r\n     *\r\n     * @param o Instance from which options should be taken\r\n     */\r\n    Queryable.prototype.configureFrom = function (o) {\r\n        mergeOptions(this._options, o._options);\r\n        return this;\r\n    };\r\n    /**\r\n     * Enables caching for this request\r\n     *\r\n     * @param options Defines the options used when caching this request\r\n     */\r\n    Queryable.prototype.usingCaching = function (options) {\r\n        if (!RuntimeConfig.globalCacheDisable) {\r\n            this._useCaching = true;\r\n            if (options !== undefined) {\r\n                this._cachingOptions = options;\r\n            }\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Allows you to set a request specific processing pipeline\r\n     *\r\n     * @param pipeline The set of methods, in order, to execute a given request\r\n     */\r\n    Queryable.prototype.withPipeline = function (pipeline) {\r\n        this._requestPipeline = pipeline.slice(0);\r\n        return this;\r\n    };\r\n    Queryable.prototype.getCore = function (parser, options) {\r\n        if (parser === void 0) { parser = new JSONParser(); }\r\n        if (options === void 0) { options = {}; }\r\n        // Fix for #304 - when we clone objects we in some cases then execute a get request\r\n        // in these cases the caching settings were getting dropped from the request\r\n        // this tracks if the object from which this was cloned was caching and applies that to an immediate get request\r\n        // does not affect objects cloned from this as we are using different fields to track the settings so it won't\r\n        // be triggered\r\n        if (this._cloneParentWasCaching) {\r\n            this.usingCaching(this._cloneParentCacheOptions);\r\n        }\r\n        return this.reqImpl(\"GET\", options, parser);\r\n    };\r\n    Queryable.prototype.postCore = function (options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (parser === void 0) { parser = new JSONParser(); }\r\n        return this.reqImpl(\"POST\", options, parser);\r\n    };\r\n    Queryable.prototype.patchCore = function (options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (parser === void 0) { parser = new JSONParser(); }\r\n        return this.reqImpl(\"PATCH\", options, parser);\r\n    };\r\n    Queryable.prototype.deleteCore = function (options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (parser === void 0) { parser = new JSONParser(); }\r\n        return this.reqImpl(\"DELETE\", options, parser);\r\n    };\r\n    Queryable.prototype.putCore = function (options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (parser === void 0) { parser = new JSONParser(); }\r\n        return this.reqImpl(\"PUT\", options, parser);\r\n    };\r\n    Queryable.prototype.reqImpl = function (method, options, parser) {\r\n        var _this = this;\r\n        if (options === void 0) { options = {}; }\r\n        return this.getRequestPipeline(method, options, parser)\r\n            .then(function (pipeline) { return _this.toRequestContext(method, options, parser, pipeline); })\r\n            .then(function (context) { return pipe(context); });\r\n    };\r\n    /**\r\n     * Appends the given string and normalizes \"/\" chars\r\n     *\r\n     * @param pathPart The string to append\r\n     */\r\n    Queryable.prototype.append = function (pathPart) {\r\n        this._url = combine(this._url, pathPart);\r\n    };\r\n    Object.defineProperty(Queryable.prototype, \"parentUrl\", {\r\n        /**\r\n         * Gets the parent url used when creating this instance\r\n         *\r\n         */\r\n        get: function () {\r\n            return this._parentUrl;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Extends this queryable from the provided parent\r\n     *\r\n     * @param parent Parent queryable from which we will derive a base url\r\n     * @param path Additional path\r\n     */\r\n    Queryable.prototype.extend = function (parent, path) {\r\n        this._parentUrl = parent._url;\r\n        this._url = combine(this._parentUrl, path || \"\");\r\n        this.configureFrom(parent);\r\n    };\r\n    /**\r\n     * Configures a cloned object from this instance\r\n     *\r\n     * @param clone\r\n     */\r\n    Queryable.prototype._clone = function (clone, _0) {\r\n        clone.configureFrom(this);\r\n        if (this._useCaching) {\r\n            clone._cloneParentWasCaching = true;\r\n            clone._cloneParentCacheOptions = this._cachingOptions;\r\n        }\r\n        return clone;\r\n    };\r\n    /**\r\n     * Handles getting the request pipeline to run for a given request\r\n     */\r\n    // @ts-ignore\r\n    // justified because we want to show that all these arguments are passed to the method so folks inheriting and potentially overriding\r\n    // clearly see how the method is invoked inside the class\r\n    Queryable.prototype.getRequestPipeline = function (method, options, parser) {\r\n        var _this = this;\r\n        if (options === void 0) { options = {}; }\r\n        return new Promise(function (resolve) {\r\n            if (objectDefinedNotNull(_this._requestPipeline) && isArray(_this._requestPipeline)) {\r\n                resolve(_this._requestPipeline);\r\n            }\r\n            else {\r\n                resolve(getDefaultPipeline());\r\n            }\r\n        });\r\n    };\r\n    return Queryable;\r\n}());\r\nexport { Queryable };\r\nvar ODataQueryable = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ODataQueryable, _super);\r\n    function ODataQueryable() {\r\n        var _this = _super.call(this) || this;\r\n        _this._batch = null;\r\n        _this._batchDependency = null;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Adds this query to the supplied batch\r\n     *\r\n     * @example\r\n     * ```\r\n     *\r\n     * let b = pnp.sp.createBatch();\r\n     * pnp.sp.web.inBatch(b).get().then(...);\r\n     * b.execute().then(...)\r\n     * ```\r\n     */\r\n    ODataQueryable.prototype.inBatch = function (batch) {\r\n        if (this.batch !== null) {\r\n            throw Error(\"This query is already part of a batch.\");\r\n        }\r\n        if (objectDefinedNotNull(batch)) {\r\n            this._batch = batch;\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Gets the currentl url\r\n     *\r\n     */\r\n    ODataQueryable.prototype.toUrl = function () {\r\n        return this._url;\r\n    };\r\n    /**\r\n     * Executes the currently built request\r\n     *\r\n     * @param parser Allows you to specify a parser to handle the result\r\n     * @param getOptions The options used for this request\r\n     */\r\n    ODataQueryable.prototype.get = function (parser, options) {\r\n        if (parser === void 0) { parser = new ODataDefaultParser(); }\r\n        if (options === void 0) { options = {}; }\r\n        return this.getCore(parser, options);\r\n    };\r\n    ODataQueryable.prototype.getCore = function (parser, options) {\r\n        if (parser === void 0) { parser = new ODataDefaultParser(); }\r\n        if (options === void 0) { options = {}; }\r\n        return _super.prototype.getCore.call(this, parser, options);\r\n    };\r\n    ODataQueryable.prototype.postCore = function (options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (parser === void 0) { parser = new ODataDefaultParser(); }\r\n        return _super.prototype.postCore.call(this, options, parser);\r\n    };\r\n    ODataQueryable.prototype.patchCore = function (options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (parser === void 0) { parser = new ODataDefaultParser(); }\r\n        return _super.prototype.patchCore.call(this, options, parser);\r\n    };\r\n    ODataQueryable.prototype.deleteCore = function (options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (parser === void 0) { parser = new ODataDefaultParser(); }\r\n        return _super.prototype.deleteCore.call(this, options, parser);\r\n    };\r\n    ODataQueryable.prototype.putCore = function (options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (parser === void 0) { parser = new ODataDefaultParser(); }\r\n        return _super.prototype.putCore.call(this, options, parser);\r\n    };\r\n    ODataQueryable.prototype.reqImpl = function (method, options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (this.hasBatch) {\r\n            this._batchDependency = this.addBatchDependency();\r\n        }\r\n        return _super.prototype.reqImpl.call(this, method, options, parser);\r\n    };\r\n    /**\r\n     * Blocks a batch call from occuring, MUST be cleared by calling the returned function\r\n    */\r\n    ODataQueryable.prototype.addBatchDependency = function () {\r\n        if (this._batch !== null) {\r\n            return this._batch.addDependency();\r\n        }\r\n        return function () { return null; };\r\n    };\r\n    Object.defineProperty(ODataQueryable.prototype, \"hasBatch\", {\r\n        /**\r\n         * Indicates if the current query has a batch associated\r\n         *\r\n         */\r\n        get: function () {\r\n            return objectDefinedNotNull(this._batch);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ODataQueryable.prototype, \"batch\", {\r\n        /**\r\n         * The batch currently associated with this query or null\r\n         *\r\n         */\r\n        get: function () {\r\n            return this.hasBatch ? this._batch : null;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Configures a cloned object from this instance\r\n     *\r\n     * @param clone\r\n     */\r\n    ODataQueryable.prototype._clone = function (clone, cloneSettings) {\r\n        clone = _super.prototype._clone.call(this, clone, cloneSettings);\r\n        if (cloneSettings.includeBatch) {\r\n            clone = clone.inBatch(this._batch);\r\n        }\r\n        return clone;\r\n    };\r\n    return ODataQueryable;\r\n}(Queryable));\r\nexport { ODataQueryable };\r\n//# sourceMappingURL=queryable.js.map","import { getGUID } from \"@pnp/common\";\r\nvar ODataBatch = /** @class */ (function () {\r\n    function ODataBatch(_batchId) {\r\n        if (_batchId === void 0) { _batchId = getGUID(); }\r\n        this._batchId = _batchId;\r\n        this._reqs = [];\r\n        this._deps = [];\r\n        this._rDeps = [];\r\n    }\r\n    Object.defineProperty(ODataBatch.prototype, \"batchId\", {\r\n        get: function () {\r\n            return this._batchId;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ODataBatch.prototype, \"requests\", {\r\n        /**\r\n         * The requests contained in this batch\r\n         */\r\n        get: function () {\r\n            return this._reqs;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     *\r\n     * @param url Request url\r\n     * @param method Request method (GET, POST, etc)\r\n     * @param options Any request options\r\n     * @param parser The parser used to handle the eventual return from the query\r\n     * @param id An identifier used to track a request within a batch\r\n     */\r\n    ODataBatch.prototype.add = function (url, method, options, parser, id) {\r\n        var info = {\r\n            id: id,\r\n            method: method.toUpperCase(),\r\n            options: options,\r\n            parser: parser,\r\n            reject: null,\r\n            resolve: null,\r\n            url: url,\r\n        };\r\n        var p = new Promise(function (resolve, reject) {\r\n            info.resolve = resolve;\r\n            info.reject = reject;\r\n        });\r\n        this._reqs.push(info);\r\n        return p;\r\n    };\r\n    /**\r\n     * Adds a dependency insuring that some set of actions will occur before a batch is processed.\r\n     * MUST be cleared using the returned resolve delegate to allow batches to run\r\n     */\r\n    ODataBatch.prototype.addDependency = function () {\r\n        var resolver = function () { return void (0); };\r\n        this._deps.push(new Promise(function (resolve) {\r\n            resolver = resolve;\r\n        }));\r\n        return resolver;\r\n    };\r\n    /**\r\n     * The batch's execute method will not resolve util any promises added here resolve\r\n     *\r\n     * @param p The dependent promise\r\n     */\r\n    ODataBatch.prototype.addResolveBatchDependency = function (p) {\r\n        this._rDeps.push(p);\r\n    };\r\n    /**\r\n     * Execute the current batch and resolve the associated promises\r\n     *\r\n     * @returns A promise which will be resolved once all of the batch's child promises have resolved\r\n     */\r\n    ODataBatch.prototype.execute = function () {\r\n        var _this = this;\r\n        // we need to check the dependencies twice due to how different engines handle things.\r\n        // We can get a second set of promises added during the first set resolving\r\n        return Promise.all(this._deps)\r\n            .then(function () { return Promise.all(_this._deps); })\r\n            .then(function () { return _this.executeImpl(); })\r\n            .then(function () { return Promise.all(_this._rDeps); })\r\n            .then(function () { return void (0); });\r\n    };\r\n    return ODataBatch;\r\n}());\r\nexport { ODataBatch };\r\n//# sourceMappingURL=odatabatch.js.map","import { stringIsNullOrEmpty } from \"@pnp/common\";\r\nexport function extractWebUrl(candidateUrl) {\r\n    if (stringIsNullOrEmpty(candidateUrl)) {\r\n        return \"\";\r\n    }\r\n    var index = candidateUrl.indexOf(\"_api/\");\r\n    if (index < 0) {\r\n        index = candidateUrl.indexOf(\"_vti_bin/\");\r\n    }\r\n    if (index > -1) {\r\n        return candidateUrl.substr(0, index);\r\n    }\r\n    // if all else fails just give them what they gave us back\r\n    return candidateUrl;\r\n}\r\n//# sourceMappingURL=extractweburl.js.map","import * as tslib_1 from \"tslib\";\r\nimport { extend, combine, hOP } from \"@pnp/common\";\r\nimport { Logger } from \"@pnp/logging\";\r\nimport { ODataParserBase } from \"@pnp/odata\";\r\nimport { extractWebUrl } from \"./utils/extractweburl\";\r\nexport function odataUrlFrom(candidate) {\r\n    var parts = [];\r\n    var s = [\"odata.type\", \"odata.editLink\", \"__metadata\", \"odata.metadata\"];\r\n    if (hOP(candidate, s[0]) && candidate[s[0]] === \"SP.Web\") {\r\n        // webs return an absolute url in the editLink\r\n        if (hOP(candidate, s[1])) {\r\n            parts.push(candidate[s[1]]);\r\n        }\r\n        else if (hOP(candidate, s[2])) {\r\n            // we are dealing with verbose, which has an absolute uri\r\n            parts.push(candidate.__metadata.uri);\r\n        }\r\n    }\r\n    else {\r\n        if (hOP(candidate, s[3]) && hOP(candidate, s[1])) {\r\n            // we are dealign with minimal metadata (default)\r\n            parts.push(extractWebUrl(candidate[s[3]]), \"_api\", candidate[s[1]]);\r\n        }\r\n        else if (hOP(candidate, s[1])) {\r\n            parts.push(\"_api\", candidate[s[1]]);\r\n        }\r\n        else if (hOP(candidate, s[2])) {\r\n            // we are dealing with verbose, which has an absolute uri\r\n            parts.push(candidate.__metadata.uri);\r\n        }\r\n    }\r\n    if (parts.length < 1) {\r\n        Logger.write(\"No uri information found in ODataEntity parsing, chaining will fail for this object.\", 2 /* Warning */);\r\n        return \"\";\r\n    }\r\n    return combine.apply(void 0, parts);\r\n}\r\nvar SPODataEntityParserImpl = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SPODataEntityParserImpl, _super);\r\n    function SPODataEntityParserImpl(factory) {\r\n        var _this = _super.call(this) || this;\r\n        _this.factory = factory;\r\n        _this.hydrate = function (d) {\r\n            var o = new _this.factory(odataUrlFrom(d), null);\r\n            return extend(o, d);\r\n        };\r\n        return _this;\r\n    }\r\n    SPODataEntityParserImpl.prototype.parse = function (r) {\r\n        var _this = this;\r\n        return _super.prototype.parse.call(this, r).then(function (d) {\r\n            var o = new _this.factory(odataUrlFrom(d), null);\r\n            return extend(o, d);\r\n        });\r\n    };\r\n    return SPODataEntityParserImpl;\r\n}(ODataParserBase));\r\nvar SPODataEntityArrayParserImpl = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SPODataEntityArrayParserImpl, _super);\r\n    function SPODataEntityArrayParserImpl(factory) {\r\n        var _this = _super.call(this) || this;\r\n        _this.factory = factory;\r\n        _this.hydrate = function (d) {\r\n            return d.map(function (v) {\r\n                var o = new _this.factory(odataUrlFrom(v), null);\r\n                return extend(o, v);\r\n            });\r\n        };\r\n        return _this;\r\n    }\r\n    SPODataEntityArrayParserImpl.prototype.parse = function (r) {\r\n        var _this = this;\r\n        return _super.prototype.parse.call(this, r).then(function (d) {\r\n            return d.map(function (v) {\r\n                var o = new _this.factory(odataUrlFrom(v), null);\r\n                return extend(o, v);\r\n            });\r\n        });\r\n    };\r\n    return SPODataEntityArrayParserImpl;\r\n}(ODataParserBase));\r\nexport function spODataEntity(factory) {\r\n    return new SPODataEntityParserImpl(factory);\r\n}\r\nexport function spODataEntityArray(factory) {\r\n    return new SPODataEntityArrayParserImpl(factory);\r\n}\r\n//# sourceMappingURL=odata.js.map","import { combine, extend } from \"@pnp/common\";\r\nimport { ODataDefaultParser } from \"@pnp/odata\";\r\nimport { SPRuntimeConfig } from \"../config/splibconfig\";\r\nvar CachedDigest = /** @class */ (function () {\r\n    function CachedDigest() {\r\n    }\r\n    return CachedDigest;\r\n}());\r\nexport { CachedDigest };\r\n// allows for the caching of digests across all HttpClient's which each have their own DigestCache wrapper.\r\nvar digests = new Map();\r\nvar DigestCache = /** @class */ (function () {\r\n    function DigestCache(_httpClient, _digests) {\r\n        if (_digests === void 0) { _digests = digests; }\r\n        this._httpClient = _httpClient;\r\n        this._digests = _digests;\r\n    }\r\n    DigestCache.prototype.getDigest = function (webUrl) {\r\n        var _this = this;\r\n        var cachedDigest = this._digests.get(webUrl);\r\n        if (cachedDigest !== undefined) {\r\n            var now = new Date();\r\n            if (now < cachedDigest.expiration) {\r\n                return Promise.resolve(cachedDigest.value);\r\n            }\r\n        }\r\n        var url = combine(webUrl, \"/_api/contextinfo\");\r\n        var headers = {\r\n            \"Accept\": \"application/json;odata=verbose\",\r\n            \"Content-Type\": \"application/json;odata=verbose;charset=utf-8\",\r\n        };\r\n        return this._httpClient.fetchRaw(url, {\r\n            cache: \"no-cache\",\r\n            credentials: \"same-origin\",\r\n            headers: extend(headers, SPRuntimeConfig.headers, true),\r\n            method: \"POST\",\r\n        }).then(function (response) {\r\n            var parser = new ODataDefaultParser();\r\n            return parser.parse(response).then(function (d) { return d.GetContextWebInformation; });\r\n        }).then(function (data) {\r\n            var newCachedDigest = new CachedDigest();\r\n            newCachedDigest.value = data.FormDigestValue;\r\n            var seconds = data.FormDigestTimeoutSeconds;\r\n            var expiration = new Date();\r\n            expiration.setTime(expiration.getTime() + 1000 * seconds);\r\n            newCachedDigest.expiration = expiration;\r\n            _this._digests.set(webUrl, newCachedDigest);\r\n            return newCachedDigest.value;\r\n        });\r\n    };\r\n    DigestCache.prototype.clear = function () {\r\n        this._digests.clear();\r\n    };\r\n    return DigestCache;\r\n}());\r\nexport { DigestCache };\r\n//# sourceMappingURL=digestcache.js.map","import { DigestCache } from \"./digestcache\";\r\nimport { extend, mergeHeaders, getCtxCallback, } from \"@pnp/common\";\r\nimport { SPRuntimeConfig } from \"../config/splibconfig\";\r\nimport { extractWebUrl } from \"../utils/extractweburl\";\r\nvar SPHttpClient = /** @class */ (function () {\r\n    function SPHttpClient(_impl) {\r\n        if (_impl === void 0) { _impl = SPRuntimeConfig.fetchClientFactory(); }\r\n        this._impl = _impl;\r\n        this._digestCache = new DigestCache(this);\r\n    }\r\n    SPHttpClient.prototype.fetch = function (url, options) {\r\n        var _this = this;\r\n        if (options === void 0) { options = {}; }\r\n        var opts = extend(options, { cache: \"no-cache\", credentials: \"same-origin\" }, true);\r\n        var headers = new Headers();\r\n        // first we add the global headers so they can be overwritten by any passed in locally to this call\r\n        mergeHeaders(headers, SPRuntimeConfig.headers);\r\n        // second we add the local options so we can overwrite the globals\r\n        mergeHeaders(headers, options.headers);\r\n        // lastly we apply any default headers we need that may not exist\r\n        if (!headers.has(\"Accept\")) {\r\n            headers.append(\"Accept\", \"application/json\");\r\n        }\r\n        if (!headers.has(\"Content-Type\")) {\r\n            headers.append(\"Content-Type\", \"application/json;odata=verbose;charset=utf-8\");\r\n        }\r\n        if (!headers.has(\"X-ClientService-ClientTag\")) {\r\n            headers.append(\"X-ClientService-ClientTag\", \"PnPCoreJS:@pnp-1.3.4\");\r\n        }\r\n        if (!headers.has(\"User-Agent\")) {\r\n            // this marks the requests for understanding by the service\r\n            headers.append(\"User-Agent\", \"NONISV|SharePointPnP|PnPCoreJS/1.3.4\");\r\n        }\r\n        opts = extend(opts, { headers: headers });\r\n        if (opts.method && opts.method.toUpperCase() !== \"GET\") {\r\n            // if we have either a request digest or an authorization header we don't need a digest\r\n            if (!headers.has(\"X-RequestDigest\") && !headers.has(\"Authorization\")) {\r\n                return this._digestCache.getDigest(extractWebUrl(url))\r\n                    .then(function (digest) {\r\n                    headers.append(\"X-RequestDigest\", digest);\r\n                    return _this.fetchRaw(url, opts);\r\n                });\r\n            }\r\n        }\r\n        return this.fetchRaw(url, opts);\r\n    };\r\n    SPHttpClient.prototype.fetchRaw = function (url, options) {\r\n        var _this = this;\r\n        if (options === void 0) { options = {}; }\r\n        // here we need to normalize the headers\r\n        var rawHeaders = new Headers();\r\n        mergeHeaders(rawHeaders, options.headers);\r\n        options = extend(options, { headers: rawHeaders });\r\n        var retry = function (ctx) {\r\n            // handles setting the proper timeout for a retry\r\n            var setRetry = function (response) {\r\n                var delay;\r\n                if (response.headers.has(\"Retry-After\")) {\r\n                    // if we have gotten a header, use that value as the delay value\r\n                    delay = parseInt(response.headers.get(\"Retry-After\"), 10);\r\n                }\r\n                else {\r\n                    // grab our current delay\r\n                    delay = ctx.delay;\r\n                    // Increment our counters.\r\n                    ctx.delay *= 2;\r\n                }\r\n                ctx.attempts++;\r\n                // If we have exceeded the retry count, reject.\r\n                if (ctx.retryCount <= ctx.attempts) {\r\n                    ctx.reject(Error(\"Retry count exceeded (\" + ctx.retryCount + \") for request. Response status: [\" + response.status + \"] \" + response.statusText));\r\n                }\r\n                else {\r\n                    // Set our retry timeout for {delay} milliseconds.\r\n                    setTimeout(getCtxCallback(_this, retry, ctx), delay);\r\n                }\r\n            };\r\n            // send the actual request\r\n            _this._impl.fetch(url, options).then(function (response) {\r\n                if (response.status === 429) {\r\n                    // we have been throttled\r\n                    setRetry(response);\r\n                }\r\n                else {\r\n                    ctx.resolve(response);\r\n                }\r\n            }).catch(function (response) {\r\n                if (response.status === 503) {\r\n                    // http status code 503, we can retry this\r\n                    setRetry(response);\r\n                }\r\n                else {\r\n                    ctx.reject(response);\r\n                }\r\n            });\r\n        };\r\n        return new Promise(function (resolve, reject) {\r\n            var retryContext = {\r\n                attempts: 0,\r\n                delay: 100,\r\n                reject: reject,\r\n                resolve: resolve,\r\n                retryCount: 7,\r\n            };\r\n            retry.call(_this, retryContext);\r\n        });\r\n    };\r\n    SPHttpClient.prototype.get = function (url, options) {\r\n        if (options === void 0) { options = {}; }\r\n        var opts = extend(options, { method: \"GET\" });\r\n        return this.fetch(url, opts);\r\n    };\r\n    SPHttpClient.prototype.post = function (url, options) {\r\n        if (options === void 0) { options = {}; }\r\n        var opts = extend(options, { method: \"POST\" });\r\n        return this.fetch(url, opts);\r\n    };\r\n    SPHttpClient.prototype.patch = function (url, options) {\r\n        if (options === void 0) { options = {}; }\r\n        var opts = extend(options, { method: \"PATCH\" });\r\n        return this.fetch(url, opts);\r\n    };\r\n    SPHttpClient.prototype.delete = function (url, options) {\r\n        if (options === void 0) { options = {}; }\r\n        var opts = extend(options, { method: \"DELETE\" });\r\n        return this.fetch(url, opts);\r\n    };\r\n    return SPHttpClient;\r\n}());\r\nexport { SPHttpClient };\r\n//# sourceMappingURL=sphttpclient.js.map","export function metadata(type) {\r\n    return {\r\n        \"__metadata\": { \"type\": type },\r\n    };\r\n}\r\n//# sourceMappingURL=metadata.js.map","import * as tslib_1 from \"tslib\";\r\nimport { combine, isUrlAbsolute, mergeOptions, extend, getGUID, jsS, } from \"@pnp/common\";\r\nimport { ODataQueryable, } from \"@pnp/odata\";\r\nimport { Logger } from \"@pnp/logging\";\r\nimport { SPHttpClient } from \"./net/sphttpclient\";\r\nimport { toAbsoluteUrl } from \"./utils/toabsoluteurl\";\r\nimport { metadata } from \"./utils/metadata\";\r\n/**\r\n * SharePointQueryable Base Class\r\n *\r\n */\r\nvar SharePointQueryable = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SharePointQueryable, _super);\r\n    /**\r\n     * Creates a new instance of the SharePointQueryable class\r\n     *\r\n     * @constructor\r\n     * @param baseUrl A string or SharePointQueryable that should form the base part of the url\r\n     *\r\n     */\r\n    function SharePointQueryable(baseUrl, path) {\r\n        var _this = _super.call(this) || this;\r\n        _this._forceCaching = false;\r\n        if (typeof baseUrl === \"string\") {\r\n            // we need to do some extra parsing to get the parent url correct if we are\r\n            // being created from just a string.\r\n            if (isUrlAbsolute(baseUrl) || baseUrl.lastIndexOf(\"/\") < 0) {\r\n                _this._parentUrl = baseUrl;\r\n                _this._url = combine(baseUrl, path);\r\n            }\r\n            else if (baseUrl.lastIndexOf(\"/\") > baseUrl.lastIndexOf(\"(\")) {\r\n                // .../items(19)/fields\r\n                var index = baseUrl.lastIndexOf(\"/\");\r\n                _this._parentUrl = baseUrl.slice(0, index);\r\n                path = combine(baseUrl.slice(index), path);\r\n                _this._url = combine(_this._parentUrl, path);\r\n            }\r\n            else {\r\n                // .../items(19)\r\n                var index = baseUrl.lastIndexOf(\"(\");\r\n                _this._parentUrl = baseUrl.slice(0, index);\r\n                _this._url = combine(baseUrl, path);\r\n            }\r\n        }\r\n        else {\r\n            _this.extend(baseUrl, path);\r\n            var target = baseUrl.query.get(\"@target\");\r\n            if (target !== undefined) {\r\n                _this.query.set(\"@target\", target);\r\n            }\r\n        }\r\n        return _this;\r\n    }\r\n    /**\r\n     * Creates a new instance of the supplied factory and extends this into that new instance\r\n     *\r\n     * @param factory constructor for the new SharePointQueryable\r\n     */\r\n    SharePointQueryable.prototype.as = function (factory) {\r\n        var o = new factory(this._url, null);\r\n        return extend(o, this, true);\r\n    };\r\n    /**\r\n     * Gets the full url with query information\r\n     *\r\n     */\r\n    SharePointQueryable.prototype.toUrlAndQuery = function () {\r\n        var aliasedParams = new Map(this.query);\r\n        var url = this.toUrl().replace(/'!(@.*?)::(.*?)'/ig, function (match, labelName, value) {\r\n            Logger.write(\"Rewriting aliased parameter from match \" + match + \" to label: \" + labelName + \" value: \" + value, 0 /* Verbose */);\r\n            aliasedParams.set(labelName, \"'\" + value + \"'\");\r\n            return labelName;\r\n        });\r\n        if (aliasedParams.size > 0) {\r\n            var char = url.indexOf(\"?\") > -1 ? \"&\" : \"?\";\r\n            url += \"\" + char + Array.from(aliasedParams).map(function (v) { return v[0] + \"=\" + v[1]; }).join(\"&\");\r\n        }\r\n        return url;\r\n    };\r\n    /**\r\n     * Choose which fields to return\r\n     *\r\n     * @param selects One or more fields to return\r\n     */\r\n    SharePointQueryable.prototype.select = function () {\r\n        var selects = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            selects[_i] = arguments[_i];\r\n        }\r\n        if (selects.length > 0) {\r\n            this.query.set(\"$select\", selects.join(\",\"));\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Expands fields such as lookups to get additional data\r\n     *\r\n     * @param expands The Fields for which to expand the values\r\n     */\r\n    SharePointQueryable.prototype.expand = function () {\r\n        var expands = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            expands[_i] = arguments[_i];\r\n        }\r\n        if (expands.length > 0) {\r\n            this.query.set(\"$expand\", expands.join(\",\"));\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Gets a parent for this instance as specified\r\n     *\r\n     * @param factory The contructor for the class to create\r\n     */\r\n    SharePointQueryable.prototype.getParent = function (factory, baseUrl, path, batch) {\r\n        if (baseUrl === void 0) { baseUrl = this.parentUrl; }\r\n        var parent = new factory(baseUrl, path).configureFrom(this);\r\n        var t = \"@target\";\r\n        if (this.query.has(t)) {\r\n            parent.query.set(t, this.query.get(t));\r\n        }\r\n        if (batch !== undefined) {\r\n            parent = parent.inBatch(batch);\r\n        }\r\n        return parent;\r\n    };\r\n    /**\r\n     * Clones this SharePointQueryable into a new SharePointQueryable instance of T\r\n     * @param factory Constructor used to create the new instance\r\n     * @param additionalPath Any additional path to include in the clone\r\n     * @param includeBatch If true this instance's batch will be added to the cloned instance\r\n     */\r\n    SharePointQueryable.prototype.clone = function (factory, additionalPath, includeBatch) {\r\n        if (includeBatch === void 0) { includeBatch = true; }\r\n        var clone = _super.prototype._clone.call(this, new factory(this, additionalPath), { includeBatch: includeBatch });\r\n        // handle sp specific clone actions\r\n        var t = \"@target\";\r\n        if (this.query.has(t)) {\r\n            clone.query.set(t, this.query.get(t));\r\n        }\r\n        return clone;\r\n    };\r\n    /**\r\n     * Converts the current instance to a request context\r\n     *\r\n     * @param verb The request verb\r\n     * @param options The set of supplied request options\r\n     * @param parser The supplied ODataParser instance\r\n     * @param pipeline Optional request processing pipeline\r\n     */\r\n    SharePointQueryable.prototype.toRequestContext = function (verb, options, parser, pipeline) {\r\n        var _this = this;\r\n        if (options === void 0) { options = {}; }\r\n        var dependencyDispose = this.hasBatch ? this._batchDependency : function () { return; };\r\n        return toAbsoluteUrl(this.toUrlAndQuery()).then(function (url) {\r\n            mergeOptions(options, _this._options);\r\n            // build our request context\r\n            var context = {\r\n                batch: _this.batch,\r\n                batchDependency: dependencyDispose,\r\n                cachingOptions: _this._cachingOptions,\r\n                clientFactory: function () { return new SPHttpClient(); },\r\n                isBatched: _this.hasBatch,\r\n                isCached: _this._forceCaching || (_this._useCaching && /^get$/i.test(verb)),\r\n                options: options,\r\n                parser: parser,\r\n                pipeline: pipeline,\r\n                requestAbsoluteUrl: url,\r\n                requestId: getGUID(),\r\n                verb: verb,\r\n            };\r\n            return context;\r\n        });\r\n    };\r\n    return SharePointQueryable;\r\n}(ODataQueryable));\r\nexport { SharePointQueryable };\r\n/**\r\n * Represents a REST collection which can be filtered, paged, and selected\r\n *\r\n */\r\nvar SharePointQueryableCollection = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SharePointQueryableCollection, _super);\r\n    function SharePointQueryableCollection() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Filters the returned collection (https://msdn.microsoft.com/en-us/library/office/fp142385.aspx#bk_supported)\r\n     *\r\n     * @param filter The string representing the filter query\r\n     */\r\n    SharePointQueryableCollection.prototype.filter = function (filter) {\r\n        this.query.set(\"$filter\", filter);\r\n        return this;\r\n    };\r\n    /**\r\n     * Orders based on the supplied fields\r\n     *\r\n     * @param orderby The name of the field on which to sort\r\n     * @param ascending If false DESC is appended, otherwise ASC (default)\r\n     */\r\n    SharePointQueryableCollection.prototype.orderBy = function (orderBy, ascending) {\r\n        if (ascending === void 0) { ascending = true; }\r\n        var o = \"$orderby\";\r\n        var query = this.query.has(o) ? this.query.get(o).split(\",\") : [];\r\n        query.push(orderBy + \" \" + (ascending ? \"asc\" : \"desc\"));\r\n        this.query.set(o, query.join(\",\"));\r\n        return this;\r\n    };\r\n    /**\r\n     * Skips the specified number of items\r\n     *\r\n     * @param skip The number of items to skip\r\n     */\r\n    SharePointQueryableCollection.prototype.skip = function (skip) {\r\n        this.query.set(\"$skip\", skip.toString());\r\n        return this;\r\n    };\r\n    /**\r\n     * Limits the query to only return the specified number of items\r\n     *\r\n     * @param top The query row limit\r\n     */\r\n    SharePointQueryableCollection.prototype.top = function (top) {\r\n        this.query.set(\"$top\", top.toString());\r\n        return this;\r\n    };\r\n    return SharePointQueryableCollection;\r\n}(SharePointQueryable));\r\nexport { SharePointQueryableCollection };\r\n/**\r\n * Represents an instance that can be selected\r\n *\r\n */\r\nvar SharePointQueryableInstance = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SharePointQueryableInstance, _super);\r\n    function SharePointQueryableInstance() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Curries the update function into the common pieces\r\n     *\r\n     * @param type\r\n     * @param mapper\r\n     */\r\n    SharePointQueryableInstance.prototype._update = function (type, mapper) {\r\n        var _this = this;\r\n        return function (props) { return _this.postCore({\r\n            body: jsS(extend(metadata(type), props)),\r\n            headers: {\r\n                \"X-HTTP-Method\": \"MERGE\",\r\n            },\r\n        }).then(function (d) { return mapper(d, props); }); };\r\n    };\r\n    /**\r\n    * Deletes this instance\r\n    *\r\n    */\r\n    SharePointQueryableInstance.prototype._delete = function () {\r\n        return this.postCore({\r\n            headers: {\r\n                \"X-HTTP-Method\": \"DELETE\",\r\n            },\r\n        });\r\n    };\r\n    /**\r\n     * Deletes this instance with an etag value in the headers\r\n     *\r\n     * @param eTag eTag to delete\r\n     */\r\n    SharePointQueryableInstance.prototype._deleteWithETag = function (eTag) {\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        return this.postCore({\r\n            headers: {\r\n                \"IF-Match\": eTag,\r\n                \"X-HTTP-Method\": \"DELETE\",\r\n            },\r\n        });\r\n    };\r\n    return SharePointQueryableInstance;\r\n}(SharePointQueryable));\r\nexport { SharePointQueryableInstance };\r\n/**\r\n * Decorator used to specify the default path for SharePointQueryable objects\r\n *\r\n * @param path\r\n */\r\nexport function defaultPath(path) {\r\n    return function (target) {\r\n        return /** @class */ (function (_super) {\r\n            tslib_1.__extends(class_1, _super);\r\n            function class_1() {\r\n                var args = [];\r\n                for (var _i = 0; _i < arguments.length; _i++) {\r\n                    args[_i] = arguments[_i];\r\n                }\r\n                return _super.call(this, args[0], args.length > 1 && args[1] !== undefined ? args[1] : path) || this;\r\n            }\r\n            return class_1;\r\n        }(target));\r\n    };\r\n}\r\n//# sourceMappingURL=sharepointqueryable.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryableInstance, SharePointQueryableCollection, defaultPath } from \"./sharepointqueryable\";\r\nimport { SiteGroups } from \"./sitegroups\";\r\nimport { jsS, extend } from \"@pnp/common\";\r\nimport { metadata } from \"./utils/metadata\";\r\n/**\r\n * Describes a collection of all site collection users\r\n *\r\n */\r\nvar SiteUsers = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SiteUsers, _super);\r\n    function SiteUsers() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    SiteUsers_1 = SiteUsers;\r\n    /**\r\n     * Gets a user from the collection by id\r\n     *\r\n     * @param id The id of the user to retrieve\r\n     */\r\n    SiteUsers.prototype.getById = function (id) {\r\n        return new SiteUser(this, \"getById(\" + id + \")\");\r\n    };\r\n    /**\r\n     * Gets a user from the collection by email\r\n     *\r\n     * @param email The email address of the user to retrieve\r\n     */\r\n    SiteUsers.prototype.getByEmail = function (email) {\r\n        return new SiteUser(this, \"getByEmail('\" + email + \"')\");\r\n    };\r\n    /**\r\n     * Gets a user from the collection by login name\r\n     *\r\n     * @param loginName The login name of the user to retrieve\r\n     */\r\n    SiteUsers.prototype.getByLoginName = function (loginName) {\r\n        var su = new SiteUser(this);\r\n        su.concat(\"('!@v::\" + encodeURIComponent(loginName) + \"')\");\r\n        return su;\r\n    };\r\n    /**\r\n     * Removes a user from the collection by id\r\n     *\r\n     * @param id The id of the user to remove\r\n     */\r\n    SiteUsers.prototype.removeById = function (id) {\r\n        return this.clone(SiteUsers_1, \"removeById(\" + id + \")\").postCore();\r\n    };\r\n    /**\r\n     * Removes a user from the collection by login name\r\n     *\r\n     * @param loginName The login name of the user to remove\r\n     */\r\n    SiteUsers.prototype.removeByLoginName = function (loginName) {\r\n        var o = this.clone(SiteUsers_1, \"removeByLoginName(@v)\");\r\n        o.query.set(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return o.postCore();\r\n    };\r\n    /**\r\n     * Adds a user to a group\r\n     *\r\n     * @param loginName The login name of the user to add to the group\r\n     *\r\n     */\r\n    SiteUsers.prototype.add = function (loginName) {\r\n        var _this = this;\r\n        return this.clone(SiteUsers_1, null).postCore({\r\n            body: jsS(extend(metadata(\"SP.User\"), { LoginName: loginName })),\r\n        }).then(function () { return _this.getByLoginName(loginName); });\r\n    };\r\n    var SiteUsers_1;\r\n    SiteUsers = SiteUsers_1 = tslib_1.__decorate([\r\n        defaultPath(\"siteusers\")\r\n    ], SiteUsers);\r\n    return SiteUsers;\r\n}(SharePointQueryableCollection));\r\nexport { SiteUsers };\r\n/**\r\n * Base class for a user\r\n *\r\n */\r\nvar UserBase = /** @class */ (function (_super) {\r\n    tslib_1.__extends(UserBase, _super);\r\n    function UserBase() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(UserBase.prototype, \"groups\", {\r\n        /**\r\n         * Gets the groups for this user\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteGroups(this, \"groups\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return UserBase;\r\n}(SharePointQueryableInstance));\r\nexport { UserBase };\r\n/**\r\n * Describes a single user\r\n *\r\n */\r\nvar SiteUser = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SiteUser, _super);\r\n    function SiteUser() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n        * Updates this user instance with the supplied properties\r\n        *\r\n        * @param properties A plain object of property names and values to update for the user\r\n        */\r\n        _this.update = _this._update(\"SP.User\", function (data) { return ({ data: data, user: _this }); });\r\n        /**\r\n         * Delete this user\r\n         *\r\n         */\r\n        _this.delete = _this._delete;\r\n        return _this;\r\n    }\r\n    return SiteUser;\r\n}(UserBase));\r\nexport { SiteUser };\r\n/**\r\n * Represents the current user\r\n */\r\nvar CurrentUser = /** @class */ (function (_super) {\r\n    tslib_1.__extends(CurrentUser, _super);\r\n    function CurrentUser() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    CurrentUser = tslib_1.__decorate([\r\n        defaultPath(\"currentuser\")\r\n    ], CurrentUser);\r\n    return CurrentUser;\r\n}(UserBase));\r\nexport { CurrentUser };\r\n//# sourceMappingURL=siteusers.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryableInstance, SharePointQueryableCollection, defaultPath } from \"./sharepointqueryable\";\r\nimport { SiteUsers } from \"./siteusers\";\r\nimport { extend, jsS, hOP } from \"@pnp/common\";\r\nimport { metadata } from \"./utils/metadata\";\r\n/**\r\n * Principal Type enum\r\n *\r\n */\r\nexport var PrincipalType;\r\n(function (PrincipalType) {\r\n    PrincipalType[PrincipalType[\"None\"] = 0] = \"None\";\r\n    PrincipalType[PrincipalType[\"User\"] = 1] = \"User\";\r\n    PrincipalType[PrincipalType[\"DistributionList\"] = 2] = \"DistributionList\";\r\n    PrincipalType[PrincipalType[\"SecurityGroup\"] = 4] = \"SecurityGroup\";\r\n    PrincipalType[PrincipalType[\"SharePointGroup\"] = 8] = \"SharePointGroup\";\r\n    PrincipalType[PrincipalType[\"All\"] = 15] = \"All\";\r\n})(PrincipalType || (PrincipalType = {}));\r\n/**\r\n * Describes a collection of site groups\r\n *\r\n */\r\nvar SiteGroups = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SiteGroups, _super);\r\n    function SiteGroups() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    SiteGroups_1 = SiteGroups;\r\n    /**\r\n     * Gets a group from the collection by id\r\n     *\r\n     * @param id The id of the group to retrieve\r\n     */\r\n    SiteGroups.prototype.getById = function (id) {\r\n        var sg = new SiteGroup(this);\r\n        sg.concat(\"(\" + id + \")\");\r\n        return sg;\r\n    };\r\n    /**\r\n     * Adds a new group to the site collection\r\n     *\r\n     * @param props The group properties object of property names and values to be set for the group\r\n     */\r\n    SiteGroups.prototype.add = function (properties) {\r\n        var _this = this;\r\n        var postBody = jsS(extend(metadata(\"SP.Group\"), properties));\r\n        return this.postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                group: _this.getById(data.Id),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Gets a group from the collection by name\r\n     *\r\n     * @param groupName The name of the group to retrieve\r\n     */\r\n    SiteGroups.prototype.getByName = function (groupName) {\r\n        return new SiteGroup(this, \"getByName('\" + groupName + \"')\");\r\n    };\r\n    /**\r\n     * Removes the group with the specified member id from the collection\r\n     *\r\n     * @param id The id of the group to remove\r\n     */\r\n    SiteGroups.prototype.removeById = function (id) {\r\n        return this.clone(SiteGroups_1, \"removeById('\" + id + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Removes the cross-site group with the specified name from the collection\r\n     *\r\n     * @param loginName The name of the group to remove\r\n     */\r\n    SiteGroups.prototype.removeByLoginName = function (loginName) {\r\n        return this.clone(SiteGroups_1, \"removeByLoginName('\" + loginName + \"')\").postCore();\r\n    };\r\n    var SiteGroups_1;\r\n    SiteGroups = SiteGroups_1 = tslib_1.__decorate([\r\n        defaultPath(\"sitegroups\")\r\n    ], SiteGroups);\r\n    return SiteGroups;\r\n}(SharePointQueryableCollection));\r\nexport { SiteGroups };\r\n/**\r\n * Describes a single group\r\n *\r\n */\r\nvar SiteGroup = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SiteGroup, _super);\r\n    function SiteGroup() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.update = _this._update(\"SP.Group\", function (d, p) {\r\n            var retGroup = _this;\r\n            if (hOP(p, \"Title\")) {\r\n                /* tslint:disable-next-line no-string-literal */\r\n                retGroup = _this.getParent(SiteGroup, _this.parentUrl, \"getByName('\" + p[\"Title\"] + \"')\");\r\n            }\r\n            return {\r\n                data: d,\r\n                group: retGroup,\r\n            };\r\n        });\r\n        return _this;\r\n    }\r\n    Object.defineProperty(SiteGroup.prototype, \"users\", {\r\n        /**\r\n         * Gets the users for this group\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteUsers(this, \"users\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return SiteGroup;\r\n}(SharePointQueryableInstance));\r\nexport { SiteGroup };\r\n//# sourceMappingURL=sitegroups.js.map","/**\r\n * Determines the display mode of the given control or view\r\n */\r\nexport var ControlMode;\r\n(function (ControlMode) {\r\n    ControlMode[ControlMode[\"Display\"] = 1] = \"Display\";\r\n    ControlMode[ControlMode[\"Edit\"] = 2] = \"Edit\";\r\n    ControlMode[ControlMode[\"New\"] = 3] = \"New\";\r\n})(ControlMode || (ControlMode = {}));\r\n/**\r\n * Specifies the type of the field.\r\n */\r\nexport var FieldTypes;\r\n(function (FieldTypes) {\r\n    FieldTypes[FieldTypes[\"Invalid\"] = 0] = \"Invalid\";\r\n    FieldTypes[FieldTypes[\"Integer\"] = 1] = \"Integer\";\r\n    FieldTypes[FieldTypes[\"Text\"] = 2] = \"Text\";\r\n    FieldTypes[FieldTypes[\"Note\"] = 3] = \"Note\";\r\n    FieldTypes[FieldTypes[\"DateTime\"] = 4] = \"DateTime\";\r\n    FieldTypes[FieldTypes[\"Counter\"] = 5] = \"Counter\";\r\n    FieldTypes[FieldTypes[\"Choice\"] = 6] = \"Choice\";\r\n    FieldTypes[FieldTypes[\"Lookup\"] = 7] = \"Lookup\";\r\n    FieldTypes[FieldTypes[\"Boolean\"] = 8] = \"Boolean\";\r\n    FieldTypes[FieldTypes[\"Number\"] = 9] = \"Number\";\r\n    FieldTypes[FieldTypes[\"Currency\"] = 10] = \"Currency\";\r\n    FieldTypes[FieldTypes[\"URL\"] = 11] = \"URL\";\r\n    FieldTypes[FieldTypes[\"Computed\"] = 12] = \"Computed\";\r\n    FieldTypes[FieldTypes[\"Threading\"] = 13] = \"Threading\";\r\n    FieldTypes[FieldTypes[\"Guid\"] = 14] = \"Guid\";\r\n    FieldTypes[FieldTypes[\"MultiChoice\"] = 15] = \"MultiChoice\";\r\n    FieldTypes[FieldTypes[\"GridChoice\"] = 16] = \"GridChoice\";\r\n    FieldTypes[FieldTypes[\"Calculated\"] = 17] = \"Calculated\";\r\n    FieldTypes[FieldTypes[\"File\"] = 18] = \"File\";\r\n    FieldTypes[FieldTypes[\"Attachments\"] = 19] = \"Attachments\";\r\n    FieldTypes[FieldTypes[\"User\"] = 20] = \"User\";\r\n    FieldTypes[FieldTypes[\"Recurrence\"] = 21] = \"Recurrence\";\r\n    FieldTypes[FieldTypes[\"CrossProjectLink\"] = 22] = \"CrossProjectLink\";\r\n    FieldTypes[FieldTypes[\"ModStat\"] = 23] = \"ModStat\";\r\n    FieldTypes[FieldTypes[\"Error\"] = 24] = \"Error\";\r\n    FieldTypes[FieldTypes[\"ContentTypeId\"] = 25] = \"ContentTypeId\";\r\n    FieldTypes[FieldTypes[\"PageSeparator\"] = 26] = \"PageSeparator\";\r\n    FieldTypes[FieldTypes[\"ThreadIndex\"] = 27] = \"ThreadIndex\";\r\n    FieldTypes[FieldTypes[\"WorkflowStatus\"] = 28] = \"WorkflowStatus\";\r\n    FieldTypes[FieldTypes[\"AllDayEvent\"] = 29] = \"AllDayEvent\";\r\n    FieldTypes[FieldTypes[\"WorkflowEventType\"] = 30] = \"WorkflowEventType\";\r\n})(FieldTypes || (FieldTypes = {}));\r\nexport var DateTimeFieldFormatType;\r\n(function (DateTimeFieldFormatType) {\r\n    DateTimeFieldFormatType[DateTimeFieldFormatType[\"DateOnly\"] = 0] = \"DateOnly\";\r\n    DateTimeFieldFormatType[DateTimeFieldFormatType[\"DateTime\"] = 1] = \"DateTime\";\r\n})(DateTimeFieldFormatType || (DateTimeFieldFormatType = {}));\r\nexport var DateTimeFieldFriendlyFormatType;\r\n(function (DateTimeFieldFriendlyFormatType) {\r\n    DateTimeFieldFriendlyFormatType[DateTimeFieldFriendlyFormatType[\"Unspecified\"] = 0] = \"Unspecified\";\r\n    DateTimeFieldFriendlyFormatType[DateTimeFieldFriendlyFormatType[\"Disabled\"] = 1] = \"Disabled\";\r\n    DateTimeFieldFriendlyFormatType[DateTimeFieldFriendlyFormatType[\"Relative\"] = 2] = \"Relative\";\r\n})(DateTimeFieldFriendlyFormatType || (DateTimeFieldFriendlyFormatType = {}));\r\n/**\r\n * Specifies the control settings while adding a field.\r\n */\r\nexport var AddFieldOptions;\r\n(function (AddFieldOptions) {\r\n    /**\r\n     *  Specify that a new field added to the list must also be added to the default content type in the site collection\r\n     */\r\n    AddFieldOptions[AddFieldOptions[\"DefaultValue\"] = 0] = \"DefaultValue\";\r\n    /**\r\n     * Specify that a new field added to the list must also be added to the default content type in the site collection.\r\n     */\r\n    AddFieldOptions[AddFieldOptions[\"AddToDefaultContentType\"] = 1] = \"AddToDefaultContentType\";\r\n    /**\r\n     * Specify that a new field must not be added to any other content type\r\n     */\r\n    AddFieldOptions[AddFieldOptions[\"AddToNoContentType\"] = 2] = \"AddToNoContentType\";\r\n    /**\r\n     *  Specify that a new field that is added to the specified list must also be added to all content types in the site collection\r\n     */\r\n    AddFieldOptions[AddFieldOptions[\"AddToAllContentTypes\"] = 4] = \"AddToAllContentTypes\";\r\n    /**\r\n     * Specify adding an internal field name hint for the purpose of avoiding possible database locking or field renaming operations\r\n     */\r\n    AddFieldOptions[AddFieldOptions[\"AddFieldInternalNameHint\"] = 8] = \"AddFieldInternalNameHint\";\r\n    /**\r\n     * Specify that a new field that is added to the specified list must also be added to the default list view\r\n     */\r\n    AddFieldOptions[AddFieldOptions[\"AddFieldToDefaultView\"] = 16] = \"AddFieldToDefaultView\";\r\n    /**\r\n     * Specify to confirm that no other field has the same display name\r\n     */\r\n    AddFieldOptions[AddFieldOptions[\"AddFieldCheckDisplayName\"] = 32] = \"AddFieldCheckDisplayName\";\r\n})(AddFieldOptions || (AddFieldOptions = {}));\r\nexport var CalendarType;\r\n(function (CalendarType) {\r\n    CalendarType[CalendarType[\"Gregorian\"] = 1] = \"Gregorian\";\r\n    CalendarType[CalendarType[\"Japan\"] = 3] = \"Japan\";\r\n    CalendarType[CalendarType[\"Taiwan\"] = 4] = \"Taiwan\";\r\n    CalendarType[CalendarType[\"Korea\"] = 5] = \"Korea\";\r\n    CalendarType[CalendarType[\"Hijri\"] = 6] = \"Hijri\";\r\n    CalendarType[CalendarType[\"Thai\"] = 7] = \"Thai\";\r\n    CalendarType[CalendarType[\"Hebrew\"] = 8] = \"Hebrew\";\r\n    CalendarType[CalendarType[\"GregorianMEFrench\"] = 9] = \"GregorianMEFrench\";\r\n    CalendarType[CalendarType[\"GregorianArabic\"] = 10] = \"GregorianArabic\";\r\n    CalendarType[CalendarType[\"GregorianXLITEnglish\"] = 11] = \"GregorianXLITEnglish\";\r\n    CalendarType[CalendarType[\"GregorianXLITFrench\"] = 12] = \"GregorianXLITFrench\";\r\n    CalendarType[CalendarType[\"KoreaJapanLunar\"] = 14] = \"KoreaJapanLunar\";\r\n    CalendarType[CalendarType[\"ChineseLunar\"] = 15] = \"ChineseLunar\";\r\n    CalendarType[CalendarType[\"SakaEra\"] = 16] = \"SakaEra\";\r\n    CalendarType[CalendarType[\"UmAlQura\"] = 23] = \"UmAlQura\";\r\n})(CalendarType || (CalendarType = {}));\r\nexport var UrlFieldFormatType;\r\n(function (UrlFieldFormatType) {\r\n    UrlFieldFormatType[UrlFieldFormatType[\"Hyperlink\"] = 0] = \"Hyperlink\";\r\n    UrlFieldFormatType[UrlFieldFormatType[\"Image\"] = 1] = \"Image\";\r\n})(UrlFieldFormatType || (UrlFieldFormatType = {}));\r\nexport var PermissionKind;\r\n(function (PermissionKind) {\r\n    /**\r\n     * Has no permissions on the Site. Not available through the user interface.\r\n     */\r\n    PermissionKind[PermissionKind[\"EmptyMask\"] = 0] = \"EmptyMask\";\r\n    /**\r\n     * View items in lists, documents in document libraries, and Web discussion comments.\r\n     */\r\n    PermissionKind[PermissionKind[\"ViewListItems\"] = 1] = \"ViewListItems\";\r\n    /**\r\n     * Add items to lists, documents to document libraries, and Web discussion comments.\r\n     */\r\n    PermissionKind[PermissionKind[\"AddListItems\"] = 2] = \"AddListItems\";\r\n    /**\r\n     * Edit items in lists, edit documents in document libraries, edit Web discussion comments\r\n     * in documents, and customize Web Part Pages in document libraries.\r\n     */\r\n    PermissionKind[PermissionKind[\"EditListItems\"] = 3] = \"EditListItems\";\r\n    /**\r\n     * Delete items from a list, documents from a document library, and Web discussion\r\n     * comments in documents.\r\n     */\r\n    PermissionKind[PermissionKind[\"DeleteListItems\"] = 4] = \"DeleteListItems\";\r\n    /**\r\n     * Approve a minor version of a list item or document.\r\n     */\r\n    PermissionKind[PermissionKind[\"ApproveItems\"] = 5] = \"ApproveItems\";\r\n    /**\r\n     * View the source of documents with server-side file handlers.\r\n     */\r\n    PermissionKind[PermissionKind[\"OpenItems\"] = 6] = \"OpenItems\";\r\n    /**\r\n     * View past versions of a list item or document.\r\n     */\r\n    PermissionKind[PermissionKind[\"ViewVersions\"] = 7] = \"ViewVersions\";\r\n    /**\r\n     * Delete past versions of a list item or document.\r\n     */\r\n    PermissionKind[PermissionKind[\"DeleteVersions\"] = 8] = \"DeleteVersions\";\r\n    /**\r\n     * Discard or check in a document which is checked out to another user.\r\n     */\r\n    PermissionKind[PermissionKind[\"CancelCheckout\"] = 9] = \"CancelCheckout\";\r\n    /**\r\n     * Create, change, and delete personal views of lists.\r\n     */\r\n    PermissionKind[PermissionKind[\"ManagePersonalViews\"] = 10] = \"ManagePersonalViews\";\r\n    /**\r\n     * Create and delete lists, add or remove columns in a list, and add or remove public views of a list.\r\n     */\r\n    PermissionKind[PermissionKind[\"ManageLists\"] = 12] = \"ManageLists\";\r\n    /**\r\n     * View forms, views, and application pages, and enumerate lists.\r\n     */\r\n    PermissionKind[PermissionKind[\"ViewFormPages\"] = 13] = \"ViewFormPages\";\r\n    /**\r\n     * Make content of a list or document library retrieveable for anonymous users through SharePoint search.\r\n     * The list permissions in the site do not change.\r\n     */\r\n    PermissionKind[PermissionKind[\"AnonymousSearchAccessList\"] = 14] = \"AnonymousSearchAccessList\";\r\n    /**\r\n     * Allow users to open a Site, list, or folder to access items inside that container.\r\n     */\r\n    PermissionKind[PermissionKind[\"Open\"] = 17] = \"Open\";\r\n    /**\r\n     * View pages in a Site.\r\n     */\r\n    PermissionKind[PermissionKind[\"ViewPages\"] = 18] = \"ViewPages\";\r\n    /**\r\n     * Add, change, or delete HTML pages or Web Part Pages, and edit the Site using\r\n     * a Windows SharePoint Services compatible editor.\r\n     */\r\n    PermissionKind[PermissionKind[\"AddAndCustomizePages\"] = 19] = \"AddAndCustomizePages\";\r\n    /**\r\n     * Apply a theme or borders to the entire Site.\r\n     */\r\n    PermissionKind[PermissionKind[\"ApplyThemeAndBorder\"] = 20] = \"ApplyThemeAndBorder\";\r\n    /**\r\n     * Apply a style sheet (.css file) to the Site.\r\n     */\r\n    PermissionKind[PermissionKind[\"ApplyStyleSheets\"] = 21] = \"ApplyStyleSheets\";\r\n    /**\r\n     * View reports on Site usage.\r\n     */\r\n    PermissionKind[PermissionKind[\"ViewUsageData\"] = 22] = \"ViewUsageData\";\r\n    /**\r\n     * Create a Site using Self-Service Site Creation.\r\n     */\r\n    PermissionKind[PermissionKind[\"CreateSSCSite\"] = 23] = \"CreateSSCSite\";\r\n    /**\r\n     * Create subsites such as team sites, Meeting Workspace sites, and Document Workspace sites.\r\n     */\r\n    PermissionKind[PermissionKind[\"ManageSubwebs\"] = 24] = \"ManageSubwebs\";\r\n    /**\r\n     * Create a group of users that can be used anywhere within the site collection.\r\n     */\r\n    PermissionKind[PermissionKind[\"CreateGroups\"] = 25] = \"CreateGroups\";\r\n    /**\r\n     * Create and change permission levels on the Site and assign permissions to users\r\n     * and groups.\r\n     */\r\n    PermissionKind[PermissionKind[\"ManagePermissions\"] = 26] = \"ManagePermissions\";\r\n    /**\r\n     * Enumerate files and folders in a Site using Microsoft Office SharePoint Designer\r\n     * and WebDAV interfaces.\r\n     */\r\n    PermissionKind[PermissionKind[\"BrowseDirectories\"] = 27] = \"BrowseDirectories\";\r\n    /**\r\n     * View information about users of the Site.\r\n     */\r\n    PermissionKind[PermissionKind[\"BrowseUserInfo\"] = 28] = \"BrowseUserInfo\";\r\n    /**\r\n     * Add or remove personal Web Parts on a Web Part Page.\r\n     */\r\n    PermissionKind[PermissionKind[\"AddDelPrivateWebParts\"] = 29] = \"AddDelPrivateWebParts\";\r\n    /**\r\n     * Update Web Parts to display personalized information.\r\n     */\r\n    PermissionKind[PermissionKind[\"UpdatePersonalWebParts\"] = 30] = \"UpdatePersonalWebParts\";\r\n    /**\r\n     * Grant the ability to perform all administration tasks for the Site as well as\r\n     * manage content, activate, deactivate, or edit properties of Site scoped Features\r\n     * through the object model or through the user interface (UI). When granted on the\r\n     * root Site of a Site Collection, activate, deactivate, or edit properties of\r\n     * site collection scoped Features through the object model. To browse to the Site\r\n     * Collection Features page and activate or deactivate Site Collection scoped Features\r\n     * through the UI, you must be a Site Collection administrator.\r\n     */\r\n    PermissionKind[PermissionKind[\"ManageWeb\"] = 31] = \"ManageWeb\";\r\n    /**\r\n     * Content of lists and document libraries in the Web site will be retrieveable for anonymous users through\r\n     * SharePoint search if the list or document library has AnonymousSearchAccessList set.\r\n     */\r\n    PermissionKind[PermissionKind[\"AnonymousSearchAccessWebLists\"] = 32] = \"AnonymousSearchAccessWebLists\";\r\n    /**\r\n     * Use features that launch client applications. Otherwise, users must work on documents\r\n     * locally and upload changes.\r\n     */\r\n    PermissionKind[PermissionKind[\"UseClientIntegration\"] = 37] = \"UseClientIntegration\";\r\n    /**\r\n     * Use SOAP, WebDAV, or Microsoft Office SharePoint Designer interfaces to access the Site.\r\n     */\r\n    PermissionKind[PermissionKind[\"UseRemoteAPIs\"] = 38] = \"UseRemoteAPIs\";\r\n    /**\r\n     * Manage alerts for all users of the Site.\r\n     */\r\n    PermissionKind[PermissionKind[\"ManageAlerts\"] = 39] = \"ManageAlerts\";\r\n    /**\r\n     * Create e-mail alerts.\r\n     */\r\n    PermissionKind[PermissionKind[\"CreateAlerts\"] = 40] = \"CreateAlerts\";\r\n    /**\r\n     * Allows a user to change his or her user information, such as adding a picture.\r\n     */\r\n    PermissionKind[PermissionKind[\"EditMyUserInfo\"] = 41] = \"EditMyUserInfo\";\r\n    /**\r\n     * Enumerate permissions on Site, list, folder, document, or list item.\r\n     */\r\n    PermissionKind[PermissionKind[\"EnumeratePermissions\"] = 63] = \"EnumeratePermissions\";\r\n    /**\r\n     * Has all permissions on the Site. Not available through the user interface.\r\n     */\r\n    PermissionKind[PermissionKind[\"FullMask\"] = 65] = \"FullMask\";\r\n})(PermissionKind || (PermissionKind = {}));\r\n/**\r\n * Specifies the type of a principal.\r\n */\r\n/* tslint:disable:no-bitwise */\r\nexport var PrincipalType;\r\n(function (PrincipalType) {\r\n    /**\r\n     * Enumeration whose value specifies no principal type.\r\n     */\r\n    PrincipalType[PrincipalType[\"None\"] = 0] = \"None\";\r\n    /**\r\n     * Enumeration whose value specifies a user as the principal type.\r\n     */\r\n    PrincipalType[PrincipalType[\"User\"] = 1] = \"User\";\r\n    /**\r\n     * Enumeration whose value specifies a distribution list as the principal type.\r\n     */\r\n    PrincipalType[PrincipalType[\"DistributionList\"] = 2] = \"DistributionList\";\r\n    /**\r\n     * Enumeration whose value specifies a security group as the principal type.\r\n     */\r\n    PrincipalType[PrincipalType[\"SecurityGroup\"] = 4] = \"SecurityGroup\";\r\n    /**\r\n     * Enumeration whose value specifies a group as the principal type.\r\n     */\r\n    PrincipalType[PrincipalType[\"SharePointGroup\"] = 8] = \"SharePointGroup\";\r\n    /**\r\n     * Enumeration whose value specifies all principal types.\r\n     */\r\n    PrincipalType[PrincipalType[\"All\"] = 15] = \"All\";\r\n})(PrincipalType || (PrincipalType = {}));\r\n/* tslint:enable:no-bitwise */\r\n/**\r\n * Specifies the source of a principal.\r\n */\r\n/* tslint:disable:no-bitwise */\r\nexport var PrincipalSource;\r\n(function (PrincipalSource) {\r\n    /**\r\n     * Enumeration whose value specifies no principal source.\r\n     */\r\n    PrincipalSource[PrincipalSource[\"None\"] = 0] = \"None\";\r\n    /**\r\n     * Enumeration whose value specifies user information list as the principal source.\r\n     */\r\n    PrincipalSource[PrincipalSource[\"UserInfoList\"] = 1] = \"UserInfoList\";\r\n    /**\r\n     * Enumeration whose value specifies Active Directory as the principal source.\r\n     */\r\n    PrincipalSource[PrincipalSource[\"Windows\"] = 2] = \"Windows\";\r\n    /**\r\n     * Enumeration whose value specifies the current membership provider as the principal source.\r\n     */\r\n    PrincipalSource[PrincipalSource[\"MembershipProvider\"] = 4] = \"MembershipProvider\";\r\n    /**\r\n     * Enumeration whose value specifies the current role provider as the principal source.\r\n     */\r\n    PrincipalSource[PrincipalSource[\"RoleProvider\"] = 8] = \"RoleProvider\";\r\n    /**\r\n     * Enumeration whose value specifies all principal sources.\r\n     */\r\n    PrincipalSource[PrincipalSource[\"All\"] = 15] = \"All\";\r\n})(PrincipalSource || (PrincipalSource = {}));\r\n/* tslint:enable:no-bitwise */\r\nexport var RoleType;\r\n(function (RoleType) {\r\n    RoleType[RoleType[\"None\"] = 0] = \"None\";\r\n    RoleType[RoleType[\"Guest\"] = 1] = \"Guest\";\r\n    RoleType[RoleType[\"Reader\"] = 2] = \"Reader\";\r\n    RoleType[RoleType[\"Contributor\"] = 3] = \"Contributor\";\r\n    RoleType[RoleType[\"WebDesigner\"] = 4] = \"WebDesigner\";\r\n    RoleType[RoleType[\"Administrator\"] = 5] = \"Administrator\";\r\n})(RoleType || (RoleType = {}));\r\nexport var PageType;\r\n(function (PageType) {\r\n    PageType[PageType[\"Invalid\"] = -1] = \"Invalid\";\r\n    PageType[PageType[\"DefaultView\"] = 0] = \"DefaultView\";\r\n    PageType[PageType[\"NormalView\"] = 1] = \"NormalView\";\r\n    PageType[PageType[\"DialogView\"] = 2] = \"DialogView\";\r\n    PageType[PageType[\"View\"] = 3] = \"View\";\r\n    PageType[PageType[\"DisplayForm\"] = 4] = \"DisplayForm\";\r\n    PageType[PageType[\"DisplayFormDialog\"] = 5] = \"DisplayFormDialog\";\r\n    PageType[PageType[\"EditForm\"] = 6] = \"EditForm\";\r\n    PageType[PageType[\"EditFormDialog\"] = 7] = \"EditFormDialog\";\r\n    PageType[PageType[\"NewForm\"] = 8] = \"NewForm\";\r\n    PageType[PageType[\"NewFormDialog\"] = 9] = \"NewFormDialog\";\r\n    PageType[PageType[\"SolutionForm\"] = 10] = \"SolutionForm\";\r\n    PageType[PageType[\"PAGE_MAXITEMS\"] = 11] = \"PAGE_MAXITEMS\";\r\n})(PageType || (PageType = {}));\r\nexport var SharingLinkKind;\r\n(function (SharingLinkKind) {\r\n    /**\r\n     * Uninitialized link\r\n     */\r\n    SharingLinkKind[SharingLinkKind[\"Uninitialized\"] = 0] = \"Uninitialized\";\r\n    /**\r\n     * Direct link to the object being shared\r\n     */\r\n    SharingLinkKind[SharingLinkKind[\"Direct\"] = 1] = \"Direct\";\r\n    /**\r\n     * Organization-shareable link to the object being shared with view permissions\r\n     */\r\n    SharingLinkKind[SharingLinkKind[\"OrganizationView\"] = 2] = \"OrganizationView\";\r\n    /**\r\n     * Organization-shareable link to the object being shared with edit permissions\r\n     */\r\n    SharingLinkKind[SharingLinkKind[\"OrganizationEdit\"] = 3] = \"OrganizationEdit\";\r\n    /**\r\n     * View only anonymous link\r\n     */\r\n    SharingLinkKind[SharingLinkKind[\"AnonymousView\"] = 4] = \"AnonymousView\";\r\n    /**\r\n     * Read/Write anonymous link\r\n     */\r\n    SharingLinkKind[SharingLinkKind[\"AnonymousEdit\"] = 5] = \"AnonymousEdit\";\r\n    /**\r\n     * Flexible sharing Link where properties can change without affecting link URL\r\n     */\r\n    SharingLinkKind[SharingLinkKind[\"Flexible\"] = 6] = \"Flexible\";\r\n})(SharingLinkKind || (SharingLinkKind = {}));\r\n/**\r\n * Indicates the role of the sharing link\r\n */\r\nexport var SharingRole;\r\n(function (SharingRole) {\r\n    SharingRole[SharingRole[\"None\"] = 0] = \"None\";\r\n    SharingRole[SharingRole[\"View\"] = 1] = \"View\";\r\n    SharingRole[SharingRole[\"Edit\"] = 2] = \"Edit\";\r\n    SharingRole[SharingRole[\"Owner\"] = 3] = \"Owner\";\r\n})(SharingRole || (SharingRole = {}));\r\nexport var SharingOperationStatusCode;\r\n(function (SharingOperationStatusCode) {\r\n    /**\r\n     * The share operation completed without errors.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"CompletedSuccessfully\"] = 0] = \"CompletedSuccessfully\";\r\n    /**\r\n     * The share operation completed and generated requests for access.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"AccessRequestsQueued\"] = 1] = \"AccessRequestsQueued\";\r\n    /**\r\n     * The share operation failed as there were no resolved users.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"NoResolvedUsers\"] = -1] = \"NoResolvedUsers\";\r\n    /**\r\n     * The share operation failed due to insufficient permissions.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"AccessDenied\"] = -2] = \"AccessDenied\";\r\n    /**\r\n     * The share operation failed when attempting a cross site share, which is not supported.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"CrossSiteRequestNotSupported\"] = -3] = \"CrossSiteRequestNotSupported\";\r\n    /**\r\n     * The sharing operation failed due to an unknown error.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"UnknowError\"] = -4] = \"UnknowError\";\r\n    /**\r\n     * The text you typed is too long. Please shorten it.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"EmailBodyTooLong\"] = -5] = \"EmailBodyTooLong\";\r\n    /**\r\n     * The maximum number of unique scopes in the list has been exceeded.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"ListUniqueScopesExceeded\"] = -6] = \"ListUniqueScopesExceeded\";\r\n    /**\r\n     * The share operation failed because a sharing capability is disabled in the site.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"CapabilityDisabled\"] = -7] = \"CapabilityDisabled\";\r\n    /**\r\n     * The specified object for the share operation is not supported.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"ObjectNotSupported\"] = -8] = \"ObjectNotSupported\";\r\n    /**\r\n     * A SharePoint group cannot contain another SharePoint group.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"NestedGroupsNotSupported\"] = -9] = \"NestedGroupsNotSupported\";\r\n})(SharingOperationStatusCode || (SharingOperationStatusCode = {}));\r\nexport var SPSharedObjectType;\r\n(function (SPSharedObjectType) {\r\n    SPSharedObjectType[SPSharedObjectType[\"Unknown\"] = 0] = \"Unknown\";\r\n    SPSharedObjectType[SPSharedObjectType[\"File\"] = 1] = \"File\";\r\n    SPSharedObjectType[SPSharedObjectType[\"Folder\"] = 2] = \"Folder\";\r\n    SPSharedObjectType[SPSharedObjectType[\"Item\"] = 3] = \"Item\";\r\n    SPSharedObjectType[SPSharedObjectType[\"List\"] = 4] = \"List\";\r\n    SPSharedObjectType[SPSharedObjectType[\"Web\"] = 5] = \"Web\";\r\n    SPSharedObjectType[SPSharedObjectType[\"Max\"] = 6] = \"Max\";\r\n})(SPSharedObjectType || (SPSharedObjectType = {}));\r\nexport var SharingDomainRestrictionMode;\r\n(function (SharingDomainRestrictionMode) {\r\n    SharingDomainRestrictionMode[SharingDomainRestrictionMode[\"None\"] = 0] = \"None\";\r\n    SharingDomainRestrictionMode[SharingDomainRestrictionMode[\"AllowList\"] = 1] = \"AllowList\";\r\n    SharingDomainRestrictionMode[SharingDomainRestrictionMode[\"BlockList\"] = 2] = \"BlockList\";\r\n})(SharingDomainRestrictionMode || (SharingDomainRestrictionMode = {}));\r\nexport var RenderListDataOptions;\r\n(function (RenderListDataOptions) {\r\n    RenderListDataOptions[RenderListDataOptions[\"None\"] = 0] = \"None\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ContextInfo\"] = 1] = \"ContextInfo\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ListData\"] = 2] = \"ListData\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ListSchema\"] = 4] = \"ListSchema\";\r\n    RenderListDataOptions[RenderListDataOptions[\"MenuView\"] = 8] = \"MenuView\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ListContentType\"] = 16] = \"ListContentType\";\r\n    RenderListDataOptions[RenderListDataOptions[\"FileSystemItemId\"] = 32] = \"FileSystemItemId\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ClientFormSchema\"] = 64] = \"ClientFormSchema\";\r\n    RenderListDataOptions[RenderListDataOptions[\"QuickLaunch\"] = 128] = \"QuickLaunch\";\r\n    RenderListDataOptions[RenderListDataOptions[\"Spotlight\"] = 256] = \"Spotlight\";\r\n    RenderListDataOptions[RenderListDataOptions[\"Visualization\"] = 512] = \"Visualization\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ViewMetadata\"] = 1024] = \"ViewMetadata\";\r\n    RenderListDataOptions[RenderListDataOptions[\"DisableAutoHyperlink\"] = 2048] = \"DisableAutoHyperlink\";\r\n    RenderListDataOptions[RenderListDataOptions[\"EnableMediaTAUrls\"] = 4096] = \"EnableMediaTAUrls\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ParentInfo\"] = 8192] = \"ParentInfo\";\r\n    RenderListDataOptions[RenderListDataOptions[\"PageContextInfo\"] = 16384] = \"PageContextInfo\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ClientSideComponentManifest\"] = 32768] = \"ClientSideComponentManifest\";\r\n})(RenderListDataOptions || (RenderListDataOptions = {}));\r\nexport var FieldUserSelectionMode;\r\n(function (FieldUserSelectionMode) {\r\n    FieldUserSelectionMode[FieldUserSelectionMode[\"PeopleAndGroups\"] = 1] = \"PeopleAndGroups\";\r\n    FieldUserSelectionMode[FieldUserSelectionMode[\"PeopleOnly\"] = 0] = \"PeopleOnly\";\r\n})(FieldUserSelectionMode || (FieldUserSelectionMode = {}));\r\nexport var ChoiceFieldFormatType;\r\n(function (ChoiceFieldFormatType) {\r\n    ChoiceFieldFormatType[ChoiceFieldFormatType[\"Dropdown\"] = 0] = \"Dropdown\";\r\n    ChoiceFieldFormatType[ChoiceFieldFormatType[\"RadioButtons\"] = 1] = \"RadioButtons\";\r\n})(ChoiceFieldFormatType || (ChoiceFieldFormatType = {}));\r\n/**\r\n * Specifies the originating zone of a request received.\r\n */\r\nexport var UrlZone;\r\n(function (UrlZone) {\r\n    /**\r\n     * Specifies the default zone used for requests unless another zone is specified.\r\n     */\r\n    UrlZone[UrlZone[\"DefaultZone\"] = 0] = \"DefaultZone\";\r\n    /**\r\n     * Specifies an intranet zone.\r\n     */\r\n    UrlZone[UrlZone[\"Intranet\"] = 1] = \"Intranet\";\r\n    /**\r\n     * Specifies an Internet zone.\r\n     */\r\n    UrlZone[UrlZone[\"Internet\"] = 2] = \"Internet\";\r\n    /**\r\n     * Specifies a custom zone.\r\n     */\r\n    UrlZone[UrlZone[\"Custom\"] = 3] = \"Custom\";\r\n    /**\r\n     * Specifies an extranet zone.\r\n     */\r\n    UrlZone[UrlZone[\"Extranet\"] = 4] = \"Extranet\";\r\n})(UrlZone || (UrlZone = {}));\r\n//# sourceMappingURL=types.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryableInstance, SharePointQueryableCollection, defaultPath } from \"./sharepointqueryable\";\r\nimport { SiteGroups } from \"./sitegroups\";\r\nimport { extend, jsS, hOP } from \"@pnp/common\";\r\nimport { metadata } from \"./utils/metadata\";\r\n/**\r\n * Describes a set of role assignments for the current scope\r\n *\r\n */\r\nvar RoleAssignments = /** @class */ (function (_super) {\r\n    tslib_1.__extends(RoleAssignments, _super);\r\n    function RoleAssignments() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    RoleAssignments_1 = RoleAssignments;\r\n    /**\r\n     * Gets the role assignment associated with the specified principal id from the collection.\r\n     *\r\n     * @param id The id of the role assignment\r\n     */\r\n    RoleAssignments.prototype.getById = function (id) {\r\n        var ra = new RoleAssignment(this);\r\n        ra.concat(\"(\" + id + \")\");\r\n        return ra;\r\n    };\r\n    /**\r\n     * Adds a new role assignment with the specified principal and role definitions to the collection\r\n     *\r\n     * @param principalId The id of the user or group to assign permissions to\r\n     * @param roleDefId The id of the role definition that defines the permissions to assign\r\n     *\r\n     */\r\n    RoleAssignments.prototype.add = function (principalId, roleDefId) {\r\n        return this.clone(RoleAssignments_1, \"addroleassignment(principalid=\" + principalId + \", roledefid=\" + roleDefId + \")\").postCore();\r\n    };\r\n    /**\r\n     * Removes the role assignment with the specified principal and role definition from the collection\r\n     *\r\n     * @param principalId The id of the user or group in the role assignment\r\n     * @param roleDefId The id of the role definition in the role assignment\r\n     *\r\n     */\r\n    RoleAssignments.prototype.remove = function (principalId, roleDefId) {\r\n        return this.clone(RoleAssignments_1, \"removeroleassignment(principalid=\" + principalId + \", roledefid=\" + roleDefId + \")\").postCore();\r\n    };\r\n    var RoleAssignments_1;\r\n    RoleAssignments = RoleAssignments_1 = tslib_1.__decorate([\r\n        defaultPath(\"roleassignments\")\r\n    ], RoleAssignments);\r\n    return RoleAssignments;\r\n}(SharePointQueryableCollection));\r\nexport { RoleAssignments };\r\n/**\r\n * Describes a role assignment\r\n *\r\n */\r\nvar RoleAssignment = /** @class */ (function (_super) {\r\n    tslib_1.__extends(RoleAssignment, _super);\r\n    function RoleAssignment() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * Deletes this role assignment\r\n         *\r\n         */\r\n        _this.delete = _this._delete;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(RoleAssignment.prototype, \"groups\", {\r\n        /**\r\n         * Gets the groups that directly belong to the access control list (ACL) for this securable object\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteGroups(this, \"groups\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RoleAssignment.prototype, \"bindings\", {\r\n        /**\r\n         * Gets the role definition bindings for this role assignment\r\n         *\r\n         */\r\n        get: function () {\r\n            return new RoleDefinitionBindings(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return RoleAssignment;\r\n}(SharePointQueryableInstance));\r\nexport { RoleAssignment };\r\n/**\r\n * Describes a collection of role definitions\r\n *\r\n */\r\nvar RoleDefinitions = /** @class */ (function (_super) {\r\n    tslib_1.__extends(RoleDefinitions, _super);\r\n    function RoleDefinitions() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets the role definition with the specified id from the collection\r\n     *\r\n     * @param id The id of the role definition\r\n     *\r\n     */\r\n    RoleDefinitions.prototype.getById = function (id) {\r\n        return new RoleDefinition(this, \"getById(\" + id + \")\");\r\n    };\r\n    /**\r\n     * Gets the role definition with the specified name\r\n     *\r\n     * @param name The name of the role definition\r\n     *\r\n     */\r\n    RoleDefinitions.prototype.getByName = function (name) {\r\n        return new RoleDefinition(this, \"getbyname('\" + name + \"')\");\r\n    };\r\n    /**\r\n     * Gets the role definition with the specified role type\r\n     *\r\n     * @param roleTypeKind The roletypekind of the role definition (None=0, Guest=1, Reader=2, Contributor=3, WebDesigner=4, Administrator=5, Editor=6, System=7)\r\n     *\r\n     */\r\n    RoleDefinitions.prototype.getByType = function (roleTypeKind) {\r\n        return new RoleDefinition(this, \"getbytype(\" + roleTypeKind + \")\");\r\n    };\r\n    /**\r\n     * Creates a role definition\r\n     *\r\n     * @param name The new role definition's name\r\n     * @param description The new role definition's description\r\n     * @param order The order in which the role definition appears\r\n     * @param basePermissions The permissions mask for this role definition\r\n     *\r\n     */\r\n    RoleDefinitions.prototype.add = function (name, description, order, basePermissions) {\r\n        var _this = this;\r\n        var postBody = jsS({\r\n            BasePermissions: {\r\n                High: basePermissions.High.toString(),\r\n                Low: basePermissions.Low.toString(),\r\n            },\r\n            Description: description,\r\n            Name: name,\r\n            Order: order,\r\n            __metadata: { \"type\": \"SP.RoleDefinition\" },\r\n        });\r\n        return this.postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                definition: _this.getById(data.Id),\r\n            };\r\n        });\r\n    };\r\n    RoleDefinitions = tslib_1.__decorate([\r\n        defaultPath(\"roledefinitions\")\r\n    ], RoleDefinitions);\r\n    return RoleDefinitions;\r\n}(SharePointQueryableCollection));\r\nexport { RoleDefinitions };\r\n/**\r\n * Describes a role definition\r\n *\r\n */\r\nvar RoleDefinition = /** @class */ (function (_super) {\r\n    tslib_1.__extends(RoleDefinition, _super);\r\n    function RoleDefinition() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * Deletes this role definition\r\n         *\r\n         */\r\n        _this.delete = _this._delete;\r\n        return _this;\r\n        /* tslint:enable */\r\n    }\r\n    /**\r\n     * Updates this role definition with the supplied properties\r\n     *\r\n     * @param properties A plain object hash of values to update for the role definition\r\n     */\r\n    /* tslint:disable no-string-literal */\r\n    RoleDefinition.prototype.update = function (properties) {\r\n        var _this = this;\r\n        if (hOP(properties, \"BasePermissions\") !== undefined) {\r\n            properties[\"BasePermissions\"] = extend({ __metadata: { type: \"SP.BasePermissions\" } }, {\r\n                High: properties[\"BasePermissions\"].High.toString(),\r\n                Low: properties[\"BasePermissions\"].Low.toString(),\r\n            });\r\n        }\r\n        var postBody = jsS(extend(metadata(\"SP.RoleDefinition\"), properties));\r\n        return this.postCore({\r\n            body: postBody,\r\n            headers: {\r\n                \"X-HTTP-Method\": \"MERGE\",\r\n            },\r\n        }).then(function (data) {\r\n            var retDef = _this;\r\n            if (hOP(properties, \"Name\")) {\r\n                var parent_1 = _this.getParent(RoleDefinitions, _this.parentUrl, \"\");\r\n                retDef = parent_1.getByName(properties[\"Name\"]);\r\n            }\r\n            return {\r\n                data: data,\r\n                definition: retDef,\r\n            };\r\n        });\r\n    };\r\n    return RoleDefinition;\r\n}(SharePointQueryableInstance));\r\nexport { RoleDefinition };\r\n/**\r\n * Describes the role definitons bound to a role assignment object\r\n *\r\n */\r\nvar RoleDefinitionBindings = /** @class */ (function (_super) {\r\n    tslib_1.__extends(RoleDefinitionBindings, _super);\r\n    function RoleDefinitionBindings() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    RoleDefinitionBindings = tslib_1.__decorate([\r\n        defaultPath(\"roledefinitionbindings\")\r\n    ], RoleDefinitionBindings);\r\n    return RoleDefinitionBindings;\r\n}(SharePointQueryableCollection));\r\nexport { RoleDefinitionBindings };\r\n//# sourceMappingURL=roles.js.map","import * as tslib_1 from \"tslib\";\r\nimport { RoleAssignments } from \"./roles\";\r\nimport { PermissionKind } from \"./types\";\r\nimport { SharePointQueryable, SharePointQueryableInstance } from \"./sharepointqueryable\";\r\nimport { hOP } from \"@pnp/common\";\r\nvar SharePointQueryableSecurable = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SharePointQueryableSecurable, _super);\r\n    function SharePointQueryableSecurable() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(SharePointQueryableSecurable.prototype, \"roleAssignments\", {\r\n        /**\r\n         * Gets the set of role assignments for this item\r\n         *\r\n         */\r\n        get: function () {\r\n            return new RoleAssignments(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SharePointQueryableSecurable.prototype, \"firstUniqueAncestorSecurableObject\", {\r\n        /**\r\n         * Gets the closest securable up the security hierarchy whose permissions are applied to this list item\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableInstance(this, \"FirstUniqueAncestorSecurableObject\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets the effective permissions for the user supplied\r\n     *\r\n     * @param loginName The claims username for the user (ex: i:0#.f|membership|user@domain.com)\r\n     */\r\n    SharePointQueryableSecurable.prototype.getUserEffectivePermissions = function (loginName) {\r\n        var q = this.clone(SharePointQueryable, \"getUserEffectivePermissions(@user)\");\r\n        q.query.set(\"@user\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.get().then(function (r) {\r\n            // handle verbose mode\r\n            return hOP(r, \"GetUserEffectivePermissions\") ? r.GetUserEffectivePermissions : r;\r\n        });\r\n    };\r\n    /**\r\n     * Gets the effective permissions for the current user\r\n     */\r\n    SharePointQueryableSecurable.prototype.getCurrentUserEffectivePermissions = function () {\r\n        var _this = this;\r\n        // remove need to reference Web here, which created a circular build issue\r\n        var w = new SharePointQueryableInstance(\"_api/web\", \"currentuser\");\r\n        return w.configureFrom(this).select(\"LoginName\").get().then(function (user) {\r\n            return _this.getUserEffectivePermissions(user.LoginName);\r\n        });\r\n    };\r\n    /**\r\n     * Breaks the security inheritance at this level optinally copying permissions and clearing subscopes\r\n     *\r\n     * @param copyRoleAssignments If true the permissions are copied from the current parent scope\r\n     * @param clearSubscopes Optional. true to make all child securable objects inherit role assignments from the current object\r\n     */\r\n    SharePointQueryableSecurable.prototype.breakRoleInheritance = function (copyRoleAssignments, clearSubscopes) {\r\n        if (copyRoleAssignments === void 0) { copyRoleAssignments = false; }\r\n        if (clearSubscopes === void 0) { clearSubscopes = false; }\r\n        return this.clone(SharePointQueryableSecurable, \"breakroleinheritance(copyroleassignments=\" + copyRoleAssignments + \", clearsubscopes=\" + clearSubscopes + \")\").postCore();\r\n    };\r\n    /**\r\n     * Removes the local role assignments so that it re-inherit role assignments from the parent object.\r\n     *\r\n     */\r\n    SharePointQueryableSecurable.prototype.resetRoleInheritance = function () {\r\n        return this.clone(SharePointQueryableSecurable, \"resetroleinheritance\").postCore();\r\n    };\r\n    /**\r\n     * Determines if a given user has the appropriate permissions\r\n     *\r\n     * @param loginName The user to check\r\n     * @param permission The permission being checked\r\n     */\r\n    SharePointQueryableSecurable.prototype.userHasPermissions = function (loginName, permission) {\r\n        var _this = this;\r\n        return this.getUserEffectivePermissions(loginName).then(function (perms) {\r\n            return _this.hasPermissions(perms, permission);\r\n        });\r\n    };\r\n    /**\r\n     * Determines if the current user has the requested permissions\r\n     *\r\n     * @param permission The permission we wish to check\r\n     */\r\n    SharePointQueryableSecurable.prototype.currentUserHasPermissions = function (permission) {\r\n        var _this = this;\r\n        return this.getCurrentUserEffectivePermissions().then(function (perms) {\r\n            return _this.hasPermissions(perms, permission);\r\n        });\r\n    };\r\n    /**\r\n     * Taken from sp.js, checks the supplied permissions against the mask\r\n     *\r\n     * @param value The security principal's permissions on the given object\r\n     * @param perm The permission checked against the value\r\n     */\r\n    /* tslint:disable:no-bitwise */\r\n    SharePointQueryableSecurable.prototype.hasPermissions = function (value, perm) {\r\n        if (!perm) {\r\n            return true;\r\n        }\r\n        if (perm === PermissionKind.FullMask) {\r\n            return (value.High & 32767) === 32767 && value.Low === 65535;\r\n        }\r\n        perm = perm - 1;\r\n        var num = 1;\r\n        if (perm >= 0 && perm < 32) {\r\n            num = num << perm;\r\n            return 0 !== (value.Low & num);\r\n        }\r\n        else if (perm >= 32 && perm < 64) {\r\n            num = num << perm - 32;\r\n            return 0 !== (value.High & num);\r\n        }\r\n        return false;\r\n    };\r\n    return SharePointQueryableSecurable;\r\n}(SharePointQueryableInstance));\r\nexport { SharePointQueryableSecurable };\r\n//# sourceMappingURL=sharepointqueryablesecurable.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryableCollection, SharePointQueryableInstance, defaultPath } from \"./sharepointqueryable\";\r\nimport { TextParser, BlobParser, JSONParser, BufferParser } from \"@pnp/odata\";\r\nimport { extend, getGUID } from \"@pnp/common\";\r\nimport { LimitedWebPartManager } from \"./webparts\";\r\nimport { Item } from \"./items\";\r\nimport { SharePointQueryableShareableFile } from \"./sharepointqueryableshareable\";\r\nimport { odataUrlFrom } from \"./odata\";\r\n/**\r\n * Describes a collection of File objects\r\n *\r\n */\r\nvar Files = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Files, _super);\r\n    function Files() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Files_1 = Files;\r\n    /**\r\n     * Gets a File by filename\r\n     *\r\n     * @param name The name of the file, including extension.\r\n     */\r\n    Files.prototype.getByName = function (name) {\r\n        var f = new File(this);\r\n        f.concat(\"('\" + name + \"')\");\r\n        return f;\r\n    };\r\n    /**\r\n     * Uploads a file. Not supported for batching\r\n     *\r\n     * @param url The folder-relative url of the file.\r\n     * @param content The file contents blob.\r\n     * @param shouldOverWrite Should a file with the same name in the same location be overwritten? (default: true)\r\n     * @returns The new File and the raw response.\r\n     */\r\n    Files.prototype.add = function (url, content, shouldOverWrite) {\r\n        var _this = this;\r\n        if (shouldOverWrite === void 0) { shouldOverWrite = true; }\r\n        return new Files_1(this, \"add(overwrite=\" + shouldOverWrite + \",url='\" + url + \"')\")\r\n            .postCore({\r\n            body: content,\r\n        }).then(function (response) {\r\n            return {\r\n                data: response,\r\n                file: _this.getByName(url),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Uploads a file. Not supported for batching\r\n     *\r\n     * @param url The folder-relative url of the file.\r\n     * @param content The Blob file content to add\r\n     * @param progress A callback function which can be used to track the progress of the upload\r\n     * @param shouldOverWrite Should a file with the same name in the same location be overwritten? (default: true)\r\n     * @param chunkSize The size of each file slice, in bytes (default: 10485760)\r\n     * @returns The new File and the raw response.\r\n     */\r\n    Files.prototype.addChunked = function (url, content, progress, shouldOverWrite, chunkSize) {\r\n        var _this = this;\r\n        if (shouldOverWrite === void 0) { shouldOverWrite = true; }\r\n        if (chunkSize === void 0) { chunkSize = 10485760; }\r\n        var adder = this.clone(Files_1, \"add(overwrite=\" + shouldOverWrite + \",url='\" + url + \"')\", false);\r\n        return adder.postCore()\r\n            .then(function () { return _this.getByName(url); })\r\n            .then(function (file) { return file.setContentChunked(content, progress, chunkSize); });\r\n    };\r\n    /**\r\n     * Adds a ghosted file to an existing list or document library. Not supported for batching.\r\n     *\r\n     * @param fileUrl The server-relative url where you want to save the file.\r\n     * @param templateFileType The type of use to create the file.\r\n     * @returns The template file that was added and the raw response.\r\n     */\r\n    Files.prototype.addTemplateFile = function (fileUrl, templateFileType) {\r\n        var _this = this;\r\n        return this.clone(Files_1, \"addTemplateFile(urloffile='\" + fileUrl + \"',templatefiletype=\" + templateFileType + \")\", false)\r\n            .postCore().then(function (response) {\r\n            return {\r\n                data: response,\r\n                file: _this.getByName(fileUrl),\r\n            };\r\n        });\r\n    };\r\n    var Files_1;\r\n    Files = Files_1 = tslib_1.__decorate([\r\n        defaultPath(\"files\")\r\n    ], Files);\r\n    return Files;\r\n}(SharePointQueryableCollection));\r\nexport { Files };\r\n/**\r\n * Describes a single File instance\r\n *\r\n */\r\nvar File = /** @class */ (function (_super) {\r\n    tslib_1.__extends(File, _super);\r\n    function File() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(File.prototype, \"listItemAllFields\", {\r\n        /**\r\n         * Gets a value that specifies the list item field values for the list item corresponding to the file.\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableInstance(this, \"listItemAllFields\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(File.prototype, \"versions\", {\r\n        /**\r\n         * Gets a collection of versions\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Versions(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Approves the file submitted for content approval with the specified comment.\r\n     * Only documents in lists that are enabled for content approval can be approved.\r\n     *\r\n     * @param comment The comment for the approval.\r\n     */\r\n    File.prototype.approve = function (comment) {\r\n        if (comment === void 0) { comment = \"\"; }\r\n        return this.clone(File, \"approve(comment='\" + comment + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Stops the chunk upload session without saving the uploaded data. Does not support batching.\r\n     * If the file doesn’t already exist in the library, the partially uploaded file will be deleted.\r\n     * Use this in response to user action (as in a request to cancel an upload) or an error or exception.\r\n     * Use the uploadId value that was passed to the StartUpload method that started the upload session.\r\n     * This method is currently available only on Office 365.\r\n     *\r\n     * @param uploadId The unique identifier of the upload session.\r\n     */\r\n    File.prototype.cancelUpload = function (uploadId) {\r\n        return this.clone(File, \"cancelUpload(uploadId=guid'\" + uploadId + \"')\", false).postCore();\r\n    };\r\n    /**\r\n     * Checks the file in to a document library based on the check-in type.\r\n     *\r\n     * @param comment A comment for the check-in. Its length must be <= 1023.\r\n     * @param checkinType The check-in type for the file.\r\n     */\r\n    File.prototype.checkin = function (comment, checkinType) {\r\n        if (comment === void 0) { comment = \"\"; }\r\n        if (checkinType === void 0) { checkinType = CheckinType.Major; }\r\n        if (comment.length > 1023) {\r\n            throw Error(\"The maximum comment length is 1023 characters.\");\r\n        }\r\n        return this.clone(File, \"checkin(comment='\" + comment + \"',checkintype=\" + checkinType + \")\").postCore();\r\n    };\r\n    /**\r\n     * Checks out the file from a document library.\r\n     */\r\n    File.prototype.checkout = function () {\r\n        return this.clone(File, \"checkout\").postCore();\r\n    };\r\n    /**\r\n     * Copies the file to the destination url.\r\n     *\r\n     * @param url The absolute url or server relative url of the destination file path to copy to.\r\n     * @param shouldOverWrite Should a file with the same name in the same location be overwritten?\r\n     */\r\n    File.prototype.copyTo = function (url, shouldOverWrite) {\r\n        if (shouldOverWrite === void 0) { shouldOverWrite = true; }\r\n        return this.clone(File, \"copyTo(strnewurl='\" + url + \"',boverwrite=\" + shouldOverWrite + \")\").postCore();\r\n    };\r\n    /**\r\n     * Delete this file.\r\n     *\r\n     * @param eTag Value used in the IF-Match header, by default \"*\"\r\n     */\r\n    File.prototype.delete = function (eTag) {\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        return this.clone(File, null).postCore({\r\n            headers: {\r\n                \"IF-Match\": eTag,\r\n                \"X-HTTP-Method\": \"DELETE\",\r\n            },\r\n        });\r\n    };\r\n    /**\r\n     * Denies approval for a file that was submitted for content approval.\r\n     * Only documents in lists that are enabled for content approval can be denied.\r\n     *\r\n     * @param comment The comment for the denial.\r\n     */\r\n    File.prototype.deny = function (comment) {\r\n        if (comment === void 0) { comment = \"\"; }\r\n        if (comment.length > 1023) {\r\n            throw Error(\"The maximum comment length is 1023 characters.\");\r\n        }\r\n        return this.clone(File, \"deny(comment='\" + comment + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Specifies the control set used to access, modify, or add Web Parts associated with this Web Part Page and view.\r\n     * An exception is thrown if the file is not an ASPX page.\r\n     *\r\n     * @param scope The WebPartsPersonalizationScope view on the Web Parts page.\r\n     */\r\n    File.prototype.getLimitedWebPartManager = function (scope) {\r\n        if (scope === void 0) { scope = WebPartsPersonalizationScope.Shared; }\r\n        return new LimitedWebPartManager(this, \"getLimitedWebPartManager(scope=\" + scope + \")\");\r\n    };\r\n    /**\r\n     * Moves the file to the specified destination url.\r\n     *\r\n     * @param url The absolute url or server relative url of the destination file path to move to.\r\n     * @param moveOperations The bitwise MoveOperations value for how to move the file.\r\n     */\r\n    File.prototype.moveTo = function (url, moveOperations) {\r\n        if (moveOperations === void 0) { moveOperations = MoveOperations.Overwrite; }\r\n        return this.clone(File, \"moveTo(newurl='\" + url + \"',flags=\" + moveOperations + \")\").postCore();\r\n    };\r\n    /**\r\n     * Submits the file for content approval with the specified comment.\r\n     *\r\n     * @param comment The comment for the published file. Its length must be <= 1023.\r\n     */\r\n    File.prototype.publish = function (comment) {\r\n        if (comment === void 0) { comment = \"\"; }\r\n        if (comment.length > 1023) {\r\n            throw Error(\"The maximum comment length is 1023 characters.\");\r\n        }\r\n        return this.clone(File, \"publish(comment='\" + comment + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Moves the file to the Recycle Bin and returns the identifier of the new Recycle Bin item.\r\n     *\r\n     * @returns The GUID of the recycled file.\r\n     */\r\n    File.prototype.recycle = function () {\r\n        return this.clone(File, \"recycle\").postCore();\r\n    };\r\n    /**\r\n     * Reverts an existing checkout for the file.\r\n     *\r\n     */\r\n    File.prototype.undoCheckout = function () {\r\n        return this.clone(File, \"undoCheckout\").postCore();\r\n    };\r\n    /**\r\n     * Removes the file from content approval or unpublish a major version.\r\n     *\r\n     * @param comment The comment for the unpublish operation. Its length must be <= 1023.\r\n     */\r\n    File.prototype.unpublish = function (comment) {\r\n        if (comment === void 0) { comment = \"\"; }\r\n        if (comment.length > 1023) {\r\n            throw Error(\"The maximum comment length is 1023 characters.\");\r\n        }\r\n        return this.clone(File, \"unpublish(comment='\" + comment + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Gets the contents of the file as text. Not supported in batching.\r\n     *\r\n     */\r\n    File.prototype.getText = function () {\r\n        return this.clone(File, \"$value\", false).get(new TextParser(), { headers: { \"binaryStringResponseBody\": \"true\" } });\r\n    };\r\n    /**\r\n     * Gets the contents of the file as a blob, does not work in Node.js. Not supported in batching.\r\n     *\r\n     */\r\n    File.prototype.getBlob = function () {\r\n        return this.clone(File, \"$value\", false).get(new BlobParser(), { headers: { \"binaryStringResponseBody\": \"true\" } });\r\n    };\r\n    /**\r\n     * Gets the contents of a file as an ArrayBuffer, works in Node.js. Not supported in batching.\r\n     */\r\n    File.prototype.getBuffer = function () {\r\n        return this.clone(File, \"$value\", false).get(new BufferParser(), { headers: { \"binaryStringResponseBody\": \"true\" } });\r\n    };\r\n    /**\r\n     * Gets the contents of a file as an ArrayBuffer, works in Node.js. Not supported in batching.\r\n     */\r\n    File.prototype.getJSON = function () {\r\n        return this.clone(File, \"$value\", false).get(new JSONParser(), { headers: { \"binaryStringResponseBody\": \"true\" } });\r\n    };\r\n    /**\r\n     * Sets the content of a file, for large files use setContentChunked. Not supported in batching.\r\n     *\r\n     * @param content The file content\r\n     *\r\n     */\r\n    File.prototype.setContent = function (content) {\r\n        var _this = this;\r\n        return this.clone(File, \"$value\", false).postCore({\r\n            body: content,\r\n            headers: {\r\n                \"X-HTTP-Method\": \"PUT\",\r\n            },\r\n        }).then(function (_) { return new File(_this); });\r\n    };\r\n    /**\r\n     * Gets the associated list item for this folder, loading the default properties\r\n     */\r\n    File.prototype.getItem = function () {\r\n        var _this = this;\r\n        var selects = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            selects[_i] = arguments[_i];\r\n        }\r\n        var q = this.listItemAllFields;\r\n        return q.select.apply(q, selects).get().then(function (d) {\r\n            return extend((new Item(odataUrlFrom(d))).configureFrom(_this), d);\r\n        });\r\n    };\r\n    /**\r\n     * Sets the contents of a file using a chunked upload approach. Not supported in batching.\r\n     *\r\n     * @param file The file to upload\r\n     * @param progress A callback function which can be used to track the progress of the upload\r\n     * @param chunkSize The size of each file slice, in bytes (default: 10485760)\r\n     */\r\n    File.prototype.setContentChunked = function (file, progress, chunkSize) {\r\n        var _this = this;\r\n        if (chunkSize === void 0) { chunkSize = 10485760; }\r\n        if (progress === undefined) {\r\n            progress = function () { return null; };\r\n        }\r\n        var fileSize = file.size;\r\n        var blockCount = parseInt((file.size / chunkSize).toString(), 10) + ((file.size % chunkSize === 0) ? 1 : 0);\r\n        var uploadId = getGUID();\r\n        // start the chain with the first fragment\r\n        progress({ uploadId: uploadId, blockNumber: 1, chunkSize: chunkSize, currentPointer: 0, fileSize: fileSize, stage: \"starting\", totalBlocks: blockCount });\r\n        var chain = this.startUpload(uploadId, file.slice(0, chunkSize));\r\n        var _loop_1 = function (i) {\r\n            chain = chain.then(function (pointer) {\r\n                progress({ uploadId: uploadId, blockNumber: i, chunkSize: chunkSize, currentPointer: pointer, fileSize: fileSize, stage: \"continue\", totalBlocks: blockCount });\r\n                return _this.continueUpload(uploadId, pointer, file.slice(pointer, pointer + chunkSize));\r\n            });\r\n        };\r\n        // skip the first and last blocks\r\n        for (var i = 2; i < blockCount; i++) {\r\n            _loop_1(i);\r\n        }\r\n        return chain.then(function (pointer) {\r\n            progress({ uploadId: uploadId, blockNumber: blockCount, chunkSize: chunkSize, currentPointer: pointer, fileSize: fileSize, stage: \"finishing\", totalBlocks: blockCount });\r\n            return _this.finishUpload(uploadId, pointer, file.slice(pointer));\r\n        });\r\n    };\r\n    /**\r\n     * Starts a new chunk upload session and uploads the first fragment.\r\n     * The current file content is not changed when this method completes.\r\n     * The method is idempotent (and therefore does not change the result) as long as you use the same values for uploadId and stream.\r\n     * The upload session ends either when you use the CancelUpload method or when you successfully\r\n     * complete the upload session by passing the rest of the file contents through the ContinueUpload and FinishUpload methods.\r\n     * The StartUpload and ContinueUpload methods return the size of the running total of uploaded data in bytes,\r\n     * so you can pass those return values to subsequent uses of ContinueUpload and FinishUpload.\r\n     * This method is currently available only on Office 365.\r\n     *\r\n     * @param uploadId The unique identifier of the upload session.\r\n     * @param fragment The file contents.\r\n     * @returns The size of the total uploaded data in bytes.\r\n     */\r\n    File.prototype.startUpload = function (uploadId, fragment) {\r\n        return this.clone(File, \"startUpload(uploadId=guid'\" + uploadId + \"')\", false)\r\n            .postCore({ body: fragment })\r\n            .then(function (n) {\r\n            // When OData=verbose the payload has the following shape:\r\n            // { StartUpload: \"10485760\" }\r\n            if (typeof n === \"object\") {\r\n                n = n.StartUpload;\r\n            }\r\n            return parseFloat(n);\r\n        });\r\n    };\r\n    /**\r\n     * Continues the chunk upload session with an additional fragment.\r\n     * The current file content is not changed.\r\n     * Use the uploadId value that was passed to the StartUpload method that started the upload session.\r\n     * This method is currently available only on Office 365.\r\n     *\r\n     * @param uploadId The unique identifier of the upload session.\r\n     * @param fileOffset The size of the offset into the file where the fragment starts.\r\n     * @param fragment The file contents.\r\n     * @returns The size of the total uploaded data in bytes.\r\n     */\r\n    File.prototype.continueUpload = function (uploadId, fileOffset, fragment) {\r\n        return this.clone(File, \"continueUpload(uploadId=guid'\" + uploadId + \"',fileOffset=\" + fileOffset + \")\", false)\r\n            .postCore({ body: fragment })\r\n            .then(function (n) {\r\n            // When OData=verbose the payload has the following shape:\r\n            // { ContinueUpload: \"20971520\" }\r\n            if (typeof n === \"object\") {\r\n                n = n.ContinueUpload;\r\n            }\r\n            return parseFloat(n);\r\n        });\r\n    };\r\n    /**\r\n     * Uploads the last file fragment and commits the file. The current file content is changed when this method completes.\r\n     * Use the uploadId value that was passed to the StartUpload method that started the upload session.\r\n     * This method is currently available only on Office 365.\r\n     *\r\n     * @param uploadId The unique identifier of the upload session.\r\n     * @param fileOffset The size of the offset into the file where the fragment starts.\r\n     * @param fragment The file contents.\r\n     * @returns The newly uploaded file.\r\n     */\r\n    File.prototype.finishUpload = function (uploadId, fileOffset, fragment) {\r\n        return this.clone(File, \"finishUpload(uploadId=guid'\" + uploadId + \"',fileOffset=\" + fileOffset + \")\", false)\r\n            .postCore({ body: fragment })\r\n            .then(function (response) {\r\n            return {\r\n                data: response,\r\n                file: new File(odataUrlFrom(response)),\r\n            };\r\n        });\r\n    };\r\n    return File;\r\n}(SharePointQueryableShareableFile));\r\nexport { File };\r\n/**\r\n * Describes a collection of Version objects\r\n *\r\n */\r\nvar Versions = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Versions, _super);\r\n    function Versions() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Versions_1 = Versions;\r\n    /**\r\n     * Gets a version by id\r\n     *\r\n     * @param versionId The id of the version to retrieve\r\n     */\r\n    Versions.prototype.getById = function (versionId) {\r\n        var v = new Version(this);\r\n        v.concat(\"(\" + versionId + \")\");\r\n        return v;\r\n    };\r\n    /**\r\n     * Deletes all the file version objects in the collection.\r\n     *\r\n     */\r\n    Versions.prototype.deleteAll = function () {\r\n        return new Versions_1(this, \"deleteAll\").postCore();\r\n    };\r\n    /**\r\n     * Deletes the specified version of the file.\r\n     *\r\n     * @param versionId The ID of the file version to delete.\r\n     */\r\n    Versions.prototype.deleteById = function (versionId) {\r\n        return this.clone(Versions_1, \"deleteById(vid=\" + versionId + \")\").postCore();\r\n    };\r\n    /**\r\n     * Recycles the specified version of the file.\r\n     *\r\n     * @param versionId The ID of the file version to delete.\r\n     */\r\n    Versions.prototype.recycleByID = function (versionId) {\r\n        return this.clone(Versions_1, \"recycleByID(vid=\" + versionId + \")\").postCore();\r\n    };\r\n    /**\r\n     * Deletes the file version object with the specified version label.\r\n     *\r\n     * @param label The version label of the file version to delete, for example: 1.2\r\n     */\r\n    Versions.prototype.deleteByLabel = function (label) {\r\n        return this.clone(Versions_1, \"deleteByLabel(versionlabel='\" + label + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Recycles the file version object with the specified version label.\r\n     *\r\n     * @param label The version label of the file version to delete, for example: 1.2\r\n     */\r\n    Versions.prototype.recycleByLabel = function (label) {\r\n        return this.clone(Versions_1, \"recycleByLabel(versionlabel='\" + label + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Creates a new file version from the file specified by the version label.\r\n     *\r\n     * @param label The version label of the file version to restore, for example: 1.2\r\n     */\r\n    Versions.prototype.restoreByLabel = function (label) {\r\n        return this.clone(Versions_1, \"restoreByLabel(versionlabel='\" + label + \"')\").postCore();\r\n    };\r\n    var Versions_1;\r\n    Versions = Versions_1 = tslib_1.__decorate([\r\n        defaultPath(\"versions\")\r\n    ], Versions);\r\n    return Versions;\r\n}(SharePointQueryableCollection));\r\nexport { Versions };\r\n/**\r\n * Describes a single Version instance\r\n *\r\n */\r\nvar Version = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Version, _super);\r\n    function Version() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n        * Delete a specific version of a file.\r\n        *\r\n        * @param eTag Value used in the IF-Match header, by default \"*\"\r\n        */\r\n        _this.delete = _this._deleteWithETag;\r\n        return _this;\r\n        // /**\r\n        // * Delete a specific version of a file.\r\n        // *\r\n        // * @param eTag Value used in the IF-Match header, by default \"*\"\r\n        // */\r\n        // public delete(eTag = \"*\"): Promise<void> {\r\n        //     return this.postCore({\r\n        //         headers: {\r\n        //             \"IF-Match\": eTag,\r\n        //             \"X-HTTP-Method\": \"DELETE\",\r\n        //         },\r\n        //     });\r\n        // }\r\n    }\r\n    return Version;\r\n}(SharePointQueryableInstance));\r\nexport { Version };\r\nexport var CheckinType;\r\n(function (CheckinType) {\r\n    CheckinType[CheckinType[\"Minor\"] = 0] = \"Minor\";\r\n    CheckinType[CheckinType[\"Major\"] = 1] = \"Major\";\r\n    CheckinType[CheckinType[\"Overwrite\"] = 2] = \"Overwrite\";\r\n})(CheckinType || (CheckinType = {}));\r\nexport var WebPartsPersonalizationScope;\r\n(function (WebPartsPersonalizationScope) {\r\n    WebPartsPersonalizationScope[WebPartsPersonalizationScope[\"User\"] = 0] = \"User\";\r\n    WebPartsPersonalizationScope[WebPartsPersonalizationScope[\"Shared\"] = 1] = \"Shared\";\r\n})(WebPartsPersonalizationScope || (WebPartsPersonalizationScope = {}));\r\nexport var MoveOperations;\r\n(function (MoveOperations) {\r\n    MoveOperations[MoveOperations[\"Overwrite\"] = 1] = \"Overwrite\";\r\n    MoveOperations[MoveOperations[\"AllowBrokenThickets\"] = 8] = \"AllowBrokenThickets\";\r\n})(MoveOperations || (MoveOperations = {}));\r\nexport var TemplateFileType;\r\n(function (TemplateFileType) {\r\n    TemplateFileType[TemplateFileType[\"StandardPage\"] = 0] = \"StandardPage\";\r\n    TemplateFileType[TemplateFileType[\"WikiPage\"] = 1] = \"WikiPage\";\r\n    TemplateFileType[TemplateFileType[\"FormPage\"] = 2] = \"FormPage\";\r\n    TemplateFileType[TemplateFileType[\"ClientSidePage\"] = 3] = \"ClientSidePage\";\r\n})(TemplateFileType || (TemplateFileType = {}));\r\n//# sourceMappingURL=files.js.map","import * as tslib_1 from \"tslib\";\r\nimport { extend, combine, jsS } from \"@pnp/common\";\r\nimport { odataUrlFrom } from \"./odata\";\r\nimport { SharePointQueryable, SharePointQueryableInstance, SharePointQueryableCollection, } from \"./sharepointqueryable\";\r\nimport { SharePointQueryableSecurable } from \"./sharepointqueryablesecurable\";\r\nimport { RoleType, SharingLinkKind, SharingRole, } from \"./types\";\r\nimport { extractWebUrl } from \"./utils/extractweburl\";\r\n/**\r\n * Internal helper class used to augment classes to include sharing functionality\r\n */\r\nvar SharePointQueryableShareable = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SharePointQueryableShareable, _super);\r\n    function SharePointQueryableShareable() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets a sharing link for the supplied\r\n     *\r\n     * @param kind The kind of link to share\r\n     * @param expiration The optional expiration for this link\r\n     */\r\n    SharePointQueryableShareable.prototype.getShareLink = function (kind, expiration) {\r\n        if (expiration === void 0) { expiration = null; }\r\n        // date needs to be an ISO string or null\r\n        var expString = expiration !== null ? expiration.toISOString() : null;\r\n        // clone using the factory and send the request\r\n        return this.clone(SharePointQueryableShareable, \"shareLink\").postCore({\r\n            body: jsS({\r\n                request: {\r\n                    createLink: true,\r\n                    emailData: null,\r\n                    settings: {\r\n                        expiration: expString,\r\n                        linkKind: kind,\r\n                    },\r\n                },\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Shares this instance with the supplied users\r\n     *\r\n     * @param loginNames Resolved login names to share\r\n     * @param role The role\r\n     * @param requireSignin True to require the user is authenticated, otherwise false\r\n     * @param propagateAcl True to apply this share to all children\r\n     * @param emailData If supplied an email will be sent with the indicated properties\r\n     */\r\n    SharePointQueryableShareable.prototype.shareWith = function (loginNames, role, requireSignin, propagateAcl, emailData) {\r\n        var _this = this;\r\n        if (requireSignin === void 0) { requireSignin = false; }\r\n        if (propagateAcl === void 0) { propagateAcl = false; }\r\n        // handle the multiple input types\r\n        if (!Array.isArray(loginNames)) {\r\n            loginNames = [loginNames];\r\n        }\r\n        var userStr = jsS(loginNames.map(function (login) { return { Key: login }; }));\r\n        var roleFilter = role === SharingRole.Edit ? RoleType.Contributor : RoleType.Reader;\r\n        // start by looking up the role definition id we need to set the roleValue\r\n        // remove need to reference Web here, which created a circular build issue\r\n        var w = new SharePointQueryableCollection(\"_api/web\", \"roledefinitions\");\r\n        return w.select(\"Id\").filter(\"RoleTypeKind eq \" + roleFilter).get().then(function (def) {\r\n            if (!Array.isArray(def) || def.length < 1) {\r\n                throw Error(\"Could not locate a role defintion with RoleTypeKind \" + roleFilter);\r\n            }\r\n            var postBody = {\r\n                includeAnonymousLinkInEmail: requireSignin,\r\n                peoplePickerInput: userStr,\r\n                propagateAcl: propagateAcl,\r\n                roleValue: \"role:\" + def[0].Id,\r\n                useSimplifiedRoles: true,\r\n            };\r\n            if (emailData !== undefined) {\r\n                postBody = extend(postBody, {\r\n                    emailBody: emailData.body,\r\n                    emailSubject: emailData.subject !== undefined ? emailData.subject : \"\",\r\n                    sendEmail: true,\r\n                });\r\n            }\r\n            return _this.clone(SharePointQueryableShareable, \"shareObject\").postCore({\r\n                body: jsS(postBody),\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Shares an object based on the supplied options\r\n     *\r\n     * @param options The set of options to send to the ShareObject method\r\n     * @param bypass If true any processing is skipped and the options are sent directly to the ShareObject method\r\n     */\r\n    SharePointQueryableShareable.prototype.shareObject = function (options, bypass) {\r\n        var _this = this;\r\n        if (bypass === void 0) { bypass = false; }\r\n        if (bypass) {\r\n            // if the bypass flag is set send the supplied parameters directly to the service\r\n            return this.sendShareObjectRequest(options);\r\n        }\r\n        // extend our options with some defaults\r\n        options = extend(options, {\r\n            group: null,\r\n            includeAnonymousLinkInEmail: false,\r\n            propagateAcl: false,\r\n            useSimplifiedRoles: true,\r\n        }, true);\r\n        return this.getRoleValue(options.role, options.group).then(function (roleValue) {\r\n            // handle the multiple input types\r\n            if (!Array.isArray(options.loginNames)) {\r\n                options.loginNames = [options.loginNames];\r\n            }\r\n            var userStr = jsS(options.loginNames.map(function (login) { return { Key: login }; }));\r\n            var postBody = {\r\n                peoplePickerInput: userStr,\r\n                roleValue: roleValue,\r\n                url: options.url,\r\n            };\r\n            if (options.emailData !== undefined && options.emailData !== null) {\r\n                postBody = extend(postBody, {\r\n                    emailBody: options.emailData.body,\r\n                    emailSubject: options.emailData.subject !== undefined ? options.emailData.subject : \"Shared with you.\",\r\n                    sendEmail: true,\r\n                });\r\n            }\r\n            return _this.sendShareObjectRequest(postBody);\r\n        });\r\n    };\r\n    /**\r\n     * Calls the web's UnshareObject method\r\n     *\r\n     * @param url The url of the object to unshare\r\n     */\r\n    SharePointQueryableShareable.prototype.unshareObjectWeb = function (url) {\r\n        return this.clone(SharePointQueryableShareable, \"unshareObject\").postCore({\r\n            body: jsS({\r\n                url: url,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Checks Permissions on the list of Users and returns back role the users have on the Item.\r\n     *\r\n     * @param recipients The array of Entities for which Permissions need to be checked.\r\n     */\r\n    SharePointQueryableShareable.prototype.checkPermissions = function (recipients) {\r\n        return this.clone(SharePointQueryableShareable, \"checkPermissions\").postCore({\r\n            body: jsS({\r\n                recipients: recipients,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Get Sharing Information.\r\n     *\r\n     * @param request The SharingInformationRequest Object.\r\n     * @param expands Expand more fields.\r\n     *\r\n     */\r\n    SharePointQueryableShareable.prototype.getSharingInformation = function (request, expands) {\r\n        if (request === void 0) { request = null; }\r\n        var q = this.clone(SharePointQueryableShareable, \"getSharingInformation\");\r\n        return q.expand.apply(q, expands).postCore({\r\n            body: jsS({\r\n                request: request,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Gets the sharing settings of an item.\r\n     *\r\n     * @param useSimplifiedRoles Determines whether to use simplified roles.\r\n     */\r\n    SharePointQueryableShareable.prototype.getObjectSharingSettings = function (useSimplifiedRoles) {\r\n        if (useSimplifiedRoles === void 0) { useSimplifiedRoles = true; }\r\n        return this.clone(SharePointQueryableShareable, \"getObjectSharingSettings\").postCore({\r\n            body: jsS({\r\n                useSimplifiedRoles: useSimplifiedRoles,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Unshares this object\r\n     */\r\n    SharePointQueryableShareable.prototype.unshareObject = function () {\r\n        return this.clone(SharePointQueryableShareable, \"unshareObject\").postCore();\r\n    };\r\n    /**\r\n     * Deletes a link by type\r\n     *\r\n     * @param kind Deletes a sharing link by the kind of link\r\n     */\r\n    SharePointQueryableShareable.prototype.deleteLinkByKind = function (kind) {\r\n        return this.clone(SharePointQueryableShareable, \"deleteLinkByKind\").postCore({\r\n            body: jsS({ linkKind: kind }),\r\n        });\r\n    };\r\n    /**\r\n     * Removes the specified link to the item.\r\n     *\r\n     * @param kind The kind of link to be deleted.\r\n     * @param shareId\r\n     */\r\n    SharePointQueryableShareable.prototype.unshareLink = function (kind, shareId) {\r\n        if (shareId === void 0) { shareId = \"00000000-0000-0000-0000-000000000000\"; }\r\n        return this.clone(SharePointQueryableShareable, \"unshareLink\").postCore({\r\n            body: jsS({ linkKind: kind, shareId: shareId }),\r\n        });\r\n    };\r\n    /**\r\n     * Calculates the roleValue string used in the sharing query\r\n     *\r\n     * @param role The Sharing Role\r\n     * @param group The Group type\r\n     */\r\n    SharePointQueryableShareable.prototype.getRoleValue = function (role, group) {\r\n        // we will give group precedence, because we had to make a choice\r\n        if (group !== undefined && group !== null) {\r\n            switch (group) {\r\n                case RoleType.Contributor:\r\n                    // remove need to reference Web here, which created a circular build issue\r\n                    var memberGroup = new SharePointQueryableInstance(\"_api/web\", \"associatedmembergroup\");\r\n                    return memberGroup.select(\"Id\").get().then(function (g) { return \"group: \" + g.Id; });\r\n                case RoleType.Reader:\r\n                case RoleType.Guest:\r\n                    // remove need to reference Web here, which created a circular build issue\r\n                    var visitorGroup = new SharePointQueryableInstance(\"_api/web\", \"associatedvisitorgroup\");\r\n                    return visitorGroup.select(\"Id\").get().then(function (g) { return \"group: \" + g.Id; });\r\n                default:\r\n                    throw Error(\"Could not determine role value for supplied value. Contributor, Reader, and Guest are supported\");\r\n            }\r\n        }\r\n        else {\r\n            var roleFilter = role === SharingRole.Edit ? RoleType.Contributor : RoleType.Reader;\r\n            // remove need to reference Web here, which created a circular build issue\r\n            var roleDefs = new SharePointQueryableCollection(\"_api/web\", \"roledefinitions\");\r\n            return roleDefs.select(\"Id\").top(1).filter(\"RoleTypeKind eq \" + roleFilter).get().then(function (def) {\r\n                if (def.length < 1) {\r\n                    throw Error(\"Could not locate associated role definition for supplied role. Edit and View are supported\");\r\n                }\r\n                return \"role: \" + def[0].Id;\r\n            });\r\n        }\r\n    };\r\n    SharePointQueryableShareable.prototype.getShareObjectWeb = function (candidate) {\r\n        return Promise.resolve(new SharePointQueryableInstance(extractWebUrl(candidate), \"/_api/SP.Web.ShareObject\"));\r\n    };\r\n    SharePointQueryableShareable.prototype.sendShareObjectRequest = function (options) {\r\n        return this.getShareObjectWeb(this.toUrl()).then(function (web) {\r\n            return web.expand(\"UsersWithAccessRequests\", \"GroupsSharedWith\").as(SharePointQueryableShareable).postCore({\r\n                body: jsS(options),\r\n            });\r\n        });\r\n    };\r\n    return SharePointQueryableShareable;\r\n}(SharePointQueryable));\r\nexport { SharePointQueryableShareable };\r\nvar SharePointQueryableShareableWeb = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SharePointQueryableShareableWeb, _super);\r\n    function SharePointQueryableShareableWeb() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Shares this web with the supplied users\r\n     * @param loginNames The resolved login names to share\r\n     * @param role The role to share this web\r\n     * @param emailData Optional email data\r\n     */\r\n    SharePointQueryableShareableWeb.prototype.shareWith = function (loginNames, role, emailData) {\r\n        var _this = this;\r\n        if (role === void 0) { role = SharingRole.View; }\r\n        var dependency = this.addBatchDependency();\r\n        // remove need to reference Web here, which created a circular build issue\r\n        var web = new SharePointQueryableInstance(extractWebUrl(this.toUrl()), \"/_api/web/url\");\r\n        return web.get().then(function (url) {\r\n            dependency();\r\n            return _this.shareObject(combine(url, \"/_layouts/15/aclinv.aspx?forSharing=1&mbypass=1\"), loginNames, role, emailData);\r\n        });\r\n    };\r\n    /**\r\n     * Provides direct access to the static web.ShareObject method\r\n     *\r\n     * @param url The url to share\r\n     * @param loginNames Resolved loginnames string[] of a single login name string\r\n     * @param roleValue Role value\r\n     * @param emailData Optional email data\r\n     * @param groupId Optional group id\r\n     * @param propagateAcl\r\n     * @param includeAnonymousLinkInEmail\r\n     * @param useSimplifiedRoles\r\n     */\r\n    SharePointQueryableShareableWeb.prototype.shareObject = function (url, loginNames, role, emailData, group, propagateAcl, includeAnonymousLinkInEmail, useSimplifiedRoles) {\r\n        if (propagateAcl === void 0) { propagateAcl = false; }\r\n        if (includeAnonymousLinkInEmail === void 0) { includeAnonymousLinkInEmail = false; }\r\n        if (useSimplifiedRoles === void 0) { useSimplifiedRoles = true; }\r\n        return this.clone(SharePointQueryableShareable, null).shareObject({\r\n            emailData: emailData,\r\n            group: group,\r\n            includeAnonymousLinkInEmail: includeAnonymousLinkInEmail,\r\n            loginNames: loginNames,\r\n            propagateAcl: propagateAcl,\r\n            role: role,\r\n            url: url,\r\n            useSimplifiedRoles: useSimplifiedRoles,\r\n        });\r\n    };\r\n    /**\r\n     * Supplies a method to pass any set of arguments to ShareObject\r\n     *\r\n     * @param options The set of options to send to ShareObject\r\n     */\r\n    SharePointQueryableShareableWeb.prototype.shareObjectRaw = function (options) {\r\n        return this.clone(SharePointQueryableShareable, null).shareObject(options, true);\r\n    };\r\n    /**\r\n     * Unshares the object\r\n     *\r\n     * @param url The url of the object to stop sharing\r\n     */\r\n    SharePointQueryableShareableWeb.prototype.unshareObject = function (url) {\r\n        return this.clone(SharePointQueryableShareable, null).unshareObjectWeb(url);\r\n    };\r\n    return SharePointQueryableShareableWeb;\r\n}(SharePointQueryableSecurable));\r\nexport { SharePointQueryableShareableWeb };\r\nvar SharePointQueryableShareableItem = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SharePointQueryableShareableItem, _super);\r\n    function SharePointQueryableShareableItem() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets a link suitable for sharing for this item\r\n     *\r\n     * @param kind The type of link to share\r\n     * @param expiration The optional expiration date\r\n     */\r\n    SharePointQueryableShareableItem.prototype.getShareLink = function (kind, expiration) {\r\n        if (kind === void 0) { kind = SharingLinkKind.OrganizationView; }\r\n        if (expiration === void 0) { expiration = null; }\r\n        return this.clone(SharePointQueryableShareable, null).getShareLink(kind, expiration);\r\n    };\r\n    /**\r\n     * Shares this item with one or more users\r\n     *\r\n     * @param loginNames string or string[] of resolved login names to which this item will be shared\r\n     * @param role The role (View | Edit) applied to the share\r\n     * @param emailData Optional, if inlucded an email will be sent. Note subject currently has no effect.\r\n     */\r\n    SharePointQueryableShareableItem.prototype.shareWith = function (loginNames, role, requireSignin, emailData) {\r\n        if (role === void 0) { role = SharingRole.View; }\r\n        if (requireSignin === void 0) { requireSignin = false; }\r\n        return this.clone(SharePointQueryableShareable, null).shareWith(loginNames, role, requireSignin, false, emailData);\r\n    };\r\n    /**\r\n     * Checks Permissions on the list of Users and returns back role the users have on the Item.\r\n     *\r\n     * @param recipients The array of Entities for which Permissions need to be checked.\r\n     */\r\n    SharePointQueryableShareableItem.prototype.checkSharingPermissions = function (recipients) {\r\n        return this.clone(SharePointQueryableShareable, null).checkPermissions(recipients);\r\n    };\r\n    /**\r\n     * Get Sharing Information.\r\n     *\r\n     * @param request The SharingInformationRequest Object.\r\n     * @param expands Expand more fields.\r\n     *\r\n     */\r\n    SharePointQueryableShareableItem.prototype.getSharingInformation = function (request, expands) {\r\n        if (request === void 0) { request = null; }\r\n        return this.clone(SharePointQueryableShareable, null).getSharingInformation(request, expands);\r\n    };\r\n    /**\r\n     * Gets the sharing settings of an item.\r\n     *\r\n     * @param useSimplifiedRoles Determines whether to use simplified roles.\r\n     */\r\n    SharePointQueryableShareableItem.prototype.getObjectSharingSettings = function (useSimplifiedRoles) {\r\n        if (useSimplifiedRoles === void 0) { useSimplifiedRoles = true; }\r\n        return this.clone(SharePointQueryableShareable, null).getObjectSharingSettings(useSimplifiedRoles);\r\n    };\r\n    /**\r\n     * Unshare this item\r\n     */\r\n    SharePointQueryableShareableItem.prototype.unshare = function () {\r\n        return this.clone(SharePointQueryableShareable, null).unshareObject();\r\n    };\r\n    /**\r\n     * Deletes a sharing link by kind\r\n     *\r\n     * @param kind Deletes a sharing link by the kind of link\r\n     */\r\n    SharePointQueryableShareableItem.prototype.deleteSharingLinkByKind = function (kind) {\r\n        return this.clone(SharePointQueryableShareable, null).deleteLinkByKind(kind);\r\n    };\r\n    /**\r\n     * Removes the specified link to the item.\r\n     *\r\n     * @param kind The kind of link to be deleted.\r\n     * @param shareId\r\n     */\r\n    SharePointQueryableShareableItem.prototype.unshareLink = function (kind, shareId) {\r\n        return this.clone(SharePointQueryableShareable, null).unshareLink(kind, shareId);\r\n    };\r\n    return SharePointQueryableShareableItem;\r\n}(SharePointQueryableSecurable));\r\nexport { SharePointQueryableShareableItem };\r\nvar FileFolderShared = /** @class */ (function (_super) {\r\n    tslib_1.__extends(FileFolderShared, _super);\r\n    function FileFolderShared() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets a link suitable for sharing\r\n     *\r\n     * @param kind The kind of link to get\r\n     * @param expiration Optional, an expiration for this link\r\n     */\r\n    FileFolderShared.prototype.getShareLink = function (kind, expiration) {\r\n        if (kind === void 0) { kind = SharingLinkKind.OrganizationView; }\r\n        if (expiration === void 0) { expiration = null; }\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.getShareLink(kind, expiration);\r\n        });\r\n    };\r\n    /**\r\n         * Checks Permissions on the list of Users and returns back role the users have on the Item.\r\n         *\r\n         * @param recipients The array of Entities for which Permissions need to be checked.\r\n         */\r\n    FileFolderShared.prototype.checkSharingPermissions = function (recipients) {\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.checkPermissions(recipients);\r\n        });\r\n    };\r\n    /**\r\n     * Get Sharing Information.\r\n     *\r\n     * @param request The SharingInformationRequest Object.\r\n     * @param expands Expand more fields.\r\n     *\r\n     */\r\n    FileFolderShared.prototype.getSharingInformation = function (request, expands) {\r\n        if (request === void 0) { request = null; }\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.getSharingInformation(request, expands);\r\n        });\r\n    };\r\n    /**\r\n     * Gets the sharing settings of an item.\r\n     *\r\n     * @param useSimplifiedRoles Determines whether to use simplified roles.\r\n     */\r\n    FileFolderShared.prototype.getObjectSharingSettings = function (useSimplifiedRoles) {\r\n        if (useSimplifiedRoles === void 0) { useSimplifiedRoles = true; }\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.getObjectSharingSettings(useSimplifiedRoles);\r\n        });\r\n    };\r\n    /**\r\n     * Unshare this item\r\n     */\r\n    FileFolderShared.prototype.unshare = function () {\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.unshareObject();\r\n        });\r\n    };\r\n    /**\r\n     * Deletes a sharing link by the kind of link\r\n     *\r\n     * @param kind The kind of link to be deleted.\r\n     */\r\n    FileFolderShared.prototype.deleteSharingLinkByKind = function (kind) {\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.deleteLinkByKind(kind);\r\n        });\r\n    };\r\n    /**\r\n     * Removes the specified link to the item.\r\n     *\r\n     * @param kind The kind of link to be deleted.\r\n     * @param shareId The share id to delete\r\n     */\r\n    FileFolderShared.prototype.unshareLink = function (kind, shareId) {\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.unshareLink(kind, shareId);\r\n        });\r\n    };\r\n    /**\r\n     * For files and folders we need to use the associated item end point\r\n     */\r\n    FileFolderShared.prototype.getShareable = function () {\r\n        var _this = this;\r\n        // sharing only works on the item end point, not the file one - so we create a folder instance with the item url internally\r\n        return this.clone(SharePointQueryableShareableFile, \"listItemAllFields\", false).select(\"odata.id\").get().then(function (d) {\r\n            var shareable = new SharePointQueryableShareable(odataUrlFrom(d));\r\n            // we need to handle batching\r\n            if (_this.hasBatch) {\r\n                shareable = shareable.inBatch(_this.batch);\r\n            }\r\n            return shareable;\r\n        });\r\n    };\r\n    return FileFolderShared;\r\n}(SharePointQueryableInstance));\r\nexport { FileFolderShared };\r\nvar SharePointQueryableShareableFile = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SharePointQueryableShareableFile, _super);\r\n    function SharePointQueryableShareableFile() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Shares this item with one or more users\r\n     *\r\n     * @param loginNames string or string[] of resolved login names to which this item will be shared\r\n     * @param role The role (View | Edit) applied to the share\r\n     * @param shareEverything Share everything in this folder, even items with unique permissions.\r\n     * @param requireSignin If true the user must signin to view link, otherwise anyone with the link can access the resource\r\n     * @param emailData Optional, if inlucded an email will be sent. Note subject currently has no effect.\r\n     */\r\n    SharePointQueryableShareableFile.prototype.shareWith = function (loginNames, role, requireSignin, emailData) {\r\n        if (role === void 0) { role = SharingRole.View; }\r\n        if (requireSignin === void 0) { requireSignin = false; }\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.shareWith(loginNames, role, requireSignin, false, emailData);\r\n        });\r\n    };\r\n    return SharePointQueryableShareableFile;\r\n}(FileFolderShared));\r\nexport { SharePointQueryableShareableFile };\r\nvar SharePointQueryableShareableFolder = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SharePointQueryableShareableFolder, _super);\r\n    function SharePointQueryableShareableFolder() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Shares this item with one or more users\r\n     *\r\n     * @param loginNames string or string[] of resolved login names to which this item will be shared\r\n     * @param role The role (View | Edit) applied to the share\r\n     * @param shareEverything Share everything in this folder, even items with unique permissions.\r\n     * @param requireSignin If true the user must signin to view link, otherwise anyone with the link can access the resource\r\n     * @param emailData Optional, if inlucded an email will be sent. Note subject currently has no effect.\r\n     */\r\n    SharePointQueryableShareableFolder.prototype.shareWith = function (loginNames, role, requireSignin, shareEverything, emailData) {\r\n        if (role === void 0) { role = SharingRole.View; }\r\n        if (requireSignin === void 0) { requireSignin = false; }\r\n        if (shareEverything === void 0) { shareEverything = false; }\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.shareWith(loginNames, role, requireSignin, shareEverything, emailData);\r\n        });\r\n    };\r\n    return SharePointQueryableShareableFolder;\r\n}(FileFolderShared));\r\nexport { SharePointQueryableShareableFolder };\r\n//# sourceMappingURL=sharepointqueryableshareable.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryable, SharePointQueryableInstance, SharePointQueryableCollection, defaultPath } from \"./sharepointqueryable\";\r\nimport { jsS } from \"@pnp/common\";\r\nvar LimitedWebPartManager = /** @class */ (function (_super) {\r\n    tslib_1.__extends(LimitedWebPartManager, _super);\r\n    function LimitedWebPartManager() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(LimitedWebPartManager.prototype, \"webparts\", {\r\n        /**\r\n         * Gets the set of web part definitions contained by this web part manager\r\n         *\r\n         */\r\n        get: function () {\r\n            return new WebPartDefinitions(this, \"webparts\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Exports a webpart definition\r\n     *\r\n     * @param id the GUID id of the definition to export\r\n     */\r\n    LimitedWebPartManager.prototype.export = function (id) {\r\n        return this.clone(LimitedWebPartManager, \"ExportWebPart\").postCore({\r\n            body: jsS({ webPartId: id }),\r\n        });\r\n    };\r\n    /**\r\n     * Imports a webpart\r\n     *\r\n     * @param xml webpart definition which must be valid XML in the .dwp or .webpart format\r\n     */\r\n    LimitedWebPartManager.prototype.import = function (xml) {\r\n        return this.clone(LimitedWebPartManager, \"ImportWebPart\").postCore({\r\n            body: jsS({ webPartXml: xml }),\r\n        });\r\n    };\r\n    return LimitedWebPartManager;\r\n}(SharePointQueryable));\r\nexport { LimitedWebPartManager };\r\nvar WebPartDefinitions = /** @class */ (function (_super) {\r\n    tslib_1.__extends(WebPartDefinitions, _super);\r\n    function WebPartDefinitions() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets a web part definition from the collection by id\r\n     *\r\n     * @param id The storage ID of the SPWebPartDefinition to retrieve\r\n     */\r\n    WebPartDefinitions.prototype.getById = function (id) {\r\n        return new WebPartDefinition(this, \"getbyid('\" + id + \"')\");\r\n    };\r\n    /**\r\n     * Gets a web part definition from the collection by storage id\r\n     *\r\n     * @param id The WebPart.ID of the SPWebPartDefinition to retrieve\r\n     */\r\n    WebPartDefinitions.prototype.getByControlId = function (id) {\r\n        return new WebPartDefinition(this, \"getByControlId('\" + id + \"')\");\r\n    };\r\n    return WebPartDefinitions;\r\n}(SharePointQueryableCollection));\r\nexport { WebPartDefinitions };\r\nvar WebPartDefinition = /** @class */ (function (_super) {\r\n    tslib_1.__extends(WebPartDefinition, _super);\r\n    function WebPartDefinition() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(WebPartDefinition.prototype, \"webpart\", {\r\n        /**\r\n         * Gets the webpart information associated with this definition\r\n         */\r\n        get: function () {\r\n            return new WebPart(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Saves changes to the Web Part made using other properties and methods on the SPWebPartDefinition object\r\n     */\r\n    WebPartDefinition.prototype.saveChanges = function () {\r\n        return this.clone(WebPartDefinition, \"SaveWebPartChanges\").postCore();\r\n    };\r\n    /**\r\n     * Moves the Web Part to a different location on a Web Part Page\r\n     *\r\n     * @param zoneId The ID of the Web Part Zone to which to move the Web Part\r\n     * @param zoneIndex A Web Part zone index that specifies the position at which the Web Part is to be moved within the destination Web Part zone\r\n     */\r\n    WebPartDefinition.prototype.moveTo = function (zoneId, zoneIndex) {\r\n        return this.clone(WebPartDefinition, \"MoveWebPartTo(zoneID='\" + zoneId + \"', zoneIndex=\" + zoneIndex + \")\").postCore();\r\n    };\r\n    /**\r\n     * Closes the Web Part. If the Web Part is already closed, this method does nothing\r\n     */\r\n    WebPartDefinition.prototype.close = function () {\r\n        return this.clone(WebPartDefinition, \"CloseWebPart\").postCore();\r\n    };\r\n    /**\r\n     * Opens the Web Part. If the Web Part is already closed, this method does nothing\r\n     */\r\n    WebPartDefinition.prototype.open = function () {\r\n        return this.clone(WebPartDefinition, \"OpenWebPart\").postCore();\r\n    };\r\n    /**\r\n     * Removes a webpart from a page, all settings will be lost\r\n     */\r\n    WebPartDefinition.prototype.delete = function () {\r\n        return this.clone(WebPartDefinition, \"DeleteWebPart\").postCore();\r\n    };\r\n    return WebPartDefinition;\r\n}(SharePointQueryableInstance));\r\nexport { WebPartDefinition };\r\nvar WebPart = /** @class */ (function (_super) {\r\n    tslib_1.__extends(WebPart, _super);\r\n    function WebPart() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    WebPart = tslib_1.__decorate([\r\n        defaultPath(\"webpart\")\r\n    ], WebPart);\r\n    return WebPart;\r\n}(SharePointQueryableInstance));\r\nexport { WebPart };\r\n//# sourceMappingURL=webparts.js.map","import * as tslib_1 from \"tslib\";\r\nimport { extend, jsS } from \"@pnp/common\";\r\nimport { SharePointQueryable, SharePointQueryableCollection, SharePointQueryableInstance, defaultPath } from \"./sharepointqueryable\";\r\nimport { SharePointQueryableShareableFolder } from \"./sharepointqueryableshareable\";\r\nimport { Files } from \"./files\";\r\nimport { odataUrlFrom } from \"./odata\";\r\nimport { Item } from \"./items\";\r\nimport { SPHttpClient } from \"./net/sphttpclient\";\r\n/**\r\n * Describes a collection of Folder objects\r\n *\r\n */\r\nvar Folders = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Folders, _super);\r\n    function Folders() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Folders_1 = Folders;\r\n    /**\r\n     * Gets a folder by folder name\r\n     *\r\n     */\r\n    Folders.prototype.getByName = function (name) {\r\n        var f = new Folder(this);\r\n        f.concat(\"('\" + name + \"')\");\r\n        return f;\r\n    };\r\n    /**\r\n     * Adds a new folder to the current folder (relative) or any folder (absolute)\r\n     *\r\n     * @param url The relative or absolute url where the new folder will be created. Urls starting with a forward slash are absolute.\r\n     * @returns The new Folder and the raw response.\r\n     */\r\n    Folders.prototype.add = function (url) {\r\n        var _this = this;\r\n        return this.clone(Folders_1, \"add('\" + url + \"')\").postCore().then(function (response) {\r\n            return {\r\n                data: response,\r\n                folder: _this.getByName(url),\r\n            };\r\n        });\r\n    };\r\n    var Folders_1;\r\n    Folders = Folders_1 = tslib_1.__decorate([\r\n        defaultPath(\"folders\")\r\n    ], Folders);\r\n    return Folders;\r\n}(SharePointQueryableCollection));\r\nexport { Folders };\r\n/**\r\n * Describes a single Folder instance\r\n *\r\n */\r\nvar Folder = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Folder, _super);\r\n    function Folder() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.update = _this._update(\"SP.Folder\", function (data) { return ({ data: data, folder: _this }); });\r\n        return _this;\r\n    }\r\n    Object.defineProperty(Folder.prototype, \"contentTypeOrder\", {\r\n        /**\r\n         * Specifies the sequence in which content types are displayed.\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableCollection(this, \"contentTypeOrder\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Folder.prototype, \"files\", {\r\n        /**\r\n         * Gets this folder's files\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Files(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Folder.prototype, \"folders\", {\r\n        /**\r\n         * Gets this folder's sub folders\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Folders(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Folder.prototype, \"listItemAllFields\", {\r\n        /**\r\n         * Gets this folder's list item field values\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableInstance(this, \"listItemAllFields\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Folder.prototype, \"parentFolder\", {\r\n        /**\r\n         * Gets the parent folder, if available\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Folder(this, \"parentFolder\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Folder.prototype, \"properties\", {\r\n        /**\r\n         * Gets this folder's properties\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableInstance(this, \"properties\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Folder.prototype, \"serverRelativeUrl\", {\r\n        /**\r\n         * Gets this folder's server relative url\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryable(this, \"serverRelativeUrl\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Folder.prototype, \"uniqueContentTypeOrder\", {\r\n        /**\r\n         * Gets a value that specifies the content type order.\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableCollection(this, \"uniqueContentTypeOrder\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n    * Delete this folder\r\n    *\r\n    * @param eTag Value used in the IF-Match header, by default \"*\"\r\n    */\r\n    Folder.prototype.delete = function (eTag) {\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        return this.clone(Folder, null).postCore({\r\n            headers: {\r\n                \"IF-Match\": eTag,\r\n                \"X-HTTP-Method\": \"DELETE\",\r\n            },\r\n        });\r\n    };\r\n    /**\r\n     * Moves the folder to the Recycle Bin and returns the identifier of the new Recycle Bin item.\r\n     */\r\n    Folder.prototype.recycle = function () {\r\n        return this.clone(Folder, \"recycle\").postCore();\r\n    };\r\n    /**\r\n     * Gets the associated list item for this folder, loading the default properties\r\n     */\r\n    Folder.prototype.getItem = function () {\r\n        var selects = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            selects[_i] = arguments[_i];\r\n        }\r\n        var q = this.listItemAllFields;\r\n        return q.select.apply(q, selects).get().then(function (d) {\r\n            return extend(new Item(odataUrlFrom(d)), d);\r\n        });\r\n    };\r\n    /**\r\n     * Moves a folder to destination path\r\n     *\r\n     * @param destUrl Absolute or relative URL of the destination path\r\n     */\r\n    Folder.prototype.moveTo = function (destUrl) {\r\n        var _this = this;\r\n        return this.select(\"ServerRelativeUrl\").get().then(function (_a) {\r\n            var srcUrl = _a.ServerRelativeUrl;\r\n            var client = new SPHttpClient();\r\n            var webBaseUrl = _this.toUrl().split(\"/_api\")[0];\r\n            var hostUrl = webBaseUrl.replace(\"://\", \"___\").split(\"/\")[0].replace(\"___\", \"://\");\r\n            var methodUrl = webBaseUrl + \"/_api/SP.MoveCopyUtil.MoveFolder()\";\r\n            return client.post(methodUrl, {\r\n                body: jsS({\r\n                    destUrl: destUrl.indexOf(\"http\") === 0 ? destUrl : \"\" + hostUrl + destUrl,\r\n                    srcUrl: \"\" + hostUrl + srcUrl,\r\n                }),\r\n            }).then(function (r) { return r.json(); });\r\n        });\r\n    };\r\n    return Folder;\r\n}(SharePointQueryableShareableFolder));\r\nexport { Folder };\r\n//# sourceMappingURL=folders.js.map","import * as tslib_1 from \"tslib\";\r\nimport { jsS } from \"@pnp/common\";\r\nimport { SharePointQueryableCollection, SharePointQueryableInstance, defaultPath } from \"./sharepointqueryable\";\r\nimport { metadata } from \"./utils/metadata\";\r\n/**\r\n * Describes a collection of content types\r\n *\r\n */\r\nvar ContentTypes = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ContentTypes, _super);\r\n    function ContentTypes() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    ContentTypes_1 = ContentTypes;\r\n    /**\r\n     * Adds an existing contenttype to a content type collection\r\n     *\r\n     * @param contentTypeId in the following format, for example: 0x010102\r\n     */\r\n    ContentTypes.prototype.addAvailableContentType = function (contentTypeId) {\r\n        var _this = this;\r\n        var postBody = jsS({\r\n            \"contentTypeId\": contentTypeId,\r\n        });\r\n        return this.clone(ContentTypes_1, \"addAvailableContentType\").postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                contentType: _this.getById(data.id),\r\n                data: data,\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Gets a ContentType by content type id\r\n     */\r\n    ContentTypes.prototype.getById = function (id) {\r\n        var ct = new ContentType(this);\r\n        ct.concat(\"('\" + id + \"')\");\r\n        return ct;\r\n    };\r\n    /**\r\n     * Adds a new content type to the collection\r\n     *\r\n     * @param id The desired content type id for the new content type (also determines the parent content type)\r\n     * @param name The name of the content type\r\n     * @param description The description of the content type\r\n     * @param group The group in which to add the content type\r\n     * @param additionalSettings Any additional settings to provide when creating the content type\r\n     *\r\n     */\r\n    ContentTypes.prototype.add = function (id, name, description, group, additionalSettings) {\r\n        var _this = this;\r\n        if (description === void 0) { description = \"\"; }\r\n        if (group === void 0) { group = \"Custom Content Types\"; }\r\n        if (additionalSettings === void 0) { additionalSettings = {}; }\r\n        var postBody = jsS(Object.assign(metadata(\"SP.ContentType\"), {\r\n            \"Description\": description,\r\n            \"Group\": group,\r\n            \"Id\": { \"StringValue\": id },\r\n            \"Name\": name,\r\n        }, additionalSettings));\r\n        return this.postCore({ body: postBody }).then(function (data) {\r\n            return { contentType: _this.getById(data.id), data: data };\r\n        });\r\n    };\r\n    var ContentTypes_1;\r\n    ContentTypes = ContentTypes_1 = tslib_1.__decorate([\r\n        defaultPath(\"contenttypes\")\r\n    ], ContentTypes);\r\n    return ContentTypes;\r\n}(SharePointQueryableCollection));\r\nexport { ContentTypes };\r\n/**\r\n * Describes a single ContentType instance\r\n *\r\n */\r\nvar ContentType = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ContentType, _super);\r\n    function ContentType() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * Delete this content type\r\n         */\r\n        _this.delete = _this._delete;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(ContentType.prototype, \"fieldLinks\", {\r\n        /**\r\n         * Gets the column (also known as field) references in the content type.\r\n        */\r\n        get: function () {\r\n            return new FieldLinks(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ContentType.prototype, \"fields\", {\r\n        /**\r\n         * Gets a value that specifies the collection of fields for the content type.\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableCollection(this, \"fields\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ContentType.prototype, \"parent\", {\r\n        /**\r\n         * Gets the parent content type of the content type.\r\n         */\r\n        get: function () {\r\n            return new ContentType(this, \"parent\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ContentType.prototype, \"workflowAssociations\", {\r\n        /**\r\n         * Gets a value that specifies the collection of workflow associations for the content type.\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableCollection(this, \"workflowAssociations\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return ContentType;\r\n}(SharePointQueryableInstance));\r\nexport { ContentType };\r\n/**\r\n * Represents a collection of field link instances\r\n */\r\nvar FieldLinks = /** @class */ (function (_super) {\r\n    tslib_1.__extends(FieldLinks, _super);\r\n    function FieldLinks() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets a FieldLink by GUID id\r\n     *\r\n     * @param id The GUID id of the field link\r\n     */\r\n    FieldLinks.prototype.getById = function (id) {\r\n        var fl = new FieldLink(this);\r\n        fl.concat(\"(guid'\" + id + \"')\");\r\n        return fl;\r\n    };\r\n    FieldLinks = tslib_1.__decorate([\r\n        defaultPath(\"fieldlinks\")\r\n    ], FieldLinks);\r\n    return FieldLinks;\r\n}(SharePointQueryableCollection));\r\nexport { FieldLinks };\r\n/**\r\n * Represents a field link instance\r\n */\r\nvar FieldLink = /** @class */ (function (_super) {\r\n    tslib_1.__extends(FieldLink, _super);\r\n    function FieldLink() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    return FieldLink;\r\n}(SharePointQueryableInstance));\r\nexport { FieldLink };\r\n//# sourceMappingURL=contenttypes.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryableInstance, SharePointQueryableCollection, defaultPath } from \"./sharepointqueryable\";\r\nimport { TextParser, BlobParser, JSONParser, BufferParser } from \"@pnp/odata\";\r\n/**\r\n * Describes a collection of Item objects\r\n *\r\n */\r\nvar AttachmentFiles = /** @class */ (function (_super) {\r\n    tslib_1.__extends(AttachmentFiles, _super);\r\n    function AttachmentFiles() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    AttachmentFiles_1 = AttachmentFiles;\r\n    /**\r\n     * Gets a Attachment File by filename\r\n     *\r\n     * @param name The name of the file, including extension.\r\n     */\r\n    AttachmentFiles.prototype.getByName = function (name) {\r\n        var f = new AttachmentFile(this);\r\n        f.concat(\"('\" + name + \"')\");\r\n        return f;\r\n    };\r\n    /**\r\n     * Adds a new attachment to the collection. Not supported for batching.\r\n     *\r\n     * @param name The name of the file, including extension.\r\n     * @param content The Base64 file content.\r\n     */\r\n    AttachmentFiles.prototype.add = function (name, content) {\r\n        var _this = this;\r\n        return this.clone(AttachmentFiles_1, \"add(FileName='\" + name + \"')\", false).postCore({\r\n            body: content,\r\n        }).then(function (response) {\r\n            return {\r\n                data: response,\r\n                file: _this.getByName(name),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Adds multiple new attachment to the collection. Not supported for batching.\r\n     *\r\n     * @param files The collection of files to add\r\n     */\r\n    AttachmentFiles.prototype.addMultiple = function (files) {\r\n        var _this = this;\r\n        // add the files in series so we don't get update conflicts\r\n        return files.reduce(function (chain, file) { return chain.then(function () { return _this.clone(AttachmentFiles_1, \"add(FileName='\" + file.name + \"')\", false).postCore({\r\n            body: file.content,\r\n        }); }); }, Promise.resolve());\r\n    };\r\n    /**\r\n     * Delete multiple attachments from the collection. Not supported for batching.\r\n     *\r\n     * @param files The collection of files to delete\r\n     */\r\n    AttachmentFiles.prototype.deleteMultiple = function () {\r\n        var _this = this;\r\n        var files = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            files[_i] = arguments[_i];\r\n        }\r\n        return files.reduce(function (chain, file) { return chain.then(function () { return _this.getByName(file).delete(); }); }, Promise.resolve());\r\n    };\r\n    /**\r\n     * Delete multiple attachments from the collection and send to recycle bin. Not supported for batching.\r\n     *\r\n     * @param files The collection of files to be deleted and sent to recycle bin\r\n     */\r\n    AttachmentFiles.prototype.recycleMultiple = function () {\r\n        var _this = this;\r\n        var files = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            files[_i] = arguments[_i];\r\n        }\r\n        return files.reduce(function (chain, file) { return chain.then(function () { return _this.getByName(file).recycle(); }); }, Promise.resolve());\r\n    };\r\n    var AttachmentFiles_1;\r\n    AttachmentFiles = AttachmentFiles_1 = tslib_1.__decorate([\r\n        defaultPath(\"AttachmentFiles\")\r\n    ], AttachmentFiles);\r\n    return AttachmentFiles;\r\n}(SharePointQueryableCollection));\r\nexport { AttachmentFiles };\r\n/**\r\n * Describes a single attachment file instance\r\n *\r\n */\r\nvar AttachmentFile = /** @class */ (function (_super) {\r\n    tslib_1.__extends(AttachmentFile, _super);\r\n    function AttachmentFile() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.delete = _this._deleteWithETag;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Gets the contents of the file as text\r\n     *\r\n     */\r\n    AttachmentFile.prototype.getText = function () {\r\n        return this.getParsed(new TextParser());\r\n    };\r\n    /**\r\n     * Gets the contents of the file as a blob, does not work in Node.js\r\n     *\r\n     */\r\n    AttachmentFile.prototype.getBlob = function () {\r\n        return this.getParsed(new BlobParser());\r\n    };\r\n    /**\r\n     * Gets the contents of a file as an ArrayBuffer, works in Node.js\r\n     */\r\n    AttachmentFile.prototype.getBuffer = function () {\r\n        return this.getParsed(new BufferParser());\r\n    };\r\n    /**\r\n     * Gets the contents of a file as an ArrayBuffer, works in Node.js\r\n     */\r\n    AttachmentFile.prototype.getJSON = function () {\r\n        return this.getParsed(new JSONParser());\r\n    };\r\n    /**\r\n     * Sets the content of a file. Not supported for batching\r\n     *\r\n     * @param content The value to set for the file contents\r\n     */\r\n    AttachmentFile.prototype.setContent = function (content) {\r\n        var _this = this;\r\n        return this.clone(AttachmentFile, \"$value\", false).postCore({\r\n            body: content,\r\n            headers: {\r\n                \"X-HTTP-Method\": \"PUT\",\r\n            },\r\n        }).then(function (_) { return new AttachmentFile(_this); });\r\n    };\r\n    /**\r\n     * Delete this attachment file and send it to recycle bin\r\n     *\r\n     * @param eTag Value used in the IF-Match header, by default \"*\"\r\n     */\r\n    AttachmentFile.prototype.recycle = function (eTag) {\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        return this.clone(AttachmentFile, \"recycleObject\").postCore({\r\n            headers: {\r\n                \"IF-Match\": eTag,\r\n                \"X-HTTP-Method\": \"DELETE\",\r\n            },\r\n        });\r\n    };\r\n    // /**\r\n    //  * Delete this attachment file\r\n    //  *\r\n    //  * @param eTag Value used in the IF-Match header, by default \"*\"\r\n    //  */\r\n    // public delete(eTag = \"*\"): Promise<void> {\r\n    //     return this.postCore({\r\n    //         headers: {\r\n    //             \"IF-Match\": eTag,\r\n    //             \"X-HTTP-Method\": \"DELETE\",\r\n    //         },\r\n    //     });\r\n    // }\r\n    AttachmentFile.prototype.getParsed = function (parser) {\r\n        return this.clone(AttachmentFile, \"$value\", false).get(parser);\r\n    };\r\n    return AttachmentFile;\r\n}(SharePointQueryableInstance));\r\nexport { AttachmentFile };\r\n//# sourceMappingURL=attachmentfiles.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryable, SharePointQueryableCollection, SharePointQueryableInstance, defaultPath } from \"./sharepointqueryable\";\r\nimport { jsS } from \"@pnp/common\";\r\nimport { metadata } from \"./utils/metadata\";\r\n/**\r\n * Describes the views available in the current context\r\n *\r\n */\r\nvar Views = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Views, _super);\r\n    function Views() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Views_1 = Views;\r\n    /**\r\n     * Gets a view by guid id\r\n     *\r\n     * @param id The GUID id of the view\r\n     */\r\n    Views.prototype.getById = function (id) {\r\n        var v = new View(this);\r\n        v.concat(\"('\" + id + \"')\");\r\n        return v;\r\n    };\r\n    /**\r\n     * Gets a view by title (case-sensitive)\r\n     *\r\n     * @param title The case-sensitive title of the view\r\n     */\r\n    Views.prototype.getByTitle = function (title) {\r\n        return new View(this, \"getByTitle('\" + title + \"')\");\r\n    };\r\n    /**\r\n     * Adds a new view to the collection\r\n     *\r\n     * @param title The new views's title\r\n     * @param personalView True if this is a personal view, otherwise false, default = false\r\n     * @param additionalSettings Will be passed as part of the view creation body\r\n     */\r\n    Views.prototype.add = function (title, personalView, additionalSettings) {\r\n        var _this = this;\r\n        if (personalView === void 0) { personalView = false; }\r\n        if (additionalSettings === void 0) { additionalSettings = {}; }\r\n        var postBody = jsS(Object.assign(metadata(\"SP.View\"), {\r\n            \"PersonalView\": personalView,\r\n            \"Title\": title,\r\n        }, additionalSettings));\r\n        return this.clone(Views_1, null).postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                view: _this.getById(data.Id),\r\n            };\r\n        });\r\n    };\r\n    var Views_1;\r\n    Views = Views_1 = tslib_1.__decorate([\r\n        defaultPath(\"views\")\r\n    ], Views);\r\n    return Views;\r\n}(SharePointQueryableCollection));\r\nexport { Views };\r\n/**\r\n * Describes a single View instance\r\n *\r\n */\r\nvar View = /** @class */ (function (_super) {\r\n    tslib_1.__extends(View, _super);\r\n    function View() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * Updates this view intance with the supplied properties\r\n         *\r\n         * @param properties A plain object hash of values to update for the view\r\n         */\r\n        _this.update = _this._update(\"SP.View\", function (data) { return ({ data: data, view: _this }); });\r\n        /**\r\n         * Delete this view\r\n         *\r\n         */\r\n        _this.delete = _this._delete;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(View.prototype, \"fields\", {\r\n        get: function () {\r\n            return new ViewFields(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Returns the list view as HTML.\r\n     *\r\n     */\r\n    View.prototype.renderAsHtml = function () {\r\n        return this.clone(SharePointQueryable, \"renderashtml\").get();\r\n    };\r\n    /**\r\n     * Sets the view schema\r\n     *\r\n     * @param viewXml The view XML to set\r\n     */\r\n    View.prototype.setViewXml = function (viewXml) {\r\n        return this.clone(View, \"SetViewXml\").postCore({\r\n            body: jsS({\r\n                viewXml: viewXml,\r\n            }),\r\n        });\r\n    };\r\n    return View;\r\n}(SharePointQueryableInstance));\r\nexport { View };\r\nvar ViewFields = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ViewFields, _super);\r\n    function ViewFields() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    ViewFields_1 = ViewFields;\r\n    /**\r\n     * Gets a value that specifies the XML schema that represents the collection.\r\n     */\r\n    ViewFields.prototype.getSchemaXml = function () {\r\n        return this.clone(SharePointQueryable, \"schemaxml\").get();\r\n    };\r\n    /**\r\n     * Adds the field with the specified field internal name or display name to the collection.\r\n     *\r\n     * @param fieldTitleOrInternalName The case-sensitive internal name or display name of the field to add.\r\n     */\r\n    ViewFields.prototype.add = function (fieldTitleOrInternalName) {\r\n        return this.clone(ViewFields_1, \"addviewfield('\" + fieldTitleOrInternalName + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Moves the field with the specified field internal name to the specified position in the collection.\r\n     *\r\n     * @param fieldInternalName The case-sensitive internal name of the field to move.\r\n     * @param index The zero-based index of the new position for the field.\r\n     */\r\n    ViewFields.prototype.move = function (fieldInternalName, index) {\r\n        return this.clone(ViewFields_1, \"moveviewfieldto\").postCore({\r\n            body: jsS({ \"field\": fieldInternalName, \"index\": index }),\r\n        });\r\n    };\r\n    /**\r\n     * Removes all the fields from the collection.\r\n     */\r\n    ViewFields.prototype.removeAll = function () {\r\n        return this.clone(ViewFields_1, \"removeallviewfields\").postCore();\r\n    };\r\n    /**\r\n     * Removes the field with the specified field internal name from the collection.\r\n     *\r\n     * @param fieldInternalName The case-sensitive internal name of the field to remove from the view.\r\n     */\r\n    ViewFields.prototype.remove = function (fieldInternalName) {\r\n        return this.clone(ViewFields_1, \"removeviewfield('\" + fieldInternalName + \"')\").postCore();\r\n    };\r\n    var ViewFields_1;\r\n    ViewFields = ViewFields_1 = tslib_1.__decorate([\r\n        defaultPath(\"viewfields\")\r\n    ], ViewFields);\r\n    return ViewFields;\r\n}(SharePointQueryableCollection));\r\nexport { ViewFields };\r\n//# sourceMappingURL=views.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryableCollection, SharePointQueryableInstance, defaultPath } from \"./sharepointqueryable\";\r\nimport { extend, jsS } from \"@pnp/common\";\r\nimport { DateTimeFieldFormatType, DateTimeFieldFriendlyFormatType, FieldTypes, CalendarType, UrlFieldFormatType, ChoiceFieldFormatType, } from \"./types\";\r\nimport { metadata } from \"./utils/metadata\";\r\n/**\r\n * Describes a collection of Field objects\r\n *\r\n */\r\nvar Fields = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Fields, _super);\r\n    function Fields() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Fields_1 = Fields;\r\n    /**\r\n     * Gets a field from the collection by id\r\n     *\r\n     * @param id The Id of the list\r\n     */\r\n    Fields.prototype.getById = function (id) {\r\n        var f = new Field(this);\r\n        f.concat(\"('\" + id + \"')\");\r\n        return f;\r\n    };\r\n    /**\r\n     * Gets a field from the collection by title\r\n     *\r\n     * @param title The case-sensitive title of the field\r\n     */\r\n    Fields.prototype.getByTitle = function (title) {\r\n        return new Field(this, \"getByTitle('\" + title + \"')\");\r\n    };\r\n    /**\r\n     * Gets a field from the collection by using internal name or title\r\n     *\r\n     * @param name The case-sensitive internal name or title of the field\r\n     */\r\n    Fields.prototype.getByInternalNameOrTitle = function (name) {\r\n        return new Field(this, \"getByInternalNameOrTitle('\" + name + \"')\");\r\n    };\r\n    /**\r\n     * Creates a field based on the specified schema\r\n     */\r\n    Fields.prototype.createFieldAsXml = function (xml) {\r\n        var _this = this;\r\n        var info;\r\n        if (typeof xml === \"string\") {\r\n            info = { SchemaXml: xml };\r\n        }\r\n        else {\r\n            info = xml;\r\n        }\r\n        var postBody = jsS({\r\n            \"parameters\": extend(metadata(\"SP.XmlSchemaFieldCreationInformation\"), info),\r\n        });\r\n        return this.clone(Fields_1, \"createfieldasxml\").postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                field: _this.getById(data.Id),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Adds a new field to the collection\r\n     *\r\n     * @param title The new field's title\r\n     * @param fieldType The new field's type (ex: SP.FieldText)\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.add = function (title, fieldType, properties) {\r\n        var _this = this;\r\n        var postBody = jsS(Object.assign(metadata(fieldType), {\r\n            \"Title\": title,\r\n        }, properties));\r\n        return this.clone(Fields_1, null).postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                field: _this.getById(data.Id),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldText to the collection\r\n     *\r\n     * @param title The field title\r\n     * @param maxLength The maximum number of characters allowed in the value of the field.\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addText = function (title, maxLength, properties) {\r\n        if (maxLength === void 0) { maxLength = 255; }\r\n        var props = {\r\n            FieldTypeKind: 2,\r\n            MaxLength: maxLength,\r\n        };\r\n        return this.add(title, \"SP.FieldText\", extend(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldCalculated to the collection\r\n     *\r\n     * @param title The field title.\r\n     * @param formula The formula for the field.\r\n     * @param dateFormat The date and time format that is displayed in the field.\r\n     * @param outputType Specifies the output format for the field. Represents a FieldType value.\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addCalculated = function (title, formula, dateFormat, outputType, properties) {\r\n        if (outputType === void 0) { outputType = FieldTypes.Text; }\r\n        var props = {\r\n            DateFormat: dateFormat,\r\n            FieldTypeKind: 17,\r\n            Formula: formula,\r\n            OutputType: outputType,\r\n        };\r\n        return this.add(title, \"SP.FieldCalculated\", extend(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldDateTime to the collection\r\n     *\r\n     * @param title The field title\r\n     * @param displayFormat The format of the date and time that is displayed in the field.\r\n     * @param calendarType Specifies the calendar type of the field.\r\n     * @param friendlyDisplayFormat The type of friendly display format that is used in the field.\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addDateTime = function (title, displayFormat, calendarType, friendlyDisplayFormat, properties) {\r\n        if (displayFormat === void 0) { displayFormat = DateTimeFieldFormatType.DateOnly; }\r\n        if (calendarType === void 0) { calendarType = CalendarType.Gregorian; }\r\n        if (friendlyDisplayFormat === void 0) { friendlyDisplayFormat = DateTimeFieldFriendlyFormatType.Unspecified; }\r\n        var props = {\r\n            DateTimeCalendarType: calendarType,\r\n            DisplayFormat: displayFormat,\r\n            FieldTypeKind: 4,\r\n            FriendlyDisplayFormat: friendlyDisplayFormat,\r\n        };\r\n        return this.add(title, \"SP.FieldDateTime\", extend(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldNumber to the collection\r\n     *\r\n     * @param title The field title\r\n     * @param minValue The field's minimum value\r\n     * @param maxValue The field's maximum value\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addNumber = function (title, minValue, maxValue, properties) {\r\n        var props = { FieldTypeKind: 9 };\r\n        if (minValue !== undefined) {\r\n            props = extend({ MinimumValue: minValue }, props);\r\n        }\r\n        if (maxValue !== undefined) {\r\n            props = extend({ MaximumValue: maxValue }, props);\r\n        }\r\n        return this.add(title, \"SP.FieldNumber\", extend(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldCurrency to the collection\r\n     *\r\n     * @param title The field title\r\n     * @param minValue The field's minimum value\r\n     * @param maxValue The field's maximum value\r\n     * @param currencyLocalId Specifies the language code identifier (LCID) used to format the value of the field\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addCurrency = function (title, minValue, maxValue, currencyLocalId, properties) {\r\n        if (currencyLocalId === void 0) { currencyLocalId = 1033; }\r\n        var props = {\r\n            CurrencyLocaleId: currencyLocalId,\r\n            FieldTypeKind: 10,\r\n        };\r\n        if (minValue !== undefined) {\r\n            props = extend({ MinimumValue: minValue }, props);\r\n        }\r\n        if (maxValue !== undefined) {\r\n            props = extend({ MaximumValue: maxValue }, props);\r\n        }\r\n        return this.add(title, \"SP.FieldCurrency\", extend(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldMultiLineText to the collection\r\n     *\r\n     * @param title The field title\r\n     * @param numberOfLines Specifies the number of lines of text to display for the field.\r\n     * @param richText Specifies whether the field supports rich formatting.\r\n     * @param restrictedMode Specifies whether the field supports a subset of rich formatting.\r\n     * @param appendOnly Specifies whether all changes to the value of the field are displayed in list forms.\r\n     * @param allowHyperlink Specifies whether a hyperlink is allowed as a value of the field.\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     *\r\n     */\r\n    Fields.prototype.addMultilineText = function (title, numberOfLines, richText, restrictedMode, appendOnly, allowHyperlink, properties) {\r\n        if (numberOfLines === void 0) { numberOfLines = 6; }\r\n        if (richText === void 0) { richText = true; }\r\n        if (restrictedMode === void 0) { restrictedMode = false; }\r\n        if (appendOnly === void 0) { appendOnly = false; }\r\n        if (allowHyperlink === void 0) { allowHyperlink = true; }\r\n        var props = {\r\n            AllowHyperlink: allowHyperlink,\r\n            AppendOnly: appendOnly,\r\n            FieldTypeKind: 3,\r\n            NumberOfLines: numberOfLines,\r\n            RestrictedMode: restrictedMode,\r\n            RichText: richText,\r\n        };\r\n        return this.add(title, \"SP.FieldMultiLineText\", extend(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldUrl to the collection\r\n     *\r\n     * @param title The field title\r\n     */\r\n    Fields.prototype.addUrl = function (title, displayFormat, properties) {\r\n        if (displayFormat === void 0) { displayFormat = UrlFieldFormatType.Hyperlink; }\r\n        var props = {\r\n            DisplayFormat: displayFormat,\r\n            FieldTypeKind: 11,\r\n        };\r\n        return this.add(title, \"SP.FieldUrl\", extend(props, properties));\r\n    };\r\n    /** Adds a user field to the colleciton\r\n    *\r\n    * @param title The new field's title\r\n    * @param selectionMode The selection mode of the field\r\n    * @param selectionGroup Value that specifies the identifier of the SharePoint group whose members can be selected as values of the field\r\n    * @param properties\r\n    */\r\n    Fields.prototype.addUser = function (title, selectionMode, properties) {\r\n        var props = {\r\n            FieldTypeKind: 20,\r\n            SelectionMode: selectionMode,\r\n        };\r\n        return this.add(title, \"SP.FieldUser\", extend(props, properties));\r\n    };\r\n    /**\r\n     * Adds a SP.FieldLookup to the collection\r\n     *\r\n     * @param title The new field's title\r\n     * @param lookupListId The guid id of the list where the source of the lookup is found\r\n     * @param lookupFieldName The internal name of the field in the source list\r\n     * @param properties Set of additional properties to set on the new field\r\n     */\r\n    Fields.prototype.addLookup = function (title, lookupListId, lookupFieldName, properties) {\r\n        var _this = this;\r\n        var props = extend({\r\n            FieldTypeKind: 7,\r\n            LookupFieldName: lookupFieldName,\r\n            LookupListId: lookupListId,\r\n            Title: title,\r\n        }, properties);\r\n        var postBody = jsS({\r\n            \"parameters\": extend(metadata(\"SP.FieldCreationInformation\"), props),\r\n        });\r\n        return this.clone(Fields_1, \"addfield\").postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                field: _this.getById(data.Id),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldChoice to the collection\r\n     *\r\n     * @param title The field title.\r\n     * @param choices The choices for the field.\r\n     * @param format The display format of the available options for the field.\r\n     * @param fillIn Specifies whether the field allows fill-in values.\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addChoice = function (title, choices, format, fillIn, properties) {\r\n        if (format === void 0) { format = ChoiceFieldFormatType.Dropdown; }\r\n        var props = {\r\n            Choices: {\r\n                results: choices,\r\n            },\r\n            EditFormat: format,\r\n            FieldTypeKind: 6,\r\n            FillInChoice: fillIn,\r\n        };\r\n        return this.add(title, \"SP.FieldChoice\", extend(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldMultiChoice to the collection\r\n     *\r\n     * @param title The field title.\r\n     * @param choices The choices for the field.\r\n     * @param fillIn Specifies whether the field allows fill-in values.\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addMultiChoice = function (title, choices, fillIn, properties) {\r\n        var props = {\r\n            Choices: {\r\n                results: choices,\r\n            },\r\n            FieldTypeKind: 15,\r\n            FillInChoice: fillIn,\r\n        };\r\n        return this.add(title, \"SP.FieldMultiChoice\", extend(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldBoolean to the collection\r\n     *\r\n     * @param title The field title.\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addBoolean = function (title, properties) {\r\n        var props = {\r\n            FieldTypeKind: 8,\r\n        };\r\n        return this.add(title, \"SP.Field\", extend(props, properties));\r\n    };\r\n    /**\r\n    * Creates a secondary (dependent) lookup field, based on the Id of the primary lookup field.\r\n    *\r\n    * @param displayName The display name of the new field.\r\n    * @param primaryLookupFieldId The guid of the primary Lookup Field.\r\n    * @param showField Which field to show from the lookup list.\r\n    */\r\n    Fields.prototype.addDependentLookupField = function (displayName, primaryLookupFieldId, showField) {\r\n        var _this = this;\r\n        return this.clone(Fields_1, \"adddependentlookupfield(displayName='\" + displayName + \"', primarylookupfieldid='\" + primaryLookupFieldId + \"', showfield='\" + showField + \"')\")\r\n            .postCore()\r\n            .then(function (data) {\r\n            return {\r\n                data: data,\r\n                field: _this.getById(data.Id),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldLocation to the collection\r\n     *\r\n     * @param title The field title.\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addLocation = function (title, properties) {\r\n        var props = { FieldTypeKind: 33 };\r\n        return this.add(title, \"SP.FieldLocation\", extend(props, properties));\r\n    };\r\n    var Fields_1;\r\n    Fields = Fields_1 = tslib_1.__decorate([\r\n        defaultPath(\"fields\")\r\n    ], Fields);\r\n    return Fields;\r\n}(SharePointQueryableCollection));\r\nexport { Fields };\r\n/**\r\n * Describes a single of Field instance\r\n *\r\n */\r\nvar Field = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Field, _super);\r\n    function Field() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * Delete this fields\r\n         *\r\n         */\r\n        _this.delete = _this._delete;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Updates this field intance with the supplied properties\r\n     *\r\n     * @param properties A plain object hash of values to update for the list\r\n     * @param fieldType The type value, required to update child field type properties\r\n     */\r\n    Field.prototype.update = function (properties, fieldType) {\r\n        var _this = this;\r\n        if (fieldType === void 0) { fieldType = \"SP.Field\"; }\r\n        var postBody = jsS(extend(metadata(fieldType), properties));\r\n        return this.postCore({\r\n            body: postBody,\r\n            headers: {\r\n                \"X-HTTP-Method\": \"MERGE\",\r\n            },\r\n        }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                field: _this,\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Sets the value of the ShowInDisplayForm property for this field.\r\n     */\r\n    Field.prototype.setShowInDisplayForm = function (show) {\r\n        return this.clone(Field, \"setshowindisplayform(\" + show + \")\").postCore();\r\n    };\r\n    /**\r\n     * Sets the value of the ShowInEditForm property for this field.\r\n     */\r\n    Field.prototype.setShowInEditForm = function (show) {\r\n        return this.clone(Field, \"setshowineditform(\" + show + \")\").postCore();\r\n    };\r\n    /**\r\n     * Sets the value of the ShowInNewForm property for this field.\r\n     */\r\n    Field.prototype.setShowInNewForm = function (show) {\r\n        return this.clone(Field, \"setshowinnewform(\" + show + \")\").postCore();\r\n    };\r\n    return Field;\r\n}(SharePointQueryableInstance));\r\nexport { Field };\r\n//# sourceMappingURL=fields.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryableCollection, SharePointQueryableInstance, defaultPath } from \"./sharepointqueryable\";\r\n/**\r\n * Describes a collection of Field objects\r\n *\r\n */\r\nvar Forms = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Forms, _super);\r\n    function Forms() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets a form by id\r\n     *\r\n     * @param id The guid id of the item to retrieve\r\n     */\r\n    Forms.prototype.getById = function (id) {\r\n        var i = new Form(this);\r\n        i.concat(\"('\" + id + \"')\");\r\n        return i;\r\n    };\r\n    Forms = tslib_1.__decorate([\r\n        defaultPath(\"forms\")\r\n    ], Forms);\r\n    return Forms;\r\n}(SharePointQueryableCollection));\r\nexport { Forms };\r\n/**\r\n * Describes a single of Form instance\r\n *\r\n */\r\nvar Form = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Form, _super);\r\n    function Form() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    return Form;\r\n}(SharePointQueryableInstance));\r\nexport { Form };\r\n//# sourceMappingURL=forms.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryableCollection, SharePointQueryableInstance, defaultPath } from \"./sharepointqueryable\";\r\nimport { jsS } from \"@pnp/common\";\r\n/**\r\n * Describes a collection of webhook subscriptions\r\n *\r\n */\r\nvar Subscriptions = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Subscriptions, _super);\r\n    function Subscriptions() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Returns all the webhook subscriptions or the specified webhook subscription\r\n     *\r\n     * @param subscriptionId The id of a specific webhook subscription to retrieve, omit to retrieve all the webhook subscriptions\r\n     */\r\n    Subscriptions.prototype.getById = function (subscriptionId) {\r\n        var s = new Subscription(this);\r\n        s.concat(\"('\" + subscriptionId + \"')\");\r\n        return s;\r\n    };\r\n    /**\r\n     * Creates a new webhook subscription\r\n     *\r\n     * @param notificationUrl The url to receive the notifications\r\n     * @param expirationDate The date and time to expire the subscription in the form YYYY-MM-ddTHH:mm:ss+00:00 (maximum of 6 months)\r\n     * @param clientState A client specific string (optional)\r\n     */\r\n    Subscriptions.prototype.add = function (notificationUrl, expirationDate, clientState) {\r\n        var _this = this;\r\n        var postBody = {\r\n            \"expirationDateTime\": expirationDate,\r\n            \"notificationUrl\": notificationUrl,\r\n            \"resource\": this.toUrl(),\r\n        };\r\n        if (clientState) {\r\n            postBody.clientState = clientState;\r\n        }\r\n        return this.postCore({ body: jsS(postBody), headers: { \"Content-Type\": \"application/json\" } }).then(function (result) {\r\n            return { data: result, subscription: _this.getById(result.id) };\r\n        });\r\n    };\r\n    Subscriptions = tslib_1.__decorate([\r\n        defaultPath(\"subscriptions\")\r\n    ], Subscriptions);\r\n    return Subscriptions;\r\n}(SharePointQueryableCollection));\r\nexport { Subscriptions };\r\n/**\r\n * Describes a single webhook subscription instance\r\n *\r\n */\r\nvar Subscription = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Subscription, _super);\r\n    function Subscription() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Renews this webhook subscription\r\n     *\r\n     * @param expirationDate The date and time to expire the subscription in the form YYYY-MM-ddTHH:mm:ss+00:00 (maximum of 6 months, optional)\r\n     * @param notificationUrl The url to receive the notifications (optional)\r\n     * @param clientState A client specific string (optional)\r\n     */\r\n    Subscription.prototype.update = function (expirationDate, notificationUrl, clientState) {\r\n        var _this = this;\r\n        var postBody = {};\r\n        if (expirationDate) {\r\n            postBody.expirationDateTime = expirationDate;\r\n        }\r\n        if (notificationUrl) {\r\n            postBody.notificationUrl = notificationUrl;\r\n        }\r\n        if (clientState) {\r\n            postBody.clientState = clientState;\r\n        }\r\n        return this.patchCore({ body: jsS(postBody), headers: { \"Content-Type\": \"application/json\" } }).then(function (data) {\r\n            return { data: data, subscription: _this };\r\n        });\r\n    };\r\n    /**\r\n     * Removes this webhook subscription\r\n     *\r\n     */\r\n    Subscription.prototype.delete = function () {\r\n        return _super.prototype.deleteCore.call(this);\r\n    };\r\n    return Subscription;\r\n}(SharePointQueryableInstance));\r\nexport { Subscription };\r\n//# sourceMappingURL=subscriptions.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryableInstance, SharePointQueryableCollection, defaultPath } from \"./sharepointqueryable\";\r\nimport { extend, jsS } from \"@pnp/common\";\r\n/**\r\n * Describes a collection of user custom actions\r\n *\r\n */\r\nvar UserCustomActions = /** @class */ (function (_super) {\r\n    tslib_1.__extends(UserCustomActions, _super);\r\n    function UserCustomActions() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    UserCustomActions_1 = UserCustomActions;\r\n    /**\r\n     * Returns the user custom action with the specified id\r\n     *\r\n     * @param id The GUID id of the user custom action to retrieve\r\n     */\r\n    UserCustomActions.prototype.getById = function (id) {\r\n        var uca = new UserCustomAction(this);\r\n        uca.concat(\"('\" + id + \"')\");\r\n        return uca;\r\n    };\r\n    /**\r\n     * Creates a user custom action\r\n     *\r\n     * @param properties The information object of property names and values which define the new user custom action\r\n     *\r\n     */\r\n    UserCustomActions.prototype.add = function (properties) {\r\n        var _this = this;\r\n        var postBody = jsS(extend({ __metadata: { \"type\": \"SP.UserCustomAction\" } }, properties));\r\n        return this.postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                action: _this.getById(data.Id),\r\n                data: data,\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Deletes all user custom actions in the collection\r\n     *\r\n     */\r\n    UserCustomActions.prototype.clear = function () {\r\n        return this.clone(UserCustomActions_1, \"clear\").postCore();\r\n    };\r\n    var UserCustomActions_1;\r\n    UserCustomActions = UserCustomActions_1 = tslib_1.__decorate([\r\n        defaultPath(\"usercustomactions\")\r\n    ], UserCustomActions);\r\n    return UserCustomActions;\r\n}(SharePointQueryableCollection));\r\nexport { UserCustomActions };\r\n/**\r\n * Describes a single user custom action\r\n *\r\n */\r\nvar UserCustomAction = /** @class */ (function (_super) {\r\n    tslib_1.__extends(UserCustomAction, _super);\r\n    function UserCustomAction() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n        * Updates this user custom action with the supplied properties\r\n        *\r\n        * @param properties An information object of property names and values to update for this user custom action\r\n        */\r\n        _this.update = _this._update(\"SP.UserCustomAction\", function (data) { return ({ data: data, action: _this }); });\r\n        return _this;\r\n    }\r\n    /**\r\n    * Removes this user custom action\r\n    *\r\n    */\r\n    UserCustomAction.prototype.delete = function () {\r\n        return _super.prototype.deleteCore.call(this);\r\n    };\r\n    return UserCustomAction;\r\n}(SharePointQueryableInstance));\r\nexport { UserCustomAction };\r\n//# sourceMappingURL=usercustomactions.js.map","import * as tslib_1 from \"tslib\";\r\nimport { Items } from \"./items\";\r\nimport { Views, View } from \"./views\";\r\nimport { ContentTypes } from \"./contenttypes\";\r\nimport { Fields } from \"./fields\";\r\nimport { Forms } from \"./forms\";\r\nimport { Subscriptions } from \"./subscriptions\";\r\nimport { SharePointQueryable, SharePointQueryableCollection, defaultPath } from \"./sharepointqueryable\";\r\nimport { SharePointQueryableSecurable } from \"./sharepointqueryablesecurable\";\r\nimport { extend, hOP, jsS } from \"@pnp/common\";\r\nimport { UserCustomActions } from \"./usercustomactions\";\r\nimport { odataUrlFrom } from \"./odata\";\r\nimport { Folder } from \"./folders\";\r\nimport { metadata } from \"./utils/metadata\";\r\nimport { SiteScripts } from \"..\";\r\nimport { toAbsoluteUrl } from \"./utils/toabsoluteurl\";\r\n/**\r\n * Describes a collection of List objects\r\n *\r\n */\r\nvar Lists = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Lists, _super);\r\n    function Lists() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Lists_1 = Lists;\r\n    /**\r\n     * Gets a list from the collection by guid id\r\n     *\r\n     * @param id The Id of the list (GUID)\r\n     */\r\n    Lists.prototype.getById = function (id) {\r\n        var list = new List(this);\r\n        list.concat(\"('\" + id + \"')\");\r\n        return list;\r\n    };\r\n    /**\r\n     * Gets a list from the collection by title\r\n     *\r\n     * @param title The title of the list\r\n     */\r\n    Lists.prototype.getByTitle = function (title) {\r\n        return new List(this, \"getByTitle('\" + title + \"')\");\r\n    };\r\n    /**\r\n     * Adds a new list to the collection\r\n     *\r\n     * @param title The new list's title\r\n     * @param description The new list's description\r\n     * @param template The list template value\r\n     * @param enableContentTypes If true content types will be allowed and enabled, otherwise they will be disallowed and not enabled\r\n     * @param additionalSettings Will be passed as part of the list creation body\r\n     */\r\n    Lists.prototype.add = function (title, description, template, enableContentTypes, additionalSettings) {\r\n        var _this = this;\r\n        if (description === void 0) { description = \"\"; }\r\n        if (template === void 0) { template = 100; }\r\n        if (enableContentTypes === void 0) { enableContentTypes = false; }\r\n        if (additionalSettings === void 0) { additionalSettings = {}; }\r\n        var addSettings = extend({\r\n            \"AllowContentTypes\": enableContentTypes,\r\n            \"BaseTemplate\": template,\r\n            \"ContentTypesEnabled\": enableContentTypes,\r\n            \"Description\": description,\r\n            \"Title\": title,\r\n            \"__metadata\": { \"type\": \"SP.List\" },\r\n        }, additionalSettings);\r\n        return this.postCore({ body: jsS(addSettings) }).then(function (data) {\r\n            return { data: data, list: _this.getByTitle(addSettings.Title) };\r\n        });\r\n    };\r\n    /**\r\n     * Ensures that the specified list exists in the collection (note: this method not supported for batching)\r\n     *\r\n     * @param title The new list's title\r\n     * @param description The new list's description\r\n     * @param template The list template value\r\n     * @param enableContentTypes If true content types will be allowed and enabled, otherwise they will be disallowed and not enabled\r\n     * @param additionalSettings Will be passed as part of the list creation body or used to update an existing list\r\n     */\r\n    Lists.prototype.ensure = function (title, description, template, enableContentTypes, additionalSettings) {\r\n        var _this = this;\r\n        if (description === void 0) { description = \"\"; }\r\n        if (template === void 0) { template = 100; }\r\n        if (enableContentTypes === void 0) { enableContentTypes = false; }\r\n        if (additionalSettings === void 0) { additionalSettings = {}; }\r\n        if (this.hasBatch) {\r\n            throw Error(\"The ensure list method is not supported for use in a batch.\");\r\n        }\r\n        return new Promise(function (resolve, reject) {\r\n            var addOrUpdateSettings = extend(additionalSettings, { Title: title, Description: description, ContentTypesEnabled: enableContentTypes }, true);\r\n            var list = _this.getByTitle(addOrUpdateSettings.Title);\r\n            list.get().then(function (_) {\r\n                list.update(addOrUpdateSettings).then(function (d) {\r\n                    resolve({ created: false, data: d, list: _this.getByTitle(addOrUpdateSettings.Title) });\r\n                }).catch(function (e) { return reject(e); });\r\n            }).catch(function (_) {\r\n                _this.add(title, description, template, enableContentTypes, addOrUpdateSettings).then(function (r) {\r\n                    resolve({ created: true, data: r.data, list: _this.getByTitle(addOrUpdateSettings.Title) });\r\n                }).catch(function (e) { return reject(e); });\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Gets a list that is the default asset location for images or other files, which the users upload to their wiki pages.\r\n     */\r\n    Lists.prototype.ensureSiteAssetsLibrary = function () {\r\n        return this.clone(Lists_1, \"ensuresiteassetslibrary\").postCore().then(function (json) {\r\n            return new List(odataUrlFrom(json));\r\n        });\r\n    };\r\n    /**\r\n     * Gets a list that is the default location for wiki pages.\r\n     */\r\n    Lists.prototype.ensureSitePagesLibrary = function () {\r\n        return this.clone(Lists_1, \"ensuresitepageslibrary\").postCore().then(function (json) {\r\n            return new List(odataUrlFrom(json));\r\n        });\r\n    };\r\n    var Lists_1;\r\n    Lists = Lists_1 = tslib_1.__decorate([\r\n        defaultPath(\"lists\")\r\n    ], Lists);\r\n    return Lists;\r\n}(SharePointQueryableCollection));\r\nexport { Lists };\r\n/**\r\n * Describes a single List instance\r\n *\r\n */\r\nvar List = /** @class */ (function (_super) {\r\n    tslib_1.__extends(List, _super);\r\n    function List() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(List.prototype, \"contentTypes\", {\r\n        /**\r\n         * Gets the content types in this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new ContentTypes(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"items\", {\r\n        /**\r\n         * Gets the items in this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Items(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"views\", {\r\n        /**\r\n         * Gets the views in this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Views(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"fields\", {\r\n        /**\r\n         * Gets the fields in this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Fields(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"forms\", {\r\n        /**\r\n         * Gets the forms in this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Forms(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"defaultView\", {\r\n        /**\r\n         * Gets the default view of this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new View(this, \"DefaultView\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"userCustomActions\", {\r\n        /**\r\n         * Get all custom actions on a site collection\r\n         *\r\n         */\r\n        get: function () {\r\n            return new UserCustomActions(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"effectiveBasePermissions\", {\r\n        /**\r\n         * Gets the effective base permissions of this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryable(this, \"EffectiveBasePermissions\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"eventReceivers\", {\r\n        /**\r\n         * Gets the event receivers attached to this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableCollection(this, \"EventReceivers\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"relatedFields\", {\r\n        /**\r\n         * Gets the related fields of this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryable(this, \"getRelatedFields\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"informationRightsManagementSettings\", {\r\n        /**\r\n         * Gets the IRM settings for this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryable(this, \"InformationRightsManagementSettings\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"subscriptions\", {\r\n        /**\r\n         * Gets the webhook subscriptions of this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Subscriptions(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"rootFolder\", {\r\n        /**\r\n         * The root folder of the list\r\n         */\r\n        get: function () {\r\n            return new Folder(this, \"rootFolder\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets a view by view guid id\r\n     *\r\n     */\r\n    List.prototype.getView = function (viewId) {\r\n        return new View(this, \"getView('\" + viewId + \"')\");\r\n    };\r\n    /**\r\n     * Updates this list intance with the supplied properties\r\n     *\r\n     * @param properties A plain object hash of values to update for the list\r\n     * @param eTag Value used in the IF-Match header, by default \"*\"\r\n     */\r\n    /* tslint:disable no-string-literal */\r\n    List.prototype.update = function (properties, eTag) {\r\n        var _this = this;\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        var postBody = jsS(extend({\r\n            \"__metadata\": { \"type\": \"SP.List\" },\r\n        }, properties));\r\n        return this.postCore({\r\n            body: postBody,\r\n            headers: {\r\n                \"IF-Match\": eTag,\r\n                \"X-HTTP-Method\": \"MERGE\",\r\n            },\r\n        }).then(function (data) {\r\n            var retList = _this;\r\n            if (hOP(properties, \"Title\")) {\r\n                retList = _this.getParent(List, _this.parentUrl, \"getByTitle('\" + properties[\"Title\"] + \"')\");\r\n            }\r\n            return {\r\n                data: data,\r\n                list: retList,\r\n            };\r\n        });\r\n    };\r\n    /* tslint:enable */\r\n    /**\r\n     * Delete this list\r\n     *\r\n     * @param eTag Value used in the IF-Match header, by default \"*\"\r\n     */\r\n    List.prototype.delete = function (eTag) {\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        return this.postCore({\r\n            headers: {\r\n                \"IF-Match\": eTag,\r\n                \"X-HTTP-Method\": \"DELETE\",\r\n            },\r\n        });\r\n    };\r\n    /**\r\n     * Returns the collection of changes from the change log that have occurred within the list, based on the specified query.\r\n     */\r\n    List.prototype.getChanges = function (query) {\r\n        return this.clone(List, \"getchanges\").postCore({\r\n            body: jsS({ \"query\": extend(metadata(\"SP.ChangeQuery\"), query) }),\r\n        });\r\n    };\r\n    /**\r\n     * Returns a collection of items from the list based on the specified query.\r\n     *\r\n     * @param CamlQuery The Query schema of Collaborative Application Markup\r\n     * Language (CAML) is used in various ways within the context of Microsoft SharePoint Foundation\r\n     * to define queries against list data.\r\n     * see:\r\n     *\r\n     * https://msdn.microsoft.com/en-us/library/office/ms467521.aspx\r\n     *\r\n     * @param expands A URI with a $expand System Query Option indicates that Entries associated with\r\n     * the Entry or Collection of Entries identified by the Resource Path\r\n     * section of the URI must be represented inline (i.e. eagerly loaded).\r\n     * see:\r\n     *\r\n     * https://msdn.microsoft.com/en-us/library/office/fp142385.aspx\r\n     *\r\n     * http://www.odata.org/documentation/odata-version-2-0/uri-conventions/#ExpandSystemQueryOption\r\n     */\r\n    List.prototype.getItemsByCAMLQuery = function (query) {\r\n        var expands = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            expands[_i - 1] = arguments[_i];\r\n        }\r\n        var q = this.clone(List, \"getitems\");\r\n        return q.expand.apply(q, expands).postCore({\r\n            body: jsS({ \"query\": extend({ \"__metadata\": { \"type\": \"SP.CamlQuery\" } }, query) }),\r\n        });\r\n    };\r\n    /**\r\n     * See: https://msdn.microsoft.com/en-us/library/office/dn292554.aspx\r\n     */\r\n    List.prototype.getListItemChangesSinceToken = function (query) {\r\n        return this.clone(List, \"getlistitemchangessincetoken\").postCore({\r\n            body: jsS({ \"query\": extend({ \"__metadata\": { \"type\": \"SP.ChangeLogItemQuery\" } }, query) }),\r\n        }, { parse: function (r) { return r.text(); } });\r\n    };\r\n    /**\r\n     * Moves the list to the Recycle Bin and returns the identifier of the new Recycle Bin item.\r\n     */\r\n    List.prototype.recycle = function () {\r\n        return this.clone(List, \"recycle\").postCore().then(function (data) {\r\n            if (hOP(data, \"Recycle\")) {\r\n                return data.Recycle;\r\n            }\r\n            else {\r\n                return data;\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Renders list data based on the view xml provided\r\n     */\r\n    List.prototype.renderListData = function (viewXml) {\r\n        var q = this.clone(List, \"renderlistdata(@viewXml)\");\r\n        q.query.set(\"@viewXml\", \"'\" + viewXml + \"'\");\r\n        return q.postCore().then(function (data) {\r\n            // data will be a string, so we parse it again\r\n            return JSON.parse(hOP(data, \"RenderListData\") ? data.RenderListData : data);\r\n        });\r\n    };\r\n    /**\r\n     * Returns the data for the specified query view\r\n     *\r\n     * @param parameters The parameters to be used to render list data as JSON string.\r\n     * @param overrideParameters The parameters that are used to override and extend the regular SPRenderListDataParameters.\r\n     */\r\n    List.prototype.renderListDataAsStream = function (parameters, overrideParameters) {\r\n        if (overrideParameters === void 0) { overrideParameters = null; }\r\n        var postBody = {\r\n            overrideParameters: extend(metadata(\"SP.RenderListDataOverrideParameters\"), overrideParameters),\r\n            parameters: extend(metadata(\"SP.RenderListDataParameters\"), parameters),\r\n        };\r\n        return this.clone(List, \"RenderListDataAsStream\", true).postCore({\r\n            body: jsS(postBody),\r\n        });\r\n    };\r\n    /**\r\n     * Gets the field values and field schema attributes for a list item.\r\n     */\r\n    List.prototype.renderListFormData = function (itemId, formId, mode) {\r\n        return this.clone(List, \"renderlistformdata(itemid=\" + itemId + \", formid='\" + formId + \"', mode='\" + mode + \"')\").postCore().then(function (data) {\r\n            // data will be a string, so we parse it again\r\n            return JSON.parse(hOP(data, \"RenderListFormData\") ? data.RenderListFormData : data);\r\n        });\r\n    };\r\n    /**\r\n     * Reserves a list item ID for idempotent list item creation.\r\n     */\r\n    List.prototype.reserveListItemId = function () {\r\n        return this.clone(List, \"reservelistitemid\").postCore().then(function (data) {\r\n            if (hOP(data, \"ReserveListItemId\")) {\r\n                return data.ReserveListItemId;\r\n            }\r\n            else {\r\n                return data;\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Returns the ListItemEntityTypeFullName for this list, used when adding/updating list items. Does not support batching.\r\n     *\r\n     */\r\n    List.prototype.getListItemEntityTypeFullName = function () {\r\n        return this.clone(List, null, false).select(\"ListItemEntityTypeFullName\").get().then(function (o) { return o.ListItemEntityTypeFullName; });\r\n    };\r\n    /**\r\n     * Creates an item using path (in a folder), validates and sets its field values.\r\n     *\r\n     * @param formValues The fields to change and their new values.\r\n     * @param decodedUrl Path decoded url; folder's server relative path.\r\n     * @param bNewDocumentUpdate true if the list item is a document being updated after upload; otherwise false.\r\n     * @param checkInComment Optional check in comment.\r\n     */\r\n    List.prototype.addValidateUpdateItemUsingPath = function (formValues, decodedUrl, bNewDocumentUpdate, checkInComment) {\r\n        if (bNewDocumentUpdate === void 0) { bNewDocumentUpdate = false; }\r\n        return this.clone(List, \"AddValidateUpdateItemUsingPath()\").postCore({\r\n            body: jsS({\r\n                bNewDocumentUpdate: bNewDocumentUpdate,\r\n                checkInComment: checkInComment,\r\n                formValues: formValues,\r\n                listItemCreateInfo: {\r\n                    FolderPath: {\r\n                        DecodedUrl: decodedUrl,\r\n                        __metadata: { type: \"SP.ResourcePath\" },\r\n                    },\r\n                    __metadata: { type: \"SP.ListItemCreationInformationUsingPath\" },\r\n                },\r\n            }),\r\n        }).then(function (res) {\r\n            if (typeof res.AddValidateUpdateItemUsingPath !== \"undefined\") {\r\n                return res.AddValidateUpdateItemUsingPath.results;\r\n            }\r\n            return res;\r\n        });\r\n    };\r\n    /**\r\n    * Gets the site script syntax (JSON) for the current list\r\n    */\r\n    List.prototype.getSiteScript = function () {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var rootFolder, absoluteListUrl;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.clone(List).rootFolder.select(\"ServerRelativeUrl\").get()];\r\n                    case 1:\r\n                        rootFolder = _a.sent();\r\n                        return [4 /*yield*/, toAbsoluteUrl(rootFolder.ServerRelativeUrl)];\r\n                    case 2:\r\n                        absoluteListUrl = _a.sent();\r\n                        return [2 /*return*/, new SiteScripts(this, \"\").getSiteScriptFromList(absoluteListUrl)];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return List;\r\n}(SharePointQueryableSecurable));\r\nexport { List };\r\n//# sourceMappingURL=lists.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryableCollection, SharePointQueryableInstance, defaultPath } from \"./sharepointqueryable\";\r\nimport { extend, jsS } from \"@pnp/common\";\r\nimport { odataUrlFrom } from \"./odata\";\r\nimport { metadata } from \"./utils/metadata\";\r\n/**\r\n * Represents a Collection of comments\r\n */\r\nvar Comments = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Comments, _super);\r\n    function Comments() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Comments_1 = Comments;\r\n    /**\r\n     * Adds a new comment to this collection\r\n     *\r\n     * @param info Comment information to add\r\n     */\r\n    Comments.prototype.add = function (info) {\r\n        var _this = this;\r\n        if (typeof info === \"string\") {\r\n            info = { text: info };\r\n        }\r\n        var postBody = jsS(extend(metadata(\"Microsoft.SharePoint.Comments.comment\"), info));\r\n        return this.clone(Comments_1, null).postCore({ body: postBody }).then(function (d) {\r\n            return extend(_this.getById(d.id), d);\r\n        });\r\n    };\r\n    /**\r\n     * Gets a comment by id\r\n     *\r\n     * @param id Id of the comment to load\r\n     */\r\n    Comments.prototype.getById = function (id) {\r\n        var c = new Comment(this);\r\n        c.concat(\"(\" + id + \")\");\r\n        return c;\r\n    };\r\n    /**\r\n     * Deletes all the comments in this collection\r\n     */\r\n    Comments.prototype.clear = function () {\r\n        return this.clone(Comments_1, \"DeleteAll\").postCore();\r\n    };\r\n    var Comments_1;\r\n    Comments = Comments_1 = tslib_1.__decorate([\r\n        defaultPath(\"comments\")\r\n    ], Comments);\r\n    return Comments;\r\n}(SharePointQueryableCollection));\r\nexport { Comments };\r\n/**\r\n * Represents a comment\r\n */\r\nvar Comment = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Comment, _super);\r\n    function Comment() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(Comment.prototype, \"replies\", {\r\n        get: function () {\r\n            return new Replies(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Likes the comment as the current user\r\n     */\r\n    Comment.prototype.like = function () {\r\n        return this.clone(Comment, \"Like\").postCore();\r\n    };\r\n    /**\r\n     * Unlikes the comment as the current user\r\n     */\r\n    Comment.prototype.unlike = function () {\r\n        return this.clone(Comment, \"Unlike\").postCore();\r\n    };\r\n    /**\r\n     * Deletes this comment\r\n     */\r\n    Comment.prototype.delete = function () {\r\n        return this.deleteCore();\r\n    };\r\n    return Comment;\r\n}(SharePointQueryableInstance));\r\nexport { Comment };\r\n/**\r\n * Represents a Collection of comments\r\n */\r\nvar Replies = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Replies, _super);\r\n    function Replies() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Replies_1 = Replies;\r\n    /**\r\n     * Adds a new reply to this collection\r\n     *\r\n     * @param info Comment information to add\r\n     */\r\n    Replies.prototype.add = function (info) {\r\n        if (typeof info === \"string\") {\r\n            info = { text: info };\r\n        }\r\n        var postBody = jsS(extend(metadata(\"Microsoft.SharePoint.Comments.comment\"), info));\r\n        return this.clone(Replies_1, null).postCore({ body: postBody }).then(function (d) {\r\n            return extend(new Comment(odataUrlFrom(d)), d);\r\n        });\r\n    };\r\n    var Replies_1;\r\n    Replies = Replies_1 = tslib_1.__decorate([\r\n        defaultPath(\"replies\")\r\n    ], Replies);\r\n    return Replies;\r\n}(SharePointQueryableCollection));\r\nexport { Replies };\r\n//# sourceMappingURL=comments.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryable, SharePointQueryableCollection, SharePointQueryableInstance, defaultPath } from \"./sharepointqueryable\";\r\nimport { SharePointQueryableShareableItem } from \"./sharepointqueryableshareable\";\r\nimport { Folder } from \"./folders\";\r\nimport { File } from \"./files\";\r\nimport { ContentType } from \"./contenttypes\";\r\nimport { extend, jsS, hOP } from \"@pnp/common\";\r\nimport { ODataParserBase, ODataDefaultParser } from \"@pnp/odata\";\r\nimport { AttachmentFiles } from \"./attachmentfiles\";\r\nimport { List } from \"./lists\";\r\nimport { Logger } from \"@pnp/logging\";\r\nimport { Comments } from \"./comments\";\r\nimport { metadata } from \"./utils/metadata\";\r\n/**\r\n * Describes a collection of Item objects\r\n *\r\n */\r\nvar Items = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Items, _super);\r\n    function Items() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Items_1 = Items;\r\n    /**\r\n    * Gets an Item by id\r\n    *\r\n    * @param id The integer id of the item to retrieve\r\n    */\r\n    Items.prototype.getById = function (id) {\r\n        var i = new Item(this);\r\n        i.concat(\"(\" + id + \")\");\r\n        return i;\r\n    };\r\n    /**\r\n     * Gets BCS Item by string id\r\n     *\r\n     * @param stringId The string id of the BCS item to retrieve\r\n     */\r\n    Items.prototype.getItemByStringId = function (stringId) {\r\n        // creates an item with the parent list path and append out method call\r\n        return new Item(this.parentUrl, \"getItemByStringId('\" + stringId + \"')\");\r\n    };\r\n    /**\r\n     * Skips the specified number of items (https://msdn.microsoft.com/en-us/library/office/fp142385.aspx#sectionSection6)\r\n     *\r\n     * @param skip The starting id where the page should start, use with top to specify pages\r\n     * @param reverse It true the PagedPrev=true parameter is added allowing backwards navigation in the collection\r\n     */\r\n    Items.prototype.skip = function (skip, reverse) {\r\n        if (reverse === void 0) { reverse = false; }\r\n        if (reverse) {\r\n            this.query.set(\"$skiptoken\", encodeURIComponent(\"Paged=TRUE&PagedPrev=TRUE&p_ID=\" + skip));\r\n        }\r\n        else {\r\n            this.query.set(\"$skiptoken\", encodeURIComponent(\"Paged=TRUE&p_ID=\" + skip));\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Gets a collection designed to aid in paging through data\r\n     *\r\n     */\r\n    Items.prototype.getPaged = function (parser) {\r\n        if (parser === void 0) { parser = new ODataDefaultParser(); }\r\n        return this.get(new PagedItemCollectionParser(this, parser));\r\n    };\r\n    /**\r\n     * Gets all the items in a list, regardless of count. Does not support batching or caching\r\n     *\r\n     *  @param requestSize Number of items to return in each request (Default: 2000)\r\n     *  @param acceptHeader Allows for setting the value of the Accept header for SP 2013 support\r\n     */\r\n    Items.prototype.getAll = function (requestSize, acceptHeader) {\r\n        if (requestSize === void 0) { requestSize = 2000; }\r\n        if (acceptHeader === void 0) { acceptHeader = \"application/json;odata=nometadata\"; }\r\n        Logger.write(\"Calling items.getAll should be done sparingly. Ensure this is the correct choice. If you are unsure, it is not.\", 2 /* Warning */);\r\n        // this will be used for the actual query\r\n        // and we set no metadata here to try and reduce traffic\r\n        var items = new Items_1(this, \"\").top(requestSize).configure({\r\n            headers: {\r\n                \"Accept\": acceptHeader,\r\n            },\r\n        });\r\n        // let's copy over the odata query params that can be applied\r\n        // $top - allow setting the page size this way (override what we did above)\r\n        // $select - allow picking the return fields (good behavior)\r\n        // $filter - allow setting a filter, though this may fail due for large lists\r\n        this.query.forEach(function (v, k) {\r\n            if (/^\\$select|filter|top|expand$/i.test(k)) {\r\n                items.query.set(k, v);\r\n            }\r\n        });\r\n        // give back the promise\r\n        return new Promise(function (resolve, reject) {\r\n            // this will eventually hold the items we return\r\n            var itemsCollector = [];\r\n            // action that will gather up our results recursively\r\n            var gatherer = function (last) {\r\n                // collect that set of results\r\n                [].push.apply(itemsCollector, last.results);\r\n                // if we have more, repeat - otherwise resolve with the collected items\r\n                if (last.hasNext) {\r\n                    last.getNext().then(gatherer).catch(reject);\r\n                }\r\n                else {\r\n                    resolve(itemsCollector);\r\n                }\r\n            };\r\n            // start the cycle\r\n            items.getPaged().then(gatherer).catch(reject);\r\n        });\r\n    };\r\n    /**\r\n     * Adds a new item to the collection\r\n     *\r\n     * @param properties The new items's properties\r\n     * @param listItemEntityTypeFullName The type name of the list's entities\r\n     */\r\n    Items.prototype.add = function (properties, listItemEntityTypeFullName) {\r\n        var _this = this;\r\n        if (properties === void 0) { properties = {}; }\r\n        if (listItemEntityTypeFullName === void 0) { listItemEntityTypeFullName = null; }\r\n        var removeDependency = this.addBatchDependency();\r\n        return this.ensureListItemEntityTypeName(listItemEntityTypeFullName).then(function (listItemEntityType) {\r\n            var postBody = jsS(extend(metadata(listItemEntityType), properties));\r\n            var promise = _this.clone(Items_1, \"\").postCore({ body: postBody }).then(function (data) {\r\n                return {\r\n                    data: data,\r\n                    item: _this.getById(data.Id),\r\n                };\r\n            });\r\n            removeDependency();\r\n            return promise;\r\n        });\r\n    };\r\n    /**\r\n     * Ensures we have the proper list item entity type name, either from the value provided or from the list\r\n     *\r\n     * @param candidatelistItemEntityTypeFullName The potential type name\r\n     */\r\n    Items.prototype.ensureListItemEntityTypeName = function (candidatelistItemEntityTypeFullName) {\r\n        return candidatelistItemEntityTypeFullName ?\r\n            Promise.resolve(candidatelistItemEntityTypeFullName) :\r\n            this.getParent(List).getListItemEntityTypeFullName();\r\n    };\r\n    var Items_1;\r\n    Items = Items_1 = tslib_1.__decorate([\r\n        defaultPath(\"items\")\r\n    ], Items);\r\n    return Items;\r\n}(SharePointQueryableCollection));\r\nexport { Items };\r\n/**\r\n * Descrines a single Item instance\r\n *\r\n */\r\nvar Item = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Item, _super);\r\n    function Item() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * Delete this item\r\n         *\r\n         * @param eTag Value used in the IF-Match header, by default \"*\"\r\n         */\r\n        _this.delete = _this._deleteWithETag;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(Item.prototype, \"attachmentFiles\", {\r\n        /**\r\n         * Gets the set of attachments for this item\r\n         *\r\n         */\r\n        get: function () {\r\n            return new AttachmentFiles(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"contentType\", {\r\n        /**\r\n         * Gets the content type for this item\r\n         *\r\n         */\r\n        get: function () {\r\n            return new ContentType(this, \"ContentType\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"comments\", {\r\n        /**\r\n         * Gets the collection of comments associated with this list item\r\n         */\r\n        get: function () {\r\n            return new Comments(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"effectiveBasePermissions\", {\r\n        /**\r\n         * Gets the effective base permissions for the item\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryable(this, \"EffectiveBasePermissions\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"effectiveBasePermissionsForUI\", {\r\n        /**\r\n         * Gets the effective base permissions for the item in a UI context\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryable(this, \"EffectiveBasePermissionsForUI\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"fieldValuesAsHTML\", {\r\n        /**\r\n         * Gets the field values for this list item in their HTML representation\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableInstance(this, \"FieldValuesAsHTML\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"fieldValuesAsText\", {\r\n        /**\r\n         * Gets the field values for this list item in their text representation\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableInstance(this, \"FieldValuesAsText\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"fieldValuesForEdit\", {\r\n        /**\r\n         * Gets the field values for this list item for use in editing controls\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableInstance(this, \"FieldValuesForEdit\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"folder\", {\r\n        /**\r\n         * Gets the folder associated with this list item (if this item represents a folder)\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Folder(this, \"folder\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"file\", {\r\n        /**\r\n         * Gets the folder associated with this list item (if this item represents a folder)\r\n         *\r\n         */\r\n        get: function () {\r\n            return new File(this, \"file\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"versions\", {\r\n        /**\r\n         * Gets the collection of versions associated with this item\r\n         */\r\n        get: function () {\r\n            return new ItemVersions(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"list\", {\r\n        get: function () {\r\n            return this.getParent(List, this.parentUrl.substr(0, this.parentUrl.lastIndexOf(\"/\")));\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Updates this list intance with the supplied properties\r\n     *\r\n     * @param properties A plain object hash of values to update for the list\r\n     * @param eTag Value used in the IF-Match header, by default \"*\"\r\n     * @param listItemEntityTypeFullName The type name of the list's entities\r\n     */\r\n    Item.prototype.update = function (properties, eTag, listItemEntityTypeFullName) {\r\n        var _this = this;\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        if (listItemEntityTypeFullName === void 0) { listItemEntityTypeFullName = null; }\r\n        return new Promise(function (resolve, reject) {\r\n            var removeDependency = _this.addBatchDependency();\r\n            return _this.ensureListItemEntityTypeName(listItemEntityTypeFullName).then(function (listItemEntityType) {\r\n                var postBody = jsS(extend(metadata(listItemEntityType), properties));\r\n                removeDependency();\r\n                return _this.postCore({\r\n                    body: postBody,\r\n                    headers: {\r\n                        \"IF-Match\": eTag,\r\n                        \"X-HTTP-Method\": \"MERGE\",\r\n                    },\r\n                }, new ItemUpdatedParser()).then(function (data) {\r\n                    resolve({\r\n                        data: data,\r\n                        item: _this,\r\n                    });\r\n                });\r\n            }).catch(function (e) { return reject(e); });\r\n        });\r\n    };\r\n    /**\r\n     * Gets the collection of people who have liked this item\r\n     */\r\n    Item.prototype.getLikedBy = function () {\r\n        return this.clone(Item, \"likedBy\").postCore();\r\n    };\r\n    /**\r\n     * Likes this item as the current user\r\n     */\r\n    Item.prototype.like = function () {\r\n        return this.clone(Item, \"like\").postCore();\r\n    };\r\n    /**\r\n     * Unlikes this item as the current user\r\n     */\r\n    Item.prototype.unlike = function () {\r\n        return this.clone(Item, \"unlike\").postCore();\r\n    };\r\n    /**\r\n     * Moves the list item to the Recycle Bin and returns the identifier of the new Recycle Bin item.\r\n     */\r\n    Item.prototype.recycle = function () {\r\n        return this.clone(Item, \"recycle\").postCore();\r\n    };\r\n    /**\r\n     * Gets a string representation of the full URL to the WOPI frame.\r\n     * If there is no associated WOPI application, or no associated action, an empty string is returned.\r\n     *\r\n     * @param action Display mode: 0: view, 1: edit, 2: mobileView, 3: interactivePreview\r\n     */\r\n    Item.prototype.getWopiFrameUrl = function (action) {\r\n        if (action === void 0) { action = 0; }\r\n        var i = this.clone(Item, \"getWOPIFrameUrl(@action)\");\r\n        i.query.set(\"@action\", action);\r\n        return i.postCore().then(function (data) {\r\n            // handle verbose mode\r\n            if (hOP(data, \"GetWOPIFrameUrl\")) {\r\n                return data.GetWOPIFrameUrl;\r\n            }\r\n            return data;\r\n        });\r\n    };\r\n    /**\r\n     * Validates and sets the values of the specified collection of fields for the list item.\r\n     *\r\n     * @param formValues The fields to change and their new values.\r\n     * @param newDocumentUpdate true if the list item is a document being updated after upload; otherwise false.\r\n     */\r\n    Item.prototype.validateUpdateListItem = function (formValues, newDocumentUpdate) {\r\n        if (newDocumentUpdate === void 0) { newDocumentUpdate = false; }\r\n        return this.clone(Item, \"validateupdatelistitem\").postCore({\r\n            body: jsS({ \"formValues\": formValues, bNewDocumentUpdate: newDocumentUpdate }),\r\n        });\r\n    };\r\n    /**\r\n     * Get the like by information for a modern site page\r\n     */\r\n    Item.prototype.getLikedByInformation = function () {\r\n        return this.clone(Item, \"likedByInformation\").expand(\"likedby\").getCore();\r\n    };\r\n    /**\r\n     * Ensures we have the proper list item entity type name, either from the value provided or from the list\r\n     *\r\n     * @param candidatelistItemEntityTypeFullName The potential type name\r\n     */\r\n    Item.prototype.ensureListItemEntityTypeName = function (candidatelistItemEntityTypeFullName) {\r\n        return candidatelistItemEntityTypeFullName ?\r\n            Promise.resolve(candidatelistItemEntityTypeFullName) :\r\n            this.list.getListItemEntityTypeFullName();\r\n    };\r\n    return Item;\r\n}(SharePointQueryableShareableItem));\r\nexport { Item };\r\n/**\r\n * Describes a collection of Version objects\r\n *\r\n */\r\nvar ItemVersions = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ItemVersions, _super);\r\n    function ItemVersions() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets a version by id\r\n     *\r\n     * @param versionId The id of the version to retrieve\r\n     */\r\n    ItemVersions.prototype.getById = function (versionId) {\r\n        var v = new ItemVersion(this);\r\n        v.concat(\"(\" + versionId + \")\");\r\n        return v;\r\n    };\r\n    ItemVersions = tslib_1.__decorate([\r\n        defaultPath(\"versions\")\r\n    ], ItemVersions);\r\n    return ItemVersions;\r\n}(SharePointQueryableCollection));\r\nexport { ItemVersions };\r\n/**\r\n * Describes a single Version instance\r\n *\r\n */\r\nvar ItemVersion = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ItemVersion, _super);\r\n    function ItemVersion() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n        * Delete a specific version of a file.\r\n        *\r\n        * @param eTag Value used in the IF-Match header, by default \"*\"\r\n        */\r\n        _this.delete = _this._deleteWithETag;\r\n        return _this;\r\n    }\r\n    return ItemVersion;\r\n}(SharePointQueryableInstance));\r\nexport { ItemVersion };\r\n/**\r\n * Provides paging functionality for list items\r\n */\r\nvar PagedItemCollection = /** @class */ (function () {\r\n    function PagedItemCollection(parent, nextUrl, results, innerParser) {\r\n        this.parent = parent;\r\n        this.nextUrl = nextUrl;\r\n        this.results = results;\r\n        this.innerParser = innerParser;\r\n    }\r\n    Object.defineProperty(PagedItemCollection.prototype, \"hasNext\", {\r\n        /**\r\n         * If true there are more results available in the set, otherwise there are not\r\n         */\r\n        get: function () {\r\n            return typeof this.nextUrl === \"string\" && this.nextUrl.length > 0;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets the next set of results, or resolves to null if no results are available\r\n     */\r\n    PagedItemCollection.prototype.getNext = function () {\r\n        if (this.hasNext) {\r\n            var items = new Items(this.nextUrl, null).configureFrom(this.parent);\r\n            return items.getPaged(this.innerParser);\r\n        }\r\n        return new Promise(function (r) { return r(null); });\r\n    };\r\n    return PagedItemCollection;\r\n}());\r\nexport { PagedItemCollection };\r\nvar PagedItemCollectionParser = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PagedItemCollectionParser, _super);\r\n    function PagedItemCollectionParser(_parent, innerParser) {\r\n        var _this = _super.call(this) || this;\r\n        _this._parent = _parent;\r\n        _this.innerParser = innerParser;\r\n        return _this;\r\n    }\r\n    PagedItemCollectionParser.prototype.parse = function (r) {\r\n        var _this = this;\r\n        return this.innerParser.parse(r).then(function (items) { return tslib_1.__awaiter(_this, void 0, void 0, function () {\r\n            var json, nextUrl;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                json = this.innerParser.rawJson;\r\n                nextUrl = hOP(json, \"d\") && hOP(json.d, \"__next\") ? json.d.__next : json[\"odata.nextLink\"];\r\n                return [2 /*return*/, new PagedItemCollection(this._parent, nextUrl, items, this.innerParser)];\r\n            });\r\n        }); });\r\n    };\r\n    return PagedItemCollectionParser;\r\n}(ODataParserBase));\r\nvar ItemUpdatedParser = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ItemUpdatedParser, _super);\r\n    function ItemUpdatedParser() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    ItemUpdatedParser.prototype.parse = function (r) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var _this = this;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                return [2 /*return*/, new Promise(function (resolve, reject) {\r\n                        if (_this.handleError(r, reject)) {\r\n                            resolve({\r\n                                \"odata.etag\": r.headers.get(\"etag\"),\r\n                            });\r\n                        }\r\n                    })];\r\n            });\r\n        });\r\n    };\r\n    return ItemUpdatedParser;\r\n}(ODataParserBase));\r\n//# sourceMappingURL=items.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryableInstance, SharePointQueryableCollection } from \"./sharepointqueryable\";\r\nimport { File } from \"./files\";\r\nimport { odataUrlFrom } from \"./odata\";\r\nimport { extractWebUrl } from \"./utils/extractweburl\";\r\n/**\r\n * Represents an app catalog\r\n */\r\nvar AppCatalog = /** @class */ (function (_super) {\r\n    tslib_1.__extends(AppCatalog, _super);\r\n    function AppCatalog(baseUrl, path) {\r\n        if (path === void 0) { path = \"_api/web/tenantappcatalog/AvailableApps\"; }\r\n        return _super.call(this, extractWebUrl(typeof baseUrl === \"string\" ? baseUrl : baseUrl.toUrl()), path) || this;\r\n    }\r\n    /**\r\n     * Get details of specific app from the app catalog\r\n     * @param id - Specify the guid of the app\r\n     */\r\n    AppCatalog.prototype.getAppById = function (id) {\r\n        return new App(this, \"getById('\" + id + \"')\");\r\n    };\r\n    /**\r\n     * Uploads an app package. Not supported for batching\r\n     *\r\n     * @param filename Filename to create.\r\n     * @param content app package data (eg: the .app or .sppkg file).\r\n     * @param shouldOverWrite Should an app with the same name in the same location be overwritten? (default: true)\r\n     * @returns Promise<AppAddResult>\r\n     */\r\n    AppCatalog.prototype.add = function (filename, content, shouldOverWrite) {\r\n        if (shouldOverWrite === void 0) { shouldOverWrite = true; }\r\n        var catalog = this.toUrl().indexOf(\"tenantappcatalog\") > 0 ? \"tenantappcatalog\" : \"sitecollectionappcatalog\";\r\n        // you don't add to the availableapps collection\r\n        var adder = new AppCatalog(extractWebUrl(this.toUrl()), \"_api/web/\" + catalog + \"/add(overwrite=\" + shouldOverWrite + \",url='\" + filename + \"')\");\r\n        return adder.postCore({\r\n            body: content,\r\n        }).then(function (r) {\r\n            return {\r\n                data: r,\r\n                file: new File(odataUrlFrom(r)),\r\n            };\r\n        });\r\n    };\r\n    return AppCatalog;\r\n}(SharePointQueryableCollection));\r\nexport { AppCatalog };\r\n/**\r\n * Represents the actions you can preform on a given app within the catalog\r\n */\r\nvar App = /** @class */ (function (_super) {\r\n    tslib_1.__extends(App, _super);\r\n    function App() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * This method deploys an app on the app catalog.  It must be called in the context\r\n     * of the tenant app catalog web or it will fail.\r\n     *\r\n     * @param skipFeatureDeployment Deploy the app to the entire tenant\r\n     */\r\n    App.prototype.deploy = function (skipFeatureDeployment) {\r\n        if (skipFeatureDeployment === void 0) { skipFeatureDeployment = false; }\r\n        return this.clone(App, \"Deploy(\" + skipFeatureDeployment + \")\").postCore();\r\n    };\r\n    /**\r\n     * This method retracts a deployed app on the app catalog.  It must be called in the context\r\n     * of the tenant app catalog web or it will fail.\r\n     */\r\n    App.prototype.retract = function () {\r\n        return this.clone(App, \"Retract\").postCore();\r\n    };\r\n    /**\r\n     * This method allows an app which is already deployed to be installed on a web\r\n     */\r\n    App.prototype.install = function () {\r\n        return this.clone(App, \"Install\").postCore();\r\n    };\r\n    /**\r\n     * This method allows an app which is already insatlled to be uninstalled on a web\r\n     */\r\n    App.prototype.uninstall = function () {\r\n        return this.clone(App, \"Uninstall\").postCore();\r\n    };\r\n    /**\r\n     * This method allows an app which is already insatlled to be upgraded on a web\r\n     */\r\n    App.prototype.upgrade = function () {\r\n        return this.clone(App, \"Upgrade\").postCore();\r\n    };\r\n    /**\r\n     * This method removes an app from the app catalog.  It must be called in the context\r\n     * of the tenant app catalog web or it will fail.\r\n     */\r\n    App.prototype.remove = function () {\r\n        return this.clone(App, \"Remove\").postCore();\r\n    };\r\n    return App;\r\n}(SharePointQueryableInstance));\r\nexport { App };\r\n//# sourceMappingURL=appcatalog.js.map","import * as tslib_1 from \"tslib\";\r\nimport { Item } from \"./items\";\r\nimport { extend, getGUID, jsS, hOP, stringIsNullOrEmpty, objectDefinedNotNull, combine, isUrlAbsolute } from \"@pnp/common\";\r\nimport { SharePointQueryable } from \"./sharepointqueryable\";\r\nimport { metadata } from \"./utils/metadata\";\r\nimport { List } from \"./lists\";\r\nimport { odataUrlFrom } from \"./odata\";\r\nimport { Web } from \"./webs\";\r\nimport { extractWebUrl } from \"./utils/extractweburl\";\r\nimport { Site } from \"./site\";\r\n/**\r\n * Page promotion state\r\n */\r\nexport var PromotedState;\r\n(function (PromotedState) {\r\n    /**\r\n     * Regular client side page\r\n     */\r\n    PromotedState[PromotedState[\"NotPromoted\"] = 0] = \"NotPromoted\";\r\n    /**\r\n     * Page that will be promoted as news article after publishing\r\n     */\r\n    PromotedState[PromotedState[\"PromoteOnPublish\"] = 1] = \"PromoteOnPublish\";\r\n    /**\r\n     * Page that is promoted as news article\r\n     */\r\n    PromotedState[PromotedState[\"Promoted\"] = 2] = \"Promoted\";\r\n})(PromotedState || (PromotedState = {}));\r\n/**\r\n * Gets the next order value 1 based for the provided collection\r\n *\r\n * @param collection Collection of orderable things\r\n */\r\nfunction getNextOrder(collection) {\r\n    if (collection.length < 1) {\r\n        return 1;\r\n    }\r\n    return Math.max.apply(null, collection.map(function (i) { return i.order; })) + 1;\r\n}\r\n/**\r\n * Normalizes the order value for all the sections, columns, and controls to be 1 based and stepped (1, 2, 3...)\r\n *\r\n * @param collection The collection to normalize\r\n */\r\nfunction reindex(collection) {\r\n    for (var i = 0; i < collection.length; i++) {\r\n        collection[i].order = i + 1;\r\n        if (hOP(collection[i], \"columns\")) {\r\n            reindex(collection[i].columns);\r\n        }\r\n        else if (hOP(collection[i], \"controls\")) {\r\n            reindex(collection[i].controls);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Represents the data and methods associated with client side \"modern\" pages\r\n */\r\nvar ClientSidePage = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ClientSidePage, _super);\r\n    /**\r\n     * PLEASE DON'T USE THIS CONSTRUCTOR DIRECTLY\r\n     *\r\n     */\r\n    function ClientSidePage(baseUrl, path, json, noInit, sections, commentsDisabled) {\r\n        if (noInit === void 0) { noInit = false; }\r\n        if (sections === void 0) { sections = []; }\r\n        if (commentsDisabled === void 0) { commentsDisabled = false; }\r\n        var _this = _super.call(this, baseUrl, path) || this;\r\n        _this.json = json;\r\n        _this.sections = sections;\r\n        _this.commentsDisabled = commentsDisabled;\r\n        _this._bannerImageDirty = false;\r\n        // ensure we have a good url to build on for the pages api\r\n        if (typeof baseUrl === \"string\") {\r\n            _this._parentUrl = \"\";\r\n            _this._url = combine(extractWebUrl(baseUrl), path);\r\n        }\r\n        else {\r\n            _this.extend(ClientSidePage.initFrom(baseUrl, null), path);\r\n        }\r\n        // set a default page settings slice\r\n        _this._pageSettings = { controlType: 0, pageSettingsSlice: { isDefaultDescription: true, isDefaultThumbnail: true } };\r\n        // set a default layout part\r\n        _this._layoutPart = ClientSidePage.getDefaultLayoutPart();\r\n        if (typeof json !== \"undefined\" && !noInit) {\r\n            _this.fromJSON(json);\r\n        }\r\n        return _this;\r\n    }\r\n    /**\r\n     * Creates a new blank page within the supplied library [does not work with batching]\r\n     *\r\n     * @param web Parent web in which we will create the page (we allow list here too matching the old api)\r\n     * @param pageName Filename of the page, such as \"page\"\r\n     * @param title The display title of the page\r\n     * @param pageLayoutType Layout type of the page to use\r\n     */\r\n    ClientSidePage.create = function (web, pageName, title, pageLayoutType) {\r\n        if (pageLayoutType === void 0) { pageLayoutType = \"Article\"; }\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var pageInitData, newPage;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        // patched because previously we used the full page name with the .aspx at the end\r\n                        // this allows folk's existing code to work after the re-write to the new API\r\n                        pageName = pageName.replace(/\\.aspx$/i, \"\");\r\n                        return [4 /*yield*/, ClientSidePage.initFrom(web, \"_api/sitepages/pages\").postCore({\r\n                                body: jsS(Object.assign(metadata(\"SP.Publishing.SitePage\"), {\r\n                                    PageLayoutType: pageLayoutType,\r\n                                })),\r\n                            })];\r\n                    case 1:\r\n                        pageInitData = _a.sent();\r\n                        newPage = new ClientSidePage(web, \"\", pageInitData);\r\n                        // newPage.authors = [currentUserLogin.UserPrincipalName];\r\n                        newPage.title = pageName;\r\n                        return [4 /*yield*/, newPage.save(false)];\r\n                    case 2:\r\n                        _a.sent();\r\n                        newPage.title = title;\r\n                        return [2 /*return*/, newPage];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Creates a new ClientSidePage instance from the provided html content string\r\n     *\r\n     * @param html HTML markup representing the page\r\n     */\r\n    ClientSidePage.fromFile = function (file) {\r\n        return file.getItem().then(function (i) {\r\n            var page = new ClientSidePage(extractWebUrl(file.toUrl()), \"\", { Id: i.Id }, true);\r\n            return page.configureFrom(file).load();\r\n        });\r\n    };\r\n    ClientSidePage.getDefaultLayoutPart = function () {\r\n        return {\r\n            dataVersion: \"1.4\",\r\n            description: \"Title Region Description\",\r\n            id: \"cbe7b0a9-3504-44dd-a3a3-0e5cacd07788\",\r\n            instanceId: \"cbe7b0a9-3504-44dd-a3a3-0e5cacd07788\",\r\n            properties: {\r\n                authors: [],\r\n                layoutType: \"FullWidthImage\",\r\n                showPublishDate: false,\r\n                showTopicHeader: false,\r\n                textAlignment: \"Left\",\r\n                title: \"\",\r\n                topicHeader: \"\",\r\n            },\r\n            serverProcessedContent: { htmlStrings: {}, searchablePlainTexts: {}, imageSources: {}, links: {} },\r\n            title: \"Title area\",\r\n        };\r\n    };\r\n    ClientSidePage.initFrom = function (o, url) {\r\n        return (new ClientSidePage(extractWebUrl(o.toUrl()), url)).configureFrom(o);\r\n    };\r\n    Object.defineProperty(ClientSidePage.prototype, \"pageLayout\", {\r\n        get: function () {\r\n            return this.json.PageLayoutType;\r\n        },\r\n        set: function (value) {\r\n            this.json.PageLayoutType = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ClientSidePage.prototype, \"bannerImageUrl\", {\r\n        get: function () {\r\n            return this.json.BannerImageUrl;\r\n        },\r\n        set: function (value) {\r\n            this.json.BannerImageUrl = value;\r\n            this._bannerImageDirty = true;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ClientSidePage.prototype, \"bannerImageSourceType\", {\r\n        get: function () {\r\n            return this._layoutPart.properties.imageSourceType;\r\n        },\r\n        set: function (value) {\r\n            this._layoutPart.properties.imageSourceType = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ClientSidePage.prototype, \"topicHeader\", {\r\n        get: function () {\r\n            return objectDefinedNotNull(this.json.TopicHeader) ? this.json.TopicHeader : \"\";\r\n        },\r\n        set: function (value) {\r\n            this.json.TopicHeader = value;\r\n            this._layoutPart.properties.topicHeader = value;\r\n            if (stringIsNullOrEmpty(value)) {\r\n                this.showTopicHeader = false;\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ClientSidePage.prototype, \"title\", {\r\n        // public get authors(): string[] {\r\n        //     return this._layoutPart.properties.authorByline;\r\n        // }\r\n        // public set authors(value: string[]) {\r\n        //     this.json.AuthorByline = value;\r\n        //     this._layoutPart.properties.authorByline = value;\r\n        //     this._layoutPart.properties.authors = null;\r\n        // }\r\n        get: function () {\r\n            return this._layoutPart.properties.title;\r\n        },\r\n        set: function (value) {\r\n            this.json.Title = value;\r\n            this._layoutPart.properties.title = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ClientSidePage.prototype, \"layoutType\", {\r\n        get: function () {\r\n            return this._layoutPart.properties.layoutType;\r\n        },\r\n        set: function (value) {\r\n            this._layoutPart.properties.layoutType = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ClientSidePage.prototype, \"headerTextAlignment\", {\r\n        get: function () {\r\n            return this._layoutPart.properties.textAlignment;\r\n        },\r\n        set: function (value) {\r\n            this._layoutPart.properties.textAlignment = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ClientSidePage.prototype, \"showTopicHeader\", {\r\n        get: function () {\r\n            return this._layoutPart.properties.showTopicHeader;\r\n        },\r\n        set: function (value) {\r\n            this._layoutPart.properties.showTopicHeader = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ClientSidePage.prototype, \"showPublishDate\", {\r\n        get: function () {\r\n            return this._layoutPart.properties.showPublishDate;\r\n        },\r\n        set: function (value) {\r\n            this._layoutPart.properties.showPublishDate = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Add a section to this page\r\n     */\r\n    ClientSidePage.prototype.addSection = function () {\r\n        var section = new CanvasSection(this, getNextOrder(this.sections));\r\n        this.sections.push(section);\r\n        return section;\r\n    };\r\n    ClientSidePage.prototype.fromJSON = function (pageData) {\r\n        this.json = pageData;\r\n        var canvasControls = JSON.parse(pageData.CanvasContent1);\r\n        var layouts = JSON.parse(pageData.LayoutWebpartsContent);\r\n        if (layouts && layouts.length > 0) {\r\n            this._layoutPart = layouts[0];\r\n        }\r\n        this.setControls(canvasControls);\r\n        return this;\r\n    };\r\n    /**\r\n     * Loads this page's content from the server\r\n     */\r\n    ClientSidePage.prototype.load = function () {\r\n        var _this = this;\r\n        // load item id, then load page data from new pages api\r\n        return this.getItem(\"Id\", \"CommentsDisabled\").then(function (item) {\r\n            return (new SharePointQueryable(_this, \"_api/sitepages/pages(\" + item.Id + \")\")).get().then(function (pageData) {\r\n                _this.commentsDisabled = item.CommentsDisabled;\r\n                return _this.fromJSON(pageData);\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Persists the content changes (sections, columns, and controls) [does not work with batching]\r\n     *\r\n     * @param publish If true the page is published, if false the changes are persisted to SharePoint but not published\r\n     */\r\n    ClientSidePage.prototype.save = function (publish) {\r\n        var _this = this;\r\n        if (publish === void 0) { publish = true; }\r\n        if (this.json.Id === null) {\r\n            throw Error(\"The id for this page is null. If you want to create a new page, please use ClientSidePage.Create\");\r\n        }\r\n        // we will chain our work on this promise\r\n        var promise = Promise.resolve({});\r\n        if (this._bannerImageDirty) {\r\n            // we have to do these gymnastics to set the banner image url\r\n            promise = promise.then(function (_) { return new Promise(function (resolve, reject) {\r\n                var origImgUrl = _this.json.BannerImageUrl;\r\n                if (isUrlAbsolute(origImgUrl)) {\r\n                    // do our best to make this a server relative url by removing the x.sharepoint.com part\r\n                    origImgUrl = origImgUrl.replace(/^https?:\\/\\/[a-z0-9\\.]*?\\.[a-z]{2,3}\\//i, \"/\");\r\n                }\r\n                var site = new Site(extractWebUrl(_this.toUrl()));\r\n                var web = new Web(extractWebUrl(_this.toUrl()));\r\n                var imgFile = web.getFileByServerRelativePath(origImgUrl);\r\n                var siteId = \"\";\r\n                var webId = \"\";\r\n                var imgId = \"\";\r\n                var listId = \"\";\r\n                var webUrl = \"\";\r\n                Promise.all([\r\n                    site.select(\"Id\", \"Url\").get().then(function (r) { return siteId = r.Id; }),\r\n                    web.select(\"Id\", \"Url\").get().then(function (r) { webId = r.Id; webUrl = r.Url; }),\r\n                    imgFile.listItemAllFields.select(\"UniqueId\", \"ParentList/Id\").expand(\"ParentList\").get().then(function (r) { imgId = r.UniqueId; listId = r.ParentList.Id; }),\r\n                ]).then(function () {\r\n                    var f = new SharePointQueryable(webUrl, \"_layouts/15/getpreview.ashx\");\r\n                    f.query.set(\"guidSite\", \"\" + siteId);\r\n                    f.query.set(\"guidWeb\", \"\" + webId);\r\n                    f.query.set(\"guidFile\", \"\" + imgId);\r\n                    _this.bannerImageUrl = f.toUrlAndQuery();\r\n                    if (!objectDefinedNotNull(_this._layoutPart.serverProcessedContent)) {\r\n                        _this._layoutPart.serverProcessedContent = {};\r\n                    }\r\n                    _this._layoutPart.serverProcessedContent.imageSources = { imageSource: origImgUrl };\r\n                    if (!objectDefinedNotNull(_this._layoutPart.serverProcessedContent.customMetadata)) {\r\n                        _this._layoutPart.serverProcessedContent.customMetadata = {};\r\n                    }\r\n                    _this._layoutPart.serverProcessedContent.customMetadata.imageSource = {\r\n                        listId: listId,\r\n                        siteId: siteId,\r\n                        uniqueId: imgId,\r\n                        webId: webId,\r\n                    };\r\n                    _this._layoutPart.properties.webId = webId;\r\n                    _this._layoutPart.properties.siteId = siteId;\r\n                    _this._layoutPart.properties.listId = listId;\r\n                    _this._layoutPart.properties.uniqueId = imgId;\r\n                    resolve();\r\n                }).catch(reject);\r\n            }); });\r\n        }\r\n        // we need to update our authors if they have changed\r\n        // if (this._layoutPart.properties.authors === null && this._layoutPart.properties.authorByline.length > 0) {\r\n        //     promise = promise.then(_ => new Promise(resolve => {\r\n        //         const collector: any[] = [];\r\n        //         const userResolver = ClientSidePage.getPoster(\"/_api/SP.UI.ApplicationPages.ClientPeoplePickerWebServiceInterface.ClientPeoplePickerResolveUser\");\r\n        //         this._layoutPart.properties.authorByline.forEach(async author => {\r\n        //             const userData = await userResolver.postCore({\r\n        //                 body: jsS({\r\n        //                     queryParams: {\r\n        //                         AllowEmailAddresses: false,\r\n        //                         MaximumEntitySuggestions: 1,\r\n        //                         PrincipalSource: 15,\r\n        //                         PrincipalType: 1,\r\n        //                         QueryString: author,\r\n        //                         SharePointGroupID: 0,\r\n        //                     },\r\n        //                 }),\r\n        //             });\r\n        //             collector.push({\r\n        //                 email: userData.EntityData.Email,\r\n        //                 id: userData.Key,\r\n        //                 name: userData.DisplayName,\r\n        //                 role: \"\",\r\n        //                 upn: userData.EntityData.Email,\r\n        //             });\r\n        //         });\r\n        //         this._layoutPart.properties.authors = collector;\r\n        //         resolve();\r\n        //     }));\r\n        // }\r\n        // we try and check out the page for the user\r\n        if (!this.json.IsPageCheckedOutToCurrentUser) {\r\n            promise = promise.then(function (_) { return (ClientSidePage.initFrom(_this, \"_api/sitepages/pages(\" + _this.json.Id + \")/checkoutpage\")).postCore(); });\r\n        }\r\n        promise = promise.then(function (_) {\r\n            var saveBody = Object.assign(metadata(\"SP.Publishing.SitePage\"), {\r\n                AuthorByline: _this.json.AuthorByline || [],\r\n                BannerImageUrl: _this.bannerImageUrl,\r\n                CanvasContent1: _this.getCanvasContent1(),\r\n                LayoutWebpartsContent: _this.getLayoutWebpartsContent(),\r\n                Title: _this.title,\r\n                TopicHeader: _this.topicHeader,\r\n            });\r\n            var updater = ClientSidePage.initFrom(_this, \"_api/sitepages/pages(\" + _this.json.Id + \")/savepage\");\r\n            updater.configure({\r\n                headers: {\r\n                    \"if-match\": \"*\",\r\n                },\r\n            });\r\n            return updater.postCore({ body: jsS(saveBody) });\r\n        });\r\n        if (publish) {\r\n            promise = promise.then(function (_) { return (ClientSidePage.initFrom(_this, \"_api/sitepages/pages(\" + _this.json.Id + \")/publish\")).postCore(); }).then(function (r) {\r\n                if (r) {\r\n                    _this.json.IsPageCheckedOutToCurrentUser = false;\r\n                }\r\n            });\r\n        }\r\n        promise = promise.then(function (_) {\r\n            // these are post-save actions\r\n            _this._bannerImageDirty = false;\r\n        });\r\n        return promise;\r\n    };\r\n    ClientSidePage.prototype.discardPageCheckout = function () {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var d;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (this.json.Id === null) {\r\n                            throw Error(\"The id for this page is null. If you want to create a new page, please use ClientSidePage.Create\");\r\n                        }\r\n                        return [4 /*yield*/, ClientSidePage.initFrom(this, \"_api/sitepages/pages(\" + this.json.Id + \")/discardPage\").postCore({\r\n                                body: jsS(metadata(\"SP.Publishing.SitePage\")),\r\n                            })];\r\n                    case 1:\r\n                        d = _a.sent();\r\n                        this.fromJSON(d);\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    ClientSidePage.prototype.promoteToNews = function () {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            return tslib_1.__generator(this, function (_a) {\r\n                return [2 /*return*/, this.promoteNewsImpl(\"promoteToNews\")];\r\n            });\r\n        });\r\n    };\r\n    // API is currently broken on server side\r\n    // public async demoteFromNews(): Promise<boolean> {\r\n    //     return this.promoteNewsImpl(\"demoteFromNews\");\r\n    // }\r\n    /**\r\n     * Enables comments on this page\r\n     */\r\n    ClientSidePage.prototype.enableComments = function () {\r\n        var _this = this;\r\n        return this.setCommentsOn(true).then(function (r) {\r\n            _this.commentsDisabled = false;\r\n            return r;\r\n        });\r\n    };\r\n    /**\r\n     * Disables comments on this page\r\n     */\r\n    ClientSidePage.prototype.disableComments = function () {\r\n        var _this = this;\r\n        return this.setCommentsOn(false).then(function (r) {\r\n            _this.commentsDisabled = true;\r\n            return r;\r\n        });\r\n    };\r\n    /**\r\n     * Finds a control by the specified instance id\r\n     *\r\n     * @param id Instance id of the control to find\r\n     */\r\n    ClientSidePage.prototype.findControlById = function (id) {\r\n        return this.findControl(function (c) { return c.id === id; });\r\n    };\r\n    /**\r\n     * Finds a control within this page's control tree using the supplied predicate\r\n     *\r\n     * @param predicate Takes a control and returns true or false, if true that control is returned by findControl\r\n     */\r\n    ClientSidePage.prototype.findControl = function (predicate) {\r\n        // check all sections\r\n        for (var i = 0; i < this.sections.length; i++) {\r\n            // check all columns\r\n            for (var j = 0; j < this.sections[i].columns.length; j++) {\r\n                // check all controls\r\n                for (var k = 0; k < this.sections[i].columns[j].controls.length; k++) {\r\n                    // check to see if the predicate likes this control\r\n                    if (predicate(this.sections[i].columns[j].controls[k])) {\r\n                        return this.sections[i].columns[j].controls[k];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        // we found nothing so give nothing back\r\n        return null;\r\n    };\r\n    /**\r\n     * Like the modern site page\r\n     */\r\n    ClientSidePage.prototype.like = function () {\r\n        return this.getItem().then(function (i) {\r\n            return i.like();\r\n        });\r\n    };\r\n    /**\r\n     * Unlike the modern site page\r\n     */\r\n    ClientSidePage.prototype.unlike = function () {\r\n        return this.getItem().then(function (i) {\r\n            return i.unlike();\r\n        });\r\n    };\r\n    /**\r\n     * Get the liked by information for a modern site page\r\n     */\r\n    ClientSidePage.prototype.getLikedByInformation = function () {\r\n        return this.getItem().then(function (i) {\r\n            return i.getLikedByInformation();\r\n        });\r\n    };\r\n    /**\r\n     * Creates a copy of this page\r\n     *\r\n     * @param web The web where we will create the copy\r\n     * @param pageName The file name of the new page\r\n     * @param title The title of the new page\r\n     * @param publish If true the page will be published\r\n     */\r\n    ClientSidePage.prototype.copyPage = function (web, pageName, title, publish) {\r\n        if (publish === void 0) { publish = true; }\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var page;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, ClientSidePage.create(web, pageName, title, this.pageLayout)];\r\n                    case 1:\r\n                        page = _a.sent();\r\n                        page.setControls(this.getControls());\r\n                        return [4 /*yield*/, page.save(publish)];\r\n                    case 2:\r\n                        _a.sent();\r\n                        return [2 /*return*/, page];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Sets the modern page banner image\r\n     *\r\n     * @param url Url of the image to display\r\n     * @param altText Alt text to describe the image\r\n     * @param bannerProps Additional properties to control display of the banner\r\n     */\r\n    ClientSidePage.prototype.setBannerImage = function (url, props) {\r\n        this.bannerImageUrl = url;\r\n        this.bannerImageSourceType = 2; // this seems to always be true, so default?\r\n        if (objectDefinedNotNull(props)) {\r\n            if (hOP(props, \"translateX\")) {\r\n                this._layoutPart.properties.translateX = props.translateX;\r\n            }\r\n            if (hOP(props, \"translateY\")) {\r\n                this._layoutPart.properties.translateY = props.translateY;\r\n            }\r\n            if (hOP(props, \"imageSourceType\")) {\r\n                this.bannerImageSourceType = props.imageSourceType;\r\n            }\r\n            if (hOP(props, \"altText\")) {\r\n                this._layoutPart.properties.altText = props.altText;\r\n            }\r\n        }\r\n    };\r\n    ClientSidePage.prototype.getCanvasContent1 = function () {\r\n        return JSON.stringify(this.getControls());\r\n    };\r\n    ClientSidePage.prototype.getLayoutWebpartsContent = function () {\r\n        if (this._layoutPart) {\r\n            return JSON.stringify([this._layoutPart]);\r\n        }\r\n        else {\r\n            return JSON.stringify(null);\r\n        }\r\n    };\r\n    ClientSidePage.prototype.setControls = function (controls) {\r\n        if (controls && controls.length) {\r\n            for (var i = 0; i < controls.length; i++) {\r\n                // if no control type is present this is a column which we give type 0 to let us process it\r\n                var controlType = hOP(controls[i], \"controlType\") ? controls[i].controlType : 0;\r\n                switch (controlType) {\r\n                    case 0:\r\n                        // empty canvas column or page settings\r\n                        if (hOP(controls[i], \"pageSettingsSlice\")) {\r\n                            this._pageSettings = controls[i];\r\n                        }\r\n                        else {\r\n                            // we have an empty column\r\n                            this.mergeColumnToTree(new CanvasColumn(controls[i]));\r\n                        }\r\n                        break;\r\n                    case 3:\r\n                        var part = new ClientSideWebpart(controls[i]);\r\n                        this.mergePartToTree(part, part.data.position);\r\n                        break;\r\n                    case 4:\r\n                        var textData = controls[i];\r\n                        var text = new ClientSideText(textData.innerHTML, textData);\r\n                        this.mergePartToTree(text, text.data.position);\r\n                        break;\r\n                }\r\n            }\r\n            reindex(this.sections);\r\n        }\r\n    };\r\n    ClientSidePage.prototype.getControls = function () {\r\n        var _this = this;\r\n        // reindex things\r\n        reindex(this.sections);\r\n        // rollup the control changes\r\n        var canvasData = [];\r\n        this.sections.forEach(function (section) {\r\n            section.columns.forEach(function (column) {\r\n                if (column.controls.length < 1) {\r\n                    // empty column\r\n                    canvasData.push({\r\n                        displayMode: column.data.displayMode,\r\n                        emphasis: _this.getEmphasisObj(section.emphasis),\r\n                        position: column.data.position,\r\n                    });\r\n                }\r\n                else {\r\n                    column.controls.forEach(function (control) {\r\n                        control.data.emphasis = _this.getEmphasisObj(section.emphasis);\r\n                        canvasData.push(control.data);\r\n                    });\r\n                }\r\n            });\r\n        });\r\n        canvasData.push(this._pageSettings);\r\n        return canvasData;\r\n    };\r\n    ClientSidePage.prototype.getEmphasisObj = function (value) {\r\n        if (value < 1 || value > 3) {\r\n            return {};\r\n        }\r\n        return { zoneEmphasis: value };\r\n    };\r\n    /**\r\n     * Sets the comments flag for a page\r\n     *\r\n     * @param on If true comments are enabled, false they are disabled\r\n     */\r\n    ClientSidePage.prototype.setCommentsOn = function (on) {\r\n        return this.getItem().then(function (i) {\r\n            var updater = new Item(i, \"SetCommentsDisabled(\" + !on + \")\");\r\n            return updater.update({});\r\n        });\r\n    };\r\n    ClientSidePage.prototype.promoteNewsImpl = function (method) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var d;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (this.json.Id === null) {\r\n                            throw Error(\"The id for this page is null. If you want to create a new page, please use ClientSidePage.Create\");\r\n                        }\r\n                        return [4 /*yield*/, ClientSidePage.initFrom(this, \"_api/sitepages/pages(\" + this.json.Id + \")/\" + method).postCore({\r\n                                body: jsS(metadata(\"SP.Publishing.SitePage\")),\r\n                            })];\r\n                    case 1:\r\n                        d = _a.sent();\r\n                        return [2 /*return*/, d];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Merges the control into the tree of sections and columns for this page\r\n     *\r\n     * @param control The control to merge\r\n     */\r\n    ClientSidePage.prototype.mergePartToTree = function (control, positionData) {\r\n        var section = null;\r\n        var column = null;\r\n        var sectionFactor = 12;\r\n        var sectionIndex = 0;\r\n        var zoneIndex = 0;\r\n        // handle case where we don't have position data (shouldn't happen?)\r\n        if (positionData) {\r\n            if (hOP(positionData, \"zoneIndex\")) {\r\n                zoneIndex = positionData.zoneIndex;\r\n            }\r\n            if (hOP(positionData, \"sectionIndex\")) {\r\n                sectionIndex = positionData.sectionIndex;\r\n            }\r\n            if (hOP(positionData, \"sectionFactor\")) {\r\n                sectionFactor = positionData.sectionFactor;\r\n            }\r\n        }\r\n        var sections = this.sections.filter(function (s) { return s.order === zoneIndex; });\r\n        if (sections.length < 1) {\r\n            section = new CanvasSection(this, zoneIndex);\r\n            this.sections.push(section);\r\n        }\r\n        else {\r\n            section = sections[0];\r\n        }\r\n        section.emphasis = control.data.emphasis && control.data.emphasis.zoneEmphasis ? control.data.emphasis.zoneEmphasis : 0;\r\n        var columns = section.columns.filter(function (c) { return c.order === sectionIndex; });\r\n        if (columns.length < 1) {\r\n            column = section.addColumn(sectionFactor);\r\n        }\r\n        else {\r\n            column = columns[0];\r\n        }\r\n        control.column = column;\r\n        column.addControl(control);\r\n    };\r\n    /**\r\n     * Merges the supplied column into the tree\r\n     *\r\n     * @param column Column to merge\r\n     * @param position The position data for the column\r\n     */\r\n    ClientSidePage.prototype.mergeColumnToTree = function (column) {\r\n        var order = hOP(column.data, \"position\") && hOP(column.data.position, \"zoneIndex\") ? column.data.position.zoneIndex : 0;\r\n        var section = null;\r\n        var sections = this.sections.filter(function (s) { return s.order === order; });\r\n        if (sections.length < 1) {\r\n            section = new CanvasSection(this, order);\r\n            section.emphasis = column.data.emphasis.zoneEmphasis || 0;\r\n            this.sections.push(section);\r\n        }\r\n        else {\r\n            section = sections[0];\r\n        }\r\n        column.section = section;\r\n        section.columns.push(column);\r\n    };\r\n    ClientSidePage.prototype.getItem = function () {\r\n        var _this = this;\r\n        var selects = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            selects[_i] = arguments[_i];\r\n        }\r\n        var initer = ClientSidePage.initFrom(this, \"/_api/lists/EnsureClientRenderedSitePagesLibrary\").select(\"EnableModeration\", \"EnableMinorVersions\", \"Id\");\r\n        return initer.postCore().then(function (listData) {\r\n            var item = (new List(listData[\"odata.id\"])).configureFrom(_this).items.getById(_this.json.Id);\r\n            return item.select.apply(item, selects).get().then(function (d) {\r\n                return extend((new Item(odataUrlFrom(d))).configureFrom(_this), d);\r\n            });\r\n        });\r\n    };\r\n    return ClientSidePage;\r\n}(SharePointQueryable));\r\nexport { ClientSidePage };\r\nvar CanvasSection = /** @class */ (function () {\r\n    function CanvasSection(page, order, columns, _emphasis) {\r\n        if (columns === void 0) { columns = []; }\r\n        if (_emphasis === void 0) { _emphasis = 0; }\r\n        this.page = page;\r\n        this.columns = columns;\r\n        this._emphasis = _emphasis;\r\n        this._memId = getGUID();\r\n        this._order = order;\r\n    }\r\n    Object.defineProperty(CanvasSection.prototype, \"order\", {\r\n        get: function () {\r\n            return this._order;\r\n        },\r\n        set: function (value) {\r\n            this._order = value;\r\n            for (var i = 0; i < this.columns.length; i++) {\r\n                this.columns[i].data.position.zoneIndex = value;\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CanvasSection.prototype, \"defaultColumn\", {\r\n        /**\r\n         * Default column (this.columns[0]) for this section\r\n         */\r\n        get: function () {\r\n            if (this.columns.length < 1) {\r\n                this.addColumn(12);\r\n            }\r\n            return this.columns[0];\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Adds a new column to this section\r\n     */\r\n    CanvasSection.prototype.addColumn = function (factor) {\r\n        var column = new CanvasColumn();\r\n        column.section = this;\r\n        column.data.position.zoneIndex = this.order;\r\n        column.data.position.sectionFactor = factor;\r\n        column.order = getNextOrder(this.columns);\r\n        this.columns.push(column);\r\n        return column;\r\n    };\r\n    /**\r\n     * Adds a control to the default column for this section\r\n     *\r\n     * @param control Control to add to the default column\r\n     */\r\n    CanvasSection.prototype.addControl = function (control) {\r\n        this.defaultColumn.addControl(control);\r\n        return this;\r\n    };\r\n    Object.defineProperty(CanvasSection.prototype, \"emphasis\", {\r\n        get: function () {\r\n            return this._emphasis;\r\n        },\r\n        set: function (value) {\r\n            this._emphasis = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Removes this section and all contained columns and controls from the collection\r\n     */\r\n    CanvasSection.prototype.remove = function () {\r\n        var _this = this;\r\n        this.page.sections = this.page.sections.filter(function (section) { return section._memId !== _this._memId; });\r\n        reindex(this.page.sections);\r\n    };\r\n    return CanvasSection;\r\n}());\r\nexport { CanvasSection };\r\nvar CanvasColumn = /** @class */ (function () {\r\n    function CanvasColumn(json, controls) {\r\n        if (json === void 0) { json = JSON.parse(JSON.stringify(CanvasColumn.Default)); }\r\n        if (controls === void 0) { controls = []; }\r\n        this.json = json;\r\n        this.controls = controls;\r\n        this._section = null;\r\n        this._memId = getGUID();\r\n    }\r\n    Object.defineProperty(CanvasColumn.prototype, \"data\", {\r\n        get: function () {\r\n            return this.json;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CanvasColumn.prototype, \"section\", {\r\n        get: function () {\r\n            return this._section;\r\n        },\r\n        set: function (section) {\r\n            this._section = section;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CanvasColumn.prototype, \"order\", {\r\n        get: function () {\r\n            return this.data.position.sectionIndex;\r\n        },\r\n        set: function (value) {\r\n            this.data.position.sectionIndex = value;\r\n            for (var i = 0; i < this.controls.length; i++) {\r\n                this.controls[i].data.position.zoneIndex = this.data.position.zoneIndex;\r\n                this.controls[i].data.position.sectionIndex = value;\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CanvasColumn.prototype, \"factor\", {\r\n        get: function () {\r\n            return this.data.position.sectionFactor;\r\n        },\r\n        set: function (value) {\r\n            this.data.position.sectionFactor = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    CanvasColumn.prototype.addControl = function (control) {\r\n        control.column = this;\r\n        this.controls.push(control);\r\n        return this;\r\n    };\r\n    CanvasColumn.prototype.getControl = function (index) {\r\n        return this.controls[index];\r\n    };\r\n    CanvasColumn.prototype.remove = function () {\r\n        var _this = this;\r\n        this.section.columns = this.section.columns.filter(function (column) { return column._memId !== _this._memId; });\r\n        reindex(this.section.columns);\r\n    };\r\n    CanvasColumn.Default = {\r\n        controlType: 0,\r\n        displayMode: 2,\r\n        emphasis: {},\r\n        position: {\r\n            layoutIndex: 1,\r\n            sectionFactor: 12,\r\n            sectionIndex: 1,\r\n            zoneIndex: 1,\r\n        },\r\n    };\r\n    return CanvasColumn;\r\n}());\r\nexport { CanvasColumn };\r\nvar ColumnControl = /** @class */ (function () {\r\n    function ColumnControl(json) {\r\n        this.json = json;\r\n    }\r\n    Object.defineProperty(ColumnControl.prototype, \"id\", {\r\n        get: function () {\r\n            return this.json.id;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ColumnControl.prototype, \"data\", {\r\n        get: function () {\r\n            return this.json;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ColumnControl.prototype, \"column\", {\r\n        get: function () {\r\n            return this._column;\r\n        },\r\n        set: function (value) {\r\n            this._column = value;\r\n            this.onColumnChange(this._column);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ColumnControl.prototype.remove = function () {\r\n        var _this = this;\r\n        this.column.controls = this.column.controls.filter(function (control) { return control.id !== _this.id; });\r\n        reindex(this.column.controls);\r\n    };\r\n    ColumnControl.prototype.setData = function (data) {\r\n        this.json = data;\r\n    };\r\n    return ColumnControl;\r\n}());\r\nexport { ColumnControl };\r\nvar ClientSideText = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ClientSideText, _super);\r\n    function ClientSideText(text, json) {\r\n        if (json === void 0) { json = JSON.parse(JSON.stringify(ClientSideText.Default)); }\r\n        var _this = this;\r\n        if (stringIsNullOrEmpty(json.id)) {\r\n            json.id = getGUID();\r\n            json.anchorComponentId = json.id;\r\n        }\r\n        _this = _super.call(this, json) || this;\r\n        _this.text = text;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(ClientSideText.prototype, \"text\", {\r\n        get: function () {\r\n            return this.data.innerHTML;\r\n        },\r\n        set: function (value) {\r\n            if (!value.startsWith(\"<p>\")) {\r\n                value = \"<p>\" + value + \"</p>\";\r\n            }\r\n            this.data.innerHTML = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ClientSideText.prototype, \"order\", {\r\n        get: function () {\r\n            return this.data.position.controlIndex;\r\n        },\r\n        set: function (value) {\r\n            this.data.position.controlIndex = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ClientSideText.prototype.onColumnChange = function (col) {\r\n        this.data.position.sectionFactor = col.factor;\r\n        this.data.position.controlIndex = getNextOrder(col.controls);\r\n        this.data.position.zoneIndex = col.data.position.zoneIndex;\r\n        this.data.position.sectionIndex = col.order;\r\n    };\r\n    ClientSideText.Default = {\r\n        addedFromPersistedData: false,\r\n        anchorComponentId: \"\",\r\n        controlType: 4,\r\n        displayMode: 2,\r\n        editorType: \"CKEditor\",\r\n        emphasis: {},\r\n        id: \"\",\r\n        innerHTML: \"\",\r\n        position: {\r\n            controlIndex: 1,\r\n            layoutIndex: 1,\r\n            sectionFactor: 12,\r\n            sectionIndex: 1,\r\n            zoneIndex: 1,\r\n        },\r\n    };\r\n    return ClientSideText;\r\n}(ColumnControl));\r\nexport { ClientSideText };\r\nvar ClientSideWebpart = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ClientSideWebpart, _super);\r\n    function ClientSideWebpart(json) {\r\n        if (json === void 0) { json = JSON.parse(JSON.stringify(ClientSideWebpart.Default)); }\r\n        return _super.call(this, json) || this;\r\n    }\r\n    ClientSideWebpart.fromComponentDef = function (definition) {\r\n        var part = new ClientSideWebpart();\r\n        part.import(definition);\r\n        return part;\r\n    };\r\n    Object.defineProperty(ClientSideWebpart.prototype, \"title\", {\r\n        get: function () {\r\n            return this.data.webPartData.title;\r\n        },\r\n        set: function (value) {\r\n            this.data.webPartData.title = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ClientSideWebpart.prototype, \"description\", {\r\n        get: function () {\r\n            return this.data.webPartData.description;\r\n        },\r\n        set: function (value) {\r\n            this.data.webPartData.description = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ClientSideWebpart.prototype, \"order\", {\r\n        get: function () {\r\n            return this.data.position.controlIndex;\r\n        },\r\n        set: function (value) {\r\n            this.data.position.controlIndex = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ClientSideWebpart.prototype, \"height\", {\r\n        get: function () {\r\n            return this.data.reservedHeight;\r\n        },\r\n        set: function (value) {\r\n            this.data.reservedHeight = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ClientSideWebpart.prototype, \"width\", {\r\n        get: function () {\r\n            return this.data.reservedWidth;\r\n        },\r\n        set: function (value) {\r\n            this.data.reservedWidth = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ClientSideWebpart.prototype, \"dataVersion\", {\r\n        get: function () {\r\n            return this.data.webPartData.dataVersion;\r\n        },\r\n        set: function (value) {\r\n            this.data.webPartData.dataVersion = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ClientSideWebpart.prototype.setProperties = function (properties) {\r\n        this.data.webPartData.properties = extend(this.data.webPartData.properties, properties);\r\n        return this;\r\n    };\r\n    ClientSideWebpart.prototype.getProperties = function () {\r\n        return this.data.webPartData.properties;\r\n    };\r\n    ClientSideWebpart.prototype.onColumnChange = function (col) {\r\n        this.data.position = {\r\n            controlIndex: getNextOrder(col.controls),\r\n            sectionFactor: col.factor,\r\n            sectionIndex: col.data.position.sectionIndex,\r\n            zoneIndex: col.data.position.zoneIndex,\r\n        };\r\n    };\r\n    ClientSideWebpart.prototype.import = function (component) {\r\n        var id = getGUID();\r\n        var componendId = component.Id.replace(/^\\{|\\}$/g, \"\").toLowerCase();\r\n        var manifest = JSON.parse(component.Manifest);\r\n        var preconfiguredEntries = manifest.preconfiguredEntries[0];\r\n        this.setData(Object.assign({}, this.data, {\r\n            id: id,\r\n            webPartData: {\r\n                dataVersion: \"1.0\",\r\n                description: preconfiguredEntries.description.default,\r\n                id: componendId,\r\n                instanceId: id,\r\n                properties: preconfiguredEntries.properties,\r\n                title: preconfiguredEntries.title.default,\r\n            },\r\n            webPartId: componendId,\r\n        }));\r\n    };\r\n    ClientSideWebpart.Default = {\r\n        addedFromPersistedData: false,\r\n        controlType: 3,\r\n        displayMode: 2,\r\n        emphasis: {},\r\n        id: null,\r\n        position: {\r\n            controlIndex: 1,\r\n            sectionFactor: 12,\r\n            sectionIndex: 1,\r\n            zoneIndex: 1,\r\n        },\r\n        reservedHeight: 500,\r\n        reservedWidth: 500,\r\n        webPartData: null,\r\n        webPartId: null,\r\n    };\r\n    return ClientSideWebpart;\r\n}(ColumnControl));\r\nexport { ClientSideWebpart };\r\n//# sourceMappingURL=clientsidepages.js.map","import * as tslib_1 from \"tslib\";\r\nimport { ODataBatch } from \"@pnp/odata\";\r\nimport { getGUID, isUrlAbsolute, combine, mergeHeaders, hOP } from \"@pnp/common\";\r\nimport { Logger } from \"@pnp/logging\";\r\nimport { SPHttpClient } from \"./net/sphttpclient\";\r\nimport { SPRuntimeConfig } from \"./config/splibconfig\";\r\nimport { toAbsoluteUrl } from \"./utils/toabsoluteurl\";\r\n/**\r\n * Manages a batch of OData operations\r\n */\r\nvar SPBatch = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SPBatch, _super);\r\n    function SPBatch(baseUrl) {\r\n        var _this = _super.call(this) || this;\r\n        _this.baseUrl = baseUrl;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Parses the response from a batch request into an array of Response instances\r\n     *\r\n     * @param body Text body of the response from the batch request\r\n     */\r\n    SPBatch.ParseResponse = function (body) {\r\n        return new Promise(function (resolve, reject) {\r\n            var responses = [];\r\n            var header = \"--batchresponse_\";\r\n            // Ex. \"HTTP/1.1 500 Internal Server Error\"\r\n            var statusRegExp = new RegExp(\"^HTTP/[0-9.]+ +([0-9]+) +(.*)\", \"i\");\r\n            var lines = body.split(\"\\n\");\r\n            var state = \"batch\";\r\n            var status;\r\n            var statusText;\r\n            for (var i = 0; i < lines.length; ++i) {\r\n                var line = lines[i];\r\n                switch (state) {\r\n                    case \"batch\":\r\n                        if (line.substr(0, header.length) === header) {\r\n                            state = \"batchHeaders\";\r\n                        }\r\n                        else {\r\n                            if (line.trim() !== \"\") {\r\n                                throw Error(\"Invalid response, line \" + i);\r\n                            }\r\n                        }\r\n                        break;\r\n                    case \"batchHeaders\":\r\n                        if (line.trim() === \"\") {\r\n                            state = \"status\";\r\n                        }\r\n                        break;\r\n                    case \"status\":\r\n                        var parts = statusRegExp.exec(line);\r\n                        if (parts.length !== 3) {\r\n                            throw Error(\"Invalid status, line \" + i);\r\n                        }\r\n                        status = parseInt(parts[1], 10);\r\n                        statusText = parts[2];\r\n                        state = \"statusHeaders\";\r\n                        break;\r\n                    case \"statusHeaders\":\r\n                        if (line.trim() === \"\") {\r\n                            state = \"body\";\r\n                        }\r\n                        break;\r\n                    case \"body\":\r\n                        responses.push((status === 204) ? new Response() : new Response(line, { status: status, statusText: statusText }));\r\n                        state = \"batch\";\r\n                        break;\r\n                }\r\n            }\r\n            if (state !== \"status\") {\r\n                reject(Error(\"Unexpected end of input\"));\r\n            }\r\n            resolve(responses);\r\n        });\r\n    };\r\n    SPBatch.prototype.executeImpl = function () {\r\n        var _this = this;\r\n        Logger.write(\"[\" + this.batchId + \"] (\" + (new Date()).getTime() + \") Executing batch with \" + this.requests.length + \" requests.\", 1 /* Info */);\r\n        // if we don't have any requests, don't bother sending anything\r\n        // this could be due to caching further upstream, or just an empty batch\r\n        if (this.requests.length < 1) {\r\n            Logger.write(\"Resolving empty batch.\", 1 /* Info */);\r\n            return Promise.resolve();\r\n        }\r\n        // creating the client here allows the url to be populated for nodejs client as well as potentially\r\n        // any other hacks needed for other types of clients. Essentially allows the absoluteRequestUrl\r\n        // below to be correct\r\n        var client = new SPHttpClient();\r\n        // due to timing we need to get the absolute url here so we can use it for all the individual requests\r\n        // and for sending the entire batch\r\n        return toAbsoluteUrl(this.baseUrl).then(function (absoluteRequestUrl) {\r\n            // build all the requests, send them, pipe results in order to parsers\r\n            var batchBody = [];\r\n            var currentChangeSetId = \"\";\r\n            for (var i = 0; i < _this.requests.length; i++) {\r\n                var reqInfo = _this.requests[i];\r\n                if (reqInfo.method === \"GET\") {\r\n                    if (currentChangeSetId.length > 0) {\r\n                        // end an existing change set\r\n                        batchBody.push(\"--changeset_\" + currentChangeSetId + \"--\\n\\n\");\r\n                        currentChangeSetId = \"\";\r\n                    }\r\n                    batchBody.push(\"--batch_\" + _this.batchId + \"\\n\");\r\n                }\r\n                else {\r\n                    if (currentChangeSetId.length < 1) {\r\n                        // start new change set\r\n                        currentChangeSetId = getGUID();\r\n                        batchBody.push(\"--batch_\" + _this.batchId + \"\\n\");\r\n                        batchBody.push(\"Content-Type: multipart/mixed; boundary=\\\"changeset_\" + currentChangeSetId + \"\\\"\\n\\n\");\r\n                    }\r\n                    batchBody.push(\"--changeset_\" + currentChangeSetId + \"\\n\");\r\n                }\r\n                // common batch part prefix\r\n                batchBody.push(\"Content-Type: application/http\\n\");\r\n                batchBody.push(\"Content-Transfer-Encoding: binary\\n\\n\");\r\n                var headers = new Headers();\r\n                // this is the url of the individual request within the batch\r\n                var url = isUrlAbsolute(reqInfo.url) ? reqInfo.url : combine(absoluteRequestUrl, reqInfo.url);\r\n                Logger.write(\"[\" + _this.batchId + \"] (\" + (new Date()).getTime() + \") Adding request \" + reqInfo.method + \" \" + url + \" to batch.\", 0 /* Verbose */);\r\n                if (reqInfo.method !== \"GET\") {\r\n                    var method = reqInfo.method;\r\n                    var castHeaders = reqInfo.options.headers;\r\n                    if (hOP(reqInfo, \"options\") && hOP(reqInfo.options, \"headers\") && castHeaders[\"X-HTTP-Method\"] !== undefined) {\r\n                        method = castHeaders[\"X-HTTP-Method\"];\r\n                        delete castHeaders[\"X-HTTP-Method\"];\r\n                    }\r\n                    batchBody.push(method + \" \" + url + \" HTTP/1.1\\n\");\r\n                    headers.set(\"Content-Type\", \"application/json;odata=verbose;charset=utf-8\");\r\n                }\r\n                else {\r\n                    batchBody.push(reqInfo.method + \" \" + url + \" HTTP/1.1\\n\");\r\n                }\r\n                // merge global config headers\r\n                mergeHeaders(headers, SPRuntimeConfig.headers);\r\n                // merge per-request headers\r\n                if (reqInfo.options) {\r\n                    mergeHeaders(headers, reqInfo.options.headers);\r\n                }\r\n                // lastly we apply any default headers we need that may not exist\r\n                if (!headers.has(\"Accept\")) {\r\n                    headers.append(\"Accept\", \"application/json\");\r\n                }\r\n                if (!headers.has(\"Content-Type\")) {\r\n                    headers.append(\"Content-Type\", \"application/json;odata=verbose;charset=utf-8\");\r\n                }\r\n                if (!headers.has(\"X-ClientService-ClientTag\")) {\r\n                    headers.append(\"X-ClientService-ClientTag\", \"PnPCoreJS:@pnp-1.3.4\");\r\n                }\r\n                // write headers into batch body\r\n                headers.forEach(function (value, name) {\r\n                    batchBody.push(name + \": \" + value + \"\\n\");\r\n                });\r\n                batchBody.push(\"\\n\");\r\n                if (reqInfo.options.body) {\r\n                    batchBody.push(reqInfo.options.body + \"\\n\\n\");\r\n                }\r\n            }\r\n            if (currentChangeSetId.length > 0) {\r\n                // Close the changeset\r\n                batchBody.push(\"--changeset_\" + currentChangeSetId + \"--\\n\\n\");\r\n                currentChangeSetId = \"\";\r\n            }\r\n            batchBody.push(\"--batch_\" + _this.batchId + \"--\\n\");\r\n            var batchOptions = {\r\n                \"body\": batchBody.join(\"\"),\r\n                \"headers\": {\r\n                    \"Content-Type\": \"multipart/mixed; boundary=batch_\" + _this.batchId,\r\n                },\r\n                \"method\": \"POST\",\r\n            };\r\n            Logger.write(\"[\" + _this.batchId + \"] (\" + (new Date()).getTime() + \") Sending batch request.\", 1 /* Info */);\r\n            return client.fetch(combine(absoluteRequestUrl, \"/_api/$batch\"), batchOptions)\r\n                .then(function (r) { return r.text(); })\r\n                .then(SPBatch.ParseResponse)\r\n                .then(function (responses) {\r\n                if (responses.length !== _this.requests.length) {\r\n                    throw Error(\"Could not properly parse responses to match requests in batch.\");\r\n                }\r\n                Logger.write(\"[\" + _this.batchId + \"] (\" + (new Date()).getTime() + \") Resolving batched requests.\", 1 /* Info */);\r\n                return responses.reduce(function (chain, response, index) {\r\n                    var request = _this.requests[index];\r\n                    Logger.write(\"[\" + request.id + \"] (\" + (new Date()).getTime() + \") Resolving request in batch \" + _this.batchId + \".\", 1 /* Info */);\r\n                    return chain.then(function (_) { return request.parser.parse(response).then(request.resolve).catch(request.reject); });\r\n                }, Promise.resolve());\r\n            });\r\n        });\r\n    };\r\n    return SPBatch;\r\n}(ODataBatch));\r\nexport { SPBatch };\r\n//# sourceMappingURL=batch.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryableInstance, SharePointQueryableCollection, defaultPath } from \"./sharepointqueryable\";\r\nimport { jsS } from \"@pnp/common\";\r\n/**\r\n * Describes a collection of List objects\r\n *\r\n */\r\nvar Features = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Features, _super);\r\n    function Features() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Features_1 = Features;\r\n    /**\r\n     * Adds a new list to the collection\r\n     *\r\n     * @param id The Id of the feature (GUID)\r\n     * @param force If true the feature activation will be forced\r\n     */\r\n    Features.prototype.add = function (id, force) {\r\n        var _this = this;\r\n        if (force === void 0) { force = false; }\r\n        return this.clone(Features_1, \"add\").postCore({\r\n            body: jsS({\r\n                featdefScope: 0,\r\n                featureId: id,\r\n                force: force,\r\n            }),\r\n        }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                feature: _this.getById(id),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Gets a list from the collection by guid id\r\n     *\r\n     * @param id The Id of the feature (GUID)\r\n     */\r\n    Features.prototype.getById = function (id) {\r\n        var feature = new Feature(this);\r\n        feature.concat(\"('\" + id + \"')\");\r\n        return feature;\r\n    };\r\n    /**\r\n     * Removes (deactivates) a feature from the collection\r\n     *\r\n     * @param id The Id of the feature (GUID)\r\n     * @param force If true the feature deactivation will be forced\r\n     */\r\n    Features.prototype.remove = function (id, force) {\r\n        if (force === void 0) { force = false; }\r\n        return this.clone(Features_1, \"remove\").postCore({\r\n            body: jsS({\r\n                featureId: id,\r\n                force: force,\r\n            }),\r\n        });\r\n    };\r\n    var Features_1;\r\n    Features = Features_1 = tslib_1.__decorate([\r\n        defaultPath(\"features\")\r\n    ], Features);\r\n    return Features;\r\n}(SharePointQueryableCollection));\r\nexport { Features };\r\nvar Feature = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Feature, _super);\r\n    function Feature() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Removes (deactivates) a feature from the collection\r\n     *\r\n     * @param force If true the feature deactivation will be forced\r\n     */\r\n    Feature.prototype.deactivate = function (force) {\r\n        var _this = this;\r\n        if (force === void 0) { force = false; }\r\n        var removeDependency = this.addBatchDependency();\r\n        var idGet = new Feature(this).select(\"DefinitionId\");\r\n        return idGet.get().then(function (feature) {\r\n            var promise = _this.getParent(Features, _this.parentUrl, \"\", _this.batch).remove(feature.DefinitionId, force);\r\n            removeDependency();\r\n            return promise;\r\n        });\r\n    };\r\n    return Feature;\r\n}(SharePointQueryableInstance));\r\nexport { Feature };\r\n//# sourceMappingURL=features.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryable, SharePointQueryableInstance, defaultPath } from \"./sharepointqueryable\";\r\nimport { Web } from \"./webs\";\r\nimport { UserCustomActions } from \"./usercustomactions\";\r\nimport { SPBatch } from \"./batch\";\r\nimport { Features } from \"./features\";\r\nimport { hOP, jsS, extend } from \"@pnp/common\";\r\nimport { SPHttpClient } from \"./net/sphttpclient\";\r\n/**\r\n * Describes a site collection\r\n *\r\n */\r\nvar Site = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Site, _super);\r\n    function Site() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Site_1 = Site;\r\n    Object.defineProperty(Site.prototype, \"rootWeb\", {\r\n        /**\r\n         * Gets the root web of the site collection\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Web(this, \"rootweb\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Site.prototype, \"features\", {\r\n        /**\r\n         * Gets the active features for this site collection\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Features(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Site.prototype, \"userCustomActions\", {\r\n        /**\r\n         * Gets all custom actions for this site collection\r\n         *\r\n         */\r\n        get: function () {\r\n            return new UserCustomActions(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets a Web instance representing the root web of the site collection\r\n     * correctly setup for chaining within the library\r\n     */\r\n    Site.prototype.getRootWeb = function () {\r\n        return this.rootWeb.select(\"Url\").get().then(function (web) { return new Web(web.Url); });\r\n    };\r\n    /**\r\n     * Gets the context information for this site collection\r\n     */\r\n    Site.prototype.getContextInfo = function () {\r\n        var q = new Site_1(this.parentUrl, \"_api/contextinfo\");\r\n        return q.postCore().then(function (data) {\r\n            if (hOP(data, \"GetContextWebInformation\")) {\r\n                var info = data.GetContextWebInformation;\r\n                info.SupportedSchemaVersions = info.SupportedSchemaVersions.results;\r\n                return info;\r\n            }\r\n            else {\r\n                return data;\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Gets the document libraries on a site. Static method. (SharePoint Online only)\r\n     *\r\n     * @param absoluteWebUrl The absolute url of the web whose document libraries should be returned\r\n     */\r\n    Site.prototype.getDocumentLibraries = function (absoluteWebUrl) {\r\n        var q = new SharePointQueryable(\"\", \"_api/sp.web.getdocumentlibraries(@v)\");\r\n        q.query.set(\"@v\", \"'\" + absoluteWebUrl + \"'\");\r\n        return q.get().then(function (data) {\r\n            if (hOP(data, \"GetDocumentLibraries\")) {\r\n                return data.GetDocumentLibraries;\r\n            }\r\n            else {\r\n                return data;\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Gets the site url from a page url\r\n     *\r\n     * @param absolutePageUrl The absolute url of the page\r\n     */\r\n    Site.prototype.getWebUrlFromPageUrl = function (absolutePageUrl) {\r\n        var q = new SharePointQueryable(\"\", \"_api/sp.web.getweburlfrompageurl(@v)\");\r\n        q.query.set(\"@v\", \"'\" + absolutePageUrl + \"'\");\r\n        return q.get().then(function (data) {\r\n            if (hOP(data, \"GetWebUrlFromPageUrl\")) {\r\n                return data.GetWebUrlFromPageUrl;\r\n            }\r\n            else {\r\n                return data;\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Deletes the current site\r\n     *\r\n     */\r\n    Site.prototype.delete = function () {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var site, q;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.clone(Site_1, \"\").select(\"Id\").get()];\r\n                    case 1:\r\n                        site = _a.sent();\r\n                        q = new Site_1(this.parentUrl, \"_api/SPSiteManager/Delete\");\r\n                        return [4 /*yield*/, q.postCore({\r\n                                body: jsS({\r\n                                    siteId: site.Id,\r\n                                }),\r\n                            })];\r\n                    case 2:\r\n                        _a.sent();\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Creates a new batch for requests within the context of this site collection\r\n     *\r\n     */\r\n    Site.prototype.createBatch = function () {\r\n        return new SPBatch(this.parentUrl);\r\n    };\r\n    /**\r\n     * Opens a web by id (using POST)\r\n     *\r\n     * @param webId The GUID id of the web to open\r\n     */\r\n    Site.prototype.openWebById = function (webId) {\r\n        return this.clone(Site_1, \"openWebById('\" + webId + \"')\").postCore().then(function (d) { return ({\r\n            data: d,\r\n            web: Web.fromUrl(d[\"odata.id\"] || d.__metadata.uri),\r\n        }); });\r\n    };\r\n    /**\r\n     * Associates a site collection to a hub site.\r\n     *\r\n     * @param siteId Id of the hub site collection you want to join.\r\n     * If you want to disassociate the site collection from hub site, then\r\n     * pass the siteId as 00000000-0000-0000-0000-000000000000\r\n     */\r\n    Site.prototype.joinHubSite = function (siteId) {\r\n        return this.clone(Site_1, \"joinHubSite('\" + siteId + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Registers the current site collection as hub site collection\r\n     */\r\n    Site.prototype.registerHubSite = function () {\r\n        return this.clone(Site_1, \"registerHubSite\").postCore();\r\n    };\r\n    /**\r\n     * Unregisters the current site collection as hub site collection.\r\n     */\r\n    Site.prototype.unRegisterHubSite = function () {\r\n        return this.clone(Site_1, \"unRegisterHubSite\").postCore();\r\n    };\r\n    /**\r\n     * Creates a Modern communication site.\r\n     *\r\n     * @param title The title of the site to create\r\n     * @param lcid The language to use for the site. If not specified will default to 1033 (English).\r\n     * @param shareByEmailEnabled If set to true, it will enable sharing files via Email. By default it is set to false\r\n     * @param url The fully qualified URL (e.g. https://yourtenant.sharepoint.com/sites/mysitecollection) of the site.\r\n     * @param description The description of the communication site.\r\n     * @param classification The Site classification to use. For instance 'Contoso Classified'. See https://www.youtube.com/watch?v=E-8Z2ggHcS0 for more information\r\n     * @param siteDesignId The Guid of the site design to be used.\r\n     *                     You can use the below default OOTB GUIDs:\r\n     *                     Topic: 00000000-0000-0000-0000-000000000000\r\n     *                     Showcase: 6142d2a0-63a5-4ba0-aede-d9fefca2c767\r\n     *                     Blank: f6cc5403-0d63-442e-96c0-285923709ffc\r\n     * @param owner Required when creating the site using app-only context\r\n     */\r\n    Site.prototype.createCommunicationSite = function (title, lcid, shareByEmailEnabled, url, description, classification, siteDesignId, hubSiteId, owner) {\r\n        var _this = this;\r\n        if (lcid === void 0) { lcid = 1033; }\r\n        if (shareByEmailEnabled === void 0) { shareByEmailEnabled = false; }\r\n        if (description === void 0) { description = \"\"; }\r\n        if (classification === void 0) { classification = \"\"; }\r\n        if (siteDesignId === void 0) { siteDesignId = \"00000000-0000-0000-0000-000000000000\"; }\r\n        if (hubSiteId === void 0) { hubSiteId = \"00000000-0000-0000-0000-000000000000\"; }\r\n        var props = {\r\n            Classification: classification,\r\n            Description: description,\r\n            HubSiteId: hubSiteId,\r\n            Lcid: lcid,\r\n            Owner: owner,\r\n            ShareByEmailEnabled: shareByEmailEnabled,\r\n            SiteDesignId: siteDesignId,\r\n            Title: title,\r\n            Url: url,\r\n            WebTemplate: \"SITEPAGEPUBLISHING#0\",\r\n            WebTemplateExtensionId: \"00000000-0000-0000-0000-000000000000\",\r\n        };\r\n        var postBody = jsS({\r\n            \"request\": extend({\r\n                \"__metadata\": { \"type\": \"Microsoft.SharePoint.Portal.SPSiteCreationRequest\" },\r\n            }, props),\r\n        });\r\n        return this.getRootWeb().then(function (d) { return tslib_1.__awaiter(_this, void 0, void 0, function () {\r\n            var client, methodUrl;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                client = new SPHttpClient();\r\n                methodUrl = d.parentUrl + \"/_api/SPSiteManager/Create\";\r\n                return [2 /*return*/, client.post(methodUrl, {\r\n                        body: postBody,\r\n                        headers: {\r\n                            \"Accept\": \"application/json;odata=verbose\",\r\n                            \"Content-Type\": \"application/json;odata=verbose;charset=utf-8\",\r\n                        },\r\n                    }).then(function (r) { return r.json(); })];\r\n            });\r\n        }); });\r\n    };\r\n    /**\r\n     * Creates a Modern team site backed by Office 365 group. For use in SP Online only. This will not work with App-only tokens\r\n     *\r\n     * @param displayName The title or display name of the Modern team site to be created\r\n     * @param alias Alias of the underlying Office 365 Group\r\n     * @param isPublic Defines whether the Office 365 Group will be public (default), or private.\r\n     * @param lcid The language to use for the site. If not specified will default to English (1033).\r\n     * @param description The description of the site to be created.\r\n     * @param classification The Site classification to use. For instance 'Contoso Classified'. See https://www.youtube.com/watch?v=E-8Z2ggHcS0 for more information\r\n     * @param owners The Owners of the site to be created\r\n     * @param siteDesignId The ID of the site design to apply to the new site\r\n     */\r\n    Site.prototype.createModernTeamSite = function (displayName, alias, isPublic, lcid, description, classification, owners, hubSiteId, siteDesignId) {\r\n        var _this = this;\r\n        if (isPublic === void 0) { isPublic = true; }\r\n        if (lcid === void 0) { lcid = 1033; }\r\n        if (description === void 0) { description = \"\"; }\r\n        if (classification === void 0) { classification = \"\"; }\r\n        if (hubSiteId === void 0) { hubSiteId = \"00000000-0000-0000-0000-000000000000\"; }\r\n        var postBody = {\r\n            alias: alias,\r\n            displayName: displayName,\r\n            isPublic: isPublic,\r\n            optionalParams: {\r\n                Classification: classification,\r\n                CreationOptions: {\r\n                    \"results\": [\"SPSiteLanguage:\" + lcid, \"HubSiteId:\" + hubSiteId],\r\n                },\r\n                Description: description,\r\n                Owners: {\r\n                    \"results\": owners ? owners : [],\r\n                },\r\n            },\r\n        };\r\n        if (siteDesignId) {\r\n            postBody.optionalParams.CreationOptions.results.push(\"implicit_formula_292aa8a00786498a87a5ca52d9f4214a_\" + siteDesignId);\r\n        }\r\n        return this.getRootWeb().then(function (d) { return tslib_1.__awaiter(_this, void 0, void 0, function () {\r\n            var client, methodUrl;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                client = new SPHttpClient();\r\n                methodUrl = d.parentUrl + \"/_api/GroupSiteManager/CreateGroupEx\";\r\n                return [2 /*return*/, client.post(methodUrl, {\r\n                        body: jsS(postBody),\r\n                        headers: {\r\n                            \"Accept\": \"application/json;odata=verbose\",\r\n                            \"Content-Type\": \"application/json;odata=verbose;charset=utf-8\",\r\n                        },\r\n                    }).then(function (r) { return r.json(); })];\r\n            });\r\n        }); });\r\n    };\r\n    var Site_1;\r\n    Site = Site_1 = tslib_1.__decorate([\r\n        defaultPath(\"_api/site\")\r\n    ], Site);\r\n    return Site;\r\n}(SharePointQueryableInstance));\r\nexport { Site };\r\n//# sourceMappingURL=site.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryable, SharePointQueryableInstance, SharePointQueryableCollection, defaultPath } from \"./sharepointqueryable\";\r\nimport { jsS, extend } from \"@pnp/common\";\r\nimport { metadata } from \"./utils/metadata\";\r\n/**\r\n * Represents a collection of navigation nodes\r\n *\r\n */\r\nvar NavigationNodes = /** @class */ (function (_super) {\r\n    tslib_1.__extends(NavigationNodes, _super);\r\n    function NavigationNodes() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets a navigation node by id\r\n     *\r\n     * @param id The id of the node\r\n     */\r\n    NavigationNodes.prototype.getById = function (id) {\r\n        var node = new NavigationNode(this);\r\n        node.concat(\"(\" + id + \")\");\r\n        return node;\r\n    };\r\n    /**\r\n     * Adds a new node to the collection\r\n     *\r\n     * @param title Display name of the node\r\n     * @param url The url of the node\r\n     * @param visible If true the node is visible, otherwise it is hidden (default: true)\r\n     */\r\n    NavigationNodes.prototype.add = function (title, url, visible) {\r\n        var _this = this;\r\n        if (visible === void 0) { visible = true; }\r\n        var postBody = jsS(extend(metadata(\"SP.NavigationNode\"), {\r\n            IsVisible: visible,\r\n            Title: title,\r\n            Url: url,\r\n        }));\r\n        return this.clone(NavigationNodes, null).postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                node: _this.getById(data.Id),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Moves a node to be after another node in the navigation\r\n     *\r\n     * @param nodeId Id of the node to move\r\n     * @param previousNodeId Id of the node after which we move the node specified by nodeId\r\n     */\r\n    NavigationNodes.prototype.moveAfter = function (nodeId, previousNodeId) {\r\n        var postBody = jsS({\r\n            nodeId: nodeId,\r\n            previousNodeId: previousNodeId,\r\n        });\r\n        return this.clone(NavigationNodes, \"MoveAfter\").postCore({ body: postBody });\r\n    };\r\n    return NavigationNodes;\r\n}(SharePointQueryableCollection));\r\nexport { NavigationNodes };\r\n/**\r\n * Represents an instance of a navigation node\r\n *\r\n */\r\nvar NavigationNode = /** @class */ (function (_super) {\r\n    tslib_1.__extends(NavigationNode, _super);\r\n    function NavigationNode() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(NavigationNode.prototype, \"children\", {\r\n        /**\r\n         * Represents the child nodes of this node\r\n         */\r\n        get: function () {\r\n            return new NavigationNodes(this, \"Children\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Deletes this node and any child nodes\r\n     */\r\n    NavigationNode.prototype.delete = function () {\r\n        return _super.prototype.deleteCore.call(this);\r\n    };\r\n    /**\r\n     * Updates this node\r\n     *\r\n     * @param properties Properties used to update this node\r\n     */\r\n    NavigationNode.prototype.update = function (properties) {\r\n        var _this = this;\r\n        var postBody = jsS(extend({\r\n            \"__metadata\": { \"type\": \"SP.NavigationNode\" },\r\n        }, properties));\r\n        return this.postCore({\r\n            body: postBody,\r\n            headers: {\r\n                \"X-HTTP-Method\": \"MERGE\",\r\n            },\r\n        }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                node: _this,\r\n            };\r\n        });\r\n    };\r\n    return NavigationNode;\r\n}(SharePointQueryableInstance));\r\nexport { NavigationNode };\r\n/**\r\n * Exposes the navigation components\r\n *\r\n */\r\nvar Navigation = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Navigation, _super);\r\n    function Navigation() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(Navigation.prototype, \"quicklaunch\", {\r\n        /**\r\n         * Gets the quicklaunch navigation nodes for the current context\r\n         *\r\n         */\r\n        get: function () {\r\n            return new NavigationNodes(this, \"quicklaunch\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Navigation.prototype, \"topNavigationBar\", {\r\n        /**\r\n         * Gets the top bar navigation nodes for the current context\r\n         *\r\n         */\r\n        get: function () {\r\n            return new NavigationNodes(this, \"topnavigationbar\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Navigation = tslib_1.__decorate([\r\n        defaultPath(\"navigation\")\r\n    ], Navigation);\r\n    return Navigation;\r\n}(SharePointQueryable));\r\nexport { Navigation };\r\n/**\r\n * Represents the top level navigation service\r\n */\r\nvar NavigationService = /** @class */ (function (_super) {\r\n    tslib_1.__extends(NavigationService, _super);\r\n    function NavigationService(baseUrl, path) {\r\n        if (path === void 0) { path = null; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * The MenuState service operation returns a Menu-State (dump) of a SiteMapProvider on a site.\r\n     *\r\n     * @param menuNodeKey MenuNode.Key of the start node within the SiteMapProvider If no key is provided the SiteMapProvider.RootNode will be the root of the menu state.\r\n     * @param depth Depth of the dump. If no value is provided a dump with the depth of 10 is returned\r\n     * @param mapProviderName The name identifying the SiteMapProvider to be used\r\n     * @param customProperties comma seperated list of custom properties to be returned.\r\n     */\r\n    NavigationService.prototype.getMenuState = function (menuNodeKey, depth, mapProviderName, customProperties) {\r\n        if (menuNodeKey === void 0) { menuNodeKey = null; }\r\n        if (depth === void 0) { depth = 10; }\r\n        if (mapProviderName === void 0) { mapProviderName = null; }\r\n        if (customProperties === void 0) { customProperties = null; }\r\n        return (new NavigationService(this, \"_api/navigation/MenuState\")).postCore({\r\n            body: jsS({\r\n                customProperties: customProperties,\r\n                depth: depth,\r\n                mapProviderName: mapProviderName,\r\n                menuNodeKey: menuNodeKey,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Tries to get a SiteMapNode.Key for a given URL within a site collection.\r\n     *\r\n     * @param currentUrl A url representing the SiteMapNode\r\n     * @param mapProviderName The name identifying the SiteMapProvider to be used\r\n     */\r\n    NavigationService.prototype.getMenuNodeKey = function (currentUrl, mapProviderName) {\r\n        if (mapProviderName === void 0) { mapProviderName = null; }\r\n        return (new NavigationService(this, \"_api/navigation/MenuNodeKey\")).postCore({\r\n            body: jsS({\r\n                currentUrl: currentUrl,\r\n                mapProviderName: mapProviderName,\r\n            }),\r\n        });\r\n    };\r\n    return NavigationService;\r\n}(SharePointQueryable));\r\nexport { NavigationService };\r\n//# sourceMappingURL=navigation.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryable, defaultPath } from \"./sharepointqueryable\";\r\nimport { jsS } from \"@pnp/common\";\r\nvar RelatedItemManagerImpl = /** @class */ (function (_super) {\r\n    tslib_1.__extends(RelatedItemManagerImpl, _super);\r\n    function RelatedItemManagerImpl() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    RelatedItemManagerImpl_1 = RelatedItemManagerImpl;\r\n    RelatedItemManagerImpl.FromUrl = function (url) {\r\n        if (url === null) {\r\n            return new RelatedItemManagerImpl_1(\"\");\r\n        }\r\n        var index = url.indexOf(\"_api/\");\r\n        if (index > -1) {\r\n            return new RelatedItemManagerImpl_1(url.substr(0, index));\r\n        }\r\n        return new RelatedItemManagerImpl_1(url);\r\n    };\r\n    RelatedItemManagerImpl.prototype.getRelatedItems = function (sourceListName, sourceItemId) {\r\n        var query = this.clone(RelatedItemManagerImpl_1, null);\r\n        query.concat(\".GetRelatedItems\");\r\n        return query.postCore({\r\n            body: jsS({\r\n                SourceItemID: sourceItemId,\r\n                SourceListName: sourceListName,\r\n            }),\r\n        });\r\n    };\r\n    RelatedItemManagerImpl.prototype.getPageOneRelatedItems = function (sourceListName, sourceItemId) {\r\n        var query = this.clone(RelatedItemManagerImpl_1, null);\r\n        query.concat(\".GetPageOneRelatedItems\");\r\n        return query.postCore({\r\n            body: jsS({\r\n                SourceItemID: sourceItemId,\r\n                SourceListName: sourceListName,\r\n            }),\r\n        });\r\n    };\r\n    RelatedItemManagerImpl.prototype.addSingleLink = function (sourceListName, sourceItemId, sourceWebUrl, targetListName, targetItemID, targetWebUrl, tryAddReverseLink) {\r\n        if (tryAddReverseLink === void 0) { tryAddReverseLink = false; }\r\n        var query = this.clone(RelatedItemManagerImpl_1, null);\r\n        query.concat(\".AddSingleLink\");\r\n        return query.postCore({\r\n            body: jsS({\r\n                SourceItemID: sourceItemId,\r\n                SourceListName: sourceListName,\r\n                SourceWebUrl: sourceWebUrl,\r\n                TargetItemID: targetItemID,\r\n                TargetListName: targetListName,\r\n                TargetWebUrl: targetWebUrl,\r\n                TryAddReverseLink: tryAddReverseLink,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Adds a related item link from an item specified by list name and item id, to an item specified by url\r\n     *\r\n     * @param sourceListName The source list name or list id\r\n     * @param sourceItemId The source item id\r\n     * @param targetItemUrl The target item url\r\n     * @param tryAddReverseLink If set to true try to add the reverse link (will not return error if it fails)\r\n     */\r\n    RelatedItemManagerImpl.prototype.addSingleLinkToUrl = function (sourceListName, sourceItemId, targetItemUrl, tryAddReverseLink) {\r\n        if (tryAddReverseLink === void 0) { tryAddReverseLink = false; }\r\n        var query = this.clone(RelatedItemManagerImpl_1, null);\r\n        query.concat(\".AddSingleLinkToUrl\");\r\n        return query.postCore({\r\n            body: jsS({\r\n                SourceItemID: sourceItemId,\r\n                SourceListName: sourceListName,\r\n                TargetItemUrl: targetItemUrl,\r\n                TryAddReverseLink: tryAddReverseLink,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Adds a related item link from an item specified by url, to an item specified by list name and item id\r\n     *\r\n     * @param sourceItemUrl The source item url\r\n     * @param targetListName The target list name or list id\r\n     * @param targetItemId The target item id\r\n     * @param tryAddReverseLink If set to true try to add the reverse link (will not return error if it fails)\r\n     */\r\n    RelatedItemManagerImpl.prototype.addSingleLinkFromUrl = function (sourceItemUrl, targetListName, targetItemId, tryAddReverseLink) {\r\n        if (tryAddReverseLink === void 0) { tryAddReverseLink = false; }\r\n        var query = this.clone(RelatedItemManagerImpl_1, null);\r\n        query.concat(\".AddSingleLinkFromUrl\");\r\n        return query.postCore({\r\n            body: jsS({\r\n                SourceItemUrl: sourceItemUrl,\r\n                TargetItemID: targetItemId,\r\n                TargetListName: targetListName,\r\n                TryAddReverseLink: tryAddReverseLink,\r\n            }),\r\n        });\r\n    };\r\n    RelatedItemManagerImpl.prototype.deleteSingleLink = function (sourceListName, sourceItemId, sourceWebUrl, targetListName, targetItemId, targetWebUrl, tryDeleteReverseLink) {\r\n        if (tryDeleteReverseLink === void 0) { tryDeleteReverseLink = false; }\r\n        var query = this.clone(RelatedItemManagerImpl_1, null);\r\n        query.concat(\".DeleteSingleLink\");\r\n        return query.postCore({\r\n            body: jsS({\r\n                SourceItemID: sourceItemId,\r\n                SourceListName: sourceListName,\r\n                SourceWebUrl: sourceWebUrl,\r\n                TargetItemID: targetItemId,\r\n                TargetListName: targetListName,\r\n                TargetWebUrl: targetWebUrl,\r\n                TryDeleteReverseLink: tryDeleteReverseLink,\r\n            }),\r\n        });\r\n    };\r\n    var RelatedItemManagerImpl_1;\r\n    RelatedItemManagerImpl = RelatedItemManagerImpl_1 = tslib_1.__decorate([\r\n        defaultPath(\"_api/SP.RelatedItemManager\")\r\n    ], RelatedItemManagerImpl);\r\n    return RelatedItemManagerImpl;\r\n}(SharePointQueryable));\r\nexport { RelatedItemManagerImpl };\r\n//# sourceMappingURL=relateditems.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryableInstance, SharePointQueryableCollection, defaultPath, } from \"./sharepointqueryable\";\r\nimport { spODataEntity, } from \"./odata\";\r\nimport { dateAdd, hOP, } from \"@pnp/common\";\r\n/**\r\n * Describes regional settings ODada object\r\n */\r\nvar RegionalSettings = /** @class */ (function (_super) {\r\n    tslib_1.__extends(RegionalSettings, _super);\r\n    function RegionalSettings() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(RegionalSettings.prototype, \"installedLanguages\", {\r\n        /**\r\n         * Gets the collection of languages used in a server farm.\r\n         */\r\n        get: function () {\r\n            return new InstalledLanguages(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RegionalSettings.prototype, \"globalInstalledLanguages\", {\r\n        /**\r\n         * Gets the collection of language packs that are installed on the server.\r\n         */\r\n        get: function () {\r\n            return new InstalledLanguages(this, \"globalinstalledlanguages\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RegionalSettings.prototype, \"timeZone\", {\r\n        /**\r\n         * Gets time zone\r\n         */\r\n        get: function () {\r\n            return new TimeZone(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RegionalSettings.prototype, \"timeZones\", {\r\n        /**\r\n         * Gets time zones\r\n         */\r\n        get: function () {\r\n            return new TimeZones(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    RegionalSettings = tslib_1.__decorate([\r\n        defaultPath(\"regionalsettings\")\r\n    ], RegionalSettings);\r\n    return RegionalSettings;\r\n}(SharePointQueryableInstance));\r\nexport { RegionalSettings };\r\n/**\r\n * Describes installed languages ODada queriable collection\r\n */\r\nvar InstalledLanguages = /** @class */ (function (_super) {\r\n    tslib_1.__extends(InstalledLanguages, _super);\r\n    function InstalledLanguages() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    InstalledLanguages = tslib_1.__decorate([\r\n        defaultPath(\"installedlanguages\")\r\n    ], InstalledLanguages);\r\n    return InstalledLanguages;\r\n}(SharePointQueryableCollection));\r\nexport { InstalledLanguages };\r\n/**\r\n * Describes TimeZone ODada object\r\n */\r\nvar TimeZone = /** @class */ (function (_super) {\r\n    tslib_1.__extends(TimeZone, _super);\r\n    function TimeZone() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    TimeZone_1 = TimeZone;\r\n    /**\r\n     * Gets an Local Time by UTC Time\r\n     *\r\n     * @param utcTime UTC Time as Date or ISO String\r\n     */\r\n    TimeZone.prototype.utcToLocalTime = function (utcTime) {\r\n        var dateIsoString;\r\n        if (typeof utcTime === \"string\") {\r\n            dateIsoString = utcTime;\r\n        }\r\n        else {\r\n            dateIsoString = utcTime.toISOString();\r\n        }\r\n        return this.clone(TimeZone_1, \"utctolocaltime('\" + dateIsoString + \"')\")\r\n            .postCore()\r\n            .then(function (res) { return hOP(res, \"UTCToLocalTime\") ? res.UTCToLocalTime : res; });\r\n    };\r\n    /**\r\n     * Gets an UTC Time by Local Time\r\n     *\r\n     * @param localTime Local Time as Date or ISO String\r\n     */\r\n    TimeZone.prototype.localTimeToUTC = function (localTime) {\r\n        var dateIsoString;\r\n        if (typeof localTime === \"string\") {\r\n            dateIsoString = localTime;\r\n        }\r\n        else {\r\n            dateIsoString = dateAdd(localTime, \"minute\", localTime.getTimezoneOffset() * -1).toISOString();\r\n        }\r\n        return this.clone(TimeZone_1, \"localtimetoutc('\" + dateIsoString + \"')\")\r\n            .postCore()\r\n            .then(function (res) { return hOP(res, \"LocalTimeToUTC\") ? res.LocalTimeToUTC : res; });\r\n    };\r\n    var TimeZone_1;\r\n    TimeZone = TimeZone_1 = tslib_1.__decorate([\r\n        defaultPath(\"timezone\")\r\n    ], TimeZone);\r\n    return TimeZone;\r\n}(SharePointQueryableInstance));\r\nexport { TimeZone };\r\n/**\r\n * Describes time zones queriable collection\r\n */\r\nvar TimeZones = /** @class */ (function (_super) {\r\n    tslib_1.__extends(TimeZones, _super);\r\n    function TimeZones() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    TimeZones_1 = TimeZones;\r\n    // https://msdn.microsoft.com/en-us/library/office/jj247008.aspx - timezones ids\r\n    /**\r\n     * Gets an TimeZone by id\r\n     *\r\n     * @param id The integer id of the timezone to retrieve\r\n     */\r\n    TimeZones.prototype.getById = function (id) {\r\n        // do the post and merge the result into a TimeZone instance so the data and methods are available\r\n        return this.clone(TimeZones_1, \"GetById(\" + id + \")\").postCore({}, spODataEntity(TimeZone));\r\n    };\r\n    var TimeZones_1;\r\n    TimeZones = TimeZones_1 = tslib_1.__decorate([\r\n        defaultPath(\"timezones\")\r\n    ], TimeZones);\r\n    return TimeZones;\r\n}(SharePointQueryableCollection));\r\nexport { TimeZones };\r\n//# sourceMappingURL=regionalsettings.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryable } from \"./sharepointqueryable\";\r\nimport { hOP } from \"@pnp/common\";\r\n/**\r\n * Implements the site designs API REST methods\r\n *\r\n */\r\nvar SiteDesigns = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SiteDesigns, _super);\r\n    /**\r\n     * Creates a new instance of the SiteDesigns method class\r\n     *\r\n     * @param baseUrl The parent url provider\r\n     * @param methodName The static method name to call on the utility class\r\n     */\r\n    function SiteDesigns(baseUrl, methodName) {\r\n        return _super.call(this, SiteDesigns.getBaseUrl(baseUrl), \"_api/Microsoft.Sharepoint.Utilities.WebTemplateExtensions.SiteScriptUtility.\" + methodName) || this;\r\n    }\r\n    SiteDesigns.getBaseUrl = function (candidate) {\r\n        if (typeof candidate === \"string\") {\r\n            return candidate;\r\n        }\r\n        var c = candidate;\r\n        var url = c.toUrl();\r\n        var index = url.indexOf(\"_api/\");\r\n        if (index < 0) {\r\n            return url;\r\n        }\r\n        return url.substr(0, index);\r\n    };\r\n    SiteDesigns.prototype.execute = function (props) {\r\n        return this.postCore({\r\n            body: JSON.stringify(props),\r\n            headers: {\r\n                \"Content-Type\": \"application/json;charset=utf-8\",\r\n            },\r\n        });\r\n    };\r\n    /**\r\n     * Creates a new site design available to users when they create a new site from the SharePoint home page.\r\n     *\r\n     * @param creationInfo A sitedesign creation information object\r\n     */\r\n    SiteDesigns.prototype.createSiteDesign = function (creationInfo) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.clone(SiteDesigns, \"CreateSiteDesign\").execute({ info: creationInfo })];\r\n                    case 1: return [2 /*return*/, _a.sent()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Applies a site design to an existing site collection.\r\n     *\r\n     * @param siteDesignId The ID of the site design to apply.\r\n     * @param webUrl The URL of the site collection where you want to apply the site design.\r\n     */\r\n    SiteDesigns.prototype.applySiteDesign = function (siteDesignId, webUrl) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.clone(SiteDesigns, \"ApplySiteDesign\").execute({ siteDesignId: siteDesignId, \"webUrl\": webUrl })];\r\n                    case 1: return [2 /*return*/, _a.sent()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Gets a list of information about existing site designs.\r\n     */\r\n    SiteDesigns.prototype.getSiteDesigns = function () {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.clone(SiteDesigns, \"GetSiteDesigns\").execute({})];\r\n                    case 1: return [2 /*return*/, _a.sent()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Gets information about a specific site design.\r\n     * @param id The ID of the site design to get information about.\r\n     */\r\n    SiteDesigns.prototype.getSiteDesignMetadata = function (id) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.clone(SiteDesigns, \"GetSiteDesignMetadata\").execute({ id: id })];\r\n                    case 1: return [2 /*return*/, _a.sent()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Updates a site design with new values. In the REST call, all parameters are optional except the site script Id.\r\n     * If you had previously set the IsDefault parameter to TRUE and wish it to remain true, you must pass in this parameter again (otherwise it will be reset to FALSE).\r\n     * @param updateInfo A sitedesign update information object\r\n     */\r\n    SiteDesigns.prototype.updateSiteDesign = function (updateInfo) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.clone(SiteDesigns, \"UpdateSiteDesign\").execute({ updateInfo: updateInfo })];\r\n                    case 1: return [2 /*return*/, _a.sent()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Deletes a site design.\r\n     * @param id The ID of the site design to delete.\r\n     */\r\n    SiteDesigns.prototype.deleteSiteDesign = function (id) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.clone(SiteDesigns, \"DeleteSiteDesign\").execute({ id: id })];\r\n                    case 1: return [2 /*return*/, _a.sent()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Gets a list of principals that have access to a site design.\r\n     * @param id The ID of the site design to get rights information from.\r\n     */\r\n    SiteDesigns.prototype.getSiteDesignRights = function (id) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.clone(SiteDesigns, \"GetSiteDesignRights\").execute({ id: id })];\r\n                    case 1: return [2 /*return*/, _a.sent()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Grants access to a site design for one or more principals.\r\n     * @param id The ID of the site design to grant rights on.\r\n     * @param principalNames An array of one or more principals to grant view rights.\r\n     *                       Principals can be users or mail-enabled security groups in the form of \"alias\" or \"alias@<domain name>.com\"\r\n     * @param grantedRights Always set to 1. This represents the View right.\r\n     */\r\n    SiteDesigns.prototype.grantSiteDesignRights = function (id, principalNames, grantedRights) {\r\n        if (grantedRights === void 0) { grantedRights = 1; }\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.clone(SiteDesigns, \"GrantSiteDesignRights\")\r\n                            .execute({\r\n                            \"grantedRights\": grantedRights.toString(),\r\n                            \"id\": id,\r\n                            \"principalNames\": principalNames,\r\n                        })];\r\n                    case 1: return [2 /*return*/, _a.sent()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Revokes access from a site design for one or more principals.\r\n     * @param id The ID of the site design to revoke rights from.\r\n     * @param principalNames An array of one or more principals to revoke view rights from.\r\n     *                       If all principals have rights revoked on the site design, the site design becomes viewable to everyone.\r\n     */\r\n    SiteDesigns.prototype.revokeSiteDesignRights = function (id, principalNames) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.clone(SiteDesigns, \"RevokeSiteDesignRights\")\r\n                            .execute({\r\n                            \"id\": id,\r\n                            \"principalNames\": principalNames,\r\n                        })];\r\n                    case 1: return [2 /*return*/, _a.sent()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Adds a site design task on the specified web url to be invoked asynchronously.\r\n     * @param webUrl The absolute url of the web on where to create the task\r\n     * @param siteDesignId The ID of the site design to create a task for\r\n     */\r\n    SiteDesigns.prototype.addSiteDesignTask = function (webUrl, siteDesignId) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.clone(SiteDesigns, \"AddSiteDesignTask\")\r\n                            .execute({ \"webUrl\": webUrl, \"siteDesignId\": siteDesignId })];\r\n                    case 1: return [2 /*return*/, _a.sent()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Adds a site design task on the current web to be invoked asynchronously.\r\n     * @param siteDesignId The ID of the site design to create a task for\r\n     */\r\n    SiteDesigns.prototype.addSiteDesignTaskToCurrentWeb = function (siteDesignId) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.clone(SiteDesigns, \"AddSiteDesignTaskToCurrentWeb\")\r\n                            .execute({ \"siteDesignId\": siteDesignId })];\r\n                    case 1: return [2 /*return*/, _a.sent()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Retrieves the site design task, if the task has finished running null will be returned\r\n     * @param id The ID of the site design task\r\n     */\r\n    SiteDesigns.prototype.getSiteDesignTask = function (id) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var task;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.clone(SiteDesigns, \"GetSiteDesignTask\")\r\n                            .execute({ \"taskId\": id })];\r\n                    case 1:\r\n                        task = _a.sent();\r\n                        return [2 /*return*/, hOP(task, \"ID\") ? task : null];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Retrieves a list of site design that have run on a specific web\r\n     * @param webUrl The url of the web where the site design was applied\r\n     * @param siteDesignId (Optional) the site design ID, if not provided will return all site design runs\r\n     */\r\n    SiteDesigns.prototype.getSiteDesignRun = function (webUrl, siteDesignId) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.clone(SiteDesigns, \"GetSiteDesignRun\")\r\n                            .execute({ \"webUrl\": webUrl, siteDesignId: siteDesignId })];\r\n                    case 1: return [2 /*return*/, _a.sent()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Retrieves the status of a site design that has been run or is still running\r\n     * @param webUrl The url of the web where the site design was applied\r\n     * @param runId the run ID\r\n     */\r\n    SiteDesigns.prototype.getSiteDesignRunStatus = function (webUrl, runId) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.clone(SiteDesigns, \"GetSiteDesignRunStatus\")\r\n                            .execute({ \"webUrl\": webUrl, runId: runId })];\r\n                    case 1: return [2 /*return*/, _a.sent()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return SiteDesigns;\r\n}(SharePointQueryable));\r\nexport { SiteDesigns };\r\n//# sourceMappingURL=sitedesigns.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryable } from \"./sharepointqueryable\";\r\n/**\r\n * Implements the site script API REST methods\r\n *\r\n */\r\nvar SiteScripts = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SiteScripts, _super);\r\n    /**\r\n     * Creates a new instance of the SiteScripts method class\r\n     *\r\n     * @param baseUrl The parent url provider\r\n     * @param methodName The static method name to call on the utility class\r\n     */\r\n    function SiteScripts(baseUrl, methodName) {\r\n        return _super.call(this, SiteScripts.getBaseUrl(baseUrl), \"_api/Microsoft.Sharepoint.Utilities.WebTemplateExtensions.SiteScriptUtility.\" + methodName) || this;\r\n    }\r\n    SiteScripts.getBaseUrl = function (candidate) {\r\n        if (typeof candidate === \"string\") {\r\n            return candidate;\r\n        }\r\n        var c = candidate;\r\n        var url = c.toUrl();\r\n        var index = url.indexOf(\"_api/\");\r\n        if (index < 0) {\r\n            return url;\r\n        }\r\n        return url.substr(0, index);\r\n    };\r\n    SiteScripts.prototype.execute = function (props) {\r\n        return this.postCore({\r\n            body: JSON.stringify(props),\r\n        });\r\n    };\r\n    /**\r\n     * Gets a list of information on all existing site scripts.\r\n     */\r\n    SiteScripts.prototype.getSiteScripts = function () {\r\n        return this.clone(SiteScripts, \"GetSiteScripts\", true).execute({});\r\n    };\r\n    /**\r\n     * Creates a new site script.\r\n     *\r\n     * @param title The display name of the site design.\r\n     * @param content JSON value that describes the script. For more information, see JSON reference.\r\n     */\r\n    SiteScripts.prototype.createSiteScript = function (title, description, content) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.clone(SiteScripts, \"CreateSiteScript(Title=@title,Description=@desc)?@title='\" + encodeURIComponent(title) + \"'&@desc='\" + encodeURIComponent(description) + \"'\")\r\n                            .execute(content)];\r\n                    case 1: return [2 /*return*/, _a.sent()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Gets information about a specific site script. It also returns the JSON of the script.\r\n     *\r\n     * @param id The ID of the site script to get information about.\r\n     */\r\n    SiteScripts.prototype.getSiteScriptMetadata = function (id) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.clone(SiteScripts, \"GetSiteScriptMetadata\").execute({ id: id })];\r\n                    case 1: return [2 /*return*/, _a.sent()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Deletes a site script.\r\n     *\r\n     * @param id The ID of the site script to delete.\r\n     */\r\n    SiteScripts.prototype.deleteSiteScript = function (id) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.clone(SiteScripts, \"DeleteSiteScript\").execute({ id: id })];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Updates a site script with new values. In the REST call, all parameters are optional except the site script Id.\r\n     *\r\n     * @param siteScriptUpdateInfo Object that contains the information to update a site script.\r\n     *                             Make sure you stringify the content object or pass it in the second 'content' parameter\r\n     * @param content (Optional) A new JSON script defining the script actions. For more information, see Site design JSON schema.\r\n     */\r\n    SiteScripts.prototype.updateSiteScript = function (siteScriptUpdateInfo, content) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (content) {\r\n                            siteScriptUpdateInfo.Content = JSON.stringify(content);\r\n                        }\r\n                        return [4 /*yield*/, this.clone(SiteScripts, \"UpdateSiteScript\").execute({ updateInfo: siteScriptUpdateInfo })];\r\n                    case 1: return [2 /*return*/, _a.sent()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Gets the site script syntax (JSON) for a specific list\r\n     * @param listUrl The absolute url of the list to retrieve site script\r\n     */\r\n    SiteScripts.prototype.getSiteScriptFromList = function (listUrl) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.clone(SiteScripts, \"GetSiteScriptFromList\")\r\n                            .execute({ \"listUrl\": listUrl })];\r\n                    case 1: return [2 /*return*/, _a.sent()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Gets the site script syntax (JSON) for a specific web\r\n     * @param webUrl The absolute url of the web to retrieve site script\r\n     * @param extractInfo configuration object to specify what to extract\r\n     */\r\n    SiteScripts.prototype.getSiteScriptFromWeb = function (webUrl, extractInfo) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.clone(SiteScripts, \"getSiteScriptFromWeb\")\r\n                            .execute({ \"webUrl\": webUrl, info: extractInfo })];\r\n                    case 1: return [2 /*return*/, _a.sent()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return SiteScripts;\r\n}(SharePointQueryable));\r\nexport { SiteScripts };\r\n//# sourceMappingURL=sitescripts.js.map","import * as tslib_1 from \"tslib\";\r\nimport { extend, jsS } from \"@pnp/common\";\r\nimport { SharePointQueryableInstance, SharePointQueryableCollection, defaultPath } from \"./sharepointqueryable\";\r\nimport { SharePointQueryableShareableWeb } from \"./sharepointqueryableshareable\";\r\nimport { Folders, Folder } from \"./folders\";\r\nimport { Lists, List } from \"./lists\";\r\nimport { Fields } from \"./fields\";\r\nimport { Site } from \"./site\";\r\nimport { Navigation } from \"./navigation\";\r\nimport { SiteGroups, SiteGroup } from \"./sitegroups\";\r\nimport { ContentTypes } from \"./contenttypes\";\r\nimport { RoleDefinitions } from \"./roles\";\r\nimport { File } from \"./files\";\r\nimport { extractWebUrl } from \"./utils/extractweburl\";\r\nimport { SiteUsers, SiteUser, CurrentUser } from \"./siteusers\";\r\nimport { UserCustomActions } from \"./usercustomactions\";\r\nimport { odataUrlFrom } from \"./odata\";\r\nimport { SPBatch } from \"./batch\";\r\nimport { Features } from \"./features\";\r\nimport { RelatedItemManagerImpl } from \"./relateditems\";\r\nimport { AppCatalog } from \"./appcatalog\";\r\nimport { RegionalSettings } from \"./regionalsettings\";\r\nimport { ClientSidePage } from \"./clientsidepages\";\r\nimport { SiteDesigns } from \"./sitedesigns\";\r\nimport { SiteScripts } from \"./sitescripts\";\r\n/**\r\n * Describes a collection of webs\r\n *\r\n */\r\nvar Webs = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Webs, _super);\r\n    function Webs() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Webs_1 = Webs;\r\n    /**\r\n     * Adds a new web to the collection\r\n     *\r\n     * @param title The new web's title\r\n     * @param url The new web's relative url\r\n     * @param description The new web's description\r\n     * @param template The new web's template internal name (default = STS)\r\n     * @param language The locale id that specifies the new web's language (default = 1033 [English, US])\r\n     * @param inheritPermissions When true, permissions will be inherited from the new web's parent (default = true)\r\n     */\r\n    Webs.prototype.add = function (title, url, description, template, language, inheritPermissions) {\r\n        if (description === void 0) { description = \"\"; }\r\n        if (template === void 0) { template = \"STS\"; }\r\n        if (language === void 0) { language = 1033; }\r\n        if (inheritPermissions === void 0) { inheritPermissions = true; }\r\n        var props = {\r\n            Description: description,\r\n            Language: language,\r\n            Title: title,\r\n            Url: url,\r\n            UseSamePermissionsAsParentSite: inheritPermissions,\r\n            WebTemplate: template,\r\n        };\r\n        var postBody = jsS({\r\n            \"parameters\": extend({\r\n                \"__metadata\": { \"type\": \"SP.WebCreationInformation\" },\r\n            }, props),\r\n        });\r\n        return this.clone(Webs_1, \"add\").postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                web: new Web(odataUrlFrom(data).replace(/_api\\/web\\/?/i, \"\")),\r\n            };\r\n        });\r\n    };\r\n    var Webs_1;\r\n    Webs = Webs_1 = tslib_1.__decorate([\r\n        defaultPath(\"webs\")\r\n    ], Webs);\r\n    return Webs;\r\n}(SharePointQueryableCollection));\r\nexport { Webs };\r\n/**\r\n * Describes a collection of web infos\r\n *\r\n */\r\nvar WebInfos = /** @class */ (function (_super) {\r\n    tslib_1.__extends(WebInfos, _super);\r\n    function WebInfos() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    WebInfos = tslib_1.__decorate([\r\n        defaultPath(\"webinfos\")\r\n    ], WebInfos);\r\n    return WebInfos;\r\n}(SharePointQueryableCollection));\r\nexport { WebInfos };\r\n/**\r\n * Describes a web\r\n *\r\n */\r\nvar Web = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Web, _super);\r\n    function Web() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Web_1 = Web;\r\n    /**\r\n     * Creates a new web instance from the given url by indexing the location of the /_api/\r\n     * segment. If this is not found the method creates a new web with the entire string as\r\n     * supplied.\r\n     *\r\n     * @param url\r\n     */\r\n    Web.fromUrl = function (url, path) {\r\n        return new Web_1(extractWebUrl(url), path);\r\n    };\r\n    Object.defineProperty(Web.prototype, \"webs\", {\r\n        /**\r\n         * Gets this web's subwebs\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Webs(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets this web's parent web and data\r\n     *\r\n     */\r\n    Web.prototype.getParentWeb = function () {\r\n        var _this = this;\r\n        return this.select(\"ParentWeb/Id\").expand(\"ParentWeb\").get()\r\n            .then(function (_a) {\r\n            var ParentWeb = _a.ParentWeb;\r\n            return ParentWeb ? new Site(_this.parentUrl).openWebById(ParentWeb.Id) : null;\r\n        });\r\n    };\r\n    /**\r\n    * Returns a collection of objects that contain metadata about subsites of the current site in which the current user is a member.\r\n    *\r\n    * @param nWebTemplateFilter Specifies the site definition (default = -1)\r\n    * @param nConfigurationFilter A 16-bit integer that specifies the identifier of a configuration (default = -1)\r\n    */\r\n    Web.prototype.getSubwebsFilteredForCurrentUser = function (nWebTemplateFilter, nConfigurationFilter) {\r\n        if (nWebTemplateFilter === void 0) { nWebTemplateFilter = -1; }\r\n        if (nConfigurationFilter === void 0) { nConfigurationFilter = -1; }\r\n        return this.clone(Webs, \"getSubwebsFilteredForCurrentUser(nWebTemplateFilter=\" + nWebTemplateFilter + \",nConfigurationFilter=\" + nConfigurationFilter + \")\");\r\n    };\r\n    Object.defineProperty(Web.prototype, \"allProperties\", {\r\n        /**\r\n         * Allows access to the web's all properties collection\r\n         */\r\n        get: function () {\r\n            return this.clone(SharePointQueryableInstance, \"allproperties\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"webinfos\", {\r\n        /**\r\n         * Gets a collection of WebInfos for this web's subwebs\r\n         *\r\n         */\r\n        get: function () {\r\n            return new WebInfos(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"contentTypes\", {\r\n        /**\r\n         * Gets the content types available in this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new ContentTypes(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"lists\", {\r\n        /**\r\n         * Gets the lists in this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Lists(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"fields\", {\r\n        /**\r\n         * Gets the fields in this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Fields(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"features\", {\r\n        /**\r\n         * Gets the active features for this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Features(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"availablefields\", {\r\n        /**\r\n         * Gets the available fields in this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Fields(this, \"availablefields\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"navigation\", {\r\n        /**\r\n         * Gets the navigation options in this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Navigation(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"siteUsers\", {\r\n        /**\r\n         * Gets the site users\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteUsers(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"siteGroups\", {\r\n        /**\r\n         * Gets the site groups\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteGroups(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"siteUserInfoList\", {\r\n        /**\r\n         * Gets site user info list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new List(this, \"siteuserinfolist\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"regionalSettings\", {\r\n        /**\r\n         * Gets regional settings\r\n         *\r\n         */\r\n        get: function () {\r\n            return new RegionalSettings(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"currentUser\", {\r\n        /**\r\n         * Gets the current user\r\n         */\r\n        get: function () {\r\n            return new CurrentUser(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"folders\", {\r\n        /**\r\n         * Gets the top-level folders in this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Folders(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"userCustomActions\", {\r\n        /**\r\n         * Gets all user custom actions for this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new UserCustomActions(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"roleDefinitions\", {\r\n        /**\r\n         * Gets the collection of RoleDefinition resources\r\n         *\r\n         */\r\n        get: function () {\r\n            return new RoleDefinitions(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"relatedItems\", {\r\n        /**\r\n         * Provides an interface to manage related items\r\n         *\r\n         */\r\n        get: function () {\r\n            return RelatedItemManagerImpl.FromUrl(this.toUrl());\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Creates a new batch for requests within the context of this web\r\n     *\r\n     */\r\n    Web.prototype.createBatch = function () {\r\n        return new SPBatch(this.parentUrl);\r\n    };\r\n    Object.defineProperty(Web.prototype, \"rootFolder\", {\r\n        /**\r\n         * Gets the root folder of this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Folder(this, \"rootFolder\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"associatedOwnerGroup\", {\r\n        /**\r\n         * Gets the associated owner group for this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteGroup(this, \"associatedownergroup\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"associatedMemberGroup\", {\r\n        /**\r\n         * Gets the associated member group for this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteGroup(this, \"associatedmembergroup\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"associatedVisitorGroup\", {\r\n        /**\r\n         * Gets the associated visitor group for this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteGroup(this, \"associatedvisitorgroup\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"defaultDocumentLibrary\", {\r\n        /**\r\n         * Gets the default document library for this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new List(this, \"DefaultDocumentLibrary\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets a folder by id\r\n     *\r\n     * @param uniqueId The uniqueId of the folder\r\n     */\r\n    Web.prototype.getFolderById = function (uniqueId) {\r\n        return new Folder(this, \"getFolderById('\" + uniqueId + \"')\");\r\n    };\r\n    /**\r\n     * Gets a folder by server relative url\r\n     *\r\n     * @param folderRelativeUrl The server relative path to the folder (including /sites/ if applicable)\r\n     */\r\n    Web.prototype.getFolderByServerRelativeUrl = function (folderRelativeUrl) {\r\n        return new Folder(this, \"getFolderByServerRelativeUrl('\" + folderRelativeUrl + \"')\");\r\n    };\r\n    /**\r\n     * Gets a folder by server relative relative path if your folder name contains # and % characters\r\n     * you need to first encode the file name using encodeURIComponent() and then pass the url\r\n     * let url = \"/sites/test/Shared Documents/\" + encodeURIComponent(\"%123\");\r\n     * This works only in SharePoint online.\r\n     *\r\n     * @param folderRelativeUrl The server relative path to the folder (including /sites/ if applicable)\r\n     */\r\n    Web.prototype.getFolderByServerRelativePath = function (folderRelativeUrl) {\r\n        return new Folder(this, \"getFolderByServerRelativePath(decodedUrl='\" + folderRelativeUrl + \"')\");\r\n    };\r\n    /**\r\n     * Gets a file by id\r\n     *\r\n     * @param uniqueId The uniqueId of the file\r\n     */\r\n    Web.prototype.getFileById = function (uniqueId) {\r\n        return new File(this, \"getFileById('\" + uniqueId + \"')\");\r\n    };\r\n    /**\r\n     * Gets a file by server relative url\r\n     *\r\n     * @param fileRelativeUrl The server relative path to the file (including /sites/ if applicable)\r\n     */\r\n    Web.prototype.getFileByServerRelativeUrl = function (fileRelativeUrl) {\r\n        return new File(this, \"getFileByServerRelativeUrl('\" + fileRelativeUrl + \"')\");\r\n    };\r\n    /**\r\n     * Gets a file by server relative url if your file name contains # and % characters\r\n     * you need to first encode the file name using encodeURIComponent() and then pass the url\r\n     * let url = \"/sites/test/Shared Documents/\" + encodeURIComponent(\"%123.docx\");\r\n     *\r\n     * @param fileRelativeUrl The server relative path to the file (including /sites/ if applicable)\r\n     */\r\n    Web.prototype.getFileByServerRelativePath = function (fileRelativeUrl) {\r\n        return new File(this, \"getFileByServerRelativePath(decodedUrl='\" + fileRelativeUrl + \"')\");\r\n    };\r\n    /**\r\n     * Gets a list by server relative url (list's root folder)\r\n     *\r\n     * @param listRelativeUrl The server relative path to the list's root folder (including /sites/ if applicable)\r\n     */\r\n    Web.prototype.getList = function (listRelativeUrl) {\r\n        return new List(this, \"getList('\" + listRelativeUrl + \"')\");\r\n    };\r\n    /**\r\n     * Updates this web instance with the supplied properties\r\n     *\r\n     * @param properties A plain object hash of values to update for the web\r\n     */\r\n    Web.prototype.update = function (properties) {\r\n        var _this = this;\r\n        var postBody = jsS(extend({\r\n            \"__metadata\": { \"type\": \"SP.Web\" },\r\n        }, properties));\r\n        return this.postCore({\r\n            body: postBody,\r\n            headers: {\r\n                \"X-HTTP-Method\": \"MERGE\",\r\n            },\r\n        }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                web: _this,\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Deletes this web\r\n     *\r\n     */\r\n    Web.prototype.delete = function () {\r\n        return _super.prototype.deleteCore.call(this);\r\n    };\r\n    /**\r\n     * Applies the theme specified by the contents of each of the files specified in the arguments to the site\r\n     *\r\n     * @param colorPaletteUrl The server-relative URL of the color palette file\r\n     * @param fontSchemeUrl The server-relative URL of the font scheme\r\n     * @param backgroundImageUrl The server-relative URL of the background image\r\n     * @param shareGenerated When true, the generated theme files are stored in the root site. When false, they are stored in this web\r\n     */\r\n    Web.prototype.applyTheme = function (colorPaletteUrl, fontSchemeUrl, backgroundImageUrl, shareGenerated) {\r\n        var postBody = jsS({\r\n            backgroundImageUrl: backgroundImageUrl,\r\n            colorPaletteUrl: colorPaletteUrl,\r\n            fontSchemeUrl: fontSchemeUrl,\r\n            shareGenerated: shareGenerated,\r\n        });\r\n        return this.clone(Web_1, \"applytheme\").postCore({ body: postBody });\r\n    };\r\n    /**\r\n     * Applies the specified site definition or site template to the Web site that has no template applied to it\r\n     *\r\n     * @param template Name of the site definition or the name of the site template\r\n     */\r\n    Web.prototype.applyWebTemplate = function (template) {\r\n        var q = this.clone(Web_1, \"applywebtemplate\");\r\n        q.concat(\"(@t)\");\r\n        q.query.set(\"@t\", template);\r\n        return q.postCore();\r\n    };\r\n    /**\r\n     * Checks whether the specified login name belongs to a valid user in the web. If the user doesn't exist, adds the user to the web.\r\n     *\r\n     * @param loginName The login name of the user (ex: i:0#.f|membership|user@domain.onmicrosoft.com)\r\n     */\r\n    Web.prototype.ensureUser = function (loginName) {\r\n        var postBody = jsS({\r\n            logonName: loginName,\r\n        });\r\n        return this.clone(Web_1, \"ensureuser\").postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                user: new SiteUser(odataUrlFrom(data)),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Returns a collection of site templates available for the site\r\n     *\r\n     * @param language The locale id of the site templates to retrieve (default = 1033 [English, US])\r\n     * @param includeCrossLanguage When true, includes language-neutral site templates; otherwise false (default = true)\r\n     */\r\n    Web.prototype.availableWebTemplates = function (language, includeCrossLanugage) {\r\n        if (language === void 0) { language = 1033; }\r\n        if (includeCrossLanugage === void 0) { includeCrossLanugage = true; }\r\n        return new SharePointQueryableCollection(this, \"getavailablewebtemplates(lcid=\" + language + \", doincludecrosslanguage=\" + includeCrossLanugage + \")\");\r\n    };\r\n    /**\r\n     * Returns the list gallery on the site\r\n     *\r\n     * @param type The gallery type - WebTemplateCatalog = 111, WebPartCatalog = 113 ListTemplateCatalog = 114,\r\n     * MasterPageCatalog = 116, SolutionCatalog = 121, ThemeCatalog = 123, DesignCatalog = 124, AppDataCatalog = 125\r\n     */\r\n    Web.prototype.getCatalog = function (type) {\r\n        return this.clone(Web_1, \"getcatalog(\" + type + \")\").select(\"Id\").get().then(function (data) {\r\n            return new List(odataUrlFrom(data));\r\n        });\r\n    };\r\n    /**\r\n     * Returns the collection of changes from the change log that have occurred within the list, based on the specified query\r\n     *\r\n     * @param query The change query\r\n     */\r\n    Web.prototype.getChanges = function (query) {\r\n        var postBody = jsS({ \"query\": extend({ \"__metadata\": { \"type\": \"SP.ChangeQuery\" } }, query) });\r\n        return this.clone(Web_1, \"getchanges\").postCore({ body: postBody });\r\n    };\r\n    Object.defineProperty(Web.prototype, \"customListTemplate\", {\r\n        /**\r\n         * Gets the custom list templates for the site\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableCollection(this, \"getcustomlisttemplates\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Returns the user corresponding to the specified member identifier for the current site\r\n     *\r\n     * @param id The id of the user\r\n     */\r\n    Web.prototype.getUserById = function (id) {\r\n        return new SiteUser(this, \"getUserById(\" + id + \")\");\r\n    };\r\n    /**\r\n     * Returns the name of the image file for the icon that is used to represent the specified file\r\n     *\r\n     * @param filename The file name. If this parameter is empty, the server returns an empty string\r\n     * @param size The size of the icon: 16x16 pixels = 0, 32x32 pixels = 1 (default = 0)\r\n     * @param progId The ProgID of the application that was used to create the file, in the form OLEServerName.ObjectName\r\n     */\r\n    Web.prototype.mapToIcon = function (filename, size, progId) {\r\n        if (size === void 0) { size = 0; }\r\n        if (progId === void 0) { progId = \"\"; }\r\n        return this.clone(Web_1, \"maptoicon(filename='\" + filename + \"', progid='\" + progId + \"', size=\" + size + \")\").get();\r\n    };\r\n    /**\r\n     * Returns the tenant property corresponding to the specified key in the app catalog site\r\n     *\r\n     * @param key Id of storage entity to be set\r\n     */\r\n    Web.prototype.getStorageEntity = function (key) {\r\n        return this.clone(Web_1, \"getStorageEntity('\" + key + \"')\").get();\r\n    };\r\n    /**\r\n     * This will set the storage entity identified by the given key (MUST be called in the context of the app catalog)\r\n     *\r\n     * @param key Id of storage entity to be set\r\n     * @param value Value of storage entity to be set\r\n     * @param description Description of storage entity to be set\r\n     * @param comments Comments of storage entity to be set\r\n     */\r\n    Web.prototype.setStorageEntity = function (key, value, description, comments) {\r\n        if (description === void 0) { description = \"\"; }\r\n        if (comments === void 0) { comments = \"\"; }\r\n        return this.clone(Web_1, \"setStorageEntity\").postCore({\r\n            body: jsS({\r\n                comments: comments,\r\n                description: description,\r\n                key: key,\r\n                value: value,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * This will remove the storage entity identified by the given key\r\n     *\r\n     * @param key Id of storage entity to be removed\r\n     */\r\n    Web.prototype.removeStorageEntity = function (key) {\r\n        return this.clone(Web_1, \"removeStorageEntity('\" + key + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Gets the tenant app catalog for this web\r\n     *\r\n     * @param url Optional url or web containing the app catalog (default: current web)\r\n     */\r\n    Web.prototype.getAppCatalog = function (url) {\r\n        return new AppCatalog(url || this);\r\n    };\r\n    /**\r\n     * Gets the site collection app catalog for this web\r\n     *\r\n     * @param url Optional url or web containing the app catalog (default: current web)\r\n     */\r\n    Web.prototype.getSiteCollectionAppCatalog = function (url) {\r\n        return new AppCatalog(url || this, \"_api/web/sitecollectionappcatalog/AvailableApps\");\r\n    };\r\n    /**\r\n     * Gets the collection of available client side web parts for this web instance\r\n     */\r\n    Web.prototype.getClientSideWebParts = function () {\r\n        return this.clone(SharePointQueryableCollection, \"GetClientSideWebParts\").get();\r\n    };\r\n    /**\r\n     * Creates a new client side page\r\n     *\r\n     * @param pageName Name of the new page\r\n     * @param title Display title of the new page\r\n     * @param libraryTitle Title of the library in which to create the new page. Default: \"Site Pages\"\r\n     */\r\n    Web.prototype.addClientSidePage = function (pageName, title) {\r\n        if (title === void 0) { title = pageName.replace(/\\.[^/.]+$/, \"\"); }\r\n        return ClientSidePage.create(this, pageName, title);\r\n    };\r\n    /**\r\n     * Creates a new client side page using the library path\r\n     *\r\n     * @param pageName Name of the new page\r\n     * @param listRelativePath The server relative path to the list's root folder (including /sites/ if applicable)\r\n     * @param title Display title of the new page\r\n     */\r\n    Web.prototype.addClientSidePageByPath = function (pageName, title) {\r\n        if (title === void 0) { title = pageName.replace(/\\.[^/.]+$/, \"\"); }\r\n        return ClientSidePage.create(this, pageName, title);\r\n    };\r\n    /**\r\n     * Creates the default associated groups (Members, Owners, Visitors) and gives them the default permissions on the site.\r\n     * The target site must have unique permissions and no associated members / owners / visitors groups\r\n     *\r\n     * @param siteOwner The user login name to be added to the site Owners group. Default is the current user\r\n     * @param siteOwner2 The second user login name to be added to the site Owners group. Default is empty\r\n     * @param groupNameSeed The base group name. E.g. 'TestSite' would produce 'TestSite Members' etc.\r\n     */\r\n    Web.prototype.createDefaultAssociatedGroups = function (siteOwner, siteOwner2, groupNameSeed) {\r\n        var q = this.clone(Web_1, \"createDefaultAssociatedGroups(userLogin=@u,userLogin2=@v,groupNameSeed=@s)\");\r\n        q.query.set(\"@u\", \"'\" + encodeURIComponent(siteOwner || \"\") + \"'\");\r\n        q.query.set(\"@v\", \"'\" + encodeURIComponent(siteOwner2 || \"\") + \"'\");\r\n        q.query.set(\"@s\", \"'\" + encodeURIComponent(groupNameSeed || \"\") + \"'\");\r\n        return q.postCore();\r\n    };\r\n    /**\r\n     * Gets hub site data for the current web.\r\n     *\r\n     * @param forceRefresh Default value is false. When false, the data is returned from the server's cache.\r\n     * When true, the cache is refreshed with the latest updates and then returned.\r\n     * Use this if you just made changes and need to see those changes right away.\r\n     */\r\n    Web.prototype.hubSiteData = function (forceRefresh) {\r\n        if (forceRefresh === void 0) { forceRefresh = false; }\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            return tslib_1.__generator(this, function (_a) {\r\n                return [2 /*return*/, this.clone(Web_1, \"hubSiteData(\" + forceRefresh + \")\").get().then(function (r) { return JSON.parse(r); })];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Applies theme updates from the parent hub site collection.\r\n     */\r\n    Web.prototype.syncHubSiteTheme = function () {\r\n        return this.clone(Web_1, \"syncHubSiteTheme\").postCore();\r\n    };\r\n    /**\r\n     * Retrieves a list of site design that have run on the current web\r\n     * @param siteDesignId (Optional) the site design ID, if not provided will return all site design runs\r\n     */\r\n    Web.prototype.getSiteDesignRuns = function (siteDesignId) {\r\n        return new SiteDesigns(this, \"\").getSiteDesignRun(undefined, siteDesignId);\r\n    };\r\n    /**\r\n     * Gets the site script syntax (JSON) for a specific web\r\n     * @param extractInfo configuration object to specify what to extract\r\n     */\r\n    Web.prototype.getSiteScript = function (extractInfo) {\r\n        return new SiteScripts(this, \"\").getSiteScriptFromWeb(undefined, extractInfo);\r\n    };\r\n    /**\r\n     * Adds a site design task on the current web to be invoked asynchronously.\r\n     * @param siteDesignId The ID of the site design to create a task for\r\n     */\r\n    Web.prototype.addSiteDesignTask = function (siteDesignId) {\r\n        return new SiteDesigns(this, \"\").addSiteDesignTaskToCurrentWeb(siteDesignId);\r\n    };\r\n    /**\r\n     * Retrieves the status of a site design that has been run or is still running\r\n     * @param runId the run ID\r\n     */\r\n    Web.prototype.getSiteDesignRunStatus = function (runId) {\r\n        return new SiteDesigns(this, \"\").getSiteDesignRunStatus(undefined, runId);\r\n    };\r\n    var Web_1;\r\n    Web = Web_1 = tslib_1.__decorate([\r\n        defaultPath(\"_api/web\")\r\n    ], Web);\r\n    return Web;\r\n}(SharePointQueryableShareableWeb));\r\nexport { Web };\r\n//# sourceMappingURL=webs.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryableInstance, defaultPath } from \"./sharepointqueryable\";\r\nimport { extend, jsS, hOP, getHashCode, objectDefinedNotNull, isArray } from \"@pnp/common\";\r\nimport { metadata } from \"./utils/metadata\";\r\nimport { CachingOptions } from \"@pnp/odata\";\r\nvar funcs = new Map([\r\n    [\"text\", \"Querytext\"],\r\n    [\"template\", \"QueryTemplate\"],\r\n    [\"sourceId\", \"SourceId\"],\r\n    [\"trimDuplicatesIncludeId\", \"\"],\r\n    [\"startRow\", \"\"],\r\n    [\"rowLimit\", \"\"],\r\n    [\"rankingModelId\", \"\"],\r\n    [\"rowsPerPage\", \"\"],\r\n    [\"selectProperties\", \"\"],\r\n    [\"culture\", \"\"],\r\n    [\"timeZoneId\", \"\"],\r\n    [\"refinementFilters\", \"\"],\r\n    [\"refiners\", \"\"],\r\n    [\"hiddenConstraints\", \"\"],\r\n    [\"sortList\", \"\"],\r\n    [\"timeout\", \"\"],\r\n    [\"hithighlightedProperties\", \"\"],\r\n    [\"clientType\", \"\"],\r\n    [\"personalizationData\", \"\"],\r\n    [\"resultsURL\", \"\"],\r\n    [\"queryTag\", \"\"],\r\n    [\"properties\", \"\"],\r\n    [\"queryTemplatePropertiesUrl\", \"\"],\r\n    [\"reorderingRules\", \"\"],\r\n    [\"hitHighlightedMultivaluePropertyLimit\", \"\"],\r\n    [\"collapseSpecification\", \"\"],\r\n    [\"uiLanguage\", \"\"],\r\n    [\"desiredSnippetLength\", \"\"],\r\n    [\"maxSnippetLength\", \"\"],\r\n    [\"summaryLength\", \"\"],\r\n]);\r\nvar props = new Map([]);\r\nfunction toPropCase(str) {\r\n    return str.replace(/^(.)/, function ($1) { return $1.toUpperCase(); });\r\n}\r\n/**\r\n * Creates a new instance of the SearchQueryBuilder\r\n *\r\n * @param queryText Initial query text\r\n * @param _query Any initial query configuration\r\n */\r\nexport function SearchQueryBuilder(queryText, _query) {\r\n    if (queryText === void 0) { queryText = \"\"; }\r\n    if (_query === void 0) { _query = {}; }\r\n    return new Proxy({\r\n        query: Object.assign({\r\n            Querytext: queryText,\r\n        }, _query),\r\n    }, {\r\n        get: function (self, propertyKey, proxy) {\r\n            var pk = propertyKey.toString();\r\n            if (pk === \"toSearchQuery\") {\r\n                return function () { return self.query; };\r\n            }\r\n            if (funcs.has(pk)) {\r\n                return function () {\r\n                    var value = [];\r\n                    for (var _i = 0; _i < arguments.length; _i++) {\r\n                        value[_i] = arguments[_i];\r\n                    }\r\n                    var mappedPk = funcs.get(pk);\r\n                    self.query[mappedPk.length > 0 ? mappedPk : toPropCase(pk)] = value.length > 1 ? value : value[0];\r\n                    return proxy;\r\n                };\r\n            }\r\n            var propKey = props.has(pk) ? props.get(pk) : toPropCase(pk);\r\n            self.query[propKey] = true;\r\n            return proxy;\r\n        },\r\n    });\r\n}\r\n/**\r\n * Describes the search API\r\n *\r\n */\r\nvar Search = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Search, _super);\r\n    function Search() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * @returns Promise\r\n     */\r\n    Search.prototype.execute = function (queryInit) {\r\n        var _this = this;\r\n        var query = this.parseQuery(queryInit);\r\n        var postBody = jsS({\r\n            request: extend(metadata(\"Microsoft.Office.Server.Search.REST.SearchRequest\"), Object.assign({}, query, {\r\n                HitHighlightedProperties: this.fixArrProp(query.HitHighlightedProperties),\r\n                Properties: this.fixArrProp(query.Properties),\r\n                RefinementFilters: this.fixArrProp(query.RefinementFilters),\r\n                ReorderingRules: this.fixArrProp(query.ReorderingRules),\r\n                SelectProperties: this.fixArrProp(query.SelectProperties),\r\n                SortList: this.fixArrProp(query.SortList),\r\n            })),\r\n        });\r\n        // if we are using caching with this search request, then we need to handle some work upfront to enable that\r\n        if (this._useCaching) {\r\n            // force use of the cache for this request if .usingCaching was called\r\n            this._forceCaching = true;\r\n            // because all the requests use the same url they would collide in the cache we use a special key\r\n            var cacheKey = \"PnPjs.SearchWithCaching(\" + getHashCode(postBody) + \")\";\r\n            if (objectDefinedNotNull(this._cachingOptions)) {\r\n                // if our key ends in the postquery url we overwrite it\r\n                if (/\\/_api\\/search\\/postquery$/i.test(this._cachingOptions.key)) {\r\n                    this._cachingOptions.key = cacheKey;\r\n                }\r\n            }\r\n            else {\r\n                this._cachingOptions = new CachingOptions(cacheKey);\r\n            }\r\n        }\r\n        return this.postCore({ body: postBody }).then(function (data) { return new SearchResults(data, _this.toUrl(), query); });\r\n    };\r\n    /**\r\n     * Fix array property\r\n     *\r\n     * @param prop property to fix for container struct\r\n     */\r\n    Search.prototype.fixArrProp = function (prop) {\r\n        if (typeof prop === \"undefined\") {\r\n            return ({ results: [] });\r\n        }\r\n        prop = isArray(prop) ? prop : [prop];\r\n        return hOP(prop, \"results\") ? prop : { results: prop };\r\n    };\r\n    /**\r\n     * Translates one of the query initializers into a SearchQuery instance\r\n     *\r\n     * @param query\r\n     */\r\n    Search.prototype.parseQuery = function (query) {\r\n        var finalQuery;\r\n        if (typeof query === \"string\") {\r\n            finalQuery = { Querytext: query };\r\n        }\r\n        else if (query.toSearchQuery) {\r\n            finalQuery = query.toSearchQuery();\r\n        }\r\n        else {\r\n            finalQuery = query;\r\n        }\r\n        return finalQuery;\r\n    };\r\n    Search = tslib_1.__decorate([\r\n        defaultPath(\"_api/search/postquery\")\r\n    ], Search);\r\n    return Search;\r\n}(SharePointQueryableInstance));\r\nexport { Search };\r\n/**\r\n * Describes the SearchResults class, which returns the formatted and raw version of the query response\r\n */\r\nvar SearchResults = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of the SearchResult class\r\n     *\r\n     */\r\n    function SearchResults(rawResponse, _url, _query, _raw, _primary) {\r\n        if (_raw === void 0) { _raw = null; }\r\n        if (_primary === void 0) { _primary = null; }\r\n        this._url = _url;\r\n        this._query = _query;\r\n        this._raw = _raw;\r\n        this._primary = _primary;\r\n        this._raw = rawResponse.postquery ? rawResponse.postquery : rawResponse;\r\n    }\r\n    Object.defineProperty(SearchResults.prototype, \"ElapsedTime\", {\r\n        get: function () {\r\n            return this.RawSearchResults.ElapsedTime;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchResults.prototype, \"RowCount\", {\r\n        get: function () {\r\n            return this.RawSearchResults.PrimaryQueryResult.RelevantResults.RowCount;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchResults.prototype, \"TotalRows\", {\r\n        get: function () {\r\n            return this.RawSearchResults.PrimaryQueryResult.RelevantResults.TotalRows;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchResults.prototype, \"TotalRowsIncludingDuplicates\", {\r\n        get: function () {\r\n            return this.RawSearchResults.PrimaryQueryResult.RelevantResults.TotalRowsIncludingDuplicates;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchResults.prototype, \"RawSearchResults\", {\r\n        get: function () {\r\n            return this._raw;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchResults.prototype, \"PrimarySearchResults\", {\r\n        get: function () {\r\n            if (this._primary === null) {\r\n                this._primary = this.formatSearchResults(this._raw.PrimaryQueryResult.RelevantResults.Table.Rows);\r\n            }\r\n            return this._primary;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets a page of results\r\n     *\r\n     * @param pageNumber Index of the page to return. Used to determine StartRow\r\n     * @param pageSize Optional, items per page (default = 10)\r\n     */\r\n    SearchResults.prototype.getPage = function (pageNumber, pageSize) {\r\n        // if we got all the available rows we don't have another page\r\n        if (this.TotalRows < this.RowCount) {\r\n            return Promise.resolve(null);\r\n        }\r\n        // if pageSize is supplied, then we use that regardless of any previous values\r\n        // otherwise get the previous RowLimit or default to 10\r\n        var rows = pageSize !== undefined ? pageSize : hOP(this._query, \"RowLimit\") ? this._query.RowLimit : 10;\r\n        var query = extend(this._query, {\r\n            RowLimit: rows,\r\n            StartRow: rows * (pageNumber - 1),\r\n        });\r\n        // we have reached the end\r\n        if (query.StartRow > this.TotalRows) {\r\n            return Promise.resolve(null);\r\n        }\r\n        var search = new Search(this._url, null);\r\n        return search.execute(query);\r\n    };\r\n    /**\r\n     * Formats a search results array\r\n     *\r\n     * @param rawResults The array to process\r\n     */\r\n    SearchResults.prototype.formatSearchResults = function (rawResults) {\r\n        var results = new Array();\r\n        var tempResults = rawResults.results ? rawResults.results : rawResults;\r\n        for (var _i = 0, tempResults_1 = tempResults; _i < tempResults_1.length; _i++) {\r\n            var tempResult = tempResults_1[_i];\r\n            var cells = tempResult.Cells.results ? tempResult.Cells.results : tempResult.Cells;\r\n            results.push(cells.reduce(function (res, cell) {\r\n                Object.defineProperty(res, cell.Key, {\r\n                    configurable: false,\r\n                    enumerable: true,\r\n                    value: cell.Value,\r\n                    writable: false,\r\n                });\r\n                return res;\r\n            }, {}));\r\n        }\r\n        return results;\r\n    };\r\n    return SearchResults;\r\n}());\r\nexport { SearchResults };\r\n/**\r\n * defines the SortDirection enum\r\n */\r\nexport var SortDirection;\r\n(function (SortDirection) {\r\n    SortDirection[SortDirection[\"Ascending\"] = 0] = \"Ascending\";\r\n    SortDirection[SortDirection[\"Descending\"] = 1] = \"Descending\";\r\n    SortDirection[SortDirection[\"FQLFormula\"] = 2] = \"FQLFormula\";\r\n})(SortDirection || (SortDirection = {}));\r\n/**\r\n * defines the ReorderingRuleMatchType  enum\r\n */\r\nexport var ReorderingRuleMatchType;\r\n(function (ReorderingRuleMatchType) {\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"ResultContainsKeyword\"] = 0] = \"ResultContainsKeyword\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"TitleContainsKeyword\"] = 1] = \"TitleContainsKeyword\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"TitleMatchesKeyword\"] = 2] = \"TitleMatchesKeyword\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"UrlStartsWith\"] = 3] = \"UrlStartsWith\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"UrlExactlyMatches\"] = 4] = \"UrlExactlyMatches\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"ContentTypeIs\"] = 5] = \"ContentTypeIs\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"FileExtensionMatches\"] = 6] = \"FileExtensionMatches\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"ResultHasTag\"] = 7] = \"ResultHasTag\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"ManualCondition\"] = 8] = \"ManualCondition\";\r\n})(ReorderingRuleMatchType || (ReorderingRuleMatchType = {}));\r\n/**\r\n * Specifies the type value for the property\r\n */\r\nexport var QueryPropertyValueType;\r\n(function (QueryPropertyValueType) {\r\n    QueryPropertyValueType[QueryPropertyValueType[\"None\"] = 0] = \"None\";\r\n    QueryPropertyValueType[QueryPropertyValueType[\"StringType\"] = 1] = \"StringType\";\r\n    QueryPropertyValueType[QueryPropertyValueType[\"Int32Type\"] = 2] = \"Int32Type\";\r\n    QueryPropertyValueType[QueryPropertyValueType[\"BooleanType\"] = 3] = \"BooleanType\";\r\n    QueryPropertyValueType[QueryPropertyValueType[\"StringArrayType\"] = 4] = \"StringArrayType\";\r\n    QueryPropertyValueType[QueryPropertyValueType[\"UnSupportedType\"] = 5] = \"UnSupportedType\";\r\n})(QueryPropertyValueType || (QueryPropertyValueType = {}));\r\nvar SearchBuiltInSourceId = /** @class */ (function () {\r\n    function SearchBuiltInSourceId() {\r\n    }\r\n    SearchBuiltInSourceId.Documents = \"e7ec8cee-ded8-43c9-beb5-436b54b31e84\";\r\n    SearchBuiltInSourceId.ItemsMatchingContentType = \"5dc9f503-801e-4ced-8a2c-5d1237132419\";\r\n    SearchBuiltInSourceId.ItemsMatchingTag = \"e1327b9c-2b8c-4b23-99c9-3730cb29c3f7\";\r\n    SearchBuiltInSourceId.ItemsRelatedToCurrentUser = \"48fec42e-4a92-48ce-8363-c2703a40e67d\";\r\n    SearchBuiltInSourceId.ItemsWithSameKeywordAsThisItem = \"5c069288-1d17-454a-8ac6-9c642a065f48\";\r\n    SearchBuiltInSourceId.LocalPeopleResults = \"b09a7990-05ea-4af9-81ef-edfab16c4e31\";\r\n    SearchBuiltInSourceId.LocalReportsAndDataResults = \"203fba36-2763-4060-9931-911ac8c0583b\";\r\n    SearchBuiltInSourceId.LocalSharePointResults = \"8413cd39-2156-4e00-b54d-11efd9abdb89\";\r\n    SearchBuiltInSourceId.LocalVideoResults = \"78b793ce-7956-4669-aa3b-451fc5defebf\";\r\n    SearchBuiltInSourceId.Pages = \"5e34578e-4d08-4edc-8bf3-002acf3cdbcc\";\r\n    SearchBuiltInSourceId.Pictures = \"38403c8c-3975-41a8-826e-717f2d41568a\";\r\n    SearchBuiltInSourceId.Popular = \"97c71db1-58ce-4891-8b64-585bc2326c12\";\r\n    SearchBuiltInSourceId.RecentlyChangedItems = \"ba63bbae-fa9c-42c0-b027-9a878f16557c\";\r\n    SearchBuiltInSourceId.RecommendedItems = \"ec675252-14fa-4fbe-84dd-8d098ed74181\";\r\n    SearchBuiltInSourceId.Wiki = \"9479bf85-e257-4318-b5a8-81a180f5faa1\";\r\n    return SearchBuiltInSourceId;\r\n}());\r\nexport { SearchBuiltInSourceId };\r\n//# sourceMappingURL=search.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryableInstance, defaultPath, } from \"./sharepointqueryable\";\r\nimport { jsS, hOP } from \"@pnp/common\";\r\nimport { metadata } from \"./utils/metadata\";\r\n/**\r\n * Exposes social following methods\r\n */\r\nvar SocialQuery = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SocialQuery, _super);\r\n    function SocialQuery() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    SocialQuery_1 = SocialQuery;\r\n    Object.defineProperty(SocialQuery.prototype, \"my\", {\r\n        get: function () {\r\n            return new MySocialQuery(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets a URI to a site that lists the current user's followed sites.\r\n     */\r\n    SocialQuery.prototype.getFollowedSitesUri = function () {\r\n        return this.clone(SocialQuery_1, \"FollowedSitesUri\").get().then(function (r) {\r\n            return r.FollowedSitesUri || r;\r\n        });\r\n    };\r\n    /**\r\n     * Gets a URI to a site that lists the current user's followed documents.\r\n     */\r\n    SocialQuery.prototype.getFollowedDocumentsUri = function () {\r\n        return this.clone(SocialQuery_1, \"FollowedDocumentsUri\").get().then(function (r) {\r\n            return r.FollowedDocumentsUri || r;\r\n        });\r\n    };\r\n    /**\r\n     * Makes the current user start following a user, document, site, or tag\r\n     *\r\n     * @param actorInfo The actor to start following\r\n     */\r\n    SocialQuery.prototype.follow = function (actorInfo) {\r\n        return this.clone(SocialQuery_1, \"follow\").postCore({ body: this.createSocialActorInfoRequestBody(actorInfo) });\r\n    };\r\n    /**\r\n     * Indicates whether the current user is following a specified user, document, site, or tag\r\n     *\r\n     * @param actorInfo The actor to find the following status for\r\n     */\r\n    SocialQuery.prototype.isFollowed = function (actorInfo) {\r\n        return this.clone(SocialQuery_1, \"isfollowed\").postCore({ body: this.createSocialActorInfoRequestBody(actorInfo) });\r\n    };\r\n    /**\r\n     * Makes the current user stop following a user, document, site, or tag\r\n     *\r\n     * @param actorInfo The actor to stop following\r\n     */\r\n    SocialQuery.prototype.stopFollowing = function (actorInfo) {\r\n        return this.clone(SocialQuery_1, \"stopfollowing\").postCore({ body: this.createSocialActorInfoRequestBody(actorInfo) });\r\n    };\r\n    /**\r\n     * Creates SocialActorInfo request body\r\n     *\r\n     * @param actorInfo The actor to create request body\r\n     */\r\n    SocialQuery.prototype.createSocialActorInfoRequestBody = function (actorInfo) {\r\n        return jsS({\r\n            \"actor\": Object.assign(metadata(\"SP.Social.SocialActorInfo\"), {\r\n                Id: null,\r\n            }, actorInfo),\r\n        });\r\n    };\r\n    var SocialQuery_1;\r\n    SocialQuery = SocialQuery_1 = tslib_1.__decorate([\r\n        defaultPath(\"_api/social.following\")\r\n    ], SocialQuery);\r\n    return SocialQuery;\r\n}(SharePointQueryableInstance));\r\nexport { SocialQuery };\r\nvar MySocialQuery = /** @class */ (function (_super) {\r\n    tslib_1.__extends(MySocialQuery, _super);\r\n    function MySocialQuery() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    MySocialQuery_1 = MySocialQuery;\r\n    /**\r\n     * Gets users, documents, sites, and tags that the current user is following.\r\n     *\r\n     * @param types Bitwise set of SocialActorTypes to retrieve\r\n     */\r\n    MySocialQuery.prototype.followed = function (types) {\r\n        return this.clone(MySocialQuery_1, \"followed(types=\" + types + \")\").get().then(function (r) {\r\n            return hOP(r, \"Followed\") ? r.Followed.results : r;\r\n        });\r\n    };\r\n    /**\r\n     * Gets the count of users, documents, sites, and tags that the current user is following.\r\n     *\r\n     * @param types Bitwise set of SocialActorTypes to retrieve\r\n     */\r\n    MySocialQuery.prototype.followedCount = function (types) {\r\n        return this.clone(MySocialQuery_1, \"followedcount(types=\" + types + \")\").get().then(function (r) {\r\n            return r.FollowedCount || r;\r\n        });\r\n    };\r\n    /**\r\n     * Gets the users who are following the current user.\r\n     */\r\n    MySocialQuery.prototype.followers = function () {\r\n        return this.clone(MySocialQuery_1, \"followers\").get().then(function (r) {\r\n            return hOP(r, \"Followers\") ? r.Followers.results : r;\r\n        });\r\n    };\r\n    /**\r\n     * Gets users who the current user might want to follow.\r\n     */\r\n    MySocialQuery.prototype.suggestions = function () {\r\n        return this.clone(MySocialQuery_1, \"suggestions\").get().then(function (r) {\r\n            return hOP(r, \"Suggestions\") ? r.Suggestions.results : r;\r\n        });\r\n    };\r\n    var MySocialQuery_1;\r\n    MySocialQuery = MySocialQuery_1 = tslib_1.__decorate([\r\n        defaultPath(\"my\")\r\n    ], MySocialQuery);\r\n    return MySocialQuery;\r\n}(SharePointQueryableInstance));\r\nexport { MySocialQuery };\r\n/**\r\n * Social actor type\r\n *\r\n */\r\nexport var SocialActorType;\r\n(function (SocialActorType) {\r\n    SocialActorType[SocialActorType[\"User\"] = 0] = \"User\";\r\n    SocialActorType[SocialActorType[\"Document\"] = 1] = \"Document\";\r\n    SocialActorType[SocialActorType[\"Site\"] = 2] = \"Site\";\r\n    SocialActorType[SocialActorType[\"Tag\"] = 3] = \"Tag\";\r\n})(SocialActorType || (SocialActorType = {}));\r\n/**\r\n * Social actor type\r\n *\r\n */\r\n/* tslint:disable:no-bitwise */\r\nexport var SocialActorTypes;\r\n(function (SocialActorTypes) {\r\n    SocialActorTypes[SocialActorTypes[\"None\"] = 0] = \"None\";\r\n    SocialActorTypes[SocialActorTypes[\"User\"] = 1] = \"User\";\r\n    SocialActorTypes[SocialActorTypes[\"Document\"] = 2] = \"Document\";\r\n    SocialActorTypes[SocialActorTypes[\"Site\"] = 4] = \"Site\";\r\n    SocialActorTypes[SocialActorTypes[\"Tag\"] = 8] = \"Tag\";\r\n    /**\r\n     * The set excludes documents and sites that do not have feeds.\r\n     */\r\n    SocialActorTypes[SocialActorTypes[\"ExcludeContentWithoutFeeds\"] = 268435456] = \"ExcludeContentWithoutFeeds\";\r\n    /**\r\n     * The set includes group sites\r\n     */\r\n    SocialActorTypes[SocialActorTypes[\"IncludeGroupsSites\"] = 536870912] = \"IncludeGroupsSites\";\r\n    /**\r\n     * The set includes only items created within the last 24 hours\r\n     */\r\n    SocialActorTypes[SocialActorTypes[\"WithinLast24Hours\"] = 1073741824] = \"WithinLast24Hours\";\r\n})(SocialActorTypes || (SocialActorTypes = {}));\r\n/* tslint:enable */\r\n/**\r\n * Result from following\r\n *\r\n */\r\nexport var SocialFollowResult;\r\n(function (SocialFollowResult) {\r\n    SocialFollowResult[SocialFollowResult[\"Ok\"] = 0] = \"Ok\";\r\n    SocialFollowResult[SocialFollowResult[\"AlreadyFollowing\"] = 1] = \"AlreadyFollowing\";\r\n    SocialFollowResult[SocialFollowResult[\"LimitReached\"] = 2] = \"LimitReached\";\r\n    SocialFollowResult[SocialFollowResult[\"InternalError\"] = 3] = \"InternalError\";\r\n})(SocialFollowResult || (SocialFollowResult = {}));\r\n/**\r\n * Specifies an exception or status code.\r\n */\r\nexport var SocialStatusCode;\r\n(function (SocialStatusCode) {\r\n    /**\r\n     * The operation completed successfully\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"OK\"] = 0] = \"OK\";\r\n    /**\r\n     * The request is invalid.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"InvalidRequest\"] = 1] = \"InvalidRequest\";\r\n    /**\r\n     *  The current user is not authorized to perform the operation.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"AccessDenied\"] = 2] = \"AccessDenied\";\r\n    /**\r\n     * The target of the operation was not found.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"ItemNotFound\"] = 3] = \"ItemNotFound\";\r\n    /**\r\n     * The operation is invalid for the target's current state.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"InvalidOperation\"] = 4] = \"InvalidOperation\";\r\n    /**\r\n     * The operation completed without modifying the target.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"ItemNotModified\"] = 5] = \"ItemNotModified\";\r\n    /**\r\n     * The operation failed because an internal error occurred.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"InternalError\"] = 6] = \"InternalError\";\r\n    /**\r\n     * The operation failed because the server could not access the distributed cache.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"CacheReadError\"] = 7] = \"CacheReadError\";\r\n    /**\r\n     * The operation succeeded but the server could not update the distributed cache.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"CacheUpdateError\"] = 8] = \"CacheUpdateError\";\r\n    /**\r\n     * No personal site exists for the current user, and no further information is available.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"PersonalSiteNotFound\"] = 9] = \"PersonalSiteNotFound\";\r\n    /**\r\n     * No personal site exists for the current user, and a previous attempt to create one failed.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"FailedToCreatePersonalSite\"] = 10] = \"FailedToCreatePersonalSite\";\r\n    /**\r\n     * No personal site exists for the current user, and a previous attempt to create one was not authorized.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"NotAuthorizedToCreatePersonalSite\"] = 11] = \"NotAuthorizedToCreatePersonalSite\";\r\n    /**\r\n     * No personal site exists for the current user, and no attempt should be made to create one.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"CannotCreatePersonalSite\"] = 12] = \"CannotCreatePersonalSite\";\r\n    /**\r\n     * The operation was rejected because an internal limit had been reached.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"LimitReached\"] = 13] = \"LimitReached\";\r\n    /**\r\n     * The operation failed because an error occurred during the processing of the specified attachment.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"AttachmentError\"] = 14] = \"AttachmentError\";\r\n    /**\r\n     * The operation succeeded with recoverable errors; the returned data is incomplete.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"PartialData\"] = 15] = \"PartialData\";\r\n    /**\r\n     * A required SharePoint feature is not enabled.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"FeatureDisabled\"] = 16] = \"FeatureDisabled\";\r\n    /**\r\n     * The site's storage quota has been exceeded.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"StorageQuotaExceeded\"] = 17] = \"StorageQuotaExceeded\";\r\n    /**\r\n     * The operation failed because the server could not access the database.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"DatabaseError\"] = 18] = \"DatabaseError\";\r\n})(SocialStatusCode || (SocialStatusCode = {}));\r\n//# sourceMappingURL=social.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryableInstance, defaultPath } from \"./sharepointqueryable\";\r\nimport { hOP } from \"@pnp/common\";\r\nvar SearchSuggest = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SearchSuggest, _super);\r\n    function SearchSuggest() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    SearchSuggest.prototype.execute = function (query) {\r\n        this.mapQueryToQueryString(query);\r\n        return this.get().then(function (response) {\r\n            var mapper = hOP(response, \"suggest\") ? function (s) { return response.suggest[s].results; } : function (s) { return response[s]; };\r\n            return {\r\n                PeopleNames: mapper(\"PeopleNames\"),\r\n                PersonalResults: mapper(\"PersonalResults\"),\r\n                Queries: mapper(\"Queries\"),\r\n            };\r\n        });\r\n    };\r\n    SearchSuggest.prototype.mapQueryToQueryString = function (query) {\r\n        var _this = this;\r\n        var setProp = function (q) { return function (checkProp) { return function (sp) {\r\n            if (hOP(q, checkProp)) {\r\n                _this.query.set(sp, q[checkProp].toString());\r\n            }\r\n        }; }; };\r\n        this.query.set(\"querytext\", \"'\" + query.querytext + \"'\");\r\n        var querySetter = setProp(query);\r\n        querySetter(\"count\")(\"inumberofquerysuggestions\");\r\n        querySetter(\"personalCount\")(\"inumberofresultsuggestions\");\r\n        querySetter(\"preQuery\")(\"fprequerysuggestions\");\r\n        querySetter(\"hitHighlighting\")(\"fhithighlighting\");\r\n        querySetter(\"capitalize\")(\"fcapitalizefirstletters\");\r\n        querySetter(\"culture\")(\"culture\");\r\n        querySetter(\"stemming\")(\"enablestemming\");\r\n        querySetter(\"includePeople\")(\"showpeoplenamesuggestions\");\r\n        querySetter(\"queryRules\")(\"enablequeryrules\");\r\n        querySetter(\"prefixMatch\")(\"fprefixmatchallterms\");\r\n    };\r\n    SearchSuggest = tslib_1.__decorate([\r\n        defaultPath(\"_api/search/suggest\")\r\n    ], SearchSuggest);\r\n    return SearchSuggest;\r\n}(SharePointQueryableInstance));\r\nexport { SearchSuggest };\r\n//# sourceMappingURL=searchsuggest.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryable, SharePointQueryableInstance, SharePointQueryableCollection, defaultPath } from \"./sharepointqueryable\";\r\nimport { extend, jsS } from \"@pnp/common\";\r\nimport { metadata } from \"./utils/metadata\";\r\nvar UserProfileQuery = /** @class */ (function (_super) {\r\n    tslib_1.__extends(UserProfileQuery, _super);\r\n    /**\r\n     * Creates a new instance of the UserProfileQuery class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this user profile query\r\n     */\r\n    function UserProfileQuery(baseUrl, path) {\r\n        if (path === void 0) { path = \"_api/sp.userprofiles.peoplemanager\"; }\r\n        var _this = _super.call(this, baseUrl, path) || this;\r\n        _this.clientPeoplePickerQuery = (new ClientPeoplePickerQuery(baseUrl)).configureFrom(_this);\r\n        _this.profileLoader = (new ProfileLoader(baseUrl)).configureFrom(_this);\r\n        return _this;\r\n    }\r\n    Object.defineProperty(UserProfileQuery.prototype, \"editProfileLink\", {\r\n        /**\r\n         * The url of the edit profile page for the current user\r\n         */\r\n        get: function () {\r\n            return this.clone(UserProfileQuery, \"EditProfileLink\").get();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(UserProfileQuery.prototype, \"isMyPeopleListPublic\", {\r\n        /**\r\n         * A boolean value that indicates whether the current user's \"People I'm Following\" list is public\r\n         */\r\n        get: function () {\r\n            return this.clone(UserProfileQuery, \"IsMyPeopleListPublic\").get();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * A boolean value that indicates whether the current user is being followed by the specified user\r\n     *\r\n     * @param loginName The account name of the user\r\n     */\r\n    UserProfileQuery.prototype.amIFollowedBy = function (loginName) {\r\n        var q = this.clone(UserProfileQuery, \"amifollowedby(@v)\");\r\n        q.query.set(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.get();\r\n    };\r\n    /**\r\n     * A boolean value that indicates whether the current user is following the specified user\r\n     *\r\n     * @param loginName The account name of the user\r\n     */\r\n    UserProfileQuery.prototype.amIFollowing = function (loginName) {\r\n        var q = this.clone(UserProfileQuery, \"amifollowing(@v)\");\r\n        q.query.set(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.get();\r\n    };\r\n    /**\r\n     * Gets tags that the current user is following\r\n     *\r\n     * @param maxCount The maximum number of tags to retrieve (default is 20)\r\n     */\r\n    UserProfileQuery.prototype.getFollowedTags = function (maxCount) {\r\n        if (maxCount === void 0) { maxCount = 20; }\r\n        return this.clone(UserProfileQuery, \"getfollowedtags(\" + maxCount + \")\").get();\r\n    };\r\n    /**\r\n     * Gets the people who are following the specified user\r\n     *\r\n     * @param loginName The account name of the user\r\n     */\r\n    UserProfileQuery.prototype.getFollowersFor = function (loginName) {\r\n        var q = this.clone(UserProfileQuery, \"getfollowersfor(@v)\");\r\n        q.query.set(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.get();\r\n    };\r\n    Object.defineProperty(UserProfileQuery.prototype, \"myFollowers\", {\r\n        /**\r\n         * Gets the people who are following the current user\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableCollection(this, \"getmyfollowers\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(UserProfileQuery.prototype, \"myProperties\", {\r\n        /**\r\n         * Gets user properties for the current user\r\n         *\r\n         */\r\n        get: function () {\r\n            return new UserProfileQuery(this, \"getmyproperties\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets the people who the specified user is following\r\n     *\r\n     * @param loginName The account name of the user.\r\n     */\r\n    UserProfileQuery.prototype.getPeopleFollowedBy = function (loginName) {\r\n        var q = this.clone(UserProfileQuery, \"getpeoplefollowedby(@v)\");\r\n        q.query.set(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.get();\r\n    };\r\n    /**\r\n     * Gets user properties for the specified user.\r\n     *\r\n     * @param loginName The account name of the user.\r\n     */\r\n    UserProfileQuery.prototype.getPropertiesFor = function (loginName) {\r\n        var q = this.clone(UserProfileQuery, \"getpropertiesfor(@v)\");\r\n        q.query.set(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.get();\r\n    };\r\n    Object.defineProperty(UserProfileQuery.prototype, \"trendingTags\", {\r\n        /**\r\n         * Gets the 20 most popular hash tags over the past week, sorted so that the most popular tag appears first\r\n         *\r\n         */\r\n        get: function () {\r\n            var q = this.clone(UserProfileQuery, null);\r\n            q.concat(\".gettrendingtags\");\r\n            return q.get();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets the specified user profile property for the specified user\r\n     *\r\n     * @param loginName The account name of the user\r\n     * @param propertyName The case-sensitive name of the property to get\r\n     */\r\n    UserProfileQuery.prototype.getUserProfilePropertyFor = function (loginName, propertyName) {\r\n        var q = this.clone(UserProfileQuery, \"getuserprofilepropertyfor(accountname=@v, propertyname='\" + propertyName + \"')\");\r\n        q.query.set(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.get();\r\n    };\r\n    /**\r\n     * Removes the specified user from the user's list of suggested people to follow\r\n     *\r\n     * @param loginName The account name of the user\r\n     */\r\n    UserProfileQuery.prototype.hideSuggestion = function (loginName) {\r\n        var q = this.clone(UserProfileQuery, \"hidesuggestion(@v)\");\r\n        q.query.set(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.postCore();\r\n    };\r\n    /**\r\n     * A boolean values that indicates whether the first user is following the second user\r\n     *\r\n     * @param follower The account name of the user who might be following the followee\r\n     * @param followee The account name of the user who might be followed by the follower\r\n     */\r\n    UserProfileQuery.prototype.isFollowing = function (follower, followee) {\r\n        var q = this.clone(UserProfileQuery, null);\r\n        q.concat(\".isfollowing(possiblefolloweraccountname=@v, possiblefolloweeaccountname=@y)\");\r\n        q.query.set(\"@v\", \"'\" + encodeURIComponent(follower) + \"'\");\r\n        q.query.set(\"@y\", \"'\" + encodeURIComponent(followee) + \"'\");\r\n        return q.get();\r\n    };\r\n    /**\r\n     * Uploads and sets the user profile picture (Users can upload a picture to their own profile only). Not supported for batching.\r\n     *\r\n     * @param profilePicSource Blob data representing the user's picture in BMP, JPEG, or PNG format of up to 4.76MB\r\n     */\r\n    UserProfileQuery.prototype.setMyProfilePic = function (profilePicSource) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            var buffer = null;\r\n            var reader = new FileReader();\r\n            reader.onload = function (e) { return buffer = e.target.result; };\r\n            reader.readAsArrayBuffer(profilePicSource);\r\n            var request = new UserProfileQuery(_this, \"setmyprofilepicture\");\r\n            request.postCore({\r\n                body: String.fromCharCode.apply(null, new Uint16Array(buffer)),\r\n            }).then(function (_) { return resolve(); }).catch(function (e) { return reject(e); });\r\n        });\r\n    };\r\n    /**\r\n     * Sets single value User Profile property\r\n     *\r\n     * @param accountName The account name of the user\r\n     * @param propertyName Property name\r\n     * @param propertyValue Property value\r\n     */\r\n    UserProfileQuery.prototype.setSingleValueProfileProperty = function (accountName, propertyName, propertyValue) {\r\n        var postBody = jsS({\r\n            accountName: accountName,\r\n            propertyName: propertyName,\r\n            propertyValue: propertyValue,\r\n        });\r\n        return this.clone(UserProfileQuery, \"SetSingleValueProfileProperty\")\r\n            .postCore({ body: postBody });\r\n    };\r\n    /**\r\n     * Sets multi valued User Profile property\r\n     *\r\n     * @param accountName The account name of the user\r\n     * @param propertyName Property name\r\n     * @param propertyValues Property values\r\n     */\r\n    UserProfileQuery.prototype.setMultiValuedProfileProperty = function (accountName, propertyName, propertyValues) {\r\n        var postBody = jsS({\r\n            accountName: accountName,\r\n            propertyName: propertyName,\r\n            propertyValues: propertyValues,\r\n        });\r\n        return this.clone(UserProfileQuery, \"SetMultiValuedProfileProperty\")\r\n            .postCore({ body: postBody });\r\n    };\r\n    /**\r\n     * Provisions one or more users' personal sites. (My Site administrator on SharePoint Online only)\r\n     *\r\n     * @param emails The email addresses of the users to provision sites for\r\n     */\r\n    UserProfileQuery.prototype.createPersonalSiteEnqueueBulk = function () {\r\n        var emails = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            emails[_i] = arguments[_i];\r\n        }\r\n        return this.profileLoader.createPersonalSiteEnqueueBulk(emails);\r\n    };\r\n    Object.defineProperty(UserProfileQuery.prototype, \"ownerUserProfile\", {\r\n        /**\r\n         * Gets the user profile of the site owner\r\n         *\r\n         */\r\n        get: function () {\r\n            return this.profileLoader.ownerUserProfile;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(UserProfileQuery.prototype, \"userProfile\", {\r\n        /**\r\n         * Gets the user profile for the current user\r\n         */\r\n        get: function () {\r\n            return this.profileLoader.userProfile;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Enqueues creating a personal site for this user, which can be used to share documents, web pages, and other files\r\n     *\r\n     * @param interactiveRequest true if interactively (web) initiated request, or false (default) if non-interactively (client) initiated request\r\n     */\r\n    UserProfileQuery.prototype.createPersonalSite = function (interactiveRequest) {\r\n        if (interactiveRequest === void 0) { interactiveRequest = false; }\r\n        return this.profileLoader.createPersonalSite(interactiveRequest);\r\n    };\r\n    /**\r\n     * Sets the privacy settings for this profile\r\n     *\r\n     * @param share true to make all social data public; false to make all social data private\r\n     */\r\n    UserProfileQuery.prototype.shareAllSocialData = function (share) {\r\n        return this.profileLoader.shareAllSocialData(share);\r\n    };\r\n    /**\r\n     * Resolves user or group using specified query parameters\r\n     *\r\n     * @param queryParams The query parameters used to perform resolve\r\n     */\r\n    UserProfileQuery.prototype.clientPeoplePickerResolveUser = function (queryParams) {\r\n        return this.clientPeoplePickerQuery.clientPeoplePickerResolveUser(queryParams);\r\n    };\r\n    /**\r\n     * Searches for users or groups using specified query parameters\r\n     *\r\n     * @param queryParams The query parameters used to perform search\r\n     */\r\n    UserProfileQuery.prototype.clientPeoplePickerSearchUser = function (queryParams) {\r\n        return this.clientPeoplePickerQuery.clientPeoplePickerSearchUser(queryParams);\r\n    };\r\n    return UserProfileQuery;\r\n}(SharePointQueryableInstance));\r\nexport { UserProfileQuery };\r\nvar ProfileLoader = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ProfileLoader, _super);\r\n    function ProfileLoader() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    ProfileLoader_1 = ProfileLoader;\r\n    /**\r\n     * Provisions one or more users' personal sites. (My Site administrator on SharePoint Online only) Doesn't support batching\r\n     *\r\n     * @param emails The email addresses of the users to provision sites for\r\n     */\r\n    ProfileLoader.prototype.createPersonalSiteEnqueueBulk = function (emails) {\r\n        return this.clone(ProfileLoader_1, \"createpersonalsiteenqueuebulk\", false).postCore({\r\n            body: jsS({ \"emailIDs\": emails }),\r\n        });\r\n    };\r\n    Object.defineProperty(ProfileLoader.prototype, \"ownerUserProfile\", {\r\n        /**\r\n         * Gets the user profile of the site owner.\r\n         *\r\n         */\r\n        get: function () {\r\n            var q = this.getParent(ProfileLoader_1, this.parentUrl, \"_api/sp.userprofiles.profileloader.getowneruserprofile\");\r\n            if (this.hasBatch) {\r\n                q = q.inBatch(this.batch);\r\n            }\r\n            return q.postCore();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ProfileLoader.prototype, \"userProfile\", {\r\n        /**\r\n         * Gets the user profile of the current user.\r\n         *\r\n         */\r\n        get: function () {\r\n            return this.clone(ProfileLoader_1, \"getuserprofile\").postCore();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Enqueues creating a personal site for this user, which can be used to share documents, web pages, and other files.\r\n     *\r\n     * @param interactiveRequest true if interactively (web) initiated request, or false (default) if non-interactively (client) initiated request\r\n     */\r\n    ProfileLoader.prototype.createPersonalSite = function (interactiveRequest) {\r\n        if (interactiveRequest === void 0) { interactiveRequest = false; }\r\n        return this.clone(ProfileLoader_1, \"getuserprofile/createpersonalsiteenque(\" + interactiveRequest + \")\").postCore();\r\n    };\r\n    /**\r\n     * Sets the privacy settings for this profile\r\n     *\r\n     * @param share true to make all social data public; false to make all social data private.\r\n     */\r\n    ProfileLoader.prototype.shareAllSocialData = function (share) {\r\n        return this.clone(ProfileLoader_1, \"getuserprofile/shareallsocialdata(\" + share + \")\").postCore();\r\n    };\r\n    var ProfileLoader_1;\r\n    ProfileLoader = ProfileLoader_1 = tslib_1.__decorate([\r\n        defaultPath(\"_api/sp.userprofiles.profileloader.getprofileloader\")\r\n    ], ProfileLoader);\r\n    return ProfileLoader;\r\n}(SharePointQueryable));\r\nvar ClientPeoplePickerQuery = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ClientPeoplePickerQuery, _super);\r\n    function ClientPeoplePickerQuery() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    ClientPeoplePickerQuery_1 = ClientPeoplePickerQuery;\r\n    /**\r\n     * Resolves user or group using specified query parameters\r\n     *\r\n     * @param queryParams The query parameters used to perform resolve\r\n     */\r\n    ClientPeoplePickerQuery.prototype.clientPeoplePickerResolveUser = function (queryParams) {\r\n        var q = this.clone(ClientPeoplePickerQuery_1, null);\r\n        q.concat(\".clientpeoplepickerresolveuser\");\r\n        return q.postCore({\r\n            body: this.createClientPeoplePickerQueryParametersRequestBody(queryParams),\r\n        })\r\n            .then(function (res) {\r\n            if (typeof res === \"object\") {\r\n                return res.ClientPeoplePickerResolveUser;\r\n            }\r\n            return res;\r\n        })\r\n            .then(JSON.parse);\r\n    };\r\n    /**\r\n     * Searches for users or groups using specified query parameters\r\n     *\r\n     * @param queryParams The query parameters used to perform search\r\n     */\r\n    ClientPeoplePickerQuery.prototype.clientPeoplePickerSearchUser = function (queryParams) {\r\n        var q = this.clone(ClientPeoplePickerQuery_1, null);\r\n        q.concat(\".clientpeoplepickersearchuser\");\r\n        return q.postCore({\r\n            body: this.createClientPeoplePickerQueryParametersRequestBody(queryParams),\r\n        })\r\n            .then(function (res) {\r\n            if (typeof res === \"object\") {\r\n                return res.ClientPeoplePickerSearchUser;\r\n            }\r\n            return res;\r\n        })\r\n            .then(JSON.parse);\r\n    };\r\n    /**\r\n     * Creates ClientPeoplePickerQueryParameters request body\r\n     *\r\n     * @param queryParams The query parameters to create request body\r\n     */\r\n    ClientPeoplePickerQuery.prototype.createClientPeoplePickerQueryParametersRequestBody = function (queryParams) {\r\n        return jsS({\r\n            \"queryParams\": extend(metadata(\"SP.UI.ApplicationPages.ClientPeoplePickerQueryParameters\"), queryParams),\r\n        });\r\n    };\r\n    var ClientPeoplePickerQuery_1;\r\n    ClientPeoplePickerQuery = ClientPeoplePickerQuery_1 = tslib_1.__decorate([\r\n        defaultPath(\"_api/sp.ui.applicationpages.clientpeoplepickerwebserviceinterface\")\r\n    ], ClientPeoplePickerQuery);\r\n    return ClientPeoplePickerQuery;\r\n}(SharePointQueryable));\r\n//# sourceMappingURL=userprofiles.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryable } from \"./sharepointqueryable\";\r\nimport { extend, jsS, hOP } from \"@pnp/common\";\r\nimport { File } from \"./files\";\r\nimport { odataUrlFrom } from \"./odata\";\r\nimport { metadata } from \"./utils/metadata\";\r\n/**\r\n * Allows for calling of the static SP.Utilities.Utility methods by supplying the method name\r\n */\r\nvar UtilityMethod = /** @class */ (function (_super) {\r\n    tslib_1.__extends(UtilityMethod, _super);\r\n    /**\r\n     * Creates a new instance of the Utility method class\r\n     *\r\n     * @param baseUrl The parent url provider\r\n     * @param methodName The static method name to call on the utility class\r\n     */\r\n    function UtilityMethod(baseUrl, methodName) {\r\n        return _super.call(this, UtilityMethod.getBaseUrl(baseUrl), \"_api/SP.Utilities.Utility.\" + methodName) || this;\r\n    }\r\n    UtilityMethod.getBaseUrl = function (candidate) {\r\n        if (typeof candidate === \"string\") {\r\n            return candidate;\r\n        }\r\n        var c = candidate;\r\n        var url = c.toUrl();\r\n        var index = url.indexOf(\"_api/\");\r\n        if (index < 0) {\r\n            return url;\r\n        }\r\n        return url.substr(0, index);\r\n    };\r\n    UtilityMethod.prototype.excute = function (props) {\r\n        return this.postCore({\r\n            body: jsS(props),\r\n        });\r\n    };\r\n    /**\r\n     * Sends an email based on the supplied properties\r\n     *\r\n     * @param props The properties of the email to send\r\n     */\r\n    UtilityMethod.prototype.sendEmail = function (props) {\r\n        var params = {\r\n            properties: extend(metadata(\"SP.Utilities.EmailProperties\"), {\r\n                Body: props.Body,\r\n                From: props.From,\r\n                Subject: props.Subject,\r\n            }),\r\n        };\r\n        if (props.To && props.To.length > 0) {\r\n            params.properties = extend(params.properties, {\r\n                To: { results: props.To },\r\n            });\r\n        }\r\n        if (props.CC && props.CC.length > 0) {\r\n            params.properties = extend(params.properties, {\r\n                CC: { results: props.CC },\r\n            });\r\n        }\r\n        if (props.BCC && props.BCC.length > 0) {\r\n            params.properties = extend(params.properties, {\r\n                BCC: { results: props.BCC },\r\n            });\r\n        }\r\n        if (props.AdditionalHeaders) {\r\n            params.properties = extend(params.properties, {\r\n                AdditionalHeaders: props.AdditionalHeaders,\r\n            });\r\n        }\r\n        return this.clone(UtilityMethod, \"SendEmail\", true).excute(params);\r\n    };\r\n    UtilityMethod.prototype.getCurrentUserEmailAddresses = function () {\r\n        return this.clone(UtilityMethod, \"GetCurrentUserEmailAddresses\", true).excute({}).then(function (r) {\r\n            return hOP(r, \"GetCurrentUserEmailAddresses\") ? r.GetCurrentUserEmailAddresses : r;\r\n        });\r\n    };\r\n    UtilityMethod.prototype.resolvePrincipal = function (input, scopes, sources, inputIsEmailOnly, addToUserInfoList, matchUserInfoList) {\r\n        if (matchUserInfoList === void 0) { matchUserInfoList = false; }\r\n        var params = {\r\n            addToUserInfoList: addToUserInfoList,\r\n            input: input,\r\n            inputIsEmailOnly: inputIsEmailOnly,\r\n            matchUserInfoList: matchUserInfoList,\r\n            scopes: scopes,\r\n            sources: sources,\r\n        };\r\n        return this.clone(UtilityMethod, \"ResolvePrincipalInCurrentContext\", true).excute(params).then(function (r) {\r\n            return hOP(r, \"ResolvePrincipalInCurrentContext\") ? r.ResolvePrincipalInCurrentContext : r;\r\n        });\r\n    };\r\n    UtilityMethod.prototype.searchPrincipals = function (input, scopes, sources, groupName, maxCount) {\r\n        var params = {\r\n            groupName: groupName,\r\n            input: input,\r\n            maxCount: maxCount,\r\n            scopes: scopes,\r\n            sources: sources,\r\n        };\r\n        return this.clone(UtilityMethod, \"SearchPrincipalsUsingContextWeb\", true).excute(params).then(function (r) {\r\n            return hOP(r, \"SearchPrincipalsUsingContextWeb\") ? r.SearchPrincipalsUsingContextWeb : r;\r\n        });\r\n    };\r\n    UtilityMethod.prototype.createEmailBodyForInvitation = function (pageAddress) {\r\n        var params = {\r\n            pageAddress: pageAddress,\r\n        };\r\n        return this.clone(UtilityMethod, \"CreateEmailBodyForInvitation\", true).excute(params).then(function (r) {\r\n            return hOP(r, \"CreateEmailBodyForInvitation\") ? r.CreateEmailBodyForInvitation : r;\r\n        });\r\n    };\r\n    UtilityMethod.prototype.expandGroupsToPrincipals = function (inputs, maxCount) {\r\n        if (maxCount === void 0) { maxCount = 30; }\r\n        var params = {\r\n            inputs: inputs,\r\n            maxCount: maxCount,\r\n        };\r\n        return this.clone(UtilityMethod, \"ExpandGroupsToPrincipals\", true).excute(params).then(function (r) {\r\n            return hOP(r, \"ExpandGroupsToPrincipals\") ? r.ExpandGroupsToPrincipals : r;\r\n        });\r\n    };\r\n    UtilityMethod.prototype.createWikiPage = function (info) {\r\n        return this.clone(UtilityMethod, \"CreateWikiPageInContextWeb\", true).excute({\r\n            parameters: info,\r\n        }).then(function (r) {\r\n            return {\r\n                data: hOP(r, \"CreateWikiPageInContextWeb\") ? r.CreateWikiPageInContextWeb : r,\r\n                file: new File(odataUrlFrom(r)),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Checks if file or folder name contains invalid characters\r\n     *\r\n     * @param input File or folder name to check\r\n     * @param onPremise Set to true for SharePoint On-Premise\r\n     * @returns True if contains invalid chars, false otherwise\r\n     */\r\n    UtilityMethod.prototype.containsInvalidFileFolderChars = function (input, onPremise) {\r\n        if (onPremise === void 0) { onPremise = false; }\r\n        if (onPremise) {\r\n            return UtilityMethod.InvalidFileFolderNameCharsOnPremiseRegex.test(input);\r\n        }\r\n        else {\r\n            return UtilityMethod.InvalidFileFolderNameCharsOnlineRegex.test(input);\r\n        }\r\n    };\r\n    /**\r\n     * Removes invalid characters from file or folder name\r\n     *\r\n     * @param input File or folder name\r\n     * @param replacer Value that will replace invalid characters\r\n     * @param onPremise Set to true for SharePoint On-Premise\r\n     * @returns File or folder name with replaced invalid characters\r\n     */\r\n    UtilityMethod.prototype.stripInvalidFileFolderChars = function (input, replacer, onPremise) {\r\n        if (replacer === void 0) { replacer = \"\"; }\r\n        if (onPremise === void 0) { onPremise = false; }\r\n        if (onPremise) {\r\n            return input.replace(UtilityMethod.InvalidFileFolderNameCharsOnPremiseRegex, replacer);\r\n        }\r\n        else {\r\n            return input.replace(UtilityMethod.InvalidFileFolderNameCharsOnlineRegex, replacer);\r\n        }\r\n    };\r\n    UtilityMethod.InvalidFileFolderNameCharsOnlineRegex = /[\"*:<>?/\\\\|\\x00-\\x1f\\x7f-\\x9f]/g;\r\n    UtilityMethod.InvalidFileFolderNameCharsOnPremiseRegex = /[\"#%*:<>?/\\\\|\\x00-\\x1f\\x7f-\\x9f]/g;\r\n    return UtilityMethod;\r\n}(SharePointQueryable));\r\nexport { UtilityMethod };\r\n//# sourceMappingURL=utilities.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryableInstance, SharePointQueryableCollection, defaultPath } from \"./sharepointqueryable\";\r\n/**\r\n * Describes a collection of Hub Sites\r\n *\r\n */\r\nvar HubSites = /** @class */ (function (_super) {\r\n    tslib_1.__extends(HubSites, _super);\r\n    function HubSites() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets a Hub Site from the collection by id\r\n     *\r\n     * @param id The Id of the Hub Site\r\n     */\r\n    HubSites.prototype.getById = function (id) {\r\n        return new HubSite(this, \"GetById?hubSiteId='\" + id + \"'\");\r\n    };\r\n    HubSites = tslib_1.__decorate([\r\n        defaultPath(\"_api/hubsites\")\r\n    ], HubSites);\r\n    return HubSites;\r\n}(SharePointQueryableCollection));\r\nexport { HubSites };\r\nvar HubSite = /** @class */ (function (_super) {\r\n    tslib_1.__extends(HubSite, _super);\r\n    function HubSite() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    return HubSite;\r\n}(SharePointQueryableInstance));\r\nexport { HubSite };\r\n//# sourceMappingURL=hubsites.js.map","import { Search } from \"./search\";\r\nimport { SearchSuggest } from \"./searchsuggest\";\r\nimport { Site } from \"./site\";\r\nimport { Web } from \"./webs\";\r\nimport { UserProfileQuery } from \"./userprofiles\";\r\nimport { NavigationService } from \"./navigation\";\r\nimport { SocialQuery } from \"./social\";\r\nimport { SiteScripts } from \"./sitescripts\";\r\nimport { SiteDesigns } from \"./sitedesigns\";\r\nimport { UtilityMethod } from \"./utilities\";\r\nimport { setup as _setup, } from \"./config/splibconfig\";\r\nimport { HubSites } from \"./hubsites\";\r\n/**\r\n * Root of the SharePoint REST module\r\n */\r\nvar SPRest = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of the SPRest class\r\n     *\r\n     * @param options Additional options\r\n     * @param baseUrl A string that should form the base part of the url\r\n     */\r\n    function SPRest(_options, _baseUrl) {\r\n        if (_options === void 0) { _options = {}; }\r\n        if (_baseUrl === void 0) { _baseUrl = \"\"; }\r\n        this._options = _options;\r\n        this._baseUrl = _baseUrl;\r\n    }\r\n    /**\r\n     * Configures instance with additional options and baseUrl.\r\n     * Provided configuration used by other objects in a chain\r\n     *\r\n     * @param options Additional options\r\n     * @param baseUrl A string that should form the base part of the url\r\n     */\r\n    SPRest.prototype.configure = function (options, baseUrl) {\r\n        if (baseUrl === void 0) { baseUrl = \"\"; }\r\n        return new SPRest(options, baseUrl);\r\n    };\r\n    /**\r\n     * Global SharePoint configuration options\r\n     *\r\n     * @param config The SharePoint configuration to apply\r\n     */\r\n    SPRest.prototype.setup = function (config) {\r\n        _setup(config);\r\n    };\r\n    /**\r\n     * Executes a search against this web context\r\n     *\r\n     * @param query The SearchQuery definition\r\n     */\r\n    SPRest.prototype.searchSuggest = function (query) {\r\n        var finalQuery;\r\n        if (typeof query === \"string\") {\r\n            finalQuery = { querytext: query };\r\n        }\r\n        else {\r\n            finalQuery = query;\r\n        }\r\n        return this.create(SearchSuggest).execute(finalQuery);\r\n    };\r\n    /**\r\n     * Executes a search against this web context\r\n     *\r\n     * @param query The SearchQuery definition\r\n     */\r\n    SPRest.prototype.search = function (query) {\r\n        return this.create(Search).execute(query);\r\n    };\r\n    /**\r\n     * Executes the provided search query, caching the results\r\n     *\r\n     * @param query The SearchQuery definition\r\n     * @param options The set of caching options used to store the results\r\n     */\r\n    SPRest.prototype.searchWithCaching = function (query, options) {\r\n        return this.create(Search).usingCaching(options).execute(query);\r\n    };\r\n    Object.defineProperty(SPRest.prototype, \"site\", {\r\n        /**\r\n         * Begins a site collection scoped REST request\r\n         *\r\n         */\r\n        get: function () {\r\n            return this.create(Site);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SPRest.prototype, \"web\", {\r\n        /**\r\n         * Begins a web scoped REST request\r\n         *\r\n         */\r\n        get: function () {\r\n            return this.create(Web);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SPRest.prototype, \"profiles\", {\r\n        /**\r\n         * Access to user profile methods\r\n         *\r\n         */\r\n        get: function () {\r\n            return this.create(UserProfileQuery);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SPRest.prototype, \"social\", {\r\n        /**\r\n         * Access to social methods\r\n         */\r\n        get: function () {\r\n            return this.create(SocialQuery);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SPRest.prototype, \"navigation\", {\r\n        /**\r\n         * Access to the site collection level navigation service\r\n         */\r\n        get: function () {\r\n            return this.create(NavigationService);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Creates a new batch object for use with the SharePointQueryable.addToBatch method\r\n     *\r\n     */\r\n    SPRest.prototype.createBatch = function () {\r\n        return this.web.createBatch();\r\n    };\r\n    Object.defineProperty(SPRest.prototype, \"utility\", {\r\n        /**\r\n         * Static utilities methods from SP.Utilities.Utility\r\n         */\r\n        get: function () {\r\n            return this.create(UtilityMethod, \"\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SPRest.prototype, \"siteScripts\", {\r\n        /**\r\n         * Access to sitescripts methods\r\n         */\r\n        get: function () {\r\n            return this.create(SiteScripts, \"\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SPRest.prototype, \"siteDesigns\", {\r\n        /**\r\n         * Access to sitedesigns methods\r\n         */\r\n        get: function () {\r\n            return this.create(SiteDesigns, \"\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SPRest.prototype, \"hubSites\", {\r\n        /**\r\n         * Access to Hub Site methods\r\n         */\r\n        get: function () {\r\n            return this.create(HubSites);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets the Web instance representing the tenant app catalog web\r\n     */\r\n    SPRest.prototype.getTenantAppCatalogWeb = function () {\r\n        var _this = this;\r\n        return this.create(Web, \"_api/SP_TenantSettings_Current\").get().then(function (r) {\r\n            return (new Web(r.CorporateCatalogUrl)).configure(_this._options);\r\n        });\r\n    };\r\n    /**\r\n     * Handles creating and configuring the objects returned from this class\r\n     *\r\n     * @param fm The factory method used to create the instance\r\n     * @param path Optional additional path information to pass to the factory method\r\n     */\r\n    SPRest.prototype.create = function (fm, path) {\r\n        return new fm(this._baseUrl, path).configure(this._options);\r\n    };\r\n    return SPRest;\r\n}());\r\nexport { SPRest };\r\nexport var sp = new SPRest();\r\n//# sourceMappingURL=rest.js.map","export function objectPath() {\r\n    return \"<ObjectPath Id=\\\"$$ID$$\\\" ObjectPathId=\\\"$$PATH_ID$$\\\" />\";\r\n}\r\nexport function identityQuery() {\r\n    return \"<ObjectIdentityQuery Id=\\\"$$ID$$\\\" ObjectPathId=\\\"$$PATH_ID$$\\\" />\";\r\n}\r\nexport function opQuery(selectProperties, childSelectProperties) {\r\n    // this is fairly opaque behavior, but is the simplest way to convey the required information.\r\n    // if selectProperties.length === 0 or null then select all\r\n    // else select indicated properties\r\n    if (selectProperties === void 0) { selectProperties = null; }\r\n    if (childSelectProperties === void 0) { childSelectProperties = null; }\r\n    // if childSelectProperties === null do not include that block\r\n    // if childSelectProperties.length === 0 then select all\r\n    // else select indicated properties\r\n    var builder = [];\r\n    builder.push(\"<Query Id=\\\"$$ID$$\\\" ObjectPathId=\\\"$$PATH_ID$$\\\">\");\r\n    if (selectProperties === null || selectProperties.length < 1) {\r\n        builder.push(\"<Query SelectAllProperties=\\\"true\\\" >\");\r\n        builder.push(\"<Properties />\");\r\n        builder.push(\"</Query >\");\r\n    }\r\n    else {\r\n        builder.push(\"<Query SelectAllProperties=\\\"false\\\" >\");\r\n        builder.push(\"<Properties>\");\r\n        [].push.apply(builder, selectProperties.map(function (p) { return \"<Property Name=\\\"\" + p + \"\\\" SelectAll=\\\"true\\\" />\"; }));\r\n        builder.push(\"</Properties>\");\r\n        builder.push(\"</Query >\");\r\n    }\r\n    if (childSelectProperties !== null) {\r\n        if (childSelectProperties.length < 1) {\r\n            builder.push(\"<ChildItemQuery SelectAllProperties=\\\"true\\\" >\");\r\n            builder.push(\"<Properties />\");\r\n            builder.push(\"</ChildItemQuery >\");\r\n        }\r\n        else {\r\n            builder.push(\"<ChildItemQuery SelectAllProperties=\\\"false\\\" >\");\r\n            builder.push(\"<Properties>\");\r\n            [].push.apply(builder, childSelectProperties.map(function (p) { return \"<Property Name=\\\"\" + p + \"\\\" SelectAll=\\\"true\\\" />\"; }));\r\n            builder.push(\"</Properties>\");\r\n            builder.push(\"</ChildItemQuery >\");\r\n        }\r\n    }\r\n    builder.push(\"</Query >\");\r\n    return builder.join(\"\");\r\n}\r\nexport function setProperty(name, type, value) {\r\n    var builder = [];\r\n    builder.push(\"<SetProperty Id=\\\"$$ID$$\\\" ObjectPathId=\\\"$$PATH_ID$$\\\" Name=\\\"\" + name + \"\\\">\");\r\n    builder.push(\"<Parameter Type=\\\"\" + type + \"\\\">\" + value + \"</Parameter>\");\r\n    builder.push(\"</SetProperty>\");\r\n    return builder.join(\"\");\r\n}\r\nexport function methodAction(name, params) {\r\n    var builder = [];\r\n    builder.push(\"<Method Id=\\\"$$ID$$\\\" ObjectPathId=\\\"$$PATH_ID$$\\\" Name=\\\"\" + name + \"\\\">\");\r\n    if (params !== null) {\r\n        var arrParams = params.toArray();\r\n        if (arrParams.length < 1) {\r\n            builder.push(\"<Parameters />\");\r\n        }\r\n        else {\r\n            builder.push(\"<Parameters>\");\r\n            [].push.apply(builder, arrParams.map(function (p) { return \"<Parameter Type=\\\"\" + p.type + \"\\\">\" + p.value + \"</Parameter>\"; }));\r\n            builder.push(\"</Parameters>\");\r\n        }\r\n    }\r\n    builder.push(\"</Method>\");\r\n    return builder.join(\"\");\r\n}\r\nexport function objectProperties(o) {\r\n    return Object.getOwnPropertyNames(o).map(function (name) {\r\n        var value = o[name];\r\n        if (typeof value === \"boolean\") {\r\n            return setProperty(name, \"Boolean\", \"\" + value);\r\n        }\r\n        else if (typeof value === \"number\") {\r\n            return setProperty(name, \"Number\", \"\" + value);\r\n        }\r\n        else if (typeof value === \"string\") {\r\n            return setProperty(name, \"String\", \"\" + value);\r\n        }\r\n        return \"\";\r\n    }, []);\r\n}\r\n//# sourceMappingURL=opactionbuilders.js.map","import { ObjectPath } from \"./objectpath\";\r\nexport function property(name) {\r\n    var actions = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        actions[_i - 1] = arguments[_i];\r\n    }\r\n    return new ObjectPath(\"<Property Id=\\\"$$ID$$\\\" ParentId=\\\"$$PARENT_ID$$\\\" Name=\\\"\" + name + \"\\\" />\", actions);\r\n}\r\nexport function staticMethod(name, typeId) {\r\n    var actions = [];\r\n    for (var _i = 2; _i < arguments.length; _i++) {\r\n        actions[_i - 2] = arguments[_i];\r\n    }\r\n    return new ObjectPath(\"<StaticMethod Id=\\\"$$ID$$\\\" Name=\\\"\" + name + \"\\\" TypeId=\\\"\" + typeId + \"\\\" />\", actions);\r\n}\r\nexport function staticProperty(name, typeId) {\r\n    var actions = [];\r\n    for (var _i = 2; _i < arguments.length; _i++) {\r\n        actions[_i - 2] = arguments[_i];\r\n    }\r\n    return new ObjectPath(\"<StaticProperty Id=\\\"$$ID$$\\\" Name=\\\"\" + name + \"\\\" TypeId=\\\"\" + typeId + \"\\\" />\", actions);\r\n}\r\nexport function objConstructor(typeId) {\r\n    var actions = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        actions[_i - 1] = arguments[_i];\r\n    }\r\n    return new ObjectPath(\"<Constructor Id=\\\"$$ID$$\\\" TypeId=\\\"\" + typeId + \"\\\" />\", actions);\r\n}\r\n/**\r\n * Used to build parameters when calling methods\r\n */\r\nvar MethodParams = /** @class */ (function () {\r\n    function MethodParams(_p) {\r\n        if (_p === void 0) { _p = []; }\r\n        this._p = _p;\r\n    }\r\n    MethodParams.build = function (initValues) {\r\n        if (initValues === void 0) { initValues = []; }\r\n        var params = new MethodParams();\r\n        [].push.apply(params._p, initValues);\r\n        return params;\r\n    };\r\n    MethodParams.prototype.string = function (value) {\r\n        return this.a(\"String\", value);\r\n    };\r\n    MethodParams.prototype.number = function (value) {\r\n        return this.a(\"Number\", value.toString());\r\n    };\r\n    MethodParams.prototype.boolean = function (value) {\r\n        return this.a(\"Boolean\", value.toString());\r\n    };\r\n    MethodParams.prototype.strArray = function (values) {\r\n        return this.a(\"Array\", values.map(function (v) { return \"<Object Type=\\\"String\\\">\" + v + \"</Object>\"; }).join(\"\"));\r\n    };\r\n    MethodParams.prototype.objectPath = function (inputIndex) {\r\n        return this.a(\"ObjectPath\", inputIndex.toString());\r\n    };\r\n    MethodParams.prototype.toArray = function () {\r\n        return this._p;\r\n    };\r\n    MethodParams.prototype.a = function (type, value) {\r\n        this._p.push({ type: type, value: value });\r\n        return this;\r\n    };\r\n    return MethodParams;\r\n}());\r\nexport { MethodParams };\r\nexport function method(name, params) {\r\n    var actions = [];\r\n    for (var _i = 2; _i < arguments.length; _i++) {\r\n        actions[_i - 2] = arguments[_i];\r\n    }\r\n    var builder = [];\r\n    builder.push(\"<Method Id=\\\"$$ID$$\\\" ParentId=\\\"$$PARENT_ID$$\\\" Name=\\\"\" + name + \"\\\">\");\r\n    if (params !== null) {\r\n        var arrParams = params.toArray();\r\n        if (arrParams.length < 1) {\r\n            builder.push(\"<Parameters />\");\r\n        }\r\n        else {\r\n            builder.push(\"<Parameters>\");\r\n            [].push.apply(builder, arrParams.map(function (p) {\r\n                if (p.type === \"ObjectPath\") {\r\n                    return \"<Parameter ObjectPathId=\\\"$$OP_PARAM_ID_\" + p.value + \"$$\\\" />\";\r\n                }\r\n                return \"<Parameter Type=\\\"\" + p.type + \"\\\">\" + p.value + \"</Parameter>\";\r\n            }));\r\n            builder.push(\"</Parameters>\");\r\n        }\r\n    }\r\n    builder.push(\"</Method>\");\r\n    return new ObjectPath(builder.join(\"\"), actions);\r\n}\r\n//# sourceMappingURL=opbuilders.js.map","/**\r\n * Transforms an array of object paths into a request xml body. Does not do placeholder substitutions.\r\n *\r\n * @param objectPaths The object paths for which we want to generate a body\r\n */\r\nexport function writeObjectPathBody(objectPaths) {\r\n    var actions = [];\r\n    var paths = [];\r\n    objectPaths.forEach(function (op) {\r\n        paths.push(op.path);\r\n        actions.push.apply(actions, op.actions);\r\n    });\r\n    // create our xml payload\r\n    return [\r\n        \"<Request xmlns=\\\"http://schemas.microsoft.com/sharepoint/clientquery/2009\\\" SchemaVersion=\\\"15.0.0.0\\\" LibraryVersion=\\\"16.0.0.0\\\" ApplicationName=\\\"PnPjs\\\">\",\r\n        \"<Actions>\",\r\n        actions.join(\"\"),\r\n        \"</Actions>\",\r\n        \"<ObjectPaths>\",\r\n        paths.join(\"\"),\r\n        \"</ObjectPaths>\",\r\n        \"</Request>\",\r\n    ].join(\"\");\r\n}\r\n//# sourceMappingURL=utils.js.map","import { extend, objectDefinedNotNull } from \"@pnp/common\";\r\nimport { objectPath } from \"./opactionbuilders\";\r\nimport { property, staticProperty } from \"./opbuilders\";\r\nimport { writeObjectPathBody } from \"./utils\";\r\n/**\r\n * Represents an ObjectPath used when querying ProcessQuery\r\n */\r\nvar ObjectPath = /** @class */ (function () {\r\n    function ObjectPath(path, actions, id, replaceAfter) {\r\n        if (actions === void 0) { actions = []; }\r\n        if (id === void 0) { id = -1; }\r\n        if (replaceAfter === void 0) { replaceAfter = []; }\r\n        this.path = path;\r\n        this.actions = actions;\r\n        this.id = id;\r\n        this.replaceAfter = replaceAfter;\r\n    }\r\n    return ObjectPath;\r\n}());\r\nexport { ObjectPath };\r\n/**\r\n * Replaces all found instance of the $$ID$$ placeholder in the supplied xml string\r\n *\r\n * @param id New value to be insterted\r\n * @param xml The existing xml fragment in which the replace should occur\r\n */\r\nexport function opSetId(id, xml) {\r\n    return xml.replace(/\\$\\$ID\\$\\$/g, id);\r\n}\r\n/**\r\n * Replaces all found instance of the $$PATH_ID$$ placeholder in the supplied xml string\r\n *\r\n * @param id New value to be insterted\r\n * @param xml The existing xml fragment in which the replace should occur\r\n */\r\nexport function opSetPathId(id, xml) {\r\n    return xml.replace(/\\$\\$PATH_ID\\$\\$/g, id);\r\n}\r\n/**\r\n * Replaces all found instance of the $$PARENT_ID$$ placeholder in the supplied xml string\r\n *\r\n * @param id New value to be insterted\r\n * @param xml The existing xml fragment in which the replace should occur\r\n */\r\nexport function opSetParentId(id, xml) {\r\n    return xml.replace(/\\$\\$PARENT_ID\\$\\$/g, id);\r\n}\r\n/**\r\n * Replaces all found instance of the $$OP_PARAM_ID$$ placeholder in the supplied xml string\r\n *\r\n * @param map A mapping where [index] = replaced_object_path_id\r\n * @param xml The existing xml fragment in which the replace should occur\r\n * @param indexMapper Used when creating batches, not meant for direct use external to this library\r\n */\r\nexport function opSetPathParamId(map, xml, indexMapper) {\r\n    if (indexMapper === void 0) { indexMapper = function (n) { return n; }; }\r\n    // this approach works because input params must come before the things that need them\r\n    // meaning the right id will always be in the map\r\n    var matches = /\\$\\$OP_PARAM_ID_(\\d+)\\$\\$/ig.exec(xml);\r\n    if (matches !== null) {\r\n        for (var i = 1; i < matches.length; i++) {\r\n            var index = parseInt(matches[i], 10);\r\n            var regex = new RegExp(\"\\\\$\\\\$OP_PARAM_ID_\" + index + \"\\\\$\\\\$\", \"ig\");\r\n            xml = xml.replace(regex, map[indexMapper(index)].toString());\r\n        }\r\n    }\r\n    return xml;\r\n}\r\n/**\r\n * Represents a collection of IObjectPaths\r\n */\r\nvar ObjectPathQueue = /** @class */ (function () {\r\n    function ObjectPathQueue(_paths, _relationships) {\r\n        if (_paths === void 0) { _paths = []; }\r\n        if (_relationships === void 0) { _relationships = {}; }\r\n        this._paths = _paths;\r\n        this._relationships = _relationships;\r\n        this._contextIndex = -1;\r\n        this._siteIndex = -1;\r\n        this._webIndex = -1;\r\n    }\r\n    /**\r\n     * Adds an object path to the queue\r\n     *\r\n     * @param op The action to add\r\n     * @returns The index of the added object path\r\n     */\r\n    ObjectPathQueue.prototype.add = function (op) {\r\n        this.dirty();\r\n        this._paths.push(op);\r\n        return this.lastIndex;\r\n    };\r\n    ObjectPathQueue.prototype.addChildRelationship = function (parentIndex, childIndex) {\r\n        if (objectDefinedNotNull(this._relationships[\"_\" + parentIndex])) {\r\n            this._relationships[\"_\" + parentIndex].push(childIndex);\r\n        }\r\n        else {\r\n            this._relationships[\"_\" + parentIndex] = [childIndex];\r\n        }\r\n    };\r\n    ObjectPathQueue.prototype.getChildRelationship = function (parentIndex) {\r\n        if (objectDefinedNotNull(this._relationships[\"_\" + parentIndex])) {\r\n            return this._relationships[\"_\" + parentIndex];\r\n        }\r\n        else {\r\n            return [];\r\n        }\r\n    };\r\n    ObjectPathQueue.prototype.getChildRelationships = function () {\r\n        return this._relationships;\r\n    };\r\n    /**\r\n     * Appends an action to the supplied IObjectPath, replacing placeholders\r\n     *\r\n     * @param op IObjectPath to which the action will be appended\r\n     * @param action The action to append\r\n     */\r\n    ObjectPathQueue.prototype.appendAction = function (op, action) {\r\n        this.dirty();\r\n        op.actions.push(action);\r\n        return this;\r\n    };\r\n    /**\r\n     * Appends an action to the last IObjectPath in the collection\r\n     *\r\n     * @param action\r\n     */\r\n    ObjectPathQueue.prototype.appendActionToLast = function (action) {\r\n        return this.appendAction(this.last, action);\r\n    };\r\n    /**\r\n     * Creates a linked copy of this ObjectPathQueue\r\n     */\r\n    ObjectPathQueue.prototype.copy = function () {\r\n        var copy = new ObjectPathQueue(this.toArray(), extend({}, this._relationships));\r\n        copy._contextIndex = this._contextIndex;\r\n        copy._siteIndex = this._siteIndex;\r\n        copy._webIndex = this._webIndex;\r\n        return copy;\r\n    };\r\n    /**\r\n     * Creates an independent clone of this ObjectPathQueue\r\n     */\r\n    ObjectPathQueue.prototype.clone = function () {\r\n        var clone = new ObjectPathQueue(this.toArray().map(function (p) { return Object.assign({}, p); }), extend({}, this._relationships));\r\n        clone._contextIndex = this._contextIndex;\r\n        clone._siteIndex = this._siteIndex;\r\n        clone._webIndex = this._webIndex;\r\n        return clone;\r\n    };\r\n    /**\r\n     * Gets a copy of this instance's paths\r\n     */\r\n    ObjectPathQueue.prototype.toArray = function () {\r\n        return this._paths.slice(0);\r\n    };\r\n    Object.defineProperty(ObjectPathQueue.prototype, \"last\", {\r\n        /**\r\n         * The last IObjectPath instance added to this collection\r\n         */\r\n        get: function () {\r\n            if (this._paths.length < 1) {\r\n                return null;\r\n            }\r\n            return this._paths[this.lastIndex];\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ObjectPathQueue.prototype, \"lastIndex\", {\r\n        /**\r\n         * Index of the last IObjectPath added to the queue\r\n         */\r\n        get: function () {\r\n            return this._paths.length - 1;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ObjectPathQueue.prototype, \"siteIndex\", {\r\n        /**\r\n         * Gets the index of the current site in the queue\r\n         */\r\n        get: function () {\r\n            if (this._siteIndex < 0) {\r\n                // this needs to be here in case we create it\r\n                var contextIndex = this.contextIndex;\r\n                this._siteIndex = this.add(property(\"Site\", \r\n                // actions\r\n                objectPath()));\r\n                this.addChildRelationship(contextIndex, this._siteIndex);\r\n            }\r\n            return this._siteIndex;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ObjectPathQueue.prototype, \"webIndex\", {\r\n        /**\r\n         * Gets the index of the current web in the queue\r\n         */\r\n        get: function () {\r\n            if (this._webIndex < 0) {\r\n                // this needs to be here in case we create it\r\n                var contextIndex = this.contextIndex;\r\n                this._webIndex = this.add(property(\"Web\", \r\n                // actions\r\n                objectPath()));\r\n                this.addChildRelationship(contextIndex, this._webIndex);\r\n            }\r\n            return this._webIndex;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ObjectPathQueue.prototype, \"contextIndex\", {\r\n        /**\r\n         * Gets the index of the Current context in the queue, can be used to establish parent -> child rels\r\n         */\r\n        get: function () {\r\n            if (this._contextIndex < 0) {\r\n                this._contextIndex = this.add(staticProperty(\"Current\", \"{3747adcd-a3c3-41b9-bfab-4a64dd2f1e0a}\", \r\n                // actions\r\n                objectPath()));\r\n            }\r\n            return this._contextIndex;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ObjectPathQueue.prototype.toBody = function () {\r\n        if (objectDefinedNotNull(this._xml)) {\r\n            return this._xml;\r\n        }\r\n        // create our xml payload\r\n        this._xml = writeObjectPathBody(this.toIndexedTree());\r\n        return this._xml;\r\n    };\r\n    /**\r\n     * Conducts the string replacements for id, parent id, and path id\r\n     *\r\n     * @returns The tree with all string replacements made\r\n     */\r\n    ObjectPathQueue.prototype.toIndexedTree = function () {\r\n        var _this = this;\r\n        var builderIndex = -1;\r\n        var lastOpId = -1;\r\n        var idIndexMap = [];\r\n        return this.toArray().map(function (op, index, arr) {\r\n            var opId = ++builderIndex;\r\n            // track the array index => opId relationship\r\n            idIndexMap.push(opId);\r\n            // do path replacements\r\n            op.path = opSetPathParamId(idIndexMap, opSetId(opId.toString(), op.path));\r\n            if (lastOpId >= 0) {\r\n                // if we have a parent do the replace\r\n                op.path = opSetParentId(lastOpId.toString(), op.path);\r\n            }\r\n            // rewrite actions with placeholders replaced\r\n            op.actions = op.actions.map(function (a) {\r\n                var actionId = ++builderIndex;\r\n                return opSetId(actionId.toString(), opSetPathId(opId.toString(), a));\r\n            });\r\n            // handle any specific child relationships\r\n            _this.getChildRelationship(index).forEach(function (childIndex) {\r\n                // set the parent id for our non-immediate children, thus removing the token so it isn't overwritten\r\n                arr[childIndex].path = opSetParentId(opId.toString(), arr[childIndex].path);\r\n            });\r\n            // and remember our last object path id for the parent replace above\r\n            lastOpId = opId;\r\n            return op;\r\n        });\r\n    };\r\n    /**\r\n     * Dirties this queue clearing any cached data\r\n     */\r\n    ObjectPathQueue.prototype.dirty = function () {\r\n        this._xml = null;\r\n    };\r\n    return ObjectPathQueue;\r\n}());\r\nexport { ObjectPathQueue };\r\n//# sourceMappingURL=objectpath.js.map","import { getAttrValueFromString, jsS, hOP } from \"@pnp/common\";\r\n/**\r\n * Used within the request pipeline to parse ProcessQuery results\r\n */\r\nvar ProcessQueryParser = /** @class */ (function () {\r\n    function ProcessQueryParser(op) {\r\n        this.op = op;\r\n    }\r\n    /**\r\n     * Parses the response checking for errors\r\n     *\r\n     * @param r Response object\r\n     */\r\n    ProcessQueryParser.prototype.parse = function (r) {\r\n        var _this = this;\r\n        return r.text().then(function (t) {\r\n            if (!r.ok) {\r\n                throw Error(t);\r\n            }\r\n            try {\r\n                return JSON.parse(t);\r\n            }\r\n            catch (e) {\r\n                // special case in ProcessQuery where we got an error back, but it is not in json format\r\n                throw Error(t);\r\n            }\r\n        }).then(function (parsed) {\r\n            // here we need to check for an error body\r\n            if (parsed.length > 0 && hOP(parsed[0], \"ErrorInfo\") && parsed[0].ErrorInfo !== null) {\r\n                throw Error(jsS(parsed[0].ErrorInfo));\r\n            }\r\n            return _this.findResult(parsed);\r\n        });\r\n    };\r\n    ProcessQueryParser.prototype.findResult = function (json) {\r\n        for (var i = 0; i < this.op.actions.length; i++) {\r\n            var a = this.op.actions[i];\r\n            // let's see if the result is null based on the ObjectPath action, if it exists\r\n            // <ObjectPath Id=\"8\" ObjectPathId=\"7\" />\r\n            if (/^<ObjectPath /i.test(a)) {\r\n                var result = this.getParsedResultById(json, parseInt(getAttrValueFromString(a, \"Id\"), 10));\r\n                if (!result || (result && result.IsNull)) {\r\n                    return Promise.resolve(null);\r\n                }\r\n            }\r\n            // let's see if we have a query result\r\n            // <Query Id=\"5\" ObjectPathId = \"3\" >\r\n            if (/^<Query /i.test(a)) {\r\n                var result = this.getParsedResultById(json, parseInt(getAttrValueFromString(a, \"Id\"), 10));\r\n                if (result && hOP(result, \"_Child_Items_\")) {\r\n                    // this is a collection result\r\n                    /* tslint:disable:no-string-literal */\r\n                    return Promise.resolve(result[\"_Child_Items_\"]);\r\n                    /* tslint:enable:no-string-literal */\r\n                }\r\n                else {\r\n                    // this is an instance result\r\n                    return Promise.resolve(result);\r\n                }\r\n            }\r\n            // this is an invokeMethodAction so the last method action corresponds to our result\r\n            if (i === (this.op.actions.length - 1) && /^<Method /i.test(a)) {\r\n                return Promise.resolve(this.getParsedResultById(json, parseInt(getAttrValueFromString(a, \"Id\"), 10)));\r\n            }\r\n        }\r\n        // no result could be found so we are effectively returning void\r\n        // issue is we really don't know if we should be returning void (a method invocation with a void return) or\r\n        // if we just didn't find something above. We will let downstream things worry about that\r\n    };\r\n    /**\r\n     * Locates a result by ObjectPath id\r\n     *\r\n     * @param parsed the parsed JSON body from the response\r\n     * @param id The ObjectPath id whose result we want\r\n     */\r\n    ProcessQueryParser.prototype.getParsedResultById = function (parsed, id) {\r\n        for (var i = 0; i < parsed.length; i++) {\r\n            if (parsed[i] === id) {\r\n                return parsed[i + 1];\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    return ProcessQueryParser;\r\n}());\r\nexport { ProcessQueryParser };\r\n//# sourceMappingURL=parsers.js.map","import * as tslib_1 from \"tslib\";\r\nimport { combine, extend, getGUID, mergeHeaders, mergeOptions, objectDefinedNotNull, hOP, getHashCode, stringIsNullOrEmpty, } from \"@pnp/common\";\r\nimport { CachingOptions, Queryable } from \"@pnp/odata\";\r\nimport { SPHttpClient, toAbsoluteUrl } from \"@pnp/sp\";\r\nimport { ObjectPathQueue } from \"./objectpath\";\r\nimport { methodAction, objectPath, objectProperties, opQuery } from \"./opactionbuilders\";\r\nimport { method, property } from \"./opbuilders\";\r\nimport { ProcessQueryParser } from \"./parsers\";\r\nvar ProcessQueryPath = \"_vti_bin/client.svc/ProcessQuery\";\r\nvar ClientSvcQueryable = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ClientSvcQueryable, _super);\r\n    function ClientSvcQueryable(parent, _objectPaths) {\r\n        if (parent === void 0) { parent = \"\"; }\r\n        if (_objectPaths === void 0) { _objectPaths = null; }\r\n        var _this = _super.call(this) || this;\r\n        _this._objectPaths = _objectPaths;\r\n        _this._selects = [];\r\n        _this._batch = null;\r\n        _this._batchDependency = null;\r\n        if (typeof parent === \"string\") {\r\n            // we assume the parent here is an absolute url to a web\r\n            _this._parentUrl = parent;\r\n            _this._url = combine(parent.replace(ProcessQueryPath, \"\"), ProcessQueryPath);\r\n            if (!objectDefinedNotNull(_this._objectPaths)) {\r\n                _this._objectPaths = new ObjectPathQueue();\r\n            }\r\n        }\r\n        else {\r\n            _this._parentUrl = parent._parentUrl;\r\n            _this._url = combine(parent._parentUrl, ProcessQueryPath);\r\n            if (!objectDefinedNotNull(_objectPaths)) {\r\n                _this._objectPaths = parent._objectPaths.clone();\r\n            }\r\n            _this.configureFrom(parent);\r\n        }\r\n        return _this;\r\n    }\r\n    /**\r\n     * Choose which fields to return\r\n     *\r\n     * @param selects One or more fields to return\r\n     */\r\n    ClientSvcQueryable.prototype.select = function () {\r\n        var selects = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            selects[_i] = arguments[_i];\r\n        }\r\n        [].push.apply(this._selects, selects);\r\n        return this;\r\n    };\r\n    /**\r\n     * Adds this query to the supplied batch\r\n     *\r\n     */\r\n    ClientSvcQueryable.prototype.inBatch = function (batch) {\r\n        if (this.batch !== null) {\r\n            throw Error(\"This query is already part of a batch.\");\r\n        }\r\n        if (objectDefinedNotNull(batch)) {\r\n            this._batch = batch;\r\n            this._batchDependency = batch.addDependency();\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Gets the full url with query information\r\n     *\r\n     */\r\n    ClientSvcQueryable.prototype.toUrlAndQuery = function () {\r\n        return _super.prototype.toUrl.call(this) + \"?\" + Array.from(this.query).map(function (v) { return v[0] + \"=\" + v[1]; }).join(\"&\");\r\n    };\r\n    ClientSvcQueryable.prototype.getSelects = function () {\r\n        return objectDefinedNotNull(this._selects) ? this._selects : [];\r\n    };\r\n    /**\r\n     * Gets a child object based on this instance's paths and the supplied paramters\r\n     *\r\n     * @param factory Instance factory of the child type\r\n     * @param methodName Name of the method used to load the child\r\n     * @param params Parameters required by the method to load the child\r\n     */\r\n    ClientSvcQueryable.prototype.getChild = function (factory, methodName, params) {\r\n        var objectPaths = this._objectPaths.copy();\r\n        objectPaths.add(method(methodName, params, \r\n        // actions\r\n        objectPath()));\r\n        return new factory(this, objectPaths);\r\n    };\r\n    /**\r\n     * Gets a property of the current instance\r\n     *\r\n     * @param factory Instance factory of the child type\r\n     * @param propertyName Name of the property to load\r\n     */\r\n    ClientSvcQueryable.prototype.getChildProperty = function (factory, propertyName) {\r\n        var objectPaths = this._objectPaths.copy();\r\n        objectPaths.add(property(propertyName));\r\n        return new factory(this, objectPaths);\r\n    };\r\n    /**\r\n     * Sends a request\r\n     *\r\n     * @param op\r\n     * @param options\r\n     * @param parser\r\n     */\r\n    ClientSvcQueryable.prototype.send = function (objectPaths, options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (parser === void 0) { parser = null; }\r\n        // here we need to create a clone because all the string indexes and references\r\n        // will be updated and all need to relate for this operation being sent. The parser\r\n        // and the postCore method need to share an independent value of the objectPaths\r\n        // See for https://github.com/pnp/pnpjs/issues/419 for details\r\n        var clonedOps = objectPaths.clone();\r\n        if (!objectDefinedNotNull(parser)) {\r\n            // we assume here that we want to return for this index path\r\n            parser = new ProcessQueryParser(clonedOps.last);\r\n        }\r\n        if (this.hasBatch) {\r\n            // this is using the options variable to pass some extra information downstream to the batch\r\n            options = extend(options, {\r\n                clientsvc_ObjectPaths: clonedOps,\r\n            });\r\n        }\r\n        else {\r\n            if (!hOP(options, \"body\")) {\r\n                options = extend(options, {\r\n                    body: clonedOps.toBody(),\r\n                });\r\n            }\r\n        }\r\n        return _super.prototype.postCore.call(this, options, parser);\r\n    };\r\n    /**\r\n     * Sends the request, merging the result data with a new instance of factory\r\n     */\r\n    ClientSvcQueryable.prototype.sendGet = function (factory) {\r\n        var _this = this;\r\n        var ops = this._objectPaths.copy().appendActionToLast(opQuery(this.getSelects()));\r\n        return this.send(ops).then(function (r) { return extend(new factory(_this), r); });\r\n    };\r\n    /**\r\n     * Sends the request, merging the result data array with a new instances of factory\r\n     */\r\n    ClientSvcQueryable.prototype.sendGetCollection = function (factory) {\r\n        var ops = this._objectPaths.copy().appendActionToLast(opQuery([], this.getSelects()));\r\n        return this.send(ops).then(function (r) { return r.map(function (d) { return extend(factory(d), d); }); });\r\n    };\r\n    /**\r\n     * Invokes the specified method on the server and returns the result\r\n     *\r\n     * @param methodName Name of the method to invoke\r\n     * @param params Method parameters\r\n     * @param actions Any additional actions to execute in addition to the method invocation (set property for example)\r\n     */\r\n    ClientSvcQueryable.prototype.invokeMethod = function (methodName, params) {\r\n        if (params === void 0) { params = null; }\r\n        var actions = [];\r\n        for (var _i = 2; _i < arguments.length; _i++) {\r\n            actions[_i - 2] = arguments[_i];\r\n        }\r\n        return this.invokeMethodImpl(methodName, params, actions, opQuery([], null));\r\n    };\r\n    /**\r\n     * Invokes a method action that returns a single result and does not have an associated query (ex: GetDescription on Term)\r\n     *\r\n     * @param methodName Name of the method to invoke\r\n     * @param params Method parameters\r\n     * @param actions Any additional actions to execute in addition to the method invocation (set property for example)\r\n     */\r\n    ClientSvcQueryable.prototype.invokeMethodAction = function (methodName, params) {\r\n        if (params === void 0) { params = null; }\r\n        var actions = [];\r\n        for (var _i = 2; _i < arguments.length; _i++) {\r\n            actions[_i - 2] = arguments[_i];\r\n        }\r\n        return this.invokeMethodImpl(methodName, params, actions, null, true);\r\n    };\r\n    /**\r\n     * Invokes the specified non-query method on the server\r\n     *\r\n     * @param methodName Name of the method to invoke\r\n     * @param params Method parameters\r\n     * @param actions Any additional actions to execute in addition to the method invocation (set property for example)\r\n     */\r\n    ClientSvcQueryable.prototype.invokeNonQuery = function (methodName, params) {\r\n        if (params === void 0) { params = null; }\r\n        var actions = [];\r\n        for (var _i = 2; _i < arguments.length; _i++) {\r\n            actions[_i - 2] = arguments[_i];\r\n        }\r\n        // by definition we are not returning anything from these calls so we should not be caching the results\r\n        this._useCaching = false;\r\n        return this.invokeMethodImpl(methodName, params, actions, null, true);\r\n    };\r\n    /**\r\n     * Invokes the specified method on the server and returns the resulting collection\r\n     *\r\n     * @param methodName Name of the method to invoke\r\n     * @param params Method parameters\r\n     * @param actions Any additional actions to execute in addition to the method invocation (set property for example)\r\n     */\r\n    ClientSvcQueryable.prototype.invokeMethodCollection = function (methodName, params) {\r\n        if (params === void 0) { params = null; }\r\n        var actions = [];\r\n        for (var _i = 2; _i < arguments.length; _i++) {\r\n            actions[_i - 2] = arguments[_i];\r\n        }\r\n        return this.invokeMethodImpl(methodName, params, actions, opQuery([], []));\r\n    };\r\n    /**\r\n     * Updates this instance, returning a copy merged with the updated data after the update\r\n     *\r\n     * @param properties Plain object of the properties and values to update\r\n     * @param factory Factory method use to create a new instance of FactoryType\r\n     */\r\n    ClientSvcQueryable.prototype.invokeUpdate = function (properties, factory) {\r\n        var _this = this;\r\n        var ops = this._objectPaths.copy();\r\n        // append setting all the properties to this instance\r\n        objectProperties(properties).map(function (a) { return ops.appendActionToLast(a); });\r\n        ops.appendActionToLast(opQuery([], null));\r\n        return this.send(ops).then(function (r) { return extend(new factory(_this), r); });\r\n    };\r\n    /**\r\n     * Converts the current instance to a request context\r\n     *\r\n     * @param verb The request verb\r\n     * @param options The set of supplied request options\r\n     * @param parser The supplied ODataParser instance\r\n     * @param pipeline Optional request processing pipeline\r\n     */\r\n    ClientSvcQueryable.prototype.toRequestContext = function (verb, options, parser, pipeline) {\r\n        var _this = this;\r\n        return toAbsoluteUrl(this.toUrlAndQuery()).then(function (url) {\r\n            mergeOptions(options, _this._options);\r\n            var headers = new Headers();\r\n            mergeHeaders(headers, options.headers);\r\n            mergeHeaders(headers, {\r\n                \"accept\": \"*/*\",\r\n                \"content-type\": \"text/xml\",\r\n            });\r\n            options = extend(options, { headers: headers });\r\n            // we need to do some special cache handling to ensure we have a good key\r\n            if (_this._useCaching) {\r\n                var keyStr = options.body;\r\n                if (stringIsNullOrEmpty(keyStr)) {\r\n                    if (hOP(options, \"clientsvc_ObjectPaths\")) {\r\n                        // if we are using caching and batching together we need to create our string from the paths stored for the\r\n                        // batching operation (see: https://github.com/pnp/pnpjs/issues/449) but not update the ones passed to\r\n                        // the batch as they will be indexed during the batch creation process\r\n                        keyStr = options.clientsvc_ObjectPaths.clone().toBody();\r\n                    }\r\n                    else {\r\n                        // this case shouldn't happen\r\n                        keyStr = \"\";\r\n                    }\r\n                }\r\n                // because all the requests use the same url they would collide in the cache we use a special key\r\n                var cacheKey = \"PnPjs.ProcessQueryClient(\" + getHashCode(keyStr) + \")\";\r\n                if (objectDefinedNotNull(_this._cachingOptions)) {\r\n                    // if our key ends in the ProcessQuery url we overwrite it\r\n                    if (/\\/client\\.svc\\/ProcessQuery\\?$/i.test(_this._cachingOptions.key)) {\r\n                        _this._cachingOptions.key = cacheKey;\r\n                    }\r\n                }\r\n                else {\r\n                    _this._cachingOptions = new CachingOptions(cacheKey);\r\n                }\r\n            }\r\n            var dependencyDispose = _this.hasBatch ? _this._batchDependency : function () { return; };\r\n            // build our request context\r\n            var context = {\r\n                batch: _this.batch,\r\n                batchDependency: dependencyDispose,\r\n                cachingOptions: _this._cachingOptions,\r\n                clientFactory: function () { return new SPHttpClient(); },\r\n                isBatched: _this.hasBatch,\r\n                isCached: _this._useCaching,\r\n                options: options,\r\n                parser: parser,\r\n                pipeline: pipeline,\r\n                requestAbsoluteUrl: url,\r\n                requestId: getGUID(),\r\n                verb: verb,\r\n            };\r\n            return context;\r\n        });\r\n    };\r\n    /**\r\n     * Blocks a batch call from occuring, MUST be cleared by calling the returned function\r\n    */\r\n    ClientSvcQueryable.prototype.addBatchDependency = function () {\r\n        if (this._batch !== null) {\r\n            return this._batch.addDependency();\r\n        }\r\n        return function () { return null; };\r\n    };\r\n    Object.defineProperty(ClientSvcQueryable.prototype, \"hasBatch\", {\r\n        /**\r\n         * Indicates if the current query has a batch associated\r\n         *\r\n         */\r\n        get: function () {\r\n            return objectDefinedNotNull(this._batch);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ClientSvcQueryable.prototype, \"batch\", {\r\n        /**\r\n         * The batch currently associated with this query or null\r\n         *\r\n         */\r\n        get: function () {\r\n            return this.hasBatch ? this._batch : null;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Executes the actual invoke method call\r\n     *\r\n     * @param methodName Name of the method to invoke\r\n     * @param params Method parameters\r\n     * @param queryAction Specifies the query action to take\r\n     */\r\n    ClientSvcQueryable.prototype.invokeMethodImpl = function (methodName, params, actions, queryAction, isAction) {\r\n        if (isAction === void 0) { isAction = false; }\r\n        var ops = this._objectPaths.copy();\r\n        if (isAction) {\r\n            ops.appendActionToLast(methodAction(methodName, params));\r\n        }\r\n        else {\r\n            ops.add(method.apply(void 0, [methodName, params].concat([objectPath()].concat(actions, [queryAction]))));\r\n        }\r\n        return this.send(ops);\r\n    };\r\n    return ClientSvcQueryable;\r\n}(Queryable));\r\nexport { ClientSvcQueryable };\r\n//# sourceMappingURL=clintsvcqueryable.js.map","import * as tslib_1 from \"tslib\";\r\nimport { Logger } from \"@pnp/logging\";\r\nimport { CachingParserWrapper, ODataBatch } from \"@pnp/odata\";\r\nimport { ClientSvcQueryable } from \"./clintsvcqueryable\";\r\nimport { ObjectPath, opSetId, opSetParentId, opSetPathId, opSetPathParamId } from \"./objectpath\";\r\nimport { objectPath } from \"./opactionbuilders\";\r\nimport { staticMethod } from \"./opbuilders\";\r\nimport { ProcessQueryParser } from \"./parsers\";\r\nimport { writeObjectPathBody } from \"./utils\";\r\n/**\r\n * Implements ODataBatch for use with the ObjectPath framework\r\n */\r\nvar ObjectPathBatch = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ObjectPathBatch, _super);\r\n    function ObjectPathBatch(parentUrl, _batchId) {\r\n        var _this = _super.call(this, _batchId) || this;\r\n        _this.parentUrl = parentUrl;\r\n        return _this;\r\n    }\r\n    ObjectPathBatch.prototype.executeImpl = function () {\r\n        // if we don't have any requests, don't bother sending anything\r\n        // this could be due to caching further upstream, or just an empty batch\r\n        if (this.requests.length < 1) {\r\n            Logger.write(\"Resolving empty batch.\", 1 /* Info */);\r\n            return Promise.resolve();\r\n        }\r\n        var executor = new BatchExecutor(this.parentUrl, this.batchId);\r\n        executor.appendRequests(this.requests);\r\n        return executor.execute();\r\n    };\r\n    return ObjectPathBatch;\r\n}(ODataBatch));\r\nexport { ObjectPathBatch };\r\nvar BatchExecutor = /** @class */ (function (_super) {\r\n    tslib_1.__extends(BatchExecutor, _super);\r\n    function BatchExecutor(parentUrl, batchId) {\r\n        var _this = _super.call(this, parentUrl) || this;\r\n        _this.batchId = batchId;\r\n        _this._requests = [];\r\n        _this._builderIndex = 1;\r\n        // we add our session object path and hard code in the IDs so we can reference it\r\n        var method = staticMethod(\"GetTaxonomySession\", \"{981cbc68-9edc-4f8d-872f-71146fcbb84f}\");\r\n        method.path = opSetId(\"0\", method.path);\r\n        method.actions.push(opSetId(\"1\", opSetPathId(\"0\", objectPath())));\r\n        _this._objectPaths.add(method);\r\n        return _this;\r\n    }\r\n    BatchExecutor.prototype.appendRequests = function (requests) {\r\n        var _this = this;\r\n        requests.forEach(function (request) {\r\n            // grab the special property we added to options when we created the batch info\r\n            var pathQueue = request.options.clientsvc_ObjectPaths;\r\n            var paths = pathQueue.toArray();\r\n            // getChildRelationships\r\n            if (paths.length < 0) {\r\n                return;\r\n            }\r\n            var indexMappingFunction = function (n) { return n; };\r\n            if (/GetTaxonomySession/i.test(paths[0].path)) {\r\n                // drop the first thing as it is a get session object path, which we add once for the entire batch\r\n                paths = paths.slice(1);\r\n                // replace the next item's parent id with 0, which will be the id of the session call at the root of this request\r\n                paths[0].path = opSetParentId(\"0\", paths[0].path);\r\n                indexMappingFunction = function (n) { return n - 1; };\r\n            }\r\n            var lastOpId = -1;\r\n            var idIndexMap = [];\r\n            paths.map(function (op, index, arr) {\r\n                // rewrite the path string\r\n                var opId = ++_this._builderIndex;\r\n                // track the array index => opId relationship\r\n                idIndexMap.push(opId);\r\n                var path = opSetPathParamId(idIndexMap, opSetId(opId.toString(), op.path), indexMappingFunction);\r\n                if (lastOpId >= 0) {\r\n                    path = opSetParentId(lastOpId.toString(), path);\r\n                }\r\n                // rewrite actions with placeholders replaced\r\n                var opActions = op.actions.map(function (a) {\r\n                    var actionId = ++_this._builderIndex;\r\n                    return opSetId(actionId.toString(), opSetPathId(opId.toString(), a));\r\n                });\r\n                // handle any specific child relationships\r\n                // the childIndex is reduced by 1 because we are removing the Session Path\r\n                pathQueue.getChildRelationship(index + 1).map(function (i) { return i - 1; }).forEach(function (childIndex) {\r\n                    // set the parent id for our non-immediate children\r\n                    arr[childIndex].path = opSetParentId(opId.toString(), arr[childIndex].path);\r\n                });\r\n                // and remember our last object path id for the parent replace above\r\n                lastOpId = opId;\r\n                // return our now substituted path and actions as a new object path instance\r\n                return new ObjectPath(path, opActions);\r\n            }).forEach(function (op) { return _this._objectPaths.add(op); });\r\n            // get this once\r\n            var obPaths = _this._objectPaths.toArray();\r\n            // create a new parser to handle finding the result based on the path\r\n            var parser = new ProcessQueryParser(obPaths[obPaths.length - 1]);\r\n            if (request.parser instanceof CachingParserWrapper) {\r\n                // handle special case of caching\r\n                request.parser = new ProcessQueryCachingParserWrapper(parser, request.parser);\r\n            }\r\n            else {\r\n                request.parser = parser;\r\n            }\r\n            // add the request to our batch requests\r\n            _this._requests.push(request);\r\n            // remove the temp property\r\n            delete request.options.clientsvc_ObjectPaths;\r\n        });\r\n    };\r\n    BatchExecutor.prototype.execute = function () {\r\n        var _this = this;\r\n        Logger.write(\"[\" + this.batchId + \"] (\" + (new Date()).getTime() + \") Executing batch with \" + this._requests.length + \" requests.\", 1 /* Info */);\r\n        // create our request body from all the merged object paths\r\n        var options = {\r\n            body: writeObjectPathBody(this._objectPaths.toArray()),\r\n        };\r\n        Logger.write(\"[\" + this.batchId + \"] (\" + (new Date()).getTime() + \") Sending batch request.\", 1 /* Info */);\r\n        // send the batch\r\n        return _super.prototype.postCore.call(this, options, new BatchParser()).then(function (rawResponse) {\r\n            Logger.write(\"[\" + _this.batchId + \"] (\" + (new Date()).getTime() + \") Resolving batched requests.\", 1 /* Info */);\r\n            return _this._requests.reduce(function (chain, request) {\r\n                Logger.write(\"[\" + request.id + \"] (\" + (new Date()).getTime() + \") Resolving request in batch \" + _this.batchId + \".\", 1 /* Info */);\r\n                return chain.then(function (_) { return request.parser.findResult(rawResponse).then(request.resolve).catch(request.reject); });\r\n            }, Promise.resolve());\r\n        });\r\n    };\r\n    return BatchExecutor;\r\n}(ClientSvcQueryable));\r\n/**\r\n * Used to return the raw results from parsing the batch\r\n */\r\nvar BatchParser = /** @class */ (function (_super) {\r\n    tslib_1.__extends(BatchParser, _super);\r\n    function BatchParser() {\r\n        return _super.call(this, null) || this;\r\n    }\r\n    BatchParser.prototype.findResult = function (json) {\r\n        // we leave it to the individual request parsers to find their results in the raw json body\r\n        return json;\r\n    };\r\n    return BatchParser;\r\n}(ProcessQueryParser));\r\n/**\r\n * Handles processing batched results that are also cached\r\n */\r\nvar ProcessQueryCachingParserWrapper = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ProcessQueryCachingParserWrapper, _super);\r\n    function ProcessQueryCachingParserWrapper(parser, wrapper) {\r\n        return _super.call(this, parser, wrapper.cacheOptions) || this;\r\n    }\r\n    ProcessQueryCachingParserWrapper.prototype.findResult = function (json) {\r\n        var _this = this;\r\n        return this.parser.findResult(json).then(function (d) { return _this.cacheData(d); });\r\n    };\r\n    return ProcessQueryCachingParserWrapper;\r\n}(CachingParserWrapper));\r\n//# sourceMappingURL=batch.js.map","export * from \"./src/clientsvc\";\r\n//# sourceMappingURL=index.js.map"],"sourceRoot":""}