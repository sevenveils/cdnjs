{"version":3,"sources":["dist/hyperapp.js"],"names":["global","factory","exports","module","define","amd","self","hyperapp","this","XLINK_NS","EMPTY_OBJECT","EMPTY_ARRAY","map","isArray","Array","defer","Promise","cb","resolve","then","setTimeout","merge","a","b","target","i","updateProperty","element","name","oldValue","newValue","eventCb","isSvg","style","setProperty","createClass","obj","tmp","out","length","setAttribute","removeAttribute","events","slice","toLowerCase","removeEventListener","addEventListener","nullOrFalse","replace","removeAttributeNS","setAttributeNS","createElement","node","type","document","createTextNode","createElementNS","children","appendChild","resolveNode","props","removeElement","parent","removeChild","getKey","key","patchElement","oldNode","newNode","nodeValue","newElement","insertBefore","savedNode","childNode","oldKey","oldProps","newProps","updateElement","newKey","oldChildren","oldChStart","oldChEnd","newChildren","newChStart","newChEnd","oldKeyed","start","end","createKeyMap","newKeyed","k","shouldUpdate","lazy","render","createVNode","createTextVNode","text","recycleChild","nodeType","recycleElement","nodeName","call","childNodes","patch","container","isSameAction","patchSub","oldSub","newSub","dispatch","subs","newSubs","oldSubs","push","shouldRestart","Lazy","h","rest","arguments","pop","app","state","sub","subscriptions","view","renderLock","setState","newState","fx","event","currentTarget","init"],"mappings":"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","sourcesContent":["(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (global = global || self, factory(global.hyperapp = {}));\n}(this, function (exports) { 'use strict';\n\n  var DEFAULT_NODE = 0;\n  var RECYCLED_NODE = 1;\n  var LAZY_NODE = 2;\n  var TEXT_NODE = 3;\n\n  var XLINK_NS = \"http://www.w3.org/1999/xlink\";\n  var SVG_NS = \"http://www.w3.org/2000/svg\";\n\n  var EMPTY_OBJECT = {};\n  var EMPTY_ARRAY = [];\n\n  var map = EMPTY_ARRAY.map;\n  var isArray = Array.isArray;\n\n  var defer =\n    typeof Promise === \"function\"\n      ? function(cb) {\n          Promise.resolve().then(cb);\n        }\n      : setTimeout;\n\n  var merge = function(a, b) {\n    var target = {};\n\n    for (var i in a) target[i] = a[i];\n    for (var i in b) target[i] = b[i];\n\n    return target\n  };\n\n  function createClass(obj) {\n    var tmp = typeof obj;\n    var out = \"\";\n\n    if (tmp === \"string\" || tmp === \"number\") return obj || \"\"\n\n    if (isArray(obj) && obj.length > 0) {\n      for (var i = 0, length = obj.length; i < length; i++) {\n        if ((tmp = createClass(obj[i])) !== \"\") out += (out && \" \") + tmp;\n      }\n    } else {\n      for (var i in obj) {\n        if (obj[i]) out += (out && \" \") + i;\n      }\n    }\n\n    return out\n  }\n\n  var updateProperty = function(\n    element,\n    name,\n    oldValue,\n    newValue,\n    eventCb,\n    isSvg\n  ) {\n    if (name === \"key\") ; else if (name === \"style\") {\n      for (var i in merge(oldValue, newValue)) {\n        var style = newValue == null || newValue[i] == null ? \"\" : newValue[i];\n        if (i[0] === \"-\") {\n          element[name].setProperty(i, style);\n        } else {\n          element[name][i] = style;\n        }\n      }\n    } else if (name === \"class\") {\n      if ((newValue = createClass(newValue))) {\n        element.setAttribute(name, newValue);\n      } else {\n        element.removeAttribute(name);\n      }\n    } else {\n      if (name[0] === \"o\" && name[1] === \"n\") {\n        if (!element.events) element.events = {};\n\n        element.events[(name = name.slice(2).toLowerCase())] = newValue;\n\n        if (newValue == null) {\n          element.removeEventListener(name, eventCb);\n        } else if (oldValue == null) {\n          element.addEventListener(name, eventCb);\n        }\n      } else {\n        var nullOrFalse = newValue == null || newValue === false;\n        if (\n          name in element &&\n          name !== \"list\" &&\n          name !== \"draggable\" &&\n          name !== \"spellcheck\" &&\n          name !== \"translate\" &&\n          !isSvg\n        ) {\n          element[name] = newValue == null ? \"\" : newValue;\n          if (nullOrFalse) {\n            element.removeAttribute(name);\n          }\n        } else {\n          var ns = isSvg && name !== (name = name.replace(/^xlink:?/, \"\"));\n          if (ns) {\n            if (nullOrFalse) {\n              element.removeAttributeNS(XLINK_NS, name);\n            } else {\n              element.setAttributeNS(XLINK_NS, name, newValue);\n            }\n          } else {\n            if (nullOrFalse) {\n              element.removeAttribute(name);\n            } else {\n              element.setAttribute(name, newValue);\n            }\n          }\n        }\n      }\n    }\n  };\n\n  var createElement = function(node, eventCb, isSvg) {\n    var element =\n      node.type === TEXT_NODE\n        ? document.createTextNode(node.name)\n        : (isSvg = isSvg || node.name === \"svg\")\n        ? document.createElementNS(SVG_NS, node.name)\n        : document.createElement(node.name);\n\n    for (var i = 0, length = node.children.length; i < length; i++) {\n      element.appendChild(\n        createElement(\n          (node.children[i] = resolveNode(node.children[i])),\n          eventCb,\n          isSvg\n        )\n      );\n    }\n\n    var props = node.props;\n    for (var name in props) {\n      updateProperty(element, name, null, props[name], eventCb, isSvg);\n    }\n\n    return (node.element = element)\n  };\n\n  var updateElement = function(element, oldProps, newProps, eventCb, isSvg) {\n    for (var name in merge(oldProps, newProps)) {\n      if (\n        (name === \"value\" || name === \"checked\"\n          ? element[name]\n          : oldProps[name]) !== newProps[name]\n      ) {\n        updateProperty(\n          element,\n          name,\n          oldProps[name],\n          newProps[name],\n          eventCb,\n          isSvg\n        );\n      }\n    }\n  };\n\n  var removeElement = function(parent, node) {\n    parent.removeChild(node.element);\n  };\n\n  var getKey = function(node) {\n    return node == null ? null : node.key\n  };\n\n  var createKeyMap = function(children, start, end) {\n    for (var out = {}, key, node; start <= end; start++) {\n      if ((key = (node = children[start]).key) != null) {\n        out[key] = node;\n      }\n    }\n    return out\n  };\n\n  var patchElement = function(parent, element, oldNode, newNode, eventCb, isSvg) {\n    if (newNode === oldNode) ; else if (\n      oldNode != null &&\n      oldNode.type === TEXT_NODE &&\n      newNode.type === TEXT_NODE\n    ) {\n      if (oldNode.name !== newNode.name) {\n        element.nodeValue = newNode.name;\n      }\n    } else if (oldNode == null || oldNode.name !== newNode.name) {\n      var newElement = parent.insertBefore(\n        createElement((newNode = resolveNode(newNode)), eventCb, isSvg),\n        element\n      );\n\n      if (oldNode != null) removeElement(parent, oldNode);\n\n      element = newElement;\n    } else {\n      updateElement(\n        element,\n        oldNode.props,\n        newNode.props,\n        eventCb,\n        (isSvg = isSvg || newNode.name === \"svg\")\n      );\n\n      var savedNode;\n      var childNode;\n\n      var oldKey;\n      var oldChildren = oldNode.children;\n      var oldChStart = 0;\n      var oldChEnd = oldChildren.length - 1;\n\n      var newKey;\n      var newChildren = newNode.children;\n      var newChStart = 0;\n      var newChEnd = newChildren.length - 1;\n\n      while (newChStart <= newChEnd && oldChStart <= oldChEnd) {\n        oldKey = getKey(oldChildren[oldChStart]);\n        newKey = getKey(newChildren[newChStart]);\n\n        if (oldKey == null || oldKey !== newKey) break\n\n        patchElement(\n          element,\n          oldChildren[oldChStart].element,\n          oldChildren[oldChStart],\n          (newChildren[newChStart] = resolveNode(\n            newChildren[newChStart],\n            oldChildren[oldChStart]\n          )),\n          eventCb,\n          isSvg\n        );\n\n        oldChStart++;\n        newChStart++;\n      }\n\n      while (newChStart <= newChEnd && oldChStart <= oldChEnd) {\n        oldKey = getKey(oldChildren[oldChEnd]);\n        newKey = getKey(newChildren[newChEnd]);\n\n        if (oldKey == null || oldKey !== newKey) break\n\n        patchElement(\n          element,\n          oldChildren[oldChEnd].element,\n          oldChildren[oldChEnd],\n          (newChildren[newChEnd] = resolveNode(\n            newChildren[newChEnd],\n            oldChildren[oldChEnd]\n          )),\n          eventCb,\n          isSvg\n        );\n\n        oldChEnd--;\n        newChEnd--;\n      }\n\n      if (oldChStart > oldChEnd) {\n        while (newChStart <= newChEnd) {\n          element.insertBefore(\n            createElement(\n              (newChildren[newChStart] = resolveNode(newChildren[newChStart++])),\n              eventCb,\n              isSvg\n            ),\n            (childNode = oldChildren[oldChStart]) && childNode.element\n          );\n        }\n      } else if (newChStart > newChEnd) {\n        while (oldChStart <= oldChEnd) {\n          removeElement(element, oldChildren[oldChStart++]);\n        }\n      } else {\n        var oldKeyed = createKeyMap(oldChildren, oldChStart, oldChEnd);\n        var newKeyed = {};\n\n        while (newChStart <= newChEnd) {\n          oldKey = getKey((childNode = oldChildren[oldChStart]));\n          newKey = getKey(\n            (newChildren[newChStart] = resolveNode(\n              newChildren[newChStart],\n              childNode\n            ))\n          );\n\n          if (\n            newKeyed[oldKey] ||\n            (newKey != null && newKey === getKey(oldChildren[oldChStart + 1]))\n          ) {\n            if (oldKey == null) {\n              removeElement(element, childNode);\n            }\n            oldChStart++;\n            continue\n          }\n\n          if (newKey == null || oldNode.type === RECYCLED_NODE) {\n            if (oldKey == null) {\n              patchElement(\n                element,\n                childNode && childNode.element,\n                childNode,\n                newChildren[newChStart],\n                eventCb,\n                isSvg\n              );\n              newChStart++;\n            }\n            oldChStart++;\n          } else {\n            if (oldKey === newKey) {\n              patchElement(\n                element,\n                childNode.element,\n                childNode,\n                newChildren[newChStart],\n                eventCb,\n                isSvg\n              );\n              newKeyed[newKey] = true;\n              oldChStart++;\n            } else {\n              if ((savedNode = oldKeyed[newKey]) != null) {\n                patchElement(\n                  element,\n                  element.insertBefore(\n                    savedNode.element,\n                    childNode && childNode.element\n                  ),\n                  savedNode,\n                  newChildren[newChStart],\n                  eventCb,\n                  isSvg\n                );\n                newKeyed[newKey] = true;\n              } else {\n                patchElement(\n                  element,\n                  childNode && childNode.element,\n                  null,\n                  newChildren[newChStart],\n                  eventCb,\n                  isSvg\n                );\n              }\n            }\n            newChStart++;\n          }\n        }\n\n        while (oldChStart <= oldChEnd) {\n          if (getKey((childNode = oldChildren[oldChStart++])) == null) {\n            removeElement(element, childNode);\n          }\n        }\n\n        for (var key in oldKeyed) {\n          if (newKeyed[key] == null) {\n            removeElement(element, oldKeyed[key]);\n          }\n        }\n      }\n    }\n\n    return (newNode.element = element)\n  };\n\n  var shouldUpdate = function(a, b) {\n    for (var k in a) if (a[k] !== b[k]) return true\n    for (var k in b) if (a[k] !== b[k]) return true\n  };\n\n  var resolveNode = function(newNode, oldNode) {\n    return newNode.type === LAZY_NODE\n      ? !oldNode || shouldUpdate(newNode.lazy, oldNode.lazy)\n        ? newNode.render()\n        : oldNode\n      : newNode\n  };\n\n  var createVNode = function(name, props, children, element, key, type) {\n    return {\n      name: name,\n      props: props,\n      children: children,\n      element: element,\n      key: key,\n      type: type\n    }\n  };\n\n  var createTextVNode = function(text, element) {\n    return createVNode(text, EMPTY_OBJECT, EMPTY_ARRAY, element, null, TEXT_NODE)\n  };\n\n  var recycleChild = function(element) {\n    return element.nodeType === TEXT_NODE\n      ? createTextVNode(element.nodeValue, element)\n      : recycleElement(element)\n  };\n\n  var recycleElement = function(element) {\n    return createVNode(\n      element.nodeName.toLowerCase(),\n      EMPTY_OBJECT,\n      map.call(element.childNodes, recycleChild),\n      element,\n      null,\n      RECYCLED_NODE\n    )\n  };\n\n  var patch = function(container, element, oldNode, newNode, eventCb) {\n    return (element = patchElement(container, element, oldNode, newNode, eventCb))\n  };\n\n  var Lazy = function(props) {\n    return {\n      type: LAZY_NODE,\n      key: props.key,\n      lazy: props,\n      render: function() {\n        var node = props.render(props);\n        node.lazy = props;\n        return node\n      }\n    }\n  };\n\n  var h = function(name, props) {\n    var node;\n    var rest = [];\n    var children = [];\n    var length = arguments.length;\n\n    while (length-- > 2) rest.push(arguments[length]);\n\n    if ((props = props == null ? {} : props).children != null) {\n      if (rest.length <= 0) {\n        rest.push(props.children);\n      }\n      delete props.children;\n    }\n\n    while (rest.length > 0) {\n      if (isArray((node = rest.pop()))) {\n        for (length = node.length; length-- > 0; ) {\n          rest.push(node[length]);\n        }\n      } else if (node === false || node === true || node == null) ; else {\n        children.push(typeof node === \"object\" ? node : createTextVNode(node));\n      }\n    }\n\n    return typeof name === \"function\"\n      ? name(props, (props.children = children))\n      : createVNode(name, props, children, null, props.key, DEFAULT_NODE)\n  };\n\n  var isSameAction = function(a, b) {\n    return isArray(a) && isArray(b) && typeof a[0] === \"function\" && a[0] === b[0]\n  };\n\n  var shouldRestart = function(a, b) {\n    for (var k in merge(a, b)) {\n      if (a[k] === b[k] || isSameAction(a[k], b[k])) b[k] = a[k];\n      else return true\n    }\n  };\n\n  var patchSub = function(oldSub, newSub, dispatch) {\n    if (\n      (newSub && (!newSub[0] || isArray(newSub[0]))) ||\n      (oldSub && (!oldSub[0] || isArray(oldSub[0])))\n    ) {\n      var subs = [];\n      var newSubs = newSub ? newSub : [newSub];\n      var oldSubs = oldSub ? oldSub : [oldSub];\n\n      for (var i = 0; i < newSubs.length || i < oldSubs.length; i++) {\n        subs.push(patchSub(oldSubs[i], newSubs[i], dispatch));\n      }\n\n      return subs\n    }\n\n    return newSub\n      ? !oldSub || newSub[0] !== oldSub[0] || shouldRestart(newSub[1], oldSub[1])\n        ? [\n            newSub[0],\n            newSub[1],\n            newSub[0](newSub[1], dispatch),\n            oldSub && oldSub[2]()\n          ]\n        : oldSub\n      : oldSub && oldSub[2]()\n  };\n\n  function app(props) {\n    var container = props.container;\n    var element = container && container.children[0];\n    var oldNode = element && recycleElement(element);\n    var subs = props.subscriptions;\n    var view = props.view;\n    var renderLock = false;\n    var state;\n    var sub;\n\n    var setState = function(newState) {\n      if (!(state === newState || renderLock)) {\n        defer(render, (renderLock = true));\n      }\n      state = newState;\n    };\n\n    var dispatch = function(obj, props) {\n      if (obj == null) ; else if (typeof obj === \"function\") {\n        dispatch(obj(state, props));\n      } else if (isArray(obj)) {\n        if (typeof obj[0] === \"function\") {\n          dispatch(obj[0](state, obj[1], props));\n        } else {\n          obj.slice(1).map(function(fx) {\n            fx[0](fx[1], dispatch);\n          }, setState(obj[0]));\n        }\n      } else {\n        setState(obj);\n      }\n    };\n\n    var eventCb = function(event) {\n      dispatch(event.currentTarget.events[event.type], event);\n    };\n\n    var render = function() {\n      renderLock = false;\n      if (subs) sub = patchSub(sub, subs(state), dispatch);\n      if (view) {\n        element = patch(\n          container,\n          element,\n          oldNode,\n          (oldNode = view(state)),\n          eventCb\n        );\n      }\n    };\n\n    dispatch(props.init || {});\n  }\n\n  exports.Lazy = Lazy;\n  exports.h = h;\n  exports.app = app;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n//# sourceMappingURL=hyperapp.js.map\n"]}