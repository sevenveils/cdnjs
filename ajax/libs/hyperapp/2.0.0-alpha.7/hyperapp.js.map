{"version":3,"sources":["dist/hyperapp.js"],"names":["global","factory","exports","module","define","amd","self","hyperapp","this","XLINK_NS","EMPTY_OBJECT","EMPTY_ARRAY","map","isArray","Array","merge","a","b","target","i","resolved","Promise","resolve","defer","cb","then","setTimeout","updateProperty","element","name","lastValue","nextValue","eventProxy","isSvg","style","setProperty","createClass","names","tmp","out","type","length","len","hasOwnProperty","setAttribute","removeAttribute","slice","toLowerCase","events","removeEventListener","addEventListener","nullOrFalse","replace","removeAttributeNS","setAttributeNS","createElement","node","lifecycle","document","createTextNode","createElementNS","props","onCreate","push","children","appendChild","resolveNode","removeChildren","onDestroy","removeElement","parent","remove","removeChild","onRemove","getKey","key","patchElement","oldNode","newNode","nodeValue","newElement","insertBefore","savedNode","childNode","lastKey","lastProps","nextProps","isRecycled","onUpdate","updateElement","nextKey","lastChildren","lastChStart","lastChEnd","nextChildren","nextChStart","nextChEnd","lastKeyed","start","end","createKeyMap","nextKeyed","k","shouldUpdate","lazy","render","createVNode","createTextVNode","text","recycleChild","nodeType","recycleElement","nodeName","call","childNodes","patch","container","pop","isSameAction","patchSubs","sub","oldSub","dispatch","subs","oldSubs","shouldRestart","Lazy","h","rest","arguments","app","state","lastSub","view","subscriptions","stateLock","setState","newState","obj","fx","event","currentTarget","init"],"mappings":"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","sourcesContent":["(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (global = global || self, factory(global.hyperapp = {}));\n}(this, function (exports) { 'use strict';\n\n  var DEFAULT = 0;\n  var RECYCLED_NODE = 1;\n  var LAZY_NODE = 2;\n  var TEXT_NODE = 3;\n\n  var XLINK_NS = \"http://www.w3.org/1999/xlink\";\n  var SVG_NS = \"http://www.w3.org/2000/svg\";\n\n  var EMPTY_OBJECT = {};\n  var EMPTY_ARRAY = [];\n\n  var map = EMPTY_ARRAY.map;\n  var isArray = Array.isArray;\n\n  var merge = function(a, b) {\n    var target = {};\n\n    for (var i in a) target[i] = a[i];\n    for (var i in b) target[i] = b[i];\n\n    return target\n  };\n\n  var resolved = typeof Promise === \"function\" && Promise.resolve();\n\n  var defer = !resolved\n    ? setTimeout\n    : function(cb) {\n        return resolved.then(cb)\n      };\n\n  function createClass(names) {\n    var tmp;\n    var out = \"\";\n    var type = typeof names;\n\n    if (type === \"string\" || type === \"number\") return names || \"\"\n\n    if (isArray(names) && names.length > 0) {\n      for (var i = 0, len = names.length; i < len; i++) {\n        if ((tmp = createClass(names[i])) !== \"\") out += (out && \" \") + tmp;\n      }\n    } else {\n      for (var i in names) {\n        if (names.hasOwnProperty(i) && names[i]) out += (out && \" \") + i;\n      }\n    }\n\n    return out\n  }\n\n  var updateProperty = function(\n    element,\n    name,\n    lastValue,\n    nextValue,\n    eventProxy,\n    isSvg\n  ) {\n    if (name === \"key\") ; else if (name === \"style\") {\n      for (var i in merge(lastValue, nextValue)) {\n        var style = nextValue == null || nextValue[i] == null ? \"\" : nextValue[i];\n        if (i[0] === \"-\") {\n          element[name].setProperty(i, style);\n        } else {\n          element[name][i] = style;\n        }\n      }\n    } else if (name === \"class\") {\n      if ((nextValue = createClass(nextValue))) {\n        element.setAttribute(name, nextValue);\n      } else {\n        element.removeAttribute(name);\n      }\n    } else {\n      if (name[0] === \"o\" && name[1] === \"n\") {\n        name = name.slice(2).toLowerCase();\n\n        if (!element.events) element.events = {};\n\n        element.events[name] = nextValue;\n\n        if (nextValue == null) {\n          element.removeEventListener(name, eventProxy);\n        } else if (lastValue == null) {\n          element.addEventListener(name, eventProxy);\n        }\n      } else {\n        var nullOrFalse = nextValue == null || nextValue === false;\n\n        if (\n          name in element &&\n          name !== \"list\" &&\n          name !== \"draggable\" &&\n          name !== \"spellcheck\" &&\n          name !== \"translate\" &&\n          !isSvg\n        ) {\n          element[name] = nextValue == null ? \"\" : nextValue;\n          if (nullOrFalse) {\n            element.removeAttribute(name);\n          }\n        } else {\n          var ns = isSvg && name !== (name = name.replace(/^xlink:?/, \"\"));\n          if (ns) {\n            if (nullOrFalse) {\n              element.removeAttributeNS(XLINK_NS, name);\n            } else {\n              element.setAttributeNS(XLINK_NS, name, nextValue);\n            }\n          } else {\n            if (nullOrFalse) {\n              element.removeAttribute(name);\n            } else {\n              element.setAttribute(name, nextValue);\n            }\n          }\n        }\n      }\n    }\n  };\n\n  var createElement = function(node, lifecycle, eventProxy, isSvg) {\n    var element =\n      node.type === TEXT_NODE\n        ? document.createTextNode(node.name)\n        : (isSvg = isSvg || node.name === \"svg\")\n        ? document.createElementNS(SVG_NS, node.name)\n        : document.createElement(node.name);\n\n    var props = node.props;\n    if (props.onCreate) {\n      lifecycle.push(function() {\n        props.onCreate(element);\n      });\n    }\n\n    for (var i = 0, length = node.children.length; i < length; i++) {\n      element.appendChild(\n        createElement(\n          (node.children[i] = resolveNode(node.children[i])),\n          lifecycle,\n          eventProxy,\n          isSvg\n        )\n      );\n    }\n\n    for (var name in props) {\n      updateProperty(element, name, null, props[name], eventProxy, isSvg);\n    }\n\n    return (node.element = element)\n  };\n\n  var updateElement = function(\n    element,\n    lastProps,\n    nextProps,\n    lifecycle,\n    eventProxy,\n    isSvg,\n    isRecycled\n  ) {\n    for (var name in merge(lastProps, nextProps)) {\n      if (\n        (name === \"value\" || name === \"checked\"\n          ? element[name]\n          : lastProps[name]) !== nextProps[name]\n      ) {\n        updateProperty(\n          element,\n          name,\n          lastProps[name],\n          nextProps[name],\n          eventProxy,\n          isSvg\n        );\n      }\n    }\n\n    var cb = isRecycled ? nextProps.onCreate : nextProps.onUpdate;\n    if (cb != null) {\n      lifecycle.push(function() {\n        cb(element, lastProps);\n      });\n    }\n  };\n\n  var removeChildren = function(node) {\n    for (var i = 0, length = node.children.length; i < length; i++) {\n      removeChildren(node.children[i]);\n    }\n\n    var cb = node.props.onDestroy;\n    if (cb != null) {\n      cb(node.element);\n    }\n\n    return node.element\n  };\n\n  var removeElement = function(parent, node) {\n    var remove = function() {\n      parent.removeChild(removeChildren(node));\n    };\n\n    var cb = node.props && node.props.onRemove;\n    if (cb != null) {\n      cb(node.element, remove);\n    } else {\n      remove();\n    }\n  };\n\n  var getKey = function(node) {\n    return node == null ? null : node.key\n  };\n\n  var createKeyMap = function(children, start, end) {\n    var out = {};\n    var key;\n    var node;\n\n    for (; start <= end; start++) {\n      if ((key = (node = children[start]).key) != null) {\n        out[key] = node;\n      }\n    }\n\n    return out\n  };\n\n  var patchElement = function(\n    parent,\n    element,\n    oldNode,\n    newNode,\n    lifecycle,\n    eventProxy,\n    isSvg\n  ) {\n    if (newNode === oldNode) ; else if (\n      oldNode != null &&\n      oldNode.type === TEXT_NODE &&\n      newNode.type === TEXT_NODE\n    ) {\n      if (oldNode.name !== newNode.name) {\n        element.nodeValue = newNode.name;\n      }\n    } else if (oldNode == null || oldNode.name !== newNode.name) {\n      var newElement = parent.insertBefore(\n        createElement(\n          (newNode = resolveNode(newNode)),\n          lifecycle,\n          eventProxy,\n          isSvg\n        ),\n        element\n      );\n\n      if (oldNode != null) removeElement(parent, oldNode);\n\n      element = newElement;\n    } else {\n      updateElement(\n        element,\n        oldNode.props,\n        newNode.props,\n        lifecycle,\n        eventProxy,\n        (isSvg = isSvg || newNode.name === \"svg\"),\n        oldNode.type === RECYCLED_NODE\n      );\n\n      var savedNode;\n      var childNode;\n\n      var lastKey;\n      var lastChildren = oldNode.children;\n      var lastChStart = 0;\n      var lastChEnd = lastChildren.length - 1;\n\n      var nextKey;\n      var nextChildren = newNode.children;\n      var nextChStart = 0;\n      var nextChEnd = nextChildren.length - 1;\n\n      while (nextChStart <= nextChEnd && lastChStart <= lastChEnd) {\n        lastKey = getKey(lastChildren[lastChStart]);\n        nextKey = getKey(nextChildren[nextChStart]);\n\n        if (lastKey == null || lastKey !== nextKey) break\n\n        patchElement(\n          element,\n          lastChildren[lastChStart].element,\n          lastChildren[lastChStart],\n          (nextChildren[nextChStart] = resolveNode(\n            nextChildren[nextChStart],\n            lastChildren[lastChStart]\n          )),\n          lifecycle,\n          eventProxy,\n          isSvg\n        );\n\n        lastChStart++;\n        nextChStart++;\n      }\n\n      while (nextChStart <= nextChEnd && lastChStart <= lastChEnd) {\n        lastKey = getKey(lastChildren[lastChEnd]);\n        nextKey = getKey(nextChildren[nextChEnd]);\n\n        if (lastKey == null || lastKey !== nextKey) break\n\n        patchElement(\n          element,\n          lastChildren[lastChEnd].element,\n          lastChildren[lastChEnd],\n          (nextChildren[nextChEnd] = resolveNode(\n            nextChildren[nextChEnd],\n            lastChildren[lastChEnd]\n          )),\n          lifecycle,\n          eventProxy,\n          isSvg\n        );\n\n        lastChEnd--;\n        nextChEnd--;\n      }\n\n      if (lastChStart > lastChEnd) {\n        while (nextChStart <= nextChEnd) {\n          element.insertBefore(\n            createElement(\n              (nextChildren[nextChStart] = resolveNode(\n                nextChildren[nextChStart++]\n              )),\n              lifecycle,\n              eventProxy,\n              isSvg\n            ),\n            (childNode = lastChildren[lastChStart]) && childNode.element\n          );\n        }\n      } else if (nextChStart > nextChEnd) {\n        while (lastChStart <= lastChEnd) {\n          removeElement(element, lastChildren[lastChStart++]);\n        }\n      } else {\n        var lastKeyed = createKeyMap(lastChildren, lastChStart, lastChEnd);\n        var nextKeyed = {};\n\n        while (nextChStart <= nextChEnd) {\n          lastKey = getKey((childNode = lastChildren[lastChStart]));\n          nextKey = getKey(\n            (nextChildren[nextChStart] = resolveNode(\n              nextChildren[nextChStart],\n              childNode\n            ))\n          );\n\n          if (\n            nextKeyed[lastKey] ||\n            (nextKey != null && nextKey === getKey(lastChildren[lastChStart + 1]))\n          ) {\n            if (lastKey == null) {\n              removeElement(element, childNode);\n            }\n            lastChStart++;\n            continue\n          }\n\n          if (nextKey == null || oldNode.type === RECYCLED_NODE) {\n            if (lastKey == null) {\n              patchElement(\n                element,\n                childNode && childNode.element,\n                childNode,\n                nextChildren[nextChStart],\n                lifecycle,\n                eventProxy,\n                isSvg\n              );\n              nextChStart++;\n            }\n            lastChStart++;\n          } else {\n            if (lastKey === nextKey) {\n              patchElement(\n                element,\n                childNode.element,\n                childNode,\n                nextChildren[nextChStart],\n                lifecycle,\n                eventProxy,\n                isSvg\n              );\n              nextKeyed[nextKey] = true;\n              lastChStart++;\n            } else {\n              if ((savedNode = lastKeyed[nextKey]) != null) {\n                patchElement(\n                  element,\n                  element.insertBefore(\n                    savedNode.element,\n                    childNode && childNode.element\n                  ),\n                  savedNode,\n                  nextChildren[nextChStart],\n                  lifecycle,\n                  eventProxy,\n                  isSvg\n                );\n                nextKeyed[nextKey] = true;\n              } else {\n                patchElement(\n                  element,\n                  childNode && childNode.element,\n                  null,\n                  nextChildren[nextChStart],\n                  lifecycle,\n                  eventProxy,\n                  isSvg\n                );\n              }\n            }\n            nextChStart++;\n          }\n        }\n\n        while (lastChStart <= lastChEnd) {\n          if (getKey((childNode = lastChildren[lastChStart++])) == null) {\n            removeElement(element, childNode);\n          }\n        }\n\n        for (var key in lastKeyed) {\n          if (nextKeyed[key] == null) {\n            removeElement(element, lastKeyed[key]);\n          }\n        }\n      }\n    }\n\n    return (newNode.element = element)\n  };\n\n  var shouldUpdate = function(a, b) {\n    for (var k in a) if (a[k] !== b[k]) return true\n    for (var k in b) if (a[k] !== b[k]) return true\n  };\n\n  var resolveNode = function(newNode, oldNode) {\n    return newNode.type === LAZY_NODE\n      ? !oldNode || shouldUpdate(newNode.lazy, oldNode.lazy)\n        ? newNode.render()\n        : oldNode\n      : newNode\n  };\n\n  var createVNode = function(name, props, children, element, key, type) {\n    return {\n      name: name,\n      props: props,\n      children: children,\n      element: element,\n      key: key,\n      type: type\n    }\n  };\n\n  var createTextVNode = function(text, element) {\n    return createVNode(text, EMPTY_OBJECT, EMPTY_ARRAY, element, null, TEXT_NODE)\n  };\n\n  var recycleChild = function(element) {\n    return element.nodeType === TEXT_NODE\n      ? createTextVNode(element.nodeValue, element)\n      : recycleElement(element)\n  };\n\n  var recycleElement = function(element) {\n    return createVNode(\n      element.nodeName.toLowerCase(),\n      EMPTY_OBJECT,\n      map.call(element.childNodes, recycleChild),\n      element,\n      null,\n      RECYCLED_NODE\n    )\n  };\n\n  var patch = function(container, element, oldNode, newNode, eventProxy) {\n    var lifecycle = [];\n\n    element = patchElement(\n      container,\n      element,\n      oldNode,\n      newNode,\n      lifecycle,\n      eventProxy\n    );\n\n    while (lifecycle.length > 0) lifecycle.pop()();\n\n    return element\n  };\n\n  var Lazy = function(props) {\n    return {\n      type: LAZY_NODE,\n      key: props.key,\n      lazy: props,\n      render: function() {\n        var node = props.render(props);\n        node.lazy = props;\n        return node\n      }\n    }\n  };\n\n  var h = function(name, props) {\n    var node;\n    var rest = [];\n    var children = [];\n    var length = arguments.length;\n\n    while (length-- > 2) rest.push(arguments[length]);\n\n    if ((props = props == null ? {} : props).children != null) {\n      if (rest.length <= 0) {\n        rest.push(props.children);\n      }\n      delete props.children;\n    }\n\n    while (rest.length > 0) {\n      if (isArray((node = rest.pop()))) {\n        for (length = node.length; length-- > 0; ) {\n          rest.push(node[length]);\n        }\n      } else if (node === false || node === true || node == null) ; else {\n        children.push(typeof node === \"object\" ? node : createTextVNode(node));\n      }\n    }\n\n    return typeof name === \"function\"\n      ? name(props, (props.children = children))\n      : createVNode(name, props, children, null, props.key, DEFAULT)\n  };\n\n  var isSameAction = function(a, b) {\n    return isArray(a) && isArray(b) && typeof a[0] === \"function\" && a[0] === b[0]\n  };\n\n  var shouldRestart = function(a, b) {\n    for (var k in merge(a, b)) {\n      if (a[k] === b[k] || isSameAction(a[k], b[k])) b[k] = a[k];\n      else return true\n    }\n  };\n\n  var patchSubs = function(sub, oldSub, dispatch) {\n    if (\n      (sub && (!sub[0] || isArray(sub[0]))) ||\n      (oldSub && (!oldSub[0] || isArray(oldSub[0])))\n    ) {\n      var out = [];\n      var subs = sub ? sub : [sub];\n      var oldSubs = oldSub ? oldSub : [oldSub];\n\n      for (var i = 0; i < subs.length || i < oldSubs.length; i++) {\n        out.push(patchSubs(subs[i], oldSubs[i], dispatch));\n      }\n\n      return out\n    }\n\n    return sub\n      ? !oldSub || sub[0] !== oldSub[0] || shouldRestart(sub[1], oldSub[1])\n        ? [sub[0], sub[1], sub[0](sub[1], dispatch), oldSub && oldSub[2]()]\n        : oldSub\n      : oldSub && oldSub[2]()\n  };\n\n  function app(props) {\n    var state;\n    var view = props.view;\n    var subs = props.subscriptions;\n    var container = props.container;\n    var element = container && container.children[0];\n    var oldNode = element && recycleElement(element);\n    var stateLock = false;\n    var lastSub;\n\n    var setState = function(newState) {\n      if (state !== newState) {\n        state = newState;\n        if (!stateLock) {\n          stateLock = true;\n          defer(render);\n        }\n      }\n    };\n\n    var dispatch = function(obj, props) {\n      if (obj == null) ; else if (typeof obj === \"function\") {\n        dispatch(obj(state, props));\n      } else if (isArray(obj)) {\n        if (typeof obj[0] === \"function\") {\n          dispatch(obj[0](state, obj[1], props));\n        } else {\n          obj.slice(1).map(function(fx) {\n            fx[0](fx[1], dispatch);\n          }, setState(obj[0]));\n        }\n      } else {\n        setState(obj);\n      }\n    };\n\n    var eventProxy = function(event) {\n      dispatch(event.currentTarget.events[event.type], event);\n    };\n\n    var render = function() {\n      stateLock = false;\n      if (subs) lastSub = patchSubs(subs(state), lastSub, dispatch);\n      if (view) {\n        element = patch(\n          container,\n          element,\n          oldNode,\n          (oldNode = view(state)),\n          eventProxy\n        );\n      }\n    };\n\n    dispatch(props.init || {});\n  }\n\n  exports.Lazy = Lazy;\n  exports.h = h;\n  exports.app = app;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n//# sourceMappingURL=hyperapp.js.map\n"]}