{"version":3,"sources":["webpack://pnp.sp-addinhelpers/webpack/universalModuleDefinition","webpack://pnp.sp-addinhelpers/webpack/bootstrap","webpack://pnp.sp-addinhelpers/./build/packages-es5/common/src/adalclient.js","webpack://pnp.sp-addinhelpers/./build/packages-es5/common/src/collections.js","webpack://pnp.sp-addinhelpers/./build/packages-es5/common/src/libconfig.js","webpack://pnp.sp-addinhelpers/./build/packages-es5/common/src/storage.js","webpack://pnp.sp-addinhelpers/./build/packages-es5/common/index.js","webpack://pnp.sp-addinhelpers/./node_modules/tslib/tslib.es6.js","webpack://pnp.sp-addinhelpers/./build/packages-es5/common/src/util.js","webpack://pnp.sp-addinhelpers/./build/packages-es5/sp/src/config/splibconfig.js","webpack://pnp.sp-addinhelpers/./build/packages-es5/sp/src/utils/toabsoluteurl.js","webpack://pnp.sp-addinhelpers/./build/packages-es5/common/src/netutil.js","webpack://pnp.sp-addinhelpers/(webpack)/buildin/global.js","webpack://pnp.sp-addinhelpers/./node_modules/adal-angular/dist/adal.min.js","webpack://pnp.sp-addinhelpers/./build/packages-es5/logging/src/loglevel.js","webpack://pnp.sp-addinhelpers/./build/packages-es5/sp-addinhelpers/src/sprequestexecutorclient.js","webpack://pnp.sp-addinhelpers/./build/packages-es5/logging/src/logger.js","webpack://pnp.sp-addinhelpers/./build/packages-es5/logging/src/listeners.js","webpack://pnp.sp-addinhelpers/./build/packages-es5/odata/src/caching.js","webpack://pnp.sp-addinhelpers/./build/packages-es5/odata/src/parsers.js","webpack://pnp.sp-addinhelpers/./build/packages-es5/odata/src/pipeline.js","webpack://pnp.sp-addinhelpers/./build/packages-es5/odata/src/queryable.js","webpack://pnp.sp-addinhelpers/./build/packages-es5/odata/src/odatabatch.js","webpack://pnp.sp-addinhelpers/./build/packages-es5/sp/src/utils/extractweburl.js","webpack://pnp.sp-addinhelpers/./build/packages-es5/sp/src/odata.js","webpack://pnp.sp-addinhelpers/./build/packages-es5/sp/src/net/digestcache.js","webpack://pnp.sp-addinhelpers/./build/packages-es5/sp/src/net/sphttpclient.js","webpack://pnp.sp-addinhelpers/./build/packages-es5/sp/src/utils/metadata.js","webpack://pnp.sp-addinhelpers/./build/packages-es5/sp/src/sharepointqueryable.js","webpack://pnp.sp-addinhelpers/./build/packages-es5/sp/src/siteusers.js","webpack://pnp.sp-addinhelpers/./build/packages-es5/sp/src/sitegroups.js","webpack://pnp.sp-addinhelpers/./build/packages-es5/sp/src/types.js","webpack://pnp.sp-addinhelpers/./build/packages-es5/sp/src/roles.js","webpack://pnp.sp-addinhelpers/./build/packages-es5/sp/src/sharepointqueryablesecurable.js","webpack://pnp.sp-addinhelpers/./build/packages-es5/sp/src/files.js","webpack://pnp.sp-addinhelpers/./build/packages-es5/sp/src/sharepointqueryableshareable.js","webpack://pnp.sp-addinhelpers/./build/packages-es5/sp/src/webparts.js","webpack://pnp.sp-addinhelpers/./build/packages-es5/sp/src/folders.js","webpack://pnp.sp-addinhelpers/./build/packages-es5/sp/src/contenttypes.js","webpack://pnp.sp-addinhelpers/./build/packages-es5/sp/src/attachmentfiles.js","webpack://pnp.sp-addinhelpers/./build/packages-es5/sp/src/views.js","webpack://pnp.sp-addinhelpers/./build/packages-es5/sp/src/fields.js","webpack://pnp.sp-addinhelpers/./build/packages-es5/sp/src/forms.js","webpack://pnp.sp-addinhelpers/./build/packages-es5/sp/src/subscriptions.js","webpack://pnp.sp-addinhelpers/./build/packages-es5/sp/src/usercustomactions.js","webpack://pnp.sp-addinhelpers/./build/packages-es5/sp/src/lists.js","webpack://pnp.sp-addinhelpers/./build/packages-es5/sp/src/comments.js","webpack://pnp.sp-addinhelpers/./build/packages-es5/sp/src/items.js","webpack://pnp.sp-addinhelpers/./build/packages-es5/sp/src/appcatalog.js","webpack://pnp.sp-addinhelpers/./build/packages-es5/sp/src/clientsidepages.js","webpack://pnp.sp-addinhelpers/./build/packages-es5/sp/src/batch.js","webpack://pnp.sp-addinhelpers/./build/packages-es5/sp/src/features.js","webpack://pnp.sp-addinhelpers/./build/packages-es5/sp/src/site.js","webpack://pnp.sp-addinhelpers/./build/packages-es5/sp/src/navigation.js","webpack://pnp.sp-addinhelpers/./build/packages-es5/sp/src/relateditems.js","webpack://pnp.sp-addinhelpers/./build/packages-es5/sp/src/regionalsettings.js","webpack://pnp.sp-addinhelpers/./build/packages-es5/sp/src/sitedesigns.js","webpack://pnp.sp-addinhelpers/./build/packages-es5/sp/src/sitescripts.js","webpack://pnp.sp-addinhelpers/./build/packages-es5/sp/src/webs.js","webpack://pnp.sp-addinhelpers/./build/packages-es5/sp/src/search.js","webpack://pnp.sp-addinhelpers/./build/packages-es5/sp/src/social.js","webpack://pnp.sp-addinhelpers/./build/packages-es5/sp/src/searchsuggest.js","webpack://pnp.sp-addinhelpers/./build/packages-es5/sp/src/userprofiles.js","webpack://pnp.sp-addinhelpers/./build/packages-es5/sp/src/utilities.js","webpack://pnp.sp-addinhelpers/./build/packages-es5/sp/src/hubsites.js","webpack://pnp.sp-addinhelpers/./build/packages-es5/sp/src/rest.js","webpack://pnp.sp-addinhelpers/./build/packages-es5/sp-addinhelpers/src/sprestaddin.js","webpack://pnp.sp-addinhelpers/./build/packages-es5/sp-addinhelpers/index.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","getResource","url","parser","document","createElement","href","protocol","hostname","_super","AdalClient","clientId","tenant","redirectUri","_this","this","_displayCallback","_loginPromise","tslib_es6","fromSPFxContext","spfxContext","adalclient_SPFxAdalClient","fetch","options","util","Error","getToken","then","token","resource","Promise","resolve","reject","ensureAuthContext","_","login","_authContext","acquireToken","message","catch","adal_min","displayCall","navigateToLoginRequestUrl","getCachedUser","popupWindow","open","focus","pollTimer","setInterval","closed","undefined","clearInterval","URL","indexOf","handleWindowCallback","location","hash","close","e","_loginInProgress","netutil","SPFxAdalClient","context","aadTokenProviderFactory","getTokenProvider","provider","objectEntries","entries","keys","map","k","RuntimeConfig","RuntimeConfigImpl","_v","Map","set","extend","config","target","maps","_i","arguments","length","forEach","v","mergeMaps","configurable","storage_PnPClientStorageWrapper","PnPClientStorageWrapper","store","defaultTimeoutMinutes","enabled","test","enableCacheExpiration","cacheExpirationHandler","getItem","persistable","JSON","parse","Date","expiration","delete","put","expire","setItem","createPersistable","removeItem","getOrPut","deleteExpired","defaultTimeout","defaultCachingTimeoutSeconds","pnp","setTimeout","cacheExpirationIntervalMilliseconds","console","error","MemoryStorage","_store","size","clear","index","Array","from","data","PnPClientStorage","_local","_session","getStore","localStorage","sessionStorage","__webpack_exports__","__extends","__decorate","__awaiter","__generator","extendStatics","b","setPrototypeOf","__proto__","__","constructor","decorators","desc","getOwnPropertyDescriptor","Reflect","decorate","thisArg","_arguments","P","generator","fulfilled","step","next","rejected","result","done","apply","body","f","y","g","label","sent","trys","ops","verb","throw","return","iterator","op","TypeError","pop","push","getCtxCallback","method","params","dateAdd","date","interval","units","ret","toLowerCase","setFullYear","getFullYear","setMonth","getMonth","setDate","getDate","setTime","getTime","combine","paths","filter","path","stringIsNullOrEmpty","replace","join","getGUID","now","performance","Math","random","floor","toString","isFunc","cf","objectDefinedNotNull","obj","isArray","array","source","noOverwrite","check","getOwnPropertyNames","reduce","isUrlAbsolute","jsS","stringify","hOP","getHashCode","charCodeAt","setup","SPRuntimeConfig","_pnp_common__WEBPACK_IMPORTED_MODULE_0__","SPRuntimeConfigImpl","spPart","headers","baseUrl","pageContext","web","absoluteUrl","fetchClientFactory","global","toAbsoluteUrl","_config_splibconfig__WEBPACK_IMPORTED_MODULE_1__","candidateUrl","_spPageContextInfo","webAbsoluteUrl","webServerRelativeUrl","baseUrl_1","substr","mergeHeaders","mergeOptions","FetchClient","BearerTokenFetchClient","tslib__WEBPACK_IMPORTED_MODULE_0__","_util__WEBPACK_IMPORTED_MODULE_1__","Request","append","_token","Headers","Function","AuthenticationContext","a","REQUEST_TYPE","LOGIN","RENEW_TOKEN","UNKNOWN","RESPONSE_TYPE","ID_TOKEN_TOKEN","TOKEN","CONSTANTS","ACCESS_TOKEN","EXPIRES_IN","ID_TOKEN","ERROR_DESCRIPTION","SESSION_STATE","ERROR","STORAGE","TOKEN_KEYS","ACCESS_TOKEN_KEY","EXPIRATION_KEY","STATE_LOGIN","STATE_RENEW","NONCE_IDTOKEN","USERNAME","IDTOKEN","LOGIN_REQUEST","LOGIN_ERROR","RENEW_STATUS","ANGULAR_LOGIN_REQUEST","RESOURCE_DELIMETER","CACHE_DELIMETER","LOADFRAME_TIMEOUT","TOKEN_RENEW_STATUS_CANCELED","TOKEN_RENEW_STATUS_COMPLETED","TOKEN_RENEW_STATUS_IN_PROGRESS","LOGGING_LEVEL","WARN","INFO","VERBOSE","LEVEL_STRING_MAP","0","1","2","3","POPUP_WIDTH","POPUP_HEIGHT","_singletonInstance","instance","callback","popUp","isAngular","_user","_activeRenewals","_acquireTokenInProgress","_renewStates","_callBackMappedToRenewStates","_callBacksMappedToRenewStates","_openedWindows","_requestType","_adalInstance","_cloneConfig","loginResource","split","postLogoutRedirectUri","anonymousEndpoints","loadFrameTimeout","Logging","piiLoggingEnabled","level","log","info","_guid","state","_idTokenNonce","_getItem","_saveItem","verbose","_getNavigateUrl","encodeURIComponent","registerCallback","_loginPopup","promptUser","_openPopup","screenLeft","screenX","screenTop","screenY","innerWidth","documentElement","clientWidth","h","innerHeight","clientHeight","j","warn","_handlePopupError","_broadcast","encodeURI","bubbles","cancelable","detail","createEvent","initCustomEvent","CustomEvent","Event","dispatchEvent","loginInProgress","_hasResource","_isEmpty","getCachedToken","expireOffsetSeconds","_now","_createUser","_renewToken","_addAdalFrame","_urlRemoveQueryStringParameter","_addHintParameters","verbosePii","src","_loadFrameTimeout","_renewIdToken","_urlContainsQueryStringParameter","RegExp","_loadFrame","extraQueryParameter","acquireTokenPopup","acquireTokenRedirect","infoPii","clearCache","clearCacheForResource","logOut","logOutUri","getUser","profile","sid","upn","_extractIdToken","aud","userName","email","_getHash","substring","isCallback","_deserialize","getLoginError","getRequestInfo","valid","parameters","stateMatch","stateResponse","requestType","_matchState","parent","_matchNonce","nonce","_getResourceFromState","saveTokenFromHash","error_description","_expiresIn","exp","getResourceForEndpoint","endpoints","_getHostFromUri","String","opener","_serialize","_addLibMetadata","_decodeJwt","JWSPayload","_base64DecodeStringUrlSafe","atob","decodeURIComponent","escape","_decode","charAt","fromCharCode","exec","header","JWSSig","_convertUrlSafeToRegularBase64EncodedString","slice","correlationId","_decimalToHex","crypto","msCrypto","getRandomValues","Uint8Array","parseInt","round","getElementById","opera","navigator","userAgent","setAttribute","style","visibility","position","width","height","borderWidth","getElementsByTagName","appendChild","insertAdjacentHTML","frames","cacheLocation","_supportsLocalStorage","_supportsSessionStorage","_libVersion","toUTCString","stack","errorPii","warnPii","inject","LogLevel","sprequestexecutorclient_SPRequestExecutorClient","SPRequestExecutorClient","convertToResponse","spResponse","responseHeaders","statusCode","Response","status","statusText","SP","RequestExecutor","temp","addinWebUrl","executor","requestOptions","success","response","common","binaryStringRequestBody","executeAsync","Logger","activeLogLevel","_instance","LoggerImpl","subscribe","listeners","listener","clearSubscribers","count","write","writeJSON","json","entry","err","subscribers","subscriber","ConsoleListener","msg","format","FunctionListener","caching_CachingOptions","CachingOptions","storeName","defaultCachingStore","storage","local","session","CachingParserWrapper","cacheOptions","cacheData","parsers_HttpRequestError","HttpRequestError","isHttpRequestError","init","clone","text","parsers_ODataParserBase","ODataParserBase","rawJson","handleError","parseImpl","has","parseFloat","txt","parseODataJSON","ok","results","parsers_ODataDefaultParser","ODataDefaultParser","parsers_TextParser","TextParser","parsers_BlobParser","BlobParser","blob","parsers_JSONParser","JSONParser","parsers_BufferParser","BufferParser","arrayBuffer","buffer","LambdaParser","setResult","hasResult","pipeline","shift","pipe","requestId","promise","ctx","returnResult","isBatched","batch","addResolveBatchDependency","requestPipelineMethod","alwaysRun","propertyKey","descriptor","args","pipeline_PipelineMethods","PipelineMethods","logStart","requestAbsoluteUrl","caching","isCached","cachingOptions","batchDependency","hydrate","send","add","batchId","client","clientFactory","opts","logEnd","queryable_ODataQueryable","ODataQueryable","_batch","_batchDependency","inBatch","toUrl","_url","getCore","postCore","patchCore","deleteCore","putCore","reqImpl","hasBatch","addBatchDependency","addDependency","_clone","cloneSettings","includeBatch","Queryable","_query","_options","_parentUrl","_useCaching","_cachingOptions","_cloneParentWasCaching","_cloneParentCacheOptions","_requestPipeline","concat","pathPart","configure","configureFrom","usingCaching","globalCacheDisable","withPipeline","getRequestPipeline","toRequestContext","_0","odatabatch_ODataBatch","ODataBatch","_batchId","_reqs","_deps","_rDeps","id","toUpperCase","resolver","execute","all","executeImpl","extractWebUrl","odataUrlFrom","candidate","parts","__metadata","uri","odata_SPODataEntityParserImpl","SPODataEntityParserImpl","SPODataEntityArrayParserImpl","CachedDigest","digests","digestcache_DigestCache","DigestCache","_httpClient","_digests","getDigest","webUrl","cachedDigest","fetchRaw","cache","credentials","Accept","Content-Type","splibconfig","GetContextWebInformation","newCachedDigest","FormDigestValue","seconds","FormDigestTimeoutSeconds","sphttpclient_SPHttpClient","SPHttpClient","_impl","_digestCache","digest","rawHeaders","retry","setRetry","delay","attempts","retryCount","retryContext","post","patch","metadata","type","sharepointqueryable_SharePointQueryable","SharePointQueryable","_forceCaching","lastIndexOf","query","as","toUrlAndQuery","aliasedParams","match","labelName","char","select","selects","expand","expands","getParent","parentUrl","additionalPath","dependencyDispose","toabsoluteurl","sharepointqueryable_SharePointQueryableCollection","SharePointQueryableCollection","orderBy","ascending","skip","top","sharepointqueryable_SharePointQueryableInstance","SharePointQueryableInstance","_update","mapper","props","X-HTTP-Method","_delete","_deleteWithETag","eTag","IF-Match","defaultPath","class_1","PrincipalType","siteusers_SiteUsers","SiteUsers","SiteUsers_1","getById","siteusers_SiteUser","getByEmail","getByLoginName","loginName","su","removeById","removeByLoginName","LoginName","siteusers_UserBase","UserBase","sitegroups_SiteGroups","SiteUser","update","user","siteusers_CurrentUser","CurrentUser","ControlMode","FieldTypes","DateTimeFieldFormatType","DateTimeFieldFriendlyFormatType","AddFieldOptions","CalendarType","UrlFieldFormatType","PermissionKind","types_PrincipalType","PrincipalSource","RoleType","PageType","SharingLinkKind","SharingRole","SharingOperationStatusCode","SPSharedObjectType","SharingDomainRestrictionMode","RenderListDataOptions","FieldUserSelectionMode","ChoiceFieldFormatType","UrlZone","SiteGroups","SiteGroups_1","sg","sitegroups_SiteGroup","properties","postBody","group","Id","getByName","groupName","SiteGroup","retGroup","roles_RoleAssignments","RoleAssignments","RoleAssignments_1","ra","roles_RoleAssignment","principalId","roleDefId","remove","RoleAssignment","roles_RoleDefinitionBindings","roles_RoleDefinitions","RoleDefinitions","roles_RoleDefinition","getByType","roleTypeKind","description","order","basePermissions","BasePermissions","High","Low","Description","Name","Order","definition","RoleDefinition","retDef","RoleDefinitionBindings","CheckinType","WebPartsPersonalizationScope","MoveOperations","TemplateFileType","sharepointqueryablesecurable_SharePointQueryableSecurable","SharePointQueryableSecurable","getUserEffectivePermissions","q","GetUserEffectivePermissions","getCurrentUserEffectivePermissions","breakRoleInheritance","copyRoleAssignments","clearSubscopes","resetRoleInheritance","userHasPermissions","permission","perms","hasPermissions","currentUserHasPermissions","perm","FullMask","num","sharepointqueryableshareable_SharePointQueryableShareable","SharePointQueryableShareable","getShareLink","kind","expString","toISOString","request","createLink","emailData","settings","linkKind","shareWith","loginNames","role","requireSignin","propagateAcl","userStr","Key","roleFilter","Edit","Contributor","Reader","def","includeAnonymousLinkInEmail","peoplePickerInput","roleValue","useSimplifiedRoles","emailBody","emailSubject","subject","sendEmail","shareObject","bypass","sendShareObjectRequest","getRoleValue","unshareObjectWeb","checkPermissions","recipients","getSharingInformation","getObjectSharingSettings","unshareObject","deleteLinkByKind","unshareLink","shareId","Guest","getShareObjectWeb","sharepointqueryableshareable_SharePointQueryableShareableWeb","SharePointQueryableShareableWeb","View","dependency","shareObjectRaw","sharepointqueryableshareable_SharePointQueryableShareableItem","SharePointQueryableShareableItem","OrganizationView","checkSharingPermissions","unshare","deleteSharingLinkByKind","sharepointqueryableshareable_FileFolderShared","FileFolderShared","getShareable","shareable","sharepointqueryableshareable_SharePointQueryableShareableFile","SharePointQueryableShareableFile","sharepointqueryableshareable_SharePointQueryableShareableFolder","SharePointQueryableShareableFolder","shareEverything","webparts_LimitedWebPartManager","LimitedWebPartManager","webparts_WebPartDefinitions","export","webPartId","import","xml","webPartXml","WebPartDefinitions","webparts_WebPartDefinition","getByControlId","WebPartDefinition","webparts_WebPart","saveChanges","moveTo","zoneId","zoneIndex","WebPart","folders_Folders","Folders","Folders_1","folders_Folder","folder","Folder","files_Files","recycle","listItemAllFields","items_Item","destUrl","_a","srcUrl","ServerRelativeUrl","webBaseUrl","hostUrl","methodUrl","contenttypes_ContentTypes","ContentTypes","ContentTypes_1","addAvailableContentType","contentTypeId","contentType","ct","contenttypes_ContentType","additionalSettings","assign","Group","StringValue","ContentType","contenttypes_FieldLinks","FieldLinks","fl","contenttypes_FieldLink","FieldLink","attachmentfiles_AttachmentFiles","AttachmentFiles","AttachmentFiles_1","attachmentfiles_AttachmentFile","content","file","addMultiple","files","chain","deleteMultiple","recycleMultiple","AttachmentFile","getText","getParsed","getBlob","getBuffer","getJSON","setContent","views_Views","Views","Views_1","views_View","getByTitle","title","personalView","PersonalView","Title","view","views_ViewFields","renderAsHtml","setViewXml","viewXml","ViewFields","ViewFields_1","getSchemaXml","fieldTitleOrInternalName","move","fieldInternalName","field","removeAll","fields_Fields","Fields","Fields_1","fields_Field","getByInternalNameOrTitle","createFieldAsXml","SchemaXml","fieldType","addText","maxLength","FieldTypeKind","MaxLength","addCalculated","formula","dateFormat","outputType","Text","DateFormat","Formula","OutputType","addDateTime","displayFormat","calendarType","friendlyDisplayFormat","DateOnly","Gregorian","Unspecified","DateTimeCalendarType","DisplayFormat","FriendlyDisplayFormat","addNumber","minValue","maxValue","MinimumValue","MaximumValue","addCurrency","currencyLocalId","CurrencyLocaleId","addMultilineText","numberOfLines","richText","restrictedMode","appendOnly","allowHyperlink","AllowHyperlink","AppendOnly","NumberOfLines","RestrictedMode","RichText","addUrl","Hyperlink","addUser","selectionMode","SelectionMode","addLookup","lookupListId","lookupFieldName","LookupFieldName","LookupListId","addChoice","choices","fillIn","Dropdown","Choices","EditFormat","FillInChoice","addMultiChoice","addBoolean","addDependentLookupField","displayName","primaryLookupFieldId","showField","addLocation","Field","setShowInDisplayForm","show","setShowInEditForm","setShowInNewForm","forms_Forms","Forms","forms_Form","Form","subscriptions_Subscriptions","Subscriptions","subscriptionId","subscriptions_Subscription","notificationUrl","expirationDate","clientState","expirationDateTime","subscription","Subscription","usercustomactions_UserCustomActions","UserCustomActions","UserCustomActions_1","uca","usercustomactions_UserCustomAction","action","UserCustomAction","lists_Lists","Lists","Lists_1","list","lists_List","template","enableContentTypes","addSettings","AllowContentTypes","BaseTemplate","ContentTypesEnabled","ensure","addOrUpdateSettings","created","ensureSiteAssetsLibrary","ensureSitePagesLibrary","List","items_Items","getView","viewId","retList","getChanges","getItemsByCAMLQuery","getListItemChangesSinceToken","Recycle","renderListData","RenderListData","renderListDataAsStream","overrideParameters","renderListFormData","itemId","formId","RenderListFormData","reserveListItemId","ReserveListItemId","getListItemEntityTypeFullName","ListItemEntityTypeFullName","addValidateUpdateItemUsingPath","formValues","decodedUrl","bNewDocumentUpdate","checkInComment","listItemCreateInfo","FolderPath","DecodedUrl","res","AddValidateUpdateItemUsingPath","getSiteScript","rootFolder","absoluteListUrl","sitescripts_SiteScripts","getSiteScriptFromList","comments_Comments","Comments","Comments_1","comments_Comment","Comment","comments_Replies","like","unlike","Replies","Replies_1","Items","Items_1","getItemByStringId","stringId","reverse","getPaged","items_PagedItemCollectionParser","getAll","requestSize","acceptHeader","items","itemsCollector","gatherer","last","hasNext","getNext","listItemEntityTypeFullName","removeDependency","ensureListItemEntityTypeName","listItemEntityType","item","candidatelistItemEntityTypeFullName","Item","files_File","items_ItemVersions","items_ItemUpdatedParser","getLikedBy","getWopiFrameUrl","GetWOPIFrameUrl","validateUpdateListItem","newDocumentUpdate","getLikedByInformation","ItemVersions","versionId","items_ItemVersion","ItemVersion","PagedItemCollection","nextUrl","innerParser","PagedItemCollectionParser","_parent","__next","ItemUpdatedParser","odata.etag","Files","Files_1","shouldOverWrite","addChunked","progress","chunkSize","setContentChunked","addTemplateFile","fileUrl","templateFileType","File","files_Versions","approve","comment","cancelUpload","uploadId","checkin","checkinType","Major","checkout","copyTo","deny","getLimitedWebPartManager","scope","Shared","moveOperations","Overwrite","publish","undoCheckout","unpublish","binaryStringResponseBody","fileSize","blockCount","blockNumber","currentPointer","stage","totalBlocks","startUpload","_loop_1","pointer","continueUpload","finishUpload","fragment","StartUpload","fileOffset","ContinueUpload","Versions","Versions_1","files_Version","deleteAll","deleteById","recycleByID","deleteByLabel","recycleByLabel","restoreByLabel","Version","PromotedState","appcatalog_AppCatalog","AppCatalog","getAppById","appcatalog_App","filename","catalog","App","deploy","skipFeatureDeployment","retract","install","uninstall","upgrade","batch_SPBatch","SPBatch","ParseResponse","responses","statusRegExp","lines","line","trim","requests","absoluteRequestUrl","batchBody","currentChangeSetId","reqInfo","castHeaders","batchOptions","features_Features","Features","Features_1","force","featdefScope","featureId","feature","features_Feature","Feature","deactivate","DefinitionId","site_Site","Site","Site_1","webs_Web","getRootWeb","rootWeb","Url","getContextInfo","SupportedSchemaVersions","getDocumentLibraries","absoluteWebUrl","GetDocumentLibraries","getWebUrlFromPageUrl","absolutePageUrl","GetWebUrlFromPageUrl","site","siteId","createBatch","openWebById","webId","fromUrl","joinHubSite","registerHubSite","unRegisterHubSite","createCommunicationSite","lcid","shareByEmailEnabled","classification","siteDesignId","hubSiteId","owner","Classification","HubSiteId","Lcid","Owner","ShareByEmailEnabled","SiteDesignId","WebTemplate","WebTemplateExtensionId","createModernTeamSite","alias","isPublic","owners","optionalParams","CreationOptions","Owners","navigation_NavigationNodes","NavigationNodes","node","navigation_NavigationNode","visible","IsVisible","moveAfter","nodeId","previousNodeId","NavigationNode","navigation_Navigation","Navigation","navigation_NavigationService","NavigationService","getMenuState","menuNodeKey","depth","mapProviderName","customProperties","getMenuNodeKey","currentUrl","relateditems_RelatedItemManagerImpl","RelatedItemManagerImpl","RelatedItemManagerImpl_1","FromUrl","getRelatedItems","sourceListName","sourceItemId","SourceItemID","SourceListName","getPageOneRelatedItems","addSingleLink","sourceWebUrl","targetListName","targetItemID","targetWebUrl","tryAddReverseLink","SourceWebUrl","TargetItemID","TargetListName","TargetWebUrl","TryAddReverseLink","addSingleLinkToUrl","targetItemUrl","TargetItemUrl","addSingleLinkFromUrl","sourceItemUrl","targetItemId","SourceItemUrl","deleteSingleLink","tryDeleteReverseLink","TryDeleteReverseLink","regionalsettings_RegionalSettings","RegionalSettings","regionalsettings_InstalledLanguages","regionalsettings_TimeZone","regionalsettings_TimeZones","InstalledLanguages","TimeZone","TimeZone_1","utcToLocalTime","utcTime","dateIsoString","UTCToLocalTime","localTimeToUTC","localTime","getTimezoneOffset","LocalTimeToUTC","TimeZones","TimeZones_1","sitedesigns_SiteDesigns","SiteDesigns","methodName","getBaseUrl","createSiteDesign","creationInfo","applySiteDesign","getSiteDesigns","getSiteDesignMetadata","updateSiteDesign","updateInfo","deleteSiteDesign","getSiteDesignRights","grantSiteDesignRights","principalNames","grantedRights","revokeSiteDesignRights","addSiteDesignTask","addSiteDesignTaskToCurrentWeb","getSiteDesignTask","task","taskId","getSiteDesignRun","getSiteDesignRunStatus","runId","SiteScripts","getSiteScripts","createSiteScript","getSiteScriptMetadata","deleteSiteScript","updateSiteScript","siteScriptUpdateInfo","Content","listUrl","getSiteScriptFromWeb","extractInfo","webs_Webs","Webs","Webs_1","language","inheritPermissions","Language","UseSamePermissionsAsParentSite","webs_WebInfos","WebInfos","Web","Web_1","getParentWeb","ParentWeb","getSubwebsFilteredForCurrentUser","nWebTemplateFilter","nConfigurationFilter","getFolderById","uniqueId","getFolderByServerRelativeUrl","folderRelativeUrl","getFolderByServerRelativePath","getFileById","getFileByServerRelativeUrl","fileRelativeUrl","getFileByServerRelativePath","getList","listRelativeUrl","applyTheme","colorPaletteUrl","fontSchemeUrl","backgroundImageUrl","shareGenerated","applyWebTemplate","ensureUser","logonName","availableWebTemplates","includeCrossLanugage","getCatalog","getUserById","mapToIcon","progId","getStorageEntity","setStorageEntity","comments","removeStorageEntity","getAppCatalog","getSiteCollectionAppCatalog","getClientSideWebParts","addClientSidePage","pageName","clientsidepages_ClientSidePage","addClientSidePageByPath","createDefaultAssociatedGroups","siteOwner","siteOwner2","groupNameSeed","hubSiteData","forceRefresh","syncHubSiteTheme","getSiteDesignRuns","getNextOrder","collection","max","reindex","columns","controls","ClientSidePage","noInit","sections","commentsDisabled","_bannerImageDirty","initFrom","_pageSettings","controlType","pageSettingsSlice","isDefaultDescription","isDefaultThumbnail","_layoutPart","getDefaultLayoutPart","fromJSON","pageLayoutType","pageInitData","newPage","PageLayoutType","save","fromFile","load","dataVersion","instanceId","authors","layoutType","showPublishDate","showTopicHeader","textAlignment","topicHeader","serverProcessedContent","htmlStrings","searchablePlainTexts","imageSources","links","BannerImageUrl","imageSourceType","TopicHeader","addSection","section","clientsidepages_CanvasSection","pageData","canvasControls","CanvasContent1","layouts","LayoutWebpartsContent","setControls","CommentsDisabled","origImgUrl","imgFile","imgId","listId","UniqueId","ParentList","bannerImageUrl","imageSource","customMetadata","IsPageCheckedOutToCurrentUser","saveBody","AuthorByline","getCanvasContent1","getLayoutWebpartsContent","updater","if-match","discardPageCheckout","promoteToNews","promoteNewsImpl","enableComments","setCommentsOn","disableComments","findControlById","findControl","predicate","copyPage","page","pageLayout","getControls","setBannerImage","bannerImageSourceType","translateX","translateY","altText","mergeColumnToTree","clientsidepages_CanvasColumn","part","clientsidepages_ClientSideWebpart","mergePartToTree","textData","clientsidepages_ClientSideText","innerHTML","canvasData","column","displayMode","emphasis","getEmphasisObj","control","zoneEmphasis","on","positionData","sectionFactor","sectionIndex","addColumn","addControl","initer","listData","CanvasSection","_emphasis","_memId","_order","factor","defaultColumn","CanvasColumn","Default","_section","getControl","layoutIndex","ColumnControl","_column","onColumnChange","setData","ClientSideText","anchorComponentId","startsWith","controlIndex","col","addedFromPersistedData","editorType","ClientSideWebpart","fromComponentDef","webPartData","reservedHeight","reservedWidth","setProperties","getProperties","component","componendId","preconfiguredEntries","Manifest","default","SortDirection","ReorderingRuleMatchType","QueryPropertyValueType","search_Search","Search","queryInit","parseQuery","HitHighlightedProperties","fixArrProp","Properties","RefinementFilters","ReorderingRules","SelectProperties","SortList","cacheKey","search_SearchResults","prop","Querytext","toSearchQuery","SearchResults","rawResponse","_raw","_primary","postquery","RawSearchResults","ElapsedTime","PrimaryQueryResult","RelevantResults","RowCount","TotalRows","TotalRowsIncludingDuplicates","formatSearchResults","Table","Rows","getPage","pageNumber","pageSize","rows","RowLimit","StartRow","rawResults","tempResults_1","tempResult","cells","Cells","cell","Value","writable","SearchBuiltInSourceId","Documents","ItemsMatchingContentType","ItemsMatchingTag","ItemsRelatedToCurrentUser","ItemsWithSameKeywordAsThisItem","LocalPeopleResults","LocalReportsAndDataResults","LocalSharePointResults","LocalVideoResults","Pages","Pictures","Popular","RecentlyChangedItems","RecommendedItems","Wiki","SocialActorType","SocialActorTypes","SocialFollowResult","SocialStatusCode","searchsuggest_SearchSuggest","SearchSuggest","mapQueryToQueryString","suggest","PeopleNames","PersonalResults","Queries","querytext","querySetter","checkProp","sp","userprofiles_UserProfileQuery","UserProfileQuery","clientPeoplePickerQuery","userprofiles_ClientPeoplePickerQuery","profileLoader","userprofiles_ProfileLoader","amIFollowedBy","amIFollowing","getFollowedTags","maxCount","getFollowersFor","getPeopleFollowedBy","getPropertiesFor","getUserProfilePropertyFor","propertyName","hideSuggestion","isFollowing","follower","followee","setMyProfilePic","profilePicSource","reader","FileReader","onload","readAsArrayBuffer","Uint16Array","setSingleValueProfileProperty","accountName","propertyValue","setMultiValuedProfileProperty","propertyValues","createPersonalSiteEnqueueBulk","emails","ownerUserProfile","userProfile","createPersonalSite","interactiveRequest","shareAllSocialData","share","clientPeoplePickerResolveUser","queryParams","clientPeoplePickerSearchUser","ProfileLoader","ProfileLoader_1","emailIDs","ClientPeoplePickerQuery","ClientPeoplePickerQuery_1","createClientPeoplePickerQueryParametersRequestBody","ClientPeoplePickerResolveUser","ClientPeoplePickerSearchUser","social_SocialQuery","SocialQuery","SocialQuery_1","social_MySocialQuery","getFollowedSitesUri","FollowedSitesUri","getFollowedDocumentsUri","FollowedDocumentsUri","follow","actorInfo","createSocialActorInfoRequestBody","isFollowed","stopFollowing","actor","MySocialQuery","MySocialQuery_1","followed","types","Followed","followedCount","FollowedCount","followers","Followers","suggestions","Suggestions","utilities_UtilityMethod","UtilityMethod","excute","Body","From","Subject","To","CC","BCC","AdditionalHeaders","getCurrentUserEmailAddresses","GetCurrentUserEmailAddresses","resolvePrincipal","input","scopes","sources","inputIsEmailOnly","addToUserInfoList","matchUserInfoList","ResolvePrincipalInCurrentContext","searchPrincipals","SearchPrincipalsUsingContextWeb","createEmailBodyForInvitation","pageAddress","CreateEmailBodyForInvitation","expandGroupsToPrincipals","inputs","ExpandGroupsToPrincipals","createWikiPage","CreateWikiPageInContextWeb","containsInvalidFileFolderChars","onPremise","InvalidFileFolderNameCharsOnPremiseRegex","InvalidFileFolderNameCharsOnlineRegex","stripInvalidFileFolderChars","replacer","hubsites_HubSites","HubSites","hubsites_HubSite","HubSite","rest_SPRest","SPRest","_baseUrl","searchSuggest","finalQuery","search","searchWithCaching","getTenantAppCatalogWeb","CorporateCatalogUrl","fm","sprestaddin_SPRestAddIn","SPRestAddIn","crossDomainSite","addInWebUrl","hostWebUrl","_cdImpl","crossDomainWeb","urlPart","sprestaddin_sp"],"mappings":"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","file":"sp-addinhelpers.es5.umd.bundle.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"pnp.sp-addinhelpers\"] = factory();\n\telse\n\t\troot[\"pnp.sp-addinhelpers\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 8);\n","import * as tslib_1 from \"tslib\";\r\nimport { BearerTokenFetchClient } from \"./netutil\";\r\nimport { isUrlAbsolute } from \"./util\";\r\n// @ts-ignore\r\nimport * as adal from \"adal-angular/dist/adal.min.js\";\r\n/**\r\n * Parses out the root of the request url to use as the resource when getting the token\r\n *\r\n * After: https://gist.github.com/jlong/2428561\r\n * @param url The url to parse\r\n */\r\nfunction getResource(url) {\r\n    var parser = document.createElement(\"a\");\r\n    parser.href = url;\r\n    return parser.protocol + \"//\" + parser.hostname;\r\n}\r\n/**\r\n * Azure AD Client for use in the browser\r\n */\r\nvar AdalClient = /** @class */ (function (_super) {\r\n    tslib_1.__extends(AdalClient, _super);\r\n    /**\r\n     * Creates a new instance of AdalClient\r\n     * @param clientId Azure App Id\r\n     * @param tenant Office 365 tenant (Ex: {tenant}.onmicrosoft.com)\r\n     * @param redirectUri The redirect url used to authenticate the\r\n     */\r\n    function AdalClient(clientId, tenant, redirectUri) {\r\n        var _this = _super.call(this, null) || this;\r\n        _this.clientId = clientId;\r\n        _this.tenant = tenant;\r\n        _this.redirectUri = redirectUri;\r\n        _this._displayCallback = null;\r\n        _this._loginPromise = null;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Creates a new AdalClient using the values of the supplied SPFx context (requires SPFx >= 1.6)\r\n     *\r\n     * @param spfxContext Current SPFx context\r\n     * @description Using this method requires that the features described in this article\r\n     * https://docs.microsoft.com/en-us/sharepoint/dev/spfx/use-aadhttpclient are activated in the tenant.\r\n     */\r\n    AdalClient.fromSPFxContext = function (spfxContext) {\r\n        return new SPFxAdalClient(spfxContext);\r\n    };\r\n    /**\r\n     * Conducts the fetch opertation against the AAD secured resource\r\n     *\r\n     * @param url Absolute URL for the request\r\n     * @param options Any fetch options passed to the underlying fetch implementation\r\n     */\r\n    AdalClient.prototype.fetch = function (url, options) {\r\n        var _this = this;\r\n        if (!isUrlAbsolute(url)) {\r\n            throw Error(\"You must supply absolute urls to AdalClient.fetch.\");\r\n        }\r\n        // the url we are calling is the resource\r\n        return this.getToken(getResource(url)).then(function (token) {\r\n            _this.token = token;\r\n            return _super.prototype.fetch.call(_this, url, options);\r\n        });\r\n    };\r\n    /**\r\n     * Gets a token based on the current user\r\n     *\r\n     * @param resource The resource for which we are requesting a token\r\n     */\r\n    AdalClient.prototype.getToken = function (resource) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            _this.ensureAuthContext().then(function (_) { return _this.login(); }).then(function (_) {\r\n                AdalClient._authContext.acquireToken(resource, function (message, token) {\r\n                    if (message) {\r\n                        return reject(Error(message));\r\n                    }\r\n                    resolve(token);\r\n                });\r\n            }).catch(reject);\r\n        });\r\n    };\r\n    /**\r\n     * Ensures we have created and setup the adal AuthenticationContext instance\r\n     */\r\n    AdalClient.prototype.ensureAuthContext = function () {\r\n        var _this = this;\r\n        return new Promise(function (resolve) {\r\n            if (AdalClient._authContext === null) {\r\n                AdalClient._authContext = adal.inject({\r\n                    clientId: _this.clientId,\r\n                    displayCall: function (url) {\r\n                        if (_this._displayCallback) {\r\n                            _this._displayCallback(url);\r\n                        }\r\n                    },\r\n                    navigateToLoginRequestUrl: false,\r\n                    redirectUri: _this.redirectUri,\r\n                    tenant: _this.tenant,\r\n                });\r\n            }\r\n            resolve();\r\n        });\r\n    };\r\n    /**\r\n     * Ensures the current user is logged in\r\n     */\r\n    AdalClient.prototype.login = function () {\r\n        var _this = this;\r\n        if (this._loginPromise) {\r\n            return this._loginPromise;\r\n        }\r\n        this._loginPromise = new Promise(function (resolve, reject) {\r\n            if (AdalClient._authContext.getCachedUser()) {\r\n                return resolve();\r\n            }\r\n            _this._displayCallback = function (url) {\r\n                var popupWindow = window.open(url, \"login\", \"width=483, height=600\");\r\n                if (!popupWindow) {\r\n                    return reject(Error(\"Could not open pop-up window for auth. Likely pop-ups are blocked by the browser.\"));\r\n                }\r\n                if (popupWindow && popupWindow.focus) {\r\n                    popupWindow.focus();\r\n                }\r\n                var pollTimer = window.setInterval(function () {\r\n                    if (!popupWindow || popupWindow.closed || popupWindow.closed === undefined) {\r\n                        window.clearInterval(pollTimer);\r\n                    }\r\n                    try {\r\n                        if (popupWindow.document.URL.indexOf(_this.redirectUri) !== -1) {\r\n                            window.clearInterval(pollTimer);\r\n                            AdalClient._authContext.handleWindowCallback(popupWindow.location.hash);\r\n                            popupWindow.close();\r\n                            resolve();\r\n                        }\r\n                    }\r\n                    catch (e) {\r\n                        reject(e);\r\n                    }\r\n                }, 30);\r\n            };\r\n            // this triggers the login process\r\n            _this.ensureAuthContext().then(function (_) {\r\n                AdalClient._authContext._loginInProgress = false;\r\n                AdalClient._authContext.login();\r\n                _this._displayCallback = null;\r\n            });\r\n        });\r\n        return this._loginPromise;\r\n    };\r\n    /**\r\n     * Our auth context\r\n     */\r\n    AdalClient._authContext = null;\r\n    return AdalClient;\r\n}(BearerTokenFetchClient));\r\nexport { AdalClient };\r\n/**\r\n * Client wrapping the aadTokenProvider available from SPFx >= 1.6\r\n */\r\nvar SPFxAdalClient = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SPFxAdalClient, _super);\r\n    /**\r\n     *\r\n     * @param context provide the appropriate SPFx Context object\r\n     */\r\n    function SPFxAdalClient(context) {\r\n        var _this = _super.call(this, null) || this;\r\n        _this.context = context;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Executes a fetch request using the supplied url and options\r\n     *\r\n     * @param url Absolute url of the request\r\n     * @param options Any options\r\n     */\r\n    SPFxAdalClient.prototype.fetch = function (url, options) {\r\n        var _this = this;\r\n        return this.getToken(getResource(url)).then(function (token) {\r\n            _this.token = token;\r\n            return _super.prototype.fetch.call(_this, url, options);\r\n        });\r\n    };\r\n    /**\r\n     * Gets an AAD token for the provided resource using the SPFx AADTokenProvider\r\n     *\r\n     * @param resource Resource for which a token is to be requested (ex: https://graph.microsoft.com)\r\n     */\r\n    SPFxAdalClient.prototype.getToken = function (resource) {\r\n        return this.context.aadTokenProviderFactory.getTokenProvider().then(function (provider) {\r\n            return provider.getToken(resource);\r\n        });\r\n    };\r\n    return SPFxAdalClient;\r\n}(BearerTokenFetchClient));\r\nexport { SPFxAdalClient };\r\n//# sourceMappingURL=adalclient.js.map","import { isFunc } from \"./util\";\r\n/**\r\n * Used to calculate the object properties, with polyfill if needed\r\n */\r\nvar objectEntries = isFunc(Object.entries) ? Object.entries : function (o) { return Object.keys(o).map(function (k) { return [k, o[k]]; }); };\r\n/**\r\n * Converts the supplied object to a map\r\n *\r\n * @param o The object to map\r\n */\r\nexport function objectToMap(o) {\r\n    if (o !== undefined && o !== null) {\r\n        return new Map(objectEntries(o));\r\n    }\r\n    return new Map();\r\n}\r\n/**\r\n * Merges to Map instances together, overwriting values in target with matching keys, last in wins\r\n *\r\n * @param target map into which the other maps are merged\r\n * @param maps One or more maps to merge into the target\r\n */\r\nexport function mergeMaps(target) {\r\n    var maps = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        maps[_i - 1] = arguments[_i];\r\n    }\r\n    for (var i = 0; i < maps.length; i++) {\r\n        maps[i].forEach(function (v, k) {\r\n            target.set(k, v);\r\n        });\r\n    }\r\n    return target;\r\n}\r\n//# sourceMappingURL=collections.js.map","import { mergeMaps, objectToMap } from \"./collections\";\r\nexport function setup(config) {\r\n    RuntimeConfig.extend(config);\r\n}\r\n// lable mapping for known config values\r\nvar s = [\r\n    \"defaultCachingStore\",\r\n    \"defaultCachingTimeoutSeconds\",\r\n    \"globalCacheDisable\",\r\n    \"enableCacheExpiration\",\r\n    \"cacheExpirationIntervalMilliseconds\",\r\n    \"spfxContext\",\r\n];\r\nvar RuntimeConfigImpl = /** @class */ (function () {\r\n    function RuntimeConfigImpl(_v) {\r\n        if (_v === void 0) { _v = new Map(); }\r\n        this._v = _v;\r\n        // setup defaults\r\n        this._v.set(s[0], \"session\");\r\n        this._v.set(s[1], 60);\r\n        this._v.set(s[2], false);\r\n        this._v.set(s[3], false);\r\n        this._v.set(s[4], 750);\r\n        this._v.set(s[5], null);\r\n    }\r\n    /**\r\n     *\r\n     * @param config The set of properties to add to the globa configuration instance\r\n     */\r\n    RuntimeConfigImpl.prototype.extend = function (config) {\r\n        this._v = mergeMaps(this._v, objectToMap(config));\r\n    };\r\n    RuntimeConfigImpl.prototype.get = function (key) {\r\n        return this._v.get(key);\r\n    };\r\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"defaultCachingStore\", {\r\n        get: function () {\r\n            return this.get(s[0]);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"defaultCachingTimeoutSeconds\", {\r\n        get: function () {\r\n            return this.get(s[1]);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"globalCacheDisable\", {\r\n        get: function () {\r\n            return this.get(s[2]);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"enableCacheExpiration\", {\r\n        get: function () {\r\n            return this.get(s[3]);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"cacheExpirationIntervalMilliseconds\", {\r\n        get: function () {\r\n            return this.get(s[4]);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"spfxContext\", {\r\n        get: function () {\r\n            return this.get(s[5]);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return RuntimeConfigImpl;\r\n}());\r\nexport { RuntimeConfigImpl };\r\nvar _runtimeConfig = new RuntimeConfigImpl();\r\nexport var RuntimeConfig = _runtimeConfig;\r\n//# sourceMappingURL=libconfig.js.map","import { dateAdd, getCtxCallback, jsS, objectDefinedNotNull } from \"./util\";\r\nimport { RuntimeConfig } from \"./libconfig\";\r\n/**\r\n * A wrapper class to provide a consistent interface to browser based storage\r\n *\r\n */\r\nvar PnPClientStorageWrapper = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of the PnPClientStorageWrapper class\r\n     *\r\n     * @constructor\r\n     */\r\n    function PnPClientStorageWrapper(store, defaultTimeoutMinutes) {\r\n        if (defaultTimeoutMinutes === void 0) { defaultTimeoutMinutes = -1; }\r\n        this.store = store;\r\n        this.defaultTimeoutMinutes = defaultTimeoutMinutes;\r\n        this.enabled = this.test();\r\n        // if the cache timeout is enabled call the handler\r\n        // this will clear any expired items and set the timeout function\r\n        if (RuntimeConfig.enableCacheExpiration) {\r\n            this.cacheExpirationHandler();\r\n        }\r\n    }\r\n    /**\r\n     * Get a value from storage, or null if that value does not exist\r\n     *\r\n     * @param key The key whose value we want to retrieve\r\n     */\r\n    PnPClientStorageWrapper.prototype.get = function (key) {\r\n        if (!this.enabled) {\r\n            return null;\r\n        }\r\n        var o = this.store.getItem(key);\r\n        if (!objectDefinedNotNull(o)) {\r\n            return null;\r\n        }\r\n        var persistable = JSON.parse(o);\r\n        if (new Date(persistable.expiration) <= new Date()) {\r\n            this.delete(key);\r\n            return null;\r\n        }\r\n        else {\r\n            return persistable.value;\r\n        }\r\n    };\r\n    /**\r\n     * Adds a value to the underlying storage\r\n     *\r\n     * @param key The key to use when storing the provided value\r\n     * @param o The value to store\r\n     * @param expire Optional, if provided the expiration of the item, otherwise the default is used\r\n     */\r\n    PnPClientStorageWrapper.prototype.put = function (key, o, expire) {\r\n        if (this.enabled) {\r\n            this.store.setItem(key, this.createPersistable(o, expire));\r\n        }\r\n    };\r\n    /**\r\n     * Deletes a value from the underlying storage\r\n     *\r\n     * @param key The key of the pair we want to remove from storage\r\n     */\r\n    PnPClientStorageWrapper.prototype.delete = function (key) {\r\n        if (this.enabled) {\r\n            this.store.removeItem(key);\r\n        }\r\n    };\r\n    /**\r\n     * Gets an item from the underlying storage, or adds it if it does not exist using the supplied getter function\r\n     *\r\n     * @param key The key to use when storing the provided value\r\n     * @param getter A function which will upon execution provide the desired value\r\n     * @param expire Optional, if provided the expiration of the item, otherwise the default is used\r\n     */\r\n    PnPClientStorageWrapper.prototype.getOrPut = function (key, getter, expire) {\r\n        var _this = this;\r\n        if (!this.enabled) {\r\n            return getter();\r\n        }\r\n        var o = this.get(key);\r\n        if (o === null) {\r\n            return getter().then(function (d) {\r\n                _this.put(key, d, expire);\r\n                return d;\r\n            });\r\n        }\r\n        return Promise.resolve(o);\r\n    };\r\n    /**\r\n     * Deletes any expired items placed in the store by the pnp library, leaves other items untouched\r\n     */\r\n    PnPClientStorageWrapper.prototype.deleteExpired = function () {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            if (!_this.enabled) {\r\n                resolve();\r\n            }\r\n            try {\r\n                for (var i = 0; i < _this.store.length; i++) {\r\n                    var key = _this.store.key(i);\r\n                    if (key !== null) {\r\n                        // test the stored item to see if we stored it\r\n                        if (/[\"|']?pnp[\"|']? ?: ?1/i.test(_this.store.getItem(key))) {\r\n                            // get those items as get will delete from cache if they are expired\r\n                            _this.get(key);\r\n                        }\r\n                    }\r\n                }\r\n                resolve();\r\n            }\r\n            catch (e) {\r\n                reject(e);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Used to determine if the wrapped storage is available currently\r\n     */\r\n    PnPClientStorageWrapper.prototype.test = function () {\r\n        var str = \"t\";\r\n        try {\r\n            this.store.setItem(str, str);\r\n            this.store.removeItem(str);\r\n            return true;\r\n        }\r\n        catch (e) {\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * Creates the persistable to store\r\n     */\r\n    PnPClientStorageWrapper.prototype.createPersistable = function (o, expire) {\r\n        if (expire === undefined) {\r\n            // ensure we are by default inline with the global library setting\r\n            var defaultTimeout = RuntimeConfig.defaultCachingTimeoutSeconds;\r\n            if (this.defaultTimeoutMinutes > 0) {\r\n                defaultTimeout = this.defaultTimeoutMinutes * 60;\r\n            }\r\n            expire = dateAdd(new Date(), \"second\", defaultTimeout);\r\n        }\r\n        return jsS({ pnp: 1, expiration: expire, value: o });\r\n    };\r\n    /**\r\n     * Deletes expired items added by this library in this.store and sets a timeout to call itself\r\n     */\r\n    PnPClientStorageWrapper.prototype.cacheExpirationHandler = function () {\r\n        var _this = this;\r\n        this.deleteExpired().then(function (_) {\r\n            // call ourself in the future\r\n            setTimeout(getCtxCallback(_this, _this.cacheExpirationHandler), RuntimeConfig.cacheExpirationIntervalMilliseconds);\r\n        }).catch(function (e) {\r\n            console.error(e);\r\n        });\r\n    };\r\n    return PnPClientStorageWrapper;\r\n}());\r\nexport { PnPClientStorageWrapper };\r\n/**\r\n * A thin implementation of in-memory storage for use in nodejs\r\n */\r\nvar MemoryStorage = /** @class */ (function () {\r\n    function MemoryStorage(_store) {\r\n        if (_store === void 0) { _store = new Map(); }\r\n        this._store = _store;\r\n    }\r\n    Object.defineProperty(MemoryStorage.prototype, \"length\", {\r\n        get: function () {\r\n            return this._store.size;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    MemoryStorage.prototype.clear = function () {\r\n        this._store.clear();\r\n    };\r\n    MemoryStorage.prototype.getItem = function (key) {\r\n        return this._store.get(key);\r\n    };\r\n    MemoryStorage.prototype.key = function (index) {\r\n        return Array.from(this._store)[index][0];\r\n    };\r\n    MemoryStorage.prototype.removeItem = function (key) {\r\n        this._store.delete(key);\r\n    };\r\n    MemoryStorage.prototype.setItem = function (key, data) {\r\n        this._store.set(key, data);\r\n    };\r\n    return MemoryStorage;\r\n}());\r\n/**\r\n * A class that will establish wrappers for both local and session storage\r\n */\r\nvar PnPClientStorage = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of the PnPClientStorage class\r\n     *\r\n     * @constructor\r\n     */\r\n    function PnPClientStorage(_local, _session) {\r\n        if (_local === void 0) { _local = null; }\r\n        if (_session === void 0) { _session = null; }\r\n        this._local = _local;\r\n        this._session = _session;\r\n    }\r\n    Object.defineProperty(PnPClientStorage.prototype, \"local\", {\r\n        /**\r\n         * Provides access to the local storage of the browser\r\n         */\r\n        get: function () {\r\n            if (this._local === null) {\r\n                this._local = this.getStore(\"local\");\r\n            }\r\n            return this._local;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PnPClientStorage.prototype, \"session\", {\r\n        /**\r\n         * Provides access to the session storage of the browser\r\n         */\r\n        get: function () {\r\n            if (this._session === null) {\r\n                this._session = this.getStore(\"session\");\r\n            }\r\n            return this._session;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    PnPClientStorage.prototype.getStore = function (name) {\r\n        if (name === \"local\") {\r\n            return new PnPClientStorageWrapper(typeof (localStorage) === \"undefined\" ? new MemoryStorage() : localStorage);\r\n        }\r\n        return new PnPClientStorageWrapper(typeof (sessionStorage) === \"undefined\" ? new MemoryStorage() : sessionStorage);\r\n    };\r\n    return PnPClientStorage;\r\n}());\r\nexport { PnPClientStorage };\r\n//# sourceMappingURL=storage.js.map","export * from \"./src/common\";\r\n//# sourceMappingURL=index.js.map","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/**\r\n * Gets a callback function which will maintain context across async calls.\r\n * Allows for the calling pattern getCtxCallback(thisobj, method, methodarg1, methodarg2, ...)\r\n *\r\n * @param context The object that will be the 'this' value in the callback\r\n * @param method The method to which we will apply the context and parameters\r\n * @param params Optional, additional arguments to supply to the wrapped method when it is invoked\r\n */\r\nexport function getCtxCallback(context, method) {\r\n    var params = [];\r\n    for (var _i = 2; _i < arguments.length; _i++) {\r\n        params[_i - 2] = arguments[_i];\r\n    }\r\n    return function () {\r\n        method.apply(context, params);\r\n    };\r\n}\r\n/**\r\n * Adds a value to a date\r\n *\r\n * @param date The date to which we will add units, done in local time\r\n * @param interval The name of the interval to add, one of: ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second']\r\n * @param units The amount to add to date of the given interval\r\n *\r\n * http://stackoverflow.com/questions/1197928/how-to-add-30-minutes-to-a-javascript-date-object\r\n */\r\nexport function dateAdd(date, interval, units) {\r\n    var ret = new Date(date); // don't change original date\r\n    switch (interval.toLowerCase()) {\r\n        case \"year\":\r\n            ret.setFullYear(ret.getFullYear() + units);\r\n            break;\r\n        case \"quarter\":\r\n            ret.setMonth(ret.getMonth() + 3 * units);\r\n            break;\r\n        case \"month\":\r\n            ret.setMonth(ret.getMonth() + units);\r\n            break;\r\n        case \"week\":\r\n            ret.setDate(ret.getDate() + 7 * units);\r\n            break;\r\n        case \"day\":\r\n            ret.setDate(ret.getDate() + units);\r\n            break;\r\n        case \"hour\":\r\n            ret.setTime(ret.getTime() + units * 3600000);\r\n            break;\r\n        case \"minute\":\r\n            ret.setTime(ret.getTime() + units * 60000);\r\n            break;\r\n        case \"second\":\r\n            ret.setTime(ret.getTime() + units * 1000);\r\n            break;\r\n        default:\r\n            ret = undefined;\r\n            break;\r\n    }\r\n    return ret;\r\n}\r\n/**\r\n * Combines an arbitrary set of paths ensuring and normalizes the slashes\r\n *\r\n * @param paths 0 to n path parts to combine\r\n */\r\nexport function combine() {\r\n    var paths = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        paths[_i] = arguments[_i];\r\n    }\r\n    return paths\r\n        .filter(function (path) { return !stringIsNullOrEmpty(path); })\r\n        .map(function (path) { return path.replace(/^[\\\\|\\/]/, \"\").replace(/[\\\\|\\/]$/, \"\"); })\r\n        .join(\"/\")\r\n        .replace(/\\\\/g, \"/\");\r\n}\r\n/**\r\n * Gets a random string of chars length\r\n *\r\n * https://stackoverflow.com/questions/1349404/generate-random-string-characters-in-javascript\r\n *\r\n * @param chars The length of the random string to generate\r\n */\r\nexport function getRandomString(chars) {\r\n    var text = new Array(chars);\r\n    var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n    for (var i = 0; i < chars; i++) {\r\n        text[i] = possible.charAt(Math.floor(Math.random() * possible.length));\r\n    }\r\n    return text.join(\"\");\r\n}\r\n/**\r\n * Gets a random GUID value\r\n *\r\n * http://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\r\n * https://stackoverflow.com/a/8809472 updated to prevent collisions.\r\n */\r\n/* tslint:disable no-bitwise */\r\nexport function getGUID() {\r\n    var d = Date.now();\r\n    if (typeof performance !== \"undefined\" && typeof performance.now === \"function\") {\r\n        d += performance.now(); // use high-precision timer if available\r\n    }\r\n    var guid = \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function (c) {\r\n        var r = (d + Math.random() * 16) % 16 | 0;\r\n        d = Math.floor(d / 16);\r\n        return (c === \"x\" ? r : (r & 0x3 | 0x8)).toString(16);\r\n    });\r\n    return guid;\r\n}\r\n/* tslint:enable */\r\n/**\r\n * Determines if a given value is a function\r\n *\r\n * @param cf The thing to test for functionness\r\n */\r\nexport function isFunc(cf) {\r\n    return typeof cf === \"function\";\r\n}\r\n/**\r\n * Determines if an object is both defined and not null\r\n * @param obj Object to test\r\n */\r\nexport function objectDefinedNotNull(obj) {\r\n    return typeof obj !== \"undefined\" && obj !== null;\r\n}\r\n/**\r\n * @returns whether the provided parameter is a JavaScript Array or not.\r\n*/\r\nexport function isArray(array) {\r\n    if (Array.isArray) {\r\n        return Array.isArray(array);\r\n    }\r\n    return array && typeof array.length === \"number\" && array.constructor === Array;\r\n}\r\n/**\r\n * Provides functionality to extend the given object by doing a shallow copy\r\n *\r\n * @param target The object to which properties will be copied\r\n * @param source The source object from which properties will be copied\r\n * @param noOverwrite If true existing properties on the target are not overwritten from the source\r\n * @param filter If provided allows additional filtering on what properties are copied (propName: string) => boolean\r\n *\r\n */\r\nexport function extend(target, source, noOverwrite, filter) {\r\n    if (noOverwrite === void 0) { noOverwrite = false; }\r\n    if (filter === void 0) { filter = function () { return true; }; }\r\n    if (!objectDefinedNotNull(source)) {\r\n        return target;\r\n    }\r\n    // ensure we don't overwrite things we don't want overwritten\r\n    var check = noOverwrite ? function (o, i) { return !(i in o); } : function () { return true; };\r\n    // final filter we will use\r\n    var f = function (v) { return check(target, v) && filter(v); };\r\n    return Object.getOwnPropertyNames(source)\r\n        .filter(f)\r\n        .reduce(function (t, v) {\r\n        t[v] = source[v];\r\n        return t;\r\n    }, target);\r\n}\r\n/**\r\n * Determines if a given url is absolute\r\n *\r\n * @param url The url to check to see if it is absolute\r\n */\r\nexport function isUrlAbsolute(url) {\r\n    return /^https?:\\/\\/|^\\/\\//i.test(url);\r\n}\r\n/**\r\n * Determines if a string is null or empty or undefined\r\n *\r\n * @param s The string to test\r\n */\r\nexport function stringIsNullOrEmpty(s) {\r\n    return s === undefined || s === null || s.length < 1;\r\n}\r\n/**\r\n * Gets an attribute value from an html/xml string block. NOTE: if the input attribute value has\r\n * RegEx special characters they will be escaped in the returned string\r\n *\r\n * @param html HTML to search\r\n * @param attrName The name of the attribute to find\r\n */\r\nexport function getAttrValueFromString(html, attrName) {\r\n    // make the input safe for regex\r\n    html = html.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\r\n    var reg = new RegExp(attrName + \"\\\\s*?=\\\\s*?(\\\"|')([^\\\\1]*?)\\\\1\", \"i\");\r\n    var match = reg.exec(html);\r\n    return match !== null && match.length > 0 ? match[2] : null;\r\n}\r\n/**\r\n * Ensures guid values are represented consistently as \"ea123463-137d-4ae3-89b8-cf3fc578ca05\"\r\n *\r\n * @param guid The candidate guid\r\n */\r\nexport function sanitizeGuid(guid) {\r\n    if (stringIsNullOrEmpty(guid)) {\r\n        return guid;\r\n    }\r\n    var matches = /([0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12})/i.exec(guid);\r\n    return matches === null ? guid : matches[1];\r\n}\r\n/**\r\n * Shorthand for JSON.stringify\r\n *\r\n * @param o Any type of object\r\n */\r\nexport function jsS(o) {\r\n    return JSON.stringify(o);\r\n}\r\n/**\r\n * Shorthand for Object.hasOwnProperty\r\n *\r\n * @param o Object to check for\r\n * @param p Name of the property\r\n */\r\nexport function hOP(o, p) {\r\n    return Object.hasOwnProperty.call(o, p);\r\n}\r\n/**\r\n * Generates a ~unique hash code\r\n *\r\n * From: https://stackoverflow.com/questions/6122571/simple-non-secure-hash-function-for-javascript\r\n */\r\n// tslint:disable:no-bitwise\r\nexport function getHashCode(s) {\r\n    var hash = 0;\r\n    if (s.length === 0) {\r\n        return hash;\r\n    }\r\n    for (var i = 0; i < s.length; i++) {\r\n        var chr = s.charCodeAt(i);\r\n        hash = ((hash << 5) - hash) + chr;\r\n        hash |= 0; // Convert to 32bit integer\r\n    }\r\n    return hash;\r\n}\r\n// tslint:enable:no-bitwise\r\n//# sourceMappingURL=util.js.map","import { RuntimeConfig, FetchClient, } from \"@pnp/common\";\r\nexport function setup(config) {\r\n    RuntimeConfig.extend(config);\r\n}\r\nvar SPRuntimeConfigImpl = /** @class */ (function () {\r\n    function SPRuntimeConfigImpl() {\r\n    }\r\n    Object.defineProperty(SPRuntimeConfigImpl.prototype, \"headers\", {\r\n        get: function () {\r\n            var spPart = RuntimeConfig.get(\"sp\");\r\n            if (spPart !== undefined && spPart.headers !== undefined) {\r\n                return spPart.headers;\r\n            }\r\n            return {};\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SPRuntimeConfigImpl.prototype, \"baseUrl\", {\r\n        get: function () {\r\n            var spPart = RuntimeConfig.get(\"sp\");\r\n            if (spPart !== undefined && spPart.baseUrl !== undefined) {\r\n                return spPart.baseUrl;\r\n            }\r\n            if (RuntimeConfig.spfxContext !== undefined && RuntimeConfig.spfxContext !== null) {\r\n                return RuntimeConfig.spfxContext.pageContext.web.absoluteUrl;\r\n            }\r\n            return null;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SPRuntimeConfigImpl.prototype, \"fetchClientFactory\", {\r\n        get: function () {\r\n            var spPart = RuntimeConfig.get(\"sp\");\r\n            if (spPart !== undefined && spPart.fetchClientFactory !== undefined) {\r\n                return spPart.fetchClientFactory;\r\n            }\r\n            else {\r\n                return function () { return new FetchClient(); };\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return SPRuntimeConfigImpl;\r\n}());\r\nexport { SPRuntimeConfigImpl };\r\nexport var SPRuntimeConfig = new SPRuntimeConfigImpl();\r\n//# sourceMappingURL=splibconfig.js.map","import { combine, isUrlAbsolute, hOP } from \"@pnp/common\";\r\nimport { SPRuntimeConfig } from \"../config/splibconfig\";\r\n/**\r\n * Ensures that a given url is absolute for the current web based on context\r\n *\r\n * @param candidateUrl The url to make absolute\r\n *\r\n */\r\nexport function toAbsoluteUrl(candidateUrl) {\r\n    return new Promise(function (resolve) {\r\n        if (isUrlAbsolute(candidateUrl)) {\r\n            // if we are already absolute, then just return the url\r\n            return resolve(candidateUrl);\r\n        }\r\n        if (SPRuntimeConfig.baseUrl !== null) {\r\n            // base url specified either with baseUrl of spfxContext config property\r\n            return resolve(combine(SPRuntimeConfig.baseUrl, candidateUrl));\r\n        }\r\n        if (global._spPageContextInfo !== undefined) {\r\n            // operating in classic pages\r\n            if (hOP(global._spPageContextInfo, \"webAbsoluteUrl\")) {\r\n                return resolve(combine(global._spPageContextInfo.webAbsoluteUrl, candidateUrl));\r\n            }\r\n            else if (hOP(global._spPageContextInfo, \"webServerRelativeUrl\")) {\r\n                return resolve(combine(global._spPageContextInfo.webServerRelativeUrl, candidateUrl));\r\n            }\r\n        }\r\n        // does window.location exist and have a certain path part in it?\r\n        if (global.location !== undefined) {\r\n            var baseUrl_1 = global.location.toString().toLowerCase();\r\n            [\"/_layouts/\", \"/siteassets/\"].forEach(function (s) {\r\n                var index = baseUrl_1.indexOf(s);\r\n                if (index > 0) {\r\n                    return resolve(combine(baseUrl_1.substr(0, index), candidateUrl));\r\n                }\r\n            });\r\n        }\r\n        return resolve(candidateUrl);\r\n    });\r\n}\r\n//# sourceMappingURL=toabsoluteurl.js.map","import * as tslib_1 from \"tslib\";\r\nimport { extend, objectDefinedNotNull } from \"./util\";\r\nexport function mergeHeaders(target, source) {\r\n    if (source !== undefined && source !== null) {\r\n        var temp = new Request(\"\", { headers: source });\r\n        temp.headers.forEach(function (value, name) {\r\n            target.append(name, value);\r\n        });\r\n    }\r\n}\r\nexport function mergeOptions(target, source) {\r\n    if (objectDefinedNotNull(source)) {\r\n        var headers = extend(target.headers || {}, source.headers);\r\n        target = extend(target, source);\r\n        target.headers = headers;\r\n    }\r\n}\r\n/**\r\n * Makes requests using the global/window fetch API\r\n */\r\nvar FetchClient = /** @class */ (function () {\r\n    function FetchClient() {\r\n    }\r\n    FetchClient.prototype.fetch = function (url, options) {\r\n        return global.fetch(url, options);\r\n    };\r\n    return FetchClient;\r\n}());\r\nexport { FetchClient };\r\n/**\r\n * Makes requests using the fetch API adding the supplied token to the Authorization header\r\n */\r\nvar BearerTokenFetchClient = /** @class */ (function (_super) {\r\n    tslib_1.__extends(BearerTokenFetchClient, _super);\r\n    function BearerTokenFetchClient(_token) {\r\n        var _this = _super.call(this) || this;\r\n        _this._token = _token;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(BearerTokenFetchClient.prototype, \"token\", {\r\n        get: function () {\r\n            return this._token || \"\";\r\n        },\r\n        set: function (token) {\r\n            this._token = token;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    BearerTokenFetchClient.prototype.fetch = function (url, options) {\r\n        if (options === void 0) { options = {}; }\r\n        var headers = new Headers();\r\n        mergeHeaders(headers, options.headers);\r\n        headers.set(\"Authorization\", \"Bearer \" + this._token);\r\n        options.headers = headers;\r\n        return _super.prototype.fetch.call(this, url, options);\r\n    };\r\n    return BearerTokenFetchClient;\r\n}(FetchClient));\r\nexport { BearerTokenFetchClient };\r\n//# sourceMappingURL=netutil.js.map","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","/*! adal-angular v1.0.17 2018-02-27 */\r\nvar AuthenticationContext=function(){\"use strict\";return AuthenticationContext=function(a){if(this.REQUEST_TYPE={LOGIN:\"LOGIN\",RENEW_TOKEN:\"RENEW_TOKEN\",UNKNOWN:\"UNKNOWN\"},this.RESPONSE_TYPE={ID_TOKEN_TOKEN:\"id_token token\",TOKEN:\"token\"},this.CONSTANTS={ACCESS_TOKEN:\"access_token\",EXPIRES_IN:\"expires_in\",ID_TOKEN:\"id_token\",ERROR_DESCRIPTION:\"error_description\",SESSION_STATE:\"session_state\",ERROR:\"error\",STORAGE:{TOKEN_KEYS:\"adal.token.keys\",ACCESS_TOKEN_KEY:\"adal.access.token.key\",EXPIRATION_KEY:\"adal.expiration.key\",STATE_LOGIN:\"adal.state.login\",STATE_RENEW:\"adal.state.renew\",NONCE_IDTOKEN:\"adal.nonce.idtoken\",SESSION_STATE:\"adal.session.state\",USERNAME:\"adal.username\",IDTOKEN:\"adal.idtoken\",ERROR:\"adal.error\",ERROR_DESCRIPTION:\"adal.error.description\",LOGIN_REQUEST:\"adal.login.request\",LOGIN_ERROR:\"adal.login.error\",RENEW_STATUS:\"adal.token.renew.status\",ANGULAR_LOGIN_REQUEST:\"adal.angular.login.request\"},RESOURCE_DELIMETER:\"|\",CACHE_DELIMETER:\"||\",LOADFRAME_TIMEOUT:6e3,TOKEN_RENEW_STATUS_CANCELED:\"Canceled\",TOKEN_RENEW_STATUS_COMPLETED:\"Completed\",TOKEN_RENEW_STATUS_IN_PROGRESS:\"In Progress\",LOGGING_LEVEL:{ERROR:0,WARN:1,INFO:2,VERBOSE:3},LEVEL_STRING_MAP:{0:\"ERROR:\",1:\"WARNING:\",2:\"INFO:\",3:\"VERBOSE:\"},POPUP_WIDTH:483,POPUP_HEIGHT:600},AuthenticationContext.prototype._singletonInstance)return AuthenticationContext.prototype._singletonInstance;if(AuthenticationContext.prototype._singletonInstance=this,this.instance=\"https://login.microsoftonline.com/\",this.config={},this.callback=null,this.popUp=!1,this.isAngular=!1,this._user=null,this._activeRenewals={},this._loginInProgress=!1,this._acquireTokenInProgress=!1,this._renewStates=[],this._callBackMappedToRenewStates={},this._callBacksMappedToRenewStates={},this._openedWindows=[],this._requestType=this.REQUEST_TYPE.LOGIN,window._adalInstance=this,a.displayCall&&\"function\"!=typeof a.displayCall)throw new Error(\"displayCall is not a function\");if(!a.clientId)throw new Error(\"clientId is required\");this.config=this._cloneConfig(a),void 0===this.config.navigateToLoginRequestUrl&&(this.config.navigateToLoginRequestUrl=!0),this.config.popUp&&(this.popUp=!0),this.config.callback&&\"function\"==typeof this.config.callback&&(this.callback=this.config.callback),this.config.instance&&(this.instance=this.config.instance),this.config.loginResource||(this.config.loginResource=this.config.clientId),this.config.redirectUri||(this.config.redirectUri=window.location.href.split(\"?\")[0].split(\"#\")[0]),this.config.postLogoutRedirectUri||(this.config.postLogoutRedirectUri=window.location.href.split(\"?\")[0].split(\"#\")[0]),this.config.anonymousEndpoints||(this.config.anonymousEndpoints=[]),this.config.isAngular&&(this.isAngular=this.config.isAngular),this.config.loadFrameTimeout&&(this.CONSTANTS.LOADFRAME_TIMEOUT=this.config.loadFrameTimeout)},\"undefined\"!=typeof window&&(window.Logging={piiLoggingEnabled:!1,level:0,log:function(a){}}),AuthenticationContext.prototype.login=function(){if(this._loginInProgress)return void this.info(\"Login in progress\");this._loginInProgress=!0;var a=this._guid();this.config.state=a,this._idTokenNonce=this._guid();var b=this._getItem(this.CONSTANTS.STORAGE.ANGULAR_LOGIN_REQUEST);b&&\"\"!==b?this._saveItem(this.CONSTANTS.STORAGE.ANGULAR_LOGIN_REQUEST,\"\"):b=window.location.href,this.verbose(\"Expected state: \"+a+\" startPage:\"+b),this._saveItem(this.CONSTANTS.STORAGE.LOGIN_REQUEST,b),this._saveItem(this.CONSTANTS.STORAGE.LOGIN_ERROR,\"\"),this._saveItem(this.CONSTANTS.STORAGE.STATE_LOGIN,a,!0),this._saveItem(this.CONSTANTS.STORAGE.NONCE_IDTOKEN,this._idTokenNonce,!0),this._saveItem(this.CONSTANTS.STORAGE.ERROR,\"\"),this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION,\"\");var c=this._getNavigateUrl(\"id_token\",null)+\"&nonce=\"+encodeURIComponent(this._idTokenNonce);this.config.displayCall?this.config.displayCall(c):this.popUp?(this._saveItem(this.CONSTANTS.STORAGE.STATE_LOGIN,\"\"),this._renewStates.push(a),this.registerCallback(a,this.config.clientId,this.callback),this._loginPopup(c)):this.promptUser(c)},AuthenticationContext.prototype._openPopup=function(a,b,c,d){try{var e=window.screenLeft?window.screenLeft:window.screenX,f=window.screenTop?window.screenTop:window.screenY,g=window.innerWidth||document.documentElement.clientWidth||document.body.clientWidth,h=window.innerHeight||document.documentElement.clientHeight||document.body.clientHeight,i=g/2-c/2+e,j=h/2-d/2+f,k=window.open(a,b,\"width=\"+c+\", height=\"+d+\", top=\"+j+\", left=\"+i);return k.focus&&k.focus(),k}catch(a){return this.warn(\"Error opening popup, \"+a.message),this._loginInProgress=!1,this._acquireTokenInProgress=!1,null}},AuthenticationContext.prototype._handlePopupError=function(a,b,c,d,e){this.warn(d),this._saveItem(this.CONSTANTS.STORAGE.ERROR,c),this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION,d),this._saveItem(this.CONSTANTS.STORAGE.LOGIN_ERROR,e),b&&this._activeRenewals[b]&&(this._activeRenewals[b]=null),this._loginInProgress=!1,this._acquireTokenInProgress=!1,a&&a(d,null,c)},AuthenticationContext.prototype._loginPopup=function(a,b,c){var d=this._openPopup(a,\"login\",this.CONSTANTS.POPUP_WIDTH,this.CONSTANTS.POPUP_HEIGHT),e=c||this.callback;if(null==d){var f=\"Popup Window is null. This can happen if you are using IE\";return void this._handlePopupError(e,b,\"Error opening popup\",f,f)}if(this._openedWindows.push(d),-1!=this.config.redirectUri.indexOf(\"#\"))var g=this.config.redirectUri.split(\"#\")[0];else var g=this.config.redirectUri;var h=this,i=window.setInterval(function(){if(!d||d.closed||void 0===d.closed){var a=\"Popup Window closed\",c=\"Popup Window closed by UI action/ Popup Window handle destroyed due to cross zone navigation in IE/Edge\";return h.isAngular&&h._broadcast(\"adal:popUpClosed\",c+h.CONSTANTS.RESOURCE_DELIMETER+a),h._handlePopupError(e,b,a,c,c),void window.clearInterval(i)}try{var f=d.location;if(-1!=encodeURI(f.href).indexOf(encodeURI(g)))return h.isAngular?h._broadcast(\"adal:popUpHashChanged\",f.hash):h.handleWindowCallback(f.hash),window.clearInterval(i),h._loginInProgress=!1,h._acquireTokenInProgress=!1,h.info(\"Closing popup window\"),h._openedWindows=[],void d.close()}catch(a){}},1)},AuthenticationContext.prototype._broadcast=function(a,b){!function(){function a(a,b){b=b||{bubbles:!1,cancelable:!1,detail:void 0};var c=document.createEvent(\"CustomEvent\");return c.initCustomEvent(a,b.bubbles,b.cancelable,b.detail),c}if(\"function\"==typeof window.CustomEvent)return!1;a.prototype=window.Event.prototype,window.CustomEvent=a}();var c=new CustomEvent(a,{detail:b});window.dispatchEvent(c)},AuthenticationContext.prototype.loginInProgress=function(){return this._loginInProgress},AuthenticationContext.prototype._hasResource=function(a){var b=this._getItem(this.CONSTANTS.STORAGE.TOKEN_KEYS);return b&&!this._isEmpty(b)&&b.indexOf(a+this.CONSTANTS.RESOURCE_DELIMETER)>-1},AuthenticationContext.prototype.getCachedToken=function(a){if(!this._hasResource(a))return null;var b=this._getItem(this.CONSTANTS.STORAGE.ACCESS_TOKEN_KEY+a),c=this._getItem(this.CONSTANTS.STORAGE.EXPIRATION_KEY+a),d=this.config.expireOffsetSeconds||300;return c&&c>this._now()+d?b:(this._saveItem(this.CONSTANTS.STORAGE.ACCESS_TOKEN_KEY+a,\"\"),this._saveItem(this.CONSTANTS.STORAGE.EXPIRATION_KEY+a,0),null)},AuthenticationContext.prototype.getCachedUser=function(){if(this._user)return this._user;var a=this._getItem(this.CONSTANTS.STORAGE.IDTOKEN);return this._user=this._createUser(a),this._user},AuthenticationContext.prototype.registerCallback=function(a,b,c){this._activeRenewals[b]=a,this._callBacksMappedToRenewStates[a]||(this._callBacksMappedToRenewStates[a]=[]);var d=this;this._callBacksMappedToRenewStates[a].push(c),this._callBackMappedToRenewStates[a]||(this._callBackMappedToRenewStates[a]=function(c,e,f,g){d._activeRenewals[b]=null;for(var h=0;h<d._callBacksMappedToRenewStates[a].length;++h)try{d._callBacksMappedToRenewStates[a][h](c,e,f,g)}catch(f){d.warn(f)}d._callBacksMappedToRenewStates[a]=null,d._callBackMappedToRenewStates[a]=null})},AuthenticationContext.prototype._renewToken=function(a,b,c){this.info(\"renewToken is called for resource:\"+a);var d=this._addAdalFrame(\"adalRenewFrame\"+a),e=this._guid()+\"|\"+a;this.config.state=e,this._renewStates.push(e),this.verbose(\"Renew token Expected state: \"+e),c=c||\"token\";var f=this._urlRemoveQueryStringParameter(this._getNavigateUrl(c,a),\"prompt\");c===this.RESPONSE_TYPE.ID_TOKEN_TOKEN&&(this._idTokenNonce=this._guid(),this._saveItem(this.CONSTANTS.STORAGE.NONCE_IDTOKEN,this._idTokenNonce,!0),f+=\"&nonce=\"+encodeURIComponent(this._idTokenNonce)),f+=\"&prompt=none\",f=this._addHintParameters(f),this.registerCallback(e,a,b),this.verbosePii(\"Navigate to:\"+f),d.src=\"about:blank\",this._loadFrameTimeout(f,\"adalRenewFrame\"+a,a)},AuthenticationContext.prototype._renewIdToken=function(a,b){this.info(\"renewIdToken is called\");var c=this._addAdalFrame(\"adalIdTokenFrame\"),d=this._guid()+\"|\"+this.config.clientId;this._idTokenNonce=this._guid(),this._saveItem(this.CONSTANTS.STORAGE.NONCE_IDTOKEN,this._idTokenNonce,!0),this.config.state=d,this._renewStates.push(d),this.verbose(\"Renew Idtoken Expected state: \"+d);var e=null===b||void 0===b?null:this.config.clientId,b=b||\"id_token\",f=this._urlRemoveQueryStringParameter(this._getNavigateUrl(b,e),\"prompt\");f+=\"&prompt=none\",f=this._addHintParameters(f),f+=\"&nonce=\"+encodeURIComponent(this._idTokenNonce),this.registerCallback(d,this.config.clientId,a),this.verbosePii(\"Navigate to:\"+f),c.src=\"about:blank\",this._loadFrameTimeout(f,\"adalIdTokenFrame\",this.config.clientId)},AuthenticationContext.prototype._urlContainsQueryStringParameter=function(a,b){return new RegExp(\"[\\\\?&]\"+a+\"=\").test(b)},AuthenticationContext.prototype._urlRemoveQueryStringParameter=function(a,b){var c=new RegExp(\"(\\\\&\"+b+\"=)[^&]+\");return a=a.replace(c,\"\"),c=new RegExp(\"(\"+b+\"=)[^&]+&\"),a=a.replace(c,\"\"),c=new RegExp(\"(\"+b+\"=)[^&]+\"),a=a.replace(c,\"\")},AuthenticationContext.prototype._loadFrameTimeout=function(a,b,c){this.verbose(\"Set loading state to pending for: \"+c),this._saveItem(this.CONSTANTS.STORAGE.RENEW_STATUS+c,this.CONSTANTS.TOKEN_RENEW_STATUS_IN_PROGRESS),this._loadFrame(a,b);var d=this;setTimeout(function(){if(d._getItem(d.CONSTANTS.STORAGE.RENEW_STATUS+c)===d.CONSTANTS.TOKEN_RENEW_STATUS_IN_PROGRESS){d.verbose(\"Loading frame has timed out after: \"+d.CONSTANTS.LOADFRAME_TIMEOUT/1e3+\" seconds for resource \"+c);var a=d._activeRenewals[c];a&&d._callBackMappedToRenewStates[a]&&d._callBackMappedToRenewStates[a](\"Token renewal operation failed due to timeout\",null,\"Token Renewal Failed\"),d._saveItem(d.CONSTANTS.STORAGE.RENEW_STATUS+c,d.CONSTANTS.TOKEN_RENEW_STATUS_CANCELED)}},d.CONSTANTS.LOADFRAME_TIMEOUT)},AuthenticationContext.prototype._loadFrame=function(a,b){var c=this;c.info(\"LoadFrame: \"+b);var d=b;setTimeout(function(){var b=c._addAdalFrame(d);\"\"!==b.src&&\"about:blank\"!==b.src||(b.src=a,c._loadFrame(a,d))},500)},AuthenticationContext.prototype.acquireToken=function(a,b){if(this._isEmpty(a))return this.warn(\"resource is required\"),void b(\"resource is required\",null,\"resource is required\");var c=this.getCachedToken(a);return c?(this.info(\"Token is already in cache for resource:\"+a),void b(null,c,null)):this._user||this.config.extraQueryParameter&&-1!==this.config.extraQueryParameter.indexOf(\"login_hint\")?void(this._activeRenewals[a]?this.registerCallback(this._activeRenewals[a],a,b):(this._requestType=this.REQUEST_TYPE.RENEW_TOKEN,a===this.config.clientId?this._user?(this.verbose(\"renewing idtoken\"),this._renewIdToken(b)):(this.verbose(\"renewing idtoken and access_token\"),this._renewIdToken(b,this.RESPONSE_TYPE.ID_TOKEN_TOKEN)):this._user?(this.verbose(\"renewing access_token\"),this._renewToken(a,b)):(this.verbose(\"renewing idtoken and access_token\"),this._renewToken(a,b,this.RESPONSE_TYPE.ID_TOKEN_TOKEN)))):(this.warn(\"User login is required\"),void b(\"User login is required\",null,\"login required\"))},AuthenticationContext.prototype.acquireTokenPopup=function(a,b,c,d){if(this._isEmpty(a))return this.warn(\"resource is required\"),void d(\"resource is required\",null,\"resource is required\");if(!this._user)return this.warn(\"User login is required\"),void d(\"User login is required\",null,\"login required\");if(this._acquireTokenInProgress)return this.warn(\"Acquire token interactive is already in progress\"),void d(\"Acquire token interactive is already in progress\",null,\"Acquire token interactive is already in progress\");var e=this._guid()+\"|\"+a;this.config.state=e,this._renewStates.push(e),this._requestType=this.REQUEST_TYPE.RENEW_TOKEN,this.verbose(\"Renew token Expected state: \"+e);var f=this._urlRemoveQueryStringParameter(this._getNavigateUrl(\"token\",a),\"prompt\");if(f+=\"&prompt=select_account\",b&&(f+=b),c&&-1===f.indexOf(\"&claims\"))f+=\"&claims=\"+encodeURIComponent(c);else if(c&&-1!==f.indexOf(\"&claims\"))throw new Error(\"Claims cannot be passed as an extraQueryParameter\");f=this._addHintParameters(f),this._acquireTokenInProgress=!0,this.info(\"acquireToken interactive is called for the resource \"+a),this.registerCallback(e,a,d),this._loginPopup(f,a,d)},AuthenticationContext.prototype.acquireTokenRedirect=function(a,b,c){if(this._isEmpty(a))return this.warn(\"resource is required\"),void d(\"resource is required\",null,\"resource is required\");var d=this.callback;if(!this._user)return this.warn(\"User login is required\"),void d(\"User login is required\",null,\"login required\");if(this._acquireTokenInProgress)return this.warn(\"Acquire token interactive is already in progress\"),void d(\"Acquire token interactive is already in progress\",null,\"Acquire token interactive is already in progress\");var e=this._guid()+\"|\"+a;this.config.state=e,this.verbose(\"Renew token Expected state: \"+e);var f=this._urlRemoveQueryStringParameter(this._getNavigateUrl(\"token\",a),\"prompt\");if(f+=\"&prompt=select_account\",b&&(f+=b),c&&-1===f.indexOf(\"&claims\"))f+=\"&claims=\"+encodeURIComponent(c);else if(c&&-1!==f.indexOf(\"&claims\"))throw new Error(\"Claims cannot be passed as an extraQueryParameter\");f=this._addHintParameters(f),this._acquireTokenInProgress=!0,this.info(\"acquireToken interactive is called for the resource \"+a),this._saveItem(this.CONSTANTS.STORAGE.LOGIN_REQUEST,window.location.href),this._saveItem(this.CONSTANTS.STORAGE.STATE_RENEW,e,!0),this.promptUser(f)},AuthenticationContext.prototype.promptUser=function(a){a?(this.infoPii(\"Navigate to:\"+a),window.location.replace(a)):this.info(\"Navigate url is empty\")},AuthenticationContext.prototype.clearCache=function(){this._saveItem(this.CONSTANTS.STORAGE.LOGIN_REQUEST,\"\"),this._saveItem(this.CONSTANTS.STORAGE.ANGULAR_LOGIN_REQUEST,\"\"),this._saveItem(this.CONSTANTS.STORAGE.SESSION_STATE,\"\"),this._saveItem(this.CONSTANTS.STORAGE.STATE_LOGIN,\"\"),this._saveItem(this.CONSTANTS.STORAGE.STATE_RENEW,\"\"),this._renewStates=[],this._saveItem(this.CONSTANTS.STORAGE.NONCE_IDTOKEN,\"\"),this._saveItem(this.CONSTANTS.STORAGE.IDTOKEN,\"\"),this._saveItem(this.CONSTANTS.STORAGE.ERROR,\"\"),this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION,\"\"),this._saveItem(this.CONSTANTS.STORAGE.LOGIN_ERROR,\"\"),this._saveItem(this.CONSTANTS.STORAGE.LOGIN_ERROR,\"\");var a=this._getItem(this.CONSTANTS.STORAGE.TOKEN_KEYS);if(!this._isEmpty(a)){a=a.split(this.CONSTANTS.RESOURCE_DELIMETER);for(var b=0;b<a.length&&\"\"!==a[b];b++)this._saveItem(this.CONSTANTS.STORAGE.ACCESS_TOKEN_KEY+a[b],\"\"),this._saveItem(this.CONSTANTS.STORAGE.EXPIRATION_KEY+a[b],0)}this._saveItem(this.CONSTANTS.STORAGE.TOKEN_KEYS,\"\")},AuthenticationContext.prototype.clearCacheForResource=function(a){this._saveItem(this.CONSTANTS.STORAGE.STATE_RENEW,\"\"),this._saveItem(this.CONSTANTS.STORAGE.ERROR,\"\"),this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION,\"\"),this._hasResource(a)&&(this._saveItem(this.CONSTANTS.STORAGE.ACCESS_TOKEN_KEY+a,\"\"),this._saveItem(this.CONSTANTS.STORAGE.EXPIRATION_KEY+a,0))},AuthenticationContext.prototype.logOut=function(){this.clearCache(),this._user=null;var a;if(this.config.logOutUri)a=this.config.logOutUri;else{var b=\"common\",c=\"\";this.config.tenant&&(b=this.config.tenant),this.config.postLogoutRedirectUri&&(c=\"post_logout_redirect_uri=\"+encodeURIComponent(this.config.postLogoutRedirectUri)),a=this.instance+b+\"/oauth2/logout?\"+c}this.infoPii(\"Logout navigate to: \"+a),this.promptUser(a)},AuthenticationContext.prototype._isEmpty=function(a){return void 0===a||!a||0===a.length},AuthenticationContext.prototype.getUser=function(a){if(\"function\"!=typeof a)throw new Error(\"callback is not a function\");if(this._user)return void a(null,this._user);var b=this._getItem(this.CONSTANTS.STORAGE.IDTOKEN);this._isEmpty(b)?(this.warn(\"User information is not available\"),a(\"User information is not available\",null)):(this.info(\"User exists in cache: \"),this._user=this._createUser(b),a(null,this._user))},AuthenticationContext.prototype._addHintParameters=function(a){if(this._user&&this._user.profile)if(this._user.profile.sid&&-1!==a.indexOf(\"&prompt=none\"))this._urlContainsQueryStringParameter(\"sid\",a)||(a+=\"&sid=\"+encodeURIComponent(this._user.profile.sid));else if(this._user.profile.upn&&(this._urlContainsQueryStringParameter(\"login_hint\",a)||(a+=\"&login_hint=\"+encodeURIComponent(this._user.profile.upn)),!this._urlContainsQueryStringParameter(\"domain_hint\",a)&&this._user.profile.upn.indexOf(\"@\")>-1)){var b=this._user.profile.upn.split(\"@\");a+=\"&domain_hint=\"+encodeURIComponent(b[b.length-1])}return a},AuthenticationContext.prototype._createUser=function(a){var b=null,c=this._extractIdToken(a);return c&&c.hasOwnProperty(\"aud\")&&(c.aud.toLowerCase()===this.config.clientId.toLowerCase()?(b={userName:\"\",profile:c},c.hasOwnProperty(\"upn\")?b.userName=c.upn:c.hasOwnProperty(\"email\")&&(b.userName=c.email)):this.warn(\"IdToken has invalid aud field\")),b},AuthenticationContext.prototype._getHash=function(a){return a.indexOf(\"#/\")>-1?a=a.substring(a.indexOf(\"#/\")+2):a.indexOf(\"#\")>-1&&(a=a.substring(1)),a},AuthenticationContext.prototype.isCallback=function(a){a=this._getHash(a);var b=this._deserialize(a);return b.hasOwnProperty(this.CONSTANTS.ERROR_DESCRIPTION)||b.hasOwnProperty(this.CONSTANTS.ACCESS_TOKEN)||b.hasOwnProperty(this.CONSTANTS.ID_TOKEN)},AuthenticationContext.prototype.getLoginError=function(){return this._getItem(this.CONSTANTS.STORAGE.LOGIN_ERROR)},AuthenticationContext.prototype.getRequestInfo=function(a){a=this._getHash(a);var b=this._deserialize(a),c={valid:!1,parameters:{},stateMatch:!1,stateResponse:\"\",requestType:this.REQUEST_TYPE.UNKNOWN};if(b&&(c.parameters=b,b.hasOwnProperty(this.CONSTANTS.ERROR_DESCRIPTION)||b.hasOwnProperty(this.CONSTANTS.ACCESS_TOKEN)||b.hasOwnProperty(this.CONSTANTS.ID_TOKEN))){c.valid=!0;var d=\"\";if(!b.hasOwnProperty(\"state\"))return this.warn(\"No state returned\"),c;if(this.verbose(\"State: \"+b.state),d=b.state,c.stateResponse=d,this._matchState(c))return c;if(!c.stateMatch&&window.parent){c.requestType=this._requestType;for(var e=this._renewStates,f=0;f<e.length;f++)if(e[f]===c.stateResponse){c.stateMatch=!0;break}}}return c},AuthenticationContext.prototype._matchNonce=function(a){var b=this._getItem(this.CONSTANTS.STORAGE.NONCE_IDTOKEN);if(b){b=b.split(this.CONSTANTS.CACHE_DELIMETER);for(var c=0;c<b.length;c++)if(b[c]===a.profile.nonce)return!0}return!1},AuthenticationContext.prototype._matchState=function(a){var b=this._getItem(this.CONSTANTS.STORAGE.STATE_LOGIN);if(b){b=b.split(this.CONSTANTS.CACHE_DELIMETER);for(var c=0;c<b.length;c++)if(b[c]===a.stateResponse)return a.requestType=this.REQUEST_TYPE.LOGIN,a.stateMatch=!0,!0}var d=this._getItem(this.CONSTANTS.STORAGE.STATE_RENEW);if(d){d=d.split(this.CONSTANTS.CACHE_DELIMETER);for(var c=0;c<d.length;c++)if(d[c]===a.stateResponse)return a.requestType=this.REQUEST_TYPE.RENEW_TOKEN,a.stateMatch=!0,!0}return!1},AuthenticationContext.prototype._getResourceFromState=function(a){if(a){var b=a.indexOf(\"|\");if(b>-1&&b+1<a.length)return a.substring(b+1)}return\"\"},AuthenticationContext.prototype.saveTokenFromHash=function(a){this.info(\"State status:\"+a.stateMatch+\"; Request type:\"+a.requestType),this._saveItem(this.CONSTANTS.STORAGE.ERROR,\"\"),this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION,\"\");var b=this._getResourceFromState(a.stateResponse);if(a.parameters.hasOwnProperty(this.CONSTANTS.ERROR_DESCRIPTION))this.infoPii(\"Error :\"+a.parameters.error+\"; Error description:\"+a.parameters[this.CONSTANTS.ERROR_DESCRIPTION]),this._saveItem(this.CONSTANTS.STORAGE.ERROR,a.parameters.error),this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION,a.parameters[this.CONSTANTS.ERROR_DESCRIPTION]),a.requestType===this.REQUEST_TYPE.LOGIN&&(this._loginInProgress=!1,this._saveItem(this.CONSTANTS.STORAGE.LOGIN_ERROR,a.parameters.error_description));else if(a.stateMatch){this.info(\"State is right\"),a.parameters.hasOwnProperty(this.CONSTANTS.SESSION_STATE)&&this._saveItem(this.CONSTANTS.STORAGE.SESSION_STATE,a.parameters[this.CONSTANTS.SESSION_STATE]);var c;a.parameters.hasOwnProperty(this.CONSTANTS.ACCESS_TOKEN)&&(this.info(\"Fragment has access token\"),this._hasResource(b)||(c=this._getItem(this.CONSTANTS.STORAGE.TOKEN_KEYS)||\"\",this._saveItem(this.CONSTANTS.STORAGE.TOKEN_KEYS,c+b+this.CONSTANTS.RESOURCE_DELIMETER)),this._saveItem(this.CONSTANTS.STORAGE.ACCESS_TOKEN_KEY+b,a.parameters[this.CONSTANTS.ACCESS_TOKEN]),this._saveItem(this.CONSTANTS.STORAGE.EXPIRATION_KEY+b,this._expiresIn(a.parameters[this.CONSTANTS.EXPIRES_IN]))),a.parameters.hasOwnProperty(this.CONSTANTS.ID_TOKEN)&&(this.info(\"Fragment has id token\"),this._loginInProgress=!1,this._user=this._createUser(a.parameters[this.CONSTANTS.ID_TOKEN]),this._user&&this._user.profile?this._matchNonce(this._user)?(this._saveItem(this.CONSTANTS.STORAGE.IDTOKEN,a.parameters[this.CONSTANTS.ID_TOKEN]),b=this.config.loginResource?this.config.loginResource:this.config.clientId,this._hasResource(b)||(c=this._getItem(this.CONSTANTS.STORAGE.TOKEN_KEYS)||\"\",this._saveItem(this.CONSTANTS.STORAGE.TOKEN_KEYS,c+b+this.CONSTANTS.RESOURCE_DELIMETER)),this._saveItem(this.CONSTANTS.STORAGE.ACCESS_TOKEN_KEY+b,a.parameters[this.CONSTANTS.ID_TOKEN]),this._saveItem(this.CONSTANTS.STORAGE.EXPIRATION_KEY+b,this._user.profile.exp)):(this._saveItem(this.CONSTANTS.STORAGE.LOGIN_ERROR,\"Nonce received: \"+this._user.profile.nonce+\" is not same as requested: \"+this._getItem(this.CONSTANTS.STORAGE.NONCE_IDTOKEN)),this._user=null):(a.parameters.error=\"invalid id_token\",a.parameters.error_description=\"Invalid id_token. id_token: \"+a.parameters[this.CONSTANTS.ID_TOKEN],this._saveItem(this.CONSTANTS.STORAGE.ERROR,\"invalid id_token\"),this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION,\"Invalid id_token. id_token: \"+a.parameters[this.CONSTANTS.ID_TOKEN])))}else a.parameters.error=\"Invalid_state\",a.parameters.error_description=\"Invalid_state. state: \"+a.stateResponse,this._saveItem(this.CONSTANTS.STORAGE.ERROR,\"Invalid_state\"),this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION,\"Invalid_state. state: \"+a.stateResponse);this._saveItem(this.CONSTANTS.STORAGE.RENEW_STATUS+b,this.CONSTANTS.TOKEN_RENEW_STATUS_COMPLETED)},AuthenticationContext.prototype.getResourceForEndpoint=function(a){if(this.config&&this.config.anonymousEndpoints)for(var b=0;b<this.config.anonymousEndpoints.length;b++)if(a.indexOf(this.config.anonymousEndpoints[b])>-1)return null;if(this.config&&this.config.endpoints)for(var c in this.config.endpoints)if(a.indexOf(c)>-1)return this.config.endpoints[c];return a.indexOf(\"http://\")>-1||a.indexOf(\"https://\")>-1?this._getHostFromUri(a)===this._getHostFromUri(this.config.redirectUri)?this.config.loginResource:null:this.config.loginResource},AuthenticationContext.prototype._getHostFromUri=function(a){var b=String(a).replace(/^(https?:)\\/\\//,\"\");return b=b.split(\"/\")[0]},AuthenticationContext.prototype.handleWindowCallback=function(a){if(null==a&&(a=window.location.hash),this.isCallback(a)){var b=null,c=!1;this._openedWindows.length>0&&this._openedWindows[this._openedWindows.length-1].opener&&this._openedWindows[this._openedWindows.length-1].opener._adalInstance?(b=this._openedWindows[this._openedWindows.length-1].opener._adalInstance,c=!0):window.parent&&window.parent._adalInstance&&(b=window.parent._adalInstance);var d,e,f=b.getRequestInfo(a),g=null;e=c||window.parent!==window?b._callBackMappedToRenewStates[f.stateResponse]:b.callback,b.info(\"Returned from redirect url\"),b.saveTokenFromHash(f),f.requestType===this.REQUEST_TYPE.RENEW_TOKEN&&window.parent?(window.parent!==window?b.verbose(\"Window is in iframe, acquiring token silently\"):b.verbose(\"acquiring token interactive in progress\"),d=f.parameters[b.CONSTANTS.ACCESS_TOKEN]||f.parameters[b.CONSTANTS.ID_TOKEN],g=b.CONSTANTS.ACCESS_TOKEN):f.requestType===this.REQUEST_TYPE.LOGIN&&(d=f.parameters[b.CONSTANTS.ID_TOKEN],g=b.CONSTANTS.ID_TOKEN);var h=f.parameters[b.CONSTANTS.ERROR_DESCRIPTION],i=f.parameters[b.CONSTANTS.ERROR];try{e&&e(h,d,i,g)}catch(a){b.error(\"Error occurred in user defined callback function: \"+a)}window.parent!==window||c||(b.config.navigateToLoginRequestUrl?window.location.href=b._getItem(b.CONSTANTS.STORAGE.LOGIN_REQUEST):window.location.hash=\"\")}},AuthenticationContext.prototype._getNavigateUrl=function(a,b){var c=\"common\";this.config.tenant&&(c=this.config.tenant);var d=this.instance+c+\"/oauth2/authorize\"+this._serialize(a,this.config,b)+this._addLibMetadata();return this.info(\"Navigate url:\"+d),d},AuthenticationContext.prototype._extractIdToken=function(a){var b=this._decodeJwt(a);if(!b)return null;try{var c=b.JWSPayload,d=this._base64DecodeStringUrlSafe(c);return d?JSON.parse(d):(this.info(\"The returned id_token could not be base64 url safe decoded.\"),null)}catch(a){this.error(\"The returned id_token could not be decoded\",a)}return null},AuthenticationContext.prototype._base64DecodeStringUrlSafe=function(a){return a=a.replace(/-/g,\"+\").replace(/_/g,\"/\"),window.atob?decodeURIComponent(escape(window.atob(a))):decodeURIComponent(escape(this._decode(a)))},AuthenticationContext.prototype._decode=function(a){var b=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";a=String(a).replace(/=+$/,\"\");var c=a.length;if(c%4==1)throw new Error(\"The token to be decoded is not correctly encoded.\");for(var d,e,f,g,h,i,j,k,l=\"\",m=0;m<c;m+=4){if(d=b.indexOf(a.charAt(m)),e=b.indexOf(a.charAt(m+1)),f=b.indexOf(a.charAt(m+2)),g=b.indexOf(a.charAt(m+3)),m+2===c-1){h=d<<18|e<<12|f<<6,i=h>>16&255,j=h>>8&255,l+=String.fromCharCode(i,j);break}if(m+1===c-1){h=d<<18|e<<12,i=h>>16&255,l+=String.fromCharCode(i);break}h=d<<18|e<<12|f<<6|g,i=h>>16&255,j=h>>8&255,k=255&h,l+=String.fromCharCode(i,j,k)}return l},AuthenticationContext.prototype._decodeJwt=function(a){if(this._isEmpty(a))return null;var b=/^([^\\.\\s]*)\\.([^\\.\\s]+)\\.([^\\.\\s]*)$/,c=b.exec(a);return!c||c.length<4?(this.warn(\"The returned id_token is not parseable.\"),null):{header:c[1],JWSPayload:c[2],JWSSig:c[3]}},AuthenticationContext.prototype._convertUrlSafeToRegularBase64EncodedString=function(a){return a.replace(\"-\",\"+\").replace(\"_\",\"/\")},AuthenticationContext.prototype._serialize=function(a,b,c){var d=[];if(null!==b){d.push(\"?response_type=\"+a),d.push(\"client_id=\"+encodeURIComponent(b.clientId)),c&&d.push(\"resource=\"+encodeURIComponent(c)),d.push(\"redirect_uri=\"+encodeURIComponent(b.redirectUri)),d.push(\"state=\"+encodeURIComponent(b.state)),b.hasOwnProperty(\"slice\")&&d.push(\"slice=\"+encodeURIComponent(b.slice)),b.hasOwnProperty(\"extraQueryParameter\")&&d.push(b.extraQueryParameter);var e=b.correlationId?b.correlationId:this._guid();d.push(\"client-request-id=\"+encodeURIComponent(e))}return d.join(\"&\")},AuthenticationContext.prototype._deserialize=function(a){var b,c=/\\+/g,d=/([^&=]+)=([^&]*)/g,e=function(a){return decodeURIComponent(a.replace(c,\" \"))},f={};for(b=d.exec(a);b;)f[e(b[1])]=e(b[2]),b=d.exec(a);return f},AuthenticationContext.prototype._decimalToHex=function(a){for(var b=a.toString(16);b.length<2;)b=\"0\"+b;return b},AuthenticationContext.prototype._guid=function(){var a=window.crypto||window.msCrypto;if(a&&a.getRandomValues){var b=new Uint8Array(16);return a.getRandomValues(b),b[6]|=64,b[6]&=79,b[8]|=128,b[8]&=191,this._decimalToHex(b[0])+this._decimalToHex(b[1])+this._decimalToHex(b[2])+this._decimalToHex(b[3])+\"-\"+this._decimalToHex(b[4])+this._decimalToHex(b[5])+\"-\"+this._decimalToHex(b[6])+this._decimalToHex(b[7])+\"-\"+this._decimalToHex(b[8])+this._decimalToHex(b[9])+\"-\"+this._decimalToHex(b[10])+this._decimalToHex(b[11])+this._decimalToHex(b[12])+this._decimalToHex(b[13])+this._decimalToHex(b[14])+this._decimalToHex(b[15])}for(var c=\"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\",d=\"0123456789abcdef\",e=0,f=\"\",g=0;g<36;g++)\"-\"!==c[g]&&\"4\"!==c[g]&&(e=16*Math.random()|0),\"x\"===c[g]?f+=d[e]:\"y\"===c[g]?(e&=3,e|=8,f+=d[e]):f+=c[g];return f},AuthenticationContext.prototype._expiresIn=function(a){return a||(a=3599),this._now()+parseInt(a,10)},AuthenticationContext.prototype._now=function(){return Math.round((new Date).getTime()/1e3)},AuthenticationContext.prototype._addAdalFrame=function(a){if(void 0!==a){this.info(\"Add adal frame to document:\"+a);var b=document.getElementById(a);if(!b){if(document.createElement&&document.documentElement&&(window.opera||-1===window.navigator.userAgent.indexOf(\"MSIE 5.0\"))){var c=document.createElement(\"iframe\");c.setAttribute(\"id\",a),c.setAttribute(\"aria-hidden\",\"true\"),c.style.visibility=\"hidden\",c.style.position=\"absolute\",c.style.width=c.style.height=c.borderWidth=\"0px\",b=document.getElementsByTagName(\"body\")[0].appendChild(c)}else document.body&&document.body.insertAdjacentHTML&&document.body.insertAdjacentHTML(\"beforeEnd\",'<iframe name=\"'+a+'\" id=\"'+a+'\" style=\"display:none\"></iframe>');window.frames&&window.frames[a]&&(b=window.frames[a])}return b}},AuthenticationContext.prototype._saveItem=function(a,b,c){if(this.config&&this.config.cacheLocation&&\"localStorage\"===this.config.cacheLocation){if(!this._supportsLocalStorage())return this.info(\"Local storage is not supported\"),!1;if(c){var d=this._getItem(a)||\"\";localStorage.setItem(a,d+b+this.CONSTANTS.CACHE_DELIMETER)}else localStorage.setItem(a,b);return!0}return this._supportsSessionStorage()?(sessionStorage.setItem(a,b),!0):(this.info(\"Session storage is not supported\"),!1)},AuthenticationContext.prototype._getItem=function(a){return this.config&&this.config.cacheLocation&&\"localStorage\"===this.config.cacheLocation?this._supportsLocalStorage()?localStorage.getItem(a):(this.info(\"Local storage is not supported\"),null):this._supportsSessionStorage()?sessionStorage.getItem(a):(this.info(\"Session storage is not supported\"),null)},AuthenticationContext.prototype._supportsLocalStorage=function(){try{return!!window.localStorage&&(window.localStorage.setItem(\"storageTest\",\"A\"),\"A\"==window.localStorage.getItem(\"storageTest\")&&(window.localStorage.removeItem(\"storageTest\"),!window.localStorage.getItem(\"storageTest\")))}catch(a){return!1}},AuthenticationContext.prototype._supportsSessionStorage=function(){try{return!!window.sessionStorage&&(window.sessionStorage.setItem(\"storageTest\",\"A\"),\"A\"==window.sessionStorage.getItem(\"storageTest\")&&(window.sessionStorage.removeItem(\"storageTest\"),!window.sessionStorage.getItem(\"storageTest\")))}catch(a){return!1}},AuthenticationContext.prototype._cloneConfig=function(a){if(null===a||\"object\"!=typeof a)return a;var b={};for(var c in a)a.hasOwnProperty(c)&&(b[c]=a[c]);return b},AuthenticationContext.prototype._addLibMetadata=function(){return\"&x-client-SKU=Js&x-client-Ver=\"+this._libVersion()},AuthenticationContext.prototype.log=function(a,b,c,d){if(a<=Logging.level){if(!Logging.piiLoggingEnabled&&d)return;var e=(new Date).toUTCString(),f=\"\";f=this.config.correlationId?e+\":\"+this.config.correlationId+\"-\"+this._libVersion()+\"-\"+this.CONSTANTS.LEVEL_STRING_MAP[a]+\" \"+b:e+\":\"+this._libVersion()+\"-\"+this.CONSTANTS.LEVEL_STRING_MAP[a]+\" \"+b,c&&(f+=\"\\nstack:\\n\"+c.stack),Logging.log(f)}},AuthenticationContext.prototype.error=function(a,b){this.log(this.CONSTANTS.LOGGING_LEVEL.ERROR,a,b)},AuthenticationContext.prototype.warn=function(a){this.log(this.CONSTANTS.LOGGING_LEVEL.WARN,a,null)},AuthenticationContext.prototype.info=function(a){\r\nthis.log(this.CONSTANTS.LOGGING_LEVEL.INFO,a,null)},AuthenticationContext.prototype.verbose=function(a){this.log(this.CONSTANTS.LOGGING_LEVEL.VERBOSE,a,null)},AuthenticationContext.prototype.errorPii=function(a,b){this.log(this.CONSTANTS.LOGGING_LEVEL.ERROR,a,b,!0)},AuthenticationContext.prototype.warnPii=function(a){this.log(this.CONSTANTS.LOGGING_LEVEL.WARN,a,null,!0)},AuthenticationContext.prototype.infoPii=function(a){this.log(this.CONSTANTS.LOGGING_LEVEL.INFO,a,null,!0)},AuthenticationContext.prototype.verbosePii=function(a){this.log(this.CONSTANTS.LOGGING_LEVEL.VERBOSE,a,null,!0)},AuthenticationContext.prototype._libVersion=function(){return\"1.0.17\"},\"undefined\"!=typeof module&&module.exports&&(module.exports=AuthenticationContext,module.exports.inject=function(a){return new AuthenticationContext(a)}),AuthenticationContext}();","/**\r\n * A set of logging levels\r\n */\r\nexport var LogLevel;\r\n(function (LogLevel) {\r\n    LogLevel[LogLevel[\"Verbose\"] = 0] = \"Verbose\";\r\n    LogLevel[LogLevel[\"Info\"] = 1] = \"Info\";\r\n    LogLevel[LogLevel[\"Warning\"] = 2] = \"Warning\";\r\n    LogLevel[LogLevel[\"Error\"] = 3] = \"Error\";\r\n    LogLevel[LogLevel[\"Off\"] = 99] = \"Off\";\r\n})(LogLevel || (LogLevel = {}));\r\n//# sourceMappingURL=loglevel.js.map","import { extend } from \"@pnp/common\";\r\n/**\r\n * Makes requests using the SP.RequestExecutor library.\r\n */\r\nvar SPRequestExecutorClient = /** @class */ (function () {\r\n    function SPRequestExecutorClient() {\r\n        /**\r\n         * Converts a SharePoint REST API response to a fetch API response.\r\n         */\r\n        this.convertToResponse = function (spResponse) {\r\n            var responseHeaders = new Headers();\r\n            if (spResponse.headers !== undefined) {\r\n                for (var h in spResponse.headers) {\r\n                    if (spResponse.headers[h]) {\r\n                        responseHeaders.append(h, spResponse.headers[h]);\r\n                    }\r\n                }\r\n            }\r\n            // Cannot have an empty string body when creating a Response with status 204\r\n            var body = spResponse.statusCode === 204 ? null : spResponse.body;\r\n            return new Response(body, {\r\n                headers: responseHeaders,\r\n                status: spResponse.statusCode,\r\n                statusText: spResponse.statusText,\r\n            });\r\n        };\r\n    }\r\n    /**\r\n     * Fetches a URL using the SP.RequestExecutor library.\r\n     */\r\n    SPRequestExecutorClient.prototype.fetch = function (url, options) {\r\n        var _this = this;\r\n        if (SP === undefined || SP.RequestExecutor === undefined) {\r\n            throw Error(\"SP.RequestExecutor is undefined. Load the SP.RequestExecutor.js library (/_layouts/15/SP.RequestExecutor.js) before loading the PnP JS Core library.\");\r\n        }\r\n        var addinWebUrl = url.substring(0, url.indexOf(\"/_api\")), executor = new SP.RequestExecutor(addinWebUrl);\r\n        var headers = {}, iterator, temp;\r\n        if (options.headers && options.headers instanceof Headers) {\r\n            iterator = options.headers.entries();\r\n            temp = iterator.next();\r\n            while (!temp.done) {\r\n                headers[temp.value[0]] = temp.value[1];\r\n                temp = iterator.next();\r\n            }\r\n        }\r\n        else {\r\n            headers = options.headers;\r\n        }\r\n        return new Promise(function (resolve, reject) {\r\n            var requestOptions = {\r\n                error: function (error) {\r\n                    reject(_this.convertToResponse(error));\r\n                },\r\n                headers: headers,\r\n                method: options.method,\r\n                success: function (response) {\r\n                    resolve(_this.convertToResponse(response));\r\n                },\r\n                url: url,\r\n            };\r\n            if (options.body) {\r\n                requestOptions = extend(requestOptions, { body: options.body });\r\n            }\r\n            else {\r\n                requestOptions = extend(requestOptions, { binaryStringRequestBody: true });\r\n            }\r\n            executor.executeAsync(requestOptions);\r\n        });\r\n    };\r\n    return SPRequestExecutorClient;\r\n}());\r\nexport { SPRequestExecutorClient };\r\n//# sourceMappingURL=sprequestexecutorclient.js.map","/**\r\n * Class used to subscribe ILogListener and log messages throughout an application\r\n *\r\n */\r\nvar Logger = /** @class */ (function () {\r\n    function Logger() {\r\n    }\r\n    Object.defineProperty(Logger, \"activeLogLevel\", {\r\n        /**\r\n         * Gets or sets the active log level to apply for log filtering\r\n         */\r\n        get: function () {\r\n            return Logger.instance.activeLogLevel;\r\n        },\r\n        set: function (value) {\r\n            Logger.instance.activeLogLevel = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Logger, \"instance\", {\r\n        get: function () {\r\n            if (Logger._instance === undefined || Logger._instance === null) {\r\n                Logger._instance = new LoggerImpl();\r\n            }\r\n            return Logger._instance;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Adds ILogListener instances to the set of subscribed listeners\r\n     *\r\n     * @param listeners One or more listeners to subscribe to this log\r\n     */\r\n    Logger.subscribe = function () {\r\n        var listeners = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            listeners[_i] = arguments[_i];\r\n        }\r\n        listeners.map(function (listener) { return Logger.instance.subscribe(listener); });\r\n    };\r\n    /**\r\n     * Clears the subscribers collection, returning the collection before modifiction\r\n     */\r\n    Logger.clearSubscribers = function () {\r\n        return Logger.instance.clearSubscribers();\r\n    };\r\n    Object.defineProperty(Logger, \"count\", {\r\n        /**\r\n         * Gets the current subscriber count\r\n         */\r\n        get: function () {\r\n            return Logger.instance.count;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Writes the supplied string to the subscribed listeners\r\n     *\r\n     * @param message The message to write\r\n     * @param level [Optional] if supplied will be used as the level of the entry (Default: LogLevel.Info)\r\n     */\r\n    Logger.write = function (message, level) {\r\n        if (level === void 0) { level = 1 /* Info */; }\r\n        Logger.instance.log({ level: level, message: message });\r\n    };\r\n    /**\r\n     * Writes the supplied string to the subscribed listeners\r\n     *\r\n     * @param json The json object to stringify and write\r\n     * @param level [Optional] if supplied will be used as the level of the entry (Default: LogLevel.Info)\r\n     */\r\n    Logger.writeJSON = function (json, level) {\r\n        if (level === void 0) { level = 1 /* Info */; }\r\n        this.write(JSON.stringify(json), level);\r\n    };\r\n    /**\r\n     * Logs the supplied entry to the subscribed listeners\r\n     *\r\n     * @param entry The message to log\r\n     */\r\n    Logger.log = function (entry) {\r\n        Logger.instance.log(entry);\r\n    };\r\n    /**\r\n     * Logs an error object to the subscribed listeners\r\n     *\r\n     * @param err The error object\r\n     */\r\n    Logger.error = function (err) {\r\n        Logger.instance.log({ data: err, level: 3 /* Error */, message: err.message });\r\n    };\r\n    return Logger;\r\n}());\r\nexport { Logger };\r\nvar LoggerImpl = /** @class */ (function () {\r\n    function LoggerImpl(activeLogLevel, subscribers) {\r\n        if (activeLogLevel === void 0) { activeLogLevel = 2 /* Warning */; }\r\n        if (subscribers === void 0) { subscribers = []; }\r\n        this.activeLogLevel = activeLogLevel;\r\n        this.subscribers = subscribers;\r\n    }\r\n    LoggerImpl.prototype.subscribe = function (listener) {\r\n        this.subscribers.push(listener);\r\n    };\r\n    LoggerImpl.prototype.clearSubscribers = function () {\r\n        var s = this.subscribers.slice(0);\r\n        this.subscribers.length = 0;\r\n        return s;\r\n    };\r\n    Object.defineProperty(LoggerImpl.prototype, \"count\", {\r\n        get: function () {\r\n            return this.subscribers.length;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    LoggerImpl.prototype.write = function (message, level) {\r\n        if (level === void 0) { level = 1 /* Info */; }\r\n        this.log({ level: level, message: message });\r\n    };\r\n    LoggerImpl.prototype.log = function (entry) {\r\n        if (entry !== undefined && this.activeLogLevel <= entry.level) {\r\n            this.subscribers.map(function (subscriber) { return subscriber.log(entry); });\r\n        }\r\n    };\r\n    return LoggerImpl;\r\n}());\r\n//# sourceMappingURL=logger.js.map","/**\r\n * Implementation of LogListener which logs to the console\r\n *\r\n */\r\nvar ConsoleListener = /** @class */ (function () {\r\n    function ConsoleListener() {\r\n    }\r\n    /**\r\n     * Any associated data that a given logging listener may choose to log or ignore\r\n     *\r\n     * @param entry The information to be logged\r\n     */\r\n    ConsoleListener.prototype.log = function (entry) {\r\n        var msg = this.format(entry);\r\n        switch (entry.level) {\r\n            case 0 /* Verbose */:\r\n            case 1 /* Info */:\r\n                console.log(msg);\r\n                break;\r\n            case 2 /* Warning */:\r\n                console.warn(msg);\r\n                break;\r\n            case 3 /* Error */:\r\n                console.error(msg);\r\n                break;\r\n        }\r\n    };\r\n    /**\r\n     * Formats the message\r\n     *\r\n     * @param entry The information to format into a string\r\n     */\r\n    ConsoleListener.prototype.format = function (entry) {\r\n        var msg = [];\r\n        msg.push(\"Message: \" + entry.message);\r\n        if (entry.data !== undefined) {\r\n            try {\r\n                msg.push(\" Data: \" + JSON.stringify(entry.data));\r\n            }\r\n            catch (e) {\r\n                msg.push(\" Data: Error in stringify of supplied data \" + e);\r\n            }\r\n        }\r\n        return msg.join(\"\");\r\n    };\r\n    return ConsoleListener;\r\n}());\r\nexport { ConsoleListener };\r\n/**\r\n * Implementation of LogListener which logs to the supplied function\r\n *\r\n */\r\nvar FunctionListener = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of the FunctionListener class\r\n     *\r\n     * @constructor\r\n     * @param  method The method to which any logging data will be passed\r\n     */\r\n    function FunctionListener(method) {\r\n        this.method = method;\r\n    }\r\n    /**\r\n     * Any associated data that a given logging listener may choose to log or ignore\r\n     *\r\n     * @param entry The information to be logged\r\n     */\r\n    FunctionListener.prototype.log = function (entry) {\r\n        this.method(entry);\r\n    };\r\n    return FunctionListener;\r\n}());\r\nexport { FunctionListener };\r\n//# sourceMappingURL=listeners.js.map","import { RuntimeConfig, dateAdd, PnPClientStorage } from \"@pnp/common\";\r\nvar CachingOptions = /** @class */ (function () {\r\n    function CachingOptions(key) {\r\n        this.key = key;\r\n        this.expiration = dateAdd(new Date(), \"second\", RuntimeConfig.defaultCachingTimeoutSeconds);\r\n        this.storeName = RuntimeConfig.defaultCachingStore;\r\n    }\r\n    Object.defineProperty(CachingOptions.prototype, \"store\", {\r\n        get: function () {\r\n            if (this.storeName === \"local\") {\r\n                return CachingOptions.storage.local;\r\n            }\r\n            else {\r\n                return CachingOptions.storage.session;\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    CachingOptions.storage = new PnPClientStorage();\r\n    return CachingOptions;\r\n}());\r\nexport { CachingOptions };\r\nvar CachingParserWrapper = /** @class */ (function () {\r\n    function CachingParserWrapper(parser, cacheOptions) {\r\n        this.parser = parser;\r\n        this.cacheOptions = cacheOptions;\r\n    }\r\n    CachingParserWrapper.prototype.parse = function (response) {\r\n        var _this = this;\r\n        return this.parser.parse(response).then(function (r) { return _this.cacheData(r); });\r\n    };\r\n    CachingParserWrapper.prototype.cacheData = function (data) {\r\n        if (this.cacheOptions.store !== null) {\r\n            this.cacheOptions.store.put(this.cacheOptions.key, data, this.cacheOptions.expiration);\r\n        }\r\n        return data;\r\n    };\r\n    return CachingParserWrapper;\r\n}());\r\nexport { CachingParserWrapper };\r\n//# sourceMappingURL=caching.js.map","import * as tslib_1 from \"tslib\";\r\nimport { isFunc, hOP } from \"@pnp/common\";\r\nvar HttpRequestError = /** @class */ (function (_super) {\r\n    tslib_1.__extends(HttpRequestError, _super);\r\n    function HttpRequestError(message, response, status, statusText) {\r\n        if (status === void 0) { status = response.status; }\r\n        if (statusText === void 0) { statusText = response.statusText; }\r\n        var _this = _super.call(this, message) || this;\r\n        _this.response = response;\r\n        _this.status = status;\r\n        _this.statusText = statusText;\r\n        _this.isHttpRequestError = true;\r\n        return _this;\r\n    }\r\n    HttpRequestError.init = function (r) {\r\n        return r.clone().text().then(function (t) {\r\n            return new HttpRequestError(\"Error making HttpClient request in queryable [\" + r.status + \"] \" + r.statusText + \" ::> \" + t, r.clone());\r\n        });\r\n    };\r\n    return HttpRequestError;\r\n}(Error));\r\nexport { HttpRequestError };\r\nvar ODataParserBase = /** @class */ (function () {\r\n    function ODataParserBase() {\r\n        this.rawJson = {};\r\n    }\r\n    ODataParserBase.prototype.parse = function (r) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            if (_this.handleError(r, reject)) {\r\n                _this.parseImpl(r, resolve, reject);\r\n            }\r\n        });\r\n    };\r\n    ODataParserBase.prototype.parseImpl = function (r, resolve, reject) {\r\n        var _this = this;\r\n        if ((r.headers.has(\"Content-Length\") && parseFloat(r.headers.get(\"Content-Length\")) === 0) || r.status === 204) {\r\n            resolve({});\r\n        }\r\n        else {\r\n            // patch to handle cases of 200 response with no or whitespace only bodies (#487 & #545)\r\n            r.text()\r\n                .then(function (txt) { return txt.replace(/\\s/ig, \"\").length > 0 ? JSON.parse(txt) : {}; })\r\n                .then(function (json) { return resolve(_this.parseODataJSON(json)); })\r\n                .catch(function (e) { return reject(e); });\r\n        }\r\n    };\r\n    /**\r\n     * Handles a response with ok === false by parsing the body and creating a ProcessHttpClientResponseException\r\n     * which is passed to the reject delegate. This method returns true if there is no error, otherwise false\r\n     *\r\n     * @param r Current response object\r\n     * @param reject reject delegate for the surrounding promise\r\n     */\r\n    ODataParserBase.prototype.handleError = function (r, reject) {\r\n        if (!r.ok) {\r\n            HttpRequestError.init(r).then(reject);\r\n        }\r\n        return r.ok;\r\n    };\r\n    /**\r\n     * Normalizes the json response by removing the various nested levels\r\n     *\r\n     * @param json json object to parse\r\n     */\r\n    ODataParserBase.prototype.parseODataJSON = function (json) {\r\n        this.rawJson = json;\r\n        var result = json;\r\n        if (hOP(json, \"d\")) {\r\n            if (hOP(json.d, \"results\")) {\r\n                result = json.d.results;\r\n            }\r\n            else {\r\n                result = json.d;\r\n            }\r\n        }\r\n        else if (hOP(json, \"value\")) {\r\n            result = json.value;\r\n        }\r\n        return result;\r\n    };\r\n    return ODataParserBase;\r\n}());\r\nexport { ODataParserBase };\r\nvar ODataDefaultParser = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ODataDefaultParser, _super);\r\n    function ODataDefaultParser() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    return ODataDefaultParser;\r\n}(ODataParserBase));\r\nexport { ODataDefaultParser };\r\nvar TextParser = /** @class */ (function (_super) {\r\n    tslib_1.__extends(TextParser, _super);\r\n    function TextParser() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    TextParser.prototype.parseImpl = function (r, resolve) {\r\n        r.text().then(resolve);\r\n    };\r\n    return TextParser;\r\n}(ODataParserBase));\r\nexport { TextParser };\r\nvar BlobParser = /** @class */ (function (_super) {\r\n    tslib_1.__extends(BlobParser, _super);\r\n    function BlobParser() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    BlobParser.prototype.parseImpl = function (r, resolve) {\r\n        r.blob().then(resolve);\r\n    };\r\n    return BlobParser;\r\n}(ODataParserBase));\r\nexport { BlobParser };\r\nvar JSONParser = /** @class */ (function (_super) {\r\n    tslib_1.__extends(JSONParser, _super);\r\n    function JSONParser() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    JSONParser.prototype.parseImpl = function (r, resolve) {\r\n        r.json().then(resolve);\r\n    };\r\n    return JSONParser;\r\n}(ODataParserBase));\r\nexport { JSONParser };\r\nvar BufferParser = /** @class */ (function (_super) {\r\n    tslib_1.__extends(BufferParser, _super);\r\n    function BufferParser() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    BufferParser.prototype.parseImpl = function (r, resolve) {\r\n        if (isFunc(r.arrayBuffer)) {\r\n            r.arrayBuffer().then(resolve);\r\n        }\r\n        else {\r\n            r.buffer().then(resolve);\r\n        }\r\n    };\r\n    return BufferParser;\r\n}(ODataParserBase));\r\nexport { BufferParser };\r\nvar LambdaParser = /** @class */ (function (_super) {\r\n    tslib_1.__extends(LambdaParser, _super);\r\n    function LambdaParser(parser) {\r\n        var _this = _super.call(this) || this;\r\n        _this.parser = parser;\r\n        return _this;\r\n    }\r\n    LambdaParser.prototype.parseImpl = function (r, resolve) {\r\n        this.parser(r).then(resolve);\r\n    };\r\n    return LambdaParser;\r\n}(ODataParserBase));\r\nexport { LambdaParser };\r\n//# sourceMappingURL=parsers.js.map","import * as tslib_1 from \"tslib\";\r\nimport { extend, isFunc, hOP } from \"@pnp/common\";\r\nimport { Logger } from \"@pnp/logging\";\r\nimport { CachingOptions, CachingParserWrapper } from \"./caching\";\r\n/**\r\n * Resolves the context's result value\r\n *\r\n * @param context The current context\r\n */\r\nfunction returnResult(context) {\r\n    Logger.log({\r\n        data: Logger.activeLogLevel === 0 /* Verbose */ ? context.result : {},\r\n        level: 1 /* Info */,\r\n        message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Returning result from pipeline. Set logging to verbose to see data.\",\r\n    });\r\n    return Promise.resolve(context.result);\r\n}\r\n/**\r\n * Sets the result on the context\r\n */\r\nexport function setResult(context, value) {\r\n    return new Promise(function (resolve) {\r\n        context.result = value;\r\n        context.hasResult = true;\r\n        resolve(context);\r\n    });\r\n}\r\n/**\r\n * Invokes the next method in the provided context's pipeline\r\n *\r\n * @param c The current request context\r\n */\r\nfunction next(c) {\r\n    if (c.pipeline.length > 0) {\r\n        return c.pipeline.shift()(c);\r\n    }\r\n    else {\r\n        return Promise.resolve(c);\r\n    }\r\n}\r\n/**\r\n * Executes the current request context's pipeline\r\n *\r\n * @param context Current context\r\n */\r\nexport function pipe(context) {\r\n    if (context.pipeline.length < 1) {\r\n        Logger.write(\"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Request pipeline contains no methods!\", 2 /* Warning */);\r\n    }\r\n    var promise = next(context).then(function (ctx) { return returnResult(ctx); }).catch(function (e) {\r\n        Logger.error(e);\r\n        throw e;\r\n    });\r\n    if (context.isBatched) {\r\n        // this will block the batch's execute method from returning until the child requets have been resolved\r\n        context.batch.addResolveBatchDependency(promise);\r\n    }\r\n    return promise;\r\n}\r\n/**\r\n * decorator factory applied to methods in the pipeline to control behavior\r\n */\r\nexport function requestPipelineMethod(alwaysRun) {\r\n    if (alwaysRun === void 0) { alwaysRun = false; }\r\n    return function (target, propertyKey, descriptor) {\r\n        var method = descriptor.value;\r\n        descriptor.value = function () {\r\n            var args = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                args[_i] = arguments[_i];\r\n            }\r\n            // if we have a result already in the pipeline, pass it along and don't call the tagged method\r\n            if (!alwaysRun && args.length > 0 && hOP(args[0], \"hasResult\") && args[0].hasResult) {\r\n                Logger.write(\"[\" + args[0].requestId + \"] (\" + (new Date()).getTime() + \") Skipping request pipeline method \" + propertyKey + \", existing result in pipeline.\", 0 /* Verbose */);\r\n                return Promise.resolve(args[0]);\r\n            }\r\n            // apply the tagged method\r\n            Logger.write(\"[\" + args[0].requestId + \"] (\" + (new Date()).getTime() + \") Calling request pipeline method \" + propertyKey + \".\", 0 /* Verbose */);\r\n            // then chain the next method in the context's pipeline - allows for dynamic pipeline\r\n            return method.apply(target, args).then(function (ctx) { return next(ctx); });\r\n        };\r\n    };\r\n}\r\n/**\r\n * Contains the methods used within the request pipeline\r\n */\r\nvar PipelineMethods = /** @class */ (function () {\r\n    function PipelineMethods() {\r\n    }\r\n    /**\r\n     * Logs the start of the request\r\n     */\r\n    PipelineMethods.logStart = function (context) {\r\n        return new Promise(function (resolve) {\r\n            Logger.log({\r\n                data: Logger.activeLogLevel === 1 /* Info */ ? {} : context,\r\n                level: 1 /* Info */,\r\n                message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Beginning \" + context.verb + \" request (\" + context.requestAbsoluteUrl + \")\",\r\n            });\r\n            resolve(context);\r\n        });\r\n    };\r\n    /**\r\n     * Handles caching of the request\r\n     */\r\n    PipelineMethods.caching = function (context) {\r\n        return new Promise(function (resolve) {\r\n            // handle caching, if applicable\r\n            if (context.isCached) {\r\n                Logger.write(\"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Caching is enabled for request, checking cache...\", 1 /* Info */);\r\n                var cacheOptions = new CachingOptions(context.requestAbsoluteUrl.toLowerCase());\r\n                if (context.cachingOptions !== undefined) {\r\n                    cacheOptions = extend(cacheOptions, context.cachingOptions);\r\n                }\r\n                // we may not have a valid store\r\n                if (cacheOptions.store !== null) {\r\n                    // check if we have the data in cache and if so resolve the promise and return\r\n                    var data = cacheOptions.store.get(cacheOptions.key);\r\n                    if (data !== null) {\r\n                        // ensure we clear any held batch dependency we are resolving from the cache\r\n                        Logger.log({\r\n                            data: Logger.activeLogLevel === 1 /* Info */ ? {} : data,\r\n                            level: 1 /* Info */,\r\n                            message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Value returned from cache.\",\r\n                        });\r\n                        if (isFunc(context.batchDependency)) {\r\n                            context.batchDependency();\r\n                        }\r\n                        // handle the case where a parser needs to take special actions with a cached result\r\n                        if (hOP(context.parser, \"hydrate\")) {\r\n                            data = context.parser.hydrate(data);\r\n                        }\r\n                        return setResult(context, data).then(function (ctx) { return resolve(ctx); });\r\n                    }\r\n                }\r\n                Logger.write(\"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Value not found in cache.\", 1 /* Info */);\r\n                // if we don't then wrap the supplied parser in the caching parser wrapper\r\n                // and send things on their way\r\n                context.parser = new CachingParserWrapper(context.parser, cacheOptions);\r\n            }\r\n            return resolve(context);\r\n        });\r\n    };\r\n    /**\r\n     * Sends the request\r\n     */\r\n    PipelineMethods.send = function (context) {\r\n        return new Promise(function (resolve, reject) {\r\n            // send or batch the request\r\n            if (context.isBatched) {\r\n                // we are in a batch, so add to batch, remove dependency, and resolve with the batch's promise\r\n                var p = context.batch.add(context.requestAbsoluteUrl, context.verb, context.options, context.parser, context.requestId);\r\n                // we release the dependency here to ensure the batch does not execute until the request is added to the batch\r\n                if (isFunc(context.batchDependency)) {\r\n                    context.batchDependency();\r\n                }\r\n                Logger.write(\"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Batching request in batch \" + context.batch.batchId + \".\", 1 /* Info */);\r\n                // we set the result as the promise which will be resolved by the batch's execution\r\n                resolve(setResult(context, p));\r\n            }\r\n            else {\r\n                Logger.write(\"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Sending request.\", 1 /* Info */);\r\n                // we are not part of a batch, so proceed as normal\r\n                var client = context.clientFactory();\r\n                var opts = extend(context.options || {}, { method: context.verb });\r\n                client.fetch(context.requestAbsoluteUrl, opts)\r\n                    .then(function (response) { return context.parser.parse(response); })\r\n                    .then(function (result) { return setResult(context, result); })\r\n                    .then(function (ctx) { return resolve(ctx); })\r\n                    .catch(function (e) { return reject(e); });\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Logs the end of the request\r\n     */\r\n    PipelineMethods.logEnd = function (context) {\r\n        return new Promise(function (resolve) {\r\n            if (context.isBatched) {\r\n                Logger.log({\r\n                    data: Logger.activeLogLevel === 1 /* Info */ ? {} : context,\r\n                    level: 1 /* Info */,\r\n                    message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") \" + context.verb + \" request will complete in batch \" + context.batch.batchId + \".\",\r\n                });\r\n            }\r\n            else {\r\n                Logger.log({\r\n                    data: Logger.activeLogLevel === 1 /* Info */ ? {} : context,\r\n                    level: 1 /* Info */,\r\n                    message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Completing \" + context.verb + \" request.\",\r\n                });\r\n            }\r\n            resolve(context);\r\n        });\r\n    };\r\n    tslib_1.__decorate([\r\n        requestPipelineMethod(true)\r\n    ], PipelineMethods, \"logStart\", null);\r\n    tslib_1.__decorate([\r\n        requestPipelineMethod()\r\n    ], PipelineMethods, \"caching\", null);\r\n    tslib_1.__decorate([\r\n        requestPipelineMethod()\r\n    ], PipelineMethods, \"send\", null);\r\n    tslib_1.__decorate([\r\n        requestPipelineMethod(true)\r\n    ], PipelineMethods, \"logEnd\", null);\r\n    return PipelineMethods;\r\n}());\r\nexport { PipelineMethods };\r\nexport function getDefaultPipeline() {\r\n    return [\r\n        PipelineMethods.logStart,\r\n        PipelineMethods.caching,\r\n        PipelineMethods.send,\r\n        PipelineMethods.logEnd,\r\n    ].slice(0);\r\n}\r\n//# sourceMappingURL=pipeline.js.map","import * as tslib_1 from \"tslib\";\r\nimport { combine, RuntimeConfig, mergeOptions, objectDefinedNotNull, isArray, } from \"@pnp/common\";\r\nimport { ODataDefaultParser, JSONParser } from \"./parsers\";\r\nimport { getDefaultPipeline, pipe, } from \"./pipeline\";\r\nvar Queryable = /** @class */ (function () {\r\n    function Queryable() {\r\n        this._query = new Map();\r\n        this._options = {};\r\n        this._url = \"\";\r\n        this._parentUrl = \"\";\r\n        this._useCaching = false;\r\n        this._cachingOptions = null;\r\n        this._cloneParentWasCaching = false;\r\n        this._cloneParentCacheOptions = null;\r\n        this._requestPipeline = null;\r\n    }\r\n    /**\r\n    * Gets the currentl url\r\n    *\r\n    */\r\n    Queryable.prototype.toUrl = function () {\r\n        return this._url;\r\n    };\r\n    /**\r\n     * Directly concatonates the supplied string to the current url, not normalizing \"/\" chars\r\n     *\r\n     * @param pathPart The string to concatonate to the url\r\n     */\r\n    Queryable.prototype.concat = function (pathPart) {\r\n        this._url += pathPart;\r\n        return this;\r\n    };\r\n    Object.defineProperty(Queryable.prototype, \"query\", {\r\n        /**\r\n         * Provides access to the query builder for this url\r\n         *\r\n         */\r\n        get: function () {\r\n            return this._query;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Sets custom options for current object and all derived objects accessible via chaining\r\n     *\r\n     * @param options custom options\r\n     */\r\n    Queryable.prototype.configure = function (options) {\r\n        mergeOptions(this._options, options);\r\n        return this;\r\n    };\r\n    /**\r\n     * Configures this instance from the configure options of the supplied instance\r\n     *\r\n     * @param o Instance from which options should be taken\r\n     */\r\n    Queryable.prototype.configureFrom = function (o) {\r\n        mergeOptions(this._options, o._options);\r\n        return this;\r\n    };\r\n    /**\r\n     * Enables caching for this request\r\n     *\r\n     * @param options Defines the options used when caching this request\r\n     */\r\n    Queryable.prototype.usingCaching = function (options) {\r\n        if (!RuntimeConfig.globalCacheDisable) {\r\n            this._useCaching = true;\r\n            if (options !== undefined) {\r\n                this._cachingOptions = options;\r\n            }\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Allows you to set a request specific processing pipeline\r\n     *\r\n     * @param pipeline The set of methods, in order, to execute a given request\r\n     */\r\n    Queryable.prototype.withPipeline = function (pipeline) {\r\n        this._requestPipeline = pipeline.slice(0);\r\n        return this;\r\n    };\r\n    Queryable.prototype.getCore = function (parser, options) {\r\n        if (parser === void 0) { parser = new JSONParser(); }\r\n        if (options === void 0) { options = {}; }\r\n        // Fix for #304 - when we clone objects we in some cases then execute a get request\r\n        // in these cases the caching settings were getting dropped from the request\r\n        // this tracks if the object from which this was cloned was caching and applies that to an immediate get request\r\n        // does not affect objects cloned from this as we are using different fields to track the settings so it won't\r\n        // be triggered\r\n        if (this._cloneParentWasCaching) {\r\n            this.usingCaching(this._cloneParentCacheOptions);\r\n        }\r\n        return this.reqImpl(\"GET\", options, parser);\r\n    };\r\n    Queryable.prototype.postCore = function (options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (parser === void 0) { parser = new JSONParser(); }\r\n        return this.reqImpl(\"POST\", options, parser);\r\n    };\r\n    Queryable.prototype.patchCore = function (options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (parser === void 0) { parser = new JSONParser(); }\r\n        return this.reqImpl(\"PATCH\", options, parser);\r\n    };\r\n    Queryable.prototype.deleteCore = function (options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (parser === void 0) { parser = new JSONParser(); }\r\n        return this.reqImpl(\"DELETE\", options, parser);\r\n    };\r\n    Queryable.prototype.putCore = function (options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (parser === void 0) { parser = new JSONParser(); }\r\n        return this.reqImpl(\"PUT\", options, parser);\r\n    };\r\n    Queryable.prototype.reqImpl = function (method, options, parser) {\r\n        var _this = this;\r\n        if (options === void 0) { options = {}; }\r\n        return this.getRequestPipeline(method, options, parser)\r\n            .then(function (pipeline) { return _this.toRequestContext(method, options, parser, pipeline); })\r\n            .then(function (context) { return pipe(context); });\r\n    };\r\n    /**\r\n     * Appends the given string and normalizes \"/\" chars\r\n     *\r\n     * @param pathPart The string to append\r\n     */\r\n    Queryable.prototype.append = function (pathPart) {\r\n        this._url = combine(this._url, pathPart);\r\n    };\r\n    Object.defineProperty(Queryable.prototype, \"parentUrl\", {\r\n        /**\r\n         * Gets the parent url used when creating this instance\r\n         *\r\n         */\r\n        get: function () {\r\n            return this._parentUrl;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Extends this queryable from the provided parent\r\n     *\r\n     * @param parent Parent queryable from which we will derive a base url\r\n     * @param path Additional path\r\n     */\r\n    Queryable.prototype.extend = function (parent, path) {\r\n        this._parentUrl = parent._url;\r\n        this._url = combine(this._parentUrl, path || \"\");\r\n        this.configureFrom(parent);\r\n    };\r\n    /**\r\n     * Configures a cloned object from this instance\r\n     *\r\n     * @param clone\r\n     */\r\n    Queryable.prototype._clone = function (clone, _0) {\r\n        clone.configureFrom(this);\r\n        if (this._useCaching) {\r\n            clone._cloneParentWasCaching = true;\r\n            clone._cloneParentCacheOptions = this._cachingOptions;\r\n        }\r\n        return clone;\r\n    };\r\n    /**\r\n     * Handles getting the request pipeline to run for a given request\r\n     */\r\n    // @ts-ignore\r\n    // justified because we want to show that all these arguments are passed to the method so folks inheriting and potentially overriding\r\n    // clearly see how the method is invoked inside the class\r\n    Queryable.prototype.getRequestPipeline = function (method, options, parser) {\r\n        var _this = this;\r\n        if (options === void 0) { options = {}; }\r\n        return new Promise(function (resolve) {\r\n            if (objectDefinedNotNull(_this._requestPipeline) && isArray(_this._requestPipeline)) {\r\n                resolve(_this._requestPipeline);\r\n            }\r\n            else {\r\n                resolve(getDefaultPipeline());\r\n            }\r\n        });\r\n    };\r\n    return Queryable;\r\n}());\r\nexport { Queryable };\r\nvar ODataQueryable = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ODataQueryable, _super);\r\n    function ODataQueryable() {\r\n        var _this = _super.call(this) || this;\r\n        _this._batch = null;\r\n        _this._batchDependency = null;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Adds this query to the supplied batch\r\n     *\r\n     * @example\r\n     * ```\r\n     *\r\n     * let b = pnp.sp.createBatch();\r\n     * pnp.sp.web.inBatch(b).get().then(...);\r\n     * b.execute().then(...)\r\n     * ```\r\n     */\r\n    ODataQueryable.prototype.inBatch = function (batch) {\r\n        if (this.batch !== null) {\r\n            throw Error(\"This query is already part of a batch.\");\r\n        }\r\n        if (objectDefinedNotNull(batch)) {\r\n            this._batch = batch;\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Gets the currentl url\r\n     *\r\n     */\r\n    ODataQueryable.prototype.toUrl = function () {\r\n        return this._url;\r\n    };\r\n    /**\r\n     * Executes the currently built request\r\n     *\r\n     * @param parser Allows you to specify a parser to handle the result\r\n     * @param getOptions The options used for this request\r\n     */\r\n    ODataQueryable.prototype.get = function (parser, options) {\r\n        if (parser === void 0) { parser = new ODataDefaultParser(); }\r\n        if (options === void 0) { options = {}; }\r\n        return this.getCore(parser, options);\r\n    };\r\n    ODataQueryable.prototype.getCore = function (parser, options) {\r\n        if (parser === void 0) { parser = new ODataDefaultParser(); }\r\n        if (options === void 0) { options = {}; }\r\n        return _super.prototype.getCore.call(this, parser, options);\r\n    };\r\n    ODataQueryable.prototype.postCore = function (options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (parser === void 0) { parser = new ODataDefaultParser(); }\r\n        return _super.prototype.postCore.call(this, options, parser);\r\n    };\r\n    ODataQueryable.prototype.patchCore = function (options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (parser === void 0) { parser = new ODataDefaultParser(); }\r\n        return _super.prototype.patchCore.call(this, options, parser);\r\n    };\r\n    ODataQueryable.prototype.deleteCore = function (options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (parser === void 0) { parser = new ODataDefaultParser(); }\r\n        return _super.prototype.deleteCore.call(this, options, parser);\r\n    };\r\n    ODataQueryable.prototype.putCore = function (options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (parser === void 0) { parser = new ODataDefaultParser(); }\r\n        return _super.prototype.putCore.call(this, options, parser);\r\n    };\r\n    ODataQueryable.prototype.reqImpl = function (method, options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (this.hasBatch) {\r\n            this._batchDependency = this.addBatchDependency();\r\n        }\r\n        return _super.prototype.reqImpl.call(this, method, options, parser);\r\n    };\r\n    /**\r\n     * Blocks a batch call from occuring, MUST be cleared by calling the returned function\r\n    */\r\n    ODataQueryable.prototype.addBatchDependency = function () {\r\n        if (this._batch !== null) {\r\n            return this._batch.addDependency();\r\n        }\r\n        return function () { return null; };\r\n    };\r\n    Object.defineProperty(ODataQueryable.prototype, \"hasBatch\", {\r\n        /**\r\n         * Indicates if the current query has a batch associated\r\n         *\r\n         */\r\n        get: function () {\r\n            return objectDefinedNotNull(this._batch);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ODataQueryable.prototype, \"batch\", {\r\n        /**\r\n         * The batch currently associated with this query or null\r\n         *\r\n         */\r\n        get: function () {\r\n            return this.hasBatch ? this._batch : null;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Configures a cloned object from this instance\r\n     *\r\n     * @param clone\r\n     */\r\n    ODataQueryable.prototype._clone = function (clone, cloneSettings) {\r\n        clone = _super.prototype._clone.call(this, clone, cloneSettings);\r\n        if (cloneSettings.includeBatch) {\r\n            clone = clone.inBatch(this._batch);\r\n        }\r\n        return clone;\r\n    };\r\n    return ODataQueryable;\r\n}(Queryable));\r\nexport { ODataQueryable };\r\n//# sourceMappingURL=queryable.js.map","import { getGUID } from \"@pnp/common\";\r\nvar ODataBatch = /** @class */ (function () {\r\n    function ODataBatch(_batchId) {\r\n        if (_batchId === void 0) { _batchId = getGUID(); }\r\n        this._batchId = _batchId;\r\n        this._reqs = [];\r\n        this._deps = [];\r\n        this._rDeps = [];\r\n    }\r\n    Object.defineProperty(ODataBatch.prototype, \"batchId\", {\r\n        get: function () {\r\n            return this._batchId;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ODataBatch.prototype, \"requests\", {\r\n        /**\r\n         * The requests contained in this batch\r\n         */\r\n        get: function () {\r\n            return this._reqs;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     *\r\n     * @param url Request url\r\n     * @param method Request method (GET, POST, etc)\r\n     * @param options Any request options\r\n     * @param parser The parser used to handle the eventual return from the query\r\n     * @param id An identifier used to track a request within a batch\r\n     */\r\n    ODataBatch.prototype.add = function (url, method, options, parser, id) {\r\n        var info = {\r\n            id: id,\r\n            method: method.toUpperCase(),\r\n            options: options,\r\n            parser: parser,\r\n            reject: null,\r\n            resolve: null,\r\n            url: url,\r\n        };\r\n        var p = new Promise(function (resolve, reject) {\r\n            info.resolve = resolve;\r\n            info.reject = reject;\r\n        });\r\n        this._reqs.push(info);\r\n        return p;\r\n    };\r\n    /**\r\n     * Adds a dependency insuring that some set of actions will occur before a batch is processed.\r\n     * MUST be cleared using the returned resolve delegate to allow batches to run\r\n     */\r\n    ODataBatch.prototype.addDependency = function () {\r\n        var resolver = function () { return void (0); };\r\n        this._deps.push(new Promise(function (resolve) {\r\n            resolver = resolve;\r\n        }));\r\n        return resolver;\r\n    };\r\n    /**\r\n     * The batch's execute method will not resolve util any promises added here resolve\r\n     *\r\n     * @param p The dependent promise\r\n     */\r\n    ODataBatch.prototype.addResolveBatchDependency = function (p) {\r\n        this._rDeps.push(p);\r\n    };\r\n    /**\r\n     * Execute the current batch and resolve the associated promises\r\n     *\r\n     * @returns A promise which will be resolved once all of the batch's child promises have resolved\r\n     */\r\n    ODataBatch.prototype.execute = function () {\r\n        var _this = this;\r\n        // we need to check the dependencies twice due to how different engines handle things.\r\n        // We can get a second set of promises added during the first set resolving\r\n        return Promise.all(this._deps)\r\n            .then(function () { return Promise.all(_this._deps); })\r\n            .then(function () { return _this.executeImpl(); })\r\n            .then(function () { return Promise.all(_this._rDeps); })\r\n            .then(function () { return void (0); });\r\n    };\r\n    return ODataBatch;\r\n}());\r\nexport { ODataBatch };\r\n//# sourceMappingURL=odatabatch.js.map","import { stringIsNullOrEmpty } from \"@pnp/common\";\r\nexport function extractWebUrl(candidateUrl) {\r\n    if (stringIsNullOrEmpty(candidateUrl)) {\r\n        return \"\";\r\n    }\r\n    var index = candidateUrl.indexOf(\"_api/\");\r\n    if (index < 0) {\r\n        index = candidateUrl.indexOf(\"_vti_bin/\");\r\n    }\r\n    if (index > -1) {\r\n        return candidateUrl.substr(0, index);\r\n    }\r\n    // if all else fails just give them what they gave us back\r\n    return candidateUrl;\r\n}\r\n//# sourceMappingURL=extractweburl.js.map","import * as tslib_1 from \"tslib\";\r\nimport { extend, combine, hOP } from \"@pnp/common\";\r\nimport { Logger } from \"@pnp/logging\";\r\nimport { ODataParserBase } from \"@pnp/odata\";\r\nimport { extractWebUrl } from \"./utils/extractweburl\";\r\nexport function odataUrlFrom(candidate) {\r\n    var parts = [];\r\n    var s = [\"odata.type\", \"odata.editLink\", \"__metadata\", \"odata.metadata\"];\r\n    if (hOP(candidate, s[0]) && candidate[s[0]] === \"SP.Web\") {\r\n        // webs return an absolute url in the editLink\r\n        if (hOP(candidate, s[1])) {\r\n            parts.push(candidate[s[1]]);\r\n        }\r\n        else if (hOP(candidate, s[2])) {\r\n            // we are dealing with verbose, which has an absolute uri\r\n            parts.push(candidate.__metadata.uri);\r\n        }\r\n    }\r\n    else {\r\n        if (hOP(candidate, s[3]) && hOP(candidate, s[1])) {\r\n            // we are dealign with minimal metadata (default)\r\n            parts.push(extractWebUrl(candidate[s[3]]), \"_api\", candidate[s[1]]);\r\n        }\r\n        else if (hOP(candidate, s[1])) {\r\n            parts.push(\"_api\", candidate[s[1]]);\r\n        }\r\n        else if (hOP(candidate, s[2])) {\r\n            // we are dealing with verbose, which has an absolute uri\r\n            parts.push(candidate.__metadata.uri);\r\n        }\r\n    }\r\n    if (parts.length < 1) {\r\n        Logger.write(\"No uri information found in ODataEntity parsing, chaining will fail for this object.\", 2 /* Warning */);\r\n        return \"\";\r\n    }\r\n    return combine.apply(void 0, parts);\r\n}\r\nvar SPODataEntityParserImpl = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SPODataEntityParserImpl, _super);\r\n    function SPODataEntityParserImpl(factory) {\r\n        var _this = _super.call(this) || this;\r\n        _this.factory = factory;\r\n        _this.hydrate = function (d) {\r\n            var o = new _this.factory(odataUrlFrom(d), null);\r\n            return extend(o, d);\r\n        };\r\n        return _this;\r\n    }\r\n    SPODataEntityParserImpl.prototype.parse = function (r) {\r\n        var _this = this;\r\n        return _super.prototype.parse.call(this, r).then(function (d) {\r\n            var o = new _this.factory(odataUrlFrom(d), null);\r\n            return extend(o, d);\r\n        });\r\n    };\r\n    return SPODataEntityParserImpl;\r\n}(ODataParserBase));\r\nvar SPODataEntityArrayParserImpl = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SPODataEntityArrayParserImpl, _super);\r\n    function SPODataEntityArrayParserImpl(factory) {\r\n        var _this = _super.call(this) || this;\r\n        _this.factory = factory;\r\n        _this.hydrate = function (d) {\r\n            return d.map(function (v) {\r\n                var o = new _this.factory(odataUrlFrom(v), null);\r\n                return extend(o, v);\r\n            });\r\n        };\r\n        return _this;\r\n    }\r\n    SPODataEntityArrayParserImpl.prototype.parse = function (r) {\r\n        var _this = this;\r\n        return _super.prototype.parse.call(this, r).then(function (d) {\r\n            return d.map(function (v) {\r\n                var o = new _this.factory(odataUrlFrom(v), null);\r\n                return extend(o, v);\r\n            });\r\n        });\r\n    };\r\n    return SPODataEntityArrayParserImpl;\r\n}(ODataParserBase));\r\nexport function spODataEntity(factory) {\r\n    return new SPODataEntityParserImpl(factory);\r\n}\r\nexport function spODataEntityArray(factory) {\r\n    return new SPODataEntityArrayParserImpl(factory);\r\n}\r\n//# sourceMappingURL=odata.js.map","import { combine, extend } from \"@pnp/common\";\r\nimport { ODataDefaultParser } from \"@pnp/odata\";\r\nimport { SPRuntimeConfig } from \"../config/splibconfig\";\r\nvar CachedDigest = /** @class */ (function () {\r\n    function CachedDigest() {\r\n    }\r\n    return CachedDigest;\r\n}());\r\nexport { CachedDigest };\r\n// allows for the caching of digests across all HttpClient's which each have their own DigestCache wrapper.\r\nvar digests = new Map();\r\nvar DigestCache = /** @class */ (function () {\r\n    function DigestCache(_httpClient, _digests) {\r\n        if (_digests === void 0) { _digests = digests; }\r\n        this._httpClient = _httpClient;\r\n        this._digests = _digests;\r\n    }\r\n    DigestCache.prototype.getDigest = function (webUrl) {\r\n        var _this = this;\r\n        var cachedDigest = this._digests.get(webUrl);\r\n        if (cachedDigest !== undefined) {\r\n            var now = new Date();\r\n            if (now < cachedDigest.expiration) {\r\n                return Promise.resolve(cachedDigest.value);\r\n            }\r\n        }\r\n        var url = combine(webUrl, \"/_api/contextinfo\");\r\n        var headers = {\r\n            \"Accept\": \"application/json;odata=verbose\",\r\n            \"Content-Type\": \"application/json;odata=verbose;charset=utf-8\",\r\n        };\r\n        return this._httpClient.fetchRaw(url, {\r\n            cache: \"no-cache\",\r\n            credentials: \"same-origin\",\r\n            headers: extend(headers, SPRuntimeConfig.headers, true),\r\n            method: \"POST\",\r\n        }).then(function (response) {\r\n            var parser = new ODataDefaultParser();\r\n            return parser.parse(response).then(function (d) { return d.GetContextWebInformation; });\r\n        }).then(function (data) {\r\n            var newCachedDigest = new CachedDigest();\r\n            newCachedDigest.value = data.FormDigestValue;\r\n            var seconds = data.FormDigestTimeoutSeconds;\r\n            var expiration = new Date();\r\n            expiration.setTime(expiration.getTime() + 1000 * seconds);\r\n            newCachedDigest.expiration = expiration;\r\n            _this._digests.set(webUrl, newCachedDigest);\r\n            return newCachedDigest.value;\r\n        });\r\n    };\r\n    DigestCache.prototype.clear = function () {\r\n        this._digests.clear();\r\n    };\r\n    return DigestCache;\r\n}());\r\nexport { DigestCache };\r\n//# sourceMappingURL=digestcache.js.map","import { DigestCache } from \"./digestcache\";\r\nimport { extend, mergeHeaders, getCtxCallback, } from \"@pnp/common\";\r\nimport { SPRuntimeConfig } from \"../config/splibconfig\";\r\nimport { extractWebUrl } from \"../utils/extractweburl\";\r\nvar SPHttpClient = /** @class */ (function () {\r\n    function SPHttpClient(_impl) {\r\n        if (_impl === void 0) { _impl = SPRuntimeConfig.fetchClientFactory(); }\r\n        this._impl = _impl;\r\n        this._digestCache = new DigestCache(this);\r\n    }\r\n    SPHttpClient.prototype.fetch = function (url, options) {\r\n        var _this = this;\r\n        if (options === void 0) { options = {}; }\r\n        var opts = extend(options, { cache: \"no-cache\", credentials: \"same-origin\" }, true);\r\n        var headers = new Headers();\r\n        // first we add the global headers so they can be overwritten by any passed in locally to this call\r\n        mergeHeaders(headers, SPRuntimeConfig.headers);\r\n        // second we add the local options so we can overwrite the globals\r\n        mergeHeaders(headers, options.headers);\r\n        // lastly we apply any default headers we need that may not exist\r\n        if (!headers.has(\"Accept\")) {\r\n            headers.append(\"Accept\", \"application/json\");\r\n        }\r\n        if (!headers.has(\"Content-Type\")) {\r\n            headers.append(\"Content-Type\", \"application/json;odata=verbose;charset=utf-8\");\r\n        }\r\n        if (!headers.has(\"X-ClientService-ClientTag\")) {\r\n            headers.append(\"X-ClientService-ClientTag\", \"PnPCoreJS:@pnp-1.3.4\");\r\n        }\r\n        if (!headers.has(\"User-Agent\")) {\r\n            // this marks the requests for understanding by the service\r\n            headers.append(\"User-Agent\", \"NONISV|SharePointPnP|PnPCoreJS/1.3.4\");\r\n        }\r\n        opts = extend(opts, { headers: headers });\r\n        if (opts.method && opts.method.toUpperCase() !== \"GET\") {\r\n            // if we have either a request digest or an authorization header we don't need a digest\r\n            if (!headers.has(\"X-RequestDigest\") && !headers.has(\"Authorization\")) {\r\n                return this._digestCache.getDigest(extractWebUrl(url))\r\n                    .then(function (digest) {\r\n                    headers.append(\"X-RequestDigest\", digest);\r\n                    return _this.fetchRaw(url, opts);\r\n                });\r\n            }\r\n        }\r\n        return this.fetchRaw(url, opts);\r\n    };\r\n    SPHttpClient.prototype.fetchRaw = function (url, options) {\r\n        var _this = this;\r\n        if (options === void 0) { options = {}; }\r\n        // here we need to normalize the headers\r\n        var rawHeaders = new Headers();\r\n        mergeHeaders(rawHeaders, options.headers);\r\n        options = extend(options, { headers: rawHeaders });\r\n        var retry = function (ctx) {\r\n            // handles setting the proper timeout for a retry\r\n            var setRetry = function (response) {\r\n                var delay;\r\n                if (response.headers.has(\"Retry-After\")) {\r\n                    // if we have gotten a header, use that value as the delay value\r\n                    delay = parseInt(response.headers.get(\"Retry-After\"), 10);\r\n                }\r\n                else {\r\n                    // grab our current delay\r\n                    delay = ctx.delay;\r\n                    // Increment our counters.\r\n                    ctx.delay *= 2;\r\n                }\r\n                ctx.attempts++;\r\n                // If we have exceeded the retry count, reject.\r\n                if (ctx.retryCount <= ctx.attempts) {\r\n                    ctx.reject(Error(\"Retry count exceeded (\" + ctx.retryCount + \") for request. Response status: [\" + response.status + \"] \" + response.statusText));\r\n                }\r\n                else {\r\n                    // Set our retry timeout for {delay} milliseconds.\r\n                    setTimeout(getCtxCallback(_this, retry, ctx), delay);\r\n                }\r\n            };\r\n            // send the actual request\r\n            _this._impl.fetch(url, options).then(function (response) {\r\n                if (response.status === 429) {\r\n                    // we have been throttled\r\n                    setRetry(response);\r\n                }\r\n                else {\r\n                    ctx.resolve(response);\r\n                }\r\n            }).catch(function (response) {\r\n                if (response.status === 503) {\r\n                    // http status code 503, we can retry this\r\n                    setRetry(response);\r\n                }\r\n                else {\r\n                    ctx.reject(response);\r\n                }\r\n            });\r\n        };\r\n        return new Promise(function (resolve, reject) {\r\n            var retryContext = {\r\n                attempts: 0,\r\n                delay: 100,\r\n                reject: reject,\r\n                resolve: resolve,\r\n                retryCount: 7,\r\n            };\r\n            retry.call(_this, retryContext);\r\n        });\r\n    };\r\n    SPHttpClient.prototype.get = function (url, options) {\r\n        if (options === void 0) { options = {}; }\r\n        var opts = extend(options, { method: \"GET\" });\r\n        return this.fetch(url, opts);\r\n    };\r\n    SPHttpClient.prototype.post = function (url, options) {\r\n        if (options === void 0) { options = {}; }\r\n        var opts = extend(options, { method: \"POST\" });\r\n        return this.fetch(url, opts);\r\n    };\r\n    SPHttpClient.prototype.patch = function (url, options) {\r\n        if (options === void 0) { options = {}; }\r\n        var opts = extend(options, { method: \"PATCH\" });\r\n        return this.fetch(url, opts);\r\n    };\r\n    SPHttpClient.prototype.delete = function (url, options) {\r\n        if (options === void 0) { options = {}; }\r\n        var opts = extend(options, { method: \"DELETE\" });\r\n        return this.fetch(url, opts);\r\n    };\r\n    return SPHttpClient;\r\n}());\r\nexport { SPHttpClient };\r\n//# sourceMappingURL=sphttpclient.js.map","export function metadata(type) {\r\n    return {\r\n        \"__metadata\": { \"type\": type },\r\n    };\r\n}\r\n//# sourceMappingURL=metadata.js.map","import * as tslib_1 from \"tslib\";\r\nimport { combine, isUrlAbsolute, mergeOptions, extend, getGUID, jsS, } from \"@pnp/common\";\r\nimport { ODataQueryable, } from \"@pnp/odata\";\r\nimport { Logger } from \"@pnp/logging\";\r\nimport { SPHttpClient } from \"./net/sphttpclient\";\r\nimport { toAbsoluteUrl } from \"./utils/toabsoluteurl\";\r\nimport { metadata } from \"./utils/metadata\";\r\n/**\r\n * SharePointQueryable Base Class\r\n *\r\n */\r\nvar SharePointQueryable = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SharePointQueryable, _super);\r\n    /**\r\n     * Creates a new instance of the SharePointQueryable class\r\n     *\r\n     * @constructor\r\n     * @param baseUrl A string or SharePointQueryable that should form the base part of the url\r\n     *\r\n     */\r\n    function SharePointQueryable(baseUrl, path) {\r\n        var _this = _super.call(this) || this;\r\n        _this._forceCaching = false;\r\n        if (typeof baseUrl === \"string\") {\r\n            // we need to do some extra parsing to get the parent url correct if we are\r\n            // being created from just a string.\r\n            if (isUrlAbsolute(baseUrl) || baseUrl.lastIndexOf(\"/\") < 0) {\r\n                _this._parentUrl = baseUrl;\r\n                _this._url = combine(baseUrl, path);\r\n            }\r\n            else if (baseUrl.lastIndexOf(\"/\") > baseUrl.lastIndexOf(\"(\")) {\r\n                // .../items(19)/fields\r\n                var index = baseUrl.lastIndexOf(\"/\");\r\n                _this._parentUrl = baseUrl.slice(0, index);\r\n                path = combine(baseUrl.slice(index), path);\r\n                _this._url = combine(_this._parentUrl, path);\r\n            }\r\n            else {\r\n                // .../items(19)\r\n                var index = baseUrl.lastIndexOf(\"(\");\r\n                _this._parentUrl = baseUrl.slice(0, index);\r\n                _this._url = combine(baseUrl, path);\r\n            }\r\n        }\r\n        else {\r\n            _this.extend(baseUrl, path);\r\n            var target = baseUrl.query.get(\"@target\");\r\n            if (target !== undefined) {\r\n                _this.query.set(\"@target\", target);\r\n            }\r\n        }\r\n        return _this;\r\n    }\r\n    /**\r\n     * Creates a new instance of the supplied factory and extends this into that new instance\r\n     *\r\n     * @param factory constructor for the new SharePointQueryable\r\n     */\r\n    SharePointQueryable.prototype.as = function (factory) {\r\n        var o = new factory(this._url, null);\r\n        return extend(o, this, true);\r\n    };\r\n    /**\r\n     * Gets the full url with query information\r\n     *\r\n     */\r\n    SharePointQueryable.prototype.toUrlAndQuery = function () {\r\n        var aliasedParams = new Map(this.query);\r\n        var url = this.toUrl().replace(/'!(@.*?)::(.*?)'/ig, function (match, labelName, value) {\r\n            Logger.write(\"Rewriting aliased parameter from match \" + match + \" to label: \" + labelName + \" value: \" + value, 0 /* Verbose */);\r\n            aliasedParams.set(labelName, \"'\" + value + \"'\");\r\n            return labelName;\r\n        });\r\n        if (aliasedParams.size > 0) {\r\n            var char = url.indexOf(\"?\") > -1 ? \"&\" : \"?\";\r\n            url += \"\" + char + Array.from(aliasedParams).map(function (v) { return v[0] + \"=\" + v[1]; }).join(\"&\");\r\n        }\r\n        return url;\r\n    };\r\n    /**\r\n     * Choose which fields to return\r\n     *\r\n     * @param selects One or more fields to return\r\n     */\r\n    SharePointQueryable.prototype.select = function () {\r\n        var selects = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            selects[_i] = arguments[_i];\r\n        }\r\n        if (selects.length > 0) {\r\n            this.query.set(\"$select\", selects.join(\",\"));\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Expands fields such as lookups to get additional data\r\n     *\r\n     * @param expands The Fields for which to expand the values\r\n     */\r\n    SharePointQueryable.prototype.expand = function () {\r\n        var expands = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            expands[_i] = arguments[_i];\r\n        }\r\n        if (expands.length > 0) {\r\n            this.query.set(\"$expand\", expands.join(\",\"));\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Gets a parent for this instance as specified\r\n     *\r\n     * @param factory The contructor for the class to create\r\n     */\r\n    SharePointQueryable.prototype.getParent = function (factory, baseUrl, path, batch) {\r\n        if (baseUrl === void 0) { baseUrl = this.parentUrl; }\r\n        var parent = new factory(baseUrl, path).configureFrom(this);\r\n        var t = \"@target\";\r\n        if (this.query.has(t)) {\r\n            parent.query.set(t, this.query.get(t));\r\n        }\r\n        if (batch !== undefined) {\r\n            parent = parent.inBatch(batch);\r\n        }\r\n        return parent;\r\n    };\r\n    /**\r\n     * Clones this SharePointQueryable into a new SharePointQueryable instance of T\r\n     * @param factory Constructor used to create the new instance\r\n     * @param additionalPath Any additional path to include in the clone\r\n     * @param includeBatch If true this instance's batch will be added to the cloned instance\r\n     */\r\n    SharePointQueryable.prototype.clone = function (factory, additionalPath, includeBatch) {\r\n        if (includeBatch === void 0) { includeBatch = true; }\r\n        var clone = _super.prototype._clone.call(this, new factory(this, additionalPath), { includeBatch: includeBatch });\r\n        // handle sp specific clone actions\r\n        var t = \"@target\";\r\n        if (this.query.has(t)) {\r\n            clone.query.set(t, this.query.get(t));\r\n        }\r\n        return clone;\r\n    };\r\n    /**\r\n     * Converts the current instance to a request context\r\n     *\r\n     * @param verb The request verb\r\n     * @param options The set of supplied request options\r\n     * @param parser The supplied ODataParser instance\r\n     * @param pipeline Optional request processing pipeline\r\n     */\r\n    SharePointQueryable.prototype.toRequestContext = function (verb, options, parser, pipeline) {\r\n        var _this = this;\r\n        if (options === void 0) { options = {}; }\r\n        var dependencyDispose = this.hasBatch ? this._batchDependency : function () { return; };\r\n        return toAbsoluteUrl(this.toUrlAndQuery()).then(function (url) {\r\n            mergeOptions(options, _this._options);\r\n            // build our request context\r\n            var context = {\r\n                batch: _this.batch,\r\n                batchDependency: dependencyDispose,\r\n                cachingOptions: _this._cachingOptions,\r\n                clientFactory: function () { return new SPHttpClient(); },\r\n                isBatched: _this.hasBatch,\r\n                isCached: _this._forceCaching || (_this._useCaching && /^get$/i.test(verb)),\r\n                options: options,\r\n                parser: parser,\r\n                pipeline: pipeline,\r\n                requestAbsoluteUrl: url,\r\n                requestId: getGUID(),\r\n                verb: verb,\r\n            };\r\n            return context;\r\n        });\r\n    };\r\n    return SharePointQueryable;\r\n}(ODataQueryable));\r\nexport { SharePointQueryable };\r\n/**\r\n * Represents a REST collection which can be filtered, paged, and selected\r\n *\r\n */\r\nvar SharePointQueryableCollection = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SharePointQueryableCollection, _super);\r\n    function SharePointQueryableCollection() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Filters the returned collection (https://msdn.microsoft.com/en-us/library/office/fp142385.aspx#bk_supported)\r\n     *\r\n     * @param filter The string representing the filter query\r\n     */\r\n    SharePointQueryableCollection.prototype.filter = function (filter) {\r\n        this.query.set(\"$filter\", filter);\r\n        return this;\r\n    };\r\n    /**\r\n     * Orders based on the supplied fields\r\n     *\r\n     * @param orderby The name of the field on which to sort\r\n     * @param ascending If false DESC is appended, otherwise ASC (default)\r\n     */\r\n    SharePointQueryableCollection.prototype.orderBy = function (orderBy, ascending) {\r\n        if (ascending === void 0) { ascending = true; }\r\n        var o = \"$orderby\";\r\n        var query = this.query.has(o) ? this.query.get(o).split(\",\") : [];\r\n        query.push(orderBy + \" \" + (ascending ? \"asc\" : \"desc\"));\r\n        this.query.set(o, query.join(\",\"));\r\n        return this;\r\n    };\r\n    /**\r\n     * Skips the specified number of items\r\n     *\r\n     * @param skip The number of items to skip\r\n     */\r\n    SharePointQueryableCollection.prototype.skip = function (skip) {\r\n        this.query.set(\"$skip\", skip.toString());\r\n        return this;\r\n    };\r\n    /**\r\n     * Limits the query to only return the specified number of items\r\n     *\r\n     * @param top The query row limit\r\n     */\r\n    SharePointQueryableCollection.prototype.top = function (top) {\r\n        this.query.set(\"$top\", top.toString());\r\n        return this;\r\n    };\r\n    return SharePointQueryableCollection;\r\n}(SharePointQueryable));\r\nexport { SharePointQueryableCollection };\r\n/**\r\n * Represents an instance that can be selected\r\n *\r\n */\r\nvar SharePointQueryableInstance = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SharePointQueryableInstance, _super);\r\n    function SharePointQueryableInstance() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Curries the update function into the common pieces\r\n     *\r\n     * @param type\r\n     * @param mapper\r\n     */\r\n    SharePointQueryableInstance.prototype._update = function (type, mapper) {\r\n        var _this = this;\r\n        return function (props) { return _this.postCore({\r\n            body: jsS(extend(metadata(type), props)),\r\n            headers: {\r\n                \"X-HTTP-Method\": \"MERGE\",\r\n            },\r\n        }).then(function (d) { return mapper(d, props); }); };\r\n    };\r\n    /**\r\n    * Deletes this instance\r\n    *\r\n    */\r\n    SharePointQueryableInstance.prototype._delete = function () {\r\n        return this.postCore({\r\n            headers: {\r\n                \"X-HTTP-Method\": \"DELETE\",\r\n            },\r\n        });\r\n    };\r\n    /**\r\n     * Deletes this instance with an etag value in the headers\r\n     *\r\n     * @param eTag eTag to delete\r\n     */\r\n    SharePointQueryableInstance.prototype._deleteWithETag = function (eTag) {\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        return this.postCore({\r\n            headers: {\r\n                \"IF-Match\": eTag,\r\n                \"X-HTTP-Method\": \"DELETE\",\r\n            },\r\n        });\r\n    };\r\n    return SharePointQueryableInstance;\r\n}(SharePointQueryable));\r\nexport { SharePointQueryableInstance };\r\n/**\r\n * Decorator used to specify the default path for SharePointQueryable objects\r\n *\r\n * @param path\r\n */\r\nexport function defaultPath(path) {\r\n    return function (target) {\r\n        return /** @class */ (function (_super) {\r\n            tslib_1.__extends(class_1, _super);\r\n            function class_1() {\r\n                var args = [];\r\n                for (var _i = 0; _i < arguments.length; _i++) {\r\n                    args[_i] = arguments[_i];\r\n                }\r\n                return _super.call(this, args[0], args.length > 1 && args[1] !== undefined ? args[1] : path) || this;\r\n            }\r\n            return class_1;\r\n        }(target));\r\n    };\r\n}\r\n//# sourceMappingURL=sharepointqueryable.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryableInstance, SharePointQueryableCollection, defaultPath } from \"./sharepointqueryable\";\r\nimport { SiteGroups } from \"./sitegroups\";\r\nimport { jsS, extend } from \"@pnp/common\";\r\nimport { metadata } from \"./utils/metadata\";\r\n/**\r\n * Describes a collection of all site collection users\r\n *\r\n */\r\nvar SiteUsers = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SiteUsers, _super);\r\n    function SiteUsers() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    SiteUsers_1 = SiteUsers;\r\n    /**\r\n     * Gets a user from the collection by id\r\n     *\r\n     * @param id The id of the user to retrieve\r\n     */\r\n    SiteUsers.prototype.getById = function (id) {\r\n        return new SiteUser(this, \"getById(\" + id + \")\");\r\n    };\r\n    /**\r\n     * Gets a user from the collection by email\r\n     *\r\n     * @param email The email address of the user to retrieve\r\n     */\r\n    SiteUsers.prototype.getByEmail = function (email) {\r\n        return new SiteUser(this, \"getByEmail('\" + email + \"')\");\r\n    };\r\n    /**\r\n     * Gets a user from the collection by login name\r\n     *\r\n     * @param loginName The login name of the user to retrieve\r\n     */\r\n    SiteUsers.prototype.getByLoginName = function (loginName) {\r\n        var su = new SiteUser(this);\r\n        su.concat(\"('!@v::\" + encodeURIComponent(loginName) + \"')\");\r\n        return su;\r\n    };\r\n    /**\r\n     * Removes a user from the collection by id\r\n     *\r\n     * @param id The id of the user to remove\r\n     */\r\n    SiteUsers.prototype.removeById = function (id) {\r\n        return this.clone(SiteUsers_1, \"removeById(\" + id + \")\").postCore();\r\n    };\r\n    /**\r\n     * Removes a user from the collection by login name\r\n     *\r\n     * @param loginName The login name of the user to remove\r\n     */\r\n    SiteUsers.prototype.removeByLoginName = function (loginName) {\r\n        var o = this.clone(SiteUsers_1, \"removeByLoginName(@v)\");\r\n        o.query.set(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return o.postCore();\r\n    };\r\n    /**\r\n     * Adds a user to a group\r\n     *\r\n     * @param loginName The login name of the user to add to the group\r\n     *\r\n     */\r\n    SiteUsers.prototype.add = function (loginName) {\r\n        var _this = this;\r\n        return this.clone(SiteUsers_1, null).postCore({\r\n            body: jsS(extend(metadata(\"SP.User\"), { LoginName: loginName })),\r\n        }).then(function () { return _this.getByLoginName(loginName); });\r\n    };\r\n    var SiteUsers_1;\r\n    SiteUsers = SiteUsers_1 = tslib_1.__decorate([\r\n        defaultPath(\"siteusers\")\r\n    ], SiteUsers);\r\n    return SiteUsers;\r\n}(SharePointQueryableCollection));\r\nexport { SiteUsers };\r\n/**\r\n * Base class for a user\r\n *\r\n */\r\nvar UserBase = /** @class */ (function (_super) {\r\n    tslib_1.__extends(UserBase, _super);\r\n    function UserBase() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(UserBase.prototype, \"groups\", {\r\n        /**\r\n         * Gets the groups for this user\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteGroups(this, \"groups\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return UserBase;\r\n}(SharePointQueryableInstance));\r\nexport { UserBase };\r\n/**\r\n * Describes a single user\r\n *\r\n */\r\nvar SiteUser = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SiteUser, _super);\r\n    function SiteUser() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n        * Updates this user instance with the supplied properties\r\n        *\r\n        * @param properties A plain object of property names and values to update for the user\r\n        */\r\n        _this.update = _this._update(\"SP.User\", function (data) { return ({ data: data, user: _this }); });\r\n        /**\r\n         * Delete this user\r\n         *\r\n         */\r\n        _this.delete = _this._delete;\r\n        return _this;\r\n    }\r\n    return SiteUser;\r\n}(UserBase));\r\nexport { SiteUser };\r\n/**\r\n * Represents the current user\r\n */\r\nvar CurrentUser = /** @class */ (function (_super) {\r\n    tslib_1.__extends(CurrentUser, _super);\r\n    function CurrentUser() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    CurrentUser = tslib_1.__decorate([\r\n        defaultPath(\"currentuser\")\r\n    ], CurrentUser);\r\n    return CurrentUser;\r\n}(UserBase));\r\nexport { CurrentUser };\r\n//# sourceMappingURL=siteusers.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryableInstance, SharePointQueryableCollection, defaultPath } from \"./sharepointqueryable\";\r\nimport { SiteUsers } from \"./siteusers\";\r\nimport { extend, jsS, hOP } from \"@pnp/common\";\r\nimport { metadata } from \"./utils/metadata\";\r\n/**\r\n * Principal Type enum\r\n *\r\n */\r\nexport var PrincipalType;\r\n(function (PrincipalType) {\r\n    PrincipalType[PrincipalType[\"None\"] = 0] = \"None\";\r\n    PrincipalType[PrincipalType[\"User\"] = 1] = \"User\";\r\n    PrincipalType[PrincipalType[\"DistributionList\"] = 2] = \"DistributionList\";\r\n    PrincipalType[PrincipalType[\"SecurityGroup\"] = 4] = \"SecurityGroup\";\r\n    PrincipalType[PrincipalType[\"SharePointGroup\"] = 8] = \"SharePointGroup\";\r\n    PrincipalType[PrincipalType[\"All\"] = 15] = \"All\";\r\n})(PrincipalType || (PrincipalType = {}));\r\n/**\r\n * Describes a collection of site groups\r\n *\r\n */\r\nvar SiteGroups = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SiteGroups, _super);\r\n    function SiteGroups() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    SiteGroups_1 = SiteGroups;\r\n    /**\r\n     * Gets a group from the collection by id\r\n     *\r\n     * @param id The id of the group to retrieve\r\n     */\r\n    SiteGroups.prototype.getById = function (id) {\r\n        var sg = new SiteGroup(this);\r\n        sg.concat(\"(\" + id + \")\");\r\n        return sg;\r\n    };\r\n    /**\r\n     * Adds a new group to the site collection\r\n     *\r\n     * @param props The group properties object of property names and values to be set for the group\r\n     */\r\n    SiteGroups.prototype.add = function (properties) {\r\n        var _this = this;\r\n        var postBody = jsS(extend(metadata(\"SP.Group\"), properties));\r\n        return this.postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                group: _this.getById(data.Id),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Gets a group from the collection by name\r\n     *\r\n     * @param groupName The name of the group to retrieve\r\n     */\r\n    SiteGroups.prototype.getByName = function (groupName) {\r\n        return new SiteGroup(this, \"getByName('\" + groupName + \"')\");\r\n    };\r\n    /**\r\n     * Removes the group with the specified member id from the collection\r\n     *\r\n     * @param id The id of the group to remove\r\n     */\r\n    SiteGroups.prototype.removeById = function (id) {\r\n        return this.clone(SiteGroups_1, \"removeById('\" + id + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Removes the cross-site group with the specified name from the collection\r\n     *\r\n     * @param loginName The name of the group to remove\r\n     */\r\n    SiteGroups.prototype.removeByLoginName = function (loginName) {\r\n        return this.clone(SiteGroups_1, \"removeByLoginName('\" + loginName + \"')\").postCore();\r\n    };\r\n    var SiteGroups_1;\r\n    SiteGroups = SiteGroups_1 = tslib_1.__decorate([\r\n        defaultPath(\"sitegroups\")\r\n    ], SiteGroups);\r\n    return SiteGroups;\r\n}(SharePointQueryableCollection));\r\nexport { SiteGroups };\r\n/**\r\n * Describes a single group\r\n *\r\n */\r\nvar SiteGroup = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SiteGroup, _super);\r\n    function SiteGroup() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.update = _this._update(\"SP.Group\", function (d, p) {\r\n            var retGroup = _this;\r\n            if (hOP(p, \"Title\")) {\r\n                /* tslint:disable-next-line no-string-literal */\r\n                retGroup = _this.getParent(SiteGroup, _this.parentUrl, \"getByName('\" + p[\"Title\"] + \"')\");\r\n            }\r\n            return {\r\n                data: d,\r\n                group: retGroup,\r\n            };\r\n        });\r\n        return _this;\r\n    }\r\n    Object.defineProperty(SiteGroup.prototype, \"users\", {\r\n        /**\r\n         * Gets the users for this group\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteUsers(this, \"users\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return SiteGroup;\r\n}(SharePointQueryableInstance));\r\nexport { SiteGroup };\r\n//# sourceMappingURL=sitegroups.js.map","/**\r\n * Determines the display mode of the given control or view\r\n */\r\nexport var ControlMode;\r\n(function (ControlMode) {\r\n    ControlMode[ControlMode[\"Display\"] = 1] = \"Display\";\r\n    ControlMode[ControlMode[\"Edit\"] = 2] = \"Edit\";\r\n    ControlMode[ControlMode[\"New\"] = 3] = \"New\";\r\n})(ControlMode || (ControlMode = {}));\r\n/**\r\n * Specifies the type of the field.\r\n */\r\nexport var FieldTypes;\r\n(function (FieldTypes) {\r\n    FieldTypes[FieldTypes[\"Invalid\"] = 0] = \"Invalid\";\r\n    FieldTypes[FieldTypes[\"Integer\"] = 1] = \"Integer\";\r\n    FieldTypes[FieldTypes[\"Text\"] = 2] = \"Text\";\r\n    FieldTypes[FieldTypes[\"Note\"] = 3] = \"Note\";\r\n    FieldTypes[FieldTypes[\"DateTime\"] = 4] = \"DateTime\";\r\n    FieldTypes[FieldTypes[\"Counter\"] = 5] = \"Counter\";\r\n    FieldTypes[FieldTypes[\"Choice\"] = 6] = \"Choice\";\r\n    FieldTypes[FieldTypes[\"Lookup\"] = 7] = \"Lookup\";\r\n    FieldTypes[FieldTypes[\"Boolean\"] = 8] = \"Boolean\";\r\n    FieldTypes[FieldTypes[\"Number\"] = 9] = \"Number\";\r\n    FieldTypes[FieldTypes[\"Currency\"] = 10] = \"Currency\";\r\n    FieldTypes[FieldTypes[\"URL\"] = 11] = \"URL\";\r\n    FieldTypes[FieldTypes[\"Computed\"] = 12] = \"Computed\";\r\n    FieldTypes[FieldTypes[\"Threading\"] = 13] = \"Threading\";\r\n    FieldTypes[FieldTypes[\"Guid\"] = 14] = \"Guid\";\r\n    FieldTypes[FieldTypes[\"MultiChoice\"] = 15] = \"MultiChoice\";\r\n    FieldTypes[FieldTypes[\"GridChoice\"] = 16] = \"GridChoice\";\r\n    FieldTypes[FieldTypes[\"Calculated\"] = 17] = \"Calculated\";\r\n    FieldTypes[FieldTypes[\"File\"] = 18] = \"File\";\r\n    FieldTypes[FieldTypes[\"Attachments\"] = 19] = \"Attachments\";\r\n    FieldTypes[FieldTypes[\"User\"] = 20] = \"User\";\r\n    FieldTypes[FieldTypes[\"Recurrence\"] = 21] = \"Recurrence\";\r\n    FieldTypes[FieldTypes[\"CrossProjectLink\"] = 22] = \"CrossProjectLink\";\r\n    FieldTypes[FieldTypes[\"ModStat\"] = 23] = \"ModStat\";\r\n    FieldTypes[FieldTypes[\"Error\"] = 24] = \"Error\";\r\n    FieldTypes[FieldTypes[\"ContentTypeId\"] = 25] = \"ContentTypeId\";\r\n    FieldTypes[FieldTypes[\"PageSeparator\"] = 26] = \"PageSeparator\";\r\n    FieldTypes[FieldTypes[\"ThreadIndex\"] = 27] = \"ThreadIndex\";\r\n    FieldTypes[FieldTypes[\"WorkflowStatus\"] = 28] = \"WorkflowStatus\";\r\n    FieldTypes[FieldTypes[\"AllDayEvent\"] = 29] = \"AllDayEvent\";\r\n    FieldTypes[FieldTypes[\"WorkflowEventType\"] = 30] = \"WorkflowEventType\";\r\n})(FieldTypes || (FieldTypes = {}));\r\nexport var DateTimeFieldFormatType;\r\n(function (DateTimeFieldFormatType) {\r\n    DateTimeFieldFormatType[DateTimeFieldFormatType[\"DateOnly\"] = 0] = \"DateOnly\";\r\n    DateTimeFieldFormatType[DateTimeFieldFormatType[\"DateTime\"] = 1] = \"DateTime\";\r\n})(DateTimeFieldFormatType || (DateTimeFieldFormatType = {}));\r\nexport var DateTimeFieldFriendlyFormatType;\r\n(function (DateTimeFieldFriendlyFormatType) {\r\n    DateTimeFieldFriendlyFormatType[DateTimeFieldFriendlyFormatType[\"Unspecified\"] = 0] = \"Unspecified\";\r\n    DateTimeFieldFriendlyFormatType[DateTimeFieldFriendlyFormatType[\"Disabled\"] = 1] = \"Disabled\";\r\n    DateTimeFieldFriendlyFormatType[DateTimeFieldFriendlyFormatType[\"Relative\"] = 2] = \"Relative\";\r\n})(DateTimeFieldFriendlyFormatType || (DateTimeFieldFriendlyFormatType = {}));\r\n/**\r\n * Specifies the control settings while adding a field.\r\n */\r\nexport var AddFieldOptions;\r\n(function (AddFieldOptions) {\r\n    /**\r\n     *  Specify that a new field added to the list must also be added to the default content type in the site collection\r\n     */\r\n    AddFieldOptions[AddFieldOptions[\"DefaultValue\"] = 0] = \"DefaultValue\";\r\n    /**\r\n     * Specify that a new field added to the list must also be added to the default content type in the site collection.\r\n     */\r\n    AddFieldOptions[AddFieldOptions[\"AddToDefaultContentType\"] = 1] = \"AddToDefaultContentType\";\r\n    /**\r\n     * Specify that a new field must not be added to any other content type\r\n     */\r\n    AddFieldOptions[AddFieldOptions[\"AddToNoContentType\"] = 2] = \"AddToNoContentType\";\r\n    /**\r\n     *  Specify that a new field that is added to the specified list must also be added to all content types in the site collection\r\n     */\r\n    AddFieldOptions[AddFieldOptions[\"AddToAllContentTypes\"] = 4] = \"AddToAllContentTypes\";\r\n    /**\r\n     * Specify adding an internal field name hint for the purpose of avoiding possible database locking or field renaming operations\r\n     */\r\n    AddFieldOptions[AddFieldOptions[\"AddFieldInternalNameHint\"] = 8] = \"AddFieldInternalNameHint\";\r\n    /**\r\n     * Specify that a new field that is added to the specified list must also be added to the default list view\r\n     */\r\n    AddFieldOptions[AddFieldOptions[\"AddFieldToDefaultView\"] = 16] = \"AddFieldToDefaultView\";\r\n    /**\r\n     * Specify to confirm that no other field has the same display name\r\n     */\r\n    AddFieldOptions[AddFieldOptions[\"AddFieldCheckDisplayName\"] = 32] = \"AddFieldCheckDisplayName\";\r\n})(AddFieldOptions || (AddFieldOptions = {}));\r\nexport var CalendarType;\r\n(function (CalendarType) {\r\n    CalendarType[CalendarType[\"Gregorian\"] = 1] = \"Gregorian\";\r\n    CalendarType[CalendarType[\"Japan\"] = 3] = \"Japan\";\r\n    CalendarType[CalendarType[\"Taiwan\"] = 4] = \"Taiwan\";\r\n    CalendarType[CalendarType[\"Korea\"] = 5] = \"Korea\";\r\n    CalendarType[CalendarType[\"Hijri\"] = 6] = \"Hijri\";\r\n    CalendarType[CalendarType[\"Thai\"] = 7] = \"Thai\";\r\n    CalendarType[CalendarType[\"Hebrew\"] = 8] = \"Hebrew\";\r\n    CalendarType[CalendarType[\"GregorianMEFrench\"] = 9] = \"GregorianMEFrench\";\r\n    CalendarType[CalendarType[\"GregorianArabic\"] = 10] = \"GregorianArabic\";\r\n    CalendarType[CalendarType[\"GregorianXLITEnglish\"] = 11] = \"GregorianXLITEnglish\";\r\n    CalendarType[CalendarType[\"GregorianXLITFrench\"] = 12] = \"GregorianXLITFrench\";\r\n    CalendarType[CalendarType[\"KoreaJapanLunar\"] = 14] = \"KoreaJapanLunar\";\r\n    CalendarType[CalendarType[\"ChineseLunar\"] = 15] = \"ChineseLunar\";\r\n    CalendarType[CalendarType[\"SakaEra\"] = 16] = \"SakaEra\";\r\n    CalendarType[CalendarType[\"UmAlQura\"] = 23] = \"UmAlQura\";\r\n})(CalendarType || (CalendarType = {}));\r\nexport var UrlFieldFormatType;\r\n(function (UrlFieldFormatType) {\r\n    UrlFieldFormatType[UrlFieldFormatType[\"Hyperlink\"] = 0] = \"Hyperlink\";\r\n    UrlFieldFormatType[UrlFieldFormatType[\"Image\"] = 1] = \"Image\";\r\n})(UrlFieldFormatType || (UrlFieldFormatType = {}));\r\nexport var PermissionKind;\r\n(function (PermissionKind) {\r\n    /**\r\n     * Has no permissions on the Site. Not available through the user interface.\r\n     */\r\n    PermissionKind[PermissionKind[\"EmptyMask\"] = 0] = \"EmptyMask\";\r\n    /**\r\n     * View items in lists, documents in document libraries, and Web discussion comments.\r\n     */\r\n    PermissionKind[PermissionKind[\"ViewListItems\"] = 1] = \"ViewListItems\";\r\n    /**\r\n     * Add items to lists, documents to document libraries, and Web discussion comments.\r\n     */\r\n    PermissionKind[PermissionKind[\"AddListItems\"] = 2] = \"AddListItems\";\r\n    /**\r\n     * Edit items in lists, edit documents in document libraries, edit Web discussion comments\r\n     * in documents, and customize Web Part Pages in document libraries.\r\n     */\r\n    PermissionKind[PermissionKind[\"EditListItems\"] = 3] = \"EditListItems\";\r\n    /**\r\n     * Delete items from a list, documents from a document library, and Web discussion\r\n     * comments in documents.\r\n     */\r\n    PermissionKind[PermissionKind[\"DeleteListItems\"] = 4] = \"DeleteListItems\";\r\n    /**\r\n     * Approve a minor version of a list item or document.\r\n     */\r\n    PermissionKind[PermissionKind[\"ApproveItems\"] = 5] = \"ApproveItems\";\r\n    /**\r\n     * View the source of documents with server-side file handlers.\r\n     */\r\n    PermissionKind[PermissionKind[\"OpenItems\"] = 6] = \"OpenItems\";\r\n    /**\r\n     * View past versions of a list item or document.\r\n     */\r\n    PermissionKind[PermissionKind[\"ViewVersions\"] = 7] = \"ViewVersions\";\r\n    /**\r\n     * Delete past versions of a list item or document.\r\n     */\r\n    PermissionKind[PermissionKind[\"DeleteVersions\"] = 8] = \"DeleteVersions\";\r\n    /**\r\n     * Discard or check in a document which is checked out to another user.\r\n     */\r\n    PermissionKind[PermissionKind[\"CancelCheckout\"] = 9] = \"CancelCheckout\";\r\n    /**\r\n     * Create, change, and delete personal views of lists.\r\n     */\r\n    PermissionKind[PermissionKind[\"ManagePersonalViews\"] = 10] = \"ManagePersonalViews\";\r\n    /**\r\n     * Create and delete lists, add or remove columns in a list, and add or remove public views of a list.\r\n     */\r\n    PermissionKind[PermissionKind[\"ManageLists\"] = 12] = \"ManageLists\";\r\n    /**\r\n     * View forms, views, and application pages, and enumerate lists.\r\n     */\r\n    PermissionKind[PermissionKind[\"ViewFormPages\"] = 13] = \"ViewFormPages\";\r\n    /**\r\n     * Make content of a list or document library retrieveable for anonymous users through SharePoint search.\r\n     * The list permissions in the site do not change.\r\n     */\r\n    PermissionKind[PermissionKind[\"AnonymousSearchAccessList\"] = 14] = \"AnonymousSearchAccessList\";\r\n    /**\r\n     * Allow users to open a Site, list, or folder to access items inside that container.\r\n     */\r\n    PermissionKind[PermissionKind[\"Open\"] = 17] = \"Open\";\r\n    /**\r\n     * View pages in a Site.\r\n     */\r\n    PermissionKind[PermissionKind[\"ViewPages\"] = 18] = \"ViewPages\";\r\n    /**\r\n     * Add, change, or delete HTML pages or Web Part Pages, and edit the Site using\r\n     * a Windows SharePoint Services compatible editor.\r\n     */\r\n    PermissionKind[PermissionKind[\"AddAndCustomizePages\"] = 19] = \"AddAndCustomizePages\";\r\n    /**\r\n     * Apply a theme or borders to the entire Site.\r\n     */\r\n    PermissionKind[PermissionKind[\"ApplyThemeAndBorder\"] = 20] = \"ApplyThemeAndBorder\";\r\n    /**\r\n     * Apply a style sheet (.css file) to the Site.\r\n     */\r\n    PermissionKind[PermissionKind[\"ApplyStyleSheets\"] = 21] = \"ApplyStyleSheets\";\r\n    /**\r\n     * View reports on Site usage.\r\n     */\r\n    PermissionKind[PermissionKind[\"ViewUsageData\"] = 22] = \"ViewUsageData\";\r\n    /**\r\n     * Create a Site using Self-Service Site Creation.\r\n     */\r\n    PermissionKind[PermissionKind[\"CreateSSCSite\"] = 23] = \"CreateSSCSite\";\r\n    /**\r\n     * Create subsites such as team sites, Meeting Workspace sites, and Document Workspace sites.\r\n     */\r\n    PermissionKind[PermissionKind[\"ManageSubwebs\"] = 24] = \"ManageSubwebs\";\r\n    /**\r\n     * Create a group of users that can be used anywhere within the site collection.\r\n     */\r\n    PermissionKind[PermissionKind[\"CreateGroups\"] = 25] = \"CreateGroups\";\r\n    /**\r\n     * Create and change permission levels on the Site and assign permissions to users\r\n     * and groups.\r\n     */\r\n    PermissionKind[PermissionKind[\"ManagePermissions\"] = 26] = \"ManagePermissions\";\r\n    /**\r\n     * Enumerate files and folders in a Site using Microsoft Office SharePoint Designer\r\n     * and WebDAV interfaces.\r\n     */\r\n    PermissionKind[PermissionKind[\"BrowseDirectories\"] = 27] = \"BrowseDirectories\";\r\n    /**\r\n     * View information about users of the Site.\r\n     */\r\n    PermissionKind[PermissionKind[\"BrowseUserInfo\"] = 28] = \"BrowseUserInfo\";\r\n    /**\r\n     * Add or remove personal Web Parts on a Web Part Page.\r\n     */\r\n    PermissionKind[PermissionKind[\"AddDelPrivateWebParts\"] = 29] = \"AddDelPrivateWebParts\";\r\n    /**\r\n     * Update Web Parts to display personalized information.\r\n     */\r\n    PermissionKind[PermissionKind[\"UpdatePersonalWebParts\"] = 30] = \"UpdatePersonalWebParts\";\r\n    /**\r\n     * Grant the ability to perform all administration tasks for the Site as well as\r\n     * manage content, activate, deactivate, or edit properties of Site scoped Features\r\n     * through the object model or through the user interface (UI). When granted on the\r\n     * root Site of a Site Collection, activate, deactivate, or edit properties of\r\n     * site collection scoped Features through the object model. To browse to the Site\r\n     * Collection Features page and activate or deactivate Site Collection scoped Features\r\n     * through the UI, you must be a Site Collection administrator.\r\n     */\r\n    PermissionKind[PermissionKind[\"ManageWeb\"] = 31] = \"ManageWeb\";\r\n    /**\r\n     * Content of lists and document libraries in the Web site will be retrieveable for anonymous users through\r\n     * SharePoint search if the list or document library has AnonymousSearchAccessList set.\r\n     */\r\n    PermissionKind[PermissionKind[\"AnonymousSearchAccessWebLists\"] = 32] = \"AnonymousSearchAccessWebLists\";\r\n    /**\r\n     * Use features that launch client applications. Otherwise, users must work on documents\r\n     * locally and upload changes.\r\n     */\r\n    PermissionKind[PermissionKind[\"UseClientIntegration\"] = 37] = \"UseClientIntegration\";\r\n    /**\r\n     * Use SOAP, WebDAV, or Microsoft Office SharePoint Designer interfaces to access the Site.\r\n     */\r\n    PermissionKind[PermissionKind[\"UseRemoteAPIs\"] = 38] = \"UseRemoteAPIs\";\r\n    /**\r\n     * Manage alerts for all users of the Site.\r\n     */\r\n    PermissionKind[PermissionKind[\"ManageAlerts\"] = 39] = \"ManageAlerts\";\r\n    /**\r\n     * Create e-mail alerts.\r\n     */\r\n    PermissionKind[PermissionKind[\"CreateAlerts\"] = 40] = \"CreateAlerts\";\r\n    /**\r\n     * Allows a user to change his or her user information, such as adding a picture.\r\n     */\r\n    PermissionKind[PermissionKind[\"EditMyUserInfo\"] = 41] = \"EditMyUserInfo\";\r\n    /**\r\n     * Enumerate permissions on Site, list, folder, document, or list item.\r\n     */\r\n    PermissionKind[PermissionKind[\"EnumeratePermissions\"] = 63] = \"EnumeratePermissions\";\r\n    /**\r\n     * Has all permissions on the Site. Not available through the user interface.\r\n     */\r\n    PermissionKind[PermissionKind[\"FullMask\"] = 65] = \"FullMask\";\r\n})(PermissionKind || (PermissionKind = {}));\r\n/**\r\n * Specifies the type of a principal.\r\n */\r\n/* tslint:disable:no-bitwise */\r\nexport var PrincipalType;\r\n(function (PrincipalType) {\r\n    /**\r\n     * Enumeration whose value specifies no principal type.\r\n     */\r\n    PrincipalType[PrincipalType[\"None\"] = 0] = \"None\";\r\n    /**\r\n     * Enumeration whose value specifies a user as the principal type.\r\n     */\r\n    PrincipalType[PrincipalType[\"User\"] = 1] = \"User\";\r\n    /**\r\n     * Enumeration whose value specifies a distribution list as the principal type.\r\n     */\r\n    PrincipalType[PrincipalType[\"DistributionList\"] = 2] = \"DistributionList\";\r\n    /**\r\n     * Enumeration whose value specifies a security group as the principal type.\r\n     */\r\n    PrincipalType[PrincipalType[\"SecurityGroup\"] = 4] = \"SecurityGroup\";\r\n    /**\r\n     * Enumeration whose value specifies a group as the principal type.\r\n     */\r\n    PrincipalType[PrincipalType[\"SharePointGroup\"] = 8] = \"SharePointGroup\";\r\n    /**\r\n     * Enumeration whose value specifies all principal types.\r\n     */\r\n    PrincipalType[PrincipalType[\"All\"] = 15] = \"All\";\r\n})(PrincipalType || (PrincipalType = {}));\r\n/* tslint:enable:no-bitwise */\r\n/**\r\n * Specifies the source of a principal.\r\n */\r\n/* tslint:disable:no-bitwise */\r\nexport var PrincipalSource;\r\n(function (PrincipalSource) {\r\n    /**\r\n     * Enumeration whose value specifies no principal source.\r\n     */\r\n    PrincipalSource[PrincipalSource[\"None\"] = 0] = \"None\";\r\n    /**\r\n     * Enumeration whose value specifies user information list as the principal source.\r\n     */\r\n    PrincipalSource[PrincipalSource[\"UserInfoList\"] = 1] = \"UserInfoList\";\r\n    /**\r\n     * Enumeration whose value specifies Active Directory as the principal source.\r\n     */\r\n    PrincipalSource[PrincipalSource[\"Windows\"] = 2] = \"Windows\";\r\n    /**\r\n     * Enumeration whose value specifies the current membership provider as the principal source.\r\n     */\r\n    PrincipalSource[PrincipalSource[\"MembershipProvider\"] = 4] = \"MembershipProvider\";\r\n    /**\r\n     * Enumeration whose value specifies the current role provider as the principal source.\r\n     */\r\n    PrincipalSource[PrincipalSource[\"RoleProvider\"] = 8] = \"RoleProvider\";\r\n    /**\r\n     * Enumeration whose value specifies all principal sources.\r\n     */\r\n    PrincipalSource[PrincipalSource[\"All\"] = 15] = \"All\";\r\n})(PrincipalSource || (PrincipalSource = {}));\r\n/* tslint:enable:no-bitwise */\r\nexport var RoleType;\r\n(function (RoleType) {\r\n    RoleType[RoleType[\"None\"] = 0] = \"None\";\r\n    RoleType[RoleType[\"Guest\"] = 1] = \"Guest\";\r\n    RoleType[RoleType[\"Reader\"] = 2] = \"Reader\";\r\n    RoleType[RoleType[\"Contributor\"] = 3] = \"Contributor\";\r\n    RoleType[RoleType[\"WebDesigner\"] = 4] = \"WebDesigner\";\r\n    RoleType[RoleType[\"Administrator\"] = 5] = \"Administrator\";\r\n})(RoleType || (RoleType = {}));\r\nexport var PageType;\r\n(function (PageType) {\r\n    PageType[PageType[\"Invalid\"] = -1] = \"Invalid\";\r\n    PageType[PageType[\"DefaultView\"] = 0] = \"DefaultView\";\r\n    PageType[PageType[\"NormalView\"] = 1] = \"NormalView\";\r\n    PageType[PageType[\"DialogView\"] = 2] = \"DialogView\";\r\n    PageType[PageType[\"View\"] = 3] = \"View\";\r\n    PageType[PageType[\"DisplayForm\"] = 4] = \"DisplayForm\";\r\n    PageType[PageType[\"DisplayFormDialog\"] = 5] = \"DisplayFormDialog\";\r\n    PageType[PageType[\"EditForm\"] = 6] = \"EditForm\";\r\n    PageType[PageType[\"EditFormDialog\"] = 7] = \"EditFormDialog\";\r\n    PageType[PageType[\"NewForm\"] = 8] = \"NewForm\";\r\n    PageType[PageType[\"NewFormDialog\"] = 9] = \"NewFormDialog\";\r\n    PageType[PageType[\"SolutionForm\"] = 10] = \"SolutionForm\";\r\n    PageType[PageType[\"PAGE_MAXITEMS\"] = 11] = \"PAGE_MAXITEMS\";\r\n})(PageType || (PageType = {}));\r\nexport var SharingLinkKind;\r\n(function (SharingLinkKind) {\r\n    /**\r\n     * Uninitialized link\r\n     */\r\n    SharingLinkKind[SharingLinkKind[\"Uninitialized\"] = 0] = \"Uninitialized\";\r\n    /**\r\n     * Direct link to the object being shared\r\n     */\r\n    SharingLinkKind[SharingLinkKind[\"Direct\"] = 1] = \"Direct\";\r\n    /**\r\n     * Organization-shareable link to the object being shared with view permissions\r\n     */\r\n    SharingLinkKind[SharingLinkKind[\"OrganizationView\"] = 2] = \"OrganizationView\";\r\n    /**\r\n     * Organization-shareable link to the object being shared with edit permissions\r\n     */\r\n    SharingLinkKind[SharingLinkKind[\"OrganizationEdit\"] = 3] = \"OrganizationEdit\";\r\n    /**\r\n     * View only anonymous link\r\n     */\r\n    SharingLinkKind[SharingLinkKind[\"AnonymousView\"] = 4] = \"AnonymousView\";\r\n    /**\r\n     * Read/Write anonymous link\r\n     */\r\n    SharingLinkKind[SharingLinkKind[\"AnonymousEdit\"] = 5] = \"AnonymousEdit\";\r\n    /**\r\n     * Flexible sharing Link where properties can change without affecting link URL\r\n     */\r\n    SharingLinkKind[SharingLinkKind[\"Flexible\"] = 6] = \"Flexible\";\r\n})(SharingLinkKind || (SharingLinkKind = {}));\r\n/**\r\n * Indicates the role of the sharing link\r\n */\r\nexport var SharingRole;\r\n(function (SharingRole) {\r\n    SharingRole[SharingRole[\"None\"] = 0] = \"None\";\r\n    SharingRole[SharingRole[\"View\"] = 1] = \"View\";\r\n    SharingRole[SharingRole[\"Edit\"] = 2] = \"Edit\";\r\n    SharingRole[SharingRole[\"Owner\"] = 3] = \"Owner\";\r\n})(SharingRole || (SharingRole = {}));\r\nexport var SharingOperationStatusCode;\r\n(function (SharingOperationStatusCode) {\r\n    /**\r\n     * The share operation completed without errors.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"CompletedSuccessfully\"] = 0] = \"CompletedSuccessfully\";\r\n    /**\r\n     * The share operation completed and generated requests for access.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"AccessRequestsQueued\"] = 1] = \"AccessRequestsQueued\";\r\n    /**\r\n     * The share operation failed as there were no resolved users.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"NoResolvedUsers\"] = -1] = \"NoResolvedUsers\";\r\n    /**\r\n     * The share operation failed due to insufficient permissions.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"AccessDenied\"] = -2] = \"AccessDenied\";\r\n    /**\r\n     * The share operation failed when attempting a cross site share, which is not supported.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"CrossSiteRequestNotSupported\"] = -3] = \"CrossSiteRequestNotSupported\";\r\n    /**\r\n     * The sharing operation failed due to an unknown error.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"UnknowError\"] = -4] = \"UnknowError\";\r\n    /**\r\n     * The text you typed is too long. Please shorten it.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"EmailBodyTooLong\"] = -5] = \"EmailBodyTooLong\";\r\n    /**\r\n     * The maximum number of unique scopes in the list has been exceeded.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"ListUniqueScopesExceeded\"] = -6] = \"ListUniqueScopesExceeded\";\r\n    /**\r\n     * The share operation failed because a sharing capability is disabled in the site.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"CapabilityDisabled\"] = -7] = \"CapabilityDisabled\";\r\n    /**\r\n     * The specified object for the share operation is not supported.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"ObjectNotSupported\"] = -8] = \"ObjectNotSupported\";\r\n    /**\r\n     * A SharePoint group cannot contain another SharePoint group.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"NestedGroupsNotSupported\"] = -9] = \"NestedGroupsNotSupported\";\r\n})(SharingOperationStatusCode || (SharingOperationStatusCode = {}));\r\nexport var SPSharedObjectType;\r\n(function (SPSharedObjectType) {\r\n    SPSharedObjectType[SPSharedObjectType[\"Unknown\"] = 0] = \"Unknown\";\r\n    SPSharedObjectType[SPSharedObjectType[\"File\"] = 1] = \"File\";\r\n    SPSharedObjectType[SPSharedObjectType[\"Folder\"] = 2] = \"Folder\";\r\n    SPSharedObjectType[SPSharedObjectType[\"Item\"] = 3] = \"Item\";\r\n    SPSharedObjectType[SPSharedObjectType[\"List\"] = 4] = \"List\";\r\n    SPSharedObjectType[SPSharedObjectType[\"Web\"] = 5] = \"Web\";\r\n    SPSharedObjectType[SPSharedObjectType[\"Max\"] = 6] = \"Max\";\r\n})(SPSharedObjectType || (SPSharedObjectType = {}));\r\nexport var SharingDomainRestrictionMode;\r\n(function (SharingDomainRestrictionMode) {\r\n    SharingDomainRestrictionMode[SharingDomainRestrictionMode[\"None\"] = 0] = \"None\";\r\n    SharingDomainRestrictionMode[SharingDomainRestrictionMode[\"AllowList\"] = 1] = \"AllowList\";\r\n    SharingDomainRestrictionMode[SharingDomainRestrictionMode[\"BlockList\"] = 2] = \"BlockList\";\r\n})(SharingDomainRestrictionMode || (SharingDomainRestrictionMode = {}));\r\nexport var RenderListDataOptions;\r\n(function (RenderListDataOptions) {\r\n    RenderListDataOptions[RenderListDataOptions[\"None\"] = 0] = \"None\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ContextInfo\"] = 1] = \"ContextInfo\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ListData\"] = 2] = \"ListData\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ListSchema\"] = 4] = \"ListSchema\";\r\n    RenderListDataOptions[RenderListDataOptions[\"MenuView\"] = 8] = \"MenuView\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ListContentType\"] = 16] = \"ListContentType\";\r\n    RenderListDataOptions[RenderListDataOptions[\"FileSystemItemId\"] = 32] = \"FileSystemItemId\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ClientFormSchema\"] = 64] = \"ClientFormSchema\";\r\n    RenderListDataOptions[RenderListDataOptions[\"QuickLaunch\"] = 128] = \"QuickLaunch\";\r\n    RenderListDataOptions[RenderListDataOptions[\"Spotlight\"] = 256] = \"Spotlight\";\r\n    RenderListDataOptions[RenderListDataOptions[\"Visualization\"] = 512] = \"Visualization\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ViewMetadata\"] = 1024] = \"ViewMetadata\";\r\n    RenderListDataOptions[RenderListDataOptions[\"DisableAutoHyperlink\"] = 2048] = \"DisableAutoHyperlink\";\r\n    RenderListDataOptions[RenderListDataOptions[\"EnableMediaTAUrls\"] = 4096] = \"EnableMediaTAUrls\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ParentInfo\"] = 8192] = \"ParentInfo\";\r\n    RenderListDataOptions[RenderListDataOptions[\"PageContextInfo\"] = 16384] = \"PageContextInfo\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ClientSideComponentManifest\"] = 32768] = \"ClientSideComponentManifest\";\r\n})(RenderListDataOptions || (RenderListDataOptions = {}));\r\nexport var FieldUserSelectionMode;\r\n(function (FieldUserSelectionMode) {\r\n    FieldUserSelectionMode[FieldUserSelectionMode[\"PeopleAndGroups\"] = 1] = \"PeopleAndGroups\";\r\n    FieldUserSelectionMode[FieldUserSelectionMode[\"PeopleOnly\"] = 0] = \"PeopleOnly\";\r\n})(FieldUserSelectionMode || (FieldUserSelectionMode = {}));\r\nexport var ChoiceFieldFormatType;\r\n(function (ChoiceFieldFormatType) {\r\n    ChoiceFieldFormatType[ChoiceFieldFormatType[\"Dropdown\"] = 0] = \"Dropdown\";\r\n    ChoiceFieldFormatType[ChoiceFieldFormatType[\"RadioButtons\"] = 1] = \"RadioButtons\";\r\n})(ChoiceFieldFormatType || (ChoiceFieldFormatType = {}));\r\n/**\r\n * Specifies the originating zone of a request received.\r\n */\r\nexport var UrlZone;\r\n(function (UrlZone) {\r\n    /**\r\n     * Specifies the default zone used for requests unless another zone is specified.\r\n     */\r\n    UrlZone[UrlZone[\"DefaultZone\"] = 0] = \"DefaultZone\";\r\n    /**\r\n     * Specifies an intranet zone.\r\n     */\r\n    UrlZone[UrlZone[\"Intranet\"] = 1] = \"Intranet\";\r\n    /**\r\n     * Specifies an Internet zone.\r\n     */\r\n    UrlZone[UrlZone[\"Internet\"] = 2] = \"Internet\";\r\n    /**\r\n     * Specifies a custom zone.\r\n     */\r\n    UrlZone[UrlZone[\"Custom\"] = 3] = \"Custom\";\r\n    /**\r\n     * Specifies an extranet zone.\r\n     */\r\n    UrlZone[UrlZone[\"Extranet\"] = 4] = \"Extranet\";\r\n})(UrlZone || (UrlZone = {}));\r\n//# sourceMappingURL=types.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryableInstance, SharePointQueryableCollection, defaultPath } from \"./sharepointqueryable\";\r\nimport { SiteGroups } from \"./sitegroups\";\r\nimport { extend, jsS, hOP } from \"@pnp/common\";\r\nimport { metadata } from \"./utils/metadata\";\r\n/**\r\n * Describes a set of role assignments for the current scope\r\n *\r\n */\r\nvar RoleAssignments = /** @class */ (function (_super) {\r\n    tslib_1.__extends(RoleAssignments, _super);\r\n    function RoleAssignments() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    RoleAssignments_1 = RoleAssignments;\r\n    /**\r\n     * Gets the role assignment associated with the specified principal id from the collection.\r\n     *\r\n     * @param id The id of the role assignment\r\n     */\r\n    RoleAssignments.prototype.getById = function (id) {\r\n        var ra = new RoleAssignment(this);\r\n        ra.concat(\"(\" + id + \")\");\r\n        return ra;\r\n    };\r\n    /**\r\n     * Adds a new role assignment with the specified principal and role definitions to the collection\r\n     *\r\n     * @param principalId The id of the user or group to assign permissions to\r\n     * @param roleDefId The id of the role definition that defines the permissions to assign\r\n     *\r\n     */\r\n    RoleAssignments.prototype.add = function (principalId, roleDefId) {\r\n        return this.clone(RoleAssignments_1, \"addroleassignment(principalid=\" + principalId + \", roledefid=\" + roleDefId + \")\").postCore();\r\n    };\r\n    /**\r\n     * Removes the role assignment with the specified principal and role definition from the collection\r\n     *\r\n     * @param principalId The id of the user or group in the role assignment\r\n     * @param roleDefId The id of the role definition in the role assignment\r\n     *\r\n     */\r\n    RoleAssignments.prototype.remove = function (principalId, roleDefId) {\r\n        return this.clone(RoleAssignments_1, \"removeroleassignment(principalid=\" + principalId + \", roledefid=\" + roleDefId + \")\").postCore();\r\n    };\r\n    var RoleAssignments_1;\r\n    RoleAssignments = RoleAssignments_1 = tslib_1.__decorate([\r\n        defaultPath(\"roleassignments\")\r\n    ], RoleAssignments);\r\n    return RoleAssignments;\r\n}(SharePointQueryableCollection));\r\nexport { RoleAssignments };\r\n/**\r\n * Describes a role assignment\r\n *\r\n */\r\nvar RoleAssignment = /** @class */ (function (_super) {\r\n    tslib_1.__extends(RoleAssignment, _super);\r\n    function RoleAssignment() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * Deletes this role assignment\r\n         *\r\n         */\r\n        _this.delete = _this._delete;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(RoleAssignment.prototype, \"groups\", {\r\n        /**\r\n         * Gets the groups that directly belong to the access control list (ACL) for this securable object\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteGroups(this, \"groups\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RoleAssignment.prototype, \"bindings\", {\r\n        /**\r\n         * Gets the role definition bindings for this role assignment\r\n         *\r\n         */\r\n        get: function () {\r\n            return new RoleDefinitionBindings(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return RoleAssignment;\r\n}(SharePointQueryableInstance));\r\nexport { RoleAssignment };\r\n/**\r\n * Describes a collection of role definitions\r\n *\r\n */\r\nvar RoleDefinitions = /** @class */ (function (_super) {\r\n    tslib_1.__extends(RoleDefinitions, _super);\r\n    function RoleDefinitions() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets the role definition with the specified id from the collection\r\n     *\r\n     * @param id The id of the role definition\r\n     *\r\n     */\r\n    RoleDefinitions.prototype.getById = function (id) {\r\n        return new RoleDefinition(this, \"getById(\" + id + \")\");\r\n    };\r\n    /**\r\n     * Gets the role definition with the specified name\r\n     *\r\n     * @param name The name of the role definition\r\n     *\r\n     */\r\n    RoleDefinitions.prototype.getByName = function (name) {\r\n        return new RoleDefinition(this, \"getbyname('\" + name + \"')\");\r\n    };\r\n    /**\r\n     * Gets the role definition with the specified role type\r\n     *\r\n     * @param roleTypeKind The roletypekind of the role definition (None=0, Guest=1, Reader=2, Contributor=3, WebDesigner=4, Administrator=5, Editor=6, System=7)\r\n     *\r\n     */\r\n    RoleDefinitions.prototype.getByType = function (roleTypeKind) {\r\n        return new RoleDefinition(this, \"getbytype(\" + roleTypeKind + \")\");\r\n    };\r\n    /**\r\n     * Creates a role definition\r\n     *\r\n     * @param name The new role definition's name\r\n     * @param description The new role definition's description\r\n     * @param order The order in which the role definition appears\r\n     * @param basePermissions The permissions mask for this role definition\r\n     *\r\n     */\r\n    RoleDefinitions.prototype.add = function (name, description, order, basePermissions) {\r\n        var _this = this;\r\n        var postBody = jsS({\r\n            BasePermissions: {\r\n                High: basePermissions.High.toString(),\r\n                Low: basePermissions.Low.toString(),\r\n            },\r\n            Description: description,\r\n            Name: name,\r\n            Order: order,\r\n            __metadata: { \"type\": \"SP.RoleDefinition\" },\r\n        });\r\n        return this.postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                definition: _this.getById(data.Id),\r\n            };\r\n        });\r\n    };\r\n    RoleDefinitions = tslib_1.__decorate([\r\n        defaultPath(\"roledefinitions\")\r\n    ], RoleDefinitions);\r\n    return RoleDefinitions;\r\n}(SharePointQueryableCollection));\r\nexport { RoleDefinitions };\r\n/**\r\n * Describes a role definition\r\n *\r\n */\r\nvar RoleDefinition = /** @class */ (function (_super) {\r\n    tslib_1.__extends(RoleDefinition, _super);\r\n    function RoleDefinition() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * Deletes this role definition\r\n         *\r\n         */\r\n        _this.delete = _this._delete;\r\n        return _this;\r\n        /* tslint:enable */\r\n    }\r\n    /**\r\n     * Updates this role definition with the supplied properties\r\n     *\r\n     * @param properties A plain object hash of values to update for the role definition\r\n     */\r\n    /* tslint:disable no-string-literal */\r\n    RoleDefinition.prototype.update = function (properties) {\r\n        var _this = this;\r\n        if (hOP(properties, \"BasePermissions\") !== undefined) {\r\n            properties[\"BasePermissions\"] = extend({ __metadata: { type: \"SP.BasePermissions\" } }, {\r\n                High: properties[\"BasePermissions\"].High.toString(),\r\n                Low: properties[\"BasePermissions\"].Low.toString(),\r\n            });\r\n        }\r\n        var postBody = jsS(extend(metadata(\"SP.RoleDefinition\"), properties));\r\n        return this.postCore({\r\n            body: postBody,\r\n            headers: {\r\n                \"X-HTTP-Method\": \"MERGE\",\r\n            },\r\n        }).then(function (data) {\r\n            var retDef = _this;\r\n            if (hOP(properties, \"Name\")) {\r\n                var parent_1 = _this.getParent(RoleDefinitions, _this.parentUrl, \"\");\r\n                retDef = parent_1.getByName(properties[\"Name\"]);\r\n            }\r\n            return {\r\n                data: data,\r\n                definition: retDef,\r\n            };\r\n        });\r\n    };\r\n    return RoleDefinition;\r\n}(SharePointQueryableInstance));\r\nexport { RoleDefinition };\r\n/**\r\n * Describes the role definitons bound to a role assignment object\r\n *\r\n */\r\nvar RoleDefinitionBindings = /** @class */ (function (_super) {\r\n    tslib_1.__extends(RoleDefinitionBindings, _super);\r\n    function RoleDefinitionBindings() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    RoleDefinitionBindings = tslib_1.__decorate([\r\n        defaultPath(\"roledefinitionbindings\")\r\n    ], RoleDefinitionBindings);\r\n    return RoleDefinitionBindings;\r\n}(SharePointQueryableCollection));\r\nexport { RoleDefinitionBindings };\r\n//# sourceMappingURL=roles.js.map","import * as tslib_1 from \"tslib\";\r\nimport { RoleAssignments } from \"./roles\";\r\nimport { PermissionKind } from \"./types\";\r\nimport { SharePointQueryable, SharePointQueryableInstance } from \"./sharepointqueryable\";\r\nimport { hOP } from \"@pnp/common\";\r\nvar SharePointQueryableSecurable = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SharePointQueryableSecurable, _super);\r\n    function SharePointQueryableSecurable() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(SharePointQueryableSecurable.prototype, \"roleAssignments\", {\r\n        /**\r\n         * Gets the set of role assignments for this item\r\n         *\r\n         */\r\n        get: function () {\r\n            return new RoleAssignments(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SharePointQueryableSecurable.prototype, \"firstUniqueAncestorSecurableObject\", {\r\n        /**\r\n         * Gets the closest securable up the security hierarchy whose permissions are applied to this list item\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableInstance(this, \"FirstUniqueAncestorSecurableObject\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets the effective permissions for the user supplied\r\n     *\r\n     * @param loginName The claims username for the user (ex: i:0#.f|membership|user@domain.com)\r\n     */\r\n    SharePointQueryableSecurable.prototype.getUserEffectivePermissions = function (loginName) {\r\n        var q = this.clone(SharePointQueryable, \"getUserEffectivePermissions(@user)\");\r\n        q.query.set(\"@user\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.get().then(function (r) {\r\n            // handle verbose mode\r\n            return hOP(r, \"GetUserEffectivePermissions\") ? r.GetUserEffectivePermissions : r;\r\n        });\r\n    };\r\n    /**\r\n     * Gets the effective permissions for the current user\r\n     */\r\n    SharePointQueryableSecurable.prototype.getCurrentUserEffectivePermissions = function () {\r\n        var _this = this;\r\n        // remove need to reference Web here, which created a circular build issue\r\n        var w = new SharePointQueryableInstance(\"_api/web\", \"currentuser\");\r\n        return w.configureFrom(this).select(\"LoginName\").get().then(function (user) {\r\n            return _this.getUserEffectivePermissions(user.LoginName);\r\n        });\r\n    };\r\n    /**\r\n     * Breaks the security inheritance at this level optinally copying permissions and clearing subscopes\r\n     *\r\n     * @param copyRoleAssignments If true the permissions are copied from the current parent scope\r\n     * @param clearSubscopes Optional. true to make all child securable objects inherit role assignments from the current object\r\n     */\r\n    SharePointQueryableSecurable.prototype.breakRoleInheritance = function (copyRoleAssignments, clearSubscopes) {\r\n        if (copyRoleAssignments === void 0) { copyRoleAssignments = false; }\r\n        if (clearSubscopes === void 0) { clearSubscopes = false; }\r\n        return this.clone(SharePointQueryableSecurable, \"breakroleinheritance(copyroleassignments=\" + copyRoleAssignments + \", clearsubscopes=\" + clearSubscopes + \")\").postCore();\r\n    };\r\n    /**\r\n     * Removes the local role assignments so that it re-inherit role assignments from the parent object.\r\n     *\r\n     */\r\n    SharePointQueryableSecurable.prototype.resetRoleInheritance = function () {\r\n        return this.clone(SharePointQueryableSecurable, \"resetroleinheritance\").postCore();\r\n    };\r\n    /**\r\n     * Determines if a given user has the appropriate permissions\r\n     *\r\n     * @param loginName The user to check\r\n     * @param permission The permission being checked\r\n     */\r\n    SharePointQueryableSecurable.prototype.userHasPermissions = function (loginName, permission) {\r\n        var _this = this;\r\n        return this.getUserEffectivePermissions(loginName).then(function (perms) {\r\n            return _this.hasPermissions(perms, permission);\r\n        });\r\n    };\r\n    /**\r\n     * Determines if the current user has the requested permissions\r\n     *\r\n     * @param permission The permission we wish to check\r\n     */\r\n    SharePointQueryableSecurable.prototype.currentUserHasPermissions = function (permission) {\r\n        var _this = this;\r\n        return this.getCurrentUserEffectivePermissions().then(function (perms) {\r\n            return _this.hasPermissions(perms, permission);\r\n        });\r\n    };\r\n    /**\r\n     * Taken from sp.js, checks the supplied permissions against the mask\r\n     *\r\n     * @param value The security principal's permissions on the given object\r\n     * @param perm The permission checked against the value\r\n     */\r\n    /* tslint:disable:no-bitwise */\r\n    SharePointQueryableSecurable.prototype.hasPermissions = function (value, perm) {\r\n        if (!perm) {\r\n            return true;\r\n        }\r\n        if (perm === PermissionKind.FullMask) {\r\n            return (value.High & 32767) === 32767 && value.Low === 65535;\r\n        }\r\n        perm = perm - 1;\r\n        var num = 1;\r\n        if (perm >= 0 && perm < 32) {\r\n            num = num << perm;\r\n            return 0 !== (value.Low & num);\r\n        }\r\n        else if (perm >= 32 && perm < 64) {\r\n            num = num << perm - 32;\r\n            return 0 !== (value.High & num);\r\n        }\r\n        return false;\r\n    };\r\n    return SharePointQueryableSecurable;\r\n}(SharePointQueryableInstance));\r\nexport { SharePointQueryableSecurable };\r\n//# sourceMappingURL=sharepointqueryablesecurable.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryableCollection, SharePointQueryableInstance, defaultPath } from \"./sharepointqueryable\";\r\nimport { TextParser, BlobParser, JSONParser, BufferParser } from \"@pnp/odata\";\r\nimport { extend, getGUID } from \"@pnp/common\";\r\nimport { LimitedWebPartManager } from \"./webparts\";\r\nimport { Item } from \"./items\";\r\nimport { SharePointQueryableShareableFile } from \"./sharepointqueryableshareable\";\r\nimport { odataUrlFrom } from \"./odata\";\r\n/**\r\n * Describes a collection of File objects\r\n *\r\n */\r\nvar Files = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Files, _super);\r\n    function Files() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Files_1 = Files;\r\n    /**\r\n     * Gets a File by filename\r\n     *\r\n     * @param name The name of the file, including extension.\r\n     */\r\n    Files.prototype.getByName = function (name) {\r\n        var f = new File(this);\r\n        f.concat(\"('\" + name + \"')\");\r\n        return f;\r\n    };\r\n    /**\r\n     * Uploads a file. Not supported for batching\r\n     *\r\n     * @param url The folder-relative url of the file.\r\n     * @param content The file contents blob.\r\n     * @param shouldOverWrite Should a file with the same name in the same location be overwritten? (default: true)\r\n     * @returns The new File and the raw response.\r\n     */\r\n    Files.prototype.add = function (url, content, shouldOverWrite) {\r\n        var _this = this;\r\n        if (shouldOverWrite === void 0) { shouldOverWrite = true; }\r\n        return new Files_1(this, \"add(overwrite=\" + shouldOverWrite + \",url='\" + url + \"')\")\r\n            .postCore({\r\n            body: content,\r\n        }).then(function (response) {\r\n            return {\r\n                data: response,\r\n                file: _this.getByName(url),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Uploads a file. Not supported for batching\r\n     *\r\n     * @param url The folder-relative url of the file.\r\n     * @param content The Blob file content to add\r\n     * @param progress A callback function which can be used to track the progress of the upload\r\n     * @param shouldOverWrite Should a file with the same name in the same location be overwritten? (default: true)\r\n     * @param chunkSize The size of each file slice, in bytes (default: 10485760)\r\n     * @returns The new File and the raw response.\r\n     */\r\n    Files.prototype.addChunked = function (url, content, progress, shouldOverWrite, chunkSize) {\r\n        var _this = this;\r\n        if (shouldOverWrite === void 0) { shouldOverWrite = true; }\r\n        if (chunkSize === void 0) { chunkSize = 10485760; }\r\n        var adder = this.clone(Files_1, \"add(overwrite=\" + shouldOverWrite + \",url='\" + url + \"')\", false);\r\n        return adder.postCore()\r\n            .then(function () { return _this.getByName(url); })\r\n            .then(function (file) { return file.setContentChunked(content, progress, chunkSize); });\r\n    };\r\n    /**\r\n     * Adds a ghosted file to an existing list or document library. Not supported for batching.\r\n     *\r\n     * @param fileUrl The server-relative url where you want to save the file.\r\n     * @param templateFileType The type of use to create the file.\r\n     * @returns The template file that was added and the raw response.\r\n     */\r\n    Files.prototype.addTemplateFile = function (fileUrl, templateFileType) {\r\n        var _this = this;\r\n        return this.clone(Files_1, \"addTemplateFile(urloffile='\" + fileUrl + \"',templatefiletype=\" + templateFileType + \")\", false)\r\n            .postCore().then(function (response) {\r\n            return {\r\n                data: response,\r\n                file: _this.getByName(fileUrl),\r\n            };\r\n        });\r\n    };\r\n    var Files_1;\r\n    Files = Files_1 = tslib_1.__decorate([\r\n        defaultPath(\"files\")\r\n    ], Files);\r\n    return Files;\r\n}(SharePointQueryableCollection));\r\nexport { Files };\r\n/**\r\n * Describes a single File instance\r\n *\r\n */\r\nvar File = /** @class */ (function (_super) {\r\n    tslib_1.__extends(File, _super);\r\n    function File() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(File.prototype, \"listItemAllFields\", {\r\n        /**\r\n         * Gets a value that specifies the list item field values for the list item corresponding to the file.\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableInstance(this, \"listItemAllFields\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(File.prototype, \"versions\", {\r\n        /**\r\n         * Gets a collection of versions\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Versions(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Approves the file submitted for content approval with the specified comment.\r\n     * Only documents in lists that are enabled for content approval can be approved.\r\n     *\r\n     * @param comment The comment for the approval.\r\n     */\r\n    File.prototype.approve = function (comment) {\r\n        if (comment === void 0) { comment = \"\"; }\r\n        return this.clone(File, \"approve(comment='\" + comment + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Stops the chunk upload session without saving the uploaded data. Does not support batching.\r\n     * If the file doesn’t already exist in the library, the partially uploaded file will be deleted.\r\n     * Use this in response to user action (as in a request to cancel an upload) or an error or exception.\r\n     * Use the uploadId value that was passed to the StartUpload method that started the upload session.\r\n     * This method is currently available only on Office 365.\r\n     *\r\n     * @param uploadId The unique identifier of the upload session.\r\n     */\r\n    File.prototype.cancelUpload = function (uploadId) {\r\n        return this.clone(File, \"cancelUpload(uploadId=guid'\" + uploadId + \"')\", false).postCore();\r\n    };\r\n    /**\r\n     * Checks the file in to a document library based on the check-in type.\r\n     *\r\n     * @param comment A comment for the check-in. Its length must be <= 1023.\r\n     * @param checkinType The check-in type for the file.\r\n     */\r\n    File.prototype.checkin = function (comment, checkinType) {\r\n        if (comment === void 0) { comment = \"\"; }\r\n        if (checkinType === void 0) { checkinType = CheckinType.Major; }\r\n        if (comment.length > 1023) {\r\n            throw Error(\"The maximum comment length is 1023 characters.\");\r\n        }\r\n        return this.clone(File, \"checkin(comment='\" + comment + \"',checkintype=\" + checkinType + \")\").postCore();\r\n    };\r\n    /**\r\n     * Checks out the file from a document library.\r\n     */\r\n    File.prototype.checkout = function () {\r\n        return this.clone(File, \"checkout\").postCore();\r\n    };\r\n    /**\r\n     * Copies the file to the destination url.\r\n     *\r\n     * @param url The absolute url or server relative url of the destination file path to copy to.\r\n     * @param shouldOverWrite Should a file with the same name in the same location be overwritten?\r\n     */\r\n    File.prototype.copyTo = function (url, shouldOverWrite) {\r\n        if (shouldOverWrite === void 0) { shouldOverWrite = true; }\r\n        return this.clone(File, \"copyTo(strnewurl='\" + url + \"',boverwrite=\" + shouldOverWrite + \")\").postCore();\r\n    };\r\n    /**\r\n     * Delete this file.\r\n     *\r\n     * @param eTag Value used in the IF-Match header, by default \"*\"\r\n     */\r\n    File.prototype.delete = function (eTag) {\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        return this.clone(File, null).postCore({\r\n            headers: {\r\n                \"IF-Match\": eTag,\r\n                \"X-HTTP-Method\": \"DELETE\",\r\n            },\r\n        });\r\n    };\r\n    /**\r\n     * Denies approval for a file that was submitted for content approval.\r\n     * Only documents in lists that are enabled for content approval can be denied.\r\n     *\r\n     * @param comment The comment for the denial.\r\n     */\r\n    File.prototype.deny = function (comment) {\r\n        if (comment === void 0) { comment = \"\"; }\r\n        if (comment.length > 1023) {\r\n            throw Error(\"The maximum comment length is 1023 characters.\");\r\n        }\r\n        return this.clone(File, \"deny(comment='\" + comment + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Specifies the control set used to access, modify, or add Web Parts associated with this Web Part Page and view.\r\n     * An exception is thrown if the file is not an ASPX page.\r\n     *\r\n     * @param scope The WebPartsPersonalizationScope view on the Web Parts page.\r\n     */\r\n    File.prototype.getLimitedWebPartManager = function (scope) {\r\n        if (scope === void 0) { scope = WebPartsPersonalizationScope.Shared; }\r\n        return new LimitedWebPartManager(this, \"getLimitedWebPartManager(scope=\" + scope + \")\");\r\n    };\r\n    /**\r\n     * Moves the file to the specified destination url.\r\n     *\r\n     * @param url The absolute url or server relative url of the destination file path to move to.\r\n     * @param moveOperations The bitwise MoveOperations value for how to move the file.\r\n     */\r\n    File.prototype.moveTo = function (url, moveOperations) {\r\n        if (moveOperations === void 0) { moveOperations = MoveOperations.Overwrite; }\r\n        return this.clone(File, \"moveTo(newurl='\" + url + \"',flags=\" + moveOperations + \")\").postCore();\r\n    };\r\n    /**\r\n     * Submits the file for content approval with the specified comment.\r\n     *\r\n     * @param comment The comment for the published file. Its length must be <= 1023.\r\n     */\r\n    File.prototype.publish = function (comment) {\r\n        if (comment === void 0) { comment = \"\"; }\r\n        if (comment.length > 1023) {\r\n            throw Error(\"The maximum comment length is 1023 characters.\");\r\n        }\r\n        return this.clone(File, \"publish(comment='\" + comment + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Moves the file to the Recycle Bin and returns the identifier of the new Recycle Bin item.\r\n     *\r\n     * @returns The GUID of the recycled file.\r\n     */\r\n    File.prototype.recycle = function () {\r\n        return this.clone(File, \"recycle\").postCore();\r\n    };\r\n    /**\r\n     * Reverts an existing checkout for the file.\r\n     *\r\n     */\r\n    File.prototype.undoCheckout = function () {\r\n        return this.clone(File, \"undoCheckout\").postCore();\r\n    };\r\n    /**\r\n     * Removes the file from content approval or unpublish a major version.\r\n     *\r\n     * @param comment The comment for the unpublish operation. Its length must be <= 1023.\r\n     */\r\n    File.prototype.unpublish = function (comment) {\r\n        if (comment === void 0) { comment = \"\"; }\r\n        if (comment.length > 1023) {\r\n            throw Error(\"The maximum comment length is 1023 characters.\");\r\n        }\r\n        return this.clone(File, \"unpublish(comment='\" + comment + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Gets the contents of the file as text. Not supported in batching.\r\n     *\r\n     */\r\n    File.prototype.getText = function () {\r\n        return this.clone(File, \"$value\", false).get(new TextParser(), { headers: { \"binaryStringResponseBody\": \"true\" } });\r\n    };\r\n    /**\r\n     * Gets the contents of the file as a blob, does not work in Node.js. Not supported in batching.\r\n     *\r\n     */\r\n    File.prototype.getBlob = function () {\r\n        return this.clone(File, \"$value\", false).get(new BlobParser(), { headers: { \"binaryStringResponseBody\": \"true\" } });\r\n    };\r\n    /**\r\n     * Gets the contents of a file as an ArrayBuffer, works in Node.js. Not supported in batching.\r\n     */\r\n    File.prototype.getBuffer = function () {\r\n        return this.clone(File, \"$value\", false).get(new BufferParser(), { headers: { \"binaryStringResponseBody\": \"true\" } });\r\n    };\r\n    /**\r\n     * Gets the contents of a file as an ArrayBuffer, works in Node.js. Not supported in batching.\r\n     */\r\n    File.prototype.getJSON = function () {\r\n        return this.clone(File, \"$value\", false).get(new JSONParser(), { headers: { \"binaryStringResponseBody\": \"true\" } });\r\n    };\r\n    /**\r\n     * Sets the content of a file, for large files use setContentChunked. Not supported in batching.\r\n     *\r\n     * @param content The file content\r\n     *\r\n     */\r\n    File.prototype.setContent = function (content) {\r\n        var _this = this;\r\n        return this.clone(File, \"$value\", false).postCore({\r\n            body: content,\r\n            headers: {\r\n                \"X-HTTP-Method\": \"PUT\",\r\n            },\r\n        }).then(function (_) { return new File(_this); });\r\n    };\r\n    /**\r\n     * Gets the associated list item for this folder, loading the default properties\r\n     */\r\n    File.prototype.getItem = function () {\r\n        var _this = this;\r\n        var selects = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            selects[_i] = arguments[_i];\r\n        }\r\n        var q = this.listItemAllFields;\r\n        return q.select.apply(q, selects).get().then(function (d) {\r\n            return extend((new Item(odataUrlFrom(d))).configureFrom(_this), d);\r\n        });\r\n    };\r\n    /**\r\n     * Sets the contents of a file using a chunked upload approach. Not supported in batching.\r\n     *\r\n     * @param file The file to upload\r\n     * @param progress A callback function which can be used to track the progress of the upload\r\n     * @param chunkSize The size of each file slice, in bytes (default: 10485760)\r\n     */\r\n    File.prototype.setContentChunked = function (file, progress, chunkSize) {\r\n        var _this = this;\r\n        if (chunkSize === void 0) { chunkSize = 10485760; }\r\n        if (progress === undefined) {\r\n            progress = function () { return null; };\r\n        }\r\n        var fileSize = file.size;\r\n        var blockCount = parseInt((file.size / chunkSize).toString(), 10) + ((file.size % chunkSize === 0) ? 1 : 0);\r\n        var uploadId = getGUID();\r\n        // start the chain with the first fragment\r\n        progress({ uploadId: uploadId, blockNumber: 1, chunkSize: chunkSize, currentPointer: 0, fileSize: fileSize, stage: \"starting\", totalBlocks: blockCount });\r\n        var chain = this.startUpload(uploadId, file.slice(0, chunkSize));\r\n        var _loop_1 = function (i) {\r\n            chain = chain.then(function (pointer) {\r\n                progress({ uploadId: uploadId, blockNumber: i, chunkSize: chunkSize, currentPointer: pointer, fileSize: fileSize, stage: \"continue\", totalBlocks: blockCount });\r\n                return _this.continueUpload(uploadId, pointer, file.slice(pointer, pointer + chunkSize));\r\n            });\r\n        };\r\n        // skip the first and last blocks\r\n        for (var i = 2; i < blockCount; i++) {\r\n            _loop_1(i);\r\n        }\r\n        return chain.then(function (pointer) {\r\n            progress({ uploadId: uploadId, blockNumber: blockCount, chunkSize: chunkSize, currentPointer: pointer, fileSize: fileSize, stage: \"finishing\", totalBlocks: blockCount });\r\n            return _this.finishUpload(uploadId, pointer, file.slice(pointer));\r\n        });\r\n    };\r\n    /**\r\n     * Starts a new chunk upload session and uploads the first fragment.\r\n     * The current file content is not changed when this method completes.\r\n     * The method is idempotent (and therefore does not change the result) as long as you use the same values for uploadId and stream.\r\n     * The upload session ends either when you use the CancelUpload method or when you successfully\r\n     * complete the upload session by passing the rest of the file contents through the ContinueUpload and FinishUpload methods.\r\n     * The StartUpload and ContinueUpload methods return the size of the running total of uploaded data in bytes,\r\n     * so you can pass those return values to subsequent uses of ContinueUpload and FinishUpload.\r\n     * This method is currently available only on Office 365.\r\n     *\r\n     * @param uploadId The unique identifier of the upload session.\r\n     * @param fragment The file contents.\r\n     * @returns The size of the total uploaded data in bytes.\r\n     */\r\n    File.prototype.startUpload = function (uploadId, fragment) {\r\n        return this.clone(File, \"startUpload(uploadId=guid'\" + uploadId + \"')\", false)\r\n            .postCore({ body: fragment })\r\n            .then(function (n) {\r\n            // When OData=verbose the payload has the following shape:\r\n            // { StartUpload: \"10485760\" }\r\n            if (typeof n === \"object\") {\r\n                n = n.StartUpload;\r\n            }\r\n            return parseFloat(n);\r\n        });\r\n    };\r\n    /**\r\n     * Continues the chunk upload session with an additional fragment.\r\n     * The current file content is not changed.\r\n     * Use the uploadId value that was passed to the StartUpload method that started the upload session.\r\n     * This method is currently available only on Office 365.\r\n     *\r\n     * @param uploadId The unique identifier of the upload session.\r\n     * @param fileOffset The size of the offset into the file where the fragment starts.\r\n     * @param fragment The file contents.\r\n     * @returns The size of the total uploaded data in bytes.\r\n     */\r\n    File.prototype.continueUpload = function (uploadId, fileOffset, fragment) {\r\n        return this.clone(File, \"continueUpload(uploadId=guid'\" + uploadId + \"',fileOffset=\" + fileOffset + \")\", false)\r\n            .postCore({ body: fragment })\r\n            .then(function (n) {\r\n            // When OData=verbose the payload has the following shape:\r\n            // { ContinueUpload: \"20971520\" }\r\n            if (typeof n === \"object\") {\r\n                n = n.ContinueUpload;\r\n            }\r\n            return parseFloat(n);\r\n        });\r\n    };\r\n    /**\r\n     * Uploads the last file fragment and commits the file. The current file content is changed when this method completes.\r\n     * Use the uploadId value that was passed to the StartUpload method that started the upload session.\r\n     * This method is currently available only on Office 365.\r\n     *\r\n     * @param uploadId The unique identifier of the upload session.\r\n     * @param fileOffset The size of the offset into the file where the fragment starts.\r\n     * @param fragment The file contents.\r\n     * @returns The newly uploaded file.\r\n     */\r\n    File.prototype.finishUpload = function (uploadId, fileOffset, fragment) {\r\n        return this.clone(File, \"finishUpload(uploadId=guid'\" + uploadId + \"',fileOffset=\" + fileOffset + \")\", false)\r\n            .postCore({ body: fragment })\r\n            .then(function (response) {\r\n            return {\r\n                data: response,\r\n                file: new File(odataUrlFrom(response)),\r\n            };\r\n        });\r\n    };\r\n    return File;\r\n}(SharePointQueryableShareableFile));\r\nexport { File };\r\n/**\r\n * Describes a collection of Version objects\r\n *\r\n */\r\nvar Versions = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Versions, _super);\r\n    function Versions() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Versions_1 = Versions;\r\n    /**\r\n     * Gets a version by id\r\n     *\r\n     * @param versionId The id of the version to retrieve\r\n     */\r\n    Versions.prototype.getById = function (versionId) {\r\n        var v = new Version(this);\r\n        v.concat(\"(\" + versionId + \")\");\r\n        return v;\r\n    };\r\n    /**\r\n     * Deletes all the file version objects in the collection.\r\n     *\r\n     */\r\n    Versions.prototype.deleteAll = function () {\r\n        return new Versions_1(this, \"deleteAll\").postCore();\r\n    };\r\n    /**\r\n     * Deletes the specified version of the file.\r\n     *\r\n     * @param versionId The ID of the file version to delete.\r\n     */\r\n    Versions.prototype.deleteById = function (versionId) {\r\n        return this.clone(Versions_1, \"deleteById(vid=\" + versionId + \")\").postCore();\r\n    };\r\n    /**\r\n     * Recycles the specified version of the file.\r\n     *\r\n     * @param versionId The ID of the file version to delete.\r\n     */\r\n    Versions.prototype.recycleByID = function (versionId) {\r\n        return this.clone(Versions_1, \"recycleByID(vid=\" + versionId + \")\").postCore();\r\n    };\r\n    /**\r\n     * Deletes the file version object with the specified version label.\r\n     *\r\n     * @param label The version label of the file version to delete, for example: 1.2\r\n     */\r\n    Versions.prototype.deleteByLabel = function (label) {\r\n        return this.clone(Versions_1, \"deleteByLabel(versionlabel='\" + label + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Recycles the file version object with the specified version label.\r\n     *\r\n     * @param label The version label of the file version to delete, for example: 1.2\r\n     */\r\n    Versions.prototype.recycleByLabel = function (label) {\r\n        return this.clone(Versions_1, \"recycleByLabel(versionlabel='\" + label + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Creates a new file version from the file specified by the version label.\r\n     *\r\n     * @param label The version label of the file version to restore, for example: 1.2\r\n     */\r\n    Versions.prototype.restoreByLabel = function (label) {\r\n        return this.clone(Versions_1, \"restoreByLabel(versionlabel='\" + label + \"')\").postCore();\r\n    };\r\n    var Versions_1;\r\n    Versions = Versions_1 = tslib_1.__decorate([\r\n        defaultPath(\"versions\")\r\n    ], Versions);\r\n    return Versions;\r\n}(SharePointQueryableCollection));\r\nexport { Versions };\r\n/**\r\n * Describes a single Version instance\r\n *\r\n */\r\nvar Version = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Version, _super);\r\n    function Version() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n        * Delete a specific version of a file.\r\n        *\r\n        * @param eTag Value used in the IF-Match header, by default \"*\"\r\n        */\r\n        _this.delete = _this._deleteWithETag;\r\n        return _this;\r\n        // /**\r\n        // * Delete a specific version of a file.\r\n        // *\r\n        // * @param eTag Value used in the IF-Match header, by default \"*\"\r\n        // */\r\n        // public delete(eTag = \"*\"): Promise<void> {\r\n        //     return this.postCore({\r\n        //         headers: {\r\n        //             \"IF-Match\": eTag,\r\n        //             \"X-HTTP-Method\": \"DELETE\",\r\n        //         },\r\n        //     });\r\n        // }\r\n    }\r\n    return Version;\r\n}(SharePointQueryableInstance));\r\nexport { Version };\r\nexport var CheckinType;\r\n(function (CheckinType) {\r\n    CheckinType[CheckinType[\"Minor\"] = 0] = \"Minor\";\r\n    CheckinType[CheckinType[\"Major\"] = 1] = \"Major\";\r\n    CheckinType[CheckinType[\"Overwrite\"] = 2] = \"Overwrite\";\r\n})(CheckinType || (CheckinType = {}));\r\nexport var WebPartsPersonalizationScope;\r\n(function (WebPartsPersonalizationScope) {\r\n    WebPartsPersonalizationScope[WebPartsPersonalizationScope[\"User\"] = 0] = \"User\";\r\n    WebPartsPersonalizationScope[WebPartsPersonalizationScope[\"Shared\"] = 1] = \"Shared\";\r\n})(WebPartsPersonalizationScope || (WebPartsPersonalizationScope = {}));\r\nexport var MoveOperations;\r\n(function (MoveOperations) {\r\n    MoveOperations[MoveOperations[\"Overwrite\"] = 1] = \"Overwrite\";\r\n    MoveOperations[MoveOperations[\"AllowBrokenThickets\"] = 8] = \"AllowBrokenThickets\";\r\n})(MoveOperations || (MoveOperations = {}));\r\nexport var TemplateFileType;\r\n(function (TemplateFileType) {\r\n    TemplateFileType[TemplateFileType[\"StandardPage\"] = 0] = \"StandardPage\";\r\n    TemplateFileType[TemplateFileType[\"WikiPage\"] = 1] = \"WikiPage\";\r\n    TemplateFileType[TemplateFileType[\"FormPage\"] = 2] = \"FormPage\";\r\n    TemplateFileType[TemplateFileType[\"ClientSidePage\"] = 3] = \"ClientSidePage\";\r\n})(TemplateFileType || (TemplateFileType = {}));\r\n//# sourceMappingURL=files.js.map","import * as tslib_1 from \"tslib\";\r\nimport { extend, combine, jsS } from \"@pnp/common\";\r\nimport { odataUrlFrom } from \"./odata\";\r\nimport { SharePointQueryable, SharePointQueryableInstance, SharePointQueryableCollection, } from \"./sharepointqueryable\";\r\nimport { SharePointQueryableSecurable } from \"./sharepointqueryablesecurable\";\r\nimport { RoleType, SharingLinkKind, SharingRole, } from \"./types\";\r\nimport { extractWebUrl } from \"./utils/extractweburl\";\r\n/**\r\n * Internal helper class used to augment classes to include sharing functionality\r\n */\r\nvar SharePointQueryableShareable = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SharePointQueryableShareable, _super);\r\n    function SharePointQueryableShareable() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets a sharing link for the supplied\r\n     *\r\n     * @param kind The kind of link to share\r\n     * @param expiration The optional expiration for this link\r\n     */\r\n    SharePointQueryableShareable.prototype.getShareLink = function (kind, expiration) {\r\n        if (expiration === void 0) { expiration = null; }\r\n        // date needs to be an ISO string or null\r\n        var expString = expiration !== null ? expiration.toISOString() : null;\r\n        // clone using the factory and send the request\r\n        return this.clone(SharePointQueryableShareable, \"shareLink\").postCore({\r\n            body: jsS({\r\n                request: {\r\n                    createLink: true,\r\n                    emailData: null,\r\n                    settings: {\r\n                        expiration: expString,\r\n                        linkKind: kind,\r\n                    },\r\n                },\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Shares this instance with the supplied users\r\n     *\r\n     * @param loginNames Resolved login names to share\r\n     * @param role The role\r\n     * @param requireSignin True to require the user is authenticated, otherwise false\r\n     * @param propagateAcl True to apply this share to all children\r\n     * @param emailData If supplied an email will be sent with the indicated properties\r\n     */\r\n    SharePointQueryableShareable.prototype.shareWith = function (loginNames, role, requireSignin, propagateAcl, emailData) {\r\n        var _this = this;\r\n        if (requireSignin === void 0) { requireSignin = false; }\r\n        if (propagateAcl === void 0) { propagateAcl = false; }\r\n        // handle the multiple input types\r\n        if (!Array.isArray(loginNames)) {\r\n            loginNames = [loginNames];\r\n        }\r\n        var userStr = jsS(loginNames.map(function (login) { return { Key: login }; }));\r\n        var roleFilter = role === SharingRole.Edit ? RoleType.Contributor : RoleType.Reader;\r\n        // start by looking up the role definition id we need to set the roleValue\r\n        // remove need to reference Web here, which created a circular build issue\r\n        var w = new SharePointQueryableCollection(\"_api/web\", \"roledefinitions\");\r\n        return w.select(\"Id\").filter(\"RoleTypeKind eq \" + roleFilter).get().then(function (def) {\r\n            if (!Array.isArray(def) || def.length < 1) {\r\n                throw Error(\"Could not locate a role defintion with RoleTypeKind \" + roleFilter);\r\n            }\r\n            var postBody = {\r\n                includeAnonymousLinkInEmail: requireSignin,\r\n                peoplePickerInput: userStr,\r\n                propagateAcl: propagateAcl,\r\n                roleValue: \"role:\" + def[0].Id,\r\n                useSimplifiedRoles: true,\r\n            };\r\n            if (emailData !== undefined) {\r\n                postBody = extend(postBody, {\r\n                    emailBody: emailData.body,\r\n                    emailSubject: emailData.subject !== undefined ? emailData.subject : \"\",\r\n                    sendEmail: true,\r\n                });\r\n            }\r\n            return _this.clone(SharePointQueryableShareable, \"shareObject\").postCore({\r\n                body: jsS(postBody),\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Shares an object based on the supplied options\r\n     *\r\n     * @param options The set of options to send to the ShareObject method\r\n     * @param bypass If true any processing is skipped and the options are sent directly to the ShareObject method\r\n     */\r\n    SharePointQueryableShareable.prototype.shareObject = function (options, bypass) {\r\n        var _this = this;\r\n        if (bypass === void 0) { bypass = false; }\r\n        if (bypass) {\r\n            // if the bypass flag is set send the supplied parameters directly to the service\r\n            return this.sendShareObjectRequest(options);\r\n        }\r\n        // extend our options with some defaults\r\n        options = extend(options, {\r\n            group: null,\r\n            includeAnonymousLinkInEmail: false,\r\n            propagateAcl: false,\r\n            useSimplifiedRoles: true,\r\n        }, true);\r\n        return this.getRoleValue(options.role, options.group).then(function (roleValue) {\r\n            // handle the multiple input types\r\n            if (!Array.isArray(options.loginNames)) {\r\n                options.loginNames = [options.loginNames];\r\n            }\r\n            var userStr = jsS(options.loginNames.map(function (login) { return { Key: login }; }));\r\n            var postBody = {\r\n                peoplePickerInput: userStr,\r\n                roleValue: roleValue,\r\n                url: options.url,\r\n            };\r\n            if (options.emailData !== undefined && options.emailData !== null) {\r\n                postBody = extend(postBody, {\r\n                    emailBody: options.emailData.body,\r\n                    emailSubject: options.emailData.subject !== undefined ? options.emailData.subject : \"Shared with you.\",\r\n                    sendEmail: true,\r\n                });\r\n            }\r\n            return _this.sendShareObjectRequest(postBody);\r\n        });\r\n    };\r\n    /**\r\n     * Calls the web's UnshareObject method\r\n     *\r\n     * @param url The url of the object to unshare\r\n     */\r\n    SharePointQueryableShareable.prototype.unshareObjectWeb = function (url) {\r\n        return this.clone(SharePointQueryableShareable, \"unshareObject\").postCore({\r\n            body: jsS({\r\n                url: url,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Checks Permissions on the list of Users and returns back role the users have on the Item.\r\n     *\r\n     * @param recipients The array of Entities for which Permissions need to be checked.\r\n     */\r\n    SharePointQueryableShareable.prototype.checkPermissions = function (recipients) {\r\n        return this.clone(SharePointQueryableShareable, \"checkPermissions\").postCore({\r\n            body: jsS({\r\n                recipients: recipients,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Get Sharing Information.\r\n     *\r\n     * @param request The SharingInformationRequest Object.\r\n     * @param expands Expand more fields.\r\n     *\r\n     */\r\n    SharePointQueryableShareable.prototype.getSharingInformation = function (request, expands) {\r\n        if (request === void 0) { request = null; }\r\n        var q = this.clone(SharePointQueryableShareable, \"getSharingInformation\");\r\n        return q.expand.apply(q, expands).postCore({\r\n            body: jsS({\r\n                request: request,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Gets the sharing settings of an item.\r\n     *\r\n     * @param useSimplifiedRoles Determines whether to use simplified roles.\r\n     */\r\n    SharePointQueryableShareable.prototype.getObjectSharingSettings = function (useSimplifiedRoles) {\r\n        if (useSimplifiedRoles === void 0) { useSimplifiedRoles = true; }\r\n        return this.clone(SharePointQueryableShareable, \"getObjectSharingSettings\").postCore({\r\n            body: jsS({\r\n                useSimplifiedRoles: useSimplifiedRoles,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Unshares this object\r\n     */\r\n    SharePointQueryableShareable.prototype.unshareObject = function () {\r\n        return this.clone(SharePointQueryableShareable, \"unshareObject\").postCore();\r\n    };\r\n    /**\r\n     * Deletes a link by type\r\n     *\r\n     * @param kind Deletes a sharing link by the kind of link\r\n     */\r\n    SharePointQueryableShareable.prototype.deleteLinkByKind = function (kind) {\r\n        return this.clone(SharePointQueryableShareable, \"deleteLinkByKind\").postCore({\r\n            body: jsS({ linkKind: kind }),\r\n        });\r\n    };\r\n    /**\r\n     * Removes the specified link to the item.\r\n     *\r\n     * @param kind The kind of link to be deleted.\r\n     * @param shareId\r\n     */\r\n    SharePointQueryableShareable.prototype.unshareLink = function (kind, shareId) {\r\n        if (shareId === void 0) { shareId = \"00000000-0000-0000-0000-000000000000\"; }\r\n        return this.clone(SharePointQueryableShareable, \"unshareLink\").postCore({\r\n            body: jsS({ linkKind: kind, shareId: shareId }),\r\n        });\r\n    };\r\n    /**\r\n     * Calculates the roleValue string used in the sharing query\r\n     *\r\n     * @param role The Sharing Role\r\n     * @param group The Group type\r\n     */\r\n    SharePointQueryableShareable.prototype.getRoleValue = function (role, group) {\r\n        // we will give group precedence, because we had to make a choice\r\n        if (group !== undefined && group !== null) {\r\n            switch (group) {\r\n                case RoleType.Contributor:\r\n                    // remove need to reference Web here, which created a circular build issue\r\n                    var memberGroup = new SharePointQueryableInstance(\"_api/web\", \"associatedmembergroup\");\r\n                    return memberGroup.select(\"Id\").get().then(function (g) { return \"group: \" + g.Id; });\r\n                case RoleType.Reader:\r\n                case RoleType.Guest:\r\n                    // remove need to reference Web here, which created a circular build issue\r\n                    var visitorGroup = new SharePointQueryableInstance(\"_api/web\", \"associatedvisitorgroup\");\r\n                    return visitorGroup.select(\"Id\").get().then(function (g) { return \"group: \" + g.Id; });\r\n                default:\r\n                    throw Error(\"Could not determine role value for supplied value. Contributor, Reader, and Guest are supported\");\r\n            }\r\n        }\r\n        else {\r\n            var roleFilter = role === SharingRole.Edit ? RoleType.Contributor : RoleType.Reader;\r\n            // remove need to reference Web here, which created a circular build issue\r\n            var roleDefs = new SharePointQueryableCollection(\"_api/web\", \"roledefinitions\");\r\n            return roleDefs.select(\"Id\").top(1).filter(\"RoleTypeKind eq \" + roleFilter).get().then(function (def) {\r\n                if (def.length < 1) {\r\n                    throw Error(\"Could not locate associated role definition for supplied role. Edit and View are supported\");\r\n                }\r\n                return \"role: \" + def[0].Id;\r\n            });\r\n        }\r\n    };\r\n    SharePointQueryableShareable.prototype.getShareObjectWeb = function (candidate) {\r\n        return Promise.resolve(new SharePointQueryableInstance(extractWebUrl(candidate), \"/_api/SP.Web.ShareObject\"));\r\n    };\r\n    SharePointQueryableShareable.prototype.sendShareObjectRequest = function (options) {\r\n        return this.getShareObjectWeb(this.toUrl()).then(function (web) {\r\n            return web.expand(\"UsersWithAccessRequests\", \"GroupsSharedWith\").as(SharePointQueryableShareable).postCore({\r\n                body: jsS(options),\r\n            });\r\n        });\r\n    };\r\n    return SharePointQueryableShareable;\r\n}(SharePointQueryable));\r\nexport { SharePointQueryableShareable };\r\nvar SharePointQueryableShareableWeb = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SharePointQueryableShareableWeb, _super);\r\n    function SharePointQueryableShareableWeb() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Shares this web with the supplied users\r\n     * @param loginNames The resolved login names to share\r\n     * @param role The role to share this web\r\n     * @param emailData Optional email data\r\n     */\r\n    SharePointQueryableShareableWeb.prototype.shareWith = function (loginNames, role, emailData) {\r\n        var _this = this;\r\n        if (role === void 0) { role = SharingRole.View; }\r\n        var dependency = this.addBatchDependency();\r\n        // remove need to reference Web here, which created a circular build issue\r\n        var web = new SharePointQueryableInstance(extractWebUrl(this.toUrl()), \"/_api/web/url\");\r\n        return web.get().then(function (url) {\r\n            dependency();\r\n            return _this.shareObject(combine(url, \"/_layouts/15/aclinv.aspx?forSharing=1&mbypass=1\"), loginNames, role, emailData);\r\n        });\r\n    };\r\n    /**\r\n     * Provides direct access to the static web.ShareObject method\r\n     *\r\n     * @param url The url to share\r\n     * @param loginNames Resolved loginnames string[] of a single login name string\r\n     * @param roleValue Role value\r\n     * @param emailData Optional email data\r\n     * @param groupId Optional group id\r\n     * @param propagateAcl\r\n     * @param includeAnonymousLinkInEmail\r\n     * @param useSimplifiedRoles\r\n     */\r\n    SharePointQueryableShareableWeb.prototype.shareObject = function (url, loginNames, role, emailData, group, propagateAcl, includeAnonymousLinkInEmail, useSimplifiedRoles) {\r\n        if (propagateAcl === void 0) { propagateAcl = false; }\r\n        if (includeAnonymousLinkInEmail === void 0) { includeAnonymousLinkInEmail = false; }\r\n        if (useSimplifiedRoles === void 0) { useSimplifiedRoles = true; }\r\n        return this.clone(SharePointQueryableShareable, null).shareObject({\r\n            emailData: emailData,\r\n            group: group,\r\n            includeAnonymousLinkInEmail: includeAnonymousLinkInEmail,\r\n            loginNames: loginNames,\r\n            propagateAcl: propagateAcl,\r\n            role: role,\r\n            url: url,\r\n            useSimplifiedRoles: useSimplifiedRoles,\r\n        });\r\n    };\r\n    /**\r\n     * Supplies a method to pass any set of arguments to ShareObject\r\n     *\r\n     * @param options The set of options to send to ShareObject\r\n     */\r\n    SharePointQueryableShareableWeb.prototype.shareObjectRaw = function (options) {\r\n        return this.clone(SharePointQueryableShareable, null).shareObject(options, true);\r\n    };\r\n    /**\r\n     * Unshares the object\r\n     *\r\n     * @param url The url of the object to stop sharing\r\n     */\r\n    SharePointQueryableShareableWeb.prototype.unshareObject = function (url) {\r\n        return this.clone(SharePointQueryableShareable, null).unshareObjectWeb(url);\r\n    };\r\n    return SharePointQueryableShareableWeb;\r\n}(SharePointQueryableSecurable));\r\nexport { SharePointQueryableShareableWeb };\r\nvar SharePointQueryableShareableItem = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SharePointQueryableShareableItem, _super);\r\n    function SharePointQueryableShareableItem() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets a link suitable for sharing for this item\r\n     *\r\n     * @param kind The type of link to share\r\n     * @param expiration The optional expiration date\r\n     */\r\n    SharePointQueryableShareableItem.prototype.getShareLink = function (kind, expiration) {\r\n        if (kind === void 0) { kind = SharingLinkKind.OrganizationView; }\r\n        if (expiration === void 0) { expiration = null; }\r\n        return this.clone(SharePointQueryableShareable, null).getShareLink(kind, expiration);\r\n    };\r\n    /**\r\n     * Shares this item with one or more users\r\n     *\r\n     * @param loginNames string or string[] of resolved login names to which this item will be shared\r\n     * @param role The role (View | Edit) applied to the share\r\n     * @param emailData Optional, if inlucded an email will be sent. Note subject currently has no effect.\r\n     */\r\n    SharePointQueryableShareableItem.prototype.shareWith = function (loginNames, role, requireSignin, emailData) {\r\n        if (role === void 0) { role = SharingRole.View; }\r\n        if (requireSignin === void 0) { requireSignin = false; }\r\n        return this.clone(SharePointQueryableShareable, null).shareWith(loginNames, role, requireSignin, false, emailData);\r\n    };\r\n    /**\r\n     * Checks Permissions on the list of Users and returns back role the users have on the Item.\r\n     *\r\n     * @param recipients The array of Entities for which Permissions need to be checked.\r\n     */\r\n    SharePointQueryableShareableItem.prototype.checkSharingPermissions = function (recipients) {\r\n        return this.clone(SharePointQueryableShareable, null).checkPermissions(recipients);\r\n    };\r\n    /**\r\n     * Get Sharing Information.\r\n     *\r\n     * @param request The SharingInformationRequest Object.\r\n     * @param expands Expand more fields.\r\n     *\r\n     */\r\n    SharePointQueryableShareableItem.prototype.getSharingInformation = function (request, expands) {\r\n        if (request === void 0) { request = null; }\r\n        return this.clone(SharePointQueryableShareable, null).getSharingInformation(request, expands);\r\n    };\r\n    /**\r\n     * Gets the sharing settings of an item.\r\n     *\r\n     * @param useSimplifiedRoles Determines whether to use simplified roles.\r\n     */\r\n    SharePointQueryableShareableItem.prototype.getObjectSharingSettings = function (useSimplifiedRoles) {\r\n        if (useSimplifiedRoles === void 0) { useSimplifiedRoles = true; }\r\n        return this.clone(SharePointQueryableShareable, null).getObjectSharingSettings(useSimplifiedRoles);\r\n    };\r\n    /**\r\n     * Unshare this item\r\n     */\r\n    SharePointQueryableShareableItem.prototype.unshare = function () {\r\n        return this.clone(SharePointQueryableShareable, null).unshareObject();\r\n    };\r\n    /**\r\n     * Deletes a sharing link by kind\r\n     *\r\n     * @param kind Deletes a sharing link by the kind of link\r\n     */\r\n    SharePointQueryableShareableItem.prototype.deleteSharingLinkByKind = function (kind) {\r\n        return this.clone(SharePointQueryableShareable, null).deleteLinkByKind(kind);\r\n    };\r\n    /**\r\n     * Removes the specified link to the item.\r\n     *\r\n     * @param kind The kind of link to be deleted.\r\n     * @param shareId\r\n     */\r\n    SharePointQueryableShareableItem.prototype.unshareLink = function (kind, shareId) {\r\n        return this.clone(SharePointQueryableShareable, null).unshareLink(kind, shareId);\r\n    };\r\n    return SharePointQueryableShareableItem;\r\n}(SharePointQueryableSecurable));\r\nexport { SharePointQueryableShareableItem };\r\nvar FileFolderShared = /** @class */ (function (_super) {\r\n    tslib_1.__extends(FileFolderShared, _super);\r\n    function FileFolderShared() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets a link suitable for sharing\r\n     *\r\n     * @param kind The kind of link to get\r\n     * @param expiration Optional, an expiration for this link\r\n     */\r\n    FileFolderShared.prototype.getShareLink = function (kind, expiration) {\r\n        if (kind === void 0) { kind = SharingLinkKind.OrganizationView; }\r\n        if (expiration === void 0) { expiration = null; }\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.getShareLink(kind, expiration);\r\n        });\r\n    };\r\n    /**\r\n         * Checks Permissions on the list of Users and returns back role the users have on the Item.\r\n         *\r\n         * @param recipients The array of Entities for which Permissions need to be checked.\r\n         */\r\n    FileFolderShared.prototype.checkSharingPermissions = function (recipients) {\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.checkPermissions(recipients);\r\n        });\r\n    };\r\n    /**\r\n     * Get Sharing Information.\r\n     *\r\n     * @param request The SharingInformationRequest Object.\r\n     * @param expands Expand more fields.\r\n     *\r\n     */\r\n    FileFolderShared.prototype.getSharingInformation = function (request, expands) {\r\n        if (request === void 0) { request = null; }\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.getSharingInformation(request, expands);\r\n        });\r\n    };\r\n    /**\r\n     * Gets the sharing settings of an item.\r\n     *\r\n     * @param useSimplifiedRoles Determines whether to use simplified roles.\r\n     */\r\n    FileFolderShared.prototype.getObjectSharingSettings = function (useSimplifiedRoles) {\r\n        if (useSimplifiedRoles === void 0) { useSimplifiedRoles = true; }\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.getObjectSharingSettings(useSimplifiedRoles);\r\n        });\r\n    };\r\n    /**\r\n     * Unshare this item\r\n     */\r\n    FileFolderShared.prototype.unshare = function () {\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.unshareObject();\r\n        });\r\n    };\r\n    /**\r\n     * Deletes a sharing link by the kind of link\r\n     *\r\n     * @param kind The kind of link to be deleted.\r\n     */\r\n    FileFolderShared.prototype.deleteSharingLinkByKind = function (kind) {\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.deleteLinkByKind(kind);\r\n        });\r\n    };\r\n    /**\r\n     * Removes the specified link to the item.\r\n     *\r\n     * @param kind The kind of link to be deleted.\r\n     * @param shareId The share id to delete\r\n     */\r\n    FileFolderShared.prototype.unshareLink = function (kind, shareId) {\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.unshareLink(kind, shareId);\r\n        });\r\n    };\r\n    /**\r\n     * For files and folders we need to use the associated item end point\r\n     */\r\n    FileFolderShared.prototype.getShareable = function () {\r\n        var _this = this;\r\n        // sharing only works on the item end point, not the file one - so we create a folder instance with the item url internally\r\n        return this.clone(SharePointQueryableShareableFile, \"listItemAllFields\", false).select(\"odata.id\").get().then(function (d) {\r\n            var shareable = new SharePointQueryableShareable(odataUrlFrom(d));\r\n            // we need to handle batching\r\n            if (_this.hasBatch) {\r\n                shareable = shareable.inBatch(_this.batch);\r\n            }\r\n            return shareable;\r\n        });\r\n    };\r\n    return FileFolderShared;\r\n}(SharePointQueryableInstance));\r\nexport { FileFolderShared };\r\nvar SharePointQueryableShareableFile = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SharePointQueryableShareableFile, _super);\r\n    function SharePointQueryableShareableFile() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Shares this item with one or more users\r\n     *\r\n     * @param loginNames string or string[] of resolved login names to which this item will be shared\r\n     * @param role The role (View | Edit) applied to the share\r\n     * @param shareEverything Share everything in this folder, even items with unique permissions.\r\n     * @param requireSignin If true the user must signin to view link, otherwise anyone with the link can access the resource\r\n     * @param emailData Optional, if inlucded an email will be sent. Note subject currently has no effect.\r\n     */\r\n    SharePointQueryableShareableFile.prototype.shareWith = function (loginNames, role, requireSignin, emailData) {\r\n        if (role === void 0) { role = SharingRole.View; }\r\n        if (requireSignin === void 0) { requireSignin = false; }\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.shareWith(loginNames, role, requireSignin, false, emailData);\r\n        });\r\n    };\r\n    return SharePointQueryableShareableFile;\r\n}(FileFolderShared));\r\nexport { SharePointQueryableShareableFile };\r\nvar SharePointQueryableShareableFolder = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SharePointQueryableShareableFolder, _super);\r\n    function SharePointQueryableShareableFolder() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Shares this item with one or more users\r\n     *\r\n     * @param loginNames string or string[] of resolved login names to which this item will be shared\r\n     * @param role The role (View | Edit) applied to the share\r\n     * @param shareEverything Share everything in this folder, even items with unique permissions.\r\n     * @param requireSignin If true the user must signin to view link, otherwise anyone with the link can access the resource\r\n     * @param emailData Optional, if inlucded an email will be sent. Note subject currently has no effect.\r\n     */\r\n    SharePointQueryableShareableFolder.prototype.shareWith = function (loginNames, role, requireSignin, shareEverything, emailData) {\r\n        if (role === void 0) { role = SharingRole.View; }\r\n        if (requireSignin === void 0) { requireSignin = false; }\r\n        if (shareEverything === void 0) { shareEverything = false; }\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.shareWith(loginNames, role, requireSignin, shareEverything, emailData);\r\n        });\r\n    };\r\n    return SharePointQueryableShareableFolder;\r\n}(FileFolderShared));\r\nexport { SharePointQueryableShareableFolder };\r\n//# sourceMappingURL=sharepointqueryableshareable.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryable, SharePointQueryableInstance, SharePointQueryableCollection, defaultPath } from \"./sharepointqueryable\";\r\nimport { jsS } from \"@pnp/common\";\r\nvar LimitedWebPartManager = /** @class */ (function (_super) {\r\n    tslib_1.__extends(LimitedWebPartManager, _super);\r\n    function LimitedWebPartManager() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(LimitedWebPartManager.prototype, \"webparts\", {\r\n        /**\r\n         * Gets the set of web part definitions contained by this web part manager\r\n         *\r\n         */\r\n        get: function () {\r\n            return new WebPartDefinitions(this, \"webparts\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Exports a webpart definition\r\n     *\r\n     * @param id the GUID id of the definition to export\r\n     */\r\n    LimitedWebPartManager.prototype.export = function (id) {\r\n        return this.clone(LimitedWebPartManager, \"ExportWebPart\").postCore({\r\n            body: jsS({ webPartId: id }),\r\n        });\r\n    };\r\n    /**\r\n     * Imports a webpart\r\n     *\r\n     * @param xml webpart definition which must be valid XML in the .dwp or .webpart format\r\n     */\r\n    LimitedWebPartManager.prototype.import = function (xml) {\r\n        return this.clone(LimitedWebPartManager, \"ImportWebPart\").postCore({\r\n            body: jsS({ webPartXml: xml }),\r\n        });\r\n    };\r\n    return LimitedWebPartManager;\r\n}(SharePointQueryable));\r\nexport { LimitedWebPartManager };\r\nvar WebPartDefinitions = /** @class */ (function (_super) {\r\n    tslib_1.__extends(WebPartDefinitions, _super);\r\n    function WebPartDefinitions() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets a web part definition from the collection by id\r\n     *\r\n     * @param id The storage ID of the SPWebPartDefinition to retrieve\r\n     */\r\n    WebPartDefinitions.prototype.getById = function (id) {\r\n        return new WebPartDefinition(this, \"getbyid('\" + id + \"')\");\r\n    };\r\n    /**\r\n     * Gets a web part definition from the collection by storage id\r\n     *\r\n     * @param id The WebPart.ID of the SPWebPartDefinition to retrieve\r\n     */\r\n    WebPartDefinitions.prototype.getByControlId = function (id) {\r\n        return new WebPartDefinition(this, \"getByControlId('\" + id + \"')\");\r\n    };\r\n    return WebPartDefinitions;\r\n}(SharePointQueryableCollection));\r\nexport { WebPartDefinitions };\r\nvar WebPartDefinition = /** @class */ (function (_super) {\r\n    tslib_1.__extends(WebPartDefinition, _super);\r\n    function WebPartDefinition() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(WebPartDefinition.prototype, \"webpart\", {\r\n        /**\r\n         * Gets the webpart information associated with this definition\r\n         */\r\n        get: function () {\r\n            return new WebPart(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Saves changes to the Web Part made using other properties and methods on the SPWebPartDefinition object\r\n     */\r\n    WebPartDefinition.prototype.saveChanges = function () {\r\n        return this.clone(WebPartDefinition, \"SaveWebPartChanges\").postCore();\r\n    };\r\n    /**\r\n     * Moves the Web Part to a different location on a Web Part Page\r\n     *\r\n     * @param zoneId The ID of the Web Part Zone to which to move the Web Part\r\n     * @param zoneIndex A Web Part zone index that specifies the position at which the Web Part is to be moved within the destination Web Part zone\r\n     */\r\n    WebPartDefinition.prototype.moveTo = function (zoneId, zoneIndex) {\r\n        return this.clone(WebPartDefinition, \"MoveWebPartTo(zoneID='\" + zoneId + \"', zoneIndex=\" + zoneIndex + \")\").postCore();\r\n    };\r\n    /**\r\n     * Closes the Web Part. If the Web Part is already closed, this method does nothing\r\n     */\r\n    WebPartDefinition.prototype.close = function () {\r\n        return this.clone(WebPartDefinition, \"CloseWebPart\").postCore();\r\n    };\r\n    /**\r\n     * Opens the Web Part. If the Web Part is already closed, this method does nothing\r\n     */\r\n    WebPartDefinition.prototype.open = function () {\r\n        return this.clone(WebPartDefinition, \"OpenWebPart\").postCore();\r\n    };\r\n    /**\r\n     * Removes a webpart from a page, all settings will be lost\r\n     */\r\n    WebPartDefinition.prototype.delete = function () {\r\n        return this.clone(WebPartDefinition, \"DeleteWebPart\").postCore();\r\n    };\r\n    return WebPartDefinition;\r\n}(SharePointQueryableInstance));\r\nexport { WebPartDefinition };\r\nvar WebPart = /** @class */ (function (_super) {\r\n    tslib_1.__extends(WebPart, _super);\r\n    function WebPart() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    WebPart = tslib_1.__decorate([\r\n        defaultPath(\"webpart\")\r\n    ], WebPart);\r\n    return WebPart;\r\n}(SharePointQueryableInstance));\r\nexport { WebPart };\r\n//# sourceMappingURL=webparts.js.map","import * as tslib_1 from \"tslib\";\r\nimport { extend, jsS } from \"@pnp/common\";\r\nimport { SharePointQueryable, SharePointQueryableCollection, SharePointQueryableInstance, defaultPath } from \"./sharepointqueryable\";\r\nimport { SharePointQueryableShareableFolder } from \"./sharepointqueryableshareable\";\r\nimport { Files } from \"./files\";\r\nimport { odataUrlFrom } from \"./odata\";\r\nimport { Item } from \"./items\";\r\nimport { SPHttpClient } from \"./net/sphttpclient\";\r\n/**\r\n * Describes a collection of Folder objects\r\n *\r\n */\r\nvar Folders = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Folders, _super);\r\n    function Folders() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Folders_1 = Folders;\r\n    /**\r\n     * Gets a folder by folder name\r\n     *\r\n     */\r\n    Folders.prototype.getByName = function (name) {\r\n        var f = new Folder(this);\r\n        f.concat(\"('\" + name + \"')\");\r\n        return f;\r\n    };\r\n    /**\r\n     * Adds a new folder to the current folder (relative) or any folder (absolute)\r\n     *\r\n     * @param url The relative or absolute url where the new folder will be created. Urls starting with a forward slash are absolute.\r\n     * @returns The new Folder and the raw response.\r\n     */\r\n    Folders.prototype.add = function (url) {\r\n        var _this = this;\r\n        return this.clone(Folders_1, \"add('\" + url + \"')\").postCore().then(function (response) {\r\n            return {\r\n                data: response,\r\n                folder: _this.getByName(url),\r\n            };\r\n        });\r\n    };\r\n    var Folders_1;\r\n    Folders = Folders_1 = tslib_1.__decorate([\r\n        defaultPath(\"folders\")\r\n    ], Folders);\r\n    return Folders;\r\n}(SharePointQueryableCollection));\r\nexport { Folders };\r\n/**\r\n * Describes a single Folder instance\r\n *\r\n */\r\nvar Folder = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Folder, _super);\r\n    function Folder() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.update = _this._update(\"SP.Folder\", function (data) { return ({ data: data, folder: _this }); });\r\n        return _this;\r\n    }\r\n    Object.defineProperty(Folder.prototype, \"contentTypeOrder\", {\r\n        /**\r\n         * Specifies the sequence in which content types are displayed.\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableCollection(this, \"contentTypeOrder\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Folder.prototype, \"files\", {\r\n        /**\r\n         * Gets this folder's files\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Files(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Folder.prototype, \"folders\", {\r\n        /**\r\n         * Gets this folder's sub folders\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Folders(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Folder.prototype, \"listItemAllFields\", {\r\n        /**\r\n         * Gets this folder's list item field values\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableInstance(this, \"listItemAllFields\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Folder.prototype, \"parentFolder\", {\r\n        /**\r\n         * Gets the parent folder, if available\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Folder(this, \"parentFolder\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Folder.prototype, \"properties\", {\r\n        /**\r\n         * Gets this folder's properties\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableInstance(this, \"properties\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Folder.prototype, \"serverRelativeUrl\", {\r\n        /**\r\n         * Gets this folder's server relative url\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryable(this, \"serverRelativeUrl\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Folder.prototype, \"uniqueContentTypeOrder\", {\r\n        /**\r\n         * Gets a value that specifies the content type order.\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableCollection(this, \"uniqueContentTypeOrder\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n    * Delete this folder\r\n    *\r\n    * @param eTag Value used in the IF-Match header, by default \"*\"\r\n    */\r\n    Folder.prototype.delete = function (eTag) {\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        return this.clone(Folder, null).postCore({\r\n            headers: {\r\n                \"IF-Match\": eTag,\r\n                \"X-HTTP-Method\": \"DELETE\",\r\n            },\r\n        });\r\n    };\r\n    /**\r\n     * Moves the folder to the Recycle Bin and returns the identifier of the new Recycle Bin item.\r\n     */\r\n    Folder.prototype.recycle = function () {\r\n        return this.clone(Folder, \"recycle\").postCore();\r\n    };\r\n    /**\r\n     * Gets the associated list item for this folder, loading the default properties\r\n     */\r\n    Folder.prototype.getItem = function () {\r\n        var selects = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            selects[_i] = arguments[_i];\r\n        }\r\n        var q = this.listItemAllFields;\r\n        return q.select.apply(q, selects).get().then(function (d) {\r\n            return extend(new Item(odataUrlFrom(d)), d);\r\n        });\r\n    };\r\n    /**\r\n     * Moves a folder to destination path\r\n     *\r\n     * @param destUrl Absolute or relative URL of the destination path\r\n     */\r\n    Folder.prototype.moveTo = function (destUrl) {\r\n        var _this = this;\r\n        return this.select(\"ServerRelativeUrl\").get().then(function (_a) {\r\n            var srcUrl = _a.ServerRelativeUrl;\r\n            var client = new SPHttpClient();\r\n            var webBaseUrl = _this.toUrl().split(\"/_api\")[0];\r\n            var hostUrl = webBaseUrl.replace(\"://\", \"___\").split(\"/\")[0].replace(\"___\", \"://\");\r\n            var methodUrl = webBaseUrl + \"/_api/SP.MoveCopyUtil.MoveFolder()\";\r\n            return client.post(methodUrl, {\r\n                body: jsS({\r\n                    destUrl: destUrl.indexOf(\"http\") === 0 ? destUrl : \"\" + hostUrl + destUrl,\r\n                    srcUrl: \"\" + hostUrl + srcUrl,\r\n                }),\r\n            }).then(function (r) { return r.json(); });\r\n        });\r\n    };\r\n    return Folder;\r\n}(SharePointQueryableShareableFolder));\r\nexport { Folder };\r\n//# sourceMappingURL=folders.js.map","import * as tslib_1 from \"tslib\";\r\nimport { jsS } from \"@pnp/common\";\r\nimport { SharePointQueryableCollection, SharePointQueryableInstance, defaultPath } from \"./sharepointqueryable\";\r\nimport { metadata } from \"./utils/metadata\";\r\n/**\r\n * Describes a collection of content types\r\n *\r\n */\r\nvar ContentTypes = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ContentTypes, _super);\r\n    function ContentTypes() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    ContentTypes_1 = ContentTypes;\r\n    /**\r\n     * Adds an existing contenttype to a content type collection\r\n     *\r\n     * @param contentTypeId in the following format, for example: 0x010102\r\n     */\r\n    ContentTypes.prototype.addAvailableContentType = function (contentTypeId) {\r\n        var _this = this;\r\n        var postBody = jsS({\r\n            \"contentTypeId\": contentTypeId,\r\n        });\r\n        return this.clone(ContentTypes_1, \"addAvailableContentType\").postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                contentType: _this.getById(data.id),\r\n                data: data,\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Gets a ContentType by content type id\r\n     */\r\n    ContentTypes.prototype.getById = function (id) {\r\n        var ct = new ContentType(this);\r\n        ct.concat(\"('\" + id + \"')\");\r\n        return ct;\r\n    };\r\n    /**\r\n     * Adds a new content type to the collection\r\n     *\r\n     * @param id The desired content type id for the new content type (also determines the parent content type)\r\n     * @param name The name of the content type\r\n     * @param description The description of the content type\r\n     * @param group The group in which to add the content type\r\n     * @param additionalSettings Any additional settings to provide when creating the content type\r\n     *\r\n     */\r\n    ContentTypes.prototype.add = function (id, name, description, group, additionalSettings) {\r\n        var _this = this;\r\n        if (description === void 0) { description = \"\"; }\r\n        if (group === void 0) { group = \"Custom Content Types\"; }\r\n        if (additionalSettings === void 0) { additionalSettings = {}; }\r\n        var postBody = jsS(Object.assign(metadata(\"SP.ContentType\"), {\r\n            \"Description\": description,\r\n            \"Group\": group,\r\n            \"Id\": { \"StringValue\": id },\r\n            \"Name\": name,\r\n        }, additionalSettings));\r\n        return this.postCore({ body: postBody }).then(function (data) {\r\n            return { contentType: _this.getById(data.id), data: data };\r\n        });\r\n    };\r\n    var ContentTypes_1;\r\n    ContentTypes = ContentTypes_1 = tslib_1.__decorate([\r\n        defaultPath(\"contenttypes\")\r\n    ], ContentTypes);\r\n    return ContentTypes;\r\n}(SharePointQueryableCollection));\r\nexport { ContentTypes };\r\n/**\r\n * Describes a single ContentType instance\r\n *\r\n */\r\nvar ContentType = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ContentType, _super);\r\n    function ContentType() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * Delete this content type\r\n         */\r\n        _this.delete = _this._delete;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(ContentType.prototype, \"fieldLinks\", {\r\n        /**\r\n         * Gets the column (also known as field) references in the content type.\r\n        */\r\n        get: function () {\r\n            return new FieldLinks(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ContentType.prototype, \"fields\", {\r\n        /**\r\n         * Gets a value that specifies the collection of fields for the content type.\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableCollection(this, \"fields\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ContentType.prototype, \"parent\", {\r\n        /**\r\n         * Gets the parent content type of the content type.\r\n         */\r\n        get: function () {\r\n            return new ContentType(this, \"parent\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ContentType.prototype, \"workflowAssociations\", {\r\n        /**\r\n         * Gets a value that specifies the collection of workflow associations for the content type.\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableCollection(this, \"workflowAssociations\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return ContentType;\r\n}(SharePointQueryableInstance));\r\nexport { ContentType };\r\n/**\r\n * Represents a collection of field link instances\r\n */\r\nvar FieldLinks = /** @class */ (function (_super) {\r\n    tslib_1.__extends(FieldLinks, _super);\r\n    function FieldLinks() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets a FieldLink by GUID id\r\n     *\r\n     * @param id The GUID id of the field link\r\n     */\r\n    FieldLinks.prototype.getById = function (id) {\r\n        var fl = new FieldLink(this);\r\n        fl.concat(\"(guid'\" + id + \"')\");\r\n        return fl;\r\n    };\r\n    FieldLinks = tslib_1.__decorate([\r\n        defaultPath(\"fieldlinks\")\r\n    ], FieldLinks);\r\n    return FieldLinks;\r\n}(SharePointQueryableCollection));\r\nexport { FieldLinks };\r\n/**\r\n * Represents a field link instance\r\n */\r\nvar FieldLink = /** @class */ (function (_super) {\r\n    tslib_1.__extends(FieldLink, _super);\r\n    function FieldLink() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    return FieldLink;\r\n}(SharePointQueryableInstance));\r\nexport { FieldLink };\r\n//# sourceMappingURL=contenttypes.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryableInstance, SharePointQueryableCollection, defaultPath } from \"./sharepointqueryable\";\r\nimport { TextParser, BlobParser, JSONParser, BufferParser } from \"@pnp/odata\";\r\n/**\r\n * Describes a collection of Item objects\r\n *\r\n */\r\nvar AttachmentFiles = /** @class */ (function (_super) {\r\n    tslib_1.__extends(AttachmentFiles, _super);\r\n    function AttachmentFiles() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    AttachmentFiles_1 = AttachmentFiles;\r\n    /**\r\n     * Gets a Attachment File by filename\r\n     *\r\n     * @param name The name of the file, including extension.\r\n     */\r\n    AttachmentFiles.prototype.getByName = function (name) {\r\n        var f = new AttachmentFile(this);\r\n        f.concat(\"('\" + name + \"')\");\r\n        return f;\r\n    };\r\n    /**\r\n     * Adds a new attachment to the collection. Not supported for batching.\r\n     *\r\n     * @param name The name of the file, including extension.\r\n     * @param content The Base64 file content.\r\n     */\r\n    AttachmentFiles.prototype.add = function (name, content) {\r\n        var _this = this;\r\n        return this.clone(AttachmentFiles_1, \"add(FileName='\" + name + \"')\", false).postCore({\r\n            body: content,\r\n        }).then(function (response) {\r\n            return {\r\n                data: response,\r\n                file: _this.getByName(name),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Adds multiple new attachment to the collection. Not supported for batching.\r\n     *\r\n     * @param files The collection of files to add\r\n     */\r\n    AttachmentFiles.prototype.addMultiple = function (files) {\r\n        var _this = this;\r\n        // add the files in series so we don't get update conflicts\r\n        return files.reduce(function (chain, file) { return chain.then(function () { return _this.clone(AttachmentFiles_1, \"add(FileName='\" + file.name + \"')\", false).postCore({\r\n            body: file.content,\r\n        }); }); }, Promise.resolve());\r\n    };\r\n    /**\r\n     * Delete multiple attachments from the collection. Not supported for batching.\r\n     *\r\n     * @param files The collection of files to delete\r\n     */\r\n    AttachmentFiles.prototype.deleteMultiple = function () {\r\n        var _this = this;\r\n        var files = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            files[_i] = arguments[_i];\r\n        }\r\n        return files.reduce(function (chain, file) { return chain.then(function () { return _this.getByName(file).delete(); }); }, Promise.resolve());\r\n    };\r\n    /**\r\n     * Delete multiple attachments from the collection and send to recycle bin. Not supported for batching.\r\n     *\r\n     * @param files The collection of files to be deleted and sent to recycle bin\r\n     */\r\n    AttachmentFiles.prototype.recycleMultiple = function () {\r\n        var _this = this;\r\n        var files = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            files[_i] = arguments[_i];\r\n        }\r\n        return files.reduce(function (chain, file) { return chain.then(function () { return _this.getByName(file).recycle(); }); }, Promise.resolve());\r\n    };\r\n    var AttachmentFiles_1;\r\n    AttachmentFiles = AttachmentFiles_1 = tslib_1.__decorate([\r\n        defaultPath(\"AttachmentFiles\")\r\n    ], AttachmentFiles);\r\n    return AttachmentFiles;\r\n}(SharePointQueryableCollection));\r\nexport { AttachmentFiles };\r\n/**\r\n * Describes a single attachment file instance\r\n *\r\n */\r\nvar AttachmentFile = /** @class */ (function (_super) {\r\n    tslib_1.__extends(AttachmentFile, _super);\r\n    function AttachmentFile() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.delete = _this._deleteWithETag;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Gets the contents of the file as text\r\n     *\r\n     */\r\n    AttachmentFile.prototype.getText = function () {\r\n        return this.getParsed(new TextParser());\r\n    };\r\n    /**\r\n     * Gets the contents of the file as a blob, does not work in Node.js\r\n     *\r\n     */\r\n    AttachmentFile.prototype.getBlob = function () {\r\n        return this.getParsed(new BlobParser());\r\n    };\r\n    /**\r\n     * Gets the contents of a file as an ArrayBuffer, works in Node.js\r\n     */\r\n    AttachmentFile.prototype.getBuffer = function () {\r\n        return this.getParsed(new BufferParser());\r\n    };\r\n    /**\r\n     * Gets the contents of a file as an ArrayBuffer, works in Node.js\r\n     */\r\n    AttachmentFile.prototype.getJSON = function () {\r\n        return this.getParsed(new JSONParser());\r\n    };\r\n    /**\r\n     * Sets the content of a file. Not supported for batching\r\n     *\r\n     * @param content The value to set for the file contents\r\n     */\r\n    AttachmentFile.prototype.setContent = function (content) {\r\n        var _this = this;\r\n        return this.clone(AttachmentFile, \"$value\", false).postCore({\r\n            body: content,\r\n            headers: {\r\n                \"X-HTTP-Method\": \"PUT\",\r\n            },\r\n        }).then(function (_) { return new AttachmentFile(_this); });\r\n    };\r\n    /**\r\n     * Delete this attachment file and send it to recycle bin\r\n     *\r\n     * @param eTag Value used in the IF-Match header, by default \"*\"\r\n     */\r\n    AttachmentFile.prototype.recycle = function (eTag) {\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        return this.clone(AttachmentFile, \"recycleObject\").postCore({\r\n            headers: {\r\n                \"IF-Match\": eTag,\r\n                \"X-HTTP-Method\": \"DELETE\",\r\n            },\r\n        });\r\n    };\r\n    // /**\r\n    //  * Delete this attachment file\r\n    //  *\r\n    //  * @param eTag Value used in the IF-Match header, by default \"*\"\r\n    //  */\r\n    // public delete(eTag = \"*\"): Promise<void> {\r\n    //     return this.postCore({\r\n    //         headers: {\r\n    //             \"IF-Match\": eTag,\r\n    //             \"X-HTTP-Method\": \"DELETE\",\r\n    //         },\r\n    //     });\r\n    // }\r\n    AttachmentFile.prototype.getParsed = function (parser) {\r\n        return this.clone(AttachmentFile, \"$value\", false).get(parser);\r\n    };\r\n    return AttachmentFile;\r\n}(SharePointQueryableInstance));\r\nexport { AttachmentFile };\r\n//# sourceMappingURL=attachmentfiles.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryable, SharePointQueryableCollection, SharePointQueryableInstance, defaultPath } from \"./sharepointqueryable\";\r\nimport { jsS } from \"@pnp/common\";\r\nimport { metadata } from \"./utils/metadata\";\r\n/**\r\n * Describes the views available in the current context\r\n *\r\n */\r\nvar Views = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Views, _super);\r\n    function Views() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Views_1 = Views;\r\n    /**\r\n     * Gets a view by guid id\r\n     *\r\n     * @param id The GUID id of the view\r\n     */\r\n    Views.prototype.getById = function (id) {\r\n        var v = new View(this);\r\n        v.concat(\"('\" + id + \"')\");\r\n        return v;\r\n    };\r\n    /**\r\n     * Gets a view by title (case-sensitive)\r\n     *\r\n     * @param title The case-sensitive title of the view\r\n     */\r\n    Views.prototype.getByTitle = function (title) {\r\n        return new View(this, \"getByTitle('\" + title + \"')\");\r\n    };\r\n    /**\r\n     * Adds a new view to the collection\r\n     *\r\n     * @param title The new views's title\r\n     * @param personalView True if this is a personal view, otherwise false, default = false\r\n     * @param additionalSettings Will be passed as part of the view creation body\r\n     */\r\n    Views.prototype.add = function (title, personalView, additionalSettings) {\r\n        var _this = this;\r\n        if (personalView === void 0) { personalView = false; }\r\n        if (additionalSettings === void 0) { additionalSettings = {}; }\r\n        var postBody = jsS(Object.assign(metadata(\"SP.View\"), {\r\n            \"PersonalView\": personalView,\r\n            \"Title\": title,\r\n        }, additionalSettings));\r\n        return this.clone(Views_1, null).postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                view: _this.getById(data.Id),\r\n            };\r\n        });\r\n    };\r\n    var Views_1;\r\n    Views = Views_1 = tslib_1.__decorate([\r\n        defaultPath(\"views\")\r\n    ], Views);\r\n    return Views;\r\n}(SharePointQueryableCollection));\r\nexport { Views };\r\n/**\r\n * Describes a single View instance\r\n *\r\n */\r\nvar View = /** @class */ (function (_super) {\r\n    tslib_1.__extends(View, _super);\r\n    function View() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * Updates this view intance with the supplied properties\r\n         *\r\n         * @param properties A plain object hash of values to update for the view\r\n         */\r\n        _this.update = _this._update(\"SP.View\", function (data) { return ({ data: data, view: _this }); });\r\n        /**\r\n         * Delete this view\r\n         *\r\n         */\r\n        _this.delete = _this._delete;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(View.prototype, \"fields\", {\r\n        get: function () {\r\n            return new ViewFields(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Returns the list view as HTML.\r\n     *\r\n     */\r\n    View.prototype.renderAsHtml = function () {\r\n        return this.clone(SharePointQueryable, \"renderashtml\").get();\r\n    };\r\n    /**\r\n     * Sets the view schema\r\n     *\r\n     * @param viewXml The view XML to set\r\n     */\r\n    View.prototype.setViewXml = function (viewXml) {\r\n        return this.clone(View, \"SetViewXml\").postCore({\r\n            body: jsS({\r\n                viewXml: viewXml,\r\n            }),\r\n        });\r\n    };\r\n    return View;\r\n}(SharePointQueryableInstance));\r\nexport { View };\r\nvar ViewFields = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ViewFields, _super);\r\n    function ViewFields() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    ViewFields_1 = ViewFields;\r\n    /**\r\n     * Gets a value that specifies the XML schema that represents the collection.\r\n     */\r\n    ViewFields.prototype.getSchemaXml = function () {\r\n        return this.clone(SharePointQueryable, \"schemaxml\").get();\r\n    };\r\n    /**\r\n     * Adds the field with the specified field internal name or display name to the collection.\r\n     *\r\n     * @param fieldTitleOrInternalName The case-sensitive internal name or display name of the field to add.\r\n     */\r\n    ViewFields.prototype.add = function (fieldTitleOrInternalName) {\r\n        return this.clone(ViewFields_1, \"addviewfield('\" + fieldTitleOrInternalName + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Moves the field with the specified field internal name to the specified position in the collection.\r\n     *\r\n     * @param fieldInternalName The case-sensitive internal name of the field to move.\r\n     * @param index The zero-based index of the new position for the field.\r\n     */\r\n    ViewFields.prototype.move = function (fieldInternalName, index) {\r\n        return this.clone(ViewFields_1, \"moveviewfieldto\").postCore({\r\n            body: jsS({ \"field\": fieldInternalName, \"index\": index }),\r\n        });\r\n    };\r\n    /**\r\n     * Removes all the fields from the collection.\r\n     */\r\n    ViewFields.prototype.removeAll = function () {\r\n        return this.clone(ViewFields_1, \"removeallviewfields\").postCore();\r\n    };\r\n    /**\r\n     * Removes the field with the specified field internal name from the collection.\r\n     *\r\n     * @param fieldInternalName The case-sensitive internal name of the field to remove from the view.\r\n     */\r\n    ViewFields.prototype.remove = function (fieldInternalName) {\r\n        return this.clone(ViewFields_1, \"removeviewfield('\" + fieldInternalName + \"')\").postCore();\r\n    };\r\n    var ViewFields_1;\r\n    ViewFields = ViewFields_1 = tslib_1.__decorate([\r\n        defaultPath(\"viewfields\")\r\n    ], ViewFields);\r\n    return ViewFields;\r\n}(SharePointQueryableCollection));\r\nexport { ViewFields };\r\n//# sourceMappingURL=views.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryableCollection, SharePointQueryableInstance, defaultPath } from \"./sharepointqueryable\";\r\nimport { extend, jsS } from \"@pnp/common\";\r\nimport { DateTimeFieldFormatType, DateTimeFieldFriendlyFormatType, FieldTypes, CalendarType, UrlFieldFormatType, ChoiceFieldFormatType, } from \"./types\";\r\nimport { metadata } from \"./utils/metadata\";\r\n/**\r\n * Describes a collection of Field objects\r\n *\r\n */\r\nvar Fields = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Fields, _super);\r\n    function Fields() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Fields_1 = Fields;\r\n    /**\r\n     * Gets a field from the collection by id\r\n     *\r\n     * @param id The Id of the list\r\n     */\r\n    Fields.prototype.getById = function (id) {\r\n        var f = new Field(this);\r\n        f.concat(\"('\" + id + \"')\");\r\n        return f;\r\n    };\r\n    /**\r\n     * Gets a field from the collection by title\r\n     *\r\n     * @param title The case-sensitive title of the field\r\n     */\r\n    Fields.prototype.getByTitle = function (title) {\r\n        return new Field(this, \"getByTitle('\" + title + \"')\");\r\n    };\r\n    /**\r\n     * Gets a field from the collection by using internal name or title\r\n     *\r\n     * @param name The case-sensitive internal name or title of the field\r\n     */\r\n    Fields.prototype.getByInternalNameOrTitle = function (name) {\r\n        return new Field(this, \"getByInternalNameOrTitle('\" + name + \"')\");\r\n    };\r\n    /**\r\n     * Creates a field based on the specified schema\r\n     */\r\n    Fields.prototype.createFieldAsXml = function (xml) {\r\n        var _this = this;\r\n        var info;\r\n        if (typeof xml === \"string\") {\r\n            info = { SchemaXml: xml };\r\n        }\r\n        else {\r\n            info = xml;\r\n        }\r\n        var postBody = jsS({\r\n            \"parameters\": extend(metadata(\"SP.XmlSchemaFieldCreationInformation\"), info),\r\n        });\r\n        return this.clone(Fields_1, \"createfieldasxml\").postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                field: _this.getById(data.Id),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Adds a new field to the collection\r\n     *\r\n     * @param title The new field's title\r\n     * @param fieldType The new field's type (ex: SP.FieldText)\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.add = function (title, fieldType, properties) {\r\n        var _this = this;\r\n        var postBody = jsS(Object.assign(metadata(fieldType), {\r\n            \"Title\": title,\r\n        }, properties));\r\n        return this.clone(Fields_1, null).postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                field: _this.getById(data.Id),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldText to the collection\r\n     *\r\n     * @param title The field title\r\n     * @param maxLength The maximum number of characters allowed in the value of the field.\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addText = function (title, maxLength, properties) {\r\n        if (maxLength === void 0) { maxLength = 255; }\r\n        var props = {\r\n            FieldTypeKind: 2,\r\n            MaxLength: maxLength,\r\n        };\r\n        return this.add(title, \"SP.FieldText\", extend(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldCalculated to the collection\r\n     *\r\n     * @param title The field title.\r\n     * @param formula The formula for the field.\r\n     * @param dateFormat The date and time format that is displayed in the field.\r\n     * @param outputType Specifies the output format for the field. Represents a FieldType value.\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addCalculated = function (title, formula, dateFormat, outputType, properties) {\r\n        if (outputType === void 0) { outputType = FieldTypes.Text; }\r\n        var props = {\r\n            DateFormat: dateFormat,\r\n            FieldTypeKind: 17,\r\n            Formula: formula,\r\n            OutputType: outputType,\r\n        };\r\n        return this.add(title, \"SP.FieldCalculated\", extend(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldDateTime to the collection\r\n     *\r\n     * @param title The field title\r\n     * @param displayFormat The format of the date and time that is displayed in the field.\r\n     * @param calendarType Specifies the calendar type of the field.\r\n     * @param friendlyDisplayFormat The type of friendly display format that is used in the field.\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addDateTime = function (title, displayFormat, calendarType, friendlyDisplayFormat, properties) {\r\n        if (displayFormat === void 0) { displayFormat = DateTimeFieldFormatType.DateOnly; }\r\n        if (calendarType === void 0) { calendarType = CalendarType.Gregorian; }\r\n        if (friendlyDisplayFormat === void 0) { friendlyDisplayFormat = DateTimeFieldFriendlyFormatType.Unspecified; }\r\n        var props = {\r\n            DateTimeCalendarType: calendarType,\r\n            DisplayFormat: displayFormat,\r\n            FieldTypeKind: 4,\r\n            FriendlyDisplayFormat: friendlyDisplayFormat,\r\n        };\r\n        return this.add(title, \"SP.FieldDateTime\", extend(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldNumber to the collection\r\n     *\r\n     * @param title The field title\r\n     * @param minValue The field's minimum value\r\n     * @param maxValue The field's maximum value\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addNumber = function (title, minValue, maxValue, properties) {\r\n        var props = { FieldTypeKind: 9 };\r\n        if (minValue !== undefined) {\r\n            props = extend({ MinimumValue: minValue }, props);\r\n        }\r\n        if (maxValue !== undefined) {\r\n            props = extend({ MaximumValue: maxValue }, props);\r\n        }\r\n        return this.add(title, \"SP.FieldNumber\", extend(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldCurrency to the collection\r\n     *\r\n     * @param title The field title\r\n     * @param minValue The field's minimum value\r\n     * @param maxValue The field's maximum value\r\n     * @param currencyLocalId Specifies the language code identifier (LCID) used to format the value of the field\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addCurrency = function (title, minValue, maxValue, currencyLocalId, properties) {\r\n        if (currencyLocalId === void 0) { currencyLocalId = 1033; }\r\n        var props = {\r\n            CurrencyLocaleId: currencyLocalId,\r\n            FieldTypeKind: 10,\r\n        };\r\n        if (minValue !== undefined) {\r\n            props = extend({ MinimumValue: minValue }, props);\r\n        }\r\n        if (maxValue !== undefined) {\r\n            props = extend({ MaximumValue: maxValue }, props);\r\n        }\r\n        return this.add(title, \"SP.FieldCurrency\", extend(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldMultiLineText to the collection\r\n     *\r\n     * @param title The field title\r\n     * @param numberOfLines Specifies the number of lines of text to display for the field.\r\n     * @param richText Specifies whether the field supports rich formatting.\r\n     * @param restrictedMode Specifies whether the field supports a subset of rich formatting.\r\n     * @param appendOnly Specifies whether all changes to the value of the field are displayed in list forms.\r\n     * @param allowHyperlink Specifies whether a hyperlink is allowed as a value of the field.\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     *\r\n     */\r\n    Fields.prototype.addMultilineText = function (title, numberOfLines, richText, restrictedMode, appendOnly, allowHyperlink, properties) {\r\n        if (numberOfLines === void 0) { numberOfLines = 6; }\r\n        if (richText === void 0) { richText = true; }\r\n        if (restrictedMode === void 0) { restrictedMode = false; }\r\n        if (appendOnly === void 0) { appendOnly = false; }\r\n        if (allowHyperlink === void 0) { allowHyperlink = true; }\r\n        var props = {\r\n            AllowHyperlink: allowHyperlink,\r\n            AppendOnly: appendOnly,\r\n            FieldTypeKind: 3,\r\n            NumberOfLines: numberOfLines,\r\n            RestrictedMode: restrictedMode,\r\n            RichText: richText,\r\n        };\r\n        return this.add(title, \"SP.FieldMultiLineText\", extend(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldUrl to the collection\r\n     *\r\n     * @param title The field title\r\n     */\r\n    Fields.prototype.addUrl = function (title, displayFormat, properties) {\r\n        if (displayFormat === void 0) { displayFormat = UrlFieldFormatType.Hyperlink; }\r\n        var props = {\r\n            DisplayFormat: displayFormat,\r\n            FieldTypeKind: 11,\r\n        };\r\n        return this.add(title, \"SP.FieldUrl\", extend(props, properties));\r\n    };\r\n    /** Adds a user field to the colleciton\r\n    *\r\n    * @param title The new field's title\r\n    * @param selectionMode The selection mode of the field\r\n    * @param selectionGroup Value that specifies the identifier of the SharePoint group whose members can be selected as values of the field\r\n    * @param properties\r\n    */\r\n    Fields.prototype.addUser = function (title, selectionMode, properties) {\r\n        var props = {\r\n            FieldTypeKind: 20,\r\n            SelectionMode: selectionMode,\r\n        };\r\n        return this.add(title, \"SP.FieldUser\", extend(props, properties));\r\n    };\r\n    /**\r\n     * Adds a SP.FieldLookup to the collection\r\n     *\r\n     * @param title The new field's title\r\n     * @param lookupListId The guid id of the list where the source of the lookup is found\r\n     * @param lookupFieldName The internal name of the field in the source list\r\n     * @param properties Set of additional properties to set on the new field\r\n     */\r\n    Fields.prototype.addLookup = function (title, lookupListId, lookupFieldName, properties) {\r\n        var _this = this;\r\n        var props = extend({\r\n            FieldTypeKind: 7,\r\n            LookupFieldName: lookupFieldName,\r\n            LookupListId: lookupListId,\r\n            Title: title,\r\n        }, properties);\r\n        var postBody = jsS({\r\n            \"parameters\": extend(metadata(\"SP.FieldCreationInformation\"), props),\r\n        });\r\n        return this.clone(Fields_1, \"addfield\").postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                field: _this.getById(data.Id),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldChoice to the collection\r\n     *\r\n     * @param title The field title.\r\n     * @param choices The choices for the field.\r\n     * @param format The display format of the available options for the field.\r\n     * @param fillIn Specifies whether the field allows fill-in values.\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addChoice = function (title, choices, format, fillIn, properties) {\r\n        if (format === void 0) { format = ChoiceFieldFormatType.Dropdown; }\r\n        var props = {\r\n            Choices: {\r\n                results: choices,\r\n            },\r\n            EditFormat: format,\r\n            FieldTypeKind: 6,\r\n            FillInChoice: fillIn,\r\n        };\r\n        return this.add(title, \"SP.FieldChoice\", extend(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldMultiChoice to the collection\r\n     *\r\n     * @param title The field title.\r\n     * @param choices The choices for the field.\r\n     * @param fillIn Specifies whether the field allows fill-in values.\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addMultiChoice = function (title, choices, fillIn, properties) {\r\n        var props = {\r\n            Choices: {\r\n                results: choices,\r\n            },\r\n            FieldTypeKind: 15,\r\n            FillInChoice: fillIn,\r\n        };\r\n        return this.add(title, \"SP.FieldMultiChoice\", extend(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldBoolean to the collection\r\n     *\r\n     * @param title The field title.\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addBoolean = function (title, properties) {\r\n        var props = {\r\n            FieldTypeKind: 8,\r\n        };\r\n        return this.add(title, \"SP.Field\", extend(props, properties));\r\n    };\r\n    /**\r\n    * Creates a secondary (dependent) lookup field, based on the Id of the primary lookup field.\r\n    *\r\n    * @param displayName The display name of the new field.\r\n    * @param primaryLookupFieldId The guid of the primary Lookup Field.\r\n    * @param showField Which field to show from the lookup list.\r\n    */\r\n    Fields.prototype.addDependentLookupField = function (displayName, primaryLookupFieldId, showField) {\r\n        var _this = this;\r\n        return this.clone(Fields_1, \"adddependentlookupfield(displayName='\" + displayName + \"', primarylookupfieldid='\" + primaryLookupFieldId + \"', showfield='\" + showField + \"')\")\r\n            .postCore()\r\n            .then(function (data) {\r\n            return {\r\n                data: data,\r\n                field: _this.getById(data.Id),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldLocation to the collection\r\n     *\r\n     * @param title The field title.\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addLocation = function (title, properties) {\r\n        var props = { FieldTypeKind: 33 };\r\n        return this.add(title, \"SP.FieldLocation\", extend(props, properties));\r\n    };\r\n    var Fields_1;\r\n    Fields = Fields_1 = tslib_1.__decorate([\r\n        defaultPath(\"fields\")\r\n    ], Fields);\r\n    return Fields;\r\n}(SharePointQueryableCollection));\r\nexport { Fields };\r\n/**\r\n * Describes a single of Field instance\r\n *\r\n */\r\nvar Field = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Field, _super);\r\n    function Field() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * Delete this fields\r\n         *\r\n         */\r\n        _this.delete = _this._delete;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Updates this field intance with the supplied properties\r\n     *\r\n     * @param properties A plain object hash of values to update for the list\r\n     * @param fieldType The type value, required to update child field type properties\r\n     */\r\n    Field.prototype.update = function (properties, fieldType) {\r\n        var _this = this;\r\n        if (fieldType === void 0) { fieldType = \"SP.Field\"; }\r\n        var postBody = jsS(extend(metadata(fieldType), properties));\r\n        return this.postCore({\r\n            body: postBody,\r\n            headers: {\r\n                \"X-HTTP-Method\": \"MERGE\",\r\n            },\r\n        }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                field: _this,\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Sets the value of the ShowInDisplayForm property for this field.\r\n     */\r\n    Field.prototype.setShowInDisplayForm = function (show) {\r\n        return this.clone(Field, \"setshowindisplayform(\" + show + \")\").postCore();\r\n    };\r\n    /**\r\n     * Sets the value of the ShowInEditForm property for this field.\r\n     */\r\n    Field.prototype.setShowInEditForm = function (show) {\r\n        return this.clone(Field, \"setshowineditform(\" + show + \")\").postCore();\r\n    };\r\n    /**\r\n     * Sets the value of the ShowInNewForm property for this field.\r\n     */\r\n    Field.prototype.setShowInNewForm = function (show) {\r\n        return this.clone(Field, \"setshowinnewform(\" + show + \")\").postCore();\r\n    };\r\n    return Field;\r\n}(SharePointQueryableInstance));\r\nexport { Field };\r\n//# sourceMappingURL=fields.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryableCollection, SharePointQueryableInstance, defaultPath } from \"./sharepointqueryable\";\r\n/**\r\n * Describes a collection of Field objects\r\n *\r\n */\r\nvar Forms = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Forms, _super);\r\n    function Forms() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets a form by id\r\n     *\r\n     * @param id The guid id of the item to retrieve\r\n     */\r\n    Forms.prototype.getById = function (id) {\r\n        var i = new Form(this);\r\n        i.concat(\"('\" + id + \"')\");\r\n        return i;\r\n    };\r\n    Forms = tslib_1.__decorate([\r\n        defaultPath(\"forms\")\r\n    ], Forms);\r\n    return Forms;\r\n}(SharePointQueryableCollection));\r\nexport { Forms };\r\n/**\r\n * Describes a single of Form instance\r\n *\r\n */\r\nvar Form = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Form, _super);\r\n    function Form() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    return Form;\r\n}(SharePointQueryableInstance));\r\nexport { Form };\r\n//# sourceMappingURL=forms.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryableCollection, SharePointQueryableInstance, defaultPath } from \"./sharepointqueryable\";\r\nimport { jsS } from \"@pnp/common\";\r\n/**\r\n * Describes a collection of webhook subscriptions\r\n *\r\n */\r\nvar Subscriptions = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Subscriptions, _super);\r\n    function Subscriptions() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Returns all the webhook subscriptions or the specified webhook subscription\r\n     *\r\n     * @param subscriptionId The id of a specific webhook subscription to retrieve, omit to retrieve all the webhook subscriptions\r\n     */\r\n    Subscriptions.prototype.getById = function (subscriptionId) {\r\n        var s = new Subscription(this);\r\n        s.concat(\"('\" + subscriptionId + \"')\");\r\n        return s;\r\n    };\r\n    /**\r\n     * Creates a new webhook subscription\r\n     *\r\n     * @param notificationUrl The url to receive the notifications\r\n     * @param expirationDate The date and time to expire the subscription in the form YYYY-MM-ddTHH:mm:ss+00:00 (maximum of 6 months)\r\n     * @param clientState A client specific string (optional)\r\n     */\r\n    Subscriptions.prototype.add = function (notificationUrl, expirationDate, clientState) {\r\n        var _this = this;\r\n        var postBody = {\r\n            \"expirationDateTime\": expirationDate,\r\n            \"notificationUrl\": notificationUrl,\r\n            \"resource\": this.toUrl(),\r\n        };\r\n        if (clientState) {\r\n            postBody.clientState = clientState;\r\n        }\r\n        return this.postCore({ body: jsS(postBody), headers: { \"Content-Type\": \"application/json\" } }).then(function (result) {\r\n            return { data: result, subscription: _this.getById(result.id) };\r\n        });\r\n    };\r\n    Subscriptions = tslib_1.__decorate([\r\n        defaultPath(\"subscriptions\")\r\n    ], Subscriptions);\r\n    return Subscriptions;\r\n}(SharePointQueryableCollection));\r\nexport { Subscriptions };\r\n/**\r\n * Describes a single webhook subscription instance\r\n *\r\n */\r\nvar Subscription = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Subscription, _super);\r\n    function Subscription() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Renews this webhook subscription\r\n     *\r\n     * @param expirationDate The date and time to expire the subscription in the form YYYY-MM-ddTHH:mm:ss+00:00 (maximum of 6 months, optional)\r\n     * @param notificationUrl The url to receive the notifications (optional)\r\n     * @param clientState A client specific string (optional)\r\n     */\r\n    Subscription.prototype.update = function (expirationDate, notificationUrl, clientState) {\r\n        var _this = this;\r\n        var postBody = {};\r\n        if (expirationDate) {\r\n            postBody.expirationDateTime = expirationDate;\r\n        }\r\n        if (notificationUrl) {\r\n            postBody.notificationUrl = notificationUrl;\r\n        }\r\n        if (clientState) {\r\n            postBody.clientState = clientState;\r\n        }\r\n        return this.patchCore({ body: jsS(postBody), headers: { \"Content-Type\": \"application/json\" } }).then(function (data) {\r\n            return { data: data, subscription: _this };\r\n        });\r\n    };\r\n    /**\r\n     * Removes this webhook subscription\r\n     *\r\n     */\r\n    Subscription.prototype.delete = function () {\r\n        return _super.prototype.deleteCore.call(this);\r\n    };\r\n    return Subscription;\r\n}(SharePointQueryableInstance));\r\nexport { Subscription };\r\n//# sourceMappingURL=subscriptions.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryableInstance, SharePointQueryableCollection, defaultPath } from \"./sharepointqueryable\";\r\nimport { extend, jsS } from \"@pnp/common\";\r\n/**\r\n * Describes a collection of user custom actions\r\n *\r\n */\r\nvar UserCustomActions = /** @class */ (function (_super) {\r\n    tslib_1.__extends(UserCustomActions, _super);\r\n    function UserCustomActions() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    UserCustomActions_1 = UserCustomActions;\r\n    /**\r\n     * Returns the user custom action with the specified id\r\n     *\r\n     * @param id The GUID id of the user custom action to retrieve\r\n     */\r\n    UserCustomActions.prototype.getById = function (id) {\r\n        var uca = new UserCustomAction(this);\r\n        uca.concat(\"('\" + id + \"')\");\r\n        return uca;\r\n    };\r\n    /**\r\n     * Creates a user custom action\r\n     *\r\n     * @param properties The information object of property names and values which define the new user custom action\r\n     *\r\n     */\r\n    UserCustomActions.prototype.add = function (properties) {\r\n        var _this = this;\r\n        var postBody = jsS(extend({ __metadata: { \"type\": \"SP.UserCustomAction\" } }, properties));\r\n        return this.postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                action: _this.getById(data.Id),\r\n                data: data,\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Deletes all user custom actions in the collection\r\n     *\r\n     */\r\n    UserCustomActions.prototype.clear = function () {\r\n        return this.clone(UserCustomActions_1, \"clear\").postCore();\r\n    };\r\n    var UserCustomActions_1;\r\n    UserCustomActions = UserCustomActions_1 = tslib_1.__decorate([\r\n        defaultPath(\"usercustomactions\")\r\n    ], UserCustomActions);\r\n    return UserCustomActions;\r\n}(SharePointQueryableCollection));\r\nexport { UserCustomActions };\r\n/**\r\n * Describes a single user custom action\r\n *\r\n */\r\nvar UserCustomAction = /** @class */ (function (_super) {\r\n    tslib_1.__extends(UserCustomAction, _super);\r\n    function UserCustomAction() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n        * Updates this user custom action with the supplied properties\r\n        *\r\n        * @param properties An information object of property names and values to update for this user custom action\r\n        */\r\n        _this.update = _this._update(\"SP.UserCustomAction\", function (data) { return ({ data: data, action: _this }); });\r\n        return _this;\r\n    }\r\n    /**\r\n    * Removes this user custom action\r\n    *\r\n    */\r\n    UserCustomAction.prototype.delete = function () {\r\n        return _super.prototype.deleteCore.call(this);\r\n    };\r\n    return UserCustomAction;\r\n}(SharePointQueryableInstance));\r\nexport { UserCustomAction };\r\n//# sourceMappingURL=usercustomactions.js.map","import * as tslib_1 from \"tslib\";\r\nimport { Items } from \"./items\";\r\nimport { Views, View } from \"./views\";\r\nimport { ContentTypes } from \"./contenttypes\";\r\nimport { Fields } from \"./fields\";\r\nimport { Forms } from \"./forms\";\r\nimport { Subscriptions } from \"./subscriptions\";\r\nimport { SharePointQueryable, SharePointQueryableCollection, defaultPath } from \"./sharepointqueryable\";\r\nimport { SharePointQueryableSecurable } from \"./sharepointqueryablesecurable\";\r\nimport { extend, hOP, jsS } from \"@pnp/common\";\r\nimport { UserCustomActions } from \"./usercustomactions\";\r\nimport { odataUrlFrom } from \"./odata\";\r\nimport { Folder } from \"./folders\";\r\nimport { metadata } from \"./utils/metadata\";\r\nimport { SiteScripts } from \"..\";\r\nimport { toAbsoluteUrl } from \"./utils/toabsoluteurl\";\r\n/**\r\n * Describes a collection of List objects\r\n *\r\n */\r\nvar Lists = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Lists, _super);\r\n    function Lists() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Lists_1 = Lists;\r\n    /**\r\n     * Gets a list from the collection by guid id\r\n     *\r\n     * @param id The Id of the list (GUID)\r\n     */\r\n    Lists.prototype.getById = function (id) {\r\n        var list = new List(this);\r\n        list.concat(\"('\" + id + \"')\");\r\n        return list;\r\n    };\r\n    /**\r\n     * Gets a list from the collection by title\r\n     *\r\n     * @param title The title of the list\r\n     */\r\n    Lists.prototype.getByTitle = function (title) {\r\n        return new List(this, \"getByTitle('\" + title + \"')\");\r\n    };\r\n    /**\r\n     * Adds a new list to the collection\r\n     *\r\n     * @param title The new list's title\r\n     * @param description The new list's description\r\n     * @param template The list template value\r\n     * @param enableContentTypes If true content types will be allowed and enabled, otherwise they will be disallowed and not enabled\r\n     * @param additionalSettings Will be passed as part of the list creation body\r\n     */\r\n    Lists.prototype.add = function (title, description, template, enableContentTypes, additionalSettings) {\r\n        var _this = this;\r\n        if (description === void 0) { description = \"\"; }\r\n        if (template === void 0) { template = 100; }\r\n        if (enableContentTypes === void 0) { enableContentTypes = false; }\r\n        if (additionalSettings === void 0) { additionalSettings = {}; }\r\n        var addSettings = extend({\r\n            \"AllowContentTypes\": enableContentTypes,\r\n            \"BaseTemplate\": template,\r\n            \"ContentTypesEnabled\": enableContentTypes,\r\n            \"Description\": description,\r\n            \"Title\": title,\r\n            \"__metadata\": { \"type\": \"SP.List\" },\r\n        }, additionalSettings);\r\n        return this.postCore({ body: jsS(addSettings) }).then(function (data) {\r\n            return { data: data, list: _this.getByTitle(addSettings.Title) };\r\n        });\r\n    };\r\n    /**\r\n     * Ensures that the specified list exists in the collection (note: this method not supported for batching)\r\n     *\r\n     * @param title The new list's title\r\n     * @param description The new list's description\r\n     * @param template The list template value\r\n     * @param enableContentTypes If true content types will be allowed and enabled, otherwise they will be disallowed and not enabled\r\n     * @param additionalSettings Will be passed as part of the list creation body or used to update an existing list\r\n     */\r\n    Lists.prototype.ensure = function (title, description, template, enableContentTypes, additionalSettings) {\r\n        var _this = this;\r\n        if (description === void 0) { description = \"\"; }\r\n        if (template === void 0) { template = 100; }\r\n        if (enableContentTypes === void 0) { enableContentTypes = false; }\r\n        if (additionalSettings === void 0) { additionalSettings = {}; }\r\n        if (this.hasBatch) {\r\n            throw Error(\"The ensure list method is not supported for use in a batch.\");\r\n        }\r\n        return new Promise(function (resolve, reject) {\r\n            var addOrUpdateSettings = extend(additionalSettings, { Title: title, Description: description, ContentTypesEnabled: enableContentTypes }, true);\r\n            var list = _this.getByTitle(addOrUpdateSettings.Title);\r\n            list.get().then(function (_) {\r\n                list.update(addOrUpdateSettings).then(function (d) {\r\n                    resolve({ created: false, data: d, list: _this.getByTitle(addOrUpdateSettings.Title) });\r\n                }).catch(function (e) { return reject(e); });\r\n            }).catch(function (_) {\r\n                _this.add(title, description, template, enableContentTypes, addOrUpdateSettings).then(function (r) {\r\n                    resolve({ created: true, data: r.data, list: _this.getByTitle(addOrUpdateSettings.Title) });\r\n                }).catch(function (e) { return reject(e); });\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Gets a list that is the default asset location for images or other files, which the users upload to their wiki pages.\r\n     */\r\n    Lists.prototype.ensureSiteAssetsLibrary = function () {\r\n        return this.clone(Lists_1, \"ensuresiteassetslibrary\").postCore().then(function (json) {\r\n            return new List(odataUrlFrom(json));\r\n        });\r\n    };\r\n    /**\r\n     * Gets a list that is the default location for wiki pages.\r\n     */\r\n    Lists.prototype.ensureSitePagesLibrary = function () {\r\n        return this.clone(Lists_1, \"ensuresitepageslibrary\").postCore().then(function (json) {\r\n            return new List(odataUrlFrom(json));\r\n        });\r\n    };\r\n    var Lists_1;\r\n    Lists = Lists_1 = tslib_1.__decorate([\r\n        defaultPath(\"lists\")\r\n    ], Lists);\r\n    return Lists;\r\n}(SharePointQueryableCollection));\r\nexport { Lists };\r\n/**\r\n * Describes a single List instance\r\n *\r\n */\r\nvar List = /** @class */ (function (_super) {\r\n    tslib_1.__extends(List, _super);\r\n    function List() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(List.prototype, \"contentTypes\", {\r\n        /**\r\n         * Gets the content types in this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new ContentTypes(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"items\", {\r\n        /**\r\n         * Gets the items in this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Items(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"views\", {\r\n        /**\r\n         * Gets the views in this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Views(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"fields\", {\r\n        /**\r\n         * Gets the fields in this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Fields(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"forms\", {\r\n        /**\r\n         * Gets the forms in this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Forms(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"defaultView\", {\r\n        /**\r\n         * Gets the default view of this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new View(this, \"DefaultView\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"userCustomActions\", {\r\n        /**\r\n         * Get all custom actions on a site collection\r\n         *\r\n         */\r\n        get: function () {\r\n            return new UserCustomActions(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"effectiveBasePermissions\", {\r\n        /**\r\n         * Gets the effective base permissions of this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryable(this, \"EffectiveBasePermissions\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"eventReceivers\", {\r\n        /**\r\n         * Gets the event receivers attached to this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableCollection(this, \"EventReceivers\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"relatedFields\", {\r\n        /**\r\n         * Gets the related fields of this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryable(this, \"getRelatedFields\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"informationRightsManagementSettings\", {\r\n        /**\r\n         * Gets the IRM settings for this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryable(this, \"InformationRightsManagementSettings\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"subscriptions\", {\r\n        /**\r\n         * Gets the webhook subscriptions of this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Subscriptions(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"rootFolder\", {\r\n        /**\r\n         * The root folder of the list\r\n         */\r\n        get: function () {\r\n            return new Folder(this, \"rootFolder\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets a view by view guid id\r\n     *\r\n     */\r\n    List.prototype.getView = function (viewId) {\r\n        return new View(this, \"getView('\" + viewId + \"')\");\r\n    };\r\n    /**\r\n     * Updates this list intance with the supplied properties\r\n     *\r\n     * @param properties A plain object hash of values to update for the list\r\n     * @param eTag Value used in the IF-Match header, by default \"*\"\r\n     */\r\n    /* tslint:disable no-string-literal */\r\n    List.prototype.update = function (properties, eTag) {\r\n        var _this = this;\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        var postBody = jsS(extend({\r\n            \"__metadata\": { \"type\": \"SP.List\" },\r\n        }, properties));\r\n        return this.postCore({\r\n            body: postBody,\r\n            headers: {\r\n                \"IF-Match\": eTag,\r\n                \"X-HTTP-Method\": \"MERGE\",\r\n            },\r\n        }).then(function (data) {\r\n            var retList = _this;\r\n            if (hOP(properties, \"Title\")) {\r\n                retList = _this.getParent(List, _this.parentUrl, \"getByTitle('\" + properties[\"Title\"] + \"')\");\r\n            }\r\n            return {\r\n                data: data,\r\n                list: retList,\r\n            };\r\n        });\r\n    };\r\n    /* tslint:enable */\r\n    /**\r\n     * Delete this list\r\n     *\r\n     * @param eTag Value used in the IF-Match header, by default \"*\"\r\n     */\r\n    List.prototype.delete = function (eTag) {\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        return this.postCore({\r\n            headers: {\r\n                \"IF-Match\": eTag,\r\n                \"X-HTTP-Method\": \"DELETE\",\r\n            },\r\n        });\r\n    };\r\n    /**\r\n     * Returns the collection of changes from the change log that have occurred within the list, based on the specified query.\r\n     */\r\n    List.prototype.getChanges = function (query) {\r\n        return this.clone(List, \"getchanges\").postCore({\r\n            body: jsS({ \"query\": extend(metadata(\"SP.ChangeQuery\"), query) }),\r\n        });\r\n    };\r\n    /**\r\n     * Returns a collection of items from the list based on the specified query.\r\n     *\r\n     * @param CamlQuery The Query schema of Collaborative Application Markup\r\n     * Language (CAML) is used in various ways within the context of Microsoft SharePoint Foundation\r\n     * to define queries against list data.\r\n     * see:\r\n     *\r\n     * https://msdn.microsoft.com/en-us/library/office/ms467521.aspx\r\n     *\r\n     * @param expands A URI with a $expand System Query Option indicates that Entries associated with\r\n     * the Entry or Collection of Entries identified by the Resource Path\r\n     * section of the URI must be represented inline (i.e. eagerly loaded).\r\n     * see:\r\n     *\r\n     * https://msdn.microsoft.com/en-us/library/office/fp142385.aspx\r\n     *\r\n     * http://www.odata.org/documentation/odata-version-2-0/uri-conventions/#ExpandSystemQueryOption\r\n     */\r\n    List.prototype.getItemsByCAMLQuery = function (query) {\r\n        var expands = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            expands[_i - 1] = arguments[_i];\r\n        }\r\n        var q = this.clone(List, \"getitems\");\r\n        return q.expand.apply(q, expands).postCore({\r\n            body: jsS({ \"query\": extend({ \"__metadata\": { \"type\": \"SP.CamlQuery\" } }, query) }),\r\n        });\r\n    };\r\n    /**\r\n     * See: https://msdn.microsoft.com/en-us/library/office/dn292554.aspx\r\n     */\r\n    List.prototype.getListItemChangesSinceToken = function (query) {\r\n        return this.clone(List, \"getlistitemchangessincetoken\").postCore({\r\n            body: jsS({ \"query\": extend({ \"__metadata\": { \"type\": \"SP.ChangeLogItemQuery\" } }, query) }),\r\n        }, { parse: function (r) { return r.text(); } });\r\n    };\r\n    /**\r\n     * Moves the list to the Recycle Bin and returns the identifier of the new Recycle Bin item.\r\n     */\r\n    List.prototype.recycle = function () {\r\n        return this.clone(List, \"recycle\").postCore().then(function (data) {\r\n            if (hOP(data, \"Recycle\")) {\r\n                return data.Recycle;\r\n            }\r\n            else {\r\n                return data;\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Renders list data based on the view xml provided\r\n     */\r\n    List.prototype.renderListData = function (viewXml) {\r\n        var q = this.clone(List, \"renderlistdata(@viewXml)\");\r\n        q.query.set(\"@viewXml\", \"'\" + viewXml + \"'\");\r\n        return q.postCore().then(function (data) {\r\n            // data will be a string, so we parse it again\r\n            return JSON.parse(hOP(data, \"RenderListData\") ? data.RenderListData : data);\r\n        });\r\n    };\r\n    /**\r\n     * Returns the data for the specified query view\r\n     *\r\n     * @param parameters The parameters to be used to render list data as JSON string.\r\n     * @param overrideParameters The parameters that are used to override and extend the regular SPRenderListDataParameters.\r\n     */\r\n    List.prototype.renderListDataAsStream = function (parameters, overrideParameters) {\r\n        if (overrideParameters === void 0) { overrideParameters = null; }\r\n        var postBody = {\r\n            overrideParameters: extend(metadata(\"SP.RenderListDataOverrideParameters\"), overrideParameters),\r\n            parameters: extend(metadata(\"SP.RenderListDataParameters\"), parameters),\r\n        };\r\n        return this.clone(List, \"RenderListDataAsStream\", true).postCore({\r\n            body: jsS(postBody),\r\n        });\r\n    };\r\n    /**\r\n     * Gets the field values and field schema attributes for a list item.\r\n     */\r\n    List.prototype.renderListFormData = function (itemId, formId, mode) {\r\n        return this.clone(List, \"renderlistformdata(itemid=\" + itemId + \", formid='\" + formId + \"', mode='\" + mode + \"')\").postCore().then(function (data) {\r\n            // data will be a string, so we parse it again\r\n            return JSON.parse(hOP(data, \"RenderListFormData\") ? data.RenderListFormData : data);\r\n        });\r\n    };\r\n    /**\r\n     * Reserves a list item ID for idempotent list item creation.\r\n     */\r\n    List.prototype.reserveListItemId = function () {\r\n        return this.clone(List, \"reservelistitemid\").postCore().then(function (data) {\r\n            if (hOP(data, \"ReserveListItemId\")) {\r\n                return data.ReserveListItemId;\r\n            }\r\n            else {\r\n                return data;\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Returns the ListItemEntityTypeFullName for this list, used when adding/updating list items. Does not support batching.\r\n     *\r\n     */\r\n    List.prototype.getListItemEntityTypeFullName = function () {\r\n        return this.clone(List, null, false).select(\"ListItemEntityTypeFullName\").get().then(function (o) { return o.ListItemEntityTypeFullName; });\r\n    };\r\n    /**\r\n     * Creates an item using path (in a folder), validates and sets its field values.\r\n     *\r\n     * @param formValues The fields to change and their new values.\r\n     * @param decodedUrl Path decoded url; folder's server relative path.\r\n     * @param bNewDocumentUpdate true if the list item is a document being updated after upload; otherwise false.\r\n     * @param checkInComment Optional check in comment.\r\n     */\r\n    List.prototype.addValidateUpdateItemUsingPath = function (formValues, decodedUrl, bNewDocumentUpdate, checkInComment) {\r\n        if (bNewDocumentUpdate === void 0) { bNewDocumentUpdate = false; }\r\n        return this.clone(List, \"AddValidateUpdateItemUsingPath()\").postCore({\r\n            body: jsS({\r\n                bNewDocumentUpdate: bNewDocumentUpdate,\r\n                checkInComment: checkInComment,\r\n                formValues: formValues,\r\n                listItemCreateInfo: {\r\n                    FolderPath: {\r\n                        DecodedUrl: decodedUrl,\r\n                        __metadata: { type: \"SP.ResourcePath\" },\r\n                    },\r\n                    __metadata: { type: \"SP.ListItemCreationInformationUsingPath\" },\r\n                },\r\n            }),\r\n        }).then(function (res) {\r\n            if (typeof res.AddValidateUpdateItemUsingPath !== \"undefined\") {\r\n                return res.AddValidateUpdateItemUsingPath.results;\r\n            }\r\n            return res;\r\n        });\r\n    };\r\n    /**\r\n    * Gets the site script syntax (JSON) for the current list\r\n    */\r\n    List.prototype.getSiteScript = function () {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var rootFolder, absoluteListUrl;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.clone(List).rootFolder.select(\"ServerRelativeUrl\").get()];\r\n                    case 1:\r\n                        rootFolder = _a.sent();\r\n                        return [4 /*yield*/, toAbsoluteUrl(rootFolder.ServerRelativeUrl)];\r\n                    case 2:\r\n                        absoluteListUrl = _a.sent();\r\n                        return [2 /*return*/, new SiteScripts(this, \"\").getSiteScriptFromList(absoluteListUrl)];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return List;\r\n}(SharePointQueryableSecurable));\r\nexport { List };\r\n//# sourceMappingURL=lists.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryableCollection, SharePointQueryableInstance, defaultPath } from \"./sharepointqueryable\";\r\nimport { extend, jsS } from \"@pnp/common\";\r\nimport { odataUrlFrom } from \"./odata\";\r\nimport { metadata } from \"./utils/metadata\";\r\n/**\r\n * Represents a Collection of comments\r\n */\r\nvar Comments = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Comments, _super);\r\n    function Comments() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Comments_1 = Comments;\r\n    /**\r\n     * Adds a new comment to this collection\r\n     *\r\n     * @param info Comment information to add\r\n     */\r\n    Comments.prototype.add = function (info) {\r\n        var _this = this;\r\n        if (typeof info === \"string\") {\r\n            info = { text: info };\r\n        }\r\n        var postBody = jsS(extend(metadata(\"Microsoft.SharePoint.Comments.comment\"), info));\r\n        return this.clone(Comments_1, null).postCore({ body: postBody }).then(function (d) {\r\n            return extend(_this.getById(d.id), d);\r\n        });\r\n    };\r\n    /**\r\n     * Gets a comment by id\r\n     *\r\n     * @param id Id of the comment to load\r\n     */\r\n    Comments.prototype.getById = function (id) {\r\n        var c = new Comment(this);\r\n        c.concat(\"(\" + id + \")\");\r\n        return c;\r\n    };\r\n    /**\r\n     * Deletes all the comments in this collection\r\n     */\r\n    Comments.prototype.clear = function () {\r\n        return this.clone(Comments_1, \"DeleteAll\").postCore();\r\n    };\r\n    var Comments_1;\r\n    Comments = Comments_1 = tslib_1.__decorate([\r\n        defaultPath(\"comments\")\r\n    ], Comments);\r\n    return Comments;\r\n}(SharePointQueryableCollection));\r\nexport { Comments };\r\n/**\r\n * Represents a comment\r\n */\r\nvar Comment = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Comment, _super);\r\n    function Comment() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(Comment.prototype, \"replies\", {\r\n        get: function () {\r\n            return new Replies(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Likes the comment as the current user\r\n     */\r\n    Comment.prototype.like = function () {\r\n        return this.clone(Comment, \"Like\").postCore();\r\n    };\r\n    /**\r\n     * Unlikes the comment as the current user\r\n     */\r\n    Comment.prototype.unlike = function () {\r\n        return this.clone(Comment, \"Unlike\").postCore();\r\n    };\r\n    /**\r\n     * Deletes this comment\r\n     */\r\n    Comment.prototype.delete = function () {\r\n        return this.deleteCore();\r\n    };\r\n    return Comment;\r\n}(SharePointQueryableInstance));\r\nexport { Comment };\r\n/**\r\n * Represents a Collection of comments\r\n */\r\nvar Replies = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Replies, _super);\r\n    function Replies() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Replies_1 = Replies;\r\n    /**\r\n     * Adds a new reply to this collection\r\n     *\r\n     * @param info Comment information to add\r\n     */\r\n    Replies.prototype.add = function (info) {\r\n        if (typeof info === \"string\") {\r\n            info = { text: info };\r\n        }\r\n        var postBody = jsS(extend(metadata(\"Microsoft.SharePoint.Comments.comment\"), info));\r\n        return this.clone(Replies_1, null).postCore({ body: postBody }).then(function (d) {\r\n            return extend(new Comment(odataUrlFrom(d)), d);\r\n        });\r\n    };\r\n    var Replies_1;\r\n    Replies = Replies_1 = tslib_1.__decorate([\r\n        defaultPath(\"replies\")\r\n    ], Replies);\r\n    return Replies;\r\n}(SharePointQueryableCollection));\r\nexport { Replies };\r\n//# sourceMappingURL=comments.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryable, SharePointQueryableCollection, SharePointQueryableInstance, defaultPath } from \"./sharepointqueryable\";\r\nimport { SharePointQueryableShareableItem } from \"./sharepointqueryableshareable\";\r\nimport { Folder } from \"./folders\";\r\nimport { File } from \"./files\";\r\nimport { ContentType } from \"./contenttypes\";\r\nimport { extend, jsS, hOP } from \"@pnp/common\";\r\nimport { ODataParserBase, ODataDefaultParser } from \"@pnp/odata\";\r\nimport { AttachmentFiles } from \"./attachmentfiles\";\r\nimport { List } from \"./lists\";\r\nimport { Logger } from \"@pnp/logging\";\r\nimport { Comments } from \"./comments\";\r\nimport { metadata } from \"./utils/metadata\";\r\n/**\r\n * Describes a collection of Item objects\r\n *\r\n */\r\nvar Items = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Items, _super);\r\n    function Items() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Items_1 = Items;\r\n    /**\r\n    * Gets an Item by id\r\n    *\r\n    * @param id The integer id of the item to retrieve\r\n    */\r\n    Items.prototype.getById = function (id) {\r\n        var i = new Item(this);\r\n        i.concat(\"(\" + id + \")\");\r\n        return i;\r\n    };\r\n    /**\r\n     * Gets BCS Item by string id\r\n     *\r\n     * @param stringId The string id of the BCS item to retrieve\r\n     */\r\n    Items.prototype.getItemByStringId = function (stringId) {\r\n        // creates an item with the parent list path and append out method call\r\n        return new Item(this.parentUrl, \"getItemByStringId('\" + stringId + \"')\");\r\n    };\r\n    /**\r\n     * Skips the specified number of items (https://msdn.microsoft.com/en-us/library/office/fp142385.aspx#sectionSection6)\r\n     *\r\n     * @param skip The starting id where the page should start, use with top to specify pages\r\n     * @param reverse It true the PagedPrev=true parameter is added allowing backwards navigation in the collection\r\n     */\r\n    Items.prototype.skip = function (skip, reverse) {\r\n        if (reverse === void 0) { reverse = false; }\r\n        if (reverse) {\r\n            this.query.set(\"$skiptoken\", encodeURIComponent(\"Paged=TRUE&PagedPrev=TRUE&p_ID=\" + skip));\r\n        }\r\n        else {\r\n            this.query.set(\"$skiptoken\", encodeURIComponent(\"Paged=TRUE&p_ID=\" + skip));\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Gets a collection designed to aid in paging through data\r\n     *\r\n     */\r\n    Items.prototype.getPaged = function (parser) {\r\n        if (parser === void 0) { parser = new ODataDefaultParser(); }\r\n        return this.get(new PagedItemCollectionParser(this, parser));\r\n    };\r\n    /**\r\n     * Gets all the items in a list, regardless of count. Does not support batching or caching\r\n     *\r\n     *  @param requestSize Number of items to return in each request (Default: 2000)\r\n     *  @param acceptHeader Allows for setting the value of the Accept header for SP 2013 support\r\n     */\r\n    Items.prototype.getAll = function (requestSize, acceptHeader) {\r\n        if (requestSize === void 0) { requestSize = 2000; }\r\n        if (acceptHeader === void 0) { acceptHeader = \"application/json;odata=nometadata\"; }\r\n        Logger.write(\"Calling items.getAll should be done sparingly. Ensure this is the correct choice. If you are unsure, it is not.\", 2 /* Warning */);\r\n        // this will be used for the actual query\r\n        // and we set no metadata here to try and reduce traffic\r\n        var items = new Items_1(this, \"\").top(requestSize).configure({\r\n            headers: {\r\n                \"Accept\": acceptHeader,\r\n            },\r\n        });\r\n        // let's copy over the odata query params that can be applied\r\n        // $top - allow setting the page size this way (override what we did above)\r\n        // $select - allow picking the return fields (good behavior)\r\n        // $filter - allow setting a filter, though this may fail due for large lists\r\n        this.query.forEach(function (v, k) {\r\n            if (/^\\$select|filter|top|expand$/i.test(k)) {\r\n                items.query.set(k, v);\r\n            }\r\n        });\r\n        // give back the promise\r\n        return new Promise(function (resolve, reject) {\r\n            // this will eventually hold the items we return\r\n            var itemsCollector = [];\r\n            // action that will gather up our results recursively\r\n            var gatherer = function (last) {\r\n                // collect that set of results\r\n                [].push.apply(itemsCollector, last.results);\r\n                // if we have more, repeat - otherwise resolve with the collected items\r\n                if (last.hasNext) {\r\n                    last.getNext().then(gatherer).catch(reject);\r\n                }\r\n                else {\r\n                    resolve(itemsCollector);\r\n                }\r\n            };\r\n            // start the cycle\r\n            items.getPaged().then(gatherer).catch(reject);\r\n        });\r\n    };\r\n    /**\r\n     * Adds a new item to the collection\r\n     *\r\n     * @param properties The new items's properties\r\n     * @param listItemEntityTypeFullName The type name of the list's entities\r\n     */\r\n    Items.prototype.add = function (properties, listItemEntityTypeFullName) {\r\n        var _this = this;\r\n        if (properties === void 0) { properties = {}; }\r\n        if (listItemEntityTypeFullName === void 0) { listItemEntityTypeFullName = null; }\r\n        var removeDependency = this.addBatchDependency();\r\n        return this.ensureListItemEntityTypeName(listItemEntityTypeFullName).then(function (listItemEntityType) {\r\n            var postBody = jsS(extend(metadata(listItemEntityType), properties));\r\n            var promise = _this.clone(Items_1, \"\").postCore({ body: postBody }).then(function (data) {\r\n                return {\r\n                    data: data,\r\n                    item: _this.getById(data.Id),\r\n                };\r\n            });\r\n            removeDependency();\r\n            return promise;\r\n        });\r\n    };\r\n    /**\r\n     * Ensures we have the proper list item entity type name, either from the value provided or from the list\r\n     *\r\n     * @param candidatelistItemEntityTypeFullName The potential type name\r\n     */\r\n    Items.prototype.ensureListItemEntityTypeName = function (candidatelistItemEntityTypeFullName) {\r\n        return candidatelistItemEntityTypeFullName ?\r\n            Promise.resolve(candidatelistItemEntityTypeFullName) :\r\n            this.getParent(List).getListItemEntityTypeFullName();\r\n    };\r\n    var Items_1;\r\n    Items = Items_1 = tslib_1.__decorate([\r\n        defaultPath(\"items\")\r\n    ], Items);\r\n    return Items;\r\n}(SharePointQueryableCollection));\r\nexport { Items };\r\n/**\r\n * Descrines a single Item instance\r\n *\r\n */\r\nvar Item = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Item, _super);\r\n    function Item() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * Delete this item\r\n         *\r\n         * @param eTag Value used in the IF-Match header, by default \"*\"\r\n         */\r\n        _this.delete = _this._deleteWithETag;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(Item.prototype, \"attachmentFiles\", {\r\n        /**\r\n         * Gets the set of attachments for this item\r\n         *\r\n         */\r\n        get: function () {\r\n            return new AttachmentFiles(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"contentType\", {\r\n        /**\r\n         * Gets the content type for this item\r\n         *\r\n         */\r\n        get: function () {\r\n            return new ContentType(this, \"ContentType\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"comments\", {\r\n        /**\r\n         * Gets the collection of comments associated with this list item\r\n         */\r\n        get: function () {\r\n            return new Comments(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"effectiveBasePermissions\", {\r\n        /**\r\n         * Gets the effective base permissions for the item\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryable(this, \"EffectiveBasePermissions\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"effectiveBasePermissionsForUI\", {\r\n        /**\r\n         * Gets the effective base permissions for the item in a UI context\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryable(this, \"EffectiveBasePermissionsForUI\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"fieldValuesAsHTML\", {\r\n        /**\r\n         * Gets the field values for this list item in their HTML representation\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableInstance(this, \"FieldValuesAsHTML\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"fieldValuesAsText\", {\r\n        /**\r\n         * Gets the field values for this list item in their text representation\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableInstance(this, \"FieldValuesAsText\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"fieldValuesForEdit\", {\r\n        /**\r\n         * Gets the field values for this list item for use in editing controls\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableInstance(this, \"FieldValuesForEdit\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"folder\", {\r\n        /**\r\n         * Gets the folder associated with this list item (if this item represents a folder)\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Folder(this, \"folder\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"file\", {\r\n        /**\r\n         * Gets the folder associated with this list item (if this item represents a folder)\r\n         *\r\n         */\r\n        get: function () {\r\n            return new File(this, \"file\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"versions\", {\r\n        /**\r\n         * Gets the collection of versions associated with this item\r\n         */\r\n        get: function () {\r\n            return new ItemVersions(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"list\", {\r\n        get: function () {\r\n            return this.getParent(List, this.parentUrl.substr(0, this.parentUrl.lastIndexOf(\"/\")));\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Updates this list intance with the supplied properties\r\n     *\r\n     * @param properties A plain object hash of values to update for the list\r\n     * @param eTag Value used in the IF-Match header, by default \"*\"\r\n     * @param listItemEntityTypeFullName The type name of the list's entities\r\n     */\r\n    Item.prototype.update = function (properties, eTag, listItemEntityTypeFullName) {\r\n        var _this = this;\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        if (listItemEntityTypeFullName === void 0) { listItemEntityTypeFullName = null; }\r\n        return new Promise(function (resolve, reject) {\r\n            var removeDependency = _this.addBatchDependency();\r\n            return _this.ensureListItemEntityTypeName(listItemEntityTypeFullName).then(function (listItemEntityType) {\r\n                var postBody = jsS(extend(metadata(listItemEntityType), properties));\r\n                removeDependency();\r\n                return _this.postCore({\r\n                    body: postBody,\r\n                    headers: {\r\n                        \"IF-Match\": eTag,\r\n                        \"X-HTTP-Method\": \"MERGE\",\r\n                    },\r\n                }, new ItemUpdatedParser()).then(function (data) {\r\n                    resolve({\r\n                        data: data,\r\n                        item: _this,\r\n                    });\r\n                });\r\n            }).catch(function (e) { return reject(e); });\r\n        });\r\n    };\r\n    /**\r\n     * Gets the collection of people who have liked this item\r\n     */\r\n    Item.prototype.getLikedBy = function () {\r\n        return this.clone(Item, \"likedBy\").postCore();\r\n    };\r\n    /**\r\n     * Likes this item as the current user\r\n     */\r\n    Item.prototype.like = function () {\r\n        return this.clone(Item, \"like\").postCore();\r\n    };\r\n    /**\r\n     * Unlikes this item as the current user\r\n     */\r\n    Item.prototype.unlike = function () {\r\n        return this.clone(Item, \"unlike\").postCore();\r\n    };\r\n    /**\r\n     * Moves the list item to the Recycle Bin and returns the identifier of the new Recycle Bin item.\r\n     */\r\n    Item.prototype.recycle = function () {\r\n        return this.clone(Item, \"recycle\").postCore();\r\n    };\r\n    /**\r\n     * Gets a string representation of the full URL to the WOPI frame.\r\n     * If there is no associated WOPI application, or no associated action, an empty string is returned.\r\n     *\r\n     * @param action Display mode: 0: view, 1: edit, 2: mobileView, 3: interactivePreview\r\n     */\r\n    Item.prototype.getWopiFrameUrl = function (action) {\r\n        if (action === void 0) { action = 0; }\r\n        var i = this.clone(Item, \"getWOPIFrameUrl(@action)\");\r\n        i.query.set(\"@action\", action);\r\n        return i.postCore().then(function (data) {\r\n            // handle verbose mode\r\n            if (hOP(data, \"GetWOPIFrameUrl\")) {\r\n                return data.GetWOPIFrameUrl;\r\n            }\r\n            return data;\r\n        });\r\n    };\r\n    /**\r\n     * Validates and sets the values of the specified collection of fields for the list item.\r\n     *\r\n     * @param formValues The fields to change and their new values.\r\n     * @param newDocumentUpdate true if the list item is a document being updated after upload; otherwise false.\r\n     */\r\n    Item.prototype.validateUpdateListItem = function (formValues, newDocumentUpdate) {\r\n        if (newDocumentUpdate === void 0) { newDocumentUpdate = false; }\r\n        return this.clone(Item, \"validateupdatelistitem\").postCore({\r\n            body: jsS({ \"formValues\": formValues, bNewDocumentUpdate: newDocumentUpdate }),\r\n        });\r\n    };\r\n    /**\r\n     * Get the like by information for a modern site page\r\n     */\r\n    Item.prototype.getLikedByInformation = function () {\r\n        return this.clone(Item, \"likedByInformation\").expand(\"likedby\").getCore();\r\n    };\r\n    /**\r\n     * Ensures we have the proper list item entity type name, either from the value provided or from the list\r\n     *\r\n     * @param candidatelistItemEntityTypeFullName The potential type name\r\n     */\r\n    Item.prototype.ensureListItemEntityTypeName = function (candidatelistItemEntityTypeFullName) {\r\n        return candidatelistItemEntityTypeFullName ?\r\n            Promise.resolve(candidatelistItemEntityTypeFullName) :\r\n            this.list.getListItemEntityTypeFullName();\r\n    };\r\n    return Item;\r\n}(SharePointQueryableShareableItem));\r\nexport { Item };\r\n/**\r\n * Describes a collection of Version objects\r\n *\r\n */\r\nvar ItemVersions = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ItemVersions, _super);\r\n    function ItemVersions() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets a version by id\r\n     *\r\n     * @param versionId The id of the version to retrieve\r\n     */\r\n    ItemVersions.prototype.getById = function (versionId) {\r\n        var v = new ItemVersion(this);\r\n        v.concat(\"(\" + versionId + \")\");\r\n        return v;\r\n    };\r\n    ItemVersions = tslib_1.__decorate([\r\n        defaultPath(\"versions\")\r\n    ], ItemVersions);\r\n    return ItemVersions;\r\n}(SharePointQueryableCollection));\r\nexport { ItemVersions };\r\n/**\r\n * Describes a single Version instance\r\n *\r\n */\r\nvar ItemVersion = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ItemVersion, _super);\r\n    function ItemVersion() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n        * Delete a specific version of a file.\r\n        *\r\n        * @param eTag Value used in the IF-Match header, by default \"*\"\r\n        */\r\n        _this.delete = _this._deleteWithETag;\r\n        return _this;\r\n    }\r\n    return ItemVersion;\r\n}(SharePointQueryableInstance));\r\nexport { ItemVersion };\r\n/**\r\n * Provides paging functionality for list items\r\n */\r\nvar PagedItemCollection = /** @class */ (function () {\r\n    function PagedItemCollection(parent, nextUrl, results, innerParser) {\r\n        this.parent = parent;\r\n        this.nextUrl = nextUrl;\r\n        this.results = results;\r\n        this.innerParser = innerParser;\r\n    }\r\n    Object.defineProperty(PagedItemCollection.prototype, \"hasNext\", {\r\n        /**\r\n         * If true there are more results available in the set, otherwise there are not\r\n         */\r\n        get: function () {\r\n            return typeof this.nextUrl === \"string\" && this.nextUrl.length > 0;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets the next set of results, or resolves to null if no results are available\r\n     */\r\n    PagedItemCollection.prototype.getNext = function () {\r\n        if (this.hasNext) {\r\n            var items = new Items(this.nextUrl, null).configureFrom(this.parent);\r\n            return items.getPaged(this.innerParser);\r\n        }\r\n        return new Promise(function (r) { return r(null); });\r\n    };\r\n    return PagedItemCollection;\r\n}());\r\nexport { PagedItemCollection };\r\nvar PagedItemCollectionParser = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PagedItemCollectionParser, _super);\r\n    function PagedItemCollectionParser(_parent, innerParser) {\r\n        var _this = _super.call(this) || this;\r\n        _this._parent = _parent;\r\n        _this.innerParser = innerParser;\r\n        return _this;\r\n    }\r\n    PagedItemCollectionParser.prototype.parse = function (r) {\r\n        var _this = this;\r\n        return this.innerParser.parse(r).then(function (items) { return tslib_1.__awaiter(_this, void 0, void 0, function () {\r\n            var json, nextUrl;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                json = this.innerParser.rawJson;\r\n                nextUrl = hOP(json, \"d\") && hOP(json.d, \"__next\") ? json.d.__next : json[\"odata.nextLink\"];\r\n                return [2 /*return*/, new PagedItemCollection(this._parent, nextUrl, items, this.innerParser)];\r\n            });\r\n        }); });\r\n    };\r\n    return PagedItemCollectionParser;\r\n}(ODataParserBase));\r\nvar ItemUpdatedParser = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ItemUpdatedParser, _super);\r\n    function ItemUpdatedParser() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    ItemUpdatedParser.prototype.parse = function (r) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var _this = this;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                return [2 /*return*/, new Promise(function (resolve, reject) {\r\n                        if (_this.handleError(r, reject)) {\r\n                            resolve({\r\n                                \"odata.etag\": r.headers.get(\"etag\"),\r\n                            });\r\n                        }\r\n                    })];\r\n            });\r\n        });\r\n    };\r\n    return ItemUpdatedParser;\r\n}(ODataParserBase));\r\n//# sourceMappingURL=items.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryableInstance, SharePointQueryableCollection } from \"./sharepointqueryable\";\r\nimport { File } from \"./files\";\r\nimport { odataUrlFrom } from \"./odata\";\r\nimport { extractWebUrl } from \"./utils/extractweburl\";\r\n/**\r\n * Represents an app catalog\r\n */\r\nvar AppCatalog = /** @class */ (function (_super) {\r\n    tslib_1.__extends(AppCatalog, _super);\r\n    function AppCatalog(baseUrl, path) {\r\n        if (path === void 0) { path = \"_api/web/tenantappcatalog/AvailableApps\"; }\r\n        return _super.call(this, extractWebUrl(typeof baseUrl === \"string\" ? baseUrl : baseUrl.toUrl()), path) || this;\r\n    }\r\n    /**\r\n     * Get details of specific app from the app catalog\r\n     * @param id - Specify the guid of the app\r\n     */\r\n    AppCatalog.prototype.getAppById = function (id) {\r\n        return new App(this, \"getById('\" + id + \"')\");\r\n    };\r\n    /**\r\n     * Uploads an app package. Not supported for batching\r\n     *\r\n     * @param filename Filename to create.\r\n     * @param content app package data (eg: the .app or .sppkg file).\r\n     * @param shouldOverWrite Should an app with the same name in the same location be overwritten? (default: true)\r\n     * @returns Promise<AppAddResult>\r\n     */\r\n    AppCatalog.prototype.add = function (filename, content, shouldOverWrite) {\r\n        if (shouldOverWrite === void 0) { shouldOverWrite = true; }\r\n        var catalog = this.toUrl().indexOf(\"tenantappcatalog\") > 0 ? \"tenantappcatalog\" : \"sitecollectionappcatalog\";\r\n        // you don't add to the availableapps collection\r\n        var adder = new AppCatalog(extractWebUrl(this.toUrl()), \"_api/web/\" + catalog + \"/add(overwrite=\" + shouldOverWrite + \",url='\" + filename + \"')\");\r\n        return adder.postCore({\r\n            body: content,\r\n        }).then(function (r) {\r\n            return {\r\n                data: r,\r\n                file: new File(odataUrlFrom(r)),\r\n            };\r\n        });\r\n    };\r\n    return AppCatalog;\r\n}(SharePointQueryableCollection));\r\nexport { AppCatalog };\r\n/**\r\n * Represents the actions you can preform on a given app within the catalog\r\n */\r\nvar App = /** @class */ (function (_super) {\r\n    tslib_1.__extends(App, _super);\r\n    function App() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * This method deploys an app on the app catalog.  It must be called in the context\r\n     * of the tenant app catalog web or it will fail.\r\n     *\r\n     * @param skipFeatureDeployment Deploy the app to the entire tenant\r\n     */\r\n    App.prototype.deploy = function (skipFeatureDeployment) {\r\n        if (skipFeatureDeployment === void 0) { skipFeatureDeployment = false; }\r\n        return this.clone(App, \"Deploy(\" + skipFeatureDeployment + \")\").postCore();\r\n    };\r\n    /**\r\n     * This method retracts a deployed app on the app catalog.  It must be called in the context\r\n     * of the tenant app catalog web or it will fail.\r\n     */\r\n    App.prototype.retract = function () {\r\n        return this.clone(App, \"Retract\").postCore();\r\n    };\r\n    /**\r\n     * This method allows an app which is already deployed to be installed on a web\r\n     */\r\n    App.prototype.install = function () {\r\n        return this.clone(App, \"Install\").postCore();\r\n    };\r\n    /**\r\n     * This method allows an app which is already insatlled to be uninstalled on a web\r\n     */\r\n    App.prototype.uninstall = function () {\r\n        return this.clone(App, \"Uninstall\").postCore();\r\n    };\r\n    /**\r\n     * This method allows an app which is already insatlled to be upgraded on a web\r\n     */\r\n    App.prototype.upgrade = function () {\r\n        return this.clone(App, \"Upgrade\").postCore();\r\n    };\r\n    /**\r\n     * This method removes an app from the app catalog.  It must be called in the context\r\n     * of the tenant app catalog web or it will fail.\r\n     */\r\n    App.prototype.remove = function () {\r\n        return this.clone(App, \"Remove\").postCore();\r\n    };\r\n    return App;\r\n}(SharePointQueryableInstance));\r\nexport { App };\r\n//# sourceMappingURL=appcatalog.js.map","import * as tslib_1 from \"tslib\";\r\nimport { Item } from \"./items\";\r\nimport { extend, getGUID, jsS, hOP, stringIsNullOrEmpty, objectDefinedNotNull, combine, isUrlAbsolute } from \"@pnp/common\";\r\nimport { SharePointQueryable } from \"./sharepointqueryable\";\r\nimport { metadata } from \"./utils/metadata\";\r\nimport { List } from \"./lists\";\r\nimport { odataUrlFrom } from \"./odata\";\r\nimport { Web } from \"./webs\";\r\nimport { extractWebUrl } from \"./utils/extractweburl\";\r\nimport { Site } from \"./site\";\r\n/**\r\n * Page promotion state\r\n */\r\nexport var PromotedState;\r\n(function (PromotedState) {\r\n    /**\r\n     * Regular client side page\r\n     */\r\n    PromotedState[PromotedState[\"NotPromoted\"] = 0] = \"NotPromoted\";\r\n    /**\r\n     * Page that will be promoted as news article after publishing\r\n     */\r\n    PromotedState[PromotedState[\"PromoteOnPublish\"] = 1] = \"PromoteOnPublish\";\r\n    /**\r\n     * Page that is promoted as news article\r\n     */\r\n    PromotedState[PromotedState[\"Promoted\"] = 2] = \"Promoted\";\r\n})(PromotedState || (PromotedState = {}));\r\n/**\r\n * Gets the next order value 1 based for the provided collection\r\n *\r\n * @param collection Collection of orderable things\r\n */\r\nfunction getNextOrder(collection) {\r\n    if (collection.length < 1) {\r\n        return 1;\r\n    }\r\n    return Math.max.apply(null, collection.map(function (i) { return i.order; })) + 1;\r\n}\r\n/**\r\n * Normalizes the order value for all the sections, columns, and controls to be 1 based and stepped (1, 2, 3...)\r\n *\r\n * @param collection The collection to normalize\r\n */\r\nfunction reindex(collection) {\r\n    for (var i = 0; i < collection.length; i++) {\r\n        collection[i].order = i + 1;\r\n        if (hOP(collection[i], \"columns\")) {\r\n            reindex(collection[i].columns);\r\n        }\r\n        else if (hOP(collection[i], \"controls\")) {\r\n            reindex(collection[i].controls);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Represents the data and methods associated with client side \"modern\" pages\r\n */\r\nvar ClientSidePage = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ClientSidePage, _super);\r\n    /**\r\n     * PLEASE DON'T USE THIS CONSTRUCTOR DIRECTLY\r\n     *\r\n     */\r\n    function ClientSidePage(baseUrl, path, json, noInit, sections, commentsDisabled) {\r\n        if (noInit === void 0) { noInit = false; }\r\n        if (sections === void 0) { sections = []; }\r\n        if (commentsDisabled === void 0) { commentsDisabled = false; }\r\n        var _this = _super.call(this, baseUrl, path) || this;\r\n        _this.json = json;\r\n        _this.sections = sections;\r\n        _this.commentsDisabled = commentsDisabled;\r\n        _this._bannerImageDirty = false;\r\n        // ensure we have a good url to build on for the pages api\r\n        if (typeof baseUrl === \"string\") {\r\n            _this._parentUrl = \"\";\r\n            _this._url = combine(extractWebUrl(baseUrl), path);\r\n        }\r\n        else {\r\n            _this.extend(ClientSidePage.initFrom(baseUrl, null), path);\r\n        }\r\n        // set a default page settings slice\r\n        _this._pageSettings = { controlType: 0, pageSettingsSlice: { isDefaultDescription: true, isDefaultThumbnail: true } };\r\n        // set a default layout part\r\n        _this._layoutPart = ClientSidePage.getDefaultLayoutPart();\r\n        if (typeof json !== \"undefined\" && !noInit) {\r\n            _this.fromJSON(json);\r\n        }\r\n        return _this;\r\n    }\r\n    /**\r\n     * Creates a new blank page within the supplied library [does not work with batching]\r\n     *\r\n     * @param web Parent web in which we will create the page (we allow list here too matching the old api)\r\n     * @param pageName Filename of the page, such as \"page\"\r\n     * @param title The display title of the page\r\n     * @param pageLayoutType Layout type of the page to use\r\n     */\r\n    ClientSidePage.create = function (web, pageName, title, pageLayoutType) {\r\n        if (pageLayoutType === void 0) { pageLayoutType = \"Article\"; }\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var pageInitData, newPage;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        // patched because previously we used the full page name with the .aspx at the end\r\n                        // this allows folk's existing code to work after the re-write to the new API\r\n                        pageName = pageName.replace(/\\.aspx$/i, \"\");\r\n                        return [4 /*yield*/, ClientSidePage.initFrom(web, \"_api/sitepages/pages\").postCore({\r\n                                body: jsS(Object.assign(metadata(\"SP.Publishing.SitePage\"), {\r\n                                    PageLayoutType: pageLayoutType,\r\n                                })),\r\n                            })];\r\n                    case 1:\r\n                        pageInitData = _a.sent();\r\n                        newPage = new ClientSidePage(web, \"\", pageInitData);\r\n                        // newPage.authors = [currentUserLogin.UserPrincipalName];\r\n                        newPage.title = pageName;\r\n                        return [4 /*yield*/, newPage.save(false)];\r\n                    case 2:\r\n                        _a.sent();\r\n                        newPage.title = title;\r\n                        return [2 /*return*/, newPage];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Creates a new ClientSidePage instance from the provided html content string\r\n     *\r\n     * @param html HTML markup representing the page\r\n     */\r\n    ClientSidePage.fromFile = function (file) {\r\n        return file.getItem().then(function (i) {\r\n            var page = new ClientSidePage(extractWebUrl(file.toUrl()), \"\", { Id: i.Id }, true);\r\n            return page.configureFrom(file).load();\r\n        });\r\n    };\r\n    ClientSidePage.getDefaultLayoutPart = function () {\r\n        return {\r\n            dataVersion: \"1.4\",\r\n            description: \"Title Region Description\",\r\n            id: \"cbe7b0a9-3504-44dd-a3a3-0e5cacd07788\",\r\n            instanceId: \"cbe7b0a9-3504-44dd-a3a3-0e5cacd07788\",\r\n            properties: {\r\n                authors: [],\r\n                layoutType: \"FullWidthImage\",\r\n                showPublishDate: false,\r\n                showTopicHeader: false,\r\n                textAlignment: \"Left\",\r\n                title: \"\",\r\n                topicHeader: \"\",\r\n            },\r\n            serverProcessedContent: { htmlStrings: {}, searchablePlainTexts: {}, imageSources: {}, links: {} },\r\n            title: \"Title area\",\r\n        };\r\n    };\r\n    ClientSidePage.initFrom = function (o, url) {\r\n        return (new ClientSidePage(extractWebUrl(o.toUrl()), url)).configureFrom(o);\r\n    };\r\n    Object.defineProperty(ClientSidePage.prototype, \"pageLayout\", {\r\n        get: function () {\r\n            return this.json.PageLayoutType;\r\n        },\r\n        set: function (value) {\r\n            this.json.PageLayoutType = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ClientSidePage.prototype, \"bannerImageUrl\", {\r\n        get: function () {\r\n            return this.json.BannerImageUrl;\r\n        },\r\n        set: function (value) {\r\n            this.json.BannerImageUrl = value;\r\n            this._bannerImageDirty = true;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ClientSidePage.prototype, \"bannerImageSourceType\", {\r\n        get: function () {\r\n            return this._layoutPart.properties.imageSourceType;\r\n        },\r\n        set: function (value) {\r\n            this._layoutPart.properties.imageSourceType = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ClientSidePage.prototype, \"topicHeader\", {\r\n        get: function () {\r\n            return objectDefinedNotNull(this.json.TopicHeader) ? this.json.TopicHeader : \"\";\r\n        },\r\n        set: function (value) {\r\n            this.json.TopicHeader = value;\r\n            this._layoutPart.properties.topicHeader = value;\r\n            if (stringIsNullOrEmpty(value)) {\r\n                this.showTopicHeader = false;\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ClientSidePage.prototype, \"title\", {\r\n        // public get authors(): string[] {\r\n        //     return this._layoutPart.properties.authorByline;\r\n        // }\r\n        // public set authors(value: string[]) {\r\n        //     this.json.AuthorByline = value;\r\n        //     this._layoutPart.properties.authorByline = value;\r\n        //     this._layoutPart.properties.authors = null;\r\n        // }\r\n        get: function () {\r\n            return this._layoutPart.properties.title;\r\n        },\r\n        set: function (value) {\r\n            this.json.Title = value;\r\n            this._layoutPart.properties.title = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ClientSidePage.prototype, \"layoutType\", {\r\n        get: function () {\r\n            return this._layoutPart.properties.layoutType;\r\n        },\r\n        set: function (value) {\r\n            this._layoutPart.properties.layoutType = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ClientSidePage.prototype, \"headerTextAlignment\", {\r\n        get: function () {\r\n            return this._layoutPart.properties.textAlignment;\r\n        },\r\n        set: function (value) {\r\n            this._layoutPart.properties.textAlignment = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ClientSidePage.prototype, \"showTopicHeader\", {\r\n        get: function () {\r\n            return this._layoutPart.properties.showTopicHeader;\r\n        },\r\n        set: function (value) {\r\n            this._layoutPart.properties.showTopicHeader = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ClientSidePage.prototype, \"showPublishDate\", {\r\n        get: function () {\r\n            return this._layoutPart.properties.showPublishDate;\r\n        },\r\n        set: function (value) {\r\n            this._layoutPart.properties.showPublishDate = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Add a section to this page\r\n     */\r\n    ClientSidePage.prototype.addSection = function () {\r\n        var section = new CanvasSection(this, getNextOrder(this.sections));\r\n        this.sections.push(section);\r\n        return section;\r\n    };\r\n    ClientSidePage.prototype.fromJSON = function (pageData) {\r\n        this.json = pageData;\r\n        var canvasControls = JSON.parse(pageData.CanvasContent1);\r\n        var layouts = JSON.parse(pageData.LayoutWebpartsContent);\r\n        if (layouts && layouts.length > 0) {\r\n            this._layoutPart = layouts[0];\r\n        }\r\n        this.setControls(canvasControls);\r\n        return this;\r\n    };\r\n    /**\r\n     * Loads this page's content from the server\r\n     */\r\n    ClientSidePage.prototype.load = function () {\r\n        var _this = this;\r\n        // load item id, then load page data from new pages api\r\n        return this.getItem(\"Id\", \"CommentsDisabled\").then(function (item) {\r\n            return (new SharePointQueryable(_this, \"_api/sitepages/pages(\" + item.Id + \")\")).get().then(function (pageData) {\r\n                _this.commentsDisabled = item.CommentsDisabled;\r\n                return _this.fromJSON(pageData);\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Persists the content changes (sections, columns, and controls) [does not work with batching]\r\n     *\r\n     * @param publish If true the page is published, if false the changes are persisted to SharePoint but not published\r\n     */\r\n    ClientSidePage.prototype.save = function (publish) {\r\n        var _this = this;\r\n        if (publish === void 0) { publish = true; }\r\n        if (this.json.Id === null) {\r\n            throw Error(\"The id for this page is null. If you want to create a new page, please use ClientSidePage.Create\");\r\n        }\r\n        // we will chain our work on this promise\r\n        var promise = Promise.resolve({});\r\n        if (this._bannerImageDirty) {\r\n            // we have to do these gymnastics to set the banner image url\r\n            promise = promise.then(function (_) { return new Promise(function (resolve, reject) {\r\n                var origImgUrl = _this.json.BannerImageUrl;\r\n                if (isUrlAbsolute(origImgUrl)) {\r\n                    // do our best to make this a server relative url by removing the x.sharepoint.com part\r\n                    origImgUrl = origImgUrl.replace(/^https?:\\/\\/[a-z0-9\\.]*?\\.[a-z]{2,3}\\//i, \"/\");\r\n                }\r\n                var site = new Site(extractWebUrl(_this.toUrl()));\r\n                var web = new Web(extractWebUrl(_this.toUrl()));\r\n                var imgFile = web.getFileByServerRelativePath(origImgUrl);\r\n                var siteId = \"\";\r\n                var webId = \"\";\r\n                var imgId = \"\";\r\n                var listId = \"\";\r\n                var webUrl = \"\";\r\n                Promise.all([\r\n                    site.select(\"Id\", \"Url\").get().then(function (r) { return siteId = r.Id; }),\r\n                    web.select(\"Id\", \"Url\").get().then(function (r) { webId = r.Id; webUrl = r.Url; }),\r\n                    imgFile.listItemAllFields.select(\"UniqueId\", \"ParentList/Id\").expand(\"ParentList\").get().then(function (r) { imgId = r.UniqueId; listId = r.ParentList.Id; }),\r\n                ]).then(function () {\r\n                    var f = new SharePointQueryable(webUrl, \"_layouts/15/getpreview.ashx\");\r\n                    f.query.set(\"guidSite\", \"\" + siteId);\r\n                    f.query.set(\"guidWeb\", \"\" + webId);\r\n                    f.query.set(\"guidFile\", \"\" + imgId);\r\n                    _this.bannerImageUrl = f.toUrlAndQuery();\r\n                    if (!objectDefinedNotNull(_this._layoutPart.serverProcessedContent)) {\r\n                        _this._layoutPart.serverProcessedContent = {};\r\n                    }\r\n                    _this._layoutPart.serverProcessedContent.imageSources = { imageSource: origImgUrl };\r\n                    if (!objectDefinedNotNull(_this._layoutPart.serverProcessedContent.customMetadata)) {\r\n                        _this._layoutPart.serverProcessedContent.customMetadata = {};\r\n                    }\r\n                    _this._layoutPart.serverProcessedContent.customMetadata.imageSource = {\r\n                        listId: listId,\r\n                        siteId: siteId,\r\n                        uniqueId: imgId,\r\n                        webId: webId,\r\n                    };\r\n                    _this._layoutPart.properties.webId = webId;\r\n                    _this._layoutPart.properties.siteId = siteId;\r\n                    _this._layoutPart.properties.listId = listId;\r\n                    _this._layoutPart.properties.uniqueId = imgId;\r\n                    resolve();\r\n                }).catch(reject);\r\n            }); });\r\n        }\r\n        // we need to update our authors if they have changed\r\n        // if (this._layoutPart.properties.authors === null && this._layoutPart.properties.authorByline.length > 0) {\r\n        //     promise = promise.then(_ => new Promise(resolve => {\r\n        //         const collector: any[] = [];\r\n        //         const userResolver = ClientSidePage.getPoster(\"/_api/SP.UI.ApplicationPages.ClientPeoplePickerWebServiceInterface.ClientPeoplePickerResolveUser\");\r\n        //         this._layoutPart.properties.authorByline.forEach(async author => {\r\n        //             const userData = await userResolver.postCore({\r\n        //                 body: jsS({\r\n        //                     queryParams: {\r\n        //                         AllowEmailAddresses: false,\r\n        //                         MaximumEntitySuggestions: 1,\r\n        //                         PrincipalSource: 15,\r\n        //                         PrincipalType: 1,\r\n        //                         QueryString: author,\r\n        //                         SharePointGroupID: 0,\r\n        //                     },\r\n        //                 }),\r\n        //             });\r\n        //             collector.push({\r\n        //                 email: userData.EntityData.Email,\r\n        //                 id: userData.Key,\r\n        //                 name: userData.DisplayName,\r\n        //                 role: \"\",\r\n        //                 upn: userData.EntityData.Email,\r\n        //             });\r\n        //         });\r\n        //         this._layoutPart.properties.authors = collector;\r\n        //         resolve();\r\n        //     }));\r\n        // }\r\n        // we try and check out the page for the user\r\n        if (!this.json.IsPageCheckedOutToCurrentUser) {\r\n            promise = promise.then(function (_) { return (ClientSidePage.initFrom(_this, \"_api/sitepages/pages(\" + _this.json.Id + \")/checkoutpage\")).postCore(); });\r\n        }\r\n        promise = promise.then(function (_) {\r\n            var saveBody = Object.assign(metadata(\"SP.Publishing.SitePage\"), {\r\n                AuthorByline: _this.json.AuthorByline || [],\r\n                BannerImageUrl: _this.bannerImageUrl,\r\n                CanvasContent1: _this.getCanvasContent1(),\r\n                LayoutWebpartsContent: _this.getLayoutWebpartsContent(),\r\n                Title: _this.title,\r\n                TopicHeader: _this.topicHeader,\r\n            });\r\n            var updater = ClientSidePage.initFrom(_this, \"_api/sitepages/pages(\" + _this.json.Id + \")/savepage\");\r\n            updater.configure({\r\n                headers: {\r\n                    \"if-match\": \"*\",\r\n                },\r\n            });\r\n            return updater.postCore({ body: jsS(saveBody) });\r\n        });\r\n        if (publish) {\r\n            promise = promise.then(function (_) { return (ClientSidePage.initFrom(_this, \"_api/sitepages/pages(\" + _this.json.Id + \")/publish\")).postCore(); }).then(function (r) {\r\n                if (r) {\r\n                    _this.json.IsPageCheckedOutToCurrentUser = false;\r\n                }\r\n            });\r\n        }\r\n        promise = promise.then(function (_) {\r\n            // these are post-save actions\r\n            _this._bannerImageDirty = false;\r\n        });\r\n        return promise;\r\n    };\r\n    ClientSidePage.prototype.discardPageCheckout = function () {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var d;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (this.json.Id === null) {\r\n                            throw Error(\"The id for this page is null. If you want to create a new page, please use ClientSidePage.Create\");\r\n                        }\r\n                        return [4 /*yield*/, ClientSidePage.initFrom(this, \"_api/sitepages/pages(\" + this.json.Id + \")/discardPage\").postCore({\r\n                                body: jsS(metadata(\"SP.Publishing.SitePage\")),\r\n                            })];\r\n                    case 1:\r\n                        d = _a.sent();\r\n                        this.fromJSON(d);\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    ClientSidePage.prototype.promoteToNews = function () {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            return tslib_1.__generator(this, function (_a) {\r\n                return [2 /*return*/, this.promoteNewsImpl(\"promoteToNews\")];\r\n            });\r\n        });\r\n    };\r\n    // API is currently broken on server side\r\n    // public async demoteFromNews(): Promise<boolean> {\r\n    //     return this.promoteNewsImpl(\"demoteFromNews\");\r\n    // }\r\n    /**\r\n     * Enables comments on this page\r\n     */\r\n    ClientSidePage.prototype.enableComments = function () {\r\n        var _this = this;\r\n        return this.setCommentsOn(true).then(function (r) {\r\n            _this.commentsDisabled = false;\r\n            return r;\r\n        });\r\n    };\r\n    /**\r\n     * Disables comments on this page\r\n     */\r\n    ClientSidePage.prototype.disableComments = function () {\r\n        var _this = this;\r\n        return this.setCommentsOn(false).then(function (r) {\r\n            _this.commentsDisabled = true;\r\n            return r;\r\n        });\r\n    };\r\n    /**\r\n     * Finds a control by the specified instance id\r\n     *\r\n     * @param id Instance id of the control to find\r\n     */\r\n    ClientSidePage.prototype.findControlById = function (id) {\r\n        return this.findControl(function (c) { return c.id === id; });\r\n    };\r\n    /**\r\n     * Finds a control within this page's control tree using the supplied predicate\r\n     *\r\n     * @param predicate Takes a control and returns true or false, if true that control is returned by findControl\r\n     */\r\n    ClientSidePage.prototype.findControl = function (predicate) {\r\n        // check all sections\r\n        for (var i = 0; i < this.sections.length; i++) {\r\n            // check all columns\r\n            for (var j = 0; j < this.sections[i].columns.length; j++) {\r\n                // check all controls\r\n                for (var k = 0; k < this.sections[i].columns[j].controls.length; k++) {\r\n                    // check to see if the predicate likes this control\r\n                    if (predicate(this.sections[i].columns[j].controls[k])) {\r\n                        return this.sections[i].columns[j].controls[k];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        // we found nothing so give nothing back\r\n        return null;\r\n    };\r\n    /**\r\n     * Like the modern site page\r\n     */\r\n    ClientSidePage.prototype.like = function () {\r\n        return this.getItem().then(function (i) {\r\n            return i.like();\r\n        });\r\n    };\r\n    /**\r\n     * Unlike the modern site page\r\n     */\r\n    ClientSidePage.prototype.unlike = function () {\r\n        return this.getItem().then(function (i) {\r\n            return i.unlike();\r\n        });\r\n    };\r\n    /**\r\n     * Get the liked by information for a modern site page\r\n     */\r\n    ClientSidePage.prototype.getLikedByInformation = function () {\r\n        return this.getItem().then(function (i) {\r\n            return i.getLikedByInformation();\r\n        });\r\n    };\r\n    /**\r\n     * Creates a copy of this page\r\n     *\r\n     * @param web The web where we will create the copy\r\n     * @param pageName The file name of the new page\r\n     * @param title The title of the new page\r\n     * @param publish If true the page will be published\r\n     */\r\n    ClientSidePage.prototype.copyPage = function (web, pageName, title, publish) {\r\n        if (publish === void 0) { publish = true; }\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var page;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, ClientSidePage.create(web, pageName, title, this.pageLayout)];\r\n                    case 1:\r\n                        page = _a.sent();\r\n                        page.setControls(this.getControls());\r\n                        return [4 /*yield*/, page.save(publish)];\r\n                    case 2:\r\n                        _a.sent();\r\n                        return [2 /*return*/, page];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Sets the modern page banner image\r\n     *\r\n     * @param url Url of the image to display\r\n     * @param altText Alt text to describe the image\r\n     * @param bannerProps Additional properties to control display of the banner\r\n     */\r\n    ClientSidePage.prototype.setBannerImage = function (url, props) {\r\n        this.bannerImageUrl = url;\r\n        this.bannerImageSourceType = 2; // this seems to always be true, so default?\r\n        if (objectDefinedNotNull(props)) {\r\n            if (hOP(props, \"translateX\")) {\r\n                this._layoutPart.properties.translateX = props.translateX;\r\n            }\r\n            if (hOP(props, \"translateY\")) {\r\n                this._layoutPart.properties.translateY = props.translateY;\r\n            }\r\n            if (hOP(props, \"imageSourceType\")) {\r\n                this.bannerImageSourceType = props.imageSourceType;\r\n            }\r\n            if (hOP(props, \"altText\")) {\r\n                this._layoutPart.properties.altText = props.altText;\r\n            }\r\n        }\r\n    };\r\n    ClientSidePage.prototype.getCanvasContent1 = function () {\r\n        return JSON.stringify(this.getControls());\r\n    };\r\n    ClientSidePage.prototype.getLayoutWebpartsContent = function () {\r\n        if (this._layoutPart) {\r\n            return JSON.stringify([this._layoutPart]);\r\n        }\r\n        else {\r\n            return JSON.stringify(null);\r\n        }\r\n    };\r\n    ClientSidePage.prototype.setControls = function (controls) {\r\n        if (controls && controls.length) {\r\n            for (var i = 0; i < controls.length; i++) {\r\n                // if no control type is present this is a column which we give type 0 to let us process it\r\n                var controlType = hOP(controls[i], \"controlType\") ? controls[i].controlType : 0;\r\n                switch (controlType) {\r\n                    case 0:\r\n                        // empty canvas column or page settings\r\n                        if (hOP(controls[i], \"pageSettingsSlice\")) {\r\n                            this._pageSettings = controls[i];\r\n                        }\r\n                        else {\r\n                            // we have an empty column\r\n                            this.mergeColumnToTree(new CanvasColumn(controls[i]));\r\n                        }\r\n                        break;\r\n                    case 3:\r\n                        var part = new ClientSideWebpart(controls[i]);\r\n                        this.mergePartToTree(part, part.data.position);\r\n                        break;\r\n                    case 4:\r\n                        var textData = controls[i];\r\n                        var text = new ClientSideText(textData.innerHTML, textData);\r\n                        this.mergePartToTree(text, text.data.position);\r\n                        break;\r\n                }\r\n            }\r\n            reindex(this.sections);\r\n        }\r\n    };\r\n    ClientSidePage.prototype.getControls = function () {\r\n        var _this = this;\r\n        // reindex things\r\n        reindex(this.sections);\r\n        // rollup the control changes\r\n        var canvasData = [];\r\n        this.sections.forEach(function (section) {\r\n            section.columns.forEach(function (column) {\r\n                if (column.controls.length < 1) {\r\n                    // empty column\r\n                    canvasData.push({\r\n                        displayMode: column.data.displayMode,\r\n                        emphasis: _this.getEmphasisObj(section.emphasis),\r\n                        position: column.data.position,\r\n                    });\r\n                }\r\n                else {\r\n                    column.controls.forEach(function (control) {\r\n                        control.data.emphasis = _this.getEmphasisObj(section.emphasis);\r\n                        canvasData.push(control.data);\r\n                    });\r\n                }\r\n            });\r\n        });\r\n        canvasData.push(this._pageSettings);\r\n        return canvasData;\r\n    };\r\n    ClientSidePage.prototype.getEmphasisObj = function (value) {\r\n        if (value < 1 || value > 3) {\r\n            return {};\r\n        }\r\n        return { zoneEmphasis: value };\r\n    };\r\n    /**\r\n     * Sets the comments flag for a page\r\n     *\r\n     * @param on If true comments are enabled, false they are disabled\r\n     */\r\n    ClientSidePage.prototype.setCommentsOn = function (on) {\r\n        return this.getItem().then(function (i) {\r\n            var updater = new Item(i, \"SetCommentsDisabled(\" + !on + \")\");\r\n            return updater.update({});\r\n        });\r\n    };\r\n    ClientSidePage.prototype.promoteNewsImpl = function (method) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var d;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (this.json.Id === null) {\r\n                            throw Error(\"The id for this page is null. If you want to create a new page, please use ClientSidePage.Create\");\r\n                        }\r\n                        return [4 /*yield*/, ClientSidePage.initFrom(this, \"_api/sitepages/pages(\" + this.json.Id + \")/\" + method).postCore({\r\n                                body: jsS(metadata(\"SP.Publishing.SitePage\")),\r\n                            })];\r\n                    case 1:\r\n                        d = _a.sent();\r\n                        return [2 /*return*/, d];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Merges the control into the tree of sections and columns for this page\r\n     *\r\n     * @param control The control to merge\r\n     */\r\n    ClientSidePage.prototype.mergePartToTree = function (control, positionData) {\r\n        var section = null;\r\n        var column = null;\r\n        var sectionFactor = 12;\r\n        var sectionIndex = 0;\r\n        var zoneIndex = 0;\r\n        // handle case where we don't have position data (shouldn't happen?)\r\n        if (positionData) {\r\n            if (hOP(positionData, \"zoneIndex\")) {\r\n                zoneIndex = positionData.zoneIndex;\r\n            }\r\n            if (hOP(positionData, \"sectionIndex\")) {\r\n                sectionIndex = positionData.sectionIndex;\r\n            }\r\n            if (hOP(positionData, \"sectionFactor\")) {\r\n                sectionFactor = positionData.sectionFactor;\r\n            }\r\n        }\r\n        var sections = this.sections.filter(function (s) { return s.order === zoneIndex; });\r\n        if (sections.length < 1) {\r\n            section = new CanvasSection(this, zoneIndex);\r\n            this.sections.push(section);\r\n        }\r\n        else {\r\n            section = sections[0];\r\n        }\r\n        section.emphasis = control.data.emphasis && control.data.emphasis.zoneEmphasis ? control.data.emphasis.zoneEmphasis : 0;\r\n        var columns = section.columns.filter(function (c) { return c.order === sectionIndex; });\r\n        if (columns.length < 1) {\r\n            column = section.addColumn(sectionFactor);\r\n        }\r\n        else {\r\n            column = columns[0];\r\n        }\r\n        control.column = column;\r\n        column.addControl(control);\r\n    };\r\n    /**\r\n     * Merges the supplied column into the tree\r\n     *\r\n     * @param column Column to merge\r\n     * @param position The position data for the column\r\n     */\r\n    ClientSidePage.prototype.mergeColumnToTree = function (column) {\r\n        var order = hOP(column.data, \"position\") && hOP(column.data.position, \"zoneIndex\") ? column.data.position.zoneIndex : 0;\r\n        var section = null;\r\n        var sections = this.sections.filter(function (s) { return s.order === order; });\r\n        if (sections.length < 1) {\r\n            section = new CanvasSection(this, order);\r\n            section.emphasis = column.data.emphasis.zoneEmphasis || 0;\r\n            this.sections.push(section);\r\n        }\r\n        else {\r\n            section = sections[0];\r\n        }\r\n        column.section = section;\r\n        section.columns.push(column);\r\n    };\r\n    ClientSidePage.prototype.getItem = function () {\r\n        var _this = this;\r\n        var selects = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            selects[_i] = arguments[_i];\r\n        }\r\n        var initer = ClientSidePage.initFrom(this, \"/_api/lists/EnsureClientRenderedSitePagesLibrary\").select(\"EnableModeration\", \"EnableMinorVersions\", \"Id\");\r\n        return initer.postCore().then(function (listData) {\r\n            var item = (new List(listData[\"odata.id\"])).configureFrom(_this).items.getById(_this.json.Id);\r\n            return item.select.apply(item, selects).get().then(function (d) {\r\n                return extend((new Item(odataUrlFrom(d))).configureFrom(_this), d);\r\n            });\r\n        });\r\n    };\r\n    return ClientSidePage;\r\n}(SharePointQueryable));\r\nexport { ClientSidePage };\r\nvar CanvasSection = /** @class */ (function () {\r\n    function CanvasSection(page, order, columns, _emphasis) {\r\n        if (columns === void 0) { columns = []; }\r\n        if (_emphasis === void 0) { _emphasis = 0; }\r\n        this.page = page;\r\n        this.columns = columns;\r\n        this._emphasis = _emphasis;\r\n        this._memId = getGUID();\r\n        this._order = order;\r\n    }\r\n    Object.defineProperty(CanvasSection.prototype, \"order\", {\r\n        get: function () {\r\n            return this._order;\r\n        },\r\n        set: function (value) {\r\n            this._order = value;\r\n            for (var i = 0; i < this.columns.length; i++) {\r\n                this.columns[i].data.position.zoneIndex = value;\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CanvasSection.prototype, \"defaultColumn\", {\r\n        /**\r\n         * Default column (this.columns[0]) for this section\r\n         */\r\n        get: function () {\r\n            if (this.columns.length < 1) {\r\n                this.addColumn(12);\r\n            }\r\n            return this.columns[0];\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Adds a new column to this section\r\n     */\r\n    CanvasSection.prototype.addColumn = function (factor) {\r\n        var column = new CanvasColumn();\r\n        column.section = this;\r\n        column.data.position.zoneIndex = this.order;\r\n        column.data.position.sectionFactor = factor;\r\n        column.order = getNextOrder(this.columns);\r\n        this.columns.push(column);\r\n        return column;\r\n    };\r\n    /**\r\n     * Adds a control to the default column for this section\r\n     *\r\n     * @param control Control to add to the default column\r\n     */\r\n    CanvasSection.prototype.addControl = function (control) {\r\n        this.defaultColumn.addControl(control);\r\n        return this;\r\n    };\r\n    Object.defineProperty(CanvasSection.prototype, \"emphasis\", {\r\n        get: function () {\r\n            return this._emphasis;\r\n        },\r\n        set: function (value) {\r\n            this._emphasis = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Removes this section and all contained columns and controls from the collection\r\n     */\r\n    CanvasSection.prototype.remove = function () {\r\n        var _this = this;\r\n        this.page.sections = this.page.sections.filter(function (section) { return section._memId !== _this._memId; });\r\n        reindex(this.page.sections);\r\n    };\r\n    return CanvasSection;\r\n}());\r\nexport { CanvasSection };\r\nvar CanvasColumn = /** @class */ (function () {\r\n    function CanvasColumn(json, controls) {\r\n        if (json === void 0) { json = JSON.parse(JSON.stringify(CanvasColumn.Default)); }\r\n        if (controls === void 0) { controls = []; }\r\n        this.json = json;\r\n        this.controls = controls;\r\n        this._section = null;\r\n        this._memId = getGUID();\r\n    }\r\n    Object.defineProperty(CanvasColumn.prototype, \"data\", {\r\n        get: function () {\r\n            return this.json;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CanvasColumn.prototype, \"section\", {\r\n        get: function () {\r\n            return this._section;\r\n        },\r\n        set: function (section) {\r\n            this._section = section;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CanvasColumn.prototype, \"order\", {\r\n        get: function () {\r\n            return this.data.position.sectionIndex;\r\n        },\r\n        set: function (value) {\r\n            this.data.position.sectionIndex = value;\r\n            for (var i = 0; i < this.controls.length; i++) {\r\n                this.controls[i].data.position.zoneIndex = this.data.position.zoneIndex;\r\n                this.controls[i].data.position.sectionIndex = value;\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CanvasColumn.prototype, \"factor\", {\r\n        get: function () {\r\n            return this.data.position.sectionFactor;\r\n        },\r\n        set: function (value) {\r\n            this.data.position.sectionFactor = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    CanvasColumn.prototype.addControl = function (control) {\r\n        control.column = this;\r\n        this.controls.push(control);\r\n        return this;\r\n    };\r\n    CanvasColumn.prototype.getControl = function (index) {\r\n        return this.controls[index];\r\n    };\r\n    CanvasColumn.prototype.remove = function () {\r\n        var _this = this;\r\n        this.section.columns = this.section.columns.filter(function (column) { return column._memId !== _this._memId; });\r\n        reindex(this.section.columns);\r\n    };\r\n    CanvasColumn.Default = {\r\n        controlType: 0,\r\n        displayMode: 2,\r\n        emphasis: {},\r\n        position: {\r\n            layoutIndex: 1,\r\n            sectionFactor: 12,\r\n            sectionIndex: 1,\r\n            zoneIndex: 1,\r\n        },\r\n    };\r\n    return CanvasColumn;\r\n}());\r\nexport { CanvasColumn };\r\nvar ColumnControl = /** @class */ (function () {\r\n    function ColumnControl(json) {\r\n        this.json = json;\r\n    }\r\n    Object.defineProperty(ColumnControl.prototype, \"id\", {\r\n        get: function () {\r\n            return this.json.id;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ColumnControl.prototype, \"data\", {\r\n        get: function () {\r\n            return this.json;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ColumnControl.prototype, \"column\", {\r\n        get: function () {\r\n            return this._column;\r\n        },\r\n        set: function (value) {\r\n            this._column = value;\r\n            this.onColumnChange(this._column);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ColumnControl.prototype.remove = function () {\r\n        var _this = this;\r\n        this.column.controls = this.column.controls.filter(function (control) { return control.id !== _this.id; });\r\n        reindex(this.column.controls);\r\n    };\r\n    ColumnControl.prototype.setData = function (data) {\r\n        this.json = data;\r\n    };\r\n    return ColumnControl;\r\n}());\r\nexport { ColumnControl };\r\nvar ClientSideText = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ClientSideText, _super);\r\n    function ClientSideText(text, json) {\r\n        if (json === void 0) { json = JSON.parse(JSON.stringify(ClientSideText.Default)); }\r\n        var _this = this;\r\n        if (stringIsNullOrEmpty(json.id)) {\r\n            json.id = getGUID();\r\n            json.anchorComponentId = json.id;\r\n        }\r\n        _this = _super.call(this, json) || this;\r\n        _this.text = text;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(ClientSideText.prototype, \"text\", {\r\n        get: function () {\r\n            return this.data.innerHTML;\r\n        },\r\n        set: function (value) {\r\n            if (!value.startsWith(\"<p>\")) {\r\n                value = \"<p>\" + value + \"</p>\";\r\n            }\r\n            this.data.innerHTML = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ClientSideText.prototype, \"order\", {\r\n        get: function () {\r\n            return this.data.position.controlIndex;\r\n        },\r\n        set: function (value) {\r\n            this.data.position.controlIndex = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ClientSideText.prototype.onColumnChange = function (col) {\r\n        this.data.position.sectionFactor = col.factor;\r\n        this.data.position.controlIndex = getNextOrder(col.controls);\r\n        this.data.position.zoneIndex = col.data.position.zoneIndex;\r\n        this.data.position.sectionIndex = col.order;\r\n    };\r\n    ClientSideText.Default = {\r\n        addedFromPersistedData: false,\r\n        anchorComponentId: \"\",\r\n        controlType: 4,\r\n        displayMode: 2,\r\n        editorType: \"CKEditor\",\r\n        emphasis: {},\r\n        id: \"\",\r\n        innerHTML: \"\",\r\n        position: {\r\n            controlIndex: 1,\r\n            layoutIndex: 1,\r\n            sectionFactor: 12,\r\n            sectionIndex: 1,\r\n            zoneIndex: 1,\r\n        },\r\n    };\r\n    return ClientSideText;\r\n}(ColumnControl));\r\nexport { ClientSideText };\r\nvar ClientSideWebpart = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ClientSideWebpart, _super);\r\n    function ClientSideWebpart(json) {\r\n        if (json === void 0) { json = JSON.parse(JSON.stringify(ClientSideWebpart.Default)); }\r\n        return _super.call(this, json) || this;\r\n    }\r\n    ClientSideWebpart.fromComponentDef = function (definition) {\r\n        var part = new ClientSideWebpart();\r\n        part.import(definition);\r\n        return part;\r\n    };\r\n    Object.defineProperty(ClientSideWebpart.prototype, \"title\", {\r\n        get: function () {\r\n            return this.data.webPartData.title;\r\n        },\r\n        set: function (value) {\r\n            this.data.webPartData.title = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ClientSideWebpart.prototype, \"description\", {\r\n        get: function () {\r\n            return this.data.webPartData.description;\r\n        },\r\n        set: function (value) {\r\n            this.data.webPartData.description = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ClientSideWebpart.prototype, \"order\", {\r\n        get: function () {\r\n            return this.data.position.controlIndex;\r\n        },\r\n        set: function (value) {\r\n            this.data.position.controlIndex = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ClientSideWebpart.prototype, \"height\", {\r\n        get: function () {\r\n            return this.data.reservedHeight;\r\n        },\r\n        set: function (value) {\r\n            this.data.reservedHeight = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ClientSideWebpart.prototype, \"width\", {\r\n        get: function () {\r\n            return this.data.reservedWidth;\r\n        },\r\n        set: function (value) {\r\n            this.data.reservedWidth = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ClientSideWebpart.prototype, \"dataVersion\", {\r\n        get: function () {\r\n            return this.data.webPartData.dataVersion;\r\n        },\r\n        set: function (value) {\r\n            this.data.webPartData.dataVersion = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ClientSideWebpart.prototype.setProperties = function (properties) {\r\n        this.data.webPartData.properties = extend(this.data.webPartData.properties, properties);\r\n        return this;\r\n    };\r\n    ClientSideWebpart.prototype.getProperties = function () {\r\n        return this.data.webPartData.properties;\r\n    };\r\n    ClientSideWebpart.prototype.onColumnChange = function (col) {\r\n        this.data.position = {\r\n            controlIndex: getNextOrder(col.controls),\r\n            sectionFactor: col.factor,\r\n            sectionIndex: col.data.position.sectionIndex,\r\n            zoneIndex: col.data.position.zoneIndex,\r\n        };\r\n    };\r\n    ClientSideWebpart.prototype.import = function (component) {\r\n        var id = getGUID();\r\n        var componendId = component.Id.replace(/^\\{|\\}$/g, \"\").toLowerCase();\r\n        var manifest = JSON.parse(component.Manifest);\r\n        var preconfiguredEntries = manifest.preconfiguredEntries[0];\r\n        this.setData(Object.assign({}, this.data, {\r\n            id: id,\r\n            webPartData: {\r\n                dataVersion: \"1.0\",\r\n                description: preconfiguredEntries.description.default,\r\n                id: componendId,\r\n                instanceId: id,\r\n                properties: preconfiguredEntries.properties,\r\n                title: preconfiguredEntries.title.default,\r\n            },\r\n            webPartId: componendId,\r\n        }));\r\n    };\r\n    ClientSideWebpart.Default = {\r\n        addedFromPersistedData: false,\r\n        controlType: 3,\r\n        displayMode: 2,\r\n        emphasis: {},\r\n        id: null,\r\n        position: {\r\n            controlIndex: 1,\r\n            sectionFactor: 12,\r\n            sectionIndex: 1,\r\n            zoneIndex: 1,\r\n        },\r\n        reservedHeight: 500,\r\n        reservedWidth: 500,\r\n        webPartData: null,\r\n        webPartId: null,\r\n    };\r\n    return ClientSideWebpart;\r\n}(ColumnControl));\r\nexport { ClientSideWebpart };\r\n//# sourceMappingURL=clientsidepages.js.map","import * as tslib_1 from \"tslib\";\r\nimport { ODataBatch } from \"@pnp/odata\";\r\nimport { getGUID, isUrlAbsolute, combine, mergeHeaders, hOP } from \"@pnp/common\";\r\nimport { Logger } from \"@pnp/logging\";\r\nimport { SPHttpClient } from \"./net/sphttpclient\";\r\nimport { SPRuntimeConfig } from \"./config/splibconfig\";\r\nimport { toAbsoluteUrl } from \"./utils/toabsoluteurl\";\r\n/**\r\n * Manages a batch of OData operations\r\n */\r\nvar SPBatch = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SPBatch, _super);\r\n    function SPBatch(baseUrl) {\r\n        var _this = _super.call(this) || this;\r\n        _this.baseUrl = baseUrl;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Parses the response from a batch request into an array of Response instances\r\n     *\r\n     * @param body Text body of the response from the batch request\r\n     */\r\n    SPBatch.ParseResponse = function (body) {\r\n        return new Promise(function (resolve, reject) {\r\n            var responses = [];\r\n            var header = \"--batchresponse_\";\r\n            // Ex. \"HTTP/1.1 500 Internal Server Error\"\r\n            var statusRegExp = new RegExp(\"^HTTP/[0-9.]+ +([0-9]+) +(.*)\", \"i\");\r\n            var lines = body.split(\"\\n\");\r\n            var state = \"batch\";\r\n            var status;\r\n            var statusText;\r\n            for (var i = 0; i < lines.length; ++i) {\r\n                var line = lines[i];\r\n                switch (state) {\r\n                    case \"batch\":\r\n                        if (line.substr(0, header.length) === header) {\r\n                            state = \"batchHeaders\";\r\n                        }\r\n                        else {\r\n                            if (line.trim() !== \"\") {\r\n                                throw Error(\"Invalid response, line \" + i);\r\n                            }\r\n                        }\r\n                        break;\r\n                    case \"batchHeaders\":\r\n                        if (line.trim() === \"\") {\r\n                            state = \"status\";\r\n                        }\r\n                        break;\r\n                    case \"status\":\r\n                        var parts = statusRegExp.exec(line);\r\n                        if (parts.length !== 3) {\r\n                            throw Error(\"Invalid status, line \" + i);\r\n                        }\r\n                        status = parseInt(parts[1], 10);\r\n                        statusText = parts[2];\r\n                        state = \"statusHeaders\";\r\n                        break;\r\n                    case \"statusHeaders\":\r\n                        if (line.trim() === \"\") {\r\n                            state = \"body\";\r\n                        }\r\n                        break;\r\n                    case \"body\":\r\n                        responses.push((status === 204) ? new Response() : new Response(line, { status: status, statusText: statusText }));\r\n                        state = \"batch\";\r\n                        break;\r\n                }\r\n            }\r\n            if (state !== \"status\") {\r\n                reject(Error(\"Unexpected end of input\"));\r\n            }\r\n            resolve(responses);\r\n        });\r\n    };\r\n    SPBatch.prototype.executeImpl = function () {\r\n        var _this = this;\r\n        Logger.write(\"[\" + this.batchId + \"] (\" + (new Date()).getTime() + \") Executing batch with \" + this.requests.length + \" requests.\", 1 /* Info */);\r\n        // if we don't have any requests, don't bother sending anything\r\n        // this could be due to caching further upstream, or just an empty batch\r\n        if (this.requests.length < 1) {\r\n            Logger.write(\"Resolving empty batch.\", 1 /* Info */);\r\n            return Promise.resolve();\r\n        }\r\n        // creating the client here allows the url to be populated for nodejs client as well as potentially\r\n        // any other hacks needed for other types of clients. Essentially allows the absoluteRequestUrl\r\n        // below to be correct\r\n        var client = new SPHttpClient();\r\n        // due to timing we need to get the absolute url here so we can use it for all the individual requests\r\n        // and for sending the entire batch\r\n        return toAbsoluteUrl(this.baseUrl).then(function (absoluteRequestUrl) {\r\n            // build all the requests, send them, pipe results in order to parsers\r\n            var batchBody = [];\r\n            var currentChangeSetId = \"\";\r\n            for (var i = 0; i < _this.requests.length; i++) {\r\n                var reqInfo = _this.requests[i];\r\n                if (reqInfo.method === \"GET\") {\r\n                    if (currentChangeSetId.length > 0) {\r\n                        // end an existing change set\r\n                        batchBody.push(\"--changeset_\" + currentChangeSetId + \"--\\n\\n\");\r\n                        currentChangeSetId = \"\";\r\n                    }\r\n                    batchBody.push(\"--batch_\" + _this.batchId + \"\\n\");\r\n                }\r\n                else {\r\n                    if (currentChangeSetId.length < 1) {\r\n                        // start new change set\r\n                        currentChangeSetId = getGUID();\r\n                        batchBody.push(\"--batch_\" + _this.batchId + \"\\n\");\r\n                        batchBody.push(\"Content-Type: multipart/mixed; boundary=\\\"changeset_\" + currentChangeSetId + \"\\\"\\n\\n\");\r\n                    }\r\n                    batchBody.push(\"--changeset_\" + currentChangeSetId + \"\\n\");\r\n                }\r\n                // common batch part prefix\r\n                batchBody.push(\"Content-Type: application/http\\n\");\r\n                batchBody.push(\"Content-Transfer-Encoding: binary\\n\\n\");\r\n                var headers = new Headers();\r\n                // this is the url of the individual request within the batch\r\n                var url = isUrlAbsolute(reqInfo.url) ? reqInfo.url : combine(absoluteRequestUrl, reqInfo.url);\r\n                Logger.write(\"[\" + _this.batchId + \"] (\" + (new Date()).getTime() + \") Adding request \" + reqInfo.method + \" \" + url + \" to batch.\", 0 /* Verbose */);\r\n                if (reqInfo.method !== \"GET\") {\r\n                    var method = reqInfo.method;\r\n                    var castHeaders = reqInfo.options.headers;\r\n                    if (hOP(reqInfo, \"options\") && hOP(reqInfo.options, \"headers\") && castHeaders[\"X-HTTP-Method\"] !== undefined) {\r\n                        method = castHeaders[\"X-HTTP-Method\"];\r\n                        delete castHeaders[\"X-HTTP-Method\"];\r\n                    }\r\n                    batchBody.push(method + \" \" + url + \" HTTP/1.1\\n\");\r\n                    headers.set(\"Content-Type\", \"application/json;odata=verbose;charset=utf-8\");\r\n                }\r\n                else {\r\n                    batchBody.push(reqInfo.method + \" \" + url + \" HTTP/1.1\\n\");\r\n                }\r\n                // merge global config headers\r\n                mergeHeaders(headers, SPRuntimeConfig.headers);\r\n                // merge per-request headers\r\n                if (reqInfo.options) {\r\n                    mergeHeaders(headers, reqInfo.options.headers);\r\n                }\r\n                // lastly we apply any default headers we need that may not exist\r\n                if (!headers.has(\"Accept\")) {\r\n                    headers.append(\"Accept\", \"application/json\");\r\n                }\r\n                if (!headers.has(\"Content-Type\")) {\r\n                    headers.append(\"Content-Type\", \"application/json;odata=verbose;charset=utf-8\");\r\n                }\r\n                if (!headers.has(\"X-ClientService-ClientTag\")) {\r\n                    headers.append(\"X-ClientService-ClientTag\", \"PnPCoreJS:@pnp-1.3.4\");\r\n                }\r\n                // write headers into batch body\r\n                headers.forEach(function (value, name) {\r\n                    batchBody.push(name + \": \" + value + \"\\n\");\r\n                });\r\n                batchBody.push(\"\\n\");\r\n                if (reqInfo.options.body) {\r\n                    batchBody.push(reqInfo.options.body + \"\\n\\n\");\r\n                }\r\n            }\r\n            if (currentChangeSetId.length > 0) {\r\n                // Close the changeset\r\n                batchBody.push(\"--changeset_\" + currentChangeSetId + \"--\\n\\n\");\r\n                currentChangeSetId = \"\";\r\n            }\r\n            batchBody.push(\"--batch_\" + _this.batchId + \"--\\n\");\r\n            var batchOptions = {\r\n                \"body\": batchBody.join(\"\"),\r\n                \"headers\": {\r\n                    \"Content-Type\": \"multipart/mixed; boundary=batch_\" + _this.batchId,\r\n                },\r\n                \"method\": \"POST\",\r\n            };\r\n            Logger.write(\"[\" + _this.batchId + \"] (\" + (new Date()).getTime() + \") Sending batch request.\", 1 /* Info */);\r\n            return client.fetch(combine(absoluteRequestUrl, \"/_api/$batch\"), batchOptions)\r\n                .then(function (r) { return r.text(); })\r\n                .then(SPBatch.ParseResponse)\r\n                .then(function (responses) {\r\n                if (responses.length !== _this.requests.length) {\r\n                    throw Error(\"Could not properly parse responses to match requests in batch.\");\r\n                }\r\n                Logger.write(\"[\" + _this.batchId + \"] (\" + (new Date()).getTime() + \") Resolving batched requests.\", 1 /* Info */);\r\n                return responses.reduce(function (chain, response, index) {\r\n                    var request = _this.requests[index];\r\n                    Logger.write(\"[\" + request.id + \"] (\" + (new Date()).getTime() + \") Resolving request in batch \" + _this.batchId + \".\", 1 /* Info */);\r\n                    return chain.then(function (_) { return request.parser.parse(response).then(request.resolve).catch(request.reject); });\r\n                }, Promise.resolve());\r\n            });\r\n        });\r\n    };\r\n    return SPBatch;\r\n}(ODataBatch));\r\nexport { SPBatch };\r\n//# sourceMappingURL=batch.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryableInstance, SharePointQueryableCollection, defaultPath } from \"./sharepointqueryable\";\r\nimport { jsS } from \"@pnp/common\";\r\n/**\r\n * Describes a collection of List objects\r\n *\r\n */\r\nvar Features = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Features, _super);\r\n    function Features() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Features_1 = Features;\r\n    /**\r\n     * Adds a new list to the collection\r\n     *\r\n     * @param id The Id of the feature (GUID)\r\n     * @param force If true the feature activation will be forced\r\n     */\r\n    Features.prototype.add = function (id, force) {\r\n        var _this = this;\r\n        if (force === void 0) { force = false; }\r\n        return this.clone(Features_1, \"add\").postCore({\r\n            body: jsS({\r\n                featdefScope: 0,\r\n                featureId: id,\r\n                force: force,\r\n            }),\r\n        }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                feature: _this.getById(id),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Gets a list from the collection by guid id\r\n     *\r\n     * @param id The Id of the feature (GUID)\r\n     */\r\n    Features.prototype.getById = function (id) {\r\n        var feature = new Feature(this);\r\n        feature.concat(\"('\" + id + \"')\");\r\n        return feature;\r\n    };\r\n    /**\r\n     * Removes (deactivates) a feature from the collection\r\n     *\r\n     * @param id The Id of the feature (GUID)\r\n     * @param force If true the feature deactivation will be forced\r\n     */\r\n    Features.prototype.remove = function (id, force) {\r\n        if (force === void 0) { force = false; }\r\n        return this.clone(Features_1, \"remove\").postCore({\r\n            body: jsS({\r\n                featureId: id,\r\n                force: force,\r\n            }),\r\n        });\r\n    };\r\n    var Features_1;\r\n    Features = Features_1 = tslib_1.__decorate([\r\n        defaultPath(\"features\")\r\n    ], Features);\r\n    return Features;\r\n}(SharePointQueryableCollection));\r\nexport { Features };\r\nvar Feature = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Feature, _super);\r\n    function Feature() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Removes (deactivates) a feature from the collection\r\n     *\r\n     * @param force If true the feature deactivation will be forced\r\n     */\r\n    Feature.prototype.deactivate = function (force) {\r\n        var _this = this;\r\n        if (force === void 0) { force = false; }\r\n        var removeDependency = this.addBatchDependency();\r\n        var idGet = new Feature(this).select(\"DefinitionId\");\r\n        return idGet.get().then(function (feature) {\r\n            var promise = _this.getParent(Features, _this.parentUrl, \"\", _this.batch).remove(feature.DefinitionId, force);\r\n            removeDependency();\r\n            return promise;\r\n        });\r\n    };\r\n    return Feature;\r\n}(SharePointQueryableInstance));\r\nexport { Feature };\r\n//# sourceMappingURL=features.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryable, SharePointQueryableInstance, defaultPath } from \"./sharepointqueryable\";\r\nimport { Web } from \"./webs\";\r\nimport { UserCustomActions } from \"./usercustomactions\";\r\nimport { SPBatch } from \"./batch\";\r\nimport { Features } from \"./features\";\r\nimport { hOP, jsS, extend } from \"@pnp/common\";\r\nimport { SPHttpClient } from \"./net/sphttpclient\";\r\n/**\r\n * Describes a site collection\r\n *\r\n */\r\nvar Site = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Site, _super);\r\n    function Site() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Site_1 = Site;\r\n    Object.defineProperty(Site.prototype, \"rootWeb\", {\r\n        /**\r\n         * Gets the root web of the site collection\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Web(this, \"rootweb\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Site.prototype, \"features\", {\r\n        /**\r\n         * Gets the active features for this site collection\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Features(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Site.prototype, \"userCustomActions\", {\r\n        /**\r\n         * Gets all custom actions for this site collection\r\n         *\r\n         */\r\n        get: function () {\r\n            return new UserCustomActions(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets a Web instance representing the root web of the site collection\r\n     * correctly setup for chaining within the library\r\n     */\r\n    Site.prototype.getRootWeb = function () {\r\n        return this.rootWeb.select(\"Url\").get().then(function (web) { return new Web(web.Url); });\r\n    };\r\n    /**\r\n     * Gets the context information for this site collection\r\n     */\r\n    Site.prototype.getContextInfo = function () {\r\n        var q = new Site_1(this.parentUrl, \"_api/contextinfo\");\r\n        return q.postCore().then(function (data) {\r\n            if (hOP(data, \"GetContextWebInformation\")) {\r\n                var info = data.GetContextWebInformation;\r\n                info.SupportedSchemaVersions = info.SupportedSchemaVersions.results;\r\n                return info;\r\n            }\r\n            else {\r\n                return data;\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Gets the document libraries on a site. Static method. (SharePoint Online only)\r\n     *\r\n     * @param absoluteWebUrl The absolute url of the web whose document libraries should be returned\r\n     */\r\n    Site.prototype.getDocumentLibraries = function (absoluteWebUrl) {\r\n        var q = new SharePointQueryable(\"\", \"_api/sp.web.getdocumentlibraries(@v)\");\r\n        q.query.set(\"@v\", \"'\" + absoluteWebUrl + \"'\");\r\n        return q.get().then(function (data) {\r\n            if (hOP(data, \"GetDocumentLibraries\")) {\r\n                return data.GetDocumentLibraries;\r\n            }\r\n            else {\r\n                return data;\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Gets the site url from a page url\r\n     *\r\n     * @param absolutePageUrl The absolute url of the page\r\n     */\r\n    Site.prototype.getWebUrlFromPageUrl = function (absolutePageUrl) {\r\n        var q = new SharePointQueryable(\"\", \"_api/sp.web.getweburlfrompageurl(@v)\");\r\n        q.query.set(\"@v\", \"'\" + absolutePageUrl + \"'\");\r\n        return q.get().then(function (data) {\r\n            if (hOP(data, \"GetWebUrlFromPageUrl\")) {\r\n                return data.GetWebUrlFromPageUrl;\r\n            }\r\n            else {\r\n                return data;\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Deletes the current site\r\n     *\r\n     */\r\n    Site.prototype.delete = function () {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var site, q;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.clone(Site_1, \"\").select(\"Id\").get()];\r\n                    case 1:\r\n                        site = _a.sent();\r\n                        q = new Site_1(this.parentUrl, \"_api/SPSiteManager/Delete\");\r\n                        return [4 /*yield*/, q.postCore({\r\n                                body: jsS({\r\n                                    siteId: site.Id,\r\n                                }),\r\n                            })];\r\n                    case 2:\r\n                        _a.sent();\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Creates a new batch for requests within the context of this site collection\r\n     *\r\n     */\r\n    Site.prototype.createBatch = function () {\r\n        return new SPBatch(this.parentUrl);\r\n    };\r\n    /**\r\n     * Opens a web by id (using POST)\r\n     *\r\n     * @param webId The GUID id of the web to open\r\n     */\r\n    Site.prototype.openWebById = function (webId) {\r\n        return this.clone(Site_1, \"openWebById('\" + webId + \"')\").postCore().then(function (d) { return ({\r\n            data: d,\r\n            web: Web.fromUrl(d[\"odata.id\"] || d.__metadata.uri),\r\n        }); });\r\n    };\r\n    /**\r\n     * Associates a site collection to a hub site.\r\n     *\r\n     * @param siteId Id of the hub site collection you want to join.\r\n     * If you want to disassociate the site collection from hub site, then\r\n     * pass the siteId as 00000000-0000-0000-0000-000000000000\r\n     */\r\n    Site.prototype.joinHubSite = function (siteId) {\r\n        return this.clone(Site_1, \"joinHubSite('\" + siteId + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Registers the current site collection as hub site collection\r\n     */\r\n    Site.prototype.registerHubSite = function () {\r\n        return this.clone(Site_1, \"registerHubSite\").postCore();\r\n    };\r\n    /**\r\n     * Unregisters the current site collection as hub site collection.\r\n     */\r\n    Site.prototype.unRegisterHubSite = function () {\r\n        return this.clone(Site_1, \"unRegisterHubSite\").postCore();\r\n    };\r\n    /**\r\n     * Creates a Modern communication site.\r\n     *\r\n     * @param title The title of the site to create\r\n     * @param lcid The language to use for the site. If not specified will default to 1033 (English).\r\n     * @param shareByEmailEnabled If set to true, it will enable sharing files via Email. By default it is set to false\r\n     * @param url The fully qualified URL (e.g. https://yourtenant.sharepoint.com/sites/mysitecollection) of the site.\r\n     * @param description The description of the communication site.\r\n     * @param classification The Site classification to use. For instance 'Contoso Classified'. See https://www.youtube.com/watch?v=E-8Z2ggHcS0 for more information\r\n     * @param siteDesignId The Guid of the site design to be used.\r\n     *                     You can use the below default OOTB GUIDs:\r\n     *                     Topic: 00000000-0000-0000-0000-000000000000\r\n     *                     Showcase: 6142d2a0-63a5-4ba0-aede-d9fefca2c767\r\n     *                     Blank: f6cc5403-0d63-442e-96c0-285923709ffc\r\n     * @param owner Required when creating the site using app-only context\r\n     */\r\n    Site.prototype.createCommunicationSite = function (title, lcid, shareByEmailEnabled, url, description, classification, siteDesignId, hubSiteId, owner) {\r\n        var _this = this;\r\n        if (lcid === void 0) { lcid = 1033; }\r\n        if (shareByEmailEnabled === void 0) { shareByEmailEnabled = false; }\r\n        if (description === void 0) { description = \"\"; }\r\n        if (classification === void 0) { classification = \"\"; }\r\n        if (siteDesignId === void 0) { siteDesignId = \"00000000-0000-0000-0000-000000000000\"; }\r\n        if (hubSiteId === void 0) { hubSiteId = \"00000000-0000-0000-0000-000000000000\"; }\r\n        var props = {\r\n            Classification: classification,\r\n            Description: description,\r\n            HubSiteId: hubSiteId,\r\n            Lcid: lcid,\r\n            Owner: owner,\r\n            ShareByEmailEnabled: shareByEmailEnabled,\r\n            SiteDesignId: siteDesignId,\r\n            Title: title,\r\n            Url: url,\r\n            WebTemplate: \"SITEPAGEPUBLISHING#0\",\r\n            WebTemplateExtensionId: \"00000000-0000-0000-0000-000000000000\",\r\n        };\r\n        var postBody = jsS({\r\n            \"request\": extend({\r\n                \"__metadata\": { \"type\": \"Microsoft.SharePoint.Portal.SPSiteCreationRequest\" },\r\n            }, props),\r\n        });\r\n        return this.getRootWeb().then(function (d) { return tslib_1.__awaiter(_this, void 0, void 0, function () {\r\n            var client, methodUrl;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                client = new SPHttpClient();\r\n                methodUrl = d.parentUrl + \"/_api/SPSiteManager/Create\";\r\n                return [2 /*return*/, client.post(methodUrl, {\r\n                        body: postBody,\r\n                        headers: {\r\n                            \"Accept\": \"application/json;odata=verbose\",\r\n                            \"Content-Type\": \"application/json;odata=verbose;charset=utf-8\",\r\n                        },\r\n                    }).then(function (r) { return r.json(); })];\r\n            });\r\n        }); });\r\n    };\r\n    /**\r\n     * Creates a Modern team site backed by Office 365 group. For use in SP Online only. This will not work with App-only tokens\r\n     *\r\n     * @param displayName The title or display name of the Modern team site to be created\r\n     * @param alias Alias of the underlying Office 365 Group\r\n     * @param isPublic Defines whether the Office 365 Group will be public (default), or private.\r\n     * @param lcid The language to use for the site. If not specified will default to English (1033).\r\n     * @param description The description of the site to be created.\r\n     * @param classification The Site classification to use. For instance 'Contoso Classified'. See https://www.youtube.com/watch?v=E-8Z2ggHcS0 for more information\r\n     * @param owners The Owners of the site to be created\r\n     * @param siteDesignId The ID of the site design to apply to the new site\r\n     */\r\n    Site.prototype.createModernTeamSite = function (displayName, alias, isPublic, lcid, description, classification, owners, hubSiteId, siteDesignId) {\r\n        var _this = this;\r\n        if (isPublic === void 0) { isPublic = true; }\r\n        if (lcid === void 0) { lcid = 1033; }\r\n        if (description === void 0) { description = \"\"; }\r\n        if (classification === void 0) { classification = \"\"; }\r\n        if (hubSiteId === void 0) { hubSiteId = \"00000000-0000-0000-0000-000000000000\"; }\r\n        var postBody = {\r\n            alias: alias,\r\n            displayName: displayName,\r\n            isPublic: isPublic,\r\n            optionalParams: {\r\n                Classification: classification,\r\n                CreationOptions: {\r\n                    \"results\": [\"SPSiteLanguage:\" + lcid, \"HubSiteId:\" + hubSiteId],\r\n                },\r\n                Description: description,\r\n                Owners: {\r\n                    \"results\": owners ? owners : [],\r\n                },\r\n            },\r\n        };\r\n        if (siteDesignId) {\r\n            postBody.optionalParams.CreationOptions.results.push(\"implicit_formula_292aa8a00786498a87a5ca52d9f4214a_\" + siteDesignId);\r\n        }\r\n        return this.getRootWeb().then(function (d) { return tslib_1.__awaiter(_this, void 0, void 0, function () {\r\n            var client, methodUrl;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                client = new SPHttpClient();\r\n                methodUrl = d.parentUrl + \"/_api/GroupSiteManager/CreateGroupEx\";\r\n                return [2 /*return*/, client.post(methodUrl, {\r\n                        body: jsS(postBody),\r\n                        headers: {\r\n                            \"Accept\": \"application/json;odata=verbose\",\r\n                            \"Content-Type\": \"application/json;odata=verbose;charset=utf-8\",\r\n                        },\r\n                    }).then(function (r) { return r.json(); })];\r\n            });\r\n        }); });\r\n    };\r\n    var Site_1;\r\n    Site = Site_1 = tslib_1.__decorate([\r\n        defaultPath(\"_api/site\")\r\n    ], Site);\r\n    return Site;\r\n}(SharePointQueryableInstance));\r\nexport { Site };\r\n//# sourceMappingURL=site.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryable, SharePointQueryableInstance, SharePointQueryableCollection, defaultPath } from \"./sharepointqueryable\";\r\nimport { jsS, extend } from \"@pnp/common\";\r\nimport { metadata } from \"./utils/metadata\";\r\n/**\r\n * Represents a collection of navigation nodes\r\n *\r\n */\r\nvar NavigationNodes = /** @class */ (function (_super) {\r\n    tslib_1.__extends(NavigationNodes, _super);\r\n    function NavigationNodes() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets a navigation node by id\r\n     *\r\n     * @param id The id of the node\r\n     */\r\n    NavigationNodes.prototype.getById = function (id) {\r\n        var node = new NavigationNode(this);\r\n        node.concat(\"(\" + id + \")\");\r\n        return node;\r\n    };\r\n    /**\r\n     * Adds a new node to the collection\r\n     *\r\n     * @param title Display name of the node\r\n     * @param url The url of the node\r\n     * @param visible If true the node is visible, otherwise it is hidden (default: true)\r\n     */\r\n    NavigationNodes.prototype.add = function (title, url, visible) {\r\n        var _this = this;\r\n        if (visible === void 0) { visible = true; }\r\n        var postBody = jsS(extend(metadata(\"SP.NavigationNode\"), {\r\n            IsVisible: visible,\r\n            Title: title,\r\n            Url: url,\r\n        }));\r\n        return this.clone(NavigationNodes, null).postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                node: _this.getById(data.Id),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Moves a node to be after another node in the navigation\r\n     *\r\n     * @param nodeId Id of the node to move\r\n     * @param previousNodeId Id of the node after which we move the node specified by nodeId\r\n     */\r\n    NavigationNodes.prototype.moveAfter = function (nodeId, previousNodeId) {\r\n        var postBody = jsS({\r\n            nodeId: nodeId,\r\n            previousNodeId: previousNodeId,\r\n        });\r\n        return this.clone(NavigationNodes, \"MoveAfter\").postCore({ body: postBody });\r\n    };\r\n    return NavigationNodes;\r\n}(SharePointQueryableCollection));\r\nexport { NavigationNodes };\r\n/**\r\n * Represents an instance of a navigation node\r\n *\r\n */\r\nvar NavigationNode = /** @class */ (function (_super) {\r\n    tslib_1.__extends(NavigationNode, _super);\r\n    function NavigationNode() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(NavigationNode.prototype, \"children\", {\r\n        /**\r\n         * Represents the child nodes of this node\r\n         */\r\n        get: function () {\r\n            return new NavigationNodes(this, \"Children\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Deletes this node and any child nodes\r\n     */\r\n    NavigationNode.prototype.delete = function () {\r\n        return _super.prototype.deleteCore.call(this);\r\n    };\r\n    /**\r\n     * Updates this node\r\n     *\r\n     * @param properties Properties used to update this node\r\n     */\r\n    NavigationNode.prototype.update = function (properties) {\r\n        var _this = this;\r\n        var postBody = jsS(extend({\r\n            \"__metadata\": { \"type\": \"SP.NavigationNode\" },\r\n        }, properties));\r\n        return this.postCore({\r\n            body: postBody,\r\n            headers: {\r\n                \"X-HTTP-Method\": \"MERGE\",\r\n            },\r\n        }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                node: _this,\r\n            };\r\n        });\r\n    };\r\n    return NavigationNode;\r\n}(SharePointQueryableInstance));\r\nexport { NavigationNode };\r\n/**\r\n * Exposes the navigation components\r\n *\r\n */\r\nvar Navigation = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Navigation, _super);\r\n    function Navigation() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(Navigation.prototype, \"quicklaunch\", {\r\n        /**\r\n         * Gets the quicklaunch navigation nodes for the current context\r\n         *\r\n         */\r\n        get: function () {\r\n            return new NavigationNodes(this, \"quicklaunch\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Navigation.prototype, \"topNavigationBar\", {\r\n        /**\r\n         * Gets the top bar navigation nodes for the current context\r\n         *\r\n         */\r\n        get: function () {\r\n            return new NavigationNodes(this, \"topnavigationbar\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Navigation = tslib_1.__decorate([\r\n        defaultPath(\"navigation\")\r\n    ], Navigation);\r\n    return Navigation;\r\n}(SharePointQueryable));\r\nexport { Navigation };\r\n/**\r\n * Represents the top level navigation service\r\n */\r\nvar NavigationService = /** @class */ (function (_super) {\r\n    tslib_1.__extends(NavigationService, _super);\r\n    function NavigationService(baseUrl, path) {\r\n        if (path === void 0) { path = null; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * The MenuState service operation returns a Menu-State (dump) of a SiteMapProvider on a site.\r\n     *\r\n     * @param menuNodeKey MenuNode.Key of the start node within the SiteMapProvider If no key is provided the SiteMapProvider.RootNode will be the root of the menu state.\r\n     * @param depth Depth of the dump. If no value is provided a dump with the depth of 10 is returned\r\n     * @param mapProviderName The name identifying the SiteMapProvider to be used\r\n     * @param customProperties comma seperated list of custom properties to be returned.\r\n     */\r\n    NavigationService.prototype.getMenuState = function (menuNodeKey, depth, mapProviderName, customProperties) {\r\n        if (menuNodeKey === void 0) { menuNodeKey = null; }\r\n        if (depth === void 0) { depth = 10; }\r\n        if (mapProviderName === void 0) { mapProviderName = null; }\r\n        if (customProperties === void 0) { customProperties = null; }\r\n        return (new NavigationService(this, \"_api/navigation/MenuState\")).postCore({\r\n            body: jsS({\r\n                customProperties: customProperties,\r\n                depth: depth,\r\n                mapProviderName: mapProviderName,\r\n                menuNodeKey: menuNodeKey,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Tries to get a SiteMapNode.Key for a given URL within a site collection.\r\n     *\r\n     * @param currentUrl A url representing the SiteMapNode\r\n     * @param mapProviderName The name identifying the SiteMapProvider to be used\r\n     */\r\n    NavigationService.prototype.getMenuNodeKey = function (currentUrl, mapProviderName) {\r\n        if (mapProviderName === void 0) { mapProviderName = null; }\r\n        return (new NavigationService(this, \"_api/navigation/MenuNodeKey\")).postCore({\r\n            body: jsS({\r\n                currentUrl: currentUrl,\r\n                mapProviderName: mapProviderName,\r\n            }),\r\n        });\r\n    };\r\n    return NavigationService;\r\n}(SharePointQueryable));\r\nexport { NavigationService };\r\n//# sourceMappingURL=navigation.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryable, defaultPath } from \"./sharepointqueryable\";\r\nimport { jsS } from \"@pnp/common\";\r\nvar RelatedItemManagerImpl = /** @class */ (function (_super) {\r\n    tslib_1.__extends(RelatedItemManagerImpl, _super);\r\n    function RelatedItemManagerImpl() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    RelatedItemManagerImpl_1 = RelatedItemManagerImpl;\r\n    RelatedItemManagerImpl.FromUrl = function (url) {\r\n        if (url === null) {\r\n            return new RelatedItemManagerImpl_1(\"\");\r\n        }\r\n        var index = url.indexOf(\"_api/\");\r\n        if (index > -1) {\r\n            return new RelatedItemManagerImpl_1(url.substr(0, index));\r\n        }\r\n        return new RelatedItemManagerImpl_1(url);\r\n    };\r\n    RelatedItemManagerImpl.prototype.getRelatedItems = function (sourceListName, sourceItemId) {\r\n        var query = this.clone(RelatedItemManagerImpl_1, null);\r\n        query.concat(\".GetRelatedItems\");\r\n        return query.postCore({\r\n            body: jsS({\r\n                SourceItemID: sourceItemId,\r\n                SourceListName: sourceListName,\r\n            }),\r\n        });\r\n    };\r\n    RelatedItemManagerImpl.prototype.getPageOneRelatedItems = function (sourceListName, sourceItemId) {\r\n        var query = this.clone(RelatedItemManagerImpl_1, null);\r\n        query.concat(\".GetPageOneRelatedItems\");\r\n        return query.postCore({\r\n            body: jsS({\r\n                SourceItemID: sourceItemId,\r\n                SourceListName: sourceListName,\r\n            }),\r\n        });\r\n    };\r\n    RelatedItemManagerImpl.prototype.addSingleLink = function (sourceListName, sourceItemId, sourceWebUrl, targetListName, targetItemID, targetWebUrl, tryAddReverseLink) {\r\n        if (tryAddReverseLink === void 0) { tryAddReverseLink = false; }\r\n        var query = this.clone(RelatedItemManagerImpl_1, null);\r\n        query.concat(\".AddSingleLink\");\r\n        return query.postCore({\r\n            body: jsS({\r\n                SourceItemID: sourceItemId,\r\n                SourceListName: sourceListName,\r\n                SourceWebUrl: sourceWebUrl,\r\n                TargetItemID: targetItemID,\r\n                TargetListName: targetListName,\r\n                TargetWebUrl: targetWebUrl,\r\n                TryAddReverseLink: tryAddReverseLink,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Adds a related item link from an item specified by list name and item id, to an item specified by url\r\n     *\r\n     * @param sourceListName The source list name or list id\r\n     * @param sourceItemId The source item id\r\n     * @param targetItemUrl The target item url\r\n     * @param tryAddReverseLink If set to true try to add the reverse link (will not return error if it fails)\r\n     */\r\n    RelatedItemManagerImpl.prototype.addSingleLinkToUrl = function (sourceListName, sourceItemId, targetItemUrl, tryAddReverseLink) {\r\n        if (tryAddReverseLink === void 0) { tryAddReverseLink = false; }\r\n        var query = this.clone(RelatedItemManagerImpl_1, null);\r\n        query.concat(\".AddSingleLinkToUrl\");\r\n        return query.postCore({\r\n            body: jsS({\r\n                SourceItemID: sourceItemId,\r\n                SourceListName: sourceListName,\r\n                TargetItemUrl: targetItemUrl,\r\n                TryAddReverseLink: tryAddReverseLink,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Adds a related item link from an item specified by url, to an item specified by list name and item id\r\n     *\r\n     * @param sourceItemUrl The source item url\r\n     * @param targetListName The target list name or list id\r\n     * @param targetItemId The target item id\r\n     * @param tryAddReverseLink If set to true try to add the reverse link (will not return error if it fails)\r\n     */\r\n    RelatedItemManagerImpl.prototype.addSingleLinkFromUrl = function (sourceItemUrl, targetListName, targetItemId, tryAddReverseLink) {\r\n        if (tryAddReverseLink === void 0) { tryAddReverseLink = false; }\r\n        var query = this.clone(RelatedItemManagerImpl_1, null);\r\n        query.concat(\".AddSingleLinkFromUrl\");\r\n        return query.postCore({\r\n            body: jsS({\r\n                SourceItemUrl: sourceItemUrl,\r\n                TargetItemID: targetItemId,\r\n                TargetListName: targetListName,\r\n                TryAddReverseLink: tryAddReverseLink,\r\n            }),\r\n        });\r\n    };\r\n    RelatedItemManagerImpl.prototype.deleteSingleLink = function (sourceListName, sourceItemId, sourceWebUrl, targetListName, targetItemId, targetWebUrl, tryDeleteReverseLink) {\r\n        if (tryDeleteReverseLink === void 0) { tryDeleteReverseLink = false; }\r\n        var query = this.clone(RelatedItemManagerImpl_1, null);\r\n        query.concat(\".DeleteSingleLink\");\r\n        return query.postCore({\r\n            body: jsS({\r\n                SourceItemID: sourceItemId,\r\n                SourceListName: sourceListName,\r\n                SourceWebUrl: sourceWebUrl,\r\n                TargetItemID: targetItemId,\r\n                TargetListName: targetListName,\r\n                TargetWebUrl: targetWebUrl,\r\n                TryDeleteReverseLink: tryDeleteReverseLink,\r\n            }),\r\n        });\r\n    };\r\n    var RelatedItemManagerImpl_1;\r\n    RelatedItemManagerImpl = RelatedItemManagerImpl_1 = tslib_1.__decorate([\r\n        defaultPath(\"_api/SP.RelatedItemManager\")\r\n    ], RelatedItemManagerImpl);\r\n    return RelatedItemManagerImpl;\r\n}(SharePointQueryable));\r\nexport { RelatedItemManagerImpl };\r\n//# sourceMappingURL=relateditems.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryableInstance, SharePointQueryableCollection, defaultPath, } from \"./sharepointqueryable\";\r\nimport { spODataEntity, } from \"./odata\";\r\nimport { dateAdd, hOP, } from \"@pnp/common\";\r\n/**\r\n * Describes regional settings ODada object\r\n */\r\nvar RegionalSettings = /** @class */ (function (_super) {\r\n    tslib_1.__extends(RegionalSettings, _super);\r\n    function RegionalSettings() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(RegionalSettings.prototype, \"installedLanguages\", {\r\n        /**\r\n         * Gets the collection of languages used in a server farm.\r\n         */\r\n        get: function () {\r\n            return new InstalledLanguages(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RegionalSettings.prototype, \"globalInstalledLanguages\", {\r\n        /**\r\n         * Gets the collection of language packs that are installed on the server.\r\n         */\r\n        get: function () {\r\n            return new InstalledLanguages(this, \"globalinstalledlanguages\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RegionalSettings.prototype, \"timeZone\", {\r\n        /**\r\n         * Gets time zone\r\n         */\r\n        get: function () {\r\n            return new TimeZone(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RegionalSettings.prototype, \"timeZones\", {\r\n        /**\r\n         * Gets time zones\r\n         */\r\n        get: function () {\r\n            return new TimeZones(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    RegionalSettings = tslib_1.__decorate([\r\n        defaultPath(\"regionalsettings\")\r\n    ], RegionalSettings);\r\n    return RegionalSettings;\r\n}(SharePointQueryableInstance));\r\nexport { RegionalSettings };\r\n/**\r\n * Describes installed languages ODada queriable collection\r\n */\r\nvar InstalledLanguages = /** @class */ (function (_super) {\r\n    tslib_1.__extends(InstalledLanguages, _super);\r\n    function InstalledLanguages() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    InstalledLanguages = tslib_1.__decorate([\r\n        defaultPath(\"installedlanguages\")\r\n    ], InstalledLanguages);\r\n    return InstalledLanguages;\r\n}(SharePointQueryableCollection));\r\nexport { InstalledLanguages };\r\n/**\r\n * Describes TimeZone ODada object\r\n */\r\nvar TimeZone = /** @class */ (function (_super) {\r\n    tslib_1.__extends(TimeZone, _super);\r\n    function TimeZone() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    TimeZone_1 = TimeZone;\r\n    /**\r\n     * Gets an Local Time by UTC Time\r\n     *\r\n     * @param utcTime UTC Time as Date or ISO String\r\n     */\r\n    TimeZone.prototype.utcToLocalTime = function (utcTime) {\r\n        var dateIsoString;\r\n        if (typeof utcTime === \"string\") {\r\n            dateIsoString = utcTime;\r\n        }\r\n        else {\r\n            dateIsoString = utcTime.toISOString();\r\n        }\r\n        return this.clone(TimeZone_1, \"utctolocaltime('\" + dateIsoString + \"')\")\r\n            .postCore()\r\n            .then(function (res) { return hOP(res, \"UTCToLocalTime\") ? res.UTCToLocalTime : res; });\r\n    };\r\n    /**\r\n     * Gets an UTC Time by Local Time\r\n     *\r\n     * @param localTime Local Time as Date or ISO String\r\n     */\r\n    TimeZone.prototype.localTimeToUTC = function (localTime) {\r\n        var dateIsoString;\r\n        if (typeof localTime === \"string\") {\r\n            dateIsoString = localTime;\r\n        }\r\n        else {\r\n            dateIsoString = dateAdd(localTime, \"minute\", localTime.getTimezoneOffset() * -1).toISOString();\r\n        }\r\n        return this.clone(TimeZone_1, \"localtimetoutc('\" + dateIsoString + \"')\")\r\n            .postCore()\r\n            .then(function (res) { return hOP(res, \"LocalTimeToUTC\") ? res.LocalTimeToUTC : res; });\r\n    };\r\n    var TimeZone_1;\r\n    TimeZone = TimeZone_1 = tslib_1.__decorate([\r\n        defaultPath(\"timezone\")\r\n    ], TimeZone);\r\n    return TimeZone;\r\n}(SharePointQueryableInstance));\r\nexport { TimeZone };\r\n/**\r\n * Describes time zones queriable collection\r\n */\r\nvar TimeZones = /** @class */ (function (_super) {\r\n    tslib_1.__extends(TimeZones, _super);\r\n    function TimeZones() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    TimeZones_1 = TimeZones;\r\n    // https://msdn.microsoft.com/en-us/library/office/jj247008.aspx - timezones ids\r\n    /**\r\n     * Gets an TimeZone by id\r\n     *\r\n     * @param id The integer id of the timezone to retrieve\r\n     */\r\n    TimeZones.prototype.getById = function (id) {\r\n        // do the post and merge the result into a TimeZone instance so the data and methods are available\r\n        return this.clone(TimeZones_1, \"GetById(\" + id + \")\").postCore({}, spODataEntity(TimeZone));\r\n    };\r\n    var TimeZones_1;\r\n    TimeZones = TimeZones_1 = tslib_1.__decorate([\r\n        defaultPath(\"timezones\")\r\n    ], TimeZones);\r\n    return TimeZones;\r\n}(SharePointQueryableCollection));\r\nexport { TimeZones };\r\n//# sourceMappingURL=regionalsettings.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryable } from \"./sharepointqueryable\";\r\nimport { hOP } from \"@pnp/common\";\r\n/**\r\n * Implements the site designs API REST methods\r\n *\r\n */\r\nvar SiteDesigns = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SiteDesigns, _super);\r\n    /**\r\n     * Creates a new instance of the SiteDesigns method class\r\n     *\r\n     * @param baseUrl The parent url provider\r\n     * @param methodName The static method name to call on the utility class\r\n     */\r\n    function SiteDesigns(baseUrl, methodName) {\r\n        return _super.call(this, SiteDesigns.getBaseUrl(baseUrl), \"_api/Microsoft.Sharepoint.Utilities.WebTemplateExtensions.SiteScriptUtility.\" + methodName) || this;\r\n    }\r\n    SiteDesigns.getBaseUrl = function (candidate) {\r\n        if (typeof candidate === \"string\") {\r\n            return candidate;\r\n        }\r\n        var c = candidate;\r\n        var url = c.toUrl();\r\n        var index = url.indexOf(\"_api/\");\r\n        if (index < 0) {\r\n            return url;\r\n        }\r\n        return url.substr(0, index);\r\n    };\r\n    SiteDesigns.prototype.execute = function (props) {\r\n        return this.postCore({\r\n            body: JSON.stringify(props),\r\n            headers: {\r\n                \"Content-Type\": \"application/json;charset=utf-8\",\r\n            },\r\n        });\r\n    };\r\n    /**\r\n     * Creates a new site design available to users when they create a new site from the SharePoint home page.\r\n     *\r\n     * @param creationInfo A sitedesign creation information object\r\n     */\r\n    SiteDesigns.prototype.createSiteDesign = function (creationInfo) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.clone(SiteDesigns, \"CreateSiteDesign\").execute({ info: creationInfo })];\r\n                    case 1: return [2 /*return*/, _a.sent()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Applies a site design to an existing site collection.\r\n     *\r\n     * @param siteDesignId The ID of the site design to apply.\r\n     * @param webUrl The URL of the site collection where you want to apply the site design.\r\n     */\r\n    SiteDesigns.prototype.applySiteDesign = function (siteDesignId, webUrl) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.clone(SiteDesigns, \"ApplySiteDesign\").execute({ siteDesignId: siteDesignId, \"webUrl\": webUrl })];\r\n                    case 1: return [2 /*return*/, _a.sent()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Gets a list of information about existing site designs.\r\n     */\r\n    SiteDesigns.prototype.getSiteDesigns = function () {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.clone(SiteDesigns, \"GetSiteDesigns\").execute({})];\r\n                    case 1: return [2 /*return*/, _a.sent()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Gets information about a specific site design.\r\n     * @param id The ID of the site design to get information about.\r\n     */\r\n    SiteDesigns.prototype.getSiteDesignMetadata = function (id) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.clone(SiteDesigns, \"GetSiteDesignMetadata\").execute({ id: id })];\r\n                    case 1: return [2 /*return*/, _a.sent()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Updates a site design with new values. In the REST call, all parameters are optional except the site script Id.\r\n     * If you had previously set the IsDefault parameter to TRUE and wish it to remain true, you must pass in this parameter again (otherwise it will be reset to FALSE).\r\n     * @param updateInfo A sitedesign update information object\r\n     */\r\n    SiteDesigns.prototype.updateSiteDesign = function (updateInfo) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.clone(SiteDesigns, \"UpdateSiteDesign\").execute({ updateInfo: updateInfo })];\r\n                    case 1: return [2 /*return*/, _a.sent()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Deletes a site design.\r\n     * @param id The ID of the site design to delete.\r\n     */\r\n    SiteDesigns.prototype.deleteSiteDesign = function (id) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.clone(SiteDesigns, \"DeleteSiteDesign\").execute({ id: id })];\r\n                    case 1: return [2 /*return*/, _a.sent()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Gets a list of principals that have access to a site design.\r\n     * @param id The ID of the site design to get rights information from.\r\n     */\r\n    SiteDesigns.prototype.getSiteDesignRights = function (id) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.clone(SiteDesigns, \"GetSiteDesignRights\").execute({ id: id })];\r\n                    case 1: return [2 /*return*/, _a.sent()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Grants access to a site design for one or more principals.\r\n     * @param id The ID of the site design to grant rights on.\r\n     * @param principalNames An array of one or more principals to grant view rights.\r\n     *                       Principals can be users or mail-enabled security groups in the form of \"alias\" or \"alias@<domain name>.com\"\r\n     * @param grantedRights Always set to 1. This represents the View right.\r\n     */\r\n    SiteDesigns.prototype.grantSiteDesignRights = function (id, principalNames, grantedRights) {\r\n        if (grantedRights === void 0) { grantedRights = 1; }\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.clone(SiteDesigns, \"GrantSiteDesignRights\")\r\n                            .execute({\r\n                            \"grantedRights\": grantedRights.toString(),\r\n                            \"id\": id,\r\n                            \"principalNames\": principalNames,\r\n                        })];\r\n                    case 1: return [2 /*return*/, _a.sent()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Revokes access from a site design for one or more principals.\r\n     * @param id The ID of the site design to revoke rights from.\r\n     * @param principalNames An array of one or more principals to revoke view rights from.\r\n     *                       If all principals have rights revoked on the site design, the site design becomes viewable to everyone.\r\n     */\r\n    SiteDesigns.prototype.revokeSiteDesignRights = function (id, principalNames) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.clone(SiteDesigns, \"RevokeSiteDesignRights\")\r\n                            .execute({\r\n                            \"id\": id,\r\n                            \"principalNames\": principalNames,\r\n                        })];\r\n                    case 1: return [2 /*return*/, _a.sent()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Adds a site design task on the specified web url to be invoked asynchronously.\r\n     * @param webUrl The absolute url of the web on where to create the task\r\n     * @param siteDesignId The ID of the site design to create a task for\r\n     */\r\n    SiteDesigns.prototype.addSiteDesignTask = function (webUrl, siteDesignId) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.clone(SiteDesigns, \"AddSiteDesignTask\")\r\n                            .execute({ \"webUrl\": webUrl, \"siteDesignId\": siteDesignId })];\r\n                    case 1: return [2 /*return*/, _a.sent()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Adds a site design task on the current web to be invoked asynchronously.\r\n     * @param siteDesignId The ID of the site design to create a task for\r\n     */\r\n    SiteDesigns.prototype.addSiteDesignTaskToCurrentWeb = function (siteDesignId) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.clone(SiteDesigns, \"AddSiteDesignTaskToCurrentWeb\")\r\n                            .execute({ \"siteDesignId\": siteDesignId })];\r\n                    case 1: return [2 /*return*/, _a.sent()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Retrieves the site design task, if the task has finished running null will be returned\r\n     * @param id The ID of the site design task\r\n     */\r\n    SiteDesigns.prototype.getSiteDesignTask = function (id) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var task;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.clone(SiteDesigns, \"GetSiteDesignTask\")\r\n                            .execute({ \"taskId\": id })];\r\n                    case 1:\r\n                        task = _a.sent();\r\n                        return [2 /*return*/, hOP(task, \"ID\") ? task : null];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Retrieves a list of site design that have run on a specific web\r\n     * @param webUrl The url of the web where the site design was applied\r\n     * @param siteDesignId (Optional) the site design ID, if not provided will return all site design runs\r\n     */\r\n    SiteDesigns.prototype.getSiteDesignRun = function (webUrl, siteDesignId) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.clone(SiteDesigns, \"GetSiteDesignRun\")\r\n                            .execute({ \"webUrl\": webUrl, siteDesignId: siteDesignId })];\r\n                    case 1: return [2 /*return*/, _a.sent()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Retrieves the status of a site design that has been run or is still running\r\n     * @param webUrl The url of the web where the site design was applied\r\n     * @param runId the run ID\r\n     */\r\n    SiteDesigns.prototype.getSiteDesignRunStatus = function (webUrl, runId) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.clone(SiteDesigns, \"GetSiteDesignRunStatus\")\r\n                            .execute({ \"webUrl\": webUrl, runId: runId })];\r\n                    case 1: return [2 /*return*/, _a.sent()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return SiteDesigns;\r\n}(SharePointQueryable));\r\nexport { SiteDesigns };\r\n//# sourceMappingURL=sitedesigns.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryable } from \"./sharepointqueryable\";\r\n/**\r\n * Implements the site script API REST methods\r\n *\r\n */\r\nvar SiteScripts = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SiteScripts, _super);\r\n    /**\r\n     * Creates a new instance of the SiteScripts method class\r\n     *\r\n     * @param baseUrl The parent url provider\r\n     * @param methodName The static method name to call on the utility class\r\n     */\r\n    function SiteScripts(baseUrl, methodName) {\r\n        return _super.call(this, SiteScripts.getBaseUrl(baseUrl), \"_api/Microsoft.Sharepoint.Utilities.WebTemplateExtensions.SiteScriptUtility.\" + methodName) || this;\r\n    }\r\n    SiteScripts.getBaseUrl = function (candidate) {\r\n        if (typeof candidate === \"string\") {\r\n            return candidate;\r\n        }\r\n        var c = candidate;\r\n        var url = c.toUrl();\r\n        var index = url.indexOf(\"_api/\");\r\n        if (index < 0) {\r\n            return url;\r\n        }\r\n        return url.substr(0, index);\r\n    };\r\n    SiteScripts.prototype.execute = function (props) {\r\n        return this.postCore({\r\n            body: JSON.stringify(props),\r\n        });\r\n    };\r\n    /**\r\n     * Gets a list of information on all existing site scripts.\r\n     */\r\n    SiteScripts.prototype.getSiteScripts = function () {\r\n        return this.clone(SiteScripts, \"GetSiteScripts\", true).execute({});\r\n    };\r\n    /**\r\n     * Creates a new site script.\r\n     *\r\n     * @param title The display name of the site design.\r\n     * @param content JSON value that describes the script. For more information, see JSON reference.\r\n     */\r\n    SiteScripts.prototype.createSiteScript = function (title, description, content) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.clone(SiteScripts, \"CreateSiteScript(Title=@title,Description=@desc)?@title='\" + encodeURIComponent(title) + \"'&@desc='\" + encodeURIComponent(description) + \"'\")\r\n                            .execute(content)];\r\n                    case 1: return [2 /*return*/, _a.sent()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Gets information about a specific site script. It also returns the JSON of the script.\r\n     *\r\n     * @param id The ID of the site script to get information about.\r\n     */\r\n    SiteScripts.prototype.getSiteScriptMetadata = function (id) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.clone(SiteScripts, \"GetSiteScriptMetadata\").execute({ id: id })];\r\n                    case 1: return [2 /*return*/, _a.sent()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Deletes a site script.\r\n     *\r\n     * @param id The ID of the site script to delete.\r\n     */\r\n    SiteScripts.prototype.deleteSiteScript = function (id) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.clone(SiteScripts, \"DeleteSiteScript\").execute({ id: id })];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Updates a site script with new values. In the REST call, all parameters are optional except the site script Id.\r\n     *\r\n     * @param siteScriptUpdateInfo Object that contains the information to update a site script.\r\n     *                             Make sure you stringify the content object or pass it in the second 'content' parameter\r\n     * @param content (Optional) A new JSON script defining the script actions. For more information, see Site design JSON schema.\r\n     */\r\n    SiteScripts.prototype.updateSiteScript = function (siteScriptUpdateInfo, content) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (content) {\r\n                            siteScriptUpdateInfo.Content = JSON.stringify(content);\r\n                        }\r\n                        return [4 /*yield*/, this.clone(SiteScripts, \"UpdateSiteScript\").execute({ updateInfo: siteScriptUpdateInfo })];\r\n                    case 1: return [2 /*return*/, _a.sent()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Gets the site script syntax (JSON) for a specific list\r\n     * @param listUrl The absolute url of the list to retrieve site script\r\n     */\r\n    SiteScripts.prototype.getSiteScriptFromList = function (listUrl) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.clone(SiteScripts, \"GetSiteScriptFromList\")\r\n                            .execute({ \"listUrl\": listUrl })];\r\n                    case 1: return [2 /*return*/, _a.sent()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Gets the site script syntax (JSON) for a specific web\r\n     * @param webUrl The absolute url of the web to retrieve site script\r\n     * @param extractInfo configuration object to specify what to extract\r\n     */\r\n    SiteScripts.prototype.getSiteScriptFromWeb = function (webUrl, extractInfo) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.clone(SiteScripts, \"getSiteScriptFromWeb\")\r\n                            .execute({ \"webUrl\": webUrl, info: extractInfo })];\r\n                    case 1: return [2 /*return*/, _a.sent()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return SiteScripts;\r\n}(SharePointQueryable));\r\nexport { SiteScripts };\r\n//# sourceMappingURL=sitescripts.js.map","import * as tslib_1 from \"tslib\";\r\nimport { extend, jsS } from \"@pnp/common\";\r\nimport { SharePointQueryableInstance, SharePointQueryableCollection, defaultPath } from \"./sharepointqueryable\";\r\nimport { SharePointQueryableShareableWeb } from \"./sharepointqueryableshareable\";\r\nimport { Folders, Folder } from \"./folders\";\r\nimport { Lists, List } from \"./lists\";\r\nimport { Fields } from \"./fields\";\r\nimport { Site } from \"./site\";\r\nimport { Navigation } from \"./navigation\";\r\nimport { SiteGroups, SiteGroup } from \"./sitegroups\";\r\nimport { ContentTypes } from \"./contenttypes\";\r\nimport { RoleDefinitions } from \"./roles\";\r\nimport { File } from \"./files\";\r\nimport { extractWebUrl } from \"./utils/extractweburl\";\r\nimport { SiteUsers, SiteUser, CurrentUser } from \"./siteusers\";\r\nimport { UserCustomActions } from \"./usercustomactions\";\r\nimport { odataUrlFrom } from \"./odata\";\r\nimport { SPBatch } from \"./batch\";\r\nimport { Features } from \"./features\";\r\nimport { RelatedItemManagerImpl } from \"./relateditems\";\r\nimport { AppCatalog } from \"./appcatalog\";\r\nimport { RegionalSettings } from \"./regionalsettings\";\r\nimport { ClientSidePage } from \"./clientsidepages\";\r\nimport { SiteDesigns } from \"./sitedesigns\";\r\nimport { SiteScripts } from \"./sitescripts\";\r\n/**\r\n * Describes a collection of webs\r\n *\r\n */\r\nvar Webs = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Webs, _super);\r\n    function Webs() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Webs_1 = Webs;\r\n    /**\r\n     * Adds a new web to the collection\r\n     *\r\n     * @param title The new web's title\r\n     * @param url The new web's relative url\r\n     * @param description The new web's description\r\n     * @param template The new web's template internal name (default = STS)\r\n     * @param language The locale id that specifies the new web's language (default = 1033 [English, US])\r\n     * @param inheritPermissions When true, permissions will be inherited from the new web's parent (default = true)\r\n     */\r\n    Webs.prototype.add = function (title, url, description, template, language, inheritPermissions) {\r\n        if (description === void 0) { description = \"\"; }\r\n        if (template === void 0) { template = \"STS\"; }\r\n        if (language === void 0) { language = 1033; }\r\n        if (inheritPermissions === void 0) { inheritPermissions = true; }\r\n        var props = {\r\n            Description: description,\r\n            Language: language,\r\n            Title: title,\r\n            Url: url,\r\n            UseSamePermissionsAsParentSite: inheritPermissions,\r\n            WebTemplate: template,\r\n        };\r\n        var postBody = jsS({\r\n            \"parameters\": extend({\r\n                \"__metadata\": { \"type\": \"SP.WebCreationInformation\" },\r\n            }, props),\r\n        });\r\n        return this.clone(Webs_1, \"add\").postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                web: new Web(odataUrlFrom(data).replace(/_api\\/web\\/?/i, \"\")),\r\n            };\r\n        });\r\n    };\r\n    var Webs_1;\r\n    Webs = Webs_1 = tslib_1.__decorate([\r\n        defaultPath(\"webs\")\r\n    ], Webs);\r\n    return Webs;\r\n}(SharePointQueryableCollection));\r\nexport { Webs };\r\n/**\r\n * Describes a collection of web infos\r\n *\r\n */\r\nvar WebInfos = /** @class */ (function (_super) {\r\n    tslib_1.__extends(WebInfos, _super);\r\n    function WebInfos() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    WebInfos = tslib_1.__decorate([\r\n        defaultPath(\"webinfos\")\r\n    ], WebInfos);\r\n    return WebInfos;\r\n}(SharePointQueryableCollection));\r\nexport { WebInfos };\r\n/**\r\n * Describes a web\r\n *\r\n */\r\nvar Web = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Web, _super);\r\n    function Web() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Web_1 = Web;\r\n    /**\r\n     * Creates a new web instance from the given url by indexing the location of the /_api/\r\n     * segment. If this is not found the method creates a new web with the entire string as\r\n     * supplied.\r\n     *\r\n     * @param url\r\n     */\r\n    Web.fromUrl = function (url, path) {\r\n        return new Web_1(extractWebUrl(url), path);\r\n    };\r\n    Object.defineProperty(Web.prototype, \"webs\", {\r\n        /**\r\n         * Gets this web's subwebs\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Webs(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets this web's parent web and data\r\n     *\r\n     */\r\n    Web.prototype.getParentWeb = function () {\r\n        var _this = this;\r\n        return this.select(\"ParentWeb/Id\").expand(\"ParentWeb\").get()\r\n            .then(function (_a) {\r\n            var ParentWeb = _a.ParentWeb;\r\n            return ParentWeb ? new Site(_this.parentUrl).openWebById(ParentWeb.Id) : null;\r\n        });\r\n    };\r\n    /**\r\n    * Returns a collection of objects that contain metadata about subsites of the current site in which the current user is a member.\r\n    *\r\n    * @param nWebTemplateFilter Specifies the site definition (default = -1)\r\n    * @param nConfigurationFilter A 16-bit integer that specifies the identifier of a configuration (default = -1)\r\n    */\r\n    Web.prototype.getSubwebsFilteredForCurrentUser = function (nWebTemplateFilter, nConfigurationFilter) {\r\n        if (nWebTemplateFilter === void 0) { nWebTemplateFilter = -1; }\r\n        if (nConfigurationFilter === void 0) { nConfigurationFilter = -1; }\r\n        return this.clone(Webs, \"getSubwebsFilteredForCurrentUser(nWebTemplateFilter=\" + nWebTemplateFilter + \",nConfigurationFilter=\" + nConfigurationFilter + \")\");\r\n    };\r\n    Object.defineProperty(Web.prototype, \"allProperties\", {\r\n        /**\r\n         * Allows access to the web's all properties collection\r\n         */\r\n        get: function () {\r\n            return this.clone(SharePointQueryableInstance, \"allproperties\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"webinfos\", {\r\n        /**\r\n         * Gets a collection of WebInfos for this web's subwebs\r\n         *\r\n         */\r\n        get: function () {\r\n            return new WebInfos(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"contentTypes\", {\r\n        /**\r\n         * Gets the content types available in this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new ContentTypes(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"lists\", {\r\n        /**\r\n         * Gets the lists in this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Lists(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"fields\", {\r\n        /**\r\n         * Gets the fields in this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Fields(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"features\", {\r\n        /**\r\n         * Gets the active features for this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Features(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"availablefields\", {\r\n        /**\r\n         * Gets the available fields in this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Fields(this, \"availablefields\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"navigation\", {\r\n        /**\r\n         * Gets the navigation options in this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Navigation(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"siteUsers\", {\r\n        /**\r\n         * Gets the site users\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteUsers(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"siteGroups\", {\r\n        /**\r\n         * Gets the site groups\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteGroups(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"siteUserInfoList\", {\r\n        /**\r\n         * Gets site user info list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new List(this, \"siteuserinfolist\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"regionalSettings\", {\r\n        /**\r\n         * Gets regional settings\r\n         *\r\n         */\r\n        get: function () {\r\n            return new RegionalSettings(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"currentUser\", {\r\n        /**\r\n         * Gets the current user\r\n         */\r\n        get: function () {\r\n            return new CurrentUser(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"folders\", {\r\n        /**\r\n         * Gets the top-level folders in this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Folders(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"userCustomActions\", {\r\n        /**\r\n         * Gets all user custom actions for this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new UserCustomActions(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"roleDefinitions\", {\r\n        /**\r\n         * Gets the collection of RoleDefinition resources\r\n         *\r\n         */\r\n        get: function () {\r\n            return new RoleDefinitions(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"relatedItems\", {\r\n        /**\r\n         * Provides an interface to manage related items\r\n         *\r\n         */\r\n        get: function () {\r\n            return RelatedItemManagerImpl.FromUrl(this.toUrl());\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Creates a new batch for requests within the context of this web\r\n     *\r\n     */\r\n    Web.prototype.createBatch = function () {\r\n        return new SPBatch(this.parentUrl);\r\n    };\r\n    Object.defineProperty(Web.prototype, \"rootFolder\", {\r\n        /**\r\n         * Gets the root folder of this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Folder(this, \"rootFolder\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"associatedOwnerGroup\", {\r\n        /**\r\n         * Gets the associated owner group for this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteGroup(this, \"associatedownergroup\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"associatedMemberGroup\", {\r\n        /**\r\n         * Gets the associated member group for this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteGroup(this, \"associatedmembergroup\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"associatedVisitorGroup\", {\r\n        /**\r\n         * Gets the associated visitor group for this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteGroup(this, \"associatedvisitorgroup\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"defaultDocumentLibrary\", {\r\n        /**\r\n         * Gets the default document library for this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new List(this, \"DefaultDocumentLibrary\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets a folder by id\r\n     *\r\n     * @param uniqueId The uniqueId of the folder\r\n     */\r\n    Web.prototype.getFolderById = function (uniqueId) {\r\n        return new Folder(this, \"getFolderById('\" + uniqueId + \"')\");\r\n    };\r\n    /**\r\n     * Gets a folder by server relative url\r\n     *\r\n     * @param folderRelativeUrl The server relative path to the folder (including /sites/ if applicable)\r\n     */\r\n    Web.prototype.getFolderByServerRelativeUrl = function (folderRelativeUrl) {\r\n        return new Folder(this, \"getFolderByServerRelativeUrl('\" + folderRelativeUrl + \"')\");\r\n    };\r\n    /**\r\n     * Gets a folder by server relative relative path if your folder name contains # and % characters\r\n     * you need to first encode the file name using encodeURIComponent() and then pass the url\r\n     * let url = \"/sites/test/Shared Documents/\" + encodeURIComponent(\"%123\");\r\n     * This works only in SharePoint online.\r\n     *\r\n     * @param folderRelativeUrl The server relative path to the folder (including /sites/ if applicable)\r\n     */\r\n    Web.prototype.getFolderByServerRelativePath = function (folderRelativeUrl) {\r\n        return new Folder(this, \"getFolderByServerRelativePath(decodedUrl='\" + folderRelativeUrl + \"')\");\r\n    };\r\n    /**\r\n     * Gets a file by id\r\n     *\r\n     * @param uniqueId The uniqueId of the file\r\n     */\r\n    Web.prototype.getFileById = function (uniqueId) {\r\n        return new File(this, \"getFileById('\" + uniqueId + \"')\");\r\n    };\r\n    /**\r\n     * Gets a file by server relative url\r\n     *\r\n     * @param fileRelativeUrl The server relative path to the file (including /sites/ if applicable)\r\n     */\r\n    Web.prototype.getFileByServerRelativeUrl = function (fileRelativeUrl) {\r\n        return new File(this, \"getFileByServerRelativeUrl('\" + fileRelativeUrl + \"')\");\r\n    };\r\n    /**\r\n     * Gets a file by server relative url if your file name contains # and % characters\r\n     * you need to first encode the file name using encodeURIComponent() and then pass the url\r\n     * let url = \"/sites/test/Shared Documents/\" + encodeURIComponent(\"%123.docx\");\r\n     *\r\n     * @param fileRelativeUrl The server relative path to the file (including /sites/ if applicable)\r\n     */\r\n    Web.prototype.getFileByServerRelativePath = function (fileRelativeUrl) {\r\n        return new File(this, \"getFileByServerRelativePath(decodedUrl='\" + fileRelativeUrl + \"')\");\r\n    };\r\n    /**\r\n     * Gets a list by server relative url (list's root folder)\r\n     *\r\n     * @param listRelativeUrl The server relative path to the list's root folder (including /sites/ if applicable)\r\n     */\r\n    Web.prototype.getList = function (listRelativeUrl) {\r\n        return new List(this, \"getList('\" + listRelativeUrl + \"')\");\r\n    };\r\n    /**\r\n     * Updates this web instance with the supplied properties\r\n     *\r\n     * @param properties A plain object hash of values to update for the web\r\n     */\r\n    Web.prototype.update = function (properties) {\r\n        var _this = this;\r\n        var postBody = jsS(extend({\r\n            \"__metadata\": { \"type\": \"SP.Web\" },\r\n        }, properties));\r\n        return this.postCore({\r\n            body: postBody,\r\n            headers: {\r\n                \"X-HTTP-Method\": \"MERGE\",\r\n            },\r\n        }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                web: _this,\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Deletes this web\r\n     *\r\n     */\r\n    Web.prototype.delete = function () {\r\n        return _super.prototype.deleteCore.call(this);\r\n    };\r\n    /**\r\n     * Applies the theme specified by the contents of each of the files specified in the arguments to the site\r\n     *\r\n     * @param colorPaletteUrl The server-relative URL of the color palette file\r\n     * @param fontSchemeUrl The server-relative URL of the font scheme\r\n     * @param backgroundImageUrl The server-relative URL of the background image\r\n     * @param shareGenerated When true, the generated theme files are stored in the root site. When false, they are stored in this web\r\n     */\r\n    Web.prototype.applyTheme = function (colorPaletteUrl, fontSchemeUrl, backgroundImageUrl, shareGenerated) {\r\n        var postBody = jsS({\r\n            backgroundImageUrl: backgroundImageUrl,\r\n            colorPaletteUrl: colorPaletteUrl,\r\n            fontSchemeUrl: fontSchemeUrl,\r\n            shareGenerated: shareGenerated,\r\n        });\r\n        return this.clone(Web_1, \"applytheme\").postCore({ body: postBody });\r\n    };\r\n    /**\r\n     * Applies the specified site definition or site template to the Web site that has no template applied to it\r\n     *\r\n     * @param template Name of the site definition or the name of the site template\r\n     */\r\n    Web.prototype.applyWebTemplate = function (template) {\r\n        var q = this.clone(Web_1, \"applywebtemplate\");\r\n        q.concat(\"(@t)\");\r\n        q.query.set(\"@t\", template);\r\n        return q.postCore();\r\n    };\r\n    /**\r\n     * Checks whether the specified login name belongs to a valid user in the web. If the user doesn't exist, adds the user to the web.\r\n     *\r\n     * @param loginName The login name of the user (ex: i:0#.f|membership|user@domain.onmicrosoft.com)\r\n     */\r\n    Web.prototype.ensureUser = function (loginName) {\r\n        var postBody = jsS({\r\n            logonName: loginName,\r\n        });\r\n        return this.clone(Web_1, \"ensureuser\").postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                user: new SiteUser(odataUrlFrom(data)),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Returns a collection of site templates available for the site\r\n     *\r\n     * @param language The locale id of the site templates to retrieve (default = 1033 [English, US])\r\n     * @param includeCrossLanguage When true, includes language-neutral site templates; otherwise false (default = true)\r\n     */\r\n    Web.prototype.availableWebTemplates = function (language, includeCrossLanugage) {\r\n        if (language === void 0) { language = 1033; }\r\n        if (includeCrossLanugage === void 0) { includeCrossLanugage = true; }\r\n        return new SharePointQueryableCollection(this, \"getavailablewebtemplates(lcid=\" + language + \", doincludecrosslanguage=\" + includeCrossLanugage + \")\");\r\n    };\r\n    /**\r\n     * Returns the list gallery on the site\r\n     *\r\n     * @param type The gallery type - WebTemplateCatalog = 111, WebPartCatalog = 113 ListTemplateCatalog = 114,\r\n     * MasterPageCatalog = 116, SolutionCatalog = 121, ThemeCatalog = 123, DesignCatalog = 124, AppDataCatalog = 125\r\n     */\r\n    Web.prototype.getCatalog = function (type) {\r\n        return this.clone(Web_1, \"getcatalog(\" + type + \")\").select(\"Id\").get().then(function (data) {\r\n            return new List(odataUrlFrom(data));\r\n        });\r\n    };\r\n    /**\r\n     * Returns the collection of changes from the change log that have occurred within the list, based on the specified query\r\n     *\r\n     * @param query The change query\r\n     */\r\n    Web.prototype.getChanges = function (query) {\r\n        var postBody = jsS({ \"query\": extend({ \"__metadata\": { \"type\": \"SP.ChangeQuery\" } }, query) });\r\n        return this.clone(Web_1, \"getchanges\").postCore({ body: postBody });\r\n    };\r\n    Object.defineProperty(Web.prototype, \"customListTemplate\", {\r\n        /**\r\n         * Gets the custom list templates for the site\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableCollection(this, \"getcustomlisttemplates\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Returns the user corresponding to the specified member identifier for the current site\r\n     *\r\n     * @param id The id of the user\r\n     */\r\n    Web.prototype.getUserById = function (id) {\r\n        return new SiteUser(this, \"getUserById(\" + id + \")\");\r\n    };\r\n    /**\r\n     * Returns the name of the image file for the icon that is used to represent the specified file\r\n     *\r\n     * @param filename The file name. If this parameter is empty, the server returns an empty string\r\n     * @param size The size of the icon: 16x16 pixels = 0, 32x32 pixels = 1 (default = 0)\r\n     * @param progId The ProgID of the application that was used to create the file, in the form OLEServerName.ObjectName\r\n     */\r\n    Web.prototype.mapToIcon = function (filename, size, progId) {\r\n        if (size === void 0) { size = 0; }\r\n        if (progId === void 0) { progId = \"\"; }\r\n        return this.clone(Web_1, \"maptoicon(filename='\" + filename + \"', progid='\" + progId + \"', size=\" + size + \")\").get();\r\n    };\r\n    /**\r\n     * Returns the tenant property corresponding to the specified key in the app catalog site\r\n     *\r\n     * @param key Id of storage entity to be set\r\n     */\r\n    Web.prototype.getStorageEntity = function (key) {\r\n        return this.clone(Web_1, \"getStorageEntity('\" + key + \"')\").get();\r\n    };\r\n    /**\r\n     * This will set the storage entity identified by the given key (MUST be called in the context of the app catalog)\r\n     *\r\n     * @param key Id of storage entity to be set\r\n     * @param value Value of storage entity to be set\r\n     * @param description Description of storage entity to be set\r\n     * @param comments Comments of storage entity to be set\r\n     */\r\n    Web.prototype.setStorageEntity = function (key, value, description, comments) {\r\n        if (description === void 0) { description = \"\"; }\r\n        if (comments === void 0) { comments = \"\"; }\r\n        return this.clone(Web_1, \"setStorageEntity\").postCore({\r\n            body: jsS({\r\n                comments: comments,\r\n                description: description,\r\n                key: key,\r\n                value: value,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * This will remove the storage entity identified by the given key\r\n     *\r\n     * @param key Id of storage entity to be removed\r\n     */\r\n    Web.prototype.removeStorageEntity = function (key) {\r\n        return this.clone(Web_1, \"removeStorageEntity('\" + key + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Gets the tenant app catalog for this web\r\n     *\r\n     * @param url Optional url or web containing the app catalog (default: current web)\r\n     */\r\n    Web.prototype.getAppCatalog = function (url) {\r\n        return new AppCatalog(url || this);\r\n    };\r\n    /**\r\n     * Gets the site collection app catalog for this web\r\n     *\r\n     * @param url Optional url or web containing the app catalog (default: current web)\r\n     */\r\n    Web.prototype.getSiteCollectionAppCatalog = function (url) {\r\n        return new AppCatalog(url || this, \"_api/web/sitecollectionappcatalog/AvailableApps\");\r\n    };\r\n    /**\r\n     * Gets the collection of available client side web parts for this web instance\r\n     */\r\n    Web.prototype.getClientSideWebParts = function () {\r\n        return this.clone(SharePointQueryableCollection, \"GetClientSideWebParts\").get();\r\n    };\r\n    /**\r\n     * Creates a new client side page\r\n     *\r\n     * @param pageName Name of the new page\r\n     * @param title Display title of the new page\r\n     * @param libraryTitle Title of the library in which to create the new page. Default: \"Site Pages\"\r\n     */\r\n    Web.prototype.addClientSidePage = function (pageName, title) {\r\n        if (title === void 0) { title = pageName.replace(/\\.[^/.]+$/, \"\"); }\r\n        return ClientSidePage.create(this, pageName, title);\r\n    };\r\n    /**\r\n     * Creates a new client side page using the library path\r\n     *\r\n     * @param pageName Name of the new page\r\n     * @param listRelativePath The server relative path to the list's root folder (including /sites/ if applicable)\r\n     * @param title Display title of the new page\r\n     */\r\n    Web.prototype.addClientSidePageByPath = function (pageName, title) {\r\n        if (title === void 0) { title = pageName.replace(/\\.[^/.]+$/, \"\"); }\r\n        return ClientSidePage.create(this, pageName, title);\r\n    };\r\n    /**\r\n     * Creates the default associated groups (Members, Owners, Visitors) and gives them the default permissions on the site.\r\n     * The target site must have unique permissions and no associated members / owners / visitors groups\r\n     *\r\n     * @param siteOwner The user login name to be added to the site Owners group. Default is the current user\r\n     * @param siteOwner2 The second user login name to be added to the site Owners group. Default is empty\r\n     * @param groupNameSeed The base group name. E.g. 'TestSite' would produce 'TestSite Members' etc.\r\n     */\r\n    Web.prototype.createDefaultAssociatedGroups = function (siteOwner, siteOwner2, groupNameSeed) {\r\n        var q = this.clone(Web_1, \"createDefaultAssociatedGroups(userLogin=@u,userLogin2=@v,groupNameSeed=@s)\");\r\n        q.query.set(\"@u\", \"'\" + encodeURIComponent(siteOwner || \"\") + \"'\");\r\n        q.query.set(\"@v\", \"'\" + encodeURIComponent(siteOwner2 || \"\") + \"'\");\r\n        q.query.set(\"@s\", \"'\" + encodeURIComponent(groupNameSeed || \"\") + \"'\");\r\n        return q.postCore();\r\n    };\r\n    /**\r\n     * Gets hub site data for the current web.\r\n     *\r\n     * @param forceRefresh Default value is false. When false, the data is returned from the server's cache.\r\n     * When true, the cache is refreshed with the latest updates and then returned.\r\n     * Use this if you just made changes and need to see those changes right away.\r\n     */\r\n    Web.prototype.hubSiteData = function (forceRefresh) {\r\n        if (forceRefresh === void 0) { forceRefresh = false; }\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            return tslib_1.__generator(this, function (_a) {\r\n                return [2 /*return*/, this.clone(Web_1, \"hubSiteData(\" + forceRefresh + \")\").get().then(function (r) { return JSON.parse(r); })];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Applies theme updates from the parent hub site collection.\r\n     */\r\n    Web.prototype.syncHubSiteTheme = function () {\r\n        return this.clone(Web_1, \"syncHubSiteTheme\").postCore();\r\n    };\r\n    /**\r\n     * Retrieves a list of site design that have run on the current web\r\n     * @param siteDesignId (Optional) the site design ID, if not provided will return all site design runs\r\n     */\r\n    Web.prototype.getSiteDesignRuns = function (siteDesignId) {\r\n        return new SiteDesigns(this, \"\").getSiteDesignRun(undefined, siteDesignId);\r\n    };\r\n    /**\r\n     * Gets the site script syntax (JSON) for a specific web\r\n     * @param extractInfo configuration object to specify what to extract\r\n     */\r\n    Web.prototype.getSiteScript = function (extractInfo) {\r\n        return new SiteScripts(this, \"\").getSiteScriptFromWeb(undefined, extractInfo);\r\n    };\r\n    /**\r\n     * Adds a site design task on the current web to be invoked asynchronously.\r\n     * @param siteDesignId The ID of the site design to create a task for\r\n     */\r\n    Web.prototype.addSiteDesignTask = function (siteDesignId) {\r\n        return new SiteDesigns(this, \"\").addSiteDesignTaskToCurrentWeb(siteDesignId);\r\n    };\r\n    /**\r\n     * Retrieves the status of a site design that has been run or is still running\r\n     * @param runId the run ID\r\n     */\r\n    Web.prototype.getSiteDesignRunStatus = function (runId) {\r\n        return new SiteDesigns(this, \"\").getSiteDesignRunStatus(undefined, runId);\r\n    };\r\n    var Web_1;\r\n    Web = Web_1 = tslib_1.__decorate([\r\n        defaultPath(\"_api/web\")\r\n    ], Web);\r\n    return Web;\r\n}(SharePointQueryableShareableWeb));\r\nexport { Web };\r\n//# sourceMappingURL=webs.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryableInstance, defaultPath } from \"./sharepointqueryable\";\r\nimport { extend, jsS, hOP, getHashCode, objectDefinedNotNull, isArray } from \"@pnp/common\";\r\nimport { metadata } from \"./utils/metadata\";\r\nimport { CachingOptions } from \"@pnp/odata\";\r\nvar funcs = new Map([\r\n    [\"text\", \"Querytext\"],\r\n    [\"template\", \"QueryTemplate\"],\r\n    [\"sourceId\", \"SourceId\"],\r\n    [\"trimDuplicatesIncludeId\", \"\"],\r\n    [\"startRow\", \"\"],\r\n    [\"rowLimit\", \"\"],\r\n    [\"rankingModelId\", \"\"],\r\n    [\"rowsPerPage\", \"\"],\r\n    [\"selectProperties\", \"\"],\r\n    [\"culture\", \"\"],\r\n    [\"timeZoneId\", \"\"],\r\n    [\"refinementFilters\", \"\"],\r\n    [\"refiners\", \"\"],\r\n    [\"hiddenConstraints\", \"\"],\r\n    [\"sortList\", \"\"],\r\n    [\"timeout\", \"\"],\r\n    [\"hithighlightedProperties\", \"\"],\r\n    [\"clientType\", \"\"],\r\n    [\"personalizationData\", \"\"],\r\n    [\"resultsURL\", \"\"],\r\n    [\"queryTag\", \"\"],\r\n    [\"properties\", \"\"],\r\n    [\"queryTemplatePropertiesUrl\", \"\"],\r\n    [\"reorderingRules\", \"\"],\r\n    [\"hitHighlightedMultivaluePropertyLimit\", \"\"],\r\n    [\"collapseSpecification\", \"\"],\r\n    [\"uiLanguage\", \"\"],\r\n    [\"desiredSnippetLength\", \"\"],\r\n    [\"maxSnippetLength\", \"\"],\r\n    [\"summaryLength\", \"\"],\r\n]);\r\nvar props = new Map([]);\r\nfunction toPropCase(str) {\r\n    return str.replace(/^(.)/, function ($1) { return $1.toUpperCase(); });\r\n}\r\n/**\r\n * Creates a new instance of the SearchQueryBuilder\r\n *\r\n * @param queryText Initial query text\r\n * @param _query Any initial query configuration\r\n */\r\nexport function SearchQueryBuilder(queryText, _query) {\r\n    if (queryText === void 0) { queryText = \"\"; }\r\n    if (_query === void 0) { _query = {}; }\r\n    return new Proxy({\r\n        query: Object.assign({\r\n            Querytext: queryText,\r\n        }, _query),\r\n    }, {\r\n        get: function (self, propertyKey, proxy) {\r\n            var pk = propertyKey.toString();\r\n            if (pk === \"toSearchQuery\") {\r\n                return function () { return self.query; };\r\n            }\r\n            if (funcs.has(pk)) {\r\n                return function () {\r\n                    var value = [];\r\n                    for (var _i = 0; _i < arguments.length; _i++) {\r\n                        value[_i] = arguments[_i];\r\n                    }\r\n                    var mappedPk = funcs.get(pk);\r\n                    self.query[mappedPk.length > 0 ? mappedPk : toPropCase(pk)] = value.length > 1 ? value : value[0];\r\n                    return proxy;\r\n                };\r\n            }\r\n            var propKey = props.has(pk) ? props.get(pk) : toPropCase(pk);\r\n            self.query[propKey] = true;\r\n            return proxy;\r\n        },\r\n    });\r\n}\r\n/**\r\n * Describes the search API\r\n *\r\n */\r\nvar Search = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Search, _super);\r\n    function Search() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * @returns Promise\r\n     */\r\n    Search.prototype.execute = function (queryInit) {\r\n        var _this = this;\r\n        var query = this.parseQuery(queryInit);\r\n        var postBody = jsS({\r\n            request: extend(metadata(\"Microsoft.Office.Server.Search.REST.SearchRequest\"), Object.assign({}, query, {\r\n                HitHighlightedProperties: this.fixArrProp(query.HitHighlightedProperties),\r\n                Properties: this.fixArrProp(query.Properties),\r\n                RefinementFilters: this.fixArrProp(query.RefinementFilters),\r\n                ReorderingRules: this.fixArrProp(query.ReorderingRules),\r\n                SelectProperties: this.fixArrProp(query.SelectProperties),\r\n                SortList: this.fixArrProp(query.SortList),\r\n            })),\r\n        });\r\n        // if we are using caching with this search request, then we need to handle some work upfront to enable that\r\n        if (this._useCaching) {\r\n            // force use of the cache for this request if .usingCaching was called\r\n            this._forceCaching = true;\r\n            // because all the requests use the same url they would collide in the cache we use a special key\r\n            var cacheKey = \"PnPjs.SearchWithCaching(\" + getHashCode(postBody) + \")\";\r\n            if (objectDefinedNotNull(this._cachingOptions)) {\r\n                // if our key ends in the postquery url we overwrite it\r\n                if (/\\/_api\\/search\\/postquery$/i.test(this._cachingOptions.key)) {\r\n                    this._cachingOptions.key = cacheKey;\r\n                }\r\n            }\r\n            else {\r\n                this._cachingOptions = new CachingOptions(cacheKey);\r\n            }\r\n        }\r\n        return this.postCore({ body: postBody }).then(function (data) { return new SearchResults(data, _this.toUrl(), query); });\r\n    };\r\n    /**\r\n     * Fix array property\r\n     *\r\n     * @param prop property to fix for container struct\r\n     */\r\n    Search.prototype.fixArrProp = function (prop) {\r\n        if (typeof prop === \"undefined\") {\r\n            return ({ results: [] });\r\n        }\r\n        prop = isArray(prop) ? prop : [prop];\r\n        return hOP(prop, \"results\") ? prop : { results: prop };\r\n    };\r\n    /**\r\n     * Translates one of the query initializers into a SearchQuery instance\r\n     *\r\n     * @param query\r\n     */\r\n    Search.prototype.parseQuery = function (query) {\r\n        var finalQuery;\r\n        if (typeof query === \"string\") {\r\n            finalQuery = { Querytext: query };\r\n        }\r\n        else if (query.toSearchQuery) {\r\n            finalQuery = query.toSearchQuery();\r\n        }\r\n        else {\r\n            finalQuery = query;\r\n        }\r\n        return finalQuery;\r\n    };\r\n    Search = tslib_1.__decorate([\r\n        defaultPath(\"_api/search/postquery\")\r\n    ], Search);\r\n    return Search;\r\n}(SharePointQueryableInstance));\r\nexport { Search };\r\n/**\r\n * Describes the SearchResults class, which returns the formatted and raw version of the query response\r\n */\r\nvar SearchResults = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of the SearchResult class\r\n     *\r\n     */\r\n    function SearchResults(rawResponse, _url, _query, _raw, _primary) {\r\n        if (_raw === void 0) { _raw = null; }\r\n        if (_primary === void 0) { _primary = null; }\r\n        this._url = _url;\r\n        this._query = _query;\r\n        this._raw = _raw;\r\n        this._primary = _primary;\r\n        this._raw = rawResponse.postquery ? rawResponse.postquery : rawResponse;\r\n    }\r\n    Object.defineProperty(SearchResults.prototype, \"ElapsedTime\", {\r\n        get: function () {\r\n            return this.RawSearchResults.ElapsedTime;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchResults.prototype, \"RowCount\", {\r\n        get: function () {\r\n            return this.RawSearchResults.PrimaryQueryResult.RelevantResults.RowCount;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchResults.prototype, \"TotalRows\", {\r\n        get: function () {\r\n            return this.RawSearchResults.PrimaryQueryResult.RelevantResults.TotalRows;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchResults.prototype, \"TotalRowsIncludingDuplicates\", {\r\n        get: function () {\r\n            return this.RawSearchResults.PrimaryQueryResult.RelevantResults.TotalRowsIncludingDuplicates;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchResults.prototype, \"RawSearchResults\", {\r\n        get: function () {\r\n            return this._raw;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchResults.prototype, \"PrimarySearchResults\", {\r\n        get: function () {\r\n            if (this._primary === null) {\r\n                this._primary = this.formatSearchResults(this._raw.PrimaryQueryResult.RelevantResults.Table.Rows);\r\n            }\r\n            return this._primary;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets a page of results\r\n     *\r\n     * @param pageNumber Index of the page to return. Used to determine StartRow\r\n     * @param pageSize Optional, items per page (default = 10)\r\n     */\r\n    SearchResults.prototype.getPage = function (pageNumber, pageSize) {\r\n        // if we got all the available rows we don't have another page\r\n        if (this.TotalRows < this.RowCount) {\r\n            return Promise.resolve(null);\r\n        }\r\n        // if pageSize is supplied, then we use that regardless of any previous values\r\n        // otherwise get the previous RowLimit or default to 10\r\n        var rows = pageSize !== undefined ? pageSize : hOP(this._query, \"RowLimit\") ? this._query.RowLimit : 10;\r\n        var query = extend(this._query, {\r\n            RowLimit: rows,\r\n            StartRow: rows * (pageNumber - 1),\r\n        });\r\n        // we have reached the end\r\n        if (query.StartRow > this.TotalRows) {\r\n            return Promise.resolve(null);\r\n        }\r\n        var search = new Search(this._url, null);\r\n        return search.execute(query);\r\n    };\r\n    /**\r\n     * Formats a search results array\r\n     *\r\n     * @param rawResults The array to process\r\n     */\r\n    SearchResults.prototype.formatSearchResults = function (rawResults) {\r\n        var results = new Array();\r\n        var tempResults = rawResults.results ? rawResults.results : rawResults;\r\n        for (var _i = 0, tempResults_1 = tempResults; _i < tempResults_1.length; _i++) {\r\n            var tempResult = tempResults_1[_i];\r\n            var cells = tempResult.Cells.results ? tempResult.Cells.results : tempResult.Cells;\r\n            results.push(cells.reduce(function (res, cell) {\r\n                Object.defineProperty(res, cell.Key, {\r\n                    configurable: false,\r\n                    enumerable: true,\r\n                    value: cell.Value,\r\n                    writable: false,\r\n                });\r\n                return res;\r\n            }, {}));\r\n        }\r\n        return results;\r\n    };\r\n    return SearchResults;\r\n}());\r\nexport { SearchResults };\r\n/**\r\n * defines the SortDirection enum\r\n */\r\nexport var SortDirection;\r\n(function (SortDirection) {\r\n    SortDirection[SortDirection[\"Ascending\"] = 0] = \"Ascending\";\r\n    SortDirection[SortDirection[\"Descending\"] = 1] = \"Descending\";\r\n    SortDirection[SortDirection[\"FQLFormula\"] = 2] = \"FQLFormula\";\r\n})(SortDirection || (SortDirection = {}));\r\n/**\r\n * defines the ReorderingRuleMatchType  enum\r\n */\r\nexport var ReorderingRuleMatchType;\r\n(function (ReorderingRuleMatchType) {\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"ResultContainsKeyword\"] = 0] = \"ResultContainsKeyword\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"TitleContainsKeyword\"] = 1] = \"TitleContainsKeyword\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"TitleMatchesKeyword\"] = 2] = \"TitleMatchesKeyword\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"UrlStartsWith\"] = 3] = \"UrlStartsWith\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"UrlExactlyMatches\"] = 4] = \"UrlExactlyMatches\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"ContentTypeIs\"] = 5] = \"ContentTypeIs\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"FileExtensionMatches\"] = 6] = \"FileExtensionMatches\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"ResultHasTag\"] = 7] = \"ResultHasTag\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"ManualCondition\"] = 8] = \"ManualCondition\";\r\n})(ReorderingRuleMatchType || (ReorderingRuleMatchType = {}));\r\n/**\r\n * Specifies the type value for the property\r\n */\r\nexport var QueryPropertyValueType;\r\n(function (QueryPropertyValueType) {\r\n    QueryPropertyValueType[QueryPropertyValueType[\"None\"] = 0] = \"None\";\r\n    QueryPropertyValueType[QueryPropertyValueType[\"StringType\"] = 1] = \"StringType\";\r\n    QueryPropertyValueType[QueryPropertyValueType[\"Int32Type\"] = 2] = \"Int32Type\";\r\n    QueryPropertyValueType[QueryPropertyValueType[\"BooleanType\"] = 3] = \"BooleanType\";\r\n    QueryPropertyValueType[QueryPropertyValueType[\"StringArrayType\"] = 4] = \"StringArrayType\";\r\n    QueryPropertyValueType[QueryPropertyValueType[\"UnSupportedType\"] = 5] = \"UnSupportedType\";\r\n})(QueryPropertyValueType || (QueryPropertyValueType = {}));\r\nvar SearchBuiltInSourceId = /** @class */ (function () {\r\n    function SearchBuiltInSourceId() {\r\n    }\r\n    SearchBuiltInSourceId.Documents = \"e7ec8cee-ded8-43c9-beb5-436b54b31e84\";\r\n    SearchBuiltInSourceId.ItemsMatchingContentType = \"5dc9f503-801e-4ced-8a2c-5d1237132419\";\r\n    SearchBuiltInSourceId.ItemsMatchingTag = \"e1327b9c-2b8c-4b23-99c9-3730cb29c3f7\";\r\n    SearchBuiltInSourceId.ItemsRelatedToCurrentUser = \"48fec42e-4a92-48ce-8363-c2703a40e67d\";\r\n    SearchBuiltInSourceId.ItemsWithSameKeywordAsThisItem = \"5c069288-1d17-454a-8ac6-9c642a065f48\";\r\n    SearchBuiltInSourceId.LocalPeopleResults = \"b09a7990-05ea-4af9-81ef-edfab16c4e31\";\r\n    SearchBuiltInSourceId.LocalReportsAndDataResults = \"203fba36-2763-4060-9931-911ac8c0583b\";\r\n    SearchBuiltInSourceId.LocalSharePointResults = \"8413cd39-2156-4e00-b54d-11efd9abdb89\";\r\n    SearchBuiltInSourceId.LocalVideoResults = \"78b793ce-7956-4669-aa3b-451fc5defebf\";\r\n    SearchBuiltInSourceId.Pages = \"5e34578e-4d08-4edc-8bf3-002acf3cdbcc\";\r\n    SearchBuiltInSourceId.Pictures = \"38403c8c-3975-41a8-826e-717f2d41568a\";\r\n    SearchBuiltInSourceId.Popular = \"97c71db1-58ce-4891-8b64-585bc2326c12\";\r\n    SearchBuiltInSourceId.RecentlyChangedItems = \"ba63bbae-fa9c-42c0-b027-9a878f16557c\";\r\n    SearchBuiltInSourceId.RecommendedItems = \"ec675252-14fa-4fbe-84dd-8d098ed74181\";\r\n    SearchBuiltInSourceId.Wiki = \"9479bf85-e257-4318-b5a8-81a180f5faa1\";\r\n    return SearchBuiltInSourceId;\r\n}());\r\nexport { SearchBuiltInSourceId };\r\n//# sourceMappingURL=search.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryableInstance, defaultPath, } from \"./sharepointqueryable\";\r\nimport { jsS, hOP } from \"@pnp/common\";\r\nimport { metadata } from \"./utils/metadata\";\r\n/**\r\n * Exposes social following methods\r\n */\r\nvar SocialQuery = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SocialQuery, _super);\r\n    function SocialQuery() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    SocialQuery_1 = SocialQuery;\r\n    Object.defineProperty(SocialQuery.prototype, \"my\", {\r\n        get: function () {\r\n            return new MySocialQuery(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets a URI to a site that lists the current user's followed sites.\r\n     */\r\n    SocialQuery.prototype.getFollowedSitesUri = function () {\r\n        return this.clone(SocialQuery_1, \"FollowedSitesUri\").get().then(function (r) {\r\n            return r.FollowedSitesUri || r;\r\n        });\r\n    };\r\n    /**\r\n     * Gets a URI to a site that lists the current user's followed documents.\r\n     */\r\n    SocialQuery.prototype.getFollowedDocumentsUri = function () {\r\n        return this.clone(SocialQuery_1, \"FollowedDocumentsUri\").get().then(function (r) {\r\n            return r.FollowedDocumentsUri || r;\r\n        });\r\n    };\r\n    /**\r\n     * Makes the current user start following a user, document, site, or tag\r\n     *\r\n     * @param actorInfo The actor to start following\r\n     */\r\n    SocialQuery.prototype.follow = function (actorInfo) {\r\n        return this.clone(SocialQuery_1, \"follow\").postCore({ body: this.createSocialActorInfoRequestBody(actorInfo) });\r\n    };\r\n    /**\r\n     * Indicates whether the current user is following a specified user, document, site, or tag\r\n     *\r\n     * @param actorInfo The actor to find the following status for\r\n     */\r\n    SocialQuery.prototype.isFollowed = function (actorInfo) {\r\n        return this.clone(SocialQuery_1, \"isfollowed\").postCore({ body: this.createSocialActorInfoRequestBody(actorInfo) });\r\n    };\r\n    /**\r\n     * Makes the current user stop following a user, document, site, or tag\r\n     *\r\n     * @param actorInfo The actor to stop following\r\n     */\r\n    SocialQuery.prototype.stopFollowing = function (actorInfo) {\r\n        return this.clone(SocialQuery_1, \"stopfollowing\").postCore({ body: this.createSocialActorInfoRequestBody(actorInfo) });\r\n    };\r\n    /**\r\n     * Creates SocialActorInfo request body\r\n     *\r\n     * @param actorInfo The actor to create request body\r\n     */\r\n    SocialQuery.prototype.createSocialActorInfoRequestBody = function (actorInfo) {\r\n        return jsS({\r\n            \"actor\": Object.assign(metadata(\"SP.Social.SocialActorInfo\"), {\r\n                Id: null,\r\n            }, actorInfo),\r\n        });\r\n    };\r\n    var SocialQuery_1;\r\n    SocialQuery = SocialQuery_1 = tslib_1.__decorate([\r\n        defaultPath(\"_api/social.following\")\r\n    ], SocialQuery);\r\n    return SocialQuery;\r\n}(SharePointQueryableInstance));\r\nexport { SocialQuery };\r\nvar MySocialQuery = /** @class */ (function (_super) {\r\n    tslib_1.__extends(MySocialQuery, _super);\r\n    function MySocialQuery() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    MySocialQuery_1 = MySocialQuery;\r\n    /**\r\n     * Gets users, documents, sites, and tags that the current user is following.\r\n     *\r\n     * @param types Bitwise set of SocialActorTypes to retrieve\r\n     */\r\n    MySocialQuery.prototype.followed = function (types) {\r\n        return this.clone(MySocialQuery_1, \"followed(types=\" + types + \")\").get().then(function (r) {\r\n            return hOP(r, \"Followed\") ? r.Followed.results : r;\r\n        });\r\n    };\r\n    /**\r\n     * Gets the count of users, documents, sites, and tags that the current user is following.\r\n     *\r\n     * @param types Bitwise set of SocialActorTypes to retrieve\r\n     */\r\n    MySocialQuery.prototype.followedCount = function (types) {\r\n        return this.clone(MySocialQuery_1, \"followedcount(types=\" + types + \")\").get().then(function (r) {\r\n            return r.FollowedCount || r;\r\n        });\r\n    };\r\n    /**\r\n     * Gets the users who are following the current user.\r\n     */\r\n    MySocialQuery.prototype.followers = function () {\r\n        return this.clone(MySocialQuery_1, \"followers\").get().then(function (r) {\r\n            return hOP(r, \"Followers\") ? r.Followers.results : r;\r\n        });\r\n    };\r\n    /**\r\n     * Gets users who the current user might want to follow.\r\n     */\r\n    MySocialQuery.prototype.suggestions = function () {\r\n        return this.clone(MySocialQuery_1, \"suggestions\").get().then(function (r) {\r\n            return hOP(r, \"Suggestions\") ? r.Suggestions.results : r;\r\n        });\r\n    };\r\n    var MySocialQuery_1;\r\n    MySocialQuery = MySocialQuery_1 = tslib_1.__decorate([\r\n        defaultPath(\"my\")\r\n    ], MySocialQuery);\r\n    return MySocialQuery;\r\n}(SharePointQueryableInstance));\r\nexport { MySocialQuery };\r\n/**\r\n * Social actor type\r\n *\r\n */\r\nexport var SocialActorType;\r\n(function (SocialActorType) {\r\n    SocialActorType[SocialActorType[\"User\"] = 0] = \"User\";\r\n    SocialActorType[SocialActorType[\"Document\"] = 1] = \"Document\";\r\n    SocialActorType[SocialActorType[\"Site\"] = 2] = \"Site\";\r\n    SocialActorType[SocialActorType[\"Tag\"] = 3] = \"Tag\";\r\n})(SocialActorType || (SocialActorType = {}));\r\n/**\r\n * Social actor type\r\n *\r\n */\r\n/* tslint:disable:no-bitwise */\r\nexport var SocialActorTypes;\r\n(function (SocialActorTypes) {\r\n    SocialActorTypes[SocialActorTypes[\"None\"] = 0] = \"None\";\r\n    SocialActorTypes[SocialActorTypes[\"User\"] = 1] = \"User\";\r\n    SocialActorTypes[SocialActorTypes[\"Document\"] = 2] = \"Document\";\r\n    SocialActorTypes[SocialActorTypes[\"Site\"] = 4] = \"Site\";\r\n    SocialActorTypes[SocialActorTypes[\"Tag\"] = 8] = \"Tag\";\r\n    /**\r\n     * The set excludes documents and sites that do not have feeds.\r\n     */\r\n    SocialActorTypes[SocialActorTypes[\"ExcludeContentWithoutFeeds\"] = 268435456] = \"ExcludeContentWithoutFeeds\";\r\n    /**\r\n     * The set includes group sites\r\n     */\r\n    SocialActorTypes[SocialActorTypes[\"IncludeGroupsSites\"] = 536870912] = \"IncludeGroupsSites\";\r\n    /**\r\n     * The set includes only items created within the last 24 hours\r\n     */\r\n    SocialActorTypes[SocialActorTypes[\"WithinLast24Hours\"] = 1073741824] = \"WithinLast24Hours\";\r\n})(SocialActorTypes || (SocialActorTypes = {}));\r\n/* tslint:enable */\r\n/**\r\n * Result from following\r\n *\r\n */\r\nexport var SocialFollowResult;\r\n(function (SocialFollowResult) {\r\n    SocialFollowResult[SocialFollowResult[\"Ok\"] = 0] = \"Ok\";\r\n    SocialFollowResult[SocialFollowResult[\"AlreadyFollowing\"] = 1] = \"AlreadyFollowing\";\r\n    SocialFollowResult[SocialFollowResult[\"LimitReached\"] = 2] = \"LimitReached\";\r\n    SocialFollowResult[SocialFollowResult[\"InternalError\"] = 3] = \"InternalError\";\r\n})(SocialFollowResult || (SocialFollowResult = {}));\r\n/**\r\n * Specifies an exception or status code.\r\n */\r\nexport var SocialStatusCode;\r\n(function (SocialStatusCode) {\r\n    /**\r\n     * The operation completed successfully\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"OK\"] = 0] = \"OK\";\r\n    /**\r\n     * The request is invalid.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"InvalidRequest\"] = 1] = \"InvalidRequest\";\r\n    /**\r\n     *  The current user is not authorized to perform the operation.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"AccessDenied\"] = 2] = \"AccessDenied\";\r\n    /**\r\n     * The target of the operation was not found.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"ItemNotFound\"] = 3] = \"ItemNotFound\";\r\n    /**\r\n     * The operation is invalid for the target's current state.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"InvalidOperation\"] = 4] = \"InvalidOperation\";\r\n    /**\r\n     * The operation completed without modifying the target.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"ItemNotModified\"] = 5] = \"ItemNotModified\";\r\n    /**\r\n     * The operation failed because an internal error occurred.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"InternalError\"] = 6] = \"InternalError\";\r\n    /**\r\n     * The operation failed because the server could not access the distributed cache.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"CacheReadError\"] = 7] = \"CacheReadError\";\r\n    /**\r\n     * The operation succeeded but the server could not update the distributed cache.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"CacheUpdateError\"] = 8] = \"CacheUpdateError\";\r\n    /**\r\n     * No personal site exists for the current user, and no further information is available.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"PersonalSiteNotFound\"] = 9] = \"PersonalSiteNotFound\";\r\n    /**\r\n     * No personal site exists for the current user, and a previous attempt to create one failed.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"FailedToCreatePersonalSite\"] = 10] = \"FailedToCreatePersonalSite\";\r\n    /**\r\n     * No personal site exists for the current user, and a previous attempt to create one was not authorized.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"NotAuthorizedToCreatePersonalSite\"] = 11] = \"NotAuthorizedToCreatePersonalSite\";\r\n    /**\r\n     * No personal site exists for the current user, and no attempt should be made to create one.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"CannotCreatePersonalSite\"] = 12] = \"CannotCreatePersonalSite\";\r\n    /**\r\n     * The operation was rejected because an internal limit had been reached.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"LimitReached\"] = 13] = \"LimitReached\";\r\n    /**\r\n     * The operation failed because an error occurred during the processing of the specified attachment.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"AttachmentError\"] = 14] = \"AttachmentError\";\r\n    /**\r\n     * The operation succeeded with recoverable errors; the returned data is incomplete.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"PartialData\"] = 15] = \"PartialData\";\r\n    /**\r\n     * A required SharePoint feature is not enabled.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"FeatureDisabled\"] = 16] = \"FeatureDisabled\";\r\n    /**\r\n     * The site's storage quota has been exceeded.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"StorageQuotaExceeded\"] = 17] = \"StorageQuotaExceeded\";\r\n    /**\r\n     * The operation failed because the server could not access the database.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"DatabaseError\"] = 18] = \"DatabaseError\";\r\n})(SocialStatusCode || (SocialStatusCode = {}));\r\n//# sourceMappingURL=social.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryableInstance, defaultPath } from \"./sharepointqueryable\";\r\nimport { hOP } from \"@pnp/common\";\r\nvar SearchSuggest = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SearchSuggest, _super);\r\n    function SearchSuggest() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    SearchSuggest.prototype.execute = function (query) {\r\n        this.mapQueryToQueryString(query);\r\n        return this.get().then(function (response) {\r\n            var mapper = hOP(response, \"suggest\") ? function (s) { return response.suggest[s].results; } : function (s) { return response[s]; };\r\n            return {\r\n                PeopleNames: mapper(\"PeopleNames\"),\r\n                PersonalResults: mapper(\"PersonalResults\"),\r\n                Queries: mapper(\"Queries\"),\r\n            };\r\n        });\r\n    };\r\n    SearchSuggest.prototype.mapQueryToQueryString = function (query) {\r\n        var _this = this;\r\n        var setProp = function (q) { return function (checkProp) { return function (sp) {\r\n            if (hOP(q, checkProp)) {\r\n                _this.query.set(sp, q[checkProp].toString());\r\n            }\r\n        }; }; };\r\n        this.query.set(\"querytext\", \"'\" + query.querytext + \"'\");\r\n        var querySetter = setProp(query);\r\n        querySetter(\"count\")(\"inumberofquerysuggestions\");\r\n        querySetter(\"personalCount\")(\"inumberofresultsuggestions\");\r\n        querySetter(\"preQuery\")(\"fprequerysuggestions\");\r\n        querySetter(\"hitHighlighting\")(\"fhithighlighting\");\r\n        querySetter(\"capitalize\")(\"fcapitalizefirstletters\");\r\n        querySetter(\"culture\")(\"culture\");\r\n        querySetter(\"stemming\")(\"enablestemming\");\r\n        querySetter(\"includePeople\")(\"showpeoplenamesuggestions\");\r\n        querySetter(\"queryRules\")(\"enablequeryrules\");\r\n        querySetter(\"prefixMatch\")(\"fprefixmatchallterms\");\r\n    };\r\n    SearchSuggest = tslib_1.__decorate([\r\n        defaultPath(\"_api/search/suggest\")\r\n    ], SearchSuggest);\r\n    return SearchSuggest;\r\n}(SharePointQueryableInstance));\r\nexport { SearchSuggest };\r\n//# sourceMappingURL=searchsuggest.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryable, SharePointQueryableInstance, SharePointQueryableCollection, defaultPath } from \"./sharepointqueryable\";\r\nimport { extend, jsS } from \"@pnp/common\";\r\nimport { metadata } from \"./utils/metadata\";\r\nvar UserProfileQuery = /** @class */ (function (_super) {\r\n    tslib_1.__extends(UserProfileQuery, _super);\r\n    /**\r\n     * Creates a new instance of the UserProfileQuery class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this user profile query\r\n     */\r\n    function UserProfileQuery(baseUrl, path) {\r\n        if (path === void 0) { path = \"_api/sp.userprofiles.peoplemanager\"; }\r\n        var _this = _super.call(this, baseUrl, path) || this;\r\n        _this.clientPeoplePickerQuery = (new ClientPeoplePickerQuery(baseUrl)).configureFrom(_this);\r\n        _this.profileLoader = (new ProfileLoader(baseUrl)).configureFrom(_this);\r\n        return _this;\r\n    }\r\n    Object.defineProperty(UserProfileQuery.prototype, \"editProfileLink\", {\r\n        /**\r\n         * The url of the edit profile page for the current user\r\n         */\r\n        get: function () {\r\n            return this.clone(UserProfileQuery, \"EditProfileLink\").get();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(UserProfileQuery.prototype, \"isMyPeopleListPublic\", {\r\n        /**\r\n         * A boolean value that indicates whether the current user's \"People I'm Following\" list is public\r\n         */\r\n        get: function () {\r\n            return this.clone(UserProfileQuery, \"IsMyPeopleListPublic\").get();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * A boolean value that indicates whether the current user is being followed by the specified user\r\n     *\r\n     * @param loginName The account name of the user\r\n     */\r\n    UserProfileQuery.prototype.amIFollowedBy = function (loginName) {\r\n        var q = this.clone(UserProfileQuery, \"amifollowedby(@v)\");\r\n        q.query.set(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.get();\r\n    };\r\n    /**\r\n     * A boolean value that indicates whether the current user is following the specified user\r\n     *\r\n     * @param loginName The account name of the user\r\n     */\r\n    UserProfileQuery.prototype.amIFollowing = function (loginName) {\r\n        var q = this.clone(UserProfileQuery, \"amifollowing(@v)\");\r\n        q.query.set(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.get();\r\n    };\r\n    /**\r\n     * Gets tags that the current user is following\r\n     *\r\n     * @param maxCount The maximum number of tags to retrieve (default is 20)\r\n     */\r\n    UserProfileQuery.prototype.getFollowedTags = function (maxCount) {\r\n        if (maxCount === void 0) { maxCount = 20; }\r\n        return this.clone(UserProfileQuery, \"getfollowedtags(\" + maxCount + \")\").get();\r\n    };\r\n    /**\r\n     * Gets the people who are following the specified user\r\n     *\r\n     * @param loginName The account name of the user\r\n     */\r\n    UserProfileQuery.prototype.getFollowersFor = function (loginName) {\r\n        var q = this.clone(UserProfileQuery, \"getfollowersfor(@v)\");\r\n        q.query.set(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.get();\r\n    };\r\n    Object.defineProperty(UserProfileQuery.prototype, \"myFollowers\", {\r\n        /**\r\n         * Gets the people who are following the current user\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableCollection(this, \"getmyfollowers\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(UserProfileQuery.prototype, \"myProperties\", {\r\n        /**\r\n         * Gets user properties for the current user\r\n         *\r\n         */\r\n        get: function () {\r\n            return new UserProfileQuery(this, \"getmyproperties\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets the people who the specified user is following\r\n     *\r\n     * @param loginName The account name of the user.\r\n     */\r\n    UserProfileQuery.prototype.getPeopleFollowedBy = function (loginName) {\r\n        var q = this.clone(UserProfileQuery, \"getpeoplefollowedby(@v)\");\r\n        q.query.set(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.get();\r\n    };\r\n    /**\r\n     * Gets user properties for the specified user.\r\n     *\r\n     * @param loginName The account name of the user.\r\n     */\r\n    UserProfileQuery.prototype.getPropertiesFor = function (loginName) {\r\n        var q = this.clone(UserProfileQuery, \"getpropertiesfor(@v)\");\r\n        q.query.set(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.get();\r\n    };\r\n    Object.defineProperty(UserProfileQuery.prototype, \"trendingTags\", {\r\n        /**\r\n         * Gets the 20 most popular hash tags over the past week, sorted so that the most popular tag appears first\r\n         *\r\n         */\r\n        get: function () {\r\n            var q = this.clone(UserProfileQuery, null);\r\n            q.concat(\".gettrendingtags\");\r\n            return q.get();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets the specified user profile property for the specified user\r\n     *\r\n     * @param loginName The account name of the user\r\n     * @param propertyName The case-sensitive name of the property to get\r\n     */\r\n    UserProfileQuery.prototype.getUserProfilePropertyFor = function (loginName, propertyName) {\r\n        var q = this.clone(UserProfileQuery, \"getuserprofilepropertyfor(accountname=@v, propertyname='\" + propertyName + \"')\");\r\n        q.query.set(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.get();\r\n    };\r\n    /**\r\n     * Removes the specified user from the user's list of suggested people to follow\r\n     *\r\n     * @param loginName The account name of the user\r\n     */\r\n    UserProfileQuery.prototype.hideSuggestion = function (loginName) {\r\n        var q = this.clone(UserProfileQuery, \"hidesuggestion(@v)\");\r\n        q.query.set(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.postCore();\r\n    };\r\n    /**\r\n     * A boolean values that indicates whether the first user is following the second user\r\n     *\r\n     * @param follower The account name of the user who might be following the followee\r\n     * @param followee The account name of the user who might be followed by the follower\r\n     */\r\n    UserProfileQuery.prototype.isFollowing = function (follower, followee) {\r\n        var q = this.clone(UserProfileQuery, null);\r\n        q.concat(\".isfollowing(possiblefolloweraccountname=@v, possiblefolloweeaccountname=@y)\");\r\n        q.query.set(\"@v\", \"'\" + encodeURIComponent(follower) + \"'\");\r\n        q.query.set(\"@y\", \"'\" + encodeURIComponent(followee) + \"'\");\r\n        return q.get();\r\n    };\r\n    /**\r\n     * Uploads and sets the user profile picture (Users can upload a picture to their own profile only). Not supported for batching.\r\n     *\r\n     * @param profilePicSource Blob data representing the user's picture in BMP, JPEG, or PNG format of up to 4.76MB\r\n     */\r\n    UserProfileQuery.prototype.setMyProfilePic = function (profilePicSource) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            var buffer = null;\r\n            var reader = new FileReader();\r\n            reader.onload = function (e) { return buffer = e.target.result; };\r\n            reader.readAsArrayBuffer(profilePicSource);\r\n            var request = new UserProfileQuery(_this, \"setmyprofilepicture\");\r\n            request.postCore({\r\n                body: String.fromCharCode.apply(null, new Uint16Array(buffer)),\r\n            }).then(function (_) { return resolve(); }).catch(function (e) { return reject(e); });\r\n        });\r\n    };\r\n    /**\r\n     * Sets single value User Profile property\r\n     *\r\n     * @param accountName The account name of the user\r\n     * @param propertyName Property name\r\n     * @param propertyValue Property value\r\n     */\r\n    UserProfileQuery.prototype.setSingleValueProfileProperty = function (accountName, propertyName, propertyValue) {\r\n        var postBody = jsS({\r\n            accountName: accountName,\r\n            propertyName: propertyName,\r\n            propertyValue: propertyValue,\r\n        });\r\n        return this.clone(UserProfileQuery, \"SetSingleValueProfileProperty\")\r\n            .postCore({ body: postBody });\r\n    };\r\n    /**\r\n     * Sets multi valued User Profile property\r\n     *\r\n     * @param accountName The account name of the user\r\n     * @param propertyName Property name\r\n     * @param propertyValues Property values\r\n     */\r\n    UserProfileQuery.prototype.setMultiValuedProfileProperty = function (accountName, propertyName, propertyValues) {\r\n        var postBody = jsS({\r\n            accountName: accountName,\r\n            propertyName: propertyName,\r\n            propertyValues: propertyValues,\r\n        });\r\n        return this.clone(UserProfileQuery, \"SetMultiValuedProfileProperty\")\r\n            .postCore({ body: postBody });\r\n    };\r\n    /**\r\n     * Provisions one or more users' personal sites. (My Site administrator on SharePoint Online only)\r\n     *\r\n     * @param emails The email addresses of the users to provision sites for\r\n     */\r\n    UserProfileQuery.prototype.createPersonalSiteEnqueueBulk = function () {\r\n        var emails = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            emails[_i] = arguments[_i];\r\n        }\r\n        return this.profileLoader.createPersonalSiteEnqueueBulk(emails);\r\n    };\r\n    Object.defineProperty(UserProfileQuery.prototype, \"ownerUserProfile\", {\r\n        /**\r\n         * Gets the user profile of the site owner\r\n         *\r\n         */\r\n        get: function () {\r\n            return this.profileLoader.ownerUserProfile;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(UserProfileQuery.prototype, \"userProfile\", {\r\n        /**\r\n         * Gets the user profile for the current user\r\n         */\r\n        get: function () {\r\n            return this.profileLoader.userProfile;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Enqueues creating a personal site for this user, which can be used to share documents, web pages, and other files\r\n     *\r\n     * @param interactiveRequest true if interactively (web) initiated request, or false (default) if non-interactively (client) initiated request\r\n     */\r\n    UserProfileQuery.prototype.createPersonalSite = function (interactiveRequest) {\r\n        if (interactiveRequest === void 0) { interactiveRequest = false; }\r\n        return this.profileLoader.createPersonalSite(interactiveRequest);\r\n    };\r\n    /**\r\n     * Sets the privacy settings for this profile\r\n     *\r\n     * @param share true to make all social data public; false to make all social data private\r\n     */\r\n    UserProfileQuery.prototype.shareAllSocialData = function (share) {\r\n        return this.profileLoader.shareAllSocialData(share);\r\n    };\r\n    /**\r\n     * Resolves user or group using specified query parameters\r\n     *\r\n     * @param queryParams The query parameters used to perform resolve\r\n     */\r\n    UserProfileQuery.prototype.clientPeoplePickerResolveUser = function (queryParams) {\r\n        return this.clientPeoplePickerQuery.clientPeoplePickerResolveUser(queryParams);\r\n    };\r\n    /**\r\n     * Searches for users or groups using specified query parameters\r\n     *\r\n     * @param queryParams The query parameters used to perform search\r\n     */\r\n    UserProfileQuery.prototype.clientPeoplePickerSearchUser = function (queryParams) {\r\n        return this.clientPeoplePickerQuery.clientPeoplePickerSearchUser(queryParams);\r\n    };\r\n    return UserProfileQuery;\r\n}(SharePointQueryableInstance));\r\nexport { UserProfileQuery };\r\nvar ProfileLoader = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ProfileLoader, _super);\r\n    function ProfileLoader() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    ProfileLoader_1 = ProfileLoader;\r\n    /**\r\n     * Provisions one or more users' personal sites. (My Site administrator on SharePoint Online only) Doesn't support batching\r\n     *\r\n     * @param emails The email addresses of the users to provision sites for\r\n     */\r\n    ProfileLoader.prototype.createPersonalSiteEnqueueBulk = function (emails) {\r\n        return this.clone(ProfileLoader_1, \"createpersonalsiteenqueuebulk\", false).postCore({\r\n            body: jsS({ \"emailIDs\": emails }),\r\n        });\r\n    };\r\n    Object.defineProperty(ProfileLoader.prototype, \"ownerUserProfile\", {\r\n        /**\r\n         * Gets the user profile of the site owner.\r\n         *\r\n         */\r\n        get: function () {\r\n            var q = this.getParent(ProfileLoader_1, this.parentUrl, \"_api/sp.userprofiles.profileloader.getowneruserprofile\");\r\n            if (this.hasBatch) {\r\n                q = q.inBatch(this.batch);\r\n            }\r\n            return q.postCore();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ProfileLoader.prototype, \"userProfile\", {\r\n        /**\r\n         * Gets the user profile of the current user.\r\n         *\r\n         */\r\n        get: function () {\r\n            return this.clone(ProfileLoader_1, \"getuserprofile\").postCore();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Enqueues creating a personal site for this user, which can be used to share documents, web pages, and other files.\r\n     *\r\n     * @param interactiveRequest true if interactively (web) initiated request, or false (default) if non-interactively (client) initiated request\r\n     */\r\n    ProfileLoader.prototype.createPersonalSite = function (interactiveRequest) {\r\n        if (interactiveRequest === void 0) { interactiveRequest = false; }\r\n        return this.clone(ProfileLoader_1, \"getuserprofile/createpersonalsiteenque(\" + interactiveRequest + \")\").postCore();\r\n    };\r\n    /**\r\n     * Sets the privacy settings for this profile\r\n     *\r\n     * @param share true to make all social data public; false to make all social data private.\r\n     */\r\n    ProfileLoader.prototype.shareAllSocialData = function (share) {\r\n        return this.clone(ProfileLoader_1, \"getuserprofile/shareallsocialdata(\" + share + \")\").postCore();\r\n    };\r\n    var ProfileLoader_1;\r\n    ProfileLoader = ProfileLoader_1 = tslib_1.__decorate([\r\n        defaultPath(\"_api/sp.userprofiles.profileloader.getprofileloader\")\r\n    ], ProfileLoader);\r\n    return ProfileLoader;\r\n}(SharePointQueryable));\r\nvar ClientPeoplePickerQuery = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ClientPeoplePickerQuery, _super);\r\n    function ClientPeoplePickerQuery() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    ClientPeoplePickerQuery_1 = ClientPeoplePickerQuery;\r\n    /**\r\n     * Resolves user or group using specified query parameters\r\n     *\r\n     * @param queryParams The query parameters used to perform resolve\r\n     */\r\n    ClientPeoplePickerQuery.prototype.clientPeoplePickerResolveUser = function (queryParams) {\r\n        var q = this.clone(ClientPeoplePickerQuery_1, null);\r\n        q.concat(\".clientpeoplepickerresolveuser\");\r\n        return q.postCore({\r\n            body: this.createClientPeoplePickerQueryParametersRequestBody(queryParams),\r\n        })\r\n            .then(function (res) {\r\n            if (typeof res === \"object\") {\r\n                return res.ClientPeoplePickerResolveUser;\r\n            }\r\n            return res;\r\n        })\r\n            .then(JSON.parse);\r\n    };\r\n    /**\r\n     * Searches for users or groups using specified query parameters\r\n     *\r\n     * @param queryParams The query parameters used to perform search\r\n     */\r\n    ClientPeoplePickerQuery.prototype.clientPeoplePickerSearchUser = function (queryParams) {\r\n        var q = this.clone(ClientPeoplePickerQuery_1, null);\r\n        q.concat(\".clientpeoplepickersearchuser\");\r\n        return q.postCore({\r\n            body: this.createClientPeoplePickerQueryParametersRequestBody(queryParams),\r\n        })\r\n            .then(function (res) {\r\n            if (typeof res === \"object\") {\r\n                return res.ClientPeoplePickerSearchUser;\r\n            }\r\n            return res;\r\n        })\r\n            .then(JSON.parse);\r\n    };\r\n    /**\r\n     * Creates ClientPeoplePickerQueryParameters request body\r\n     *\r\n     * @param queryParams The query parameters to create request body\r\n     */\r\n    ClientPeoplePickerQuery.prototype.createClientPeoplePickerQueryParametersRequestBody = function (queryParams) {\r\n        return jsS({\r\n            \"queryParams\": extend(metadata(\"SP.UI.ApplicationPages.ClientPeoplePickerQueryParameters\"), queryParams),\r\n        });\r\n    };\r\n    var ClientPeoplePickerQuery_1;\r\n    ClientPeoplePickerQuery = ClientPeoplePickerQuery_1 = tslib_1.__decorate([\r\n        defaultPath(\"_api/sp.ui.applicationpages.clientpeoplepickerwebserviceinterface\")\r\n    ], ClientPeoplePickerQuery);\r\n    return ClientPeoplePickerQuery;\r\n}(SharePointQueryable));\r\n//# sourceMappingURL=userprofiles.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryable } from \"./sharepointqueryable\";\r\nimport { extend, jsS, hOP } from \"@pnp/common\";\r\nimport { File } from \"./files\";\r\nimport { odataUrlFrom } from \"./odata\";\r\nimport { metadata } from \"./utils/metadata\";\r\n/**\r\n * Allows for calling of the static SP.Utilities.Utility methods by supplying the method name\r\n */\r\nvar UtilityMethod = /** @class */ (function (_super) {\r\n    tslib_1.__extends(UtilityMethod, _super);\r\n    /**\r\n     * Creates a new instance of the Utility method class\r\n     *\r\n     * @param baseUrl The parent url provider\r\n     * @param methodName The static method name to call on the utility class\r\n     */\r\n    function UtilityMethod(baseUrl, methodName) {\r\n        return _super.call(this, UtilityMethod.getBaseUrl(baseUrl), \"_api/SP.Utilities.Utility.\" + methodName) || this;\r\n    }\r\n    UtilityMethod.getBaseUrl = function (candidate) {\r\n        if (typeof candidate === \"string\") {\r\n            return candidate;\r\n        }\r\n        var c = candidate;\r\n        var url = c.toUrl();\r\n        var index = url.indexOf(\"_api/\");\r\n        if (index < 0) {\r\n            return url;\r\n        }\r\n        return url.substr(0, index);\r\n    };\r\n    UtilityMethod.prototype.excute = function (props) {\r\n        return this.postCore({\r\n            body: jsS(props),\r\n        });\r\n    };\r\n    /**\r\n     * Sends an email based on the supplied properties\r\n     *\r\n     * @param props The properties of the email to send\r\n     */\r\n    UtilityMethod.prototype.sendEmail = function (props) {\r\n        var params = {\r\n            properties: extend(metadata(\"SP.Utilities.EmailProperties\"), {\r\n                Body: props.Body,\r\n                From: props.From,\r\n                Subject: props.Subject,\r\n            }),\r\n        };\r\n        if (props.To && props.To.length > 0) {\r\n            params.properties = extend(params.properties, {\r\n                To: { results: props.To },\r\n            });\r\n        }\r\n        if (props.CC && props.CC.length > 0) {\r\n            params.properties = extend(params.properties, {\r\n                CC: { results: props.CC },\r\n            });\r\n        }\r\n        if (props.BCC && props.BCC.length > 0) {\r\n            params.properties = extend(params.properties, {\r\n                BCC: { results: props.BCC },\r\n            });\r\n        }\r\n        if (props.AdditionalHeaders) {\r\n            params.properties = extend(params.properties, {\r\n                AdditionalHeaders: props.AdditionalHeaders,\r\n            });\r\n        }\r\n        return this.clone(UtilityMethod, \"SendEmail\", true).excute(params);\r\n    };\r\n    UtilityMethod.prototype.getCurrentUserEmailAddresses = function () {\r\n        return this.clone(UtilityMethod, \"GetCurrentUserEmailAddresses\", true).excute({}).then(function (r) {\r\n            return hOP(r, \"GetCurrentUserEmailAddresses\") ? r.GetCurrentUserEmailAddresses : r;\r\n        });\r\n    };\r\n    UtilityMethod.prototype.resolvePrincipal = function (input, scopes, sources, inputIsEmailOnly, addToUserInfoList, matchUserInfoList) {\r\n        if (matchUserInfoList === void 0) { matchUserInfoList = false; }\r\n        var params = {\r\n            addToUserInfoList: addToUserInfoList,\r\n            input: input,\r\n            inputIsEmailOnly: inputIsEmailOnly,\r\n            matchUserInfoList: matchUserInfoList,\r\n            scopes: scopes,\r\n            sources: sources,\r\n        };\r\n        return this.clone(UtilityMethod, \"ResolvePrincipalInCurrentContext\", true).excute(params).then(function (r) {\r\n            return hOP(r, \"ResolvePrincipalInCurrentContext\") ? r.ResolvePrincipalInCurrentContext : r;\r\n        });\r\n    };\r\n    UtilityMethod.prototype.searchPrincipals = function (input, scopes, sources, groupName, maxCount) {\r\n        var params = {\r\n            groupName: groupName,\r\n            input: input,\r\n            maxCount: maxCount,\r\n            scopes: scopes,\r\n            sources: sources,\r\n        };\r\n        return this.clone(UtilityMethod, \"SearchPrincipalsUsingContextWeb\", true).excute(params).then(function (r) {\r\n            return hOP(r, \"SearchPrincipalsUsingContextWeb\") ? r.SearchPrincipalsUsingContextWeb : r;\r\n        });\r\n    };\r\n    UtilityMethod.prototype.createEmailBodyForInvitation = function (pageAddress) {\r\n        var params = {\r\n            pageAddress: pageAddress,\r\n        };\r\n        return this.clone(UtilityMethod, \"CreateEmailBodyForInvitation\", true).excute(params).then(function (r) {\r\n            return hOP(r, \"CreateEmailBodyForInvitation\") ? r.CreateEmailBodyForInvitation : r;\r\n        });\r\n    };\r\n    UtilityMethod.prototype.expandGroupsToPrincipals = function (inputs, maxCount) {\r\n        if (maxCount === void 0) { maxCount = 30; }\r\n        var params = {\r\n            inputs: inputs,\r\n            maxCount: maxCount,\r\n        };\r\n        return this.clone(UtilityMethod, \"ExpandGroupsToPrincipals\", true).excute(params).then(function (r) {\r\n            return hOP(r, \"ExpandGroupsToPrincipals\") ? r.ExpandGroupsToPrincipals : r;\r\n        });\r\n    };\r\n    UtilityMethod.prototype.createWikiPage = function (info) {\r\n        return this.clone(UtilityMethod, \"CreateWikiPageInContextWeb\", true).excute({\r\n            parameters: info,\r\n        }).then(function (r) {\r\n            return {\r\n                data: hOP(r, \"CreateWikiPageInContextWeb\") ? r.CreateWikiPageInContextWeb : r,\r\n                file: new File(odataUrlFrom(r)),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Checks if file or folder name contains invalid characters\r\n     *\r\n     * @param input File or folder name to check\r\n     * @param onPremise Set to true for SharePoint On-Premise\r\n     * @returns True if contains invalid chars, false otherwise\r\n     */\r\n    UtilityMethod.prototype.containsInvalidFileFolderChars = function (input, onPremise) {\r\n        if (onPremise === void 0) { onPremise = false; }\r\n        if (onPremise) {\r\n            return UtilityMethod.InvalidFileFolderNameCharsOnPremiseRegex.test(input);\r\n        }\r\n        else {\r\n            return UtilityMethod.InvalidFileFolderNameCharsOnlineRegex.test(input);\r\n        }\r\n    };\r\n    /**\r\n     * Removes invalid characters from file or folder name\r\n     *\r\n     * @param input File or folder name\r\n     * @param replacer Value that will replace invalid characters\r\n     * @param onPremise Set to true for SharePoint On-Premise\r\n     * @returns File or folder name with replaced invalid characters\r\n     */\r\n    UtilityMethod.prototype.stripInvalidFileFolderChars = function (input, replacer, onPremise) {\r\n        if (replacer === void 0) { replacer = \"\"; }\r\n        if (onPremise === void 0) { onPremise = false; }\r\n        if (onPremise) {\r\n            return input.replace(UtilityMethod.InvalidFileFolderNameCharsOnPremiseRegex, replacer);\r\n        }\r\n        else {\r\n            return input.replace(UtilityMethod.InvalidFileFolderNameCharsOnlineRegex, replacer);\r\n        }\r\n    };\r\n    UtilityMethod.InvalidFileFolderNameCharsOnlineRegex = /[\"*:<>?/\\\\|\\x00-\\x1f\\x7f-\\x9f]/g;\r\n    UtilityMethod.InvalidFileFolderNameCharsOnPremiseRegex = /[\"#%*:<>?/\\\\|\\x00-\\x1f\\x7f-\\x9f]/g;\r\n    return UtilityMethod;\r\n}(SharePointQueryable));\r\nexport { UtilityMethod };\r\n//# sourceMappingURL=utilities.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryableInstance, SharePointQueryableCollection, defaultPath } from \"./sharepointqueryable\";\r\n/**\r\n * Describes a collection of Hub Sites\r\n *\r\n */\r\nvar HubSites = /** @class */ (function (_super) {\r\n    tslib_1.__extends(HubSites, _super);\r\n    function HubSites() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets a Hub Site from the collection by id\r\n     *\r\n     * @param id The Id of the Hub Site\r\n     */\r\n    HubSites.prototype.getById = function (id) {\r\n        return new HubSite(this, \"GetById?hubSiteId='\" + id + \"'\");\r\n    };\r\n    HubSites = tslib_1.__decorate([\r\n        defaultPath(\"_api/hubsites\")\r\n    ], HubSites);\r\n    return HubSites;\r\n}(SharePointQueryableCollection));\r\nexport { HubSites };\r\nvar HubSite = /** @class */ (function (_super) {\r\n    tslib_1.__extends(HubSite, _super);\r\n    function HubSite() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    return HubSite;\r\n}(SharePointQueryableInstance));\r\nexport { HubSite };\r\n//# sourceMappingURL=hubsites.js.map","import { Search } from \"./search\";\r\nimport { SearchSuggest } from \"./searchsuggest\";\r\nimport { Site } from \"./site\";\r\nimport { Web } from \"./webs\";\r\nimport { UserProfileQuery } from \"./userprofiles\";\r\nimport { NavigationService } from \"./navigation\";\r\nimport { SocialQuery } from \"./social\";\r\nimport { SiteScripts } from \"./sitescripts\";\r\nimport { SiteDesigns } from \"./sitedesigns\";\r\nimport { UtilityMethod } from \"./utilities\";\r\nimport { setup as _setup, } from \"./config/splibconfig\";\r\nimport { HubSites } from \"./hubsites\";\r\n/**\r\n * Root of the SharePoint REST module\r\n */\r\nvar SPRest = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of the SPRest class\r\n     *\r\n     * @param options Additional options\r\n     * @param baseUrl A string that should form the base part of the url\r\n     */\r\n    function SPRest(_options, _baseUrl) {\r\n        if (_options === void 0) { _options = {}; }\r\n        if (_baseUrl === void 0) { _baseUrl = \"\"; }\r\n        this._options = _options;\r\n        this._baseUrl = _baseUrl;\r\n    }\r\n    /**\r\n     * Configures instance with additional options and baseUrl.\r\n     * Provided configuration used by other objects in a chain\r\n     *\r\n     * @param options Additional options\r\n     * @param baseUrl A string that should form the base part of the url\r\n     */\r\n    SPRest.prototype.configure = function (options, baseUrl) {\r\n        if (baseUrl === void 0) { baseUrl = \"\"; }\r\n        return new SPRest(options, baseUrl);\r\n    };\r\n    /**\r\n     * Global SharePoint configuration options\r\n     *\r\n     * @param config The SharePoint configuration to apply\r\n     */\r\n    SPRest.prototype.setup = function (config) {\r\n        _setup(config);\r\n    };\r\n    /**\r\n     * Executes a search against this web context\r\n     *\r\n     * @param query The SearchQuery definition\r\n     */\r\n    SPRest.prototype.searchSuggest = function (query) {\r\n        var finalQuery;\r\n        if (typeof query === \"string\") {\r\n            finalQuery = { querytext: query };\r\n        }\r\n        else {\r\n            finalQuery = query;\r\n        }\r\n        return this.create(SearchSuggest).execute(finalQuery);\r\n    };\r\n    /**\r\n     * Executes a search against this web context\r\n     *\r\n     * @param query The SearchQuery definition\r\n     */\r\n    SPRest.prototype.search = function (query) {\r\n        return this.create(Search).execute(query);\r\n    };\r\n    /**\r\n     * Executes the provided search query, caching the results\r\n     *\r\n     * @param query The SearchQuery definition\r\n     * @param options The set of caching options used to store the results\r\n     */\r\n    SPRest.prototype.searchWithCaching = function (query, options) {\r\n        return this.create(Search).usingCaching(options).execute(query);\r\n    };\r\n    Object.defineProperty(SPRest.prototype, \"site\", {\r\n        /**\r\n         * Begins a site collection scoped REST request\r\n         *\r\n         */\r\n        get: function () {\r\n            return this.create(Site);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SPRest.prototype, \"web\", {\r\n        /**\r\n         * Begins a web scoped REST request\r\n         *\r\n         */\r\n        get: function () {\r\n            return this.create(Web);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SPRest.prototype, \"profiles\", {\r\n        /**\r\n         * Access to user profile methods\r\n         *\r\n         */\r\n        get: function () {\r\n            return this.create(UserProfileQuery);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SPRest.prototype, \"social\", {\r\n        /**\r\n         * Access to social methods\r\n         */\r\n        get: function () {\r\n            return this.create(SocialQuery);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SPRest.prototype, \"navigation\", {\r\n        /**\r\n         * Access to the site collection level navigation service\r\n         */\r\n        get: function () {\r\n            return this.create(NavigationService);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Creates a new batch object for use with the SharePointQueryable.addToBatch method\r\n     *\r\n     */\r\n    SPRest.prototype.createBatch = function () {\r\n        return this.web.createBatch();\r\n    };\r\n    Object.defineProperty(SPRest.prototype, \"utility\", {\r\n        /**\r\n         * Static utilities methods from SP.Utilities.Utility\r\n         */\r\n        get: function () {\r\n            return this.create(UtilityMethod, \"\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SPRest.prototype, \"siteScripts\", {\r\n        /**\r\n         * Access to sitescripts methods\r\n         */\r\n        get: function () {\r\n            return this.create(SiteScripts, \"\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SPRest.prototype, \"siteDesigns\", {\r\n        /**\r\n         * Access to sitedesigns methods\r\n         */\r\n        get: function () {\r\n            return this.create(SiteDesigns, \"\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SPRest.prototype, \"hubSites\", {\r\n        /**\r\n         * Access to Hub Site methods\r\n         */\r\n        get: function () {\r\n            return this.create(HubSites);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets the Web instance representing the tenant app catalog web\r\n     */\r\n    SPRest.prototype.getTenantAppCatalogWeb = function () {\r\n        var _this = this;\r\n        return this.create(Web, \"_api/SP_TenantSettings_Current\").get().then(function (r) {\r\n            return (new Web(r.CorporateCatalogUrl)).configure(_this._options);\r\n        });\r\n    };\r\n    /**\r\n     * Handles creating and configuring the objects returned from this class\r\n     *\r\n     * @param fm The factory method used to create the instance\r\n     * @param path Optional additional path information to pass to the factory method\r\n     */\r\n    SPRest.prototype.create = function (fm, path) {\r\n        return new fm(this._baseUrl, path).configure(this._options);\r\n    };\r\n    return SPRest;\r\n}());\r\nexport { SPRest };\r\nexport var sp = new SPRest();\r\n//# sourceMappingURL=rest.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SPRest, Web, Site, } from \"@pnp/sp\";\r\nimport { isUrlAbsolute, combine, } from \"@pnp/common\";\r\nvar SPRestAddIn = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SPRestAddIn, _super);\r\n    function SPRestAddIn() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Begins a cross-domain, host site scoped REST request, for use in add-in webs\r\n     *\r\n     * @param addInWebUrl The absolute url of the add-in web\r\n     * @param hostWebUrl The absolute url of the host web\r\n     */\r\n    SPRestAddIn.prototype.crossDomainSite = function (addInWebUrl, hostWebUrl) {\r\n        return this._cdImpl(Site, addInWebUrl, hostWebUrl, \"site\");\r\n    };\r\n    /**\r\n     * Begins a cross-domain, host web scoped REST request, for use in add-in webs\r\n     *\r\n     * @param addInWebUrl The absolute url of the add-in web\r\n     * @param hostWebUrl The absolute url of the host web\r\n     */\r\n    SPRestAddIn.prototype.crossDomainWeb = function (addInWebUrl, hostWebUrl) {\r\n        return this._cdImpl(Web, addInWebUrl, hostWebUrl, \"web\");\r\n    };\r\n    /**\r\n     * Implements the creation of cross domain REST urls\r\n     *\r\n     * @param factory The constructor of the object to create Site | Web\r\n     * @param addInWebUrl The absolute url of the add-in web\r\n     * @param hostWebUrl The absolute url of the host web\r\n     * @param urlPart String part to append to the url \"site\" | \"web\"\r\n     */\r\n    SPRestAddIn.prototype._cdImpl = function (factory, addInWebUrl, hostWebUrl, urlPart) {\r\n        if (!isUrlAbsolute(addInWebUrl)) {\r\n            throw Error(\"The addInWebUrl parameter must be an absolute url.\");\r\n        }\r\n        if (!isUrlAbsolute(hostWebUrl)) {\r\n            throw Error(\"The hostWebUrl parameter must be an absolute url.\");\r\n        }\r\n        var url = combine(addInWebUrl, \"_api/SP.AppContextSite(@target)\");\r\n        var instance = new factory(url, urlPart);\r\n        instance.query.set(\"@target\", \"'\" + encodeURIComponent(hostWebUrl) + \"'\");\r\n        return instance.configure(this._options);\r\n    };\r\n    return SPRestAddIn;\r\n}(SPRest));\r\nexport { SPRestAddIn };\r\nexport var sp = new SPRestAddIn();\r\n//# sourceMappingURL=sprestaddin.js.map","export * from \"./src/addinhelpers\";\r\n//# sourceMappingURL=index.js.map"],"sourceRoot":""}