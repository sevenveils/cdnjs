{"version":3,"sources":["webpack://VideojsWavesurfer/webpack/universalModuleDefinition","webpack://VideojsWavesurfer/webpack/bootstrap","webpack://VideojsWavesurfer/./node_modules/global/window.js","webpack://VideojsWavesurfer/(webpack)/buildin/global.js","webpack://VideojsWavesurfer/./src/css/videojs.wavesurfer.scss?b4fe","webpack://VideojsWavesurfer/./src/js/defaults.js","webpack://VideojsWavesurfer/./src/js/utils/format-time.js","webpack://VideojsWavesurfer/./src/js/utils/log.js","webpack://VideojsWavesurfer/./src/js/videojs.wavesurfer.js","webpack://VideojsWavesurfer/external \"videojs\"","webpack://VideojsWavesurfer/external \"WaveSurfer\""],"names":["pluginDefaultOptions","debug","msDisplayMax","formatTime","seconds","guide","s","Math","floor","m","h","gm","gh","ms","isNaN","Infinity","ERROR","WARN","log","args","logType","videojs","error","warn","Plugin","getPlugin","wavesurferClassName","Wavesurfer","player","options","addClass","mergeOptions","waveReady","waveFinished","liveMode","toString","parseFloat","textTracksEnabled","options_","tracks","length","src","WaveSurfer","microphone","undefined","onWaveError","one","initialize","bind","bigPlayButton","hide","usingNativeControls_","tech_","el_","controls","controlBar","show","style","display","progressControl","uiElements","forEach","element","remainingTimeDisplay","playToggle","on","onPlayToggle","mergedOptions","parseOptions","plugins","wavesurfer","surfer","create","onWaveFinish","surferReady","onWaveReady","surferProgress","onWaveProgress","surferSeek","onWaveSeek","setupPlaybackEvents","onVolumeChange","onScreenChange","muted","setVolume","fluid","drawer","wrapper","className","responsiveWave","util","debounce","onResizeChange","window","addEventListener","currentTimeDisplay","off","throttledUpdateContent","trackCurrentTime","startPlayers","surferOpts","rect","getBoundingClientRect","originalWidth","width","originalHeight","height","controlBarHeight","container","waveformHeight","playerHeight","splitChannels","loadingSpinner","load","peaks","enable","un","url","Blob","File","JSON","stringify","loadBlob","Array","isArray","ajaxOptions","responseType","xhr","ajax","data","e","target","status","contentEl","handlePlay","active","start","paused","pause","play","handlePause","setCurrentTime","destroy","stopTrackingCurrentTime","children","dispose","volume","format","quality","exportImage","deviceId","setSinkId","then","result","trigger","catch","err","currentTime","getCurrentTime","duration","getDuration","time","min","formattedTime_","lastChild","textContent","durationDisplay","setDuration","autoplay","loop","stop","once","removeClass","hasClass","isPlaying","fullscreenDelay","setInterval","isFullscreen","newWidth","newHeight","redrawWaveform","clearInterval","isDestroyed","params","createDrawer","drawBuffer","progress","backend","getPlayedPercents","VERSION","__VERSION__","registerPlugin"],"mappings":"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","file":"videojs.wavesurfer.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"videojs\"), require(\"WaveSurfer\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"VideojsWavesurfer\", [\"videojs\", \"WaveSurfer\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"VideojsWavesurfer\"] = factory(require(\"videojs\"), require(\"WaveSurfer\"));\n\telse\n\t\troot[\"VideojsWavesurfer\"] = factory(root[\"videojs\"], root[\"WaveSurfer\"]);\n})(window, function(__WEBPACK_EXTERNAL_MODULE_video_js__, __WEBPACK_EXTERNAL_MODULE_wavesurfer_js__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","var win;\n\nif (typeof window !== \"undefined\") {\n    win = window;\n} else if (typeof global !== \"undefined\") {\n    win = global;\n} else if (typeof self !== \"undefined\"){\n    win = self;\n} else {\n    win = {};\n}\n\nmodule.exports = win;\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","// extracted by mini-css-extract-plugin","/**\n * @file defaults.js\n * @since 2.0.0\n */\n\n// plugin defaults\nconst pluginDefaultOptions = {\n    // Display console log messages.\n    debug: false,\n    // msDisplayMax indicates the number of seconds that is\n    // considered the boundary value for displaying milliseconds\n    // in the time controls. An audio clip with a total length of\n    // 2 seconds and a msDisplayMax of 3 will use the format\n    // M:SS:MMM. Clips longer than msDisplayMax will be displayed\n    // as M:SS or HH:MM:SS.\n    msDisplayMax: 3\n};\n\nexport default pluginDefaultOptions;\n","/**\n * @file format-time.js\n * @since 2.0.0\n */\n\n/**\n * Format seconds as a time string, H:MM:SS, M:SS or M:SS:MMM.\n *\n * Supplying a guide (in seconds) will force a number of leading zeros\n * to cover the length of the guide.\n *\n * @param {number} seconds - Number of seconds to be turned into a\n *     string.\n * @param {number} guide - Number (in seconds) to model the string\n *     after.\n * @param {number} msDisplayMax - Number (in milliseconds) to model the string\n *     after.\n * @return {string} Time formatted as H:MM:SS, M:SS or M:SS:MMM, e.g.\n *     0:00:12.\n * @private\n */\nconst formatTime = function(seconds, guide, msDisplayMax) {\n    // Default to using seconds as guide\n    seconds = seconds < 0 ? 0 : seconds;\n    guide = guide || seconds;\n    let s = Math.floor(seconds % 60),\n        m = Math.floor(seconds / 60 % 60),\n        h = Math.floor(seconds / 3600),\n        gm = Math.floor(guide / 60 % 60),\n        gh = Math.floor(guide / 3600),\n        ms = Math.floor((seconds - s) * 1000);\n\n    // handle invalid times\n    if (isNaN(seconds) || seconds === Infinity) {\n        // '-' is false for all relational operators (e.g. <, >=) so this\n        // setting will add the minimum number of fields specified by the\n        // guide\n        h = m = s = ms = '-';\n    }\n\n    // Check if we need to show milliseconds\n    if (guide > 0 && guide < msDisplayMax) {\n        if (ms < 100) {\n            if (ms < 10) {\n                ms = '00' + ms;\n            } else {\n                ms = '0' + ms;\n            }\n        }\n        ms = ':' + ms;\n    } else {\n        ms = '';\n    }\n\n    // Check if we need to show hours\n    h = (h > 0 || gh > 0) ? h + ':' : '';\n\n    // If hours are showing, we may need to add a leading zero.\n    // Always show at least one digit of minutes.\n    m = (((h || gm >= 10) && m < 10) ? '0' + m : m) + ':';\n\n    // Check if leading zero is need for seconds\n    s = ((s < 10) ? '0' + s : s);\n\n    return h + m + s + ms;\n};\n\nexport default formatTime;\n","/**\n * @file log.js\n * @since 2.0.0\n */\n\nconst ERROR = 'error';\nconst WARN = 'warn';\n\n/**\n * Log message (if the debug option is enabled).\n *\n * @private\n * @param {Array} args - The arguments to be passed to the matching console\n *     method.\n * @param {string} logType - The name of the console method to use.\n * @param {boolean} debug - Whether or not the debug option is enabled or not.\n */\nconst log = function(args, logType, debug)\n{\n    if (debug === true) {\n        if (logType === ERROR) {\n            videojs.log.error(args);\n        } else if (logType === WARN) {\n            videojs.log.warn(args);\n        } else {\n            videojs.log(args);\n        }\n    }\n};\n\nexport default log;\n","/**\n * @file videojs.wavesurfer.js\n *\n * The main file for the videojs-wavesurfer project.\n * MIT license: https://github.com/collab-project/videojs-wavesurfer/blob/master/LICENSE\n */\n\nimport log from './utils/log';\nimport formatTime from './utils/format-time';\nimport pluginDefaultOptions from './defaults';\nimport window from 'global/window';\n\nimport videojs from 'video.js';\nimport WaveSurfer from 'wavesurfer.js';\n\nconst Plugin = videojs.getPlugin('plugin');\n\nconst wavesurferClassName = 'vjs-wavedisplay';\n\n/**\n * Draw a waveform for audio and video files in a video.js player.\n *\n * @class\n * @augments videojs.Plugin\n */\nclass Wavesurfer extends Plugin {\n    /**\n     * The constructor function for the class.\n     *\n     * @param {(videojs.Player|Object)} player - video.js Player object.\n     * @param {Object} options - Player options.\n     */\n    constructor(player, options) {\n        super(player, options);\n\n        // add plugin style\n        player.addClass('vjs-wavesurfer');\n\n        // parse options\n        options = videojs.mergeOptions(pluginDefaultOptions, options);\n        this.waveReady = false;\n        this.waveFinished = false;\n        this.liveMode = false;\n        this.debug = (options.debug.toString() === 'true');\n        this.msDisplayMax = parseFloat(options.msDisplayMax);\n        this.textTracksEnabled = (this.player.options_.tracks.length > 0);\n\n        // microphone plugin\n        if (options.src === 'live') {\n            // check if the wavesurfer.js microphone plugin can be enabled\n            if (WaveSurfer.microphone !== undefined) {\n                // enable audio input from a microphone\n                this.liveMode = true;\n                this.waveReady = true;\n            } else {\n                this.onWaveError('Could not find wavesurfer.js ' +\n                    'microphone plugin!');\n                return;\n            }\n        }\n\n        // wait until player ui is ready\n        this.player.one('ready', this.initialize.bind(this));\n    }\n\n    /**\n     * Player UI is ready: customize controls.\n     *\n     * @private\n     */\n    initialize() {\n        // hide big play button\n        this.player.bigPlayButton.hide();\n\n        // the native controls don't work for this UI so disable\n        // them no matter what\n        if (this.player.usingNativeControls_ === true) {\n            if (this.player.tech_.el_ !== undefined) {\n                this.player.tech_.el_.controls = false;\n            }\n        }\n\n        // controls\n        if (this.player.options_.controls === true) {\n            // make sure controlBar is showing\n            this.player.controlBar.show();\n            this.player.controlBar.el_.style.display = 'flex';\n\n            // progress control (if present) isn't used by this plugin\n            if (this.player.controlBar.progressControl !== undefined) {\n                this.player.controlBar.progressControl.hide();\n            }\n\n            // make sure time displays are visible\n            let uiElements = ['currentTimeDisplay', 'timeDivider', 'durationDisplay'];\n            uiElements.forEach((element) => {\n                // ignore and show when essential elements have been disabled\n                // by user\n                element = this.player.controlBar[element];\n                if (element !== undefined) {\n                    element.el_.style.display = 'block';\n                    element.show();\n                }\n            });\n            if (this.player.controlBar.remainingTimeDisplay !== undefined) {\n                this.player.controlBar.remainingTimeDisplay.hide();\n            }\n\n            if (this.player.controlBar.playToggle !== undefined) {\n                // handle play toggle interaction\n                this.player.controlBar.playToggle.on(['tap', 'click'],\n                    this.onPlayToggle.bind(this));\n\n                // disable play button until waveform is ready\n                // (except when in live mode)\n                if (!this.liveMode) {\n                    this.player.controlBar.playToggle.hide();\n                }\n            }\n        }\n\n        // wavesurfer.js setup\n        let mergedOptions = this.parseOptions(this.player.options_.plugins.wavesurfer);\n        this.surfer = WaveSurfer.create(mergedOptions);\n        this.surfer.on('error', this.onWaveError.bind(this));\n        this.surfer.on('finish', this.onWaveFinish.bind(this));\n        if (this.liveMode === true) {\n            // listen for wavesurfer.js microphone plugin events\n            this.surfer.microphone.on('deviceError', this.onWaveError.bind(this));\n        }\n        this.surferReady = this.onWaveReady.bind(this);\n        this.surferProgress = this.onWaveProgress.bind(this);\n        this.surferSeek = this.onWaveSeek.bind(this);\n\n        // only listen to these wavesurfer.js playback events when not\n        // in live mode\n        if (!this.liveMode) {\n            this.setupPlaybackEvents(true);\n        }\n\n        // video.js player events\n        this.player.on('volumechange', this.onVolumeChange.bind(this));\n        this.player.on('fullscreenchange', this.onScreenChange.bind(this));\n\n        // make sure volume is muted when requested\n        if (this.player.muted()) {\n            this.setVolume(0);\n        }\n\n        // video.js fluid option\n        if (this.player.options_.fluid === true) {\n            // give wave element a classname so it can be styled\n            this.surfer.drawer.wrapper.className = wavesurferClassName;\n            // listen for window resize events\n            this.responsiveWave = WaveSurfer.util.debounce(\n                this.onResizeChange.bind(this), 150);\n            window.addEventListener('resize', this.responsiveWave);\n        }\n\n        // text tracks\n        if (this.textTracksEnabled) {\n            if (this.player.controlBar.currentTimeDisplay !== undefined) {\n                // disable timeupdates\n                this.player.controlBar.currentTimeDisplay.off(this.player, 'timeupdate',\n                    this.player.controlBar.currentTimeDisplay.throttledUpdateContent);\n            }\n\n            // sets up an interval function to track current time\n            // and trigger timeupdate every 250 milliseconds.\n            // needed for text tracks\n            this.player.tech_.trackCurrentTime();\n        }\n\n        // kick things off\n        this.startPlayers();\n    }\n\n    /**\n     * Initializes the waveform options.\n     *\n     * @private\n     * @param {Object} surferOpts - Plugin options.\n     * @returns {Object} - Updated `surferOpts` object.\n     */\n    parseOptions(surferOpts) {\n        let rect = this.player.el_.getBoundingClientRect();\n        this.originalWidth = this.player.options_.width || rect.width;\n        this.originalHeight = this.player.options_.height || rect.height;\n\n        // controlbar\n        let controlBarHeight = this.player.controlBar.height();\n        if (this.player.options_.controls === true && controlBarHeight === 0) {\n            // the dimensions of the controlbar are not known yet, but we\n            // need it now, so we can calculate the height of the waveform.\n            // The default height is 30px, so use that instead.\n            controlBarHeight = 30;\n        }\n\n        // set waveform element and dimensions\n        // Set the container to player's container if \"container\" option is\n        // not provided. If a waveform needs to be appended to your custom\n        // element, then use below option. For example:\n        // container: document.querySelector(\"#vjs-waveform\")\n        if (surferOpts.container === undefined) {\n            surferOpts.container = this.player.el_;\n        }\n\n        // set the height of generated waveform if user has provided height\n        // from options. If height of waveform need to be customized then use\n        // option below. For example: waveformHeight: 30\n        if (surferOpts.waveformHeight === undefined) {\n            let playerHeight = rect.height;\n            surferOpts.height = playerHeight - controlBarHeight;\n        } else {\n            surferOpts.height = surferOpts.waveformHeight;\n        }\n\n        // split channels\n        if (surferOpts.splitChannels && surferOpts.splitChannels === true) {\n            surferOpts.height /= 2;\n        }\n\n        // enable wavesurfer.js microphone plugin\n        if (this.liveMode === true) {\n            surferOpts.plugins = [\n                WaveSurfer.microphone.create(surferOpts)\n            ];\n            this.log('wavesurfer.js microphone plugin enabled.');\n        }\n\n        return surferOpts;\n    }\n\n    /**\n     * Start the players.\n     * @private\n     */\n    startPlayers() {\n        let options = this.player.options_.plugins.wavesurfer;\n        if (options.src !== undefined) {\n            if (this.surfer.microphone === undefined) {\n                // show loading spinner\n                this.player.loadingSpinner.show();\n\n                // start loading file\n                this.load(options.src, options.peaks);\n            } else {\n                // hide loading spinner\n                this.player.loadingSpinner.hide();\n\n                // connect microphone input to our waveform\n                options.wavesurfer = this.surfer;\n            }\n        } else {\n            // no valid src found, hide loading spinner\n            this.player.loadingSpinner.hide();\n        }\n    }\n\n    /**\n     * Starts or stops listening to events related to audio-playback.\n     *\n     * @param {boolean} enable - Start or stop listening to playback\n     *     related events.\n     * @private\n     */\n    setupPlaybackEvents(enable) {\n        if (enable === false) {\n            this.surfer.un('ready', this.surferReady);\n            this.surfer.un('audioprocess', this.surferProgress);\n            this.surfer.un('seek', this.surferSeek);\n        } else if (enable === true) {\n            this.surfer.on('ready', this.surferReady);\n            this.surfer.on('audioprocess', this.surferProgress);\n            this.surfer.on('seek', this.surferSeek);\n        }\n    }\n\n    /**\n     * Start loading waveform data.\n     *\n     * @param {string|blob|file} url - Either the URL of the audio file,\n     *     a Blob or a File object.\n     * @param {string|number[]} peaks - Either the URL of peaks\n     *     data for the audio file, or an array with peaks data.\n     */\n    load(url, peaks) {\n        if (url instanceof Blob || url instanceof File) {\n            this.log('Loading object: ' + JSON.stringify(url));\n            this.surfer.loadBlob(url);\n        } else {\n            // load peak data from file\n            if (peaks !== undefined) {\n                if (Array.isArray(peaks)) {\n                    // use supplied peaks data\n                    this.log('Loading URL: ' + url);\n                    this.surfer.load(url, peaks);\n                } else {\n                    // load peak data from file\n                    let ajaxOptions = {\n                        url: peaks,\n                        responseType: 'json'\n                    };\n                    // supply xhr options, if any\n                    if (this.player.options_.plugins.wavesurfer.xhr !== undefined) {\n                        ajaxOptions.xhr = this.player.options_.plugins.wavesurfer.xhr;\n                    }\n                    let ajax = WaveSurfer.util.ajax(ajaxOptions);\n\n                    ajax.on('success', (data, e) => {\n                        this.log('Loaded Peak Data URL: ' + peaks);\n                        this.surfer.load(url, data.data);\n                    });\n                    ajax.on('error', (e) => {\n                        this.log('Unable to retrieve peak data from ' + peaks +\n                            '. Status code: ' + e.target.status, 'warn');\n                        this.log('Loading URL: ' + url);\n                        this.surfer.load(url);\n                    });\n                }\n            } else {\n                // no peaks\n                this.log('Loading URL: ' + url);\n                this.surfer.load(url);\n            }\n        }\n    }\n\n    /**\n     * Start/resume playback or microphone.\n     */\n    play() {\n        // show pause button\n        if (this.player.controlBar.playToggle !== undefined &&\n            this.player.controlBar.playToggle.contentEl()) {\n            this.player.controlBar.playToggle.handlePlay();\n        }\n\n        if (this.liveMode) {\n            // start/resume microphone visualization\n            if (!this.surfer.microphone.active)\n            {\n                this.log('Start microphone');\n                this.surfer.microphone.start();\n            } else {\n                // toggle paused\n                let paused = !this.surfer.microphone.paused;\n\n                if (paused) {\n                    this.pause();\n                } else {\n                    this.log('Resume microphone');\n                    this.surfer.microphone.play();\n                }\n            }\n        } else {\n            this.log('Start playback');\n\n            // put video.js player UI in playback mode\n            this.player.play();\n\n            // start surfer playback\n            this.surfer.play();\n        }\n    }\n\n    /**\n     * Pauses playback or microphone visualization.\n     */\n    pause() {\n        // show play button\n        if (this.player.controlBar.playToggle !== undefined &&\n            this.player.controlBar.playToggle.contentEl()) {\n            this.player.controlBar.playToggle.handlePause();\n        }\n\n        if (this.liveMode) {\n            // pause microphone visualization\n            this.log('Pause microphone');\n            this.surfer.microphone.pause();\n        } else {\n            // pause playback\n            this.log('Pause playback');\n\n            if (!this.waveFinished) {\n                // pause wavesurfer playback\n                this.surfer.pause();\n            } else {\n                this.waveFinished = false;\n            }\n\n            this.setCurrentTime();\n        }\n    }\n\n    /**\n     * @private\n     */\n    dispose() {\n        if (this.surfer) {\n            if (this.liveMode && this.surfer.microphone) {\n                // destroy microphone plugin\n                this.surfer.microphone.destroy();\n                this.log('Destroyed microphone plugin');\n            }\n            // destroy wavesurfer instance\n            this.surfer.destroy();\n        }\n        if (this.textTracksEnabled) {\n            this.player.tech_.stopTrackingCurrentTime();\n        }\n        this.log('Destroyed plugin');\n    }\n\n    /**\n     * Indicates whether the plugin is destroyed or not.\n     *\n     * @return {boolean} Plugin destroyed or not.\n     */\n    isDestroyed() {\n        return this.player && (this.player.children() === null);\n    }\n\n    /**\n     * Remove the player and waveform.\n     */\n    destroy() {\n        this.player.dispose();\n    }\n\n    /**\n     * Set the volume level.\n     *\n     * @param {number} volume - The new volume level.\n     */\n    setVolume(volume) {\n        if (volume !== undefined) {\n            this.log('Changing volume to: ' + volume);\n\n            // update player volume\n            this.player.volume(volume);\n        }\n    }\n\n    /**\n     * Save waveform image as data URI.\n     *\n     * The default format is `'image/png'`. Other supported types are\n     * `'image/jpeg'` and `'image/webp'`.\n     *\n     * @param {string} [format=image/png] - String indicating the image format.\n     * @param {number} [quality=1] - Number between 0 and 1 indicating image\n     *     quality if the requested type is `'image/jpeg'` or `'image/webp'`.\n     * @returns {string} The data URI of the image data.\n     */\n    exportImage(format, quality) {\n        return this.surfer.exportImage(format, quality);\n    }\n\n    /**\n     * Change the audio output device.\n     *\n     * @param {string} deviceId - Id of audio output device.\n     */\n    setAudioOutput(deviceId) {\n        if (deviceId) {\n            this.surfer.setSinkId(deviceId).then((result) => {\n                // notify listeners\n                this.player.trigger('audioOutputReady');\n            }).catch((err) => {\n                // notify listeners\n                this.player.trigger('error', err);\n\n                this.log(err, 'error');\n            });\n        }\n    }\n\n    /**\n     * Get the current time (in seconds) of the stream during playback.\n     *\n     * Returns 0 if no stream is available (yet).\n     *\n     * @returns {float} Current time of the stream.\n     */\n    getCurrentTime() {\n        let currentTime = this.surfer.getCurrentTime();\n        currentTime = isNaN(currentTime) ? 0 : currentTime;\n\n        return currentTime;\n    }\n\n    /**\n     * Updates the player's element displaying the current time.\n     *\n     * @param {number} [currentTime] - Current position of the playhead\n     *     (in seconds).\n     * @param {number} [duration] - Duration of the waveform (in seconds).\n     * @private\n     */\n    setCurrentTime(currentTime, duration) {\n        if (currentTime === undefined) {\n            currentTime = this.surfer.getCurrentTime();\n        }\n\n        if (duration === undefined) {\n            duration = this.surfer.getDuration();\n        }\n\n        currentTime = isNaN(currentTime) ? 0 : currentTime;\n        duration = isNaN(duration) ? 0 : duration;\n\n        // update current time display component\n        if (this.player.controlBar.currentTimeDisplay &&\n            this.player.controlBar.currentTimeDisplay.contentEl()) {\n            let time = Math.min(currentTime, duration);\n\n            this.player.controlBar.currentTimeDisplay.formattedTime_ =\n                this.player.controlBar.currentTimeDisplay.contentEl().lastChild.textContent =\n                    formatTime(time, duration, this.msDisplayMax);\n        }\n\n        if (this.textTracksEnabled && this.player.tech_ && this.player.tech_.el_) {\n            // only needed for text tracks\n            this.player.tech_.setCurrentTime(currentTime);\n        }\n    }\n\n    /**\n     * Get the duration of the stream in seconds.\n     *\n     * Returns 0 if no stream is available (yet).\n     *\n     * @returns {float} Duration of the stream.\n     */\n    getDuration() {\n        let duration = this.surfer.getDuration();\n        duration = isNaN(duration) ? 0 : duration;\n\n        return duration;\n    }\n\n    /**\n     * Updates the player's element displaying the duration time.\n     *\n     * @param {number} [duration] - Duration of the waveform (in seconds).\n     * @private\n     */\n    setDuration(duration) {\n        if (duration === undefined) {\n            duration = this.surfer.getDuration();\n        }\n        duration = isNaN(duration) ? 0 : duration;\n\n        // update duration display component\n        if (this.player.controlBar.durationDisplay &&\n            this.player.controlBar.durationDisplay.contentEl()) {\n            this.player.controlBar.durationDisplay.formattedTime_ =\n                this.player.controlBar.durationDisplay.contentEl().lastChild.textContent =\n                    formatTime(duration, duration, this.msDisplayMax);\n        }\n    }\n\n    /**\n     * Audio is loaded, decoded and the waveform is drawn.\n     *\n     * @fires waveReady\n     * @private\n     */\n    onWaveReady() {\n        this.waveReady = true;\n        this.waveFinished = false;\n        this.liveMode = false;\n\n        this.log('Waveform is ready');\n        this.player.trigger('waveReady');\n\n        // update time display\n        this.setCurrentTime();\n        this.setDuration();\n\n        // enable and show play button\n        if (this.player.controlBar.playToggle !== undefined &&\n            this.player.controlBar.playToggle.contentEl()) {\n            this.player.controlBar.playToggle.show();\n        }\n\n        // hide loading spinner\n        if (this.player.loadingSpinner.contentEl()) {\n            this.player.loadingSpinner.hide();\n        }\n\n        // auto-play when ready (if enabled)\n        if (this.player.options_.autoplay === true) {\n            this.play();\n        }\n    }\n\n    /**\n     * Fires when audio playback completed.\n     *\n     * @fires playbackFinish\n     * @private\n     */\n    onWaveFinish() {\n        this.log('Finished playback');\n\n        // notify listeners\n        this.player.trigger('playbackFinish');\n\n        // check if loop is enabled\n        if (this.player.options_.loop === true) {\n            // reset waveform\n            this.surfer.stop();\n            this.play();\n        } else {\n            // finished\n            this.waveFinished = true;\n\n            // pause player\n            this.pause();\n\n            // show the replay state of play toggle\n            this.player.trigger('ended');\n\n            // this gets called once after the clip has ended and the user\n            // seeks so that we can change the replay button back to a play\n            // button\n            this.surfer.once('seek', () => {\n                if (this.player.controlBar.playToggle !== undefined) {\n                    this.player.controlBar.playToggle.removeClass('vjs-ended');\n                }\n                this.player.trigger('pause');\n            });\n        }\n    }\n\n    /**\n     * Fires continuously during audio playback.\n     *\n     * @param {number} time - Current time/location of the playhead.\n     * @private\n     */\n    onWaveProgress(time) {\n        this.setCurrentTime();\n    }\n\n    /**\n     * Fires during seeking of the waveform.\n     * @private\n     */\n    onWaveSeek() {\n        this.setCurrentTime();\n    }\n\n    /**\n     * Waveform error.\n     *\n     * @param {string} error - The wavesurfer error.\n     * @private\n     */\n    onWaveError(error) {\n        // notify listeners\n        this.player.trigger('error', error);\n\n        this.log(error, 'error');\n    }\n\n    /**\n     * Fired when the play toggle is clicked.\n     * @private\n     */\n    onPlayToggle() {\n        // workaround for video.js 6.3.1 and newer\n        if (this.player.controlBar.playToggle !== undefined &&\n            this.player.controlBar.playToggle.hasClass('vjs-ended')) {\n            this.player.controlBar.playToggle.removeClass('vjs-ended');\n        }\n        if (this.surfer.isPlaying()) {\n            this.pause();\n        } else {\n            this.play();\n        }\n    }\n\n    /**\n     * Fired when the volume in the video.js player changes.\n     * @private\n     */\n    onVolumeChange() {\n        let volume = this.player.volume();\n        if (this.player.muted()) {\n            // muted volume\n            volume = 0;\n        }\n\n        // update wavesurfer.js volume\n        this.surfer.setVolume(volume);\n    }\n\n    /**\n     * Fired when the video.js player switches in or out of fullscreen mode.\n     * @private\n     */\n    onScreenChange() {\n        // execute with tiny delay so the player element completes\n        // rendering and correct dimensions are reported\n        let fullscreenDelay = this.player.setInterval(() => {\n            let isFullscreen = this.player.isFullscreen();\n            let newWidth, newHeight;\n            if (!isFullscreen) {\n                // restore original dimensions\n                newWidth = this.originalWidth;\n                newHeight = this.originalHeight;\n            }\n\n            if (this.waveReady) {\n                if (this.liveMode && !this.surfer.microphone.active) {\n                    // we're in live mode but the microphone hasn't been\n                    // started yet\n                    return;\n                }\n                // redraw\n                this.redrawWaveform(newWidth, newHeight);\n            }\n\n            // stop fullscreenDelay interval\n            this.player.clearInterval(fullscreenDelay);\n\n        }, 100);\n    }\n\n    /**\n     * Fired when the video.js player is resized.\n     *\n     * @private\n     */\n    onResizeChange() {\n        if (this.surfer !== undefined) {\n            // redraw waveform\n            this.redrawWaveform();\n        }\n    }\n\n    /**\n     * Redraw waveform.\n     *\n     * @param {number} [newWidth] - New width for the waveform.\n     * @param {number} [newHeight] - New height for the waveform.\n     * @private\n     */\n    redrawWaveform(newWidth, newHeight) {\n        if (!this.isDestroyed()) {\n            if (this.player.el_) {\n                let rect = this.player.el_.getBoundingClientRect();\n                if (newWidth === undefined) {\n                    // get player width\n                    newWidth = rect.width;\n                }\n                if (newHeight === undefined) {\n                    // get player height\n                    newHeight = rect.height;\n                }\n            }\n\n            // destroy old drawing\n            this.surfer.drawer.destroy();\n\n            // set new dimensions\n            this.surfer.params.width = newWidth;\n            this.surfer.params.height = newHeight - this.player.controlBar.height();\n\n            // redraw waveform\n            this.surfer.createDrawer();\n            this.surfer.drawer.wrapper.className = wavesurferClassName;\n            this.surfer.drawBuffer();\n\n            // make sure playhead is restored at right position\n            this.surfer.drawer.progress(this.surfer.backend.getPlayedPercents());\n        }\n    }\n\n    /**\n     * Log message to console (if the debug option is enabled).\n     *\n     * @private\n     * @param {Array} args - The arguments to be passed to the matching console\n     *     method.\n     * @param {string} logType - The name of the console method to use.\n     */\n    log(args, logType) {\n        log(args, logType, this.debug);\n    }\n}\n\n// version nr is injected during build\nWavesurfer.VERSION = __VERSION__;\n\n// register plugin once\nvideojs.Wavesurfer = Wavesurfer;\nif (videojs.getPlugin('wavesurfer') === undefined) {\n    videojs.registerPlugin('wavesurfer', Wavesurfer);\n}\n\nexport {Wavesurfer};","module.exports = __WEBPACK_EXTERNAL_MODULE_video_js__;","module.exports = __WEBPACK_EXTERNAL_MODULE_wavesurfer_js__;"],"sourceRoot":""}