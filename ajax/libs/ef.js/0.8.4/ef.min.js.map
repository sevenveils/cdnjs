{"version":3,"file":"ef.min.js","sources":["../node_modules/eft-parser/src/escape-parser.js","../node_modules/eft-parser/src/eft-parser.js","../node_modules/ef-core/src/lib/utils/type-of.js","../node_modules/ef-core/src/lib/utils/literals-mix.js","../node_modules/ef-core/src/lib/utils/array-helper.js","../node_modules/ef-core/src/lib/utils/debug.js","../node_modules/ef-core/src/lib/render-queue.js","../node_modules/ef-core/src/lib/utils/polyfills.js","../node_modules/ef-core/src/lib/resolver.js","../node_modules/ef-core/src/lib/subscriber-call-stack.js","../node_modules/ef-core/src/lib/utils/isnan.js","../node_modules/ef-core/src/lib/binding.js","../node_modules/ef-core/src/lib/utils/event-helper.js","../node_modules/ef-core/src/lib/element-creator.js","../node_modules/ef-core/src/lib/utils/dom-helper.js","../node_modules/ef-core/src/lib/utils/dom-arr-helper.js","../node_modules/ef-core/src/lib/creator.js","../node_modules/ef-core/src/mount-options.js","../node_modules/ef-core/src/lib/renderer.js","../src/ef.js","../src/lib/parser.js","../node_modules/ef-core/src/ef-core.js"],"sourcesContent":["// Set the escape character\nconst char = '&'\nconst doubleChar = char + char\n\n// Initlize RegExp\nconst oct = new RegExp(`\\\\${char}[0-7]{1,3}`, 'g')\nconst ucp = new RegExp(`\\\\${char}u\\\\[.*?\\\\]`, 'g')\nconst uni = new RegExp(`\\\\${char}u.{0,4}`, 'g')\nconst hex = new RegExp(`\\\\${char}x.{0,2}`, 'g')\nconst esc = new RegExp(`\\\\${char}`, 'g')\nconst b = new RegExp(`\\\\${char}b`, 'g')\nconst t = new RegExp(`\\\\${char}t`, 'g')\nconst n = new RegExp(`\\\\${char}n`, 'g')\nconst v = new RegExp(`\\\\${char}v`, 'g')\nconst f = new RegExp(`\\\\${char}f`, 'g')\nconst r = new RegExp(`\\\\${char}r`, 'g')\n\n// Escape octonary sequence\nconst O2C = () => {\n\tthrow new SyntaxError('Octal escape sequences are not allowed in EFML.')\n}\n\n// Escape unicode code point sequence\nconst UC2C = (val) => {\n\tval = val.substr(3, val.length - 4)\n\tval = parseInt(val, 16)\n\tif (!val) throw new SyntaxError('Invalid Unicode escape sequence')\n\ttry {\n\t\treturn String.fromCodePoint(val)\n\t} catch (err) {\n\t\tthrow new SyntaxError('Undefined Unicode code-point')\n\t}\n}\n\n// Escape unicode sequence\nconst U2C = (val) => {\n\tval = val.substring(2)\n\tval = parseInt(val, 16)\n\tif (!val) throw new SyntaxError('Invalid Unicode escape sequence')\n\treturn String.fromCharCode(val)\n}\n\n// Escape hexadecimal sequence\nconst X2C = (val) => {\n\tval = `00${val.substring(2)}`\n\tval = parseInt(val, 16)\n\tif (!val) throw new SyntaxError('Invalid hexadecimal escape sequence')\n\treturn String.fromCharCode(val)\n}\n\nconst efEscape = (string) => {\n\t// Split strings\n\tconst splitArr = string.split(doubleChar)\n\tconst escaped = []\n\n\t// Escape all known escape characters\n\tfor (let i of splitArr) {\n\t\tconst escapedStr = i\n\t\t\t.replace(oct, O2C)\n\t\t\t.replace(ucp, UC2C)\n\t\t\t.replace(uni, U2C)\n\t\t\t.replace(hex, X2C)\n\t\t\t.replace(b, '\\b')\n\t\t\t.replace(t, '\\t')\n\t\t\t.replace(n, '\\n')\n\t\t\t.replace(v, '\\v')\n\t\t\t.replace(f, '\\f')\n\t\t\t.replace(r, '\\r')\n\t\t\t// Remove all useless escape characters\n\t\t\t.replace(esc, '')\n\t\tescaped.push(escapedStr)\n\t}\n\t// Return escaped string\n\treturn escaped.join(char)\n}\n\nconst checkEscape = string => string[string.length - 1] === char\n\nconst splitWith = (string, char) => {\n\tconst splitArr = string.split(char)\n\tconst escapedSplit = []\n\tlet escaped = false\n\tfor (let i of splitArr) {\n\t\tif (escaped) escapedSplit[escapedSplit.length - 1] += `${char}${i}`\n\t\telse escapedSplit.push(i)\n\t\tescaped = checkEscape(i)\n\t}\n\treturn escapedSplit\n}\n\nconst splitBy = (string, char) => {\n\tconst splitArr = string.split(doubleChar)\n\tconst escaped = splitWith(splitArr.shift(), char)\n\tfor (let i of splitArr) {\n\t\tconst escapedSplit = splitWith(i, char)\n\t\tescaped[escaped.length - 1] += `${doubleChar}${escapedSplit.shift()}`\n\t\tescaped.push(...escapedSplit)\n\t}\n\treturn escaped\n}\n\nexport { efEscape, splitBy }\n","import { efEscape, splitBy } from './escape-parser.js'\n\nconst typeSymbols = '>#%@.-+'\nconst reserved = [\n\t'$ctx', '$data', '$refs', '$methods', '$mount', '$umount',\n\t'$subscribe', '$unsubscribe', '$update', '$destroy', '__DIRECTMOUNT__'\n]\nconst mustache = /\\{\\{.+?\\}\\}/g\nconst spaceIndent = /^(\\t*)( *).*/\nconst hashref = /#([^}]|}[^}])*$/\n\nconst getErrorMsg = (msg, line = -2) => `Failed to parse eft template: ${msg}. at line ${line + 1}`\n\nconst isEmpty = string => !string.replace(/\\s/, '')\n\nconst checkValidType = obj => ['number', 'boolean', 'string'].indexOf(typeof obj) > -1\n\nconst ESCAPE = (string) => {\n\tif (!string) return [string, false]\n\ttry {\n\t\tconst parsed = JSON.parse(string)\n\t\tif (['number', 'boolean'].indexOf(typeof parsed) === -1) return [efEscape(string), true]\n\t\treturn [parsed, false]\n\t} catch (e) {\n\t\treturn [efEscape(string), true]\n\t}\n}\n\nconst getOffset = (string, parsingInfo) => {\n\tif (parsingInfo.offset !== null) return\n\tparsingInfo.offset = string.match(/\\s*/)[0]\n\tif (parsingInfo.offset) parsingInfo.offsetReg = parsingInfo.offset\n}\n\nconst removeOffset = (string, parsingInfo, i) => {\n\tif (parsingInfo.offsetReg) {\n\t\tlet removed = false\n\t\tstring = string.replace(parsingInfo.offsetReg, () => {\n\t\t\tremoved = true\n\t\t\treturn ''\n\t\t})\n\t\tif (!removed) throw new SyntaxError(getErrorMsg(`Expected indent to be grater than 0 and less than ${parsingInfo.prevDepth + 1}, but got -1`, i))\n\t}\n\treturn string\n}\n\nconst getIndent = (string, parsingInfo) => {\n\tif (parsingInfo.indentReg) return\n\tconst spaces = string.match(spaceIndent)[2]\n\tif (spaces) {\n\t\tparsingInfo.indentReg = new RegExp(spaces, 'g')\n\t}\n}\n\nconst getDepth = (string, parsingInfo, i) => {\n\tlet depth = 0\n\tif (parsingInfo.indentReg) string = string.replace(/^\\s*/, str => str.replace(parsingInfo.indentReg, '\\t'))\n\tconst content = string.replace(/^\\t*/, (str) => {\n\t\tdepth = str.length\n\t\treturn ''\n\t})\n\tif (/^\\s/.test(content)) throw new SyntaxError(getErrorMsg('Bad indent', i))\n\treturn { depth, content }\n}\n\nconst resolveDepth = (ast, depth) => {\n\tlet currentNode = ast\n\tfor (let i = 0; i < depth; i++) currentNode = currentNode[currentNode.length - 1]\n\treturn currentNode\n}\n\nconst splitDefault = (string) => {\n\tstring = string.slice(2, string.length - 2)\n\tconst [_path, ..._default] = splitBy(string, '=')\n\tconst pathArr = splitBy(_path.trim(), '.').map(efEscape)\n\tconst [defaultVal, escaped] = ESCAPE(_default.join('=').trim())\n\tif (checkValidType(defaultVal) && (escaped || (!escaped && defaultVal !== ''))) return [pathArr, defaultVal]\n\treturn [pathArr]\n}\n\nconst splitLiterals = (string) => {\n\tconst strs = string.split(mustache)\n\tif (strs.length === 1) return ESCAPE(string)[0]\n\tconst tmpl = []\n\tif (strs.length === 2 && !strs[0] && !strs[1]) tmpl.push(0)\n\telse tmpl.push(strs.map(efEscape))\n\tconst mustaches = string.match(mustache)\n\tif (mustaches) tmpl.push(...mustaches.map(splitDefault))\n\treturn tmpl\n}\n\nconst pushStr = (textArr, str) => {\n\tif (str) textArr.push(str)\n}\n\nconst parseText = (string) => {\n\tconst result = splitLiterals(string)\n\tif (checkValidType(result)) return [`${result}`]\n\tconst [strs, ...exprs] = result\n\tconst textArr = []\n\tfor (let i = 0; i < exprs.length; i++) {\n\t\tpushStr(textArr, strs[i])\n\t\ttextArr.push(exprs[i])\n\t}\n\tpushStr(textArr, strs[strs.length - 1])\n\treturn textArr\n}\n\nconst dotToSpace = val => val.replace(/\\./g, ' ')\n\nconst parseTag = (string) => {\n\tconst tagInfo = {}\n\tconst [tag, ...content] = splitBy(string.replace(hashref, (val) => {\n\t\ttagInfo.ref = val.slice(1)\n\t\treturn ''\n\t}), '.')\n\ttagInfo.tag = efEscape(tag)\n\ttagInfo.class = splitLiterals(content.join('.'))\n\tif (typeof tagInfo.class === 'string') tagInfo.class = dotToSpace(tagInfo.class).trim()\n\telse if (tagInfo.class[0]) tagInfo.class[0] = tagInfo.class[0].map(dotToSpace)\n\treturn tagInfo\n}\n\nconst parseNodeProps = (string) => {\n\tconst splited = splitBy(string, '=')\n\treturn {\n\t\tname: efEscape(splited.shift().trim()),\n\t\tvalue: splitLiterals(splited.join('=').trim())\n\t}\n}\n\nconst parseEvent = (string) => {\n\tconst splited = splitBy(string, '=')\n\treturn {\n\t\tname: splited.shift().trim(),\n\t\tvalue: splited.join('=').trim()\n\t}\n}\n\nconst setOption = (options, option) => {\n\tswitch (option) {\n\t\tcase 'stop': {\n\t\t\toptions.s = 1\n\t\t\tbreak\n\t\t}\n\t\tcase 'stopImmediate': {\n\t\t\toptions.i = 1\n\t\t\tbreak\n\t\t}\n\t\tcase 'prevent': {\n\t\t\toptions.p = 1\n\t\t\tbreak\n\t\t}\n\t\tcase 'shift': {\n\t\t\toptions.h = 1\n\t\t\tbreak\n\t\t}\n\t\tcase 'alt': {\n\t\t\toptions.a = 1\n\t\t\tbreak\n\t\t}\n\t\tcase 'ctrl': {\n\t\t\toptions.c = 1\n\t\t\tbreak\n\t\t}\n\t\tcase 'meta': {\n\t\t\toptions.t = 1\n\t\t\tbreak\n\t\t}\n\t\tcase 'capture': {\n\t\t\toptions.u = 1\n\t\t\tbreak\n\t\t}\n\t\tdefault: {\n\t\t\tconsole.warn(`Abandoned unsupported eft event option '${option}'.`)\n\t\t}\n\t}\n}\n\nconst getOption = (options, keys, option) => {\n\tconst keyCode = parseInt(option, 10)\n\tif (isNaN(keyCode)) return setOption(options, efEscape(option))\n\tkeys.push(keyCode)\n}\n\nconst getEventOptions = (name) => {\n\tconst options = {}\n\tconst keys = []\n\tconst [listener, ...ops] = splitBy(name, '.')\n\toptions.l = efEscape(listener)\n\tfor (let i of ops) getOption(options, keys, i)\n\tif (keys.length > 0) options.k = keys\n\treturn options\n}\n\nconst splitEvents = (string) => {\n\tconst [name, ...value] = splitBy(string, ':')\n\tconst content = value.join(':')\n\tconst escapedName = efEscape(name.trim())\n\tif (content) return [escapedName, splitLiterals(content)]\n\treturn [escapedName]\n}\n\nconst parseLine = ({line, ast, parsingInfo, i}) => {\n\tif (isEmpty(line)) return\n\tgetOffset(line, parsingInfo)\n\n\tconst trimmedLine = removeOffset(line, parsingInfo, i)\n\tgetIndent(trimmedLine, parsingInfo)\n\n\tlet { depth, content } = getDepth(trimmedLine, parsingInfo, i)\n\n\tif (content) {\n\t\tif (depth < 0 || depth - parsingInfo.prevDepth > 1 || (depth - parsingInfo.prevDepth === 1 && ['comment', 'tag'].indexOf(parsingInfo.prevType) === -1) || (parsingInfo.prevType !== 'comment' && depth === 0 && parsingInfo.topExists)) throw new SyntaxError(getErrorMsg(`Expected indent to be grater than 0 and less than ${parsingInfo.prevDepth + 1}, but got ${depth}`, i))\n\t\tconst type = content[0]\n\t\tcontent = content.slice(1)\n\t\tif (!parsingInfo.topExists && typeSymbols.indexOf(type) >= 0 && type !== '>') throw new SyntaxError(getErrorMsg('No top level entry', i))\n\t\tif (!content && typeSymbols.indexOf(type) >= 0) throw new SyntaxError(getErrorMsg('Empty content', i))\n\t\t// Jump back to upper level\n\t\tif (depth < parsingInfo.prevDepth || (depth === parsingInfo.prevDepth && parsingInfo.prevType === 'tag')) parsingInfo.currentNode = resolveDepth(ast, depth)\n\t\tparsingInfo.prevDepth = depth\n\n\t\tswitch (type) {\n\t\t\tcase '>': {\n\t\t\t\tif (!parsingInfo.topExists) {\n\t\t\t\t\tparsingInfo.topExists = true\n\t\t\t\t\tparsingInfo.minDepth = depth\n\t\t\t\t}\n\t\t\t\tconst info = parseTag(content)\n\t\t\t\tconst newNode = [{\n\t\t\t\t\tt: info.tag\n\t\t\t\t}]\n\t\t\t\tif (info.class) {\n\t\t\t\t\tnewNode[0].a = {}\n\t\t\t\t\tnewNode[0].a.class = info.class\n\t\t\t\t}\n\t\t\t\tif (info.ref) newNode[0].r = info.ref\n\t\t\t\tparsingInfo.currentNode.push(newNode)\n\t\t\t\tparsingInfo.currentNode = newNode\n\t\t\t\tparsingInfo.prevType = 'tag'\n\t\t\t\tbreak\n\t\t\t}\n\t\t\tcase '#': {\n\t\t\t\tconst { name, value } = parseNodeProps(content)\n\t\t\t\tif (!parsingInfo.currentNode[0].a) parsingInfo.currentNode[0].a = {}\n\t\t\t\tparsingInfo.currentNode[0].a[name] = value\n\t\t\t\tparsingInfo.prevType = 'attr'\n\t\t\t\tbreak\n\t\t\t}\n\t\t\tcase '%': {\n\t\t\t\tconst { name, value } = parseNodeProps(content)\n\t\t\t\tif (!parsingInfo.currentNode[0].p) parsingInfo.currentNode[0].p = {}\n\t\t\t\tparsingInfo.currentNode[0].p[name] = value\n\t\t\t\tparsingInfo.prevType = 'prop'\n\t\t\t\tbreak\n\t\t\t}\n\t\t\tcase '@': {\n\t\t\t\tconst { name, value } = parseEvent(content)\n\t\t\t\tif (!parsingInfo.currentNode[0].e) parsingInfo.currentNode[0].e = []\n\t\t\t\tconst options = getEventOptions(name)\n\t\t\t\tconst [method, _value] = splitEvents(value)\n\t\t\t\toptions.m = method\n\t\t\t\tif (_value) options.v = _value\n\t\t\t\tparsingInfo.currentNode[0].e.push(options)\n\t\t\t\tparsingInfo.prevType = 'event'\n\t\t\t\tbreak\n\t\t\t}\n\t\t\tcase '.': {\n\t\t\t\tparsingInfo.currentNode.push(...parseText(content))\n\t\t\t\tparsingInfo.prevType = 'text'\n\t\t\t\tbreak\n\t\t\t}\n\t\t\tcase '|': {\n\t\t\t\tif (parsingInfo.currentNode.length > 1) content = `\\n${content}`\n\t\t\t\tparsingInfo.currentNode.push(...parseText(content))\n\t\t\t\tparsingInfo.prevType = 'multiline-text'\n\t\t\t\tbreak\n\t\t\t}\n\t\t\tcase '-': {\n\t\t\t\tif (reserved.indexOf(content) !== -1) throw new SyntaxError(getErrorMsg(`Reserved name '${content}' should not be used`, i))\n\t\t\t\tparsingInfo.currentNode.push({\n\t\t\t\t\tn: content,\n\t\t\t\t\tt: 0\n\t\t\t\t})\n\t\t\t\tparsingInfo.prevType = 'node'\n\t\t\t\tbreak\n\t\t\t}\n\t\t\tcase '+': {\n\t\t\t\tparsingInfo.currentNode.push({\n\t\t\t\t\tn: content,\n\t\t\t\t\tt: 1\n\t\t\t\t})\n\t\t\t\tparsingInfo.prevType = 'list'\n\t\t\t\tbreak\n\t\t\t}\n\t\t\tdefault: {\n\t\t\t\tparsingInfo.prevType = 'comment'\n\t\t\t}\n\t\t}\n\t}\n}\n\nconst parseEft = (template) => {\n\tif (!template) throw new TypeError(getErrorMsg('Template required, but nothing given'))\n\tconst tplType = typeof template\n\tif (tplType !== 'string') throw new TypeError(getErrorMsg(`Expected a string, but got a(n) ${tplType}`))\n\tconst lines = template.split(/\\r?\\n/)\n\tconst ast = []\n\tconst parsingInfo = {\n\t\tindentReg: null,\n\t\tprevDepth: 0,\n\t\toffset: null,\n\t\toffsetReg: null,\n\t\tprevType: 'comment',\n\t\tcurrentNode: ast,\n\t\ttopExists: false,\n\t}\n\tfor (let i = 0; i < lines.length; i++) parseLine({line: lines[i], ast, parsingInfo, i})\n\n\tif (ast[0]) return ast[0]\n\tthrow new SyntaxError(getErrorMsg('Nothing to be parsed', lines.length - 1))\n}\n\nexport default parseEft\n","const typeOf = (obj) => {\n\tif (Array.isArray(obj)) return 'array'\n\treturn typeof obj\n}\n\nexport default typeOf\n","const mixStr = (strs, ...exprs) => {\n\tlet string = ''\n\tfor (let i = 0; i < exprs.length; i++) string += (strs[i] + exprs[i])\n\treturn string + strs[strs.length - 1]\n}\n\nconst getVal = ({dataNode, _key}) => dataNode[_key]\n\nconst mixVal = (strs, ...exprs) => {\n\tif (!strs) return getVal(exprs[0])\n\tconst template = [strs]\n\ttemplate.push(...exprs.map(getVal))\n\treturn mixStr(...template)\n}\n\nexport { mixStr, mixVal }\n","const proto = Array.prototype\n\nconst ARR = {\n\tcopy(arr) {\n\t\treturn proto.slice.call(arr, 0)\n\t},\n\tempty(arr) {\n\t\tarr.length = 0\n\t\treturn arr\n\t},\n\tequals(left, right) {\n\t\tif (!Array.isArray(right)) return false\n\t\tif (left === right) return true\n\t\tif (left.length !== right.length) return false\n\t\tfor (let i = 0, l = left.length; i < l; i++) {\n\t\t\tif (left[i] !== right[i]) return false\n\t\t}\n\t\treturn true\n\t},\n\tpop(arr) {\n\t\treturn proto.pop.call(arr)\n\t},\n\tpush(arr, ...items) {\n\t\treturn proto.push.apply(arr, items)\n\t},\n\tremove(arr, item) {\n\t\tconst index = proto.indexOf.call(arr, item)\n\t\tif (index > -1) {\n\t\t\tproto.splice.call(arr, index, 1)\n\t\t\treturn item\n\t\t}\n\t},\n\treverse(arr) {\n\t\treturn proto.reverse.call(arr)\n\t},\n\trightUnique(arr) {\n\t\tconst newArr = []\n\t\tfor (let i = 0; i < arr.length; i++) {\n\t\t\tfor (let j = i + 1; j < arr.length; j++) if (arr[i] === arr[j]) j = i += 1\n\t\t\tnewArr.push(arr[i])\n\t\t}\n\t\treturn newArr\n\t},\n\tshift(arr) {\n\t\treturn proto.shift.call(arr)\n\t},\n\tslice(arr, index, length) {\n\t\treturn proto.slice.call(arr, index, length)\n\t},\n\tsort(arr, fn) {\n\t\treturn proto.sort.call(arr, fn)\n\t},\n\tsplice(arr, ...args) {\n\t\treturn proto.splice.apply(arr, args)\n\t},\n\tunshift(arr, ...items) {\n\t\treturn proto.unshift.apply(arr, items)\n\t}\n}\n\nif (window.Set && Array.from) ARR.unique = arr => Array.from(new Set(arr))\nelse ARR.unique = ARR.rightUnique\n\nexport default ARR\n","// Wrap console functions for `[EF]` perfix\nconst strTpl = '[EF] %s'\nconst dbg = {\n\tlog: console.log.bind(console, strTpl),\n\tinfo: console.info.bind(console, strTpl),\n\twarn: console.warn.bind(console, strTpl),\n\terror: console.error.bind(console, strTpl)\n}\n\nexport default dbg\n","import ARR from './utils/array-helper.js'\nimport dbg from './utils/debug.js'\n\nconst modificationQueue = []\nconst domQueue = []\nconst userQueue = []\nlet count = 0\n\nconst queue = handlers => modificationQueue.push(...handlers)\nconst queueDom = handler => domQueue.push(handler)\nconst onNextRender = handler => userQueue.push(handler)\n\nconst isPaused = () => count > 0\n\nconst inform = () => {\n\tcount += 1\n\treturn count\n}\n\nconst execModifications = () => {\n\tconst renderQueue = ARR.unique(modificationQueue)\n\tfor (let i of renderQueue) i()\n\tif (process.env.NODE_ENV !== 'production') dbg.info(`${modificationQueue.length} modification operation(s) cached, ${renderQueue.length} executed.`)\n\tARR.empty(modificationQueue)\n}\n\nconst execDomModifications = () => {\n\tconst domRenderQueue = ARR.rightUnique(domQueue)\n\tfor (let i of domRenderQueue) i()\n\tif (process.env.NODE_ENV !== 'production') dbg.info(`${domQueue.length} DOM operation(s) cached, ${domRenderQueue.length} executed.`)\n\tARR.empty(domQueue)\n}\n\nconst execUserQueue = () => {\n\tif (userQueue.length === 0) return\n\tconst userFnQueue = ARR.unique(userQueue)\n\tfor (let i of userFnQueue) i()\n\tif (process.env.NODE_ENV !== 'production') dbg.info(`${userQueue.length} user operation(s) cached, ${userFnQueue.length} executed.`)\n\tARR.empty(userQueue)\n}\n\nconst exec = (immediate) => {\n\tif (!immediate && (count -= 1) > 0) return count\n\tcount = 0\n\n\tif (modificationQueue.length > 0) execModifications()\n\n\tif (domQueue.length > 0) execDomModifications()\n\n\t// Execute user queue after DOM update\n\tif (userQueue.length > 0) setTimeout(execUserQueue, 0)\n\n\treturn count\n}\n\nconst bundle = (cb) => {\n\tinform()\n\ttry {\n\t\treturn exec(cb(inform, exec))\n\t} catch (e) {\n\t\tdbg.error('Error caught when executing bundle:\\n', e)\n\t\treturn exec()\n\t}\n}\n\nexport { queue, queueDom, onNextRender, inform, exec, bundle, isPaused }\n","// Enough for ef's usage, so no need for a full polyfill\nconst _assign = (ee, er) => {\n\tfor (let i in er) ee[i] = er[i]\n\treturn ee\n}\n\nconst assign = Object.assign || _assign\n\nexport { assign }\n","import { inform, exec } from './render-queue.js'\nimport { assign } from './utils/polyfills.js'\n\nconst resolveAllPath = ({_path, handlers, subscribers, innerData}) => {\n\tfor (let i of _path) {\n\t\tif (!handlers[i]) handlers[i] = {}\n\t\tif (!subscribers[i]) subscribers[i] = {}\n\t\tif (!innerData[i]) innerData[i] = {}\n\t\thandlers = handlers[i]\n\t\tsubscribers = subscribers[i]\n\t\tinnerData = innerData[i]\n\t}\n\treturn {\n\t\thandlerNode: handlers,\n\t\tsubscriberNode: subscribers,\n\t\tdataNode: innerData\n\t}\n}\n\nconst resolveReactivePath = (_path, obj, enume) => {\n\tfor (let i of _path) {\n\t\tif (!obj[i]) {\n\t\t\tconst node = {}\n\t\t\tObject.defineProperty(obj, i, {\n\t\t\t\tget() {\n\t\t\t\t\treturn node\n\t\t\t\t},\n\t\t\t\tset(data) {\n\t\t\t\t\tinform()\n\t\t\t\t\tassign(node, data)\n\t\t\t\t\texec()\n\t\t\t\t},\n\t\t\t\tconfigurable: !enume,\n\t\t\t\tenumerable: enume\n\t\t\t})\n\t\t}\n\t\tobj = obj[i]\n\t}\n\treturn obj\n}\n\nconst resolve = ({ _path, _key, data, handlers, subscribers, innerData }) => {\n\tconst parentNode = resolveReactivePath(_path, data, true)\n\tconst {handlerNode, subscriberNode, dataNode} = resolveAllPath({_path, handlers, subscribers, innerData})\n\tif (!handlerNode[_key]) handlerNode[_key] = []\n\tif (!subscriberNode[_key]) subscriberNode[_key] = []\n\tif (!Object.prototype.hasOwnProperty.call(dataNode, _key)) dataNode[_key] = ''\n\treturn { parentNode, handlerNode: handlerNode[_key], subscriberNode: subscriberNode[_key], dataNode }\n}\n\nconst resolveSubscriber = (_path, subscribers) => {\n\tconst pathArr = _path.split('.')\n\tconst key = pathArr.pop()\n\tfor (let i of pathArr) {\n\t\tif (!subscribers[i]) subscribers[i] = {}\n\t\tsubscribers = subscribers[i]\n\t}\n\treturn subscribers[key]\n}\n\nexport { resolveReactivePath, resolve, resolveSubscriber }\n","import { inform, exec } from './render-queue.js'\nimport ARR from './utils/array-helper.js'\nimport dbg from './utils/debug.js'\n\nconst subscriberCallStack = []\n\nconst checkStack = subscriberNode => subscriberCallStack.indexOf(subscriberNode) >= 0\n\nconst pushStack = subscriberNode => subscriberCallStack.push(subscriberNode)\n\nconst popStack = subscriberNode => ARR.remove(subscriberCallStack, subscriberNode)\n\nconst execSubscribers = (subscriberNode, data) => {\n\t// Stop chain reaction when being called again in the context\n\t// There is no way for the caller to know it shouldn't update the node again\n\t// So this is the only method to avoid recursion\n\t// Push the current subscriberNode to stack as an identifier\n\tpushStack(subscriberNode)\n\t// Execute the subscriber function\n\tinform()\n\ttry {\n\t\tfor (const subscriber of subscriberNode) subscriber(data)\n\t} catch (e) {\n\t\tdbg.error('Error caught when executing subscribers:\\n', e)\n\t}\n\texec()\n\t// Remove the subscriberNode from the stack so it could be called again\n\tpopStack(subscriberNode)\n}\n\nexport { subscriberCallStack, checkStack, pushStack, popStack, execSubscribers }\n","/* eslint-disable no-self-compare */\nconst isnan = obj => obj !== obj\n\nexport default isnan\n","import { resolve } from './resolver.js'\nimport { inform, exec, queue } from './render-queue.js'\nimport { execSubscribers } from './subscriber-call-stack.js'\nimport ARR from './utils/array-helper.js'\nimport isnan from './utils/isnan.js'\n\nconst initDataNode = ({parentNode, dataNode, handlerNode, subscriberNode, state, _key}) => {\n\tObject.defineProperty(parentNode, _key, {\n\t\tget() {\n\t\t\treturn dataNode[_key]\n\t\t},\n\t\tset(value) {\n\t\t\t// Comparing NaN is like eating a cake and suddenly encounter a grain of sand\n\t\t\tif (dataNode[_key] === value || (isnan(dataNode[_key]) && isnan(value))) return\n\t\t\tdataNode[_key] = value\n\t\t\tinform()\n\t\t\tqueue(handlerNode)\n\t\t\texec()\n\t\t\tif (subscriberNode.length > 0) execSubscribers(subscriberNode, {state, value})\n\t\t},\n\t\tenumerable: true\n\t})\n}\n\nconst initBinding = ({bind, state, handlers, subscribers, innerData}) => {\n\tconst _path = ARR.copy(bind[0])\n\tconst _key = _path.pop()\n\tconst { parentNode, handlerNode, subscriberNode, dataNode } = resolve({\n\t\t_path,\n\t\t_key,\n\t\tdata: state.$data,\n\t\thandlers,\n\t\tsubscribers,\n\t\tinnerData\n\t})\n\n\t// Initlize data binding node if not exist\n\tif (!Object.prototype.hasOwnProperty.call(parentNode, _key)) initDataNode({parentNode, dataNode, handlerNode, subscriberNode, state, _key})\n\t// Update default value\n\t// bind[1] is the default value for this node\n\tif (bind.length > 1) parentNode[_key] = bind[1]\n\n\treturn {dataNode, parentNode, handlerNode, subscriberNode, _key}\n}\n\nexport default initBinding\n","/* Get new events that works in all target browsers\n * though a little bit old-fashioned\n */\nconst getEvent = (name, props = {\n\tbubbles: false,\n\tcancelable: false\n}) => {\n\tconst event = document.createEvent('Event')\n\tevent.initEvent(name, props.bubbles, props.cancelable)\n\treturn event\n}\n\nexport default getEvent\n","import initBinding from './binding.js'\nimport { queue, inform, exec } from './render-queue.js'\nimport ARR from './utils/array-helper.js'\nimport getEvent from './utils/event-helper.js'\nimport { mixVal } from './utils/literals-mix.js'\nimport dbg from './utils/debug.js'\n\nconst checkValidType = obj => ['number', 'boolean', 'string'].indexOf(typeof obj) > -1\n\n// SVG tags require namespace to work properly\nconst createByTag = (tag, svg) => {\n\tif (svg) return document.createElementNS('http://www.w3.org/2000/svg', tag)\n\treturn document.createElement(tag)\n}\n\nconst getElement = ({tag, ref, refs, svg}) => {\n\tconst element = createByTag(tag, svg)\n\tif (ref) Object.defineProperty(refs, ref, {\n\t\tvalue: element,\n\t\tenumerable: true\n\t})\n\treturn element\n}\n\nconst regTmpl = ({val, state, handlers, subscribers, innerData, handler}) => {\n\tif (Array.isArray(val)) {\n\t\tconst [strs, ...exprs] = val\n\t\tconst tmpl = [strs]\n\t\tconst _handler = () => handler(mixVal(...tmpl))\n\t\ttmpl.push(...exprs.map((item) => {\n\t\t\tconst {dataNode, handlerNode, _key} = initBinding({bind: item, state, handlers, subscribers, innerData})\n\t\t\thandlerNode.push(_handler)\n\t\t\treturn {dataNode, _key}\n\t\t}))\n\t\treturn _handler\n\t}\n\treturn () => val\n}\n\nconst updateOthers = ({parentNode, handlerNode, _handler, _key, value}) => {\n\t// Remove handler for this element temporarily\n\tARR.remove(handlerNode, _handler)\n\tinform()\n\tparentNode[_key] = value\n\texec()\n\t// Add back the handler\n\tARR.push(handlerNode, _handler)\n}\n\nconst addValListener = ({_handler, state, handlers, subscribers, innerData, element, key, expr}) => {\n\tconst {parentNode, handlerNode, _key} = initBinding({bind: expr, state, handlers, subscribers, innerData})\n\tconst _update = () => updateOthers({parentNode, handlerNode, _handler, _key, value: element.value})\n\tif (key === 'value') {\n\t\t// Listen to input, keyup and change events in order to work in most browsers.\n\t\telement.addEventListener('input', _update, true)\n\t\telement.addEventListener('keyup', _update, true)\n\t\telement.addEventListener('change', _update, true)\n\t\t// // Remove keyup and change listener if browser supports input event correctly\n\t\t// const removeListener = () => {\n\t\t// \telement.removeEventListener('input', removeListener, true)\n\t\t// \telement.removeEventListener('keyup', _update, true)\n\t\t// \telement.removeEventListener('change', _update, true)\n\t\t// }\n\t\t// element.addEventListener('input', removeListener, true)\n\t} else {\n\t\telement.addEventListener('change', () => {\n\t\t\t// Trigger change to the element it-self\n\t\t\telement.dispatchEvent(getEvent('ef-change-event'))\n\t\t\tif (element.tagName === 'INPUT' && element.type === 'radio' && element.name !== '') {\n\t\t\t\t// Trigger change to the the same named radios\n\t\t\t\tconst radios = document.querySelectorAll(`input[name=${element.name}]`)\n\t\t\t\tif (radios) {\n\t\t\t\t\tconst selected = ARR.copy(radios)\n\t\t\t\t\tARR.remove(selected, element)\n\n\t\t\t\t\t/* Event triggering could cause unwanted render triggers\n\t\t\t\t\t * no better ways came up at the moment\n\t\t\t\t\t */\n\t\t\t\t\tfor (let i of selected) i.dispatchEvent(getEvent('ef-change-event'))\n\t\t\t\t}\n\t\t\t}\n\t\t}, true)\n\t\t// Use custom event to avoid loops and conflicts\n\t\telement.addEventListener('ef-change-event', () => updateOthers({parentNode, handlerNode, _handler, _key, value: element.checked}))\n\t}\n}\n\nconst getAttrHandler = (element, key) => {\n\tif (key === 'class') return (val) => {\n\t\tval = `${val}`.replace(/\\s+/g, ' ').trim()\n\t\t// Remove attribute when value is empty\n\t\tif (!val) return element.removeAttribute(key)\n\t\telement.setAttribute(key, val)\n\t}\n\treturn (val) => {\n\t\t// Remove attribute when value is empty\n\t\tif (val === '') return element.removeAttribute(key)\n\t\telement.setAttribute(key, val)\n\t}\n}\n\nconst addAttr = ({element, attr, key, state, handlers, subscribers, innerData}) => {\n\tif (checkValidType(attr)) element.setAttribute(key, attr)\n\telse {\n\t\tconst handler = getAttrHandler(element, key)\n\t\tqueue([regTmpl({val: attr, state, handlers, subscribers, innerData, handler})])\n\t}\n}\n\nconst addProp = ({element, prop, key, state, handlers, subscribers, innerData}) => {\n\tif (checkValidType(prop)) element[key] = prop\n\telse {\n\t\tconst handler = (val) => {\n\t\t\telement[key] = val\n\t\t}\n\t\tconst _handler = regTmpl({val: prop, state, handlers, subscribers, innerData, handler})\n\t\tif ((key === 'value' ||\n\t\t\tkey === 'checked') &&\n\t\t\t!prop[0]) addValListener({_handler, state, handlers, subscribers, innerData, element, key, expr: prop[1]})\n\t\tqueue([_handler])\n\t}\n}\n\n\nconst rawHandler = val => val\n\nconst addEvent = ({element, event, state, handlers, subscribers, innerData}) => {\n\n\t/**\n\t *  l: listener                 : string\n\t *  m: method                   : string\n\t *  s: stopPropagation          : number/undefined\n\t *  i: stopImmediatePropagation : number/undefined\n\t *  p: preventDefault           : number/undefined\n\t *  h: shiftKey                 : number/undefined\n\t *  a: altKey                   : number/undefined\n\t *  c: ctrlKey                  : number/undefined\n\t *  t: metaKey                  : number/undefined\n\t *  u: capture                  : number/undefined\n\t *  k: keyCodes                 : array/undefined\n\t *  v: value                    : string/array/undefined\n\t */\n\tconst {l, m, s, i, p, h, a, c, t, u, k, v} = event\n\tconst _handler = regTmpl({val: v, state, handlers, subscribers, innerData, handler: rawHandler})\n\telement.addEventListener(l, (e) => {\n\t\tif (!!h !== !!e.shiftKey ||\n\t\t\t!!a !== !!e.altKey ||\n\t\t\t!!c !== !!e.ctrlKey ||\n\t\t\t!!t !== !!e.metaKey ||\n\t\t\t(k && k.indexOf(e.which) === -1)) return\n\t\tif (s) e.stopPropagation()\n\t\tif (i) e.stopImmediatePropagation()\n\t\tif (p) e.preventDefault()\n\t\tif (state.$methods[m]) state.$methods[m]({e, value: _handler(), state})\n\t\telse if (process.env.NODE_ENV !== 'production') dbg.warn(`Method named '${m}' not found! Value been passed is:`, _handler())\n\t}, !!u)\n}\n\nconst createElement = ({info, state, innerData, refs, handlers, subscribers, svg}) => {\n\n\t/**\n\t *  t: tag       : string\n\t *  a: attr      : object\n\t *  p: prop      : object\n\t *  e: event     : array\n\t *  r: reference : string\n\t */\n\tconst {t, a, p, e, r} = info\n\tconst element = getElement({tag: t, ref: r, refs, svg})\n\tfor (let i in a) addAttr({element, attr: a[i], key: i, state, handlers, subscribers, innerData})\n\tfor (let i in p) addProp({element, prop: p[i], key: i, state, handlers, subscribers, innerData})\n\tfor (let i in e) addEvent({element, event: e[i], state, handlers, subscribers, innerData})\n\treturn element\n}\n\nexport default createElement\n","const proto = Node.prototype\n// const safeZone = document.createDocumentFragment()\n\nconst DOM = {\n\t// addClass(node, className) {\n\t// \tconst classes = className.split(' ')\n\t// \tnode.classList.add(...classes)\n\t// },\n\n\t// removeClass(node, className) {\n\t// \tconst classes = className.split(' ')\n\t// \tnode.classList.remove(...classes)\n\t// },\n\n\t// toggleClass(node, className) {\n\t// \tconst classes = className.split(' ')\n\t// \tconst classArr = node.className.split(' ')\n\t// \tfor (let i of classes) {\n\t// \t\tconst classIndex = classArr.indexOf(i)\n\t// \t\tif (classIndex > -1) {\n\t// \t\t\tclassArr.splice(classIndex, 1)\n\t// \t\t} else {\n\t// \t\t\tclassArr.push(i)\n\t// \t\t}\n\t// \t}\n\t// \tnode.className = classArr.join(' ').trim()\n\t// },\n\n\t// replaceWith(node, newNode) {\n\t// \tconst parent = node.parentNode\n\t// \tif (parent) proto.replaceChild.call(parent, newNode, node)\n\t// },\n\n\t// swap(node, newNode) {\n\t// \tconst nodeParent = node.parentNode\n\t// \tconst newNodeParent = newNode.parentNode\n\t// \tconst nodeSibling = node.nextSibling\n\t// \tconst newNodeSibling = newNode.nextSibling\n\t// \tif (nodeParent && newNodeParent) {\n\t// \t\tproto.insertBefore.call(nodeParent, newNode, nodeSibling)\n\t// \t\tproto.insertBefore.call(newNodeParent, node, newNodeSibling)\n\t// \t}\n\t// },\n\n\tbefore(node, ...nodes) {\n\t\tconst tempFragment = document.createDocumentFragment()\n\t\tnodes.reverse()\n\t\tfor (let i of nodes) proto.appendChild.call(tempFragment, i)\n\t\tproto.insertBefore.call(node.parentNode, tempFragment, node)\n\t},\n\n\tafter(node, ...nodes) {\n\t\tconst tempFragment = document.createDocumentFragment()\n\t\tfor (let i of nodes) proto.appendChild.call(tempFragment, i)\n\t\tif (node.nextSibling) proto.insertBefore.call(node.parentNode, tempFragment, node.nextSibling)\n\t\telse proto.appendChild.call(node.parentNode, tempFragment)\n\t},\n\n\tappend(node, ...nodes) {\n\t\tif ([1,9,11].indexOf(node.nodeType) === -1) return\n\t\tconst tempFragment = document.createDocumentFragment()\n\t\tfor (let i of nodes) proto.appendChild.call(tempFragment, i)\n\t\tproto.appendChild.call(node, tempFragment)\n\t},\n\n\t// prepend(node, ...nodes) {\n\t// \tif ([1,9,11].indexOf(node.nodeType) === -1) {\n\t// \t\treturn\n\t// \t}\n\t// \tconst tempFragment = document.createDocumentFragment()\n\t// \tnodes.reverse()\n\t// \tfor (let i of nodes) {\n\t// \t\tproto.appendChild.call(tempFragment, i)\n\t// \t}\n\t// \tif (node.firstChild) {\n\t// \t\tproto.insertBefore.call(node, tempFragment, node.firstChild)\n\t// \t} else {\n\t// \t\tproto.appendChild.call(node, tempFragment)\n\t// \t}\n\t// },\n\n\t// appendTo(node, newNode) {\n\t// \tproto.appendChild.call(newNode, node)\n\t// },\n\n\t// prependTo(node, newNode) {\n\t// \tif (newNode.firstChild) {\n\t// \t\tproto.insertBefore.call(newNode, node, node.firstChild)\n\t// \t} else {\n\t// \t\tproto.appendChild.call(newNode, node)\n\t// \t}\n\t// },\n\n\t// empty(node) {\n\t// \tnode.innerHTML = ''\n\t// },\n\n\tremove(node) {\n\t\tproto.removeChild.call(node.parentNode, node)\n\t},\n\n\t// safeRemove(node) {\n\t// \tproto.appendChild.call(safeZone, node)\n\t// }\n}\n\nexport default DOM\n","import DOM from './dom-helper.js'\nimport ARR from './array-helper.js'\nimport { inform, exec } from '../render-queue.js'\n\nconst DOMARR = {\n\tempty() {\n\t\tinform()\n\t\tfor (let i of ARR.copy(this)) i.$destroy()\n\t\texec()\n\t\tARR.empty(this)\n\t},\n\tpop() {\n\t\tif (this.length === 0) return\n\t\tconst poped = ARR.pop(this)\n\t\tpoped.$umount()\n\t\treturn poped\n\t},\n\tpush({state, key, anchor}, ...items) {\n\t\tconst elements = []\n\t\tinform()\n\t\tfor (let i of items) ARR.push(elements, i.$mount({parent: state, key}))\n\t\tif (this.length === 0) DOM.after(anchor, ...elements)\n\t\telse DOM.after(this[this.length - 1].$ctx.nodeInfo.placeholder, ...elements)\n\t\texec()\n\t\treturn ARR.push(this, ...items)\n\t},\n\tremove(item) {\n\t\tif (this.indexOf(item) === -1) return\n\t\titem.$umount()\n\t\treturn item\n\t},\n\treverse({state, key, anchor}) {\n\t\tif (this.length === 0) return this\n\t\tconst tempArr = ARR.copy(this)\n\t\tconst elements = []\n\t\tinform()\n\t\tfor (let i = tempArr.length - 1; i >= 0; i--) {\n\t\t\ttempArr[i].$umount()\n\t\t\tARR.push(elements, tempArr[i].$mount({parent: state, key}))\n\t\t}\n\t\tARR.push(this, ...ARR.reverse(tempArr))\n\t\tDOM.after(anchor, ...elements)\n\t\texec()\n\t\treturn this\n\t},\n\tshift() {\n\t\tif (this.length === 0) return\n\t\tconst shifted = ARR.shift(this)\n\t\tshifted.$umount()\n\t\treturn shifted\n\t},\n\tsort({state, key, anchor}, fn) {\n\t\tif (this.length === 0) return this\n\t\tconst sorted = ARR.copy(ARR.sort(this, fn))\n\t\tconst elements = []\n\t\tinform()\n\t\tfor (let i of sorted) {\n\t\t\ti.$umount()\n\t\t\tARR.push(elements, i.$mount({parent: state, key}))\n\t\t}\n\t\tARR.push(this, ...sorted)\n\t\tDOM.after(anchor, ...elements)\n\t\texec()\n\t\treturn this\n\t},\n\tsplice(...args) {\n\t\tif (this.length === 0) return this\n\t\tconst spliced = ARR.splice(ARR.copy(this), ...args)\n\t\tinform()\n\t\tfor (let i of spliced) i.$umount()\n\t\texec()\n\t\treturn spliced\n\t},\n\tunshift({state, key, anchor}, ...items) {\n\t\tif (this.length === 0) return this.push(...items).length\n\t\tconst elements = []\n\t\tinform()\n\t\tfor (let i of items) ARR.push(elements, i.$mount({parent: state, key}))\n\t\tDOM.after(anchor, ...elements)\n\t\texec()\n\t\treturn ARR.unshift(this, ...items)\n\t}\n}\n\nconst defineArr = (arr, info) => {\n\tObject.defineProperties(arr, {\n\t\tempty: {value: DOMARR.empty},\n\t\tpop: {value: DOMARR.pop},\n\t\tpush: {value: DOMARR.push.bind(arr, info)},\n\t\tremove: {value: DOMARR.remove},\n\t\treverse: {value: DOMARR.reverse.bind(arr, info)},\n\t\tshift: {value: DOMARR.shift},\n\t\tsort: {value: DOMARR.sort.bind(arr, info)},\n\t\tsplice: {value: DOMARR.splice},\n\t\tunshift: {value: DOMARR.unshift.bind(arr, info)}\n\t})\n\treturn arr\n}\n\nexport default defineArr\n","import createElement from './element-creator.js'\nimport { queue, inform, exec } from './render-queue.js'\nimport DOM from './utils/dom-helper.js'\nimport ARR from './utils/array-helper.js'\nimport defineArr from './utils/dom-arr-helper.js'\nimport typeOf from './utils/type-of.js'\nimport dbg from './utils/debug.js'\nimport initBinding from './binding.js'\n\nconst nullComponent = {}\n\nconst bindTextNode = ({node, state, handlers, subscribers, innerData, element}) => {\n\t// Data binding text node\n\tconst textNode = document.createTextNode('')\n\tconst { dataNode, handlerNode, _key } = initBinding({bind: node, state, handlers, subscribers, innerData})\n\tconst handler = () => {\n\t\ttextNode.textContent = dataNode[_key]\n\t}\n\thandlerNode.push(handler)\n\tqueue([handler])\n\n\t// Append element to the component\n\tDOM.append(element, textNode)\n}\n\nconst updateMountingNode = ({state, children, key, anchor, value}) => {\n\tif (children[key] === value) return\n\tif (value && value !== nullComponent) {\n\t\tif (value.$ctx.nodeInfo.parent && process.env.NODE_ENV !== 'production') dbg.warn('Better detach the component before attaching it to a new component!')\n\t\tif (value.$ctx.nodeInfo.element.contains(state.$ctx.nodeInfo.element)) {\n\t\t\tif (process.env.NODE_ENV !== 'production') dbg.warn('Cannot mount a component to it\\'s child component!')\n\t\t\treturn\n\t\t}\n\t}\n\n\tinform()\n\t// Update component\n\tif (children[key]) {\n\t\tif (value === nullComponent) value = null\n\t\telse children[key].$umount()\n\t}\n\t// Update stored value\n\tchildren[key] = value\n\tif (value) value.$mount({target: anchor, parent: state, option: 'before', key})\n\texec()\n}\n\nconst bindMountingNode = ({state, key, children, anchor}) => {\n\tObject.defineProperty(state, key, {\n\t\tget() {\n\t\t\treturn children[key]\n\t\t},\n\t\tset(value) {\n\t\t\tupdateMountingNode({state, children, key, anchor, value})\n\t\t},\n\t\tenumerable: true,\n\t\tconfigurable: true\n\t})\n}\n\nconst updateMountingList = ({state, children, key, anchor, value}) => {\n\tif (value) value = ARR.copy(value)\n\telse value = []\n\tconst fragment = document.createDocumentFragment()\n\t// Update components\n\tinform()\n\tif (children[key]) {\n\t\tfor (let j of value) {\n\t\t\tif (j.$ctx.nodeInfo.element.contains(state.$ctx.nodeInfo.element)) {\n\t\t\t\tif (process.env.NODE_ENV !== 'production') dbg.warn('Cannot mount a component to it\\'s child component!')\n\t\t\t\treturn\n\t\t\t}\n\t\t\tj.$umount()\n\t\t\tDOM.append(fragment, j.$mount({parent: state, key}))\n\t\t}\n\t\tfor (let j of ARR.copy(children[key])) j.$umount()\n\t} else for (let j of value) DOM.append(fragment, j.$mount({parent: state, key}))\n\t// Update stored value\n\tchildren[key].length = 0\n\tARR.push(children[key], ...value)\n\t// Append to current component\n\tDOM.after(anchor, fragment)\n\texec()\n}\n\nconst bindMountingList = ({state, key, children, anchor}) => {\n\tchildren[key] = defineArr([], {state, key, anchor})\n\tObject.defineProperty(state, key, {\n\t\tget() {\n\t\t\treturn children[key]\n\t\t},\n\t\tset(value) {\n\t\t\tif (children[key] && ARR.equals(children[key], value)) return\n\t\t\tupdateMountingList({state, children, key, anchor, value})\n\t\t},\n\t\tenumerable: true,\n\t\tconfigurable: true\n\t})\n}\n\nconst resolveAST = ({node, nodeType, element, state, innerData, refs, children, handlers, subscribers, svg, create}) => {\n\tswitch (nodeType) {\n\t\tcase 'string': {\n\t\t\t// Static text node\n\t\t\tDOM.append(element, document.createTextNode(node))\n\t\t\tbreak\n\t\t}\n\t\tcase 'array': {\n\t\t\tif (typeOf(node[0]) === 'object') DOM.append(element, create({node, state, innerData, refs, children, handlers, subscribers, svg, create}))\n\t\t\telse bindTextNode({node, state, handlers, subscribers, innerData, element})\n\t\t\tbreak\n\t\t}\n\t\tcase 'object': {\n\t\t\tconst anchor = document.createTextNode('')\n\t\t\tif (node.t === 0) bindMountingNode({state, key: node.n, children, anchor})\n\t\t\telse if (node.t === 1) bindMountingList({state, key: node.n, children, anchor})\n\t\t\telse throw new TypeError(`Not a standard ef.js AST: Unknown mounting point type '${node.t}'`)\n\t\t\t// Append anchor\n\t\t\tDOM.append(element, anchor)\n\t\t\t// Display anchor indicator in development mode\n\t\t\tif (process.env.NODE_ENV !== 'production') {\n\t\t\t\tDOM.before(anchor, document.createComment(`Start of mounting point '${node.n}'`))\n\t\t\t\tDOM.after(anchor, document.createComment(`End of mounting point '${node.n}'`))\n\t\t\t}\n\t\t\tbreak\n\t\t}\n\t\tdefault: {\n\t\t\tthrow new TypeError(`Not a standard ef.js AST: Unknown node type '${nodeType}'`)\n\t\t}\n\t}\n}\n\nconst create = ({node, state, innerData, refs, children, handlers, subscribers, svg, create}) => {\n\tconst [info, ...childNodes] = node\n\tif (!svg && info.t === 'svg') svg = true\n\t// First create an element according to the description\n\tconst element = createElement({info, state, innerData, refs, handlers, subscribers, svg})\n\n\t// Append child nodes\n\tfor (let i of childNodes) resolveAST({node: i, nodeType: typeOf(i), element, state, innerData, refs, children, handlers, subscribers, svg, create})\n\n\treturn element\n}\n\nexport {create, nullComponent}\n","const mountOptions = {\n\tBEFORE: 'before',\n\tAFTER: 'after',\n\tAPPEND: 'append',\n\tREPLACE: 'replace'\n}\n\nexport default mountOptions\n","import { create, nullComponent } from './creator.js'\nimport initBinding from './binding.js'\nimport { queueDom, inform, exec } from './render-queue.js'\nimport { resolveReactivePath, resolveSubscriber } from './resolver.js'\nimport DOM from './utils/dom-helper.js'\nimport ARR from './utils/array-helper.js'\nimport { assign } from './utils/polyfills.js'\nimport dbg from './utils/debug.js'\nimport mountOptions from '../mount-options.js'\n\nconst unsubscribe = (_path, fn, subscribers) => {\n\tconst subscriberNode = resolveSubscriber(_path, subscribers)\n\tARR.remove(subscriberNode, fn)\n}\n\nconst state = class {\n\tconstructor (ast) {\n\t\tconst children = {}\n\t\tconst refs = {}\n\t\tconst innerData = {}\n\t\tconst methods = {}\n\t\tconst handlers = {}\n\t\tconst subscribers = {}\n\t\tconst nodeInfo = {\n\t\t\tplaceholder: document.createTextNode(''),\n\t\t\treplace: [],\n\t\t\tparent: null,\n\t\t\tkey: null\n\t\t}\n\n\t\t/* Detatched components will be put in the safe zone.\n\t\t * Split safe zone to each component in order to make\n\t\t * the component memory recycleable when lost reference\n\t\t */\n\t\tconst safeZone = document.createDocumentFragment()\n\n\t\tif (process.env.NODE_ENV !== 'production') nodeInfo.placeholder = document.createComment('EF COMPONENT PLACEHOLDER')\n\n\t\tconst mount = () => {\n\t\t\tif (nodeInfo.replace.length > 0) {\n\t\t\t\tfor (let i of nodeInfo.replace) DOM.remove(i)\n\t\t\t\tARR.empty(nodeInfo.replace)\n\t\t\t}\n\t\t\tDOM.before(nodeInfo.placeholder, nodeInfo.element)\n\t\t}\n\n\t\tconst ctx = {\n\t\t\tmount, refs, innerData, methods, handlers,\n\t\t\tsubscribers, nodeInfo, safeZone\n\t\t}\n\n\t\tObject.defineProperty(this, '$ctx', {\n\t\t\tget() {\n\t\t\t\treturn ctx\n\t\t\t}\n\t\t})\n\n\t\tinform()\n\t\t// Init root data node\n\t\tresolveReactivePath(['$data'], this, false)\n\n\t\tnodeInfo.element = create({node: ast, state: this, innerData, refs, children, handlers, subscribers, svg: false, create})\n\t\tDOM.append(safeZone, nodeInfo.placeholder)\n\t\tqueueDom(mount)\n\t\texec()\n\t}\n\n\tget $methods() {\n\t\tconst { methods } = this.$ctx\n\t\treturn methods\n\t}\n\n\tset $methods(newMethods) {\n\t\tconst { methods } = this.$ctx\n\t\tassign(methods, newMethods)\n\t}\n\n\tget $refs() {\n\t\treturn this.$ctx.refs\n\t}\n\n\t$mount({target, option, parent, key}) {\n\t\tconst { nodeInfo, mount } = this.$ctx\n\t\tif (typeof target === 'string') target = document.querySelector(target)\n\n\t\tinform()\n\t\tif (nodeInfo.parent) {\n\t\t\tthis.$umount()\n\t\t\tif (process.env.NODE_ENV !== 'production') dbg.warn('Component detached from previous mounting point.')\n\t\t}\n\n\t\tif (!parent) parent = target\n\t\tif (!key) key = '__DIRECTMOUNT__'\n\t\tnodeInfo.parent = parent\n\t\tnodeInfo.key = key\n\t\tqueueDom(mount)\n\n\t\tif (!target) {\n\t\t\texec()\n\t\t\treturn nodeInfo.placeholder\n\t\t}\n\n\t\tswitch (option) {\n\t\t\tcase mountOptions.BEFORE: {\n\t\t\t\tDOM.before(target, nodeInfo.placeholder)\n\t\t\t\tbreak\n\t\t\t}\n\t\t\tcase mountOptions.AFTER: {\n\t\t\t\tDOM.after(target, nodeInfo.placeholder)\n\t\t\t\tbreak\n\t\t\t}\n\t\t\tcase mountOptions.REPLACE: {\n\t\t\t\tDOM.before(target, nodeInfo.placeholder)\n\t\t\t\tnodeInfo.replace.push(target)\n\t\t\t\tbreak\n\t\t\t}\n\t\t\tcase mountOptions.APPEND:\n\t\t\tdefault: {\n\t\t\t\tDOM.append(target, nodeInfo.placeholder)\n\t\t\t}\n\t\t}\n\t\treturn exec()\n\t}\n\n\t$umount() {\n\t\tconst { nodeInfo, safeZone, mount } = this.$ctx\n\t\tconst { parent, key } = nodeInfo\n\t\tnodeInfo.parent = null\n\t\tnodeInfo.key = null\n\n\t\tinform()\n\t\tif (parent && key !== '__DIRECTMOUNT__' && parent[key]) {\n\t\t\tif (Array.isArray(parent[key])) ARR.remove(parent[key], this)\n\t\t\telse parent[key] = nullComponent\n\t\t}\n\t\tDOM.append(safeZone, nodeInfo.placeholder)\n\t\tqueueDom(mount)\n\t\treturn exec()\n\t}\n\n\t$subscribe(pathStr, subscriber) {\n\t\tconst { handlers, subscribers, innerData } = this.$ctx\n\t\tconst _path = pathStr.split('.')\n\t\tconst { dataNode, subscriberNode, _key } = initBinding({bind: [_path], state: this, handlers, subscribers, innerData})\n\t\tinform()\n\t\t// Execute the subscriber function immediately\n\t\ttry {\n\t\t\tsubscriber({state: this, value: dataNode[_key]})\n\t\t\t// Put the subscriber inside the subscriberNode\n\t\t\tsubscriberNode.push(subscriber)\n\t\t} catch (e) {\n\t\t\tdbg.error('Error caught when registering subscriber:\\n', e)\n\t\t}\n\t\texec()\n\t}\n\n\t$unsubscribe(_path, fn) {\n\t\tconst { subscribers } = this.$ctx\n\t\tunsubscribe(_path, fn, subscribers)\n\t}\n\n\t$update(newState) {\n\t\tinform()\n\t\tconst tmpState = assign({}, newState)\n\t\tif (tmpState.$data) {\n\t\t\tassign(this.$data, tmpState.$data)\n\t\t\tdelete(tmpState.$data)\n\t\t}\n\t\tif (tmpState.$methods) {\n\t\t\tassign(this.$methods, tmpState.$methods)\n\t\t\tdelete(tmpState.$methods)\n\t\t}\n\t\tassign(this, tmpState)\n\t\texec()\n\t}\n\n\t$destroy() {\n\t\tconst { nodeInfo } = this.$ctx\n\t\tinform()\n\t\tthis.$umount()\n\t\tfor (let i in this) {\n\t\t\tthis[i] = null\n\t\t\tdelete this[i]\n\t\t}\n\t\t// Push DOM removement operation to query\n\t\tqueueDom(() => {\n\t\t\tDOM.remove(nodeInfo.element)\n\t\t\tDOM.remove(nodeInfo.placeholder)\n\t\t})\n\t\t// Render\n\t\treturn exec()\n\t}\n}\n\nexport default state\n","// Import everything\nimport parse from './lib/parser.js'\nimport typeOf from 'ef-core/src/lib/utils/type-of.js'\nimport { mixStr } from 'ef-core/src/lib/utils/literals-mix.js'\nimport parseEft from 'eft-parser'\nimport { version } from '../package.json'\n// Import core components\nimport {\n\tcreate as createComponent,\n\tonNextRender,\n\tinform,\n\texec,\n\tbundle,\n\tisPaused,\n\tmountOptions\n} from 'ef-core'\n\n// Set parser\nlet parser = parseEft\n\nconst create = (value) => {\n\tconst valType = typeOf(value)\n\tif (valType === 'string') value = parse(value, parser)\n\telse if (valType !== 'array') throw new TypeError('Cannot create new component without proper template or AST!')\n\n\treturn createComponent(value)\n}\n\n// Change parser\nconst setParser = (newParser) => {\n\tparser = newParser\n}\n\nconst t = (...args) => create(mixStr(...args))\n\nexport {\n\tt,\n\tcreate,\n\tonNextRender,\n\tinform,\n\texec,\n\tbundle,\n\tisPaused,\n\tsetParser,\n\tparseEft,\n\tmountOptions,\n\tversion\n}\n\nif (process.env.NODE_ENV !== 'production') console.info(`[EF] ef.js v${version} initialized!`)\n","import eftParser from 'eft-parser'\n\nconst parse = (template, parser) => {\n\tif (!parser) parser = eftParser\n\treturn parser(template)\n}\n\nexport default parse\n","// Import everything\nimport state from './lib/renderer.js'\nimport mountOptions from './mount-options.js'\nimport { onNextRender, inform, exec, bundle, isPaused } from './lib/render-queue.js'\nimport dbg from './lib/utils/debug.js'\nimport { version } from '../package.json'\n\nconst create = (value) => {\n\tconst ast = value\n\tconst ef = class extends state {\n\t\tconstructor(newState) {\n\t\t\tinform()\n\t\t\tsuper(ast)\n\t\t\tif (newState) this.$update(newState)\n\t\t\texec()\n\t\t}\n\t}\n\treturn ef\n}\n\nexport { create, onNextRender, inform, exec, bundle, isPaused, mountOptions, version }\n\nif (process.env.NODE_ENV !== 'production') dbg.info(`ef-core v${version} initialized!`)\n"],"names":["const","char","doubleChar","oct","RegExp","ucp","uni","hex","esc","b","t","n","v","f","r","O2C","SyntaxError","UC2C","val","substr","length","parseInt","String","fromCodePoint","err","U2C","substring","fromCharCode","X2C","efEscape","string","escaped","split","let","escapedStr","replace","push","join","splitWith","escapedSplit","i","splitBy","splitArr","shift","typeSymbols","reserved","mustache","spaceIndent","hashref","getErrorMsg","msg","line","checkValidType","obj","indexOf","ESCAPE","parsed","JSON","parse","e","splitDefault","slice","pathArr","_path","trim","map","_default","defaultVal","splitLiterals","strs","tmpl","mustaches","match","pushStr","textArr","str","parseText","result","exprs","dotToSpace","parseNodeProps","splited","name","value","getOption","options","keys","option","keyCode","isNaN","s","p","h","a","c","u","console","warn","setOption","parseLine","ref","parsingInfo","offset","offsetReg","trimmedLine","removed","prevDepth","removeOffset","indentReg","spaces","getIndent","content","escapedName","tagInfo","depth","test","getDepth","prevType","topExists","type","currentNode","ast","resolveDepth","minDepth","info","tag","class","newNode","l","listener","ops","k","getEventOptions","m","method","_value","ref$6","ref$7","parseEft","template","TypeError","tplType","lines","typeOf","Array","isArray","mixStr","getVal","proto","prototype","ARR","copy","arr","call","empty","equals","left","right","pop","apply","items","remove","item","index","splice","reverse","rightUnique","newArr","j","sort","fn","args","unshift","window","Set","from","unique","strTpl","dbg","log","bind","error","modificationQueue","domQueue","userQueue","count","queue","handlers","queueDom","handler","inform","execUserQueue","exec","immediate","execModifications","execDomModifications","setTimeout","assign","Object","ee","er","resolveReactivePath","enume","node","defineProperty","get","set","data","configurable","enumerable","subscriberCallStack","execSubscribers","subscriberNode","subscriber","isnan","initBinding","parentNode","_key","state","$data","subscribers","innerData","handlerNode","dataNode","resolveAllPath","hasOwnProperty","getEvent","props","bubbles","cancelable","event","document","createEvent","initEvent","getElement","ref$1","element","svg","createElementNS","createElement","refs","regTmpl","_handler","updateOthers","addAttr","key","attr","setAttribute","removeAttribute","addProp","_update","prop","expr","addEventListener","dispatchEvent","tagName","radios","querySelectorAll","selected","checked","rawHandler","addEvent","shiftKey","altKey","ctrlKey","metaKey","which","stopPropagation","stopImmediatePropagation","preventDefault","$methods","Node","DOM","before","tempFragment","createDocumentFragment","nodes","appendChild","insertBefore","after","nextSibling","append","nodeType","removeChild","DOMARR","this","$destroy","poped","$umount","elements","$mount","parent","anchor","$ctx","nodeInfo","placeholder","tempArr","shifted","sorted","spliced","nullComponent","bindMountingNode","children","contains","target","bindMountingList","defineProperties","fragment","updateMountingList","resolveAST","textNode","createTextNode","create","textContent","childNodes","mountOptions","BEFORE","AFTER","APPEND","REPLACE","safeZone","mount","ctx","prototypeAccessors","newMethods","methods","$refs","querySelector","$subscribe","pathStr","$unsubscribe","resolveSubscriber","$update","newState","tmpState","parser","valType","eftParser","super","cb","newParser"],"mappings":"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"}