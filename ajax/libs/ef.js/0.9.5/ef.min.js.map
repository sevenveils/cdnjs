{"version":3,"file":"ef.min.js","sources":["../node_modules/eft-parser/src/escape-parser.js","../node_modules/eft-parser/src/eft-parser.js","../node_modules/ef-core/src/lib/utils/type-of.js","../node_modules/ef-core/src/lib/utils/literals-mix.js","../node_modules/ef-core/src/lib/utils/array-helper.js","../node_modules/ef-core/src/lib/utils/debug.js","../node_modules/ef-core/src/lib/render-queue.js","../node_modules/ef-core/src/lib/utils/polyfills.js","../node_modules/ef-core/src/lib/resolver.js","../node_modules/ef-core/src/lib/subscriber-call-stack.js","../node_modules/ef-core/src/lib/utils/isnan.js","../node_modules/ef-core/src/lib/binding.js","../node_modules/ef-core/src/lib/utils/fast-instance-of.js","../node_modules/ef-core/src/lib/utils/buble-fix.js","../node_modules/ef-core/src/lib/utils/dom-helper.js","../node_modules/ef-core/src/lib/utils/event-helper.js","../node_modules/ef-core/src/lib/element-creator.js","../node_modules/ef-core/src/mount-options.js","../node_modules/ef-core/src/lib/creator.js","../node_modules/ef-core/src/lib/renderer.js","../node_modules/ef-core/src/lib/register-props.js","../node_modules/ef-core/src/lib/jsx-create-element.js","../node_modules/ef-core/src/ef-core.js","../src/ef.js","../src/lib/parser.js"],"sourcesContent":["// Set the escape character\nconst char = '&'\nconst doubleChar = char + char\n\n// Initlize RegExp\nconst oct = new RegExp(`\\\\${char}[0-7]{1,3}`, 'g')\nconst ucp = new RegExp(`\\\\${char}u\\\\[.*?\\\\]`, 'g')\nconst uni = new RegExp(`\\\\${char}u.{0,4}`, 'g')\nconst hex = new RegExp(`\\\\${char}x.{0,2}`, 'g')\nconst esc = new RegExp(`\\\\${char}`, 'g')\nconst b = new RegExp(`\\\\${char}b`, 'g')\nconst t = new RegExp(`\\\\${char}t`, 'g')\nconst n = new RegExp(`\\\\${char}n`, 'g')\nconst v = new RegExp(`\\\\${char}v`, 'g')\nconst f = new RegExp(`\\\\${char}f`, 'g')\nconst r = new RegExp(`\\\\${char}r`, 'g')\n\n// Escape octonary sequence\nconst O2C = () => {\n\tthrow new SyntaxError('Octal escape sequences are not allowed in EFML.')\n}\n\n// Escape unicode code point sequence\nconst UC2C = (val) => {\n\tval = val.substr(3, val.length - 4)\n\tval = parseInt(val, 16)\n\tif (!val) throw new SyntaxError('Invalid Unicode escape sequence')\n\ttry {\n\t\treturn String.fromCodePoint(val)\n\t} catch (err) {\n\t\tthrow new SyntaxError('Undefined Unicode code-point')\n\t}\n}\n\n// Escape unicode sequence\nconst U2C = (val) => {\n\tval = val.substring(2)\n\tval = parseInt(val, 16)\n\tif (!val) throw new SyntaxError('Invalid Unicode escape sequence')\n\treturn String.fromCharCode(val)\n}\n\n// Escape hexadecimal sequence\nconst X2C = (val) => {\n\tval = `00${val.substring(2)}`\n\tval = parseInt(val, 16)\n\tif (!val) throw new SyntaxError('Invalid hexadecimal escape sequence')\n\treturn String.fromCharCode(val)\n}\n\nconst efEscape = (string) => {\n\t// Split strings\n\tconst splitArr = string.split(doubleChar)\n\tconst escaped = []\n\n\t// Escape all known escape characters\n\tfor (let i of splitArr) {\n\t\tconst escapedStr = i\n\t\t\t.replace(oct, O2C)\n\t\t\t.replace(ucp, UC2C)\n\t\t\t.replace(uni, U2C)\n\t\t\t.replace(hex, X2C)\n\t\t\t.replace(b, '\\b')\n\t\t\t.replace(t, '\\t')\n\t\t\t.replace(n, '\\n')\n\t\t\t.replace(v, '\\v')\n\t\t\t.replace(f, '\\f')\n\t\t\t.replace(r, '\\r')\n\t\t\t// Remove all useless escape characters\n\t\t\t.replace(esc, '')\n\t\tescaped.push(escapedStr)\n\t}\n\t// Return escaped string\n\treturn escaped.join(char)\n}\n\nconst checkEscape = string => string[string.length - 1] === char\n\nconst splitWith = (string, char) => {\n\tconst splitArr = string.split(char)\n\tconst escapedSplit = []\n\tlet escaped = false\n\tfor (let i of splitArr) {\n\t\tif (escaped) escapedSplit[escapedSplit.length - 1] += `${char}${i}`\n\t\telse escapedSplit.push(i)\n\t\tescaped = checkEscape(i)\n\t}\n\treturn escapedSplit\n}\n\nconst splitBy = (string, char) => {\n\tconst splitArr = string.split(doubleChar)\n\tconst escaped = splitWith(splitArr.shift(), char)\n\tfor (let i of splitArr) {\n\t\tconst escapedSplit = splitWith(i, char)\n\t\tescaped[escaped.length - 1] += `${doubleChar}${escapedSplit.shift()}`\n\t\tescaped.push(...escapedSplit)\n\t}\n\treturn escaped\n}\n\nexport { efEscape, splitBy }\n","import { efEscape, splitBy } from './escape-parser.js'\n\nconst typeSymbols = '>#%@.-+'\nconst reserved = [\n\t'$ctx', '$data', '$refs', '$methods', '$mount', '$umount',\n\t'$subscribe', '$unsubscribe', '$update', '$destroy', '__DIRECTMOUNT__'\n]\nconst mustache = /\\{\\{.+?\\}\\}/g\nconst spaceIndent = /^(\\t*)( *).*/\nconst hashref = /#([^}]|}[^}])*$/\n\nconst getErrorMsg = (msg, line = -2) => `Failed to parse eft template: ${msg}. at line ${line + 1}`\n\nconst isEmpty = string => !string.replace(/\\s/, '')\n\nconst checkValidType = obj => ['number', 'boolean', 'string'].indexOf(typeof obj) > -1\n\nconst ESCAPE = (string) => {\n\tif (!string) return [string, false]\n\ttry {\n\t\tconst parsed = JSON.parse(string)\n\t\tif (['number', 'boolean'].indexOf(typeof parsed) === -1) return [efEscape(string), true]\n\t\treturn [parsed, false]\n\t} catch (e) {\n\t\treturn [efEscape(string), true]\n\t}\n}\n\nconst getOffset = (string, parsingInfo) => {\n\tif (parsingInfo.offset !== null) return\n\tparsingInfo.offset = string.match(/\\s*/)[0]\n\tif (parsingInfo.offset) parsingInfo.offsetReg = parsingInfo.offset\n}\n\nconst removeOffset = (string, parsingInfo, i) => {\n\tif (parsingInfo.offsetReg) {\n\t\tlet removed = false\n\t\tstring = string.replace(parsingInfo.offsetReg, () => {\n\t\t\tremoved = true\n\t\t\treturn ''\n\t\t})\n\t\tif (!removed) throw new SyntaxError(getErrorMsg(`Expected indent to be grater than 0 and less than ${parsingInfo.prevDepth + 1}, but got -1`, i))\n\t}\n\treturn string\n}\n\nconst getIndent = (string, parsingInfo) => {\n\tif (parsingInfo.indentReg) return\n\tconst spaces = string.match(spaceIndent)[2]\n\tif (spaces) {\n\t\tparsingInfo.indentReg = new RegExp(spaces, 'g')\n\t}\n}\n\nconst getDepth = (string, parsingInfo, i) => {\n\tlet depth = 0\n\tif (parsingInfo.indentReg) string = string.replace(/^\\s*/, str => str.replace(parsingInfo.indentReg, '\\t'))\n\tconst content = string.replace(/^\\t*/, (str) => {\n\t\tdepth = str.length\n\t\treturn ''\n\t})\n\tif ((/^\\s/).test(content)) throw new SyntaxError(getErrorMsg('Bad indent', i))\n\treturn { depth, content }\n}\n\nconst resolveDepth = (ast, depth) => {\n\tlet currentNode = ast\n\tfor (let i = 0; i < depth; i++) currentNode = currentNode[currentNode.length - 1]\n\treturn currentNode\n}\n\nconst splitDefault = (string) => {\n\tstring = string.slice(2, string.length - 2)\n\tconst [_path, ..._default] = splitBy(string, '=')\n\tconst pathArr = splitBy(_path.trim(), '.').map(efEscape)\n\tconst [defaultVal, escaped] = ESCAPE(_default.join('=').trim())\n\tif (checkValidType(defaultVal) && (escaped || (!escaped && defaultVal !== ''))) return [pathArr, defaultVal]\n\treturn [pathArr]\n}\n\nconst splitLiterals = (string) => {\n\tconst strs = string.split(mustache)\n\tif (strs.length === 1) return ESCAPE(string)[0]\n\tconst tmpl = []\n\tif (strs.length === 2 && !strs[0] && !strs[1]) tmpl.push(0)\n\telse tmpl.push(strs.map(efEscape))\n\tconst mustaches = string.match(mustache)\n\tif (mustaches) tmpl.push(...mustaches.map(splitDefault))\n\treturn tmpl\n}\n\nconst pushStr = (textArr, str) => {\n\tif (str) textArr.push(str)\n}\n\nconst parseText = (string) => {\n\tconst result = splitLiterals(string)\n\tif (checkValidType(result)) return [`${result}`]\n\tconst [strs, ...exprs] = result\n\tconst textArr = []\n\tfor (let i = 0; i < exprs.length; i++) {\n\t\tpushStr(textArr, strs[i])\n\t\ttextArr.push(exprs[i])\n\t}\n\tpushStr(textArr, strs[strs.length - 1])\n\treturn textArr\n}\n\nconst dotToSpace = val => val.replace(/\\./g, ' ')\n\nconst parseTag = (string) => {\n\tconst tagInfo = {}\n\tconst [tag, ...content] = splitBy(string.replace(hashref, (val) => {\n\t\ttagInfo.ref = val.slice(1)\n\t\treturn ''\n\t}), '.')\n\ttagInfo.tag = efEscape(tag)\n\ttagInfo.class = splitLiterals(content.join('.'))\n\tif (typeof tagInfo.class === 'string') tagInfo.class = dotToSpace(tagInfo.class).trim()\n\telse if (tagInfo.class[0]) tagInfo.class[0] = tagInfo.class[0].map(dotToSpace)\n\treturn tagInfo\n}\n\nconst parseNodeProps = (string) => {\n\tconst splited = splitBy(string, '=')\n\treturn {\n\t\tname: efEscape(splited.shift().trim()),\n\t\tvalue: splitLiterals(splited.join('=').trim())\n\t}\n}\n\nconst parseEvent = (string) => {\n\tconst splited = splitBy(string, '=')\n\treturn {\n\t\tname: splited.shift().trim(),\n\t\tvalue: splited.join('=').trim()\n\t}\n}\n\nconst setOption = (options, option) => {\n\tswitch (option) {\n\t\tcase 'stop': {\n\t\t\toptions.s = 1\n\t\t\tbreak\n\t\t}\n\t\tcase 'stopImmediate': {\n\t\t\toptions.i = 1\n\t\t\tbreak\n\t\t}\n\t\tcase 'prevent': {\n\t\t\toptions.p = 1\n\t\t\tbreak\n\t\t}\n\t\tcase 'shift': {\n\t\t\toptions.h = 1\n\t\t\tbreak\n\t\t}\n\t\tcase 'alt': {\n\t\t\toptions.a = 1\n\t\t\tbreak\n\t\t}\n\t\tcase 'ctrl': {\n\t\t\toptions.c = 1\n\t\t\tbreak\n\t\t}\n\t\tcase 'meta': {\n\t\t\toptions.t = 1\n\t\t\tbreak\n\t\t}\n\t\tcase 'capture': {\n\t\t\toptions.u = 1\n\t\t\tbreak\n\t\t}\n\t\tdefault: {\n\t\t\tconsole.warn(`Abandoned unsupported eft event option '${option}'.`)\n\t\t}\n\t}\n}\n\nconst getOption = (options, keys, option) => {\n\tconst keyCode = parseInt(option, 10)\n\tif (isNaN(keyCode)) return setOption(options, efEscape(option))\n\tkeys.push(keyCode)\n}\n\nconst getEventOptions = (name) => {\n\tconst options = {}\n\tconst keys = []\n\tconst [listener, ...ops] = splitBy(name, '.')\n\toptions.l = efEscape(listener)\n\tfor (let i of ops) getOption(options, keys, i)\n\tif (keys.length > 0) options.k = keys\n\treturn options\n}\n\nconst splitEvents = (string) => {\n\tconst [name, ...value] = splitBy(string, ':')\n\tconst content = value.join(':')\n\tconst escapedName = efEscape(name.trim())\n\tif (content) return [escapedName, splitLiterals(content)]\n\treturn [escapedName]\n}\n\nconst parseLine = ({line, ast, parsingInfo, i}) => {\n\tif (isEmpty(line)) return\n\tgetOffset(line, parsingInfo)\n\n\tconst trimmedLine = removeOffset(line, parsingInfo, i)\n\tgetIndent(trimmedLine, parsingInfo)\n\n\tlet { depth, content } = getDepth(trimmedLine, parsingInfo, i)\n\n\tif (content) {\n\t\tif (depth < 0 || depth - parsingInfo.prevDepth > 1 || (depth - parsingInfo.prevDepth === 1 && ['comment', 'tag'].indexOf(parsingInfo.prevType) === -1) || (parsingInfo.prevType !== 'comment' && depth === 0 && parsingInfo.topExists)) throw new SyntaxError(getErrorMsg(`Expected indent to be grater than 0 and less than ${parsingInfo.prevDepth + 1}, but got ${depth}`, i))\n\t\tconst type = content[0]\n\t\tcontent = content.slice(1)\n\t\tif (!content && typeSymbols.indexOf(type) >= 0) throw new SyntaxError(getErrorMsg('Empty content', i))\n\t\t// Jump back to upper level\n\t\tif (depth < parsingInfo.prevDepth || (depth === parsingInfo.prevDepth && parsingInfo.prevType === 'tag')) parsingInfo.currentNode = resolveDepth(ast, depth)\n\t\tparsingInfo.prevDepth = depth\n\n\t\tswitch (type) {\n\t\t\tcase '>': {\n\t\t\t\tconst info = parseTag(content)\n\t\t\t\tconst newNode = [{\n\t\t\t\t\tt: info.tag\n\t\t\t\t}]\n\t\t\t\tif (info.class) {\n\t\t\t\t\tnewNode[0].a = {}\n\t\t\t\t\tnewNode[0].a.class = info.class\n\t\t\t\t}\n\t\t\t\tif (info.ref) newNode[0].r = info.ref\n\t\t\t\tparsingInfo.currentNode.push(newNode)\n\t\t\t\tparsingInfo.currentNode = newNode\n\t\t\t\tparsingInfo.prevType = 'tag'\n\t\t\t\tbreak\n\t\t\t}\n\t\t\tcase '#': {\n\t\t\t\tconst { name, value } = parseNodeProps(content)\n\t\t\t\tif (!parsingInfo.currentNode[0].a) parsingInfo.currentNode[0].a = {}\n\t\t\t\tparsingInfo.currentNode[0].a[name] = value\n\t\t\t\tparsingInfo.prevType = 'attr'\n\t\t\t\tbreak\n\t\t\t}\n\t\t\tcase '%': {\n\t\t\t\tconst { name, value } = parseNodeProps(content)\n\t\t\t\tif (!parsingInfo.currentNode[0].p) parsingInfo.currentNode[0].p = {}\n\t\t\t\tparsingInfo.currentNode[0].p[name] = value\n\t\t\t\tparsingInfo.prevType = 'prop'\n\t\t\t\tbreak\n\t\t\t}\n\t\t\tcase '@': {\n\t\t\t\tconst { name, value } = parseEvent(content)\n\t\t\t\tif (!parsingInfo.currentNode[0].e) parsingInfo.currentNode[0].e = []\n\t\t\t\tconst options = getEventOptions(name)\n\t\t\t\tconst [method, _value] = splitEvents(value)\n\t\t\t\toptions.m = method\n\t\t\t\tif (_value) options.v = _value\n\t\t\t\tparsingInfo.currentNode[0].e.push(options)\n\t\t\t\tparsingInfo.prevType = 'event'\n\t\t\t\tbreak\n\t\t\t}\n\t\t\tcase '.': {\n\t\t\t\tparsingInfo.currentNode.push(...parseText(content))\n\t\t\t\tparsingInfo.prevType = 'text'\n\t\t\t\tbreak\n\t\t\t}\n\t\t\tcase '|': {\n\t\t\t\tif (parsingInfo.currentNode.length > 1) content = `\\n${content}`\n\t\t\t\tparsingInfo.currentNode.push(...parseText(content))\n\t\t\t\tparsingInfo.prevType = 'multiline-text'\n\t\t\t\tbreak\n\t\t\t}\n\t\t\tcase '-': {\n\t\t\t\tif (reserved.indexOf(content) !== -1) throw new SyntaxError(getErrorMsg(`Reserved name '${content}' should not be used`, i))\n\t\t\t\tparsingInfo.currentNode.push({\n\t\t\t\t\tn: content,\n\t\t\t\t\tt: 0\n\t\t\t\t})\n\t\t\t\tparsingInfo.prevType = 'node'\n\t\t\t\tbreak\n\t\t\t}\n\t\t\tcase '+': {\n\t\t\t\tparsingInfo.currentNode.push({\n\t\t\t\t\tn: content,\n\t\t\t\t\tt: 1\n\t\t\t\t})\n\t\t\t\tparsingInfo.prevType = 'list'\n\t\t\t\tbreak\n\t\t\t}\n\t\t\tdefault: {\n\t\t\t\tparsingInfo.prevType = 'comment'\n\t\t\t}\n\t\t}\n\t}\n}\n\nconst parseEft = (template) => {\n\tif (!template) throw new TypeError(getErrorMsg('Template required, but nothing given'))\n\tconst tplType = typeof template\n\tif (tplType !== 'string') throw new TypeError(getErrorMsg(`Expected a string, but got a(n) ${tplType}`))\n\tconst lines = template.split(/\\r?\\n/)\n\tconst ast = [{t: 0}]\n\tconst parsingInfo = {\n\t\tindentReg: null,\n\t\tprevDepth: 0,\n\t\toffset: null,\n\t\toffsetReg: null,\n\t\tprevType: 'comment',\n\t\tcurrentNode: ast,\n\t\ttopExists: false,\n\t}\n\tfor (let i = 0; i < lines.length; i++) parseLine({line: lines[i], ast, parsingInfo, i})\n\n\tif (ast.length <= 1) throw new SyntaxError(getErrorMsg('Nothing to be parsed', lines.length - 1))\n\tif (ast.length === 2 && !Array.isArray(ast[1][0])) return ast[1]\n\treturn ast\n}\n\nexport default parseEft\n","const typeOf = (obj) => {\n\tif (Array.isArray(obj)) return 'array'\n\treturn typeof obj\n}\n\nexport default typeOf\n","const mixStr = (strs, ...exprs) => {\n\tlet string = ''\n\tfor (let i = 0; i < exprs.length; i++) {\n\t\tif (typeof exprs[i] === 'undefined') string += strs[i]\n\t\telse string += (strs[i] + exprs[i])\n\t}\n\treturn string + strs[strs.length - 1]\n}\n\nconst getVal = ({dataNode, _key}) => dataNode[_key]\n\nconst mixVal = (strs, ...exprs) => {\n\tif (!strs) return getVal(exprs[0])\n\tconst template = [strs]\n\ttemplate.push(...exprs.map(getVal))\n\treturn mixStr(...template)\n}\n\nexport { mixStr, mixVal }\n","const proto = Array.prototype\n\nconst ARR = {\n\tcopy(arr) {\n\t\treturn proto.slice.call(arr, 0)\n\t},\n\tempty(arr) {\n\t\tarr.length = 0\n\t\treturn arr\n\t},\n\tequals(left, right) {\n\t\tif (!Array.isArray(right)) return false\n\t\tif (left === right) return true\n\t\tif (left.length !== right.length) return false\n\t\tfor (let i = 0, l = left.length; i < l; i++) {\n\t\t\tif (left[i] !== right[i]) return false\n\t\t}\n\t\treturn true\n\t},\n\tpop(arr) {\n\t\treturn proto.pop.call(arr)\n\t},\n\tpush(arr, ...items) {\n\t\treturn proto.push.apply(arr, items)\n\t},\n\tremove(arr, item) {\n\t\tconst index = proto.indexOf.call(arr, item)\n\t\tif (index > -1) {\n\t\t\tproto.splice.call(arr, index, 1)\n\t\t\treturn item\n\t\t}\n\t},\n\treverse(arr) {\n\t\treturn proto.reverse.call(arr)\n\t},\n\trightUnique(arr) {\n\t\tconst newArr = []\n\t\tfor (let i = 0; i < arr.length; i++) {\n\t\t\tfor (let j = i + 1; j < arr.length; j++) if (arr[i] === arr[j]) j = i += 1\n\t\t\tnewArr.push(arr[i])\n\t\t}\n\t\treturn newArr\n\t},\n\tshift(arr) {\n\t\treturn proto.shift.call(arr)\n\t},\n\tslice(arr, index, length) {\n\t\treturn proto.slice.call(arr, index, length)\n\t},\n\tsort(arr, fn) {\n\t\treturn proto.sort.call(arr, fn)\n\t},\n\tsplice(arr, ...args) {\n\t\treturn proto.splice.apply(arr, args)\n\t},\n\tunshift(arr, ...items) {\n\t\treturn proto.unshift.apply(arr, items)\n\t}\n}\n\nif (window.Set && Array.from) ARR.unique = arr => Array.from(new Set(arr))\nelse ARR.unique = ARR.rightUnique\n\nexport default ARR\n","// Wrap console functions for `[EF]` perfix\nconst strTpl = '[EF] %s'\nconst dbg = {\n\tlog: console.log.bind(console, strTpl),\n\tinfo: console.info.bind(console, strTpl),\n\twarn: console.warn.bind(console, strTpl),\n\terror: console.error.bind(console, strTpl)\n}\n\nexport default dbg\n","import ARR from './utils/array-helper.js'\nimport dbg from './utils/debug.js'\n\nconst modificationQueue = []\nconst domQueue = []\nconst userQueue = []\nlet count = 0\n\nconst queue = handlers => modificationQueue.push(...handlers)\nconst queueDom = handler => domQueue.push(handler)\nconst onNextRender = handler => userQueue.push(handler)\n\nconst isPaused = () => count > 0\n\nconst inform = () => {\n\tcount += 1\n\treturn count\n}\n\nconst execModifications = () => {\n\tif (modificationQueue.length === 0) return\n\tconst renderQueue = ARR.unique(modificationQueue)\n\tARR.empty(modificationQueue)\n\tfor (let i of renderQueue) i()\n}\n\nconst execDomModifications = () => {\n\tif (domQueue.length === 0) return\n\tconst domRenderQueue = ARR.rightUnique(domQueue)\n\tARR.empty(domQueue)\n\tfor (let i of domRenderQueue) i()\n}\n\nconst execUserQueue = () => {\n\tif (userQueue.length === 0) return\n\tconst userFnQueue = ARR.unique(userQueue)\n\tARR.empty(userQueue)\n\tfor (let i of userFnQueue) i()\n}\n\nconst exec = (immediate) => {\n\tif (!immediate && (count -= 1) > 0) return count\n\tcount = 0\n\n\tif (modificationQueue.length > 0) execModifications()\n\n\tif (domQueue.length > 0) execDomModifications()\n\n\t// Execute user queue after DOM update\n\tif (userQueue.length > 0) setTimeout(execUserQueue, 0)\n\n\treturn count\n}\n\nconst bundle = (cb) => {\n\tinform()\n\ttry {\n\t\treturn exec(cb(inform, exec))\n\t} catch (e) {\n\t\tdbg.error('Error caught when executing bundle:\\n', e)\n\t\treturn exec()\n\t}\n}\n\nexport { queue, queueDom, onNextRender, inform, exec, bundle, isPaused }\n","// Enough for ef's usage, so no need for a full polyfill\nconst legacyAssign = (ee, er) => {\n\tfor (let i in er) ee[i] = er[i]\n\treturn ee\n}\n\nconst assign = Object.assign || legacyAssign\n\nexport {assign, legacyAssign}\n","import {inform, exec} from './render-queue.js'\nimport {assign} from './utils/polyfills.js'\n\nconst resolveAllPath = ({_path, handlers, subscribers, innerData}) => {\n\tfor (let i of _path) {\n\t\tif (!handlers[i]) handlers[i] = {}\n\t\tif (!subscribers[i]) subscribers[i] = {}\n\t\tif (!innerData[i]) innerData[i] = {}\n\t\thandlers = handlers[i]\n\t\tsubscribers = subscribers[i]\n\t\tinnerData = innerData[i]\n\t}\n\treturn {\n\t\thandlerNode: handlers,\n\t\tsubscriberNode: subscribers,\n\t\tdataNode: innerData\n\t}\n}\n\n// Workaround for the third bug of buble:\n// https://github.com/bublejs/buble/issues/106\nconst defineNode = (key, obj) => {\n\tconst node = {}\n\tObject.defineProperty(obj, key, {\n\t\tget() {\n\t\t\treturn node\n\t\t},\n\t\tset(data) {\n\t\t\tinform()\n\t\t\tassign(node, data)\n\t\t\texec()\n\t\t},\n\t\tconfigurable: false,\n\t\tenumerable: true\n\t})\n\treturn node\n}\n\nconst resolveReactivePath = (_path, obj) => {\n\tfor (let i of _path) {\n\t\tif (obj[i]) obj = obj[i]\n\t\telse obj = defineNode(i, obj)\n\t}\n\treturn obj\n}\n\nconst resolve = ({_path, _key, data, handlers, subscribers, innerData}) => {\n\tconst parentNode = resolveReactivePath(_path, data)\n\tconst {handlerNode, subscriberNode, dataNode} = resolveAllPath({_path, handlers, subscribers, innerData})\n\tif (!handlerNode[_key]) handlerNode[_key] = []\n\tif (!subscriberNode[_key]) subscriberNode[_key] = []\n\t/* eslint no-undefined: \"off\" */\n\tif (!Object.prototype.hasOwnProperty.call(dataNode, _key)) dataNode[_key] = undefined\n\treturn { parentNode, handlerNode: handlerNode[_key], subscriberNode: subscriberNode[_key], dataNode }\n}\n\nconst resolveSubscriber = (_path, subscribers) => {\n\tconst pathArr = _path.split('.')\n\tconst key = pathArr.pop()\n\tfor (let i of pathArr) {\n\t\tif (!subscribers[i]) subscribers[i] = {}\n\t\tsubscribers = subscribers[i]\n\t}\n\treturn subscribers[key]\n}\n\nexport {resolveReactivePath, resolve, resolveSubscriber}\n","import {inform, exec} from './render-queue.js'\nimport ARR from './utils/array-helper.js'\nimport dbg from './utils/debug.js'\n\nconst subscriberCallStack = []\n\nconst checkStack = subscriberNode => subscriberCallStack.indexOf(subscriberNode) >= 0\n\nconst pushStack = subscriberNode => subscriberCallStack.push(subscriberNode)\n\nconst popStack = subscriberNode => ARR.remove(subscriberCallStack, subscriberNode)\n\nconst execSubscribers = (subscriberNode, data) => {\n\t// Stop chain reaction when being called again in the context\n\t// There is no way for the caller to know it shouldn't update the node again\n\t// So this is the only method to avoid recursion\n\t// Push the current subscriberNode to stack as an identifier\n\tpushStack(subscriberNode)\n\t// Execute the subscriber function\n\tinform()\n\ttry {\n\t\tfor (const subscriber of subscriberNode) subscriber(data)\n\t} catch (e) {\n\t\tdbg.error('Error caught when executing subscribers:\\n', e)\n\t}\n\texec()\n\t// Remove the subscriberNode from the stack so it could be called again\n\tpopStack(subscriberNode)\n}\n\nexport {subscriberCallStack, checkStack, pushStack, popStack, execSubscribers}\n","/* eslint-disable no-self-compare */\nconst isnan = obj => obj !== obj\n\nexport default isnan\n","import {resolve} from './resolver.js'\nimport {inform, exec, queue} from './render-queue.js'\nimport {execSubscribers} from './subscriber-call-stack.js'\nimport ARR from './utils/array-helper.js'\nimport isnan from './utils/isnan.js'\n\nconst initDataNode = ({parentNode, dataNode, handlerNode, subscriberNode, ctx, _key}) => {\n\tObject.defineProperty(parentNode, _key, {\n\t\tget() {\n\t\t\treturn dataNode[_key]\n\t\t},\n\t\tset(value) {\n\t\t\t// Comparing NaN is like eating a cake and suddenly encounter a grain of sand\n\t\t\tif (dataNode[_key] === value || (isnan(dataNode[_key]) && isnan(value))) return\n\t\t\tdataNode[_key] = value\n\t\t\tinform()\n\t\t\tqueue(handlerNode)\n\t\t\texec()\n\t\t\tif (subscriberNode.length > 0) execSubscribers(subscriberNode, {state: ctx.state, value})\n\t\t},\n\t\tenumerable: true\n\t})\n}\n\nconst initBinding = ({bind, ctx, handlers, subscribers, innerData}) => {\n\tconst _path = ARR.copy(bind[0])\n\tconst _key = _path.pop()\n\tconst {parentNode, handlerNode, subscriberNode, dataNode} = resolve({\n\t\t_path,\n\t\t_key,\n\t\tdata: ctx.data,\n\t\thandlers,\n\t\tsubscribers,\n\t\tinnerData\n\t})\n\n\t// Initlize data binding node if not exist\n\tif (!Object.prototype.hasOwnProperty.call(parentNode, _key)) initDataNode({parentNode, dataNode, handlerNode, subscriberNode, ctx, _key})\n\t// Update default value\n\t// bind[1] is the default value for this node\n\tif (bind.length > 1) parentNode[_key] = bind[1]\n\n\treturn {dataNode, parentNode, handlerNode, subscriberNode, _key}\n}\n\nexport default initBinding\n","const isInstance = (er, ee) => er.constructor === ee\n\nexport default isInstance\n","import ARR from './array-helper.js'\n\n// https://github.com/bublejs/buble/issues/197\nconst enumerableFalse = (classObj, keys) => {\n\tfor (let i of keys) Object.defineProperty(classObj.prototype, i, {enumerable: false})\n\treturn classObj\n}\n\n// https://github.com/bublejs/buble/issues/131\nconst prepareArgs = (self, node) => {\n\tconst args = ARR.copy(self)\n\tARR.unshift(args, node)\n\treturn args\n}\n\nexport {enumerableFalse, prepareArgs}\n","import ARR from './array-helper.js'\nimport isInstance from './fast-instance-of.js'\nimport {enumerableFalse, prepareArgs} from './buble-fix.js'\nimport {inform, exec} from '../render-queue.js'\n\nconst proto = Node.prototype\n\n// Will require a weakmap polyfill for IE10 and below\nconst mountingPointStore = new WeakMap()\n\nconst DOM = {}\n\nconst EFFragment = class extends Array {\n\tappendTo(node) {\n\t\tDOM.append.apply(null, prepareArgs(this, node))\n\t}\n\tinsertBeforeTo(node) {\n\t\tconst args = ARR.copy(this)\n\t\tARR.unshift(args, node)\n\t\tDOM.before.apply(null, prepareArgs(this, node))\n\t}\n\tinsertAfterTo(node) {\n\t\tconst args = ARR.copy(this)\n\t\tARR.unshift(args, node)\n\t\tDOM.after.apply(null, prepareArgs(this, node))\n\t}\n\tremove() {\n\t\tfor (let i of this) DOM.remove(i)\n\t}\n}\n\nconst MountingList = class extends Array {\n\tconstructor(info, ...args) {\n\t\tsuper(...args)\n\t\tObject.defineProperty(this, '__info__', {value: info})\n\t}\n\tempty() {\n\t\tinform()\n\t\tfor (let i of ARR.copy(this)) i.$destroy()\n\t\texec()\n\t\tARR.empty(this)\n\t}\n\tclear() {\n\t\tinform()\n\t\tfor (let i of ARR.copy(this)) i.$umount()\n\t\texec()\n\t\tARR.empty(this)\n\t}\n\tpop() {\n\t\tif (this.length === 0) return\n\t\tconst poped = super.pop()\n\t\tpoped.$umount()\n\t\treturn poped\n\t}\n\tpush(...items) {\n\t\tconst {ctx, key, anchor} = this.__info__\n\t\tconst elements = []\n\t\tinform()\n\t\tfor (let i of items) ARR.push(elements, i.$mount({parent: ctx.state, key}))\n\t\tif (this.length === 0) DOM.after(anchor, ...elements)\n\t\telse DOM.after(this[this.length - 1].$ctx.nodeInfo.placeholder, ...elements)\n\t\texec()\n\t\treturn super.push(...items)\n\t}\n\tremove(item) {\n\t\tif (this.indexOf(item) === -1) return\n\t\titem.$umount()\n\t\treturn item\n\t}\n\treverse() {\n\t\tconst {ctx, key, anchor} = this.__info__\n\t\tif (this.length === 0) return this\n\t\tconst tempArr = ARR.copy(this)\n\t\tconst elements = []\n\t\tinform()\n\t\tfor (let i = tempArr.length - 1; i >= 0; i--) {\n\t\t\ttempArr[i].$umount()\n\t\t\tARR.push(elements, tempArr[i].$mount({parent: ctx.state, key}))\n\t\t}\n\t\tsuper.push(...ARR.reverse(tempArr))\n\t\tDOM.after(anchor, ...elements)\n\t\texec()\n\t\treturn this\n\t}\n\tshift() {\n\t\tif (this.length === 0) return\n\t\tconst shifted = super.shift()\n\t\tshifted.$umount()\n\t\treturn shifted\n\t}\n\tsort(fn) {\n\t\tconst {ctx, key, anchor} = this.__info__\n\t\tif (this.length === 0) return this\n\t\tconst sorted = ARR.copy(super.sort(fn))\n\t\tconst elements = []\n\t\tinform()\n\t\tfor (let i of sorted) {\n\t\t\ti.$umount()\n\t\t\tARR.push(elements, i.$mount({parent: ctx.state, key}))\n\t\t}\n\t\tsuper.push(...sorted)\n\t\tDOM.after(anchor, ...elements)\n\t\texec()\n\t\treturn this\n\t}\n\tsplice(...args) {\n\t\tif (this.length === 0) return this\n\t\tconst spliced = ARR.splice(ARR.copy(this), ...args)\n\t\tinform()\n\t\tfor (let i of spliced) i.$umount()\n\t\texec()\n\t\treturn spliced\n\t}\n\tunshift(...items) {\n\t\tconst {ctx, key, anchor} = this.__info__\n\t\tif (this.length === 0) return this.push(...items).length\n\t\tconst elements = []\n\t\tinform()\n\t\tfor (let i of items) ARR.push(elements, i.$mount({parent: ctx.state, key}))\n\t\tDOM.after(anchor, ...elements)\n\t\texec()\n\t\treturn super.unshift(...items)\n\t}\n}\n\nDOM.before = (node, ...nodes) => {\n\tconst tempFragment = document.createDocumentFragment()\n\tfor (let i of nodes) {\n\t\tif (isInstance(i, EFFragment)) i.appendTo(tempFragment)\n\t\telse proto.appendChild.call(tempFragment, i)\n\t}\n\tproto.insertBefore.call(node.parentNode, tempFragment, node)\n}\n\nDOM.after = (node, ...nodes) => {\n\tconst tempFragment = document.createDocumentFragment()\n\tfor (let i of nodes) {\n\t\tif (isInstance(i, EFFragment)) i.appendTo(tempFragment)\n\t\telse proto.appendChild.call(tempFragment, i)\n\t}\n\tif (node.nextSibling) proto.insertBefore.call(node.parentNode, tempFragment, node.nextSibling)\n\telse proto.appendChild.call(node.parentNode, tempFragment)\n}\n\nconst handleMountingPoint = (mountingPoint, tempFragment) => {\n\tconst {node} = mountingPoint\n\tif (!node) return\n\tif (isInstance(node, MountingList)) {\n\t\tfor (let j of node) {\n\t\t\tconst {element, placeholder} = j.$ctx.nodeInfo\n\t\t\tDOM.append(tempFragment, element, placeholder)\n\t\t}\n\t} else {\n\t\tconst {element, placeholder} = node.$ctx.nodeInfo\n\t\tDOM.append(tempFragment, element, placeholder)\n\t}\n}\n\nDOM.append = (node, ...nodes) => {\n\tif (isInstance(node, EFFragment)) return node.push(...nodes)\n\tif ([1,9,11].indexOf(node.nodeType) === -1) return\n\tconst tempFragment = document.createDocumentFragment()\n\tfor (let i of nodes) {\n\t\tif (isInstance(i, EFFragment)) i.appendTo(tempFragment)\n\t\telse {\n\t\t\tproto.appendChild.call(tempFragment, i)\n\t\t\tconst mountingPoint = mountingPointStore.get(i)\n\t\t\tif (mountingPoint) handleMountingPoint(mountingPoint, tempFragment)\n\t\t}\n\t}\n\tproto.appendChild.call(node, tempFragment)\n}\n\nDOM.remove = (node) => {\n\tif (isInstance(node, EFFragment)) node.remove()\n\telse proto.removeChild.call(node.parentNode, node)\n}\n\n// addClass(node, className) {\n// \tconst classes = className.split(' ')\n// \tnode.classList.add(...classes)\n// },\n\n// removeClass(node, className) {\n// \tconst classes = className.split(' ')\n// \tnode.classList.remove(...classes)\n// },\n\n// toggleClass(node, className) {\n// \tconst classes = className.split(' ')\n// \tconst classArr = node.className.split(' ')\n// \tfor (let i of classes) {\n// \t\tconst classIndex = classArr.indexOf(i)\n// \t\tif (classIndex > -1) {\n// \t\t\tclassArr.splice(classIndex, 1)\n// \t\t} else {\n// \t\t\tclassArr.push(i)\n// \t\t}\n// \t}\n// \tnode.className = classArr.join(' ').trim()\n// },\n\n// replaceWith(node, newNode) {\n// \tconst parent = node.parentNode\n// \tif (parent) proto.replaceChild.call(parent, newNode, node)\n// },\n\n// swap(node, newNode) {\n// \tconst nodeParent = node.parentNode\n// \tconst newNodeParent = newNode.parentNode\n// \tconst nodeSibling = node.nextSibling\n// \tconst newNodeSibling = newNode.nextSibling\n// \tif (nodeParent && newNodeParent) {\n// \t\tproto.insertBefore.call(nodeParent, newNode, nodeSibling)\n// \t\tproto.insertBefore.call(newNodeParent, node, newNodeSibling)\n// \t}\n// },\n\n// prepend(node, ...nodes) {\n// \tif ([1,9,11].indexOf(node.nodeType) === -1) {\n// \t\treturn\n// \t}\n// \tconst tempFragment = document.createDocumentFragment()\n// \tnodes.reverse()\n// \tfor (let i of nodes) {\n// \t\tproto.appendChild.call(tempFragment, i)\n// \t}\n// \tif (node.firstChild) {\n// \t\tproto.insertBefore.call(node, tempFragment, node.firstChild)\n// \t} else {\n// \t\tproto.appendChild.call(node, tempFragment)\n// \t}\n// },\n\n// appendTo(node, newNode) {\n// \tproto.appendChild.call(newNode, node)\n// },\n\n// prependTo(node, newNode) {\n// \tif (newNode.firstChild) {\n// \t\tproto.insertBefore.call(newNode, node, node.firstChild)\n// \t} else {\n// \t\tproto.appendChild.call(newNode, node)\n// \t}\n// },\n\n// empty(node) {\n// \tnode.innerHTML = ''\n// },\n\nenumerableFalse(MountingList, ['constructor', 'empty', 'clear', 'pop', 'push', 'remove', 'reverse', 'shift', 'sort', 'splice', 'unshift'])\n\nexport {DOM, EFFragment, MountingList, mountingPointStore}\n","/* Get new events that works in all target browsers\n * though a little bit old-fashioned\n */\nconst getEvent = (name, props = {\n\tbubbles: false,\n\tcancelable: false\n}) => {\n\tconst event = document.createEvent('Event')\n\tevent.initEvent(name, props.bubbles, props.cancelable)\n\treturn event\n}\n\nexport default getEvent\n","import initBinding from './binding.js'\nimport {queue, inform, exec} from './render-queue.js'\nimport ARR from './utils/array-helper.js'\nimport {EFFragment} from './utils/dom-helper.js'\nimport getEvent from './utils/event-helper.js'\nimport {mixVal} from './utils/literals-mix.js'\nimport dbg from './utils/debug.js'\n\nconst checkValidType = obj => ['number', 'boolean', 'string'].indexOf(typeof obj) > -1\n\n// SVG/MathML tags w/ xlink attributes require specific namespace to work properly\nconst svgNS = 'http://www.w3.org/2000/svg'\nconst mathNS = 'http://www.w3.org/1998/Math/MathML'\nconst xlinkNS = 'http://www.w3.org/1999/xlink'\nconst createByTag = (tag, svg) => {\n\t// SVG is always the most prioritized\n\tif (svg) return document.createElementNS(svgNS, tag)\n\t// Then MathML\n\tif (tag.toLowerCase() === 'math') return document.createElementNS(mathNS, tag)\n\t// Then HTML\n\treturn document.createElement(tag)\n}\n\nconst getElement = ({tag, ref, refs, svg}) => {\n\tconst element = createByTag(tag, svg)\n\tif (ref) Object.defineProperty(refs, ref, {\n\t\tvalue: element,\n\t\tenumerable: true\n\t})\n\treturn element\n}\n\nconst regTmpl = ({val, ctx, handlers, subscribers, innerData, handler}) => {\n\tif (Array.isArray(val)) {\n\t\tconst [strs, ...exprs] = val\n\t\tconst tmpl = [strs]\n\t\tconst _handler = () => handler(mixVal(...tmpl))\n\t\ttmpl.push(...exprs.map((item) => {\n\t\t\tconst {dataNode, handlerNode, _key} = initBinding({bind: item, ctx, handlers, subscribers, innerData})\n\t\t\thandlerNode.push(_handler)\n\t\t\treturn {dataNode, _key}\n\t\t}))\n\t\treturn _handler\n\t}\n\treturn () => val\n}\n\nconst updateOthers = ({parentNode, handlerNode, _handler, _key, value}) => {\n\t// Remove handler for this element temporarily\n\tARR.remove(handlerNode, _handler)\n\tinform()\n\tparentNode[_key] = value\n\texec()\n\t// Add back the handler\n\tARR.push(handlerNode, _handler)\n}\n\nconst addValListener = ({_handler, ctx, handlers, subscribers, innerData, element, key, expr}) => {\n\tconst {parentNode, handlerNode, _key} = initBinding({bind: expr, ctx, handlers, subscribers, innerData})\n\tconst _update = () => updateOthers({parentNode, handlerNode, _handler, _key, value: element.value})\n\tif (key === 'value') {\n\t\t// Listen to input, keyup and change events in order to work in most browsers.\n\t\telement.addEventListener('input', _update, true)\n\t\telement.addEventListener('keyup', _update, true)\n\t\telement.addEventListener('change', _update, true)\n\t\t// // Remove keyup and change listener if browser supports input event correctly\n\t\t// const removeListener = () => {\n\t\t// \telement.removeEventListener('input', removeListener, true)\n\t\t// \telement.removeEventListener('keyup', _update, true)\n\t\t// \telement.removeEventListener('change', _update, true)\n\t\t// }\n\t\t// element.addEventListener('input', removeListener, true)\n\t} else {\n\t\telement.addEventListener('change', () => {\n\t\t\t// Trigger change to the element it-self\n\t\t\telement.dispatchEvent(getEvent('ef-change-event'))\n\t\t\tif (element.tagName === 'INPUT' && element.type === 'radio' && element.name !== '') {\n\t\t\t\t// Trigger change to the the same named radios\n\t\t\t\tconst radios = document.querySelectorAll(`input[name=${element.name}]`)\n\t\t\t\tif (radios) {\n\t\t\t\t\tconst selected = ARR.copy(radios)\n\t\t\t\t\tARR.remove(selected, element)\n\n\t\t\t\t\t/* Event triggering could cause unwanted render triggers\n\t\t\t\t\t * no better ways came up at the moment\n\t\t\t\t\t */\n\t\t\t\t\tfor (let i of selected) i.dispatchEvent(getEvent('ef-change-event'))\n\t\t\t\t}\n\t\t\t}\n\t\t}, true)\n\t\t// Use custom event to avoid loops and conflicts\n\t\telement.addEventListener('ef-change-event', () => updateOthers({parentNode, handlerNode, _handler, _key, value: element.checked}))\n\t}\n}\n\nconst getAttrHandler = (element, key) => {\n\tif (key === 'class') return (val) => {\n\t\tval = `${val}`.replace(/\\s+/g, ' ').trim()\n\t\t// Remove attribute when value is empty\n\t\tif (!val) return element.removeAttribute(key)\n\t\telement.setAttribute(key, val)\n\t}\n\n\t// Handle xlink namespace\n\tif (key.indexOf('xlink:') === 0) return (val) => {\n\t\t// Remove attribute when value is empty\n\t\tif (val === '') return element.removeAttributeNS(xlinkNS, key)\n\t\telement.setAttributeNS(xlinkNS, key, val)\n\t}\n\n\treturn (val) => {\n\t\t// Remove attribute when value is empty\n\t\tif (val === '') return element.removeAttribute(key)\n\t\telement.setAttribute(key, val)\n\t}\n}\n\nconst addAttr = ({element, attr, key, ctx, handlers, subscribers, innerData}) => {\n\tif (checkValidType(attr)) {\n\t\t// Handle xlink namespace\n\t\tif (key.indexOf('xlink:') === 0) return element.setAttributeNS(xlinkNS, key, attr)\n\t\treturn element.setAttribute(key, attr)\n\t}\n\n\tconst handler = getAttrHandler(element, key)\n\tqueue([regTmpl({val: attr, ctx, handlers, subscribers, innerData, handler})])\n}\n\nconst addProp = ({element, prop, key, ctx, handlers, subscribers, innerData}) => {\n\tif (checkValidType(prop)) element[key] = prop\n\telse {\n\t\tconst handler = (val) => {\n\t\t\telement[key] = val\n\t\t}\n\t\tconst _handler = regTmpl({val: prop, ctx, handlers, subscribers, innerData, handler})\n\t\tif ((key === 'value' ||\n\t\t\tkey === 'checked') &&\n\t\t\t!prop[0]) addValListener({_handler, ctx, handlers, subscribers, innerData, element, key, expr: prop[1]})\n\t\tqueue([_handler])\n\t}\n}\n\n\nconst rawHandler = val => val\n\nconst addEvent = ({element, event, ctx, handlers, subscribers, innerData}) => {\n\n\t/**\n\t *  l: listener                 : string\n\t *  m: method                   : string\n\t *  s: stopPropagation          : number/undefined\n\t *  i: stopImmediatePropagation : number/undefined\n\t *  p: preventDefault           : number/undefined\n\t *  h: shiftKey                 : number/undefined\n\t *  a: altKey                   : number/undefined\n\t *  c: ctrlKey                  : number/undefined\n\t *  t: metaKey                  : number/undefined\n\t *  u: capture                  : number/undefined\n\t *  k: keyCodes                 : array/undefined\n\t *  v: value                    : string/array/undefined\n\t */\n\tconst {l, m, s, i, p, h, a, c, t, u, k, v} = event\n\tconst _handler = regTmpl({val: v, ctx, handlers, subscribers, innerData, handler: rawHandler})\n\telement.addEventListener(l, (e) => {\n\t\tif (!!h !== !!e.shiftKey ||\n\t\t\t!!a !== !!e.altKey ||\n\t\t\t!!c !== !!e.ctrlKey ||\n\t\t\t!!t !== !!e.metaKey ||\n\t\t\t(k && k.indexOf(e.which) === -1)) return\n\t\tif (s) e.stopPropagation()\n\t\tif (i) e.stopImmediatePropagation()\n\t\tif (p) e.preventDefault()\n\t\tif (ctx.methods[m]) ctx.methods[m]({e, value: _handler(), state: ctx.state})\n\t\telse if (process.env.NODE_ENV !== 'production') dbg.warn(`Method named '${m}' not found! Value been passed is:`, _handler())\n\t}, !!u)\n}\n\nconst createElement = ({info, ctx, innerData, refs, handlers, subscribers, svg}) => {\n\n\t/**\n\t *  t: tag       : string | int, 0 means fragment\n\t *  a: attr      : object\n\t *  p: prop      : object\n\t *  e: event     : array\n\t *  r: reference : string\n\t */\n\tconst {t, a, p, e, r} = info\n\tif (t === 0) return new EFFragment()\n\tconst element = getElement({tag: t, ref: r, refs, svg})\n\tfor (let i in a) addAttr({element, attr: a[i], key: i, ctx, handlers, subscribers, innerData})\n\tfor (let i in p) addProp({element, prop: p[i], key: i, ctx, handlers, subscribers, innerData})\n\tfor (let i in e) addEvent({element, event: e[i], ctx, handlers, subscribers, innerData})\n\treturn element\n}\n\nexport default createElement\n","const mountOptions = {\n\tBEFORE: 'before',\n\tAFTER: 'after',\n\tAPPEND: 'append',\n\tREPLACE: 'replace'\n}\n\nexport default mountOptions\n","import createElement from './element-creator.js'\nimport {queue, inform, exec} from './render-queue.js'\nimport {DOM, MountingList, mountingPointStore} from './utils/dom-helper.js'\nimport ARR from './utils/array-helper.js'\nimport typeOf from './utils/type-of.js'\nimport initBinding from './binding.js'\nimport mountOptions from '../mount-options.js'\n\nconst nullComponent = Object.create(null)\n\nconst checkDestroyed = (state) => {\n\tif (!state.$ctx) throw new Error('[EF] This component has been destroyed!')\n}\n\nconst bindTextNode = ({node, ctx, handlers, subscribers, innerData, element}) => {\n\t// Data binding text node\n\tconst textNode = document.createTextNode('')\n\tconst { dataNode, handlerNode, _key } = initBinding({bind: node, ctx, handlers, subscribers, innerData})\n\tconst handler = () => {\n\t\tconst value = dataNode[_key]\n\t\tif (typeof value === 'undefined') {\n\t\t\ttextNode.textContent = ''\n\t\t\treturn\n\t\t}\n\t\ttextNode.textContent = dataNode[_key]\n\t}\n\thandlerNode.push(handler)\n\tqueue([handler])\n\n\t// Append element to the component\n\tDOM.append(element, textNode)\n}\n\nconst updateMountingNode = ({ctx, key, value}) => {\n\tconst {children} = ctx\n\tconst child = children[key]\n\tconst {anchor, node} = child\n\tif (node === value) return\n\n\tinform()\n\t// Update component\n\tif (node) {\n\t\tif (value === nullComponent) value = null\n\t\telse node.$umount()\n\t}\n\t// Update stored value\n\tchild.node = value\n\tif (value) value.$mount({target: anchor, parent: ctx.state, option: mountOptions.BEFORE, key})\n\texec()\n}\n\nconst updateMountingList = ({ctx, key, value}) => {\n\tconst {children} = ctx\n\tconst {anchor, node} = children[key]\n\tif (ARR.equals(node, value)) return\n\tif (value) value = ARR.copy(value)\n\telse value = []\n\tconst fragment = document.createDocumentFragment()\n\t// Update components\n\tinform()\n\tif (node) {\n\t\tnode.clear()\n\t\tfor (let item of value) {\n\t\t\tif (item.$ctx.nodeInfo.parent) item.$umount()\n\t\t\tDOM.append(fragment, item.$mount({parent: ctx.state, key}))\n\t\t}\n\t} else for (let item of value) DOM.append(fragment, item.$mount({parent: ctx.state, key}))\n\t// Update stored value\n\tnode.length = 0\n\tARR.push(node, ...value)\n\t// Append to current component\n\tDOM.after(anchor, fragment)\n\texec()\n}\n\nconst mountingPointUpdaters = [\n\tupdateMountingNode,\n\tupdateMountingList\n]\n\nconst applyMountingPoint = (type, key, tpl) => {\n\tObject.defineProperty(tpl.prototype, key, {\n\t\tget() {\n\t\t\tif (process.env.NODE_ENV !== 'production') checkDestroyed(this)\n\t\t\treturn this.$ctx.children[key].node\n\t\t},\n\t\tset(value) {\n\t\t\tif (process.env.NODE_ENV !== 'production') checkDestroyed(this)\n\t\t\tconst ctx = this.$ctx\n\t\t\tmountingPointUpdaters[type]({ctx, key, value})\n\t\t},\n\t\tenumerable: true\n\t})\n}\n\nconst bindMountingNode = ({ctx, key, anchor}) => {\n\tconst {children, isFragment} = ctx\n\tchildren[key] = {anchor}\n\tif (isFragment) {\n\t\tDOM.append(ctx.safeZone, anchor)\n\t\tmountingPointStore.set(anchor, children[key])\n\t}\n}\n\nconst bindMountingList = ({ctx, key, anchor}) => {\n\tconst {children, isFragment} = ctx\n\tchildren[key] = {\n\t\tnode: new MountingList({ctx, key, anchor}),\n\t\tanchor\n\t}\n\tif (isFragment) {\n\t\tDOM.append(ctx.safeZone, anchor)\n\t\tmountingPointStore.set(anchor, children[key])\n\t}\n}\n\n// Walk through the AST to perform proper actions\nconst resolveAST = ({node, nodeType, element, ctx, innerData, refs, handlers, subscribers, svg, create, EFBaseComponent}) => {\n\tswitch (nodeType) {\n\t\t// Static text node\n\t\tcase 'string': {\n\t\t\tDOM.append(element, document.createTextNode(node))\n\t\t\tbreak\n\t\t}\n\t\t// Child element or a dynamic text node\n\t\tcase 'array': {\n\t\t\t// Recursive call for child element\n\t\t\tif (typeOf(node[0]) === 'object') DOM.append(element, create({node, ctx, innerData, refs, handlers, subscribers, svg, create, EFBaseComponent}))\n\t\t\t// Dynamic text node\n\t\t\telse bindTextNode({node, ctx, handlers, subscribers, innerData, element})\n\t\t\tbreak\n\t\t}\n\t\t// Mounting points\n\t\tcase 'object': {\n\t\t\tconst anchor = document.createTextNode('')\n\t\t\t// Single node mounting point\n\t\t\tif (node.t === 0) bindMountingNode({ctx, key: node.n, anchor})\n\t\t\t// Multi node mounting point\n\t\t\telse bindMountingList({ctx, key: node.n, anchor})\n\t\t\t// Append anchor\n\t\t\tif (process.env.NODE_ENV !== 'production') DOM.append(element, document.createComment(`EF MOUNTING POINT '${node.n}' START`))\n\t\t\tDOM.append(element, anchor)\n\t\t\tif (process.env.NODE_ENV !== 'production') DOM.append(element, document.createComment(`EF MOUNTING POINT '${node.n}' END`))\n\t\t\tbreak\n\t\t}\n\t\tdefault:\n\t}\n}\n\n// Create elements based on description from AST\nconst create = ({node, ctx, innerData, refs, handlers, subscribers, svg, create, EFBaseComponent}) => {\n\tconst [info, ...childNodes] = node\n\tconst fragment = info.t === 0\n\t// Enter SVG mode\n\tif (!fragment && !svg && info.t.toLowerCase() === 'svg') svg = true\n\t// First create an element according to the description\n\tconst element = createElement({info, ctx, innerData, refs, handlers, subscribers, svg})\n\tif (fragment && process.env.NODE_ENV !== 'production') element.push(document.createComment('EF FRAGMENT START'))\n\n\t// Leave SVG mode if tag is `foreignObject`\n\tif (svg && info.t.toLowerCase() === 'foreignobject') svg = false\n\n\t// Append child nodes\n\tfor (let i of childNodes) {\n\t\tif (i instanceof EFBaseComponent) i.$mount({target: element})\n\t\telse resolveAST({node: i, nodeType: typeOf(i), element, ctx, innerData, refs, handlers, subscribers, svg, create, EFBaseComponent})\n\t}\n\tif (fragment && process.env.NODE_ENV !== 'production') element.push(document.createComment('EF FRAGMENT END'))\n\n\treturn element\n}\n\nexport {create, nullComponent, checkDestroyed, applyMountingPoint}\n","import {create, nullComponent, checkDestroyed} from './creator.js'\nimport initBinding from './binding.js'\nimport {queueDom, inform, exec} from './render-queue.js'\nimport {resolveSubscriber} from './resolver.js'\nimport {DOM, EFFragment, mountingPointStore} from './utils/dom-helper.js'\nimport ARR from './utils/array-helper.js'\nimport {assign, legacyAssign} from './utils/polyfills.js'\nimport isInstance from './utils/fast-instance-of.js'\nimport typeOf from './utils/type-of.js'\nimport {enumerableFalse} from './utils/buble-fix.js'\nimport dbg from './utils/debug.js'\nimport mountOptions from '../mount-options.js'\n\nconst unsubscribe = (pathStr, fn, subscribers) => {\n\tconst subscriberNode = resolveSubscriber(pathStr, subscribers)\n\tARR.remove(subscriberNode, fn)\n}\n\nconst EFBaseComponent = class {\n\tconstructor(ast) {\n\t\tconst children = {}\n\t\tconst refs = {}\n\t\tconst data = {}\n\t\tconst innerData = {}\n\t\tconst methods = {}\n\t\tconst handlers = {}\n\t\tconst subscribers = {}\n\t\tconst nodeInfo = {\n\t\t\tplaceholder: null,\n\t\t\treplace: [],\n\t\t\tparent: null,\n\t\t\tkey: null\n\t\t}\n\n\t\t/* Detatched components will be put in the safe zone.\n\t\t * Split safe zone to each component in order to make\n\t\t * the component memory recycleable when lost reference\n\t\t */\n\t\tconst safeZone = document.createDocumentFragment()\n\n\t\tif (process.env.NODE_ENV === 'production') nodeInfo.placeholder = document.createTextNode('')\n\t\telse nodeInfo.placeholder = document.createComment('EF COMPONENT PLACEHOLDER')\n\n\t\tconst mount = () => {\n\t\t\tif (nodeInfo.replace.length > 0) {\n\t\t\t\tfor (let i of nodeInfo.replace) DOM.remove(i)\n\t\t\t\tARR.empty(nodeInfo.replace)\n\t\t\t}\n\t\t\tDOM.before(nodeInfo.placeholder, nodeInfo.element)\n\t\t}\n\n\t\tconst ctx = {\n\t\t\tmount, refs, data, innerData, methods,\n\t\t\thandlers, subscribers, nodeInfo, safeZone,\n\t\t\tchildren, state: this, isFragment: ast[0].t === 0\n\t\t}\n\n\t\tObject.defineProperty(this, '$ctx', {\n\t\t\tvalue: ctx,\n\t\t\tenumerable: false,\n\t\t\tconfigurable: true\n\t\t})\n\n\t\tinform()\n\n\t\tnodeInfo.element = create({node: ast, ctx, innerData, refs, handlers, subscribers, svg: false, create, EFBaseComponent})\n\t\tDOM.append(safeZone, nodeInfo.placeholder)\n\t\tqueueDom(mount)\n\t\texec()\n\t}\n\n\tget $data() {\n\t\tif (process.env.NODE_ENV !== 'production') checkDestroyed(this)\n\t\treturn this.$ctx.data\n\t}\n\n\tset $data(newData) {\n\t\tif (process.env.NODE_ENV !== 'production') checkDestroyed(this)\n\t\tinform()\n\t\tassign(this.$ctx.data, newData)\n\t\texec()\n\t}\n\n\tget $methods() {\n\t\tif (process.env.NODE_ENV !== 'production') checkDestroyed(this)\n\t\treturn this.$ctx.methods\n\t}\n\n\tset $methods(newMethods) {\n\t\tif (process.env.NODE_ENV !== 'production') checkDestroyed(this)\n\t\tthis.$ctx.methods = newMethods\n\t}\n\n\tget $refs() {\n\t\tif (process.env.NODE_ENV !== 'production') checkDestroyed(this)\n\t\treturn this.$ctx.refs\n\t}\n\n\t$mount({target, option, parent, key}) {\n\t\tif (process.env.NODE_ENV !== 'production') checkDestroyed(this)\n\t\tconst { nodeInfo, mount } = this.$ctx\n\t\tif (typeof target === 'string') target = document.querySelector(target)\n\n\t\tinform()\n\t\tif (nodeInfo.parent) {\n\t\t\tthis.$umount()\n\t\t\tif (process.env.NODE_ENV !== 'production') dbg.warn('Component detached from previous mounting point.')\n\t\t}\n\n\t\tif (!parent) parent = target\n\t\tif (!key) key = '__DIRECTMOUNT__'\n\t\tnodeInfo.parent = parent\n\t\tnodeInfo.key = key\n\t\tqueueDom(mount)\n\n\t\tif (!target) {\n\t\t\texec()\n\t\t\treturn nodeInfo.placeholder\n\t\t}\n\n\t\tswitch (option) {\n\t\t\tcase mountOptions.BEFORE: {\n\t\t\t\tDOM.before(target, nodeInfo.placeholder)\n\t\t\t\tbreak\n\t\t\t}\n\t\t\tcase mountOptions.AFTER: {\n\t\t\t\tDOM.after(target, nodeInfo.placeholder)\n\t\t\t\tbreak\n\t\t\t}\n\t\t\tcase mountOptions.REPLACE: {\n\t\t\t\tDOM.before(target, nodeInfo.placeholder)\n\t\t\t\tnodeInfo.replace.push(target)\n\t\t\t\tbreak\n\t\t\t}\n\t\t\tcase mountOptions.APPEND:\n\t\t\tdefault: {\n\t\t\t\t// Parent is EFFragment should only happen when using jsx\n\t\t\t\tif (isInstance(parent, EFFragment)) DOM.append(target, nodeInfo.element)\n\t\t\t\telse DOM.append(target, nodeInfo.placeholder)\n\t\t\t}\n\t\t}\n\t\treturn exec()\n\t}\n\n\t$umount() {\n\t\tif (process.env.NODE_ENV !== 'production') checkDestroyed(this)\n\t\tconst { nodeInfo, safeZone, mount } = this.$ctx\n\t\tconst { parent, key } = nodeInfo\n\t\tnodeInfo.parent = null\n\t\tnodeInfo.key = null\n\n\t\tinform()\n\t\tif (parent) {\n\t\t\tif (key !== '__DIRECTMOUNT__') {\n\t\t\t\tif (parent[key]) {\n\t\t\t\t\tif (Array.isArray(parent[key])) {\n\t\t\t\t\t\t// Remove self from parent list mounting point\n\t\t\t\t\t\tARR.remove(parent[key], this)\n\t\t\t\t\t} else parent[key] = nullComponent\n\t\t\t\t}\n\t\t\t// Else Remove elements from fragment parent\n\t\t\t} else if (isInstance(parent, EFFragment)) ARR.remove(parent.$ctx.nodeInfo.element, nodeInfo.element)\n\t\t}\n\t\tDOM.append(safeZone, nodeInfo.placeholder)\n\t\tqueueDom(mount)\n\t\treturn exec()\n\t}\n\n\t$subscribe(pathStr, subscriber) {\n\t\tif (process.env.NODE_ENV !== 'production') checkDestroyed(this)\n\t\tconst ctx = this.$ctx\n\t\tconst { handlers, subscribers, innerData } = ctx\n\t\tconst _path = pathStr.split('.')\n\t\tconst { dataNode, subscriberNode, _key } = initBinding({bind: [_path], ctx, handlers, subscribers, innerData})\n\t\tinform()\n\t\t// Execute the subscriber function immediately\n\t\ttry {\n\t\t\tsubscriber({state: this, value: dataNode[_key]})\n\t\t\t// Put the subscriber inside the subscriberNode\n\t\t\tsubscriberNode.push(subscriber)\n\t\t} catch (e) {\n\t\t\tdbg.error('Error caught when registering subscriber:\\n', e)\n\t\t}\n\t\texec()\n\t}\n\n\t$unsubscribe(pathStr, fn) {\n\t\tif (process.env.NODE_ENV !== 'production') checkDestroyed(this)\n\t\tconst { subscribers } = this.$ctx\n\t\tunsubscribe(pathStr, fn, subscribers)\n\t}\n\n\t$update(newState) {\n\t\tif (process.env.NODE_ENV !== 'production') checkDestroyed(this)\n\t\tinform()\n\t\tlegacyAssign(this, newState)\n\t\texec()\n\t}\n\n\t$destroy() {\n\t\tif (process.env.NODE_ENV !== 'production') checkDestroyed(this)\n\t\tconst { nodeInfo, isFragment, children } = this.$ctx\n\t\tinform()\n\t\tthis.$umount()\n\t\tif (isFragment) for (let i in children) mountingPointStore.delete(children[i].anchor)\n\t\t// Detatch all mounted components\n\t\tfor (let i in this) {\n\t\t\tif (typeOf(this[i]) === 'array') this[i].clear()\n\t\t\telse this[i] = null\n\t\t}\n\t\t// Remove context\n\t\tdelete this.$ctx\n\t\t// Push DOM removement operation to query\n\t\tqueueDom(() => {\n\t\t\tDOM.remove(nodeInfo.element)\n\t\t\tDOM.remove(nodeInfo.placeholder)\n\t\t})\n\t\t// Render\n\t\treturn exec()\n\t}\n}\n\nenumerableFalse(EFBaseComponent, ['$mount', '$umount', '$subscribe', '$unsubscribe', '$update', '$destroy'])\nexport default EFBaseComponent\n","const getGetter = ({base, key}, {checkTrue, get, set}) => {\n\tif (get) {\n\t\tif (!set) throw new Error('Setter must be defined when getter exists')\n\t\treturn get\n\t}\n\n\tif (checkTrue) return function() {\n\t\treturn checkTrue(base(this)[key], this)\n\t}\n\n\treturn function() {\n\t\treturn base(this)[key]\n\t}\n}\n\nconst getSetter = ({base, key}, {checkTrue, trueVal, falseVal, get, set}) => {\n\tif (set) {\n\t\tif (!get) throw new Error('Getter must be defined when setter exists')\n\t\treturn set\n\t}\n\n\tif (checkTrue) return function(val) {\n\t\tconst baseNode = base(this)\n\t\tconst _trueVal = trueVal\n\t\tconst _falseVal = falseVal\n\n\t\tif (typeof trueVal !== 'function') trueVal = () => _trueVal\n\t\tif (typeof falseVal !== 'function') falseVal = () => _falseVal\n\n\t\tif (val) baseNode[key] = trueVal(this)\n\t\telse baseNode[key] = falseVal(this)\n\t}\n\n\treturn function(val) {\n\t\tbase(this)[key] = val\n\t}\n}\n\nconst defaultRoot = state => state.$data\nconst getBase = (root) => {\n\tif (!root) return defaultRoot\n\tif (typeof root === 'function') return root\n\tif (typeof root === 'string') root = root.split('.')\n\treturn (base) => {\n\t\tfor (let key of root) base = base[key]\n\t\treturn base\n\t}\n}\n\nconst registerProps = (tpl, propMap) => {\n\tfor (let prop in propMap) {\n\n\t\t/* Options:\n\t\t * key: key on root, default to prop\n\t\t * base: a function that returns the base of the key, default returns $data\n\t\t * trueVal: value when true, only used when checkTrue is set\n\t\t * falseVal: value when false, only used when checkTrue is set\n\t\t * checkTrue: a function returns true or false based on input value\n\t\t * get: getter, will ignore all other settings except set\n\t\t * set: setter, will ignore all other settings except get\n\t\t */\n\t\tconst options = propMap[prop]\n\n\t\tconst base = getBase(options.base)\n\t\tconst key = options.key || prop\n\n\t\tconst basicProperty = {base, key}\n\n\t\tconst get = getGetter(basicProperty, options)\n\t\tconst set = getSetter(basicProperty, options)\n\n\t\tObject.defineProperty(tpl.prototype, prop, {\n\t\t\tget,\n\t\t\tset,\n\t\t\tenumerable: true,\n\t\t\tconfigurable: false\n\t\t})\n\t}\n\n\treturn tpl\n}\n\nexport default registerProps\n","import EFBaseComponent from './renderer.js'\nimport registerProps from './register-props.js'\nimport {assign} from './utils/polyfills.js'\nimport {inform, exec} from './render-queue.js'\n\nconst Fragment = class extends EFBaseComponent {\n\tconstructor(...children) {\n\t\tsuper([{t: 0}, ...children])\n\t}\n}\n\n// Make a helper component for text fragments\nconst textFragmentAst = [{t: 0},[['text']]]\nconst TextFragment = class extends EFBaseComponent {\n\tconstructor(text) {\n\t\tinform()\n\t\tsuper(textFragmentAst)\n\t\tthis.text = text\n\t\texec()\n\t}\n}\nregisterProps(TextFragment, {text: {}})\n\nconst textToFragment = (value) => {\n\tif (typeof value === 'string') return new TextFragment(value)\n\treturn value\n}\n\nconst createElement = (tag, attrs, ...children) => {\n\t// Create special component for fragment\n\tif (tag === Fragment) return new Fragment(...children)\n\n\t// Create an instance if tag is an ef class\n\tif (Object.isPrototypeOf.call(EFBaseComponent, tag)) {\n\t\tif (children.length <= 0) return new tag(attrs)\n\t\treturn new tag(assign({children: children.map(textToFragment)}, attrs || {}))\n\t}\n\n\t// Else return the generated basic component\n\t// Transform all label only attributes to ef-supported style\n\tconst transformedAttrs = assign({}, attrs)\n\tfor (let i in transformedAttrs) {\n\t\tif (transformedAttrs[i] === true) transformedAttrs[i] = ''\n\t}\n\n\treturn new EFBaseComponent([\n\t\t{\n\t\t\tt: tag,\n\t\t\ta: transformedAttrs\n\t\t},\n\t\t...children\n\t])\n}\n\nexport {createElement, Fragment, TextFragment}\n","// Import everything\nimport EFBaseComponent from './lib/renderer.js'\nimport {applyMountingPoint} from './lib/creator.js'\nimport mountOptions from './mount-options.js'\nimport {createElement, Fragment, TextFragment} from './lib/jsx-create-element.js'\nimport registerProps from './lib/register-props.js'\nimport { onNextRender, inform, exec, bundle, isPaused } from './lib/render-queue.js'\nimport dbg from './lib/utils/debug.js'\nimport typeOf from './lib/utils/type-of.js'\nimport { version } from '../package.json'\n\n// Apply mounting point properties for classes\nconst applyMountingPoints = (node, tpl) => {\n\tconst nodeType = typeOf(node)\n\tswitch (nodeType) {\n\t\tcase 'array': {\n\t\t\tconst [info, ...childNodes] = node\n\t\t\tif (typeOf(info) === 'object') for (let i of childNodes) applyMountingPoints(i, tpl)\n\t\t\tbreak\n\t\t}\n\t\tcase 'object': {\n\t\t\tif (node.t > 1) throw new TypeError(`[EF] Not a standard ef.js AST: Unknown mounting point type '${node.t}'`)\n\t\t\tapplyMountingPoint(node.t, node.n, tpl)\n\t\t\tbreak\n\t\t}\n\t\tcase 'string': {\n\t\t\tbreak\n\t\t}\n\t\tdefault: {\n\t\t\tthrow new TypeError(`[EF] Not a standard ef.js AST: Unknown node type '${nodeType}'`)\n\t\t}\n\t}\n}\n\n// Return a brand new class for the new component\nconst create = (value) => {\n\tconst ast = value\n\tconst EFComponent = class extends EFBaseComponent {\n\t\tconstructor(newState) {\n\t\t\tinform()\n\t\t\tsuper(ast)\n\t\t\tif (newState) this.$update(newState)\n\t\t\texec()\n\t\t}\n\t}\n\tapplyMountingPoints(ast, EFComponent)\n\n\t// Workaround for a bug of buble\n\t// https://github.com/bublejs/buble/issues/197\n\tObject.defineProperty(EFComponent.prototype, 'constructor', {enumerable: false})\n\treturn EFComponent\n}\n\nexport {create, TextFragment, registerProps, createElement, Fragment, onNextRender, inform, exec, bundle, isPaused, mountOptions, version}\n\nif (process.env.NODE_ENV !== 'production') dbg.info(`ef-core v${version} initialized!`)\n","// Import everything\nimport parse from './lib/parser.js'\nimport typeOf from 'ef-core/src/lib/utils/type-of.js'\nimport { mixStr } from 'ef-core/src/lib/utils/literals-mix.js'\nimport parseEft from 'eft-parser'\nimport { version } from '../package.json'\n// Import core components\nimport {\n\tcreate as createComponent,\n\tcreateElement,\n\tregisterProps,\n\tTextFragment,\n\tFragment,\n\tonNextRender,\n\tinform,\n\texec,\n\tbundle,\n\tisPaused,\n\tmountOptions\n} from 'ef-core'\n\n// Set parser\nlet parser = parseEft\n\nconst create = (value) => {\n\tconst valType = typeOf(value)\n\tif (valType === 'string') value = parse(value, parser)\n\telse if (valType !== 'array') throw new TypeError('Cannot create new component without proper template or AST!')\n\n\treturn createComponent(value)\n}\n\n// Change parser\nconst setParser = (newParser) => {\n\tparser = newParser\n}\n\nconst t = (...args) => create(mixStr(...args))\n\nexport {\n\tt,\n\tcreate,\n\tcreateElement,\n\tregisterProps,\n\tTextFragment,\n\tFragment,\n\tonNextRender,\n\tinform,\n\texec,\n\tbundle,\n\tisPaused,\n\tsetParser,\n\tparseEft,\n\tmountOptions,\n\tversion\n}\n\nif (process.env.NODE_ENV !== 'production') console.info(`[EF] ef.js v${version} initialized!`)\n","import eftParser from 'eft-parser'\n\nconst parse = (template, parser) => {\n\tif (!parser) parser = eftParser\n\treturn parser(template)\n}\n\nexport default parse\n"],"names":["const","char","doubleChar","oct","RegExp","ucp","uni","hex","esc","b","t","n","v","f","r","O2C","SyntaxError","UC2C","val","substr","length","parseInt","String","fromCodePoint","err","U2C","substring","fromCharCode","X2C","efEscape","string","escaped","split","let","escapedStr","replace","push","join","splitWith","escapedSplit","i","splitBy","splitArr","shift","reserved","mustache","spaceIndent","hashref","getErrorMsg","msg","line","checkValidType","obj","indexOf","ESCAPE","parsed","JSON","parse","e","splitDefault","slice","pathArr","_path","trim","map","_default","defaultVal","splitLiterals","strs","tmpl","mustaches","match","pushStr","textArr","str","parseText","result","exprs","dotToSpace","parseNodeProps","splited","name","value","getOption","options","keys","option","keyCode","isNaN","s","p","h","a","c","u","console","warn","setOption","parseLine","ref","parsingInfo","offset","offsetReg","trimmedLine","removed","prevDepth","removeOffset","indentReg","spaces","getIndent","content","escapedName","tagInfo","depth","test","getDepth","prevType","topExists","type","currentNode","ast","resolveDepth","info","tag","class","newNode","l","listener","ops","k","getEventOptions","m","method","_value","ref$6","ref$7","parseEft","template","TypeError","tplType","lines","Array","isArray","typeOf","mixStr","getVal","proto","prototype","ARR","copy","arr","call","empty","equals","left","right","pop","apply","items","remove","item","index","splice","reverse","rightUnique","newArr","j","sort","fn","args","unshift","window","Set","from","unique","strTpl","dbg","log","bind","error","modificationQueue","domQueue","userQueue","count","queue","handlers","queueDom","handler","inform","execUserQueue","userFnQueue","exec","immediate","renderQueue","execModifications","domRenderQueue","execDomModifications","setTimeout","legacyAssign","ee","er","assign","Object","defineNode","key","node","defineProperty","get","set","data","configurable","enumerable","resolve","parentNode","resolveReactivePath","subscribers","innerData","handlerNode","subscriberNode","dataNode","resolveAllPath","_key","hasOwnProperty","undefined","subscriberCallStack","execSubscribers","subscriber","isnan","initBinding","ctx","state","isInstance","constructor","enumerableFalse","classObj","prepareArgs","self","Node","mountingPointStore","WeakMap","DOM","EFFragment","appendTo","append","this","insertBeforeTo","before","insertAfterTo","after","MountingList","super","$destroy","clear","$umount","poped","__info__","elements","$mount","parent","anchor","$ctx","nodeInfo","placeholder","tempArr","shifted","sorted","spliced","ref$1","tempFragment","document","createDocumentFragment","nodes","appendChild","insertBefore","nextSibling","handleMountingPoint","mountingPoint","element","nodeType","removeChild","getEvent","props","bubbles","cancelable","event","createEvent","initEvent","xlinkNS","getElement","svg","createElementNS","toLowerCase","createElement","refs","regTmpl","_handler","updateOthers","addAttr","attr","setAttributeNS","setAttribute","removeAttribute","removeAttributeNS","addProp","_update","prop","expr","addEventListener","dispatchEvent","tagName","radios","querySelectorAll","selected","checked","rawHandler","addEvent","shiftKey","altKey","ctrlKey","metaKey","which","stopPropagation","stopImmediatePropagation","preventDefault","methods","mountOptions","BEFORE","AFTER","APPEND","REPLACE","nullComponent","create","mountingPointUpdaters","child","target","fragment","resolveAST","textNode","createTextNode","EFBaseComponent","textContent","children","isFragment","safeZone","childNodes","mount","prototypeAccessors","$data","newData","$methods","newMethods","$refs","querySelector","$subscribe","pathStr","$unsubscribe","resolveSubscriber","$update","newState","delete","getGetter","Error","checkTrue","base","getSetter","baseNode","_trueVal","trueVal","_falseVal","falseVal","defaultRoot","getBase","root","registerProps","tpl","propMap","basicProperty","Fragment","textFragmentAst","TextFragment","text","textToFragment","applyMountingPoints","parser","EFComponent","valType","eftParser","cb","attrs","isPrototypeOf","transformedAttrs","newParser"],"mappings":"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"}