{"version":3,"sources":["lazyload.js"],"names":["global","factory","exports","_typeof","module","define","amd","LazyLoad","this","addOneShotEventListeners","element","instance","addClass","settings","force","getWasProcessedData","callbackIfSet","managedTags","indexOf","tagName","class_loading","setSources","isIntersecting","setWasProcessedData","callback_set","replaceExtToWebp","value","condition","replace","runningOnBrowser","window","isBot","navigator","test","supportsIntersectionObserver","supportsClassList","supportsWebp","document","createElement","elements_selector","canvas","detectWebp","webpString","threshold","thresholds","data_src","data_srcset","data_sizes","data_bg","class_loaded","class_error","load_delay","callback_load","callback_error","callback_enter","callback_finish","to_webp","getInstanceSettings","customSettings","dataPrefix","defaultSettings","getData","attribute","setData","getAttribute","removeAttribute","attrName","setAttribute","setTimeoutData","timeoutDataName","getTimeoutData","purgeProcessedElements","elements","filter","purgeOneElement","elementToPurge","createInstance","classObj","options","event","createEvent","initCustomEvent","CustomEvent","setSourcesInChildren","optionsItem","dataAttrName","toWebpFlag","childTag","parentTag","setAttributeIfValue","setSourcesBgImage","srcDataValue","setValue","backgroundImage","bgDataValue","setSourcesFunctions","IMG","parent","parentNode","srcsetDataValue","srcsetDataName","setSourcesIframe","IFRAME","VIDEO","srcDataName","setSourcesFunction","_updateLoadingCount","_elements","className","classList","add","removeClass","remove","callback","argument","mediaLoadEventName","errorEventName","addEventListener","eventName","handler","addEventListeners","errorHandler","removeEventListener","genericLoadEventName","loadHandler","_settings","success","target","eventHandler","removeEventListeners","loadAndUnobserve","observer","unobserve","cancelDelayLoad","revealElement","timeoutId","delayLoad","clearTimeout","loadDelay","rootMargin","entry","intersectionRatio","getObserverSettings","root","container","_setObserver","_manageIntersection","_observer","_onIntersection","entries","bind","_loadingCount","IntersectionObserver","length","update","plusMinus","_this","querySelectorAll","Array","forEach","call","nodeSet","observe","loadAll","destroy","_this2","load","_this3","i","autoInitialize","lazyLoadOptions"],"mappings":"kYAAC,SAAUA,EAAQC,GACC,YAAnB,oBAAOC,QAAP,YAAAC,QAAOD,WAA0C,oBAAXE,OAAyBA,OAAOF,QAAUD,IAC9D,mBAAXI,QAAyBA,OAAOC,IAAMD,OAAOJ,GACnDD,EAAOO,SAAWN,IAHnB,CAAAO,KAAA,WAAkBP,aA8UjBQ,SAAAA,EAAAA,EAAyBC,EAASC,GAClCC,IAAAA,EAASF,EAASG,WAClBC,GAAAC,EAAAL,KAGDM,EAAAA,EAAcH,eAAuBH,GACrCO,EAAAC,QAAAR,EAAAS,UAAA,IANCV,EAAyBC,EAASC,GAQpCC,EAAAF,EAAAG,EAAAO,gBAEAC,EAAMC,EAAAA,GAAiBC,EAChBD,GADgBN,EAAvBH,EAAAW,aAAAd,IApVC,IAACe,EAAmB,SAAAC,EAAAC,GAAA,OAAEA,EAAAD,EAAAE,QAAA,kBAAA,SAAAF,GAgBjBG,EAAqC,oBAAXC,OAXhCC,EAcEF,KAAsB,aAAcC,SAEf,oBAAdE,WAHT,gCACsBC,KAAED,UAAcF,WAMhCI,EAGNL,GAAMM,yBACeL,OAEfM,EAFLP,GAAoB,cAAeQ,SAASC,cAAc,KAK1DC,EAAmBV,GAhCdJ,WAAmB,IAAzBe,EAAAH,SAAAC,cAAA,UAGA,SAAMG,EAAAA,aAAaD,EAAbC,WAAmB,QACxB,IAAIC,EAAAA,UAHJf,cAGAT,QAAIwB,mBA2BmBD,GAGvBE,GACAC,kBAJuB,MAKvBC,UAAUd,GALaF,EAAAQ,SAAA,KAMvBS,UAAAA,IACAC,WAAAA,KACAC,SAAS,MACT5B,YAAAA,SACA6B,WAAAA,QACAC,QAAAA,KACAC,cAZuB,UAavBC,aAAAA,SACAC,YAAAA,QACA7B,WAAAA,EACA8B,cAAAA,KACAC,eAAAA,KACAC,aAAS,KAlBcF,eAAxB,KAiBCC,gBAAiB,KAIlBC,SAAIC,GAAAA,EAAsB,SAAAC,GAI1B,OAAMC,YAANC,EAAAF,IAKMG,EAAU,SAACnD,EAASoD,GAI1B,OAAMC,EAAUC,aANG,QAMOF,IAGxBpD,EAAQuD,SAAAA,EAARH,EAAApC,GACA,IAAAwC,EAViB,QAUjBJ,EACA,OAAApC,EAIFhB,EAAMa,aAAAA,EAAsBG,GAH3BhB,EAAQyD,gBAAaD,IAGhB3C,EAAsB,SAAAb,GAAA,OAG5BqD,EAAMhD,EApBoB,gBAKViD,SAehBjD,EAAA,SAAAL,GAAA,MAfgBsD,SAgBfH,EAAQnD,EArBiB,kBAuBH0D,EACd1D,SAARA,EAAiB2D,GAAT3D,OADcqD,EAAvBrD,EAnBMmD,aAmBNnC,IAGM4C,EAAiB,SAAA5D,GAAA,OAAjB4D,EAAAA,EAtBAT,eAsBNU,EAAA,SAAAC,GAGC,OAAOA,EAASC,OAAO,SAAA/D,GAAA,OAAYK,EAAoBL,MAAhCgE,EAAY3D,SAAAA,EAAoBL,GAAhC,OAAvB8D,EAAAC,OAAA,SAAA/D,GAAA,OAAAA,IAAAiE,KAIAC,EAAgBH,SAAOI,EAAAC,GAAA,IAAAC,EADxBpE,EAAA,IAAAkE,EAAAC,GASC,IAJDC,EAAMH,IAAAA,YAJL,yBAIKA,QAA0BC,SAAAA,KAC/B,MAAIE,IAEJA,EAAIpE,SAAWqE,YAAaF,gBACxBG,gBARJ,yBAQI,GAAA,GAAAtE,SAAAA,IAEHoE,OAAAA,cAAYG,IAoBZC,EAAgBC,SACfR,EACAV,EACDmB,EACDC,GAED,IAAMH,IAAAA,EAAAA,EAAAA,EAAuBI,EAAvBJ,EAAAA,SACLK,GAAAA,GAD4B,EAM5B,GAAA,WAAAD,EAAapE,QAAcoE,CAC1B,IAAIA,EAASpE,EAAToE,EAAJF,GACCI,EAAgB5B,EAAQ0B,EAAUF,EAAlCC,KAMGG,EAAsB,SAA5B/E,EAMCwD,EACCxC,EACA4D,GARF5D,GAaChB,EAAM4E,aAAalD,EAAAA,EAAyBoB,EAA5C8B,KA8BKI,EAAoB,SAAChF,EAASG,GAKnC,IAAI8E,EAAcvD,GAAAvB,EAAA2C,QACboC,EAAWnE,EAAAA,EAAiBkE,EAAjB9C,UACfnC,EAAcmF,EAAAA,EAAdhF,EAAwC+E,SAFzC,GAAID,EAAc,CAKlB,IAAIG,EAAJrE,EAAiBkE,EAAAL,GAChB5E,EAAIkF,MAAAA,gBAAJ,QAAgCE,EAAhC,KAGD,GAdDA,EAAA,CAWE,IAAIF,EAAWnE,EAAiBqE,EAAaR,GAK/C5E,EAAMqF,MAAAA,gBAAsBH,IAA5BG,GACCC,IAhDqB,SAACtF,EAASG,GAK/B,IAAIoF,EAAUA,GAAmBpF,EAAjC2C,QACC2B,EAAqBc,EAAQnD,YAC7BmD,EAAAvF,EAAAwF,WAEDT,GAA6B,YAA7BA,EAAoB/E,SACpByE,EAAMgB,EAAkBtC,SAAiBuC,EAAzCd,GAEA,IAAMK,EAAe9B,EAAQnD,EAASG,EAASgC,YAC/C4C,EAAAA,EAAA,QAAoCE,GACpC,IAdDQ,EAAAtC,EAAAnD,EAAA0F,GAWCX,EAAoB/E,EAAS,SAAUyF,EAAiBb,GAKzD,IAAMe,EAAAA,EAAmB3F,EAAnB2F,EAAAA,UACLZ,EAAqB5B,EAAQnD,MAARiF,EAA0B9C,IAoChDyD,OArCA,SAAA5F,EAAAG,GACC,IAAM8E,EAAe9B,EAAQnD,EAASG,EAASgC,UAM/C4C,EAAoB5E,EAASgC,MAA7B8C,IA+BAY,MA5BqB7F,SAAAA,EAASG,GAC9B4E,IAAAA,EAAAA,EAAA5C,SACAnC,EAAAmD,EAAAnD,EAAA8F,GAFArB,EAAqBzE,EAAS,MAAO8F,GAKtCf,EAAMC,EAAoB,MAApBA,GACLhF,EAAM4E,SAyBFmB,EAAAA,SAAAA,EAAoB9F,GACvB8F,IAAAA,EAAAA,EAAmB/F,UACnBC,EAAS+F,EAAAA,QACT/F,EAAqB+D,EAAgB/D,GACrC,GAAA8F,EAAA,OACAA,EAAA/F,EAAAG,GACD6E,EAAAA,oBAA2B7E,QAV5BF,EAAAgG,UAAAjC,EAAA/D,EAAAgG,UAAAjG,IAcCgF,EAAIvD,EAAmBtB,IAGtBD,EAAA,SAAAF,EAAAkG,GACDlG,EALDA,EAAAmG,UAAAC,IAAAF,GASClG,EAAIyB,YAAJzB,EAAuBkG,UAAA,IAAA,IAAAA,GAGtBG,EAAA,SAAArG,EAAAkG,GACDlG,EALDA,EAAAmG,UAAAG,OAAAJ,GAYClG,EAAIuG,UAAUvG,EAAAkG,UACbK,QAAAA,IAASC,OAAT,WAAAN,EAAA,YAAA,KACAhF,QAAA,OAAA,IAHFA,QAAA,OAAA,KAOMuF,EAAAA,SAAAA,EAAqBD,GACrBE,GANJH,EAASC,IAQLG,EAAmB,SAAC3G,EAAS4G,EAAWC,GAQ9C7G,EAAM8G,iBAAoBF,EAApBE,IAGLH,EAA0BD,SAAAA,EAAAA,EAAgBK,GAC1C/G,EAJDgH,oBAAAJ,EAAAC,IAOCG,EAAoBhH,SAAAA,EAASiH,EAAAA,GAC7BD,EAAAA,EApB4B,OAoB5BE,GACAF,EAAAA,EAb2B,aAakBD,GAC7CJ,EAJD3G,EATSgH,QASTD,IAOK5G,EAAoBgH,SAAAA,EAAxBD,EAAAH,GACAC,EAAkBI,EA1BU,OA0BwBjH,GACpD6G,EAAiBI,EAnBU,aAmBVF,GACjBF,EAAgB3C,EAnBR2C,QAmBRD,IAGA7G,EAAkBgG,SAAlB7B,EAAA+C,EAAAnH,GACAK,IAAAA,EAAciG,EAAdY,UANMjB,EAAYkB,EAAUjH,EAASoC,aAAepC,EAASqC,YAQ7DvC,EAAS+F,EAAAA,EAATtD,cAAAvC,EAAAwC,eAVD3C,EAAAqE,EAAAgD,OAaAhB,EAAMtG,EAAAA,EAAAA,eACLG,EAAMgH,EAAAA,GACLI,EAAAA,EAAoBtH,GAEpBC,EAHD+F,qBAAA,IAMCuB,EAA8BL,SAAAA,EAAAA,GAC9B,IAHDA,EAAA,SAAAA,EAAA7C,GAIAyC,EAAAA,GAAkB9G,EAAlBC,GATDsH,EAAAvH,EAAAkH,EAAAH,IAYMxG,EAAe,SAAfA,EAAe8D,GANnBiD,EAAajD,GAAO,EAAOpE,GAQ7BsH,EAAMC,EAAmBN,EAAnBM,IAELC,EAASC,EAATR,EAAAH,IAGKY,GAAAA,MAAkB,SAAlBA,SAEDH,EAAY,SAAAxH,EAAAyH,EAAAxH,GACf2H,EAAQ5H,EAAAC,GACRwH,EAAAC,UAAA1H,IAJF2H,EAAA,SAAA3H,GACC,IAAI6H,EAAYjE,EAAe5D,GAQ1B8H,IAGLC,aAAIF,GACHnE,EAAQ1D,EAAA,QAGRwH,EAAAA,SAAAA,EAAAC,EAAAxH,GACA0H,IAAAA,EAAAA,EAAAR,UAAA1E,WACEuF,EAHHpE,EAAA5D,GAIA0D,IAGDmE,EAASD,WAAc5H,WACtBwH,EAAevH,EAASkH,EAAxBlH,GACA0H,EAActH,IACb2H,GACAtE,EAAA1D,EAAA6H,KAkBDI,EAAY9H,SAAAA,GAAAA,OAF4B+H,EAAbtH,gBAAAsH,EAAAC,kBAAA,GAAtBC,EAAsB,SAAAjI,GAAA,OAK5BkI,KAAMxI,EAAWyI,YAAXzI,SAAoBmD,KAAT7C,EAAyB2D,UACzCmE,WAAKd,EAAYpE,YAAAA,EAAoBC,UAArC,OAGAnD,EAAYiE,SAAZd,EAAAc,GACAhE,KALDqH,UAAApE,EAAAC,GAEClD,KAAKyI,eAKN1I,KAAAA,cAAqB,EACpB2I,KAAAA,OAAAA,IA0FD,OAvFE3I,EAAIG,WAHLwI,oBAAqB,SAASN,GAK7B,IAAAT,EAAA3H,KAAA2I,UACAT,EAAAlI,KAAgBqH,UAAA1E,WACfzC,EAAIY,EAAAA,OAGJoH,EAQApH,EAAAsH,GAnBkBJ,EAAA9H,EAAAyH,EAAA3H,MAsBpB4I,EAAiB1I,GAVfY,EAAAsH,IAHCV,EAAiBxH,EAASyH,EAAU3H,OAiBvCyI,gBAAc,SAAAI,GACbA,EAAKnH,QAAAA,KAAAA,oBAA8BoH,KAAA9I,QAGnCyI,aAAKE,WA9BcjH,IAqCnB1B,KAAA2I,UAAKI,IAALC,qBACAhJ,KAAI4I,gBAAeK,KAAfjJ,MACHQ,EAAmB6G,KAAAA,cAIrB6B,oBAAQ,SAASlF,GAAUhE,KAAA+I,eAAAI,EALI,IAA1BnJ,KAAKmG,UAAU8C,QAAuC,IAAvBjJ,KAAK+I,eAMxCvI,EAAMH,KAAWgH,UAAjBtE,kBAKiBmG,OAAjB,SAAAlF,GAAA,IAAAoF,EAAApJ,KALMK,EAAWL,KAAKqH,UASlB9F,EACHyC,GACA3D,EAAAmI,UAAAa,iBAAAhJ,EAAA0B,mBAND/B,KAAKmG,UAAYpC,EASjBuF,MAAKnD,UAAUoD,MAAfC,KAAuBC,KA1DJlI,GAAAvB,KAAA2I,UAgEnB3I,KAAImG,UAAKwC,QAAW,SAAAzI,GACnBkJ,EAAAT,UAAAe,QAAAxJ,KAXAF,KAAK2J,WAeLC,QAAA,WAAA,IAAAC,EAAA7J,KACDA,KAAKmG,YACLnG,KAAKqH,UAALkC,QAAA,SAAArJ,GAvEmB2J,EAAAlB,UAAAf,UAAA1H,KA0EpB4J,KAAMnB,UAAA,MAEL3I,KA5EmBmG,UAAA,KAuEnBnG,KAAKqH,UAAY,MAGlByC,KAAM,SAAS5J,EAASI,GAKvBwH,EAAI9D,EAAgBmC,KAAAA,IAGnBwD,QAFD,WAAA,IAAAI,EAAA/J,KAGAA,KAAAmG,UAnFFoD,QAAA,SAAArJ,GAiFG6J,EAAKD,KAAK5J,OAUbmB,GAnVE,SAAAgD,EAAAC,GACDhD,GAAAA,EAGD,GAAAgD,EAAA2E,OAKE,IAAA,IAAArE,EAAAoF,EAAA,EAAApF,EAAAN,EAAA0F,GAAAA,GAAA,EACD5F,EAAa6E,EAAQrE,QAJtBR,EAAS6F,EAAe5F,GArHvB4F,CAADlK,EAAAuB,OAAA4I,iBAkcOnK","file":"lazyload.min.js","sourcesContent":["(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.LazyLoad = factory());\n}(this, (function () { 'use strict';\n\nconst replaceExtToWebp = (value, condition) =>\n\tcondition ? value.replace(/\\.(jpe?g|png)/gi, \".webp\") : value;\n\nconst detectWebp = () => {\n\tvar webpString = \"image/webp\";\n\tvar canvas = document.createElement(\"canvas\");\n\n\tif (canvas.getContext && canvas.getContext(\"2d\")) {\n\t\treturn canvas.toDataURL(webpString).indexOf(`data:${webpString}`) === 0;\n\t}\n\n\treturn false;\n};\n\nconst runningOnBrowser = typeof window !== \"undefined\";\n\nconst isBot =\n\t(runningOnBrowser && !(\"onscroll\" in window)) ||\n\t(\n\t\ttypeof navigator !== \"undefined\" &&\n\t\t/(gle|ing|ro)bot|crawl|spider/i.test(navigator.userAgent)\n\t);\n\nconst supportsIntersectionObserver =\n\trunningOnBrowser && \"IntersectionObserver\" in window;\n\nconst supportsClassList =\n\trunningOnBrowser && \"classList\" in document.createElement(\"p\");\n\nconst supportsWebp = runningOnBrowser && detectWebp();\n\nconst defaultSettings = {\n\telements_selector: \"img\",\n\tcontainer: isBot || runningOnBrowser ? document : null,\n\tthreshold: 300,\n\tthresholds: null,\n\tdata_src: \"src\",\n\tdata_srcset: \"srcset\",\n\tdata_sizes: \"sizes\",\n\tdata_bg: \"bg\",\n\tclass_loading: \"loading\",\n\tclass_loaded: \"loaded\",\n\tclass_error: \"error\",\n\tload_delay: 0,\n\tcallback_load: null,\n\tcallback_error: null,\n\tcallback_set: null,\n\tcallback_enter: null,\n\tcallback_finish: null,\n\tto_webp: false\n};\n\nvar getInstanceSettings = customSettings => {\n\treturn Object.assign({}, defaultSettings, customSettings);\n};\n\nconst dataPrefix = \"data-\";\nconst processedDataName = \"was-processed\";\nconst timeoutDataName = \"ll-timeout\";\nconst trueString = \"true\";\n\nconst getData = (element, attribute) => {\n\treturn element.getAttribute(dataPrefix + attribute);\n};\n\nconst setData = (element, attribute, value) => {\n\tvar attrName = dataPrefix + attribute;\n\tif (value === null) {\n\t\telement.removeAttribute(attrName);\n\t\treturn;\n\t}\n\telement.setAttribute(attrName, value);\n};\n\nconst setWasProcessedData = element =>\n\tsetData(element, processedDataName, trueString);\n\nconst getWasProcessedData = element =>\n\tgetData(element, processedDataName) === trueString;\n\nconst setTimeoutData = (element, value) =>\n\tsetData(element, timeoutDataName, value);\n\nconst getTimeoutData = element => getData(element, timeoutDataName);\n\nconst purgeProcessedElements = elements => {\n\treturn elements.filter(element => !getWasProcessedData(element));\n};\n\nconst purgeOneElement = (elements, elementToPurge) => {\n\treturn elements.filter(element => element !== elementToPurge);\n};\n\n/* Creates instance and notifies it through the window element */\nconst createInstance = function(classObj, options) {\n\tvar event;\n\tlet eventString = \"LazyLoad::Initialized\";\n\tlet instance = new classObj(options);\n\ttry {\n\t\t// Works in modern browsers\n\t\tevent = new CustomEvent(eventString, { detail: { instance } });\n\t} catch (err) {\n\t\t// Works in Internet Explorer (all versions)\n\t\tevent = document.createEvent(\"CustomEvent\");\n\t\tevent.initCustomEvent(eventString, false, false, { instance });\n\t}\n\twindow.dispatchEvent(event);\n};\n\n/* Auto initialization of one or more instances of lazyload, depending on the \n    options passed in (plain object or an array) */\nfunction autoInitialize(classObj, options) {\n\tif (!options) {\n\t\treturn;\n\t}\n\tif (!options.length) {\n\t\t// Plain object\n\t\tcreateInstance(classObj, options);\n\t} else {\n\t\t// Array of objects\n\t\tfor (let i = 0, optionsItem; (optionsItem = options[i]); i += 1) {\n\t\t\tcreateInstance(classObj, optionsItem);\n\t\t}\n\t}\n}\n\nconst setSourcesInChildren = function(\n\tparentTag,\n\tattrName,\n\tdataAttrName,\n\ttoWebpFlag\n) {\n\tfor (let i = 0, childTag; (childTag = parentTag.children[i]); i += 1) {\n\t\tif (childTag.tagName === \"SOURCE\") {\n\t\t\tlet attrValue = getData(childTag, dataAttrName);\n\t\t\tsetAttributeIfValue(childTag, attrName, attrValue, toWebpFlag);\n\t\t}\n\t}\n};\n\nconst setAttributeIfValue = function(\n\telement,\n\tattrName,\n\tvalue,\n\ttoWebpFlag\n) {\n\tif (!value) {\n\t\treturn;\n\t}\n\telement.setAttribute(attrName, replaceExtToWebp(value, toWebpFlag));\n};\n\nconst setSourcesImg = (element, settings) => {\n\tconst toWebpFlag = supportsWebp && settings.to_webp;\n\tconst srcsetDataName = settings.data_srcset;\n\tconst parent = element.parentNode;\n\n\tif (parent && parent.tagName === \"PICTURE\") {\n\t\tsetSourcesInChildren(parent, \"srcset\", srcsetDataName, toWebpFlag);\n\t}\n\tconst sizesDataValue = getData(element, settings.data_sizes);\n\tsetAttributeIfValue(element, \"sizes\", sizesDataValue);\n\tconst srcsetDataValue = getData(element, srcsetDataName);\n\tsetAttributeIfValue(element, \"srcset\", srcsetDataValue, toWebpFlag);\n\tconst srcDataValue = getData(element, settings.data_src);\n\tsetAttributeIfValue(element, \"src\", srcDataValue, toWebpFlag);\n};\n\nconst setSourcesIframe = (element, settings) => {\n\tconst srcDataValue = getData(element, settings.data_src);\n\n\tsetAttributeIfValue(element, \"src\", srcDataValue);\n};\n\nconst setSourcesVideo = (element, settings) => {\n\tconst srcDataName = settings.data_src;\n\tconst srcDataValue = getData(element, srcDataName);\n\n\tsetSourcesInChildren(element, \"src\", srcDataName);\n\tsetAttributeIfValue(element, \"src\", srcDataValue);\n\telement.load();\n};\n\nconst setSourcesBgImage = (element, settings) => {\n\tconst toWebpFlag = supportsWebp && settings.to_webp;\n\tconst srcDataValue = getData(element, settings.data_src);\n\tconst bgDataValue = getData(element, settings.data_bg);\n\n\tif (srcDataValue) {\n\t\tlet setValue = replaceExtToWebp(srcDataValue, toWebpFlag);\n\t\telement.style.backgroundImage = `url(\"${setValue}\")`;\n\t}\n\n\tif (bgDataValue) {\n\t\tlet setValue = replaceExtToWebp(bgDataValue, toWebpFlag);\n\t\telement.style.backgroundImage = setValue;\n\t}\n};\n\nconst setSourcesFunctions = {\n\tIMG: setSourcesImg,\n\tIFRAME: setSourcesIframe,\n\tVIDEO: setSourcesVideo\n};\n\nconst setSources = (element, instance) => {\n\tconst settings = instance._settings;\n\tconst tagName = element.tagName;\n\tconst setSourcesFunction = setSourcesFunctions[tagName];\n\tif (setSourcesFunction) {\n\t\tsetSourcesFunction(element, settings);\n\t\tinstance._updateLoadingCount(1);\n\t\tinstance._elements = purgeOneElement(instance._elements, element);\n\t\treturn;\n\t}\n\tsetSourcesBgImage(element, settings);\n};\n\nconst addClass = (element, className) => {\n\tif (supportsClassList) {\n\t\telement.classList.add(className);\n\t\treturn;\n\t}\n\telement.className += (element.className ? \" \" : \"\") + className;\n};\n\nconst removeClass = (element, className) => {\n\tif (supportsClassList) {\n\t\telement.classList.remove(className);\n\t\treturn;\n\t}\n\telement.className = element.className.\n\t\treplace(new RegExp(\"(^|\\\\s+)\" + className + \"(\\\\s+|$)\"), \" \").\n\t\treplace(/^\\s+/, \"\").\n\t\treplace(/\\s+$/, \"\");\n};\n\nconst callbackIfSet = (callback, argument) => {\n\tif (callback) {\n\t\tcallback(argument);\n\t}\n};\n\nconst genericLoadEventName = \"load\";\nconst mediaLoadEventName = \"loadeddata\";\nconst errorEventName = \"error\";\n\nconst addEventListener = (element, eventName, handler) => {\n\telement.addEventListener(eventName, handler);\n};\n\nconst removeEventListener = (element, eventName, handler) => {\n\telement.removeEventListener(eventName, handler);\n};\n\nconst addEventListeners = (element, loadHandler, errorHandler) => {\n\taddEventListener(element, genericLoadEventName, loadHandler);\n\taddEventListener(element, mediaLoadEventName, loadHandler);\n\taddEventListener(element, errorEventName, errorHandler);\n};\n\nconst removeEventListeners = (element, loadHandler, errorHandler) => {\n\tremoveEventListener(element, genericLoadEventName, loadHandler);\n\tremoveEventListener(element, mediaLoadEventName, loadHandler);\n\tremoveEventListener(element, errorEventName, errorHandler);\n};\n\nconst eventHandler = function(event, success, instance) {\n\tvar settings = instance._settings;\n\tconst className = success ? settings.class_loaded : settings.class_error;\n\tconst callback = success ? settings.callback_load : settings.callback_error;\n\tconst element = event.target;\n\n\tremoveClass(element, settings.class_loading);\n\taddClass(element, className);\n\tcallbackIfSet(callback, element);\n\n\tinstance._updateLoadingCount(-1);\n};\n\nconst addOneShotEventListeners = (element, instance) => {\n\tconst loadHandler = event => {\n\t\teventHandler(event, true, instance);\n\t\tremoveEventListeners(element, loadHandler, errorHandler);\n\t};\n\tconst errorHandler = event => {\n\t\teventHandler(event, false, instance);\n\t\tremoveEventListeners(element, loadHandler, errorHandler);\n\t};\n\taddEventListeners(element, loadHandler, errorHandler);\n};\n\nconst managedTags = [\"IMG\", \"IFRAME\", \"VIDEO\"];\n\nconst loadAndUnobserve = (element, observer, instance) => {\n\trevealElement(element, instance);\n\tobserver.unobserve(element);\n};\n\nconst cancelDelayLoad = element => {\n\tvar timeoutId = getTimeoutData(element);\n\tif (!timeoutId) {\n\t\treturn; // do nothing if timeout doesn't exist\n\t}\n\tclearTimeout(timeoutId);\n\tsetTimeoutData(element, null);\n};\n\nconst delayLoad = (element, observer, instance) => {\n\tvar loadDelay = instance._settings.load_delay;\n\tvar timeoutId = getTimeoutData(element);\n\tif (timeoutId) {\n\t\treturn; // do nothing if timeout already set\n\t}\n\ttimeoutId = setTimeout(function() {\n\t\tloadAndUnobserve(element, observer, instance);\n\t\tcancelDelayLoad(element);\n\t}, loadDelay);\n\tsetTimeoutData(element, timeoutId);\n};\n\nfunction revealElement(element, instance, force) {\n\tvar settings = instance._settings;\n\tif (!force && getWasProcessedData(element)) {\n\t\treturn; // element has already been processed and force wasn't true\n\t}\n\tcallbackIfSet(settings.callback_enter, element);\n\tif (managedTags.indexOf(element.tagName) > -1) {\n\t\taddOneShotEventListeners(element, instance);\n\t\taddClass(element, settings.class_loading);\n\t}\n\tsetSources(element, instance);\n\tsetWasProcessedData(element);\n\tcallbackIfSet(settings.callback_set, element);\n}\n\n/* entry.isIntersecting needs fallback because is null on some versions of MS Edge, and\n   entry.intersectionRatio is not enough alone because it could be 0 on some intersecting elements */\nconst isIntersecting = entry =>\n\tentry.isIntersecting || entry.intersectionRatio > 0;\n\nconst getObserverSettings = settings => ({\n\troot: settings.container === document ? null : settings.container,\n\trootMargin: settings.thresholds || settings.threshold + \"px\"\n});\n\nconst LazyLoad = function(customSettings, elements) {\n\tthis._settings = getInstanceSettings(customSettings);\n\tthis._setObserver();\n\tthis._loadingCount = 0;\n\tthis.update(elements);\n};\n\nLazyLoad.prototype = {\n\t_manageIntersection: function(entry) {\n\t\tvar observer = this._observer;\n\t\tvar loadDelay = this._settings.load_delay;\n\t\tvar element = entry.target;\n\n\t\t// WITHOUT LOAD DELAY\n\t\tif (!loadDelay) {\n\t\t\tif (isIntersecting(entry)) {\n\t\t\t\tloadAndUnobserve(element, observer, this);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\t// WITH LOAD DELAY\n\t\tif (isIntersecting(entry)) {\n\t\t\tdelayLoad(element, observer, this);\n\t\t} else {\n\t\t\tcancelDelayLoad(element);\n\t\t}\n\t},\n\n\t_onIntersection: function(entries) {\n\t\tentries.forEach(this._manageIntersection.bind(this));\n\t},\n\n\t_setObserver: function() {\n\t\tif (!supportsIntersectionObserver) {\n\t\t\treturn;\n\t\t}\n\t\tthis._observer = new IntersectionObserver(\n\t\t\tthis._onIntersection.bind(this),\n\t\t\tgetObserverSettings(this._settings)\n\t\t);\n\t},\n\n\t_updateLoadingCount: function(plusMinus) {\n\t\tthis._loadingCount += plusMinus;\n\t\tif (this._elements.length === 0 && this._loadingCount === 0) {\n\t\t\tcallbackIfSet(this._settings.callback_finish);\n\t\t}\n\t},\n\n\tupdate: function(elements) {\n\t\tconst settings = this._settings;\n\t\tconst nodeSet =\n\t\t\telements ||\n\t\t\tsettings.container.querySelectorAll(settings.elements_selector);\n\n\t\tthis._elements = purgeProcessedElements(\n\t\t\tArray.prototype.slice.call(nodeSet) // NOTE: nodeset to array for IE compatibility\n\t\t);\n\n\t\tif (isBot || !this._observer) {\n\t\t\tthis.loadAll();\n\t\t\treturn;\n\t\t}\n\n\t\tthis._elements.forEach(element => {\n\t\t\tthis._observer.observe(element);\n\t\t});\n\t},\n\n\tdestroy: function() {\n\t\tif (this._observer) {\n\t\t\tthis._elements.forEach(element => {\n\t\t\t\tthis._observer.unobserve(element);\n\t\t\t});\n\t\t\tthis._observer = null;\n\t\t}\n\t\tthis._elements = null;\n\t\tthis._settings = null;\n\t},\n\n\tload: function(element, force) {\n\t\trevealElement(element, this, force);\n\t},\n\n\tloadAll: function() {\n\t\tvar elements = this._elements;\n\t\telements.forEach(element => {\n\t\t\tthis.load(element);\n\t\t});\n\t}\n};\n\n/* Automatic instances creation if required (useful for async script loading) */\nif (runningOnBrowser) {\n\tautoInitialize(LazyLoad, window.lazyLoadOptions);\n}\n\nreturn LazyLoad;\n\n})));\n"]}