{"version":3,"file":"persist-migrate.min.js","sources":["../src/browser.js","../src/utils.js","../src/consts.js","../src/persist-migrate.js"],"sourcesContent":["const win = (typeof window !== `undefined` && window) || {};\n\nexport {win as window};\nexport const console = win.console;\nexport const document = win.document;\nexport const history = win.history;\nexport const localStorage = win.localStorage;\nexport const location = win.location;\nexport const sessionStorage = win.sessionStorage;\nexport const navigator = win.navigator;\nexport const parseFloat = win.parseFloat;\nexport const performance = win.performance;\n","import {navigator, parseFloat, performance} from \"./browser\";\nimport {CONST_PERSIST} from \"./consts\";\n\nconst userAgent = navigator ? navigator.userAgent : \"\";\n\nconst isNeeded = (function() {\n\tconst isIOS = (new RegExp(\"iPhone|iPad\", \"i\")).test(userAgent);\n\tconst isMacSafari = (new RegExp(\"Mac\", \"i\")).test(userAgent) &&\n\t\t!(new RegExp(\"Chrome\", \"i\")).test(userAgent) &&\n\t\t(new RegExp(\"Apple\", \"i\")).test(userAgent);\n\tconst isAndroid = (new RegExp(\"Android \", \"i\")).test(userAgent);\n\tconst isWebview = (new RegExp(\"wv; |inapp;\", \"i\")).test(userAgent);\n\tconst androidVersion = isAndroid ? parseFloat(new RegExp(\n\t\t\"(Android)\\\\s([\\\\d_\\\\.]+|\\\\d_0)\", \"i\"\n\t).exec(userAgent)[2]) : undefined;\n\n\treturn !(isIOS ||\n\t\t\tisMacSafari ||\n\t\t\t(isAndroid &&\n\t\t\t\t((androidVersion <= 4.3 && isWebview) || androidVersion < 3)));\n})();\n\n// In case of IE8, TYPE_BACK_FORWARD is undefined.\nfunction getNavigationType() {\n\treturn performance && performance.navigation &&\n\t\tperformance.navigation.type;\n}\nfunction getUrl() {\n\treturn location.href.split(\"#\")[0];\n}\nfunction getStorageKey(name) {\n\treturn name + CONST_PERSIST;\n}\n\nexport {\n\tgetUrl,\n\tgetStorageKey,\n\tgetNavigationType,\n\tisNeeded,\n};\n","import {performance} from \"./browser\";\n\nexport const CONST_PERSIST = \"___persist___\";\nexport const CONST_PERSIST_STATE = `state${CONST_PERSIST}`;\nexport const CONST_DEPTHS = \"depths\";\nexport const CONST_LAST_URL = \"lastUrl\";\nconst navigation = performance && performance.navigation;\n\nexport const TYPE_NAVIGATE = (navigation && navigation.TYPE_NAVIGATE) || 0;\nexport const TYPE_RELOAD = (navigation && navigation.TYPE_RELOAD) || 1;\nexport const TYPE_BACK_FORWARD = (navigation && navigation.TYPE_BACK_FORWARD) || 2;\n","/* eslint-disable */\nimport {window} from \"./browser\";\nimport { getStorageKey, getUrl } from \"./utils\";\n\nexport default (function(eg) {\n\tif (!eg || !eg.Persist) {\n\t\treturn;\n\t}\n\n\tvar GLOBAL_KEY = \"KEY___persist___\";\n\tvar oldConstructor = eg.Persist.prototype;\n\tvar isNeeded = eg.Persist.isNeeded;\n\tvar StorageManager = eg.Persist.StorageManager;\n\n\teg.Persist = function Persist(key, value) {\n\t\tconst urlKey = getStorageKey(getUrl());\n\t\t// when called as plain method\n\t\tif (!(this instanceof Persist)) {\n\t\t\tif (arguments.length === 0) {\n\t\t\t\treturn StorageManager.getStateByKey(urlKey, GLOBAL_KEY);\n\t\t\t}\n\n\t\t\tif (arguments.length === 1 && typeof key !== \"string\") {\n\t\t\t\tvar value_ = key;\n\n\t\t\t\tStorageManager.setStateByKey(urlKey, GLOBAL_KEY, value_);\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\tif (arguments.length === 2) {\n\t\t\t\tStorageManager.setStateByKey(urlKey, key, value);\n\t\t\t}\n\n\t\t\treturn StorageManager.getStateByKey(urlKey, key);\n\t\t}\n\n\t\t// when called as constructer\n\t\tthis.key = key;\n\t\treturn undefined;\n\t};\n\teg.Persist.isNeeded = isNeeded;\n\teg.Persist.prototype = oldConstructor;\n\treturn eg.Persist;\n})(window.eg);\n\n/* eslint-enable */\n"],"names":["isIOS","isMacSafari","isAndroid","isWebview","androidVersion","win","window","navigator","console","document","history","localStorage","location","sessionStorage","parseFloat","performance","navigation","userAgent","TYPE_NAVIGATE","TYPE_RELOAD","TYPE_BACK_FORWARD","RegExp","test","exec","undefined","eg","Persist","GLOBAL_KEY","oldConstructor","prototype","isNeeded","StorageManager","key","value","urlKey","href","split","this","arguments","length","getStateByKey","setStateByKey","value_"],"mappings":"sMAAA,ICMOA,EACAC,EAGAC,EACAC,EACAC,EDZDC,sBAAcC,QAA0BA,QAAW,GAS5CC,GANUF,EAAIG,QACHH,EAAII,SACLJ,EAAIK,QACCL,EAAIM,aACRN,EAAIO,SACEP,EAAIQ,eACTR,EAAIE,WAChBO,EAAaT,EAAIS,WACjBC,EAAcV,EAAIU,YELzBC,EAAaD,GAAeA,EAAYC,WDHxCC,GCKwBD,GAAcA,EAAWE,cAC3BF,GAAcA,EAAWG,YACnBH,GAAcA,EAAWI,kBDPzCb,EAAYA,EAAUU,UAAY,IAG7CjB,EAAS,IAAIqB,OAAO,cAAe,KAAMC,KAAKL,GAC9ChB,EAAe,IAAIoB,OAAO,MAAO,KAAMC,KAAKL,KAC/C,IAAII,OAAO,SAAU,KAAMC,KAAKL,IACjC,IAAII,OAAO,QAAS,KAAMC,KAAKL,GAC3Bf,EAAa,IAAImB,OAAO,WAAY,KAAMC,KAAKL,GAC/Cd,EAAa,IAAIkB,OAAO,cAAe,KAAMC,KAAKL,GAClDb,EAAiBF,EAAYY,EAAW,IAAIO,OACjD,iCAAkC,KACjCE,KAAKN,GAAW,SAAMO,SEVV,SAAUC,MACnBA,GAAOA,EAAGC,aAIXC,EAAa,mBACbC,EAAiBH,EAAGC,QAAQG,UAC5BC,EAAWL,EAAGC,QAAQI,SACtBC,EAAiBN,EAAGC,QAAQK,sBAEhCN,EAAGC,QAAU,SAASA,EAAQM,EAAKC,OAC5BC,EFaAtB,SAASuB,KAAKC,MAAM,KAAK,GC1BJ,mBCerBC,gBAAgBX,OAoBjBM,IAAMA,UAnBe,IAArBM,UAAUC,cACNR,EAAeS,cAAcN,EAAQP,MAGpB,IAArBW,UAAUC,QAA+B,iBAARP,SAOZ,IAArBM,UAAUC,QACbR,EAAeU,cAAcP,EAAQF,EAAKC,GAGpCF,EAAeS,cAAcN,EAAQF,OAVvCU,EAASV,EAEbD,EAAeU,cAAcP,EAAQP,EAAYe,KAepDjB,EAAGC,QAAQI,SAAWA,EACtBL,EAAGC,QAAQG,UAAYD,EAChBH,EAAGC,SAtCI,CAuCZpB,EAAOmB"}